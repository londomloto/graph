{"version":3,"sources":["poly.js","core.js","util.js","class.js","error.js","event.js","point.js","line.js","curve.js","bbox.js","path.js","matrix.js","vector.js","shape.js","tree.js","element.js","ellipse.js","circle.js","rect.js","polyline.js","polygon.js","group.js","text.js","image.js","paper.js","link.js","pallet.js","layout.js","router.js","directed.js","orthogonal.js","sweeplink.js","plugin.js","definer.js","reactor.js","transformer.js","animator.js","resizer.js","collector.js","dragger.js","dropper.js","sorter.js","network.js","history.js","panzoom.js","linker.js","toolmanager.js","pencil.js","editor.js","snapper.js","toolpad.js","start.js","final.js","action.js","fork.js","join.js","lane.js","pool.js","exporter.js","activity.js","diagram.js","dialog.js"],"names":["ascending","a","b","NaN","bisector","compare","left","x","lo","hi","arguments","length","mid","right","_","float","parseFloat","gcd","array","t","i","r","len","lcm","format","params","toArray","shift","replace","match","number","insert","index","Array","prototype","splice","apply","concat","move","from","to","size","k","push","undefined","permute","permuter","isFunction","reduce","result","value","key","isArray","f","d","ascendingKey","isIE","na","global","navigator","ua","userAgent","toLowerCase","ie","indexOf","parseInt","substring","GLOBAL","window","Math","self","Function","DOCUMENT","document","NAVIGATOR","location","CACHE_SIZE","MEMO_SIZE","readyFn","Graph","ready","VERSION","AUTHOR","cached","config","base","locale","svg","version","xmlns","xlink","html","font","family","line","setup","name","isPlainObject","extend","string","ID_VECTOR","ID_SHAPE","ID_LINK","ID_PORT","styles","VECTOR","PAPER","VIEWPORT","SHAPE","SHAPE_BLOCK","SHAPE_LABEL","SHAPE_HEADER","SHAPE_CHILD","SHAPE_DRAG","LINK_HEAD","LINK_TAIL","icons","ZOOM_IN","ZOOM_OUT","ZOOM_RESET","SHAPE_LANE","SHAPE_LINK","SHAPE_ACTION","SHAPE_ROUTER","LANE_ABOVE","LANE_BELOW","CONFIG","LINK","TRASH","SEND_TO_BACK","SEND_TO_FRONT","MOVE_UP","MOVE_DOWN","doc","isHTML","obj","HTMLElement","isSVG","SVGElement","isElement","dom","Element","isMac","test","platform","ns","namespace","lookup","clazz","current","parts","split","parent","uuid","c","random","v","toString","hash","str","chr","charCodeAt","create","superclass","props","factory","args","bind","expand","target","source","scope","tproto","constructor","sproto","defaultTo","forOwn","isUndefined","lang","Class","mixin","this","group","token","credit","join","remove","debounce","memoize","func","memo","param","cache","saved","ii","defer","$","Deferred","when","paper","width","height","options","Paper","type","capitalize","shape","names","chunk","lastIndexOf","substr","layout","router","link","plugin","proto","diagram","console","log","pallet","topic","subscribers","publish","message","subs","lsnr","forEach","handler","call","subscribe","unsub","h","s","sub","unsubscribe","find","u","graphConfig","on","e","vector","data","registry","get","guid","evt","timer","removeEventListener","readyState","loaded","inspect","delay","clearTimeout","addEventListener","REGEX_PATH_STR","REGEX_PATH_VAL","REGEX_PATH_CMD","REGEX_POLY_STR","REGEX_TRAN_STR","REGEX_TRAN_SUB","CONVEX_RADIUS","SMOOTH_RADIUS","LEGENDRE_N","LEGENDRE_T","LEGENDRE_C","util","deg","rad","round","PI","angle","dx","dy","y","atan2","theta","toFixed","taxicab","hypo","va","vb","sqrt","sign","num","quadrant","gradient","Infinity","snapValue","snaps","range","abs","rem","pointbox","padding","x1","y1","x2","y2","pointAlign","treshold","pointDistance","isPointEquals","isPointOnLine","p","det","dis","polar2point","distance","radian","origin","point","cos","sin","isBoxContainsPoint","box","isBoxIntersect","fn","boxOrientation","box1","box2","top","rgt","btm","lft","ver","hor","midpoint","movepoint","tr","lineBendpoints","dir","xm","ym","points","lineIntersection","x3","y3","x4","y4","max","min","nx","ny","denominator","px","py","px2","py2","perpendicular","m1","m2","tt","hp","atan","mx","my","iy","points2path","segments","map","cmd","segments2path","path2points","command","path2segments","sizes","l","m","q","z","cloneDeep","val","polygon2dots","$0","polygon2path","dots","transform2segments","valid","matrix","translate","rotate","scale","skewX","skewY","transform","matches","curvebox","x0","y0","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","j","jlen","curveLength","sum","ct","xb","curvePolynom","yb","co","n1","n2","n3","n4","curveInterval","step","pointAtInterval","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","t13","pow","t12","t3","ax","ay","cx","cy","alpha","n","start","end","curveIntersection","count","bon1","bon2","nres","ares","l1","l2","dots1","dots2","xy","di","di1","dj","dj1","ci","cj","is","convexSegment","prev","next","radius","d1","d2","cp","c1","c2","dr","smoothSegment","initializing","defaults","$super","Object","init","prop","me","listeners","classdef","superdef","inherits","assign","once","o","part","fire","orig","one","off","rgex","slice","RegExp","escapeRegExp","event","isString","Event","originalData","originalType","publisher","onces","Err","Error","err","stack","error","isError","Evt","cancelBubble","defaultPrevented","propagationStopped","immediatePropagationStopped","stopPropagation","stopImmediatePropagation","preventDefault","isEvent","ESC","ENTER","DELETE","SHIFT","fix","original","originalEvent","position","clientX","clientY","relative","clone","invert","isPrimaryButton","button","hasPrimaryModifier","metaKey","ctrlKey","hasSecondaryModifier","shiftKey","jQuery","snap","Point","tmp","trim","toNumber","manhattan","toJson","triangle","difference","alignment","bbox","bearing","Line","bear","dec","equals","rd","si","rx","ry","polar","adhereToBox","contains","stringify","sep","toValue","isPoint","lat1","lat2","lon1","lon2","deltaLon","intersect","intersection","isLine","Curve","unshift","pointAt","json","curve","intersectnum","isCurve","BBox","pathinfo","Path","simple","center","corner","dot","contain","isVector","vertices","isBBox","dw","dh","tbox","bdat","tdat","sideNearestPoint","tx","ty","tw","th","distToLeft","distToRight","distToTop","distToBottom","closest","side","pointNearestPoint","fixsegment","segment","attr","tq","T","Q","qx","qy","X","Y","arc2curve","bx","by","quad2curve","line2curve","cat2bezier","def","_13","_23","large_arc_flag","sweep_flag","recursive","_120","res","f1","f2","rx2","ry2","asin","df","f2old","x2old","y2old","s1","s2","tan","hx","hy","m3","m4","path1","path2","x1m","y1m","x2m","y2m","bz1","bz2","cv1","cv2","sj","inter","ss1","ln1","ss2","ln2","kk","segment1","segment2","bezier1","bezier2","isPath","absolute","seg","itm","toUpperCase","toUpper","jj","pop","ll","head","tail","toLower","fixarc","pi","com","curve2curve","fixarc2","com1","com2","p1","p2","fixmove2","segments1","segments2","a1","a2","attrs2","pcom","fixArc2","xmin","ymin","xmax","ymax","lengthAt","ps","segmentAt","total","sp","path","vs","addVertext","vertext","isSimple","vx","vy","nearest","best","bestlen","currpoint","currdist","tolerance","bestdist","prevlen","nextlen","prevdist","nextdist","moveTo","lineTo","append","maxs","Matrix","multiply","isMatrix","delta","sx","sy","determinant","radSkewX","cosSkewX","sinSkewX","scaleX","scaleY","toFilter","Collection","collection","items","item","first","last","clear","modify","each","iteratee","Vector","vectors","has","id","not","filter","offset","pull","reverse","methods","method","Shape","shapes","Tree","nodes","node","bisect","keygen","order","sort","root","cascade","bubble","domParser","REGEX_SVG_BUILDER","selector","context","query","fragment","element","DOMParser","parseFromString","documentElement","childNodes","deep","cloneNode","E","pseudo","belong","setAttributeNS","setAttribute","outerHeight","margin","show","hide","css","addClass","classes","values","chain","className","baseVal","uniq","removeClass","hasClass","prepend","appendTo","prependTo","before","after","detach","types","trigger","text","focus","contextmenu","state","empty","scrollTop","scrollLeft","child","children","curr","parentNode","nodeName","getBoundingClientRect","tree","container","traversable","selectable","focusable","snappable","selected","rendered","attrs","style","class","plugins","transformer","collector","definer","animator","resizer","reactor","dragger","dropper","network","history","sorter","panzoom","toolmgr","toolpad","snapper","editor","utils","graph","originalBBox","elem","createElementNS","Transformer","onTransformTranslate","onTransformRotate","onTransformScale","isPaper","ToolManager","onActivateTool","onDeactivateTool","register","globalMatrix","native","getCTM","refresh","reset","removeAttr","dirty","invalidate","interactable","Reactor","animable","Animator","animstart","animating","animend","resizable","Resizer","resize","onResizerResize","draggable","Dragger","dragstart","onDraggerStart","dragmove","onDraggerMove","dragend","onDraggerEnd","zoomable","Panzoom","droppable","Dropper","dropenter","onDropperEnter","dropleave","onDropperLeave","sortable","Sorter","connectable","Network","clickable","editable","Editor","beforeedit","edit","isBoolean","enabled","removeAttribute","cursor","predicate","added","removed","removal","pullAll","ma","pa","dt","dimension","getBBox","clientLeft","clientTop","clientWidth","clientHeight","bottom","nbox","pbox","elems","render","sibling","viewport","isViewport","setContext","attach","isContainer","isRendered","isTraversable","ancestors","descendants","lasso","decollect","destroy","unregister","select","batch","resume","deselect","suspend","animate","duration","easing","callback","label","sendToFront","sendToBack","isGroup","isSelectable","isDraggable","isResizable","isConnectable","isSnappable","tool","syncDragStart","syncDragMove","syncDragEnd","Ellipse","gx","gy","commit","bb","magnify","Circle","ar","Rect","origpath","w","ms","mr","ro","ox","oy","Polyline","Polygon","Group","stroke","stroke-width","fill","Text","text-anchor","lineHeight","fontSize","rows","font-size","write","onTextRender","addSpan","span","arrange","wrap","word","words","lines","lineNo","getComputedTextLength","textBox","targetBox","Image","preserveAspectRatio","src","xlink:href","align","aspect","showOrigin","components","drawing","pallets","xmlns:link","overflow","initLayout","Collector","linker","Linker","pencil","Pencil","Definer","Snapper","Toolpad","onPointerDown","onKeynavDown","onKeynavUp","listenLinkUpdate","listenLinkRemove","listenShapeDraw","vp","flush","activate","selections","removeSelection","connect","isShape","provider","createRouter","createLink","addPallet","removePallet","parse","links","save","alert","keyCode","saveAsImage","filename","exporter","Exporter","exportPNG","saveAsBlob","exportBlob","arrangeLinks","arrangeShapes","ellipse","circle","rect","polyline","polygon","image","arg","storage","Registry","keys","tagName","collect","wipe","pid","hasOwnProperty","Layout","fit","view","smooth","smootness","grabVector","grabLink","grabLocation","dragSnapping","mode","convex","idx","sweeper","Sweeplink","findConvex","updateConvex","removeConvex","Router","domain","waypoints","bendpoints","bending","route","repair","component","port","relocate","initTrans","updateTrans","trans","connecting","stopTrans","portCentering","axis","porting","routes","cable","sortIntersection","isRepairable","getSegmentIndex","sortBy","floor","getClosestIntersect","repairBendpoint","bend","oldport","newport","repairRoutes","bound1","bound2","clonedRoutes","tidyRoutes","Directed","space","srcnet","srcbox","sbound","tarnet","tarbox","tbound","orient","orientation","direct","direction","tuneup","sdot","edot","maxlen","sourcePath","targetPath","rangeStart","rangeEnd","segmentStart","segmentEnd","oldSource","oldTarget","align1","align2","cropBinding","srcport","tarport","cropped","cropConnect","changed","Orthogonal","bends","repaired","ranges","sourceBox","snapH","snapV","sourceBound","targetBound","segmentAlign","q1","q2","newStart","newEnd","sourceOrient","targetOrient","dotlen","newRangeStart","cropBending","getHandler","resource","Link","labelDistance","labelX","labelY","connected","block","coat","controls","handlers","metadata","icon","initComponent","initMetadata","bindResource","onRouterRoute","onRouterReroute","comp","ghost","manual","batchSync","onCoatClick","onCoatSelect","onCoatDeselect","onCoatDragStart","onCoatDragEnd","onCoatEdit","onCoatBeforeEdit","onCoatRemove","onLabelRender","onLabelDragend","labelVendor","vendor","onLabelDoubletap","tools","title","onFrontToolClick","onBackToolClick","onTrashToolClick","unbindResource","existing","bindSource","bindTarget","unbindSource","unbindTarget","addLink","disconnect","update","silent","redraw","bound","isNull","resumeControl","suspendControl","renderControl","removeLink","near","startEdit","onSourceRotate","onSourceDragstart","onSourceDragmove","onSourceDragend","onSourceResize","onTargetRotate","onTargetDragstart","onTargetDragmove","onTargetDragend","onTargetResize","linkid","control","onControlStart","onControlMove","onControlEnd","snaphor","snapver","conseg","ss","drag","createTree","findIndex","swap","KEY_TRESHOLD","SLOPE_TRESHOLD","queue","found","process","extract","indexA","indexB","minIndex","intercept","validate","lineA","lineB","alignA","alignB","ix","isOverlap","isIntersection","Plugin","activator","contextId","enable","disable","definitions","holder","defineArrowMarker","marker","vendors","navigationKeys","CTRL","interact","currentTarget","isNavigation","dropzone","gesturable","unset","actions","simulate","events","mat","act","inv","equalizeTransform","tt1","tt2","maxlength","emptyTransform","equal","stacks","keyframes","Animation","scenes","animation","100","frame","pause","stop","status","asize","scene","time","playing","applied","ssize","at","initstatus","Date","inverse","able","eq","semantic","timestamp","player","play","prog","anim","tick","paused","ease","played","repeat","g","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","frames","pickBy","times","linier","easeIn","easeOut","easeInOut","backIn","backOut","elastic","math","bounce","suspended","handleImage","handleSize","helper","handle","ow","oh","cw","ch","snapping","onHolderRender","ne","se","sw","nw","onHandleMoveStart","onHandleMove","onHandleMoveEnd","hs","hw","hh","rmatrix","oldcen","newcen","vdx","vdy","rubber","collecting","styleCursor","manualStart","onstart","onmove","onend","single","clearCollection","interaction","pointerIsDown","interacting","action","prepared","setEventXY","startCoords","pointers","except","syncdrag","tdx","tdy","inertia","grid","dragClass","rotation","scaling","onVectorRender","onDragStart","onDragMove","onDragEnd","onPointerMove","vbox","hbox","fixsnap","createSnapGrid","setOptions","targets","endOnly","resetSnap","edata","axs","edx","edy","pageX","pageY","ex","ey","overlap","accept","checker","onDropValidate","ondropactivate","onDropActivate","ondropdeactivate","onDropDeactivate","ondragenter","onDragEnter","ondragleave","onDragLeave","ondrop","onDrop","edrop","edrag","dropped","dropel","dragel","offsetTop","offsetLeft","sortables","origins","guests","sorting","drop","$sorter","appendchild","onItemAdded","prependchild","onSortActivate","onSortDeactivate","onSortEnter","onSortLeave","onSort","afterdrag","drage","pointe","$master","$sorting","resumeBatch","revert","ta","tb","orders","swaps","repos","sbox","suspendBatch","enroll","release","onItemRender","onItemResize","onItemDragStart","onItemDragEnd","onItemCollect","onItemDecollect","suppress","bsize","relatedTarget","CLS_CONNECT_VALID","CLS_CONNECT_INVALID","CLS_CONNECT_RESET","CLS_CONNECT_CLEAR","CLS_CONNECT_HOVER","wiring","linking","pole","cables","pairs","invalidateTrans","canConnect","refbox","isSource","isTarget","pair","conn","hasConnection","getConnection","connections","conns","opts","History","limit","lim","go","back","zoomRange","panEnabled","zoomEnabled","showToolbox","caching","scrolling","steps","zooming","zoom","toolbox","panning","moveHandler","stopHandler","onMouseWheel","revalidate","zoomReset","zoomIn","zoomOut","currentZoom","zoomType","factor","currentScale","matrixScale","onBeforeZoom","onZoom","scroll","onBeforeScroll","onScroll","vscroll","hscroll","deltaMode","deltaX","deltaY","altKey","onPointerStop","leading","trailing","pointer","visits","anchor","build","cropping","spath","scrop","tpath","tcrop","coord","crop","deactivateAll","deactivate","toggle","draw","coords","MIN_BOX_WIDTH","MIN_BOX_HEIGHT","OFFSET_TRESHOLD","editing","commitHandler","onDoubleTap","snapped","clients","stubx","stuby","client","clientId","dragStartHandler","dragEndHandler","removeHandler","osnaps","onClientDragStart","onClientDragEnd","onClientRemove","getClientCenter","showStub","hideStub","stub","diffx","diffy","snapx","snapy","pt","pad","onShapeSelect","onShapeDeselect","onLinkSelect","onLinkDeselect","onToolClick","meta","body","innerMatrix","outerMatrix","innerBBox","outerBBox","onConfigToolClick","onLinkToolClick","manager","addChild","removeChild","addChild_","removeChild_","srcmat","currentId","bbox1","bbox2","onLabelEdit","onSelect","onDeselect","onResize","onRemove","activity","Start","Final","inner","Action","Fork","Join","TRANSFER_RECEIVE","Lane","header","pool","transfer","initDropzone","onAboveToolClick","onBelowToolClick","onUpToolClick","onDownToolClick","Pool","startHandler","onTransferStart","onTransferEnd","bringToFront","maps","addSiblingAbove","createSpaceAbove","addSiblingBellow","createSpaceBellow","translateBy","resizeBy","moveUp","moveDown","shapeComp","lanes","lane","laneIndex","dx1","dx2","dy1","dy2","sets","laneNode","prevNode","laneBox","prevBox","nextNode","nextBox","encoded","encodeURIComponent","String","fromCharCode","decodeURIComponent","download","uri","msSaveOrOpenBlob","blob","createBlob","href","display","appendChild","click","open","byteString","atob","mimeString","buffer","ArrayBuffer","intArray","Uint8Array","Blob","exportImage","createDataURI","onload","canvas","createElement","getContext","background","fillStyle","fillRect","drawImage","toDataURL","encoder","compression","onerror","sty","xml","cloned","getElementStyles","innerHTML","insertBefore","XMLDOC","btoa","rules","rule","styleSheets","cssRules","selectorText","querySelector","cssText","exportDataURI","exportSVG","exportJPEG","Activity","template","onShapeClick","Diagram","desc","popup","Dialog","opened","backdrop","backdrop_click","buttons","onclick","close","backdropUser","margin-top","margin-left","dialog"],"mappings":"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","file":"graph.min.js","sourcesContent":["\r\n(function(){\r\n\r\n    /**\r\n     * Lodash polyfill\r\n     */\r\n\r\n    _.float = parseFloat;\r\n\r\n    _.gcd = function(array) {\r\n        if (array.length === 2) {\r\n            var a = array[0], b = array[1], t;\r\n\r\n            while (b > 0) {\r\n                t = b;\r\n                b = a % b;\r\n                a = t;\r\n            }\r\n\r\n            return a;\r\n        } else {\r\n            var r = array[0], len = array.length, i;\r\n            for (i = 1; i < len; i++) {\r\n                r = _.gcd([r, array[i]]);\r\n            }\r\n            return r;\r\n        }\r\n    };\r\n\r\n    _.lcm = function(array) {\r\n        if (array.length === 2) {\r\n            var a = array[0], b = array[1];\r\n            return a * (b / _.gcd([a, b]));\r\n        } else {\r\n            var r = array[0], len = array.length, i;\r\n            for (i = 1; i < len; i++) {\r\n                r = _.lcm([r, array[i]]);\r\n            }\r\n            return r;\r\n        }\r\n    };\r\n\r\n    _.format = function() {\r\n        var params = _.toArray(arguments),\r\n            format = params.shift();\r\n        return format.replace(/{(\\d+)}/g, function(match, number) {\r\n            return typeof params[number] != 'undefined'\r\n                ? params[number]\r\n                : match;\r\n        });\r\n    }\r\n\r\n    _.insert = function(array, index, insert) {\r\n        Array.prototype.splice.apply(array, [index, 0].concat(insert));\r\n        return array;\r\n    };\r\n\r\n    /**\r\n     * Array move (swap)\r\n     * http://stackoverflow.com/questions/5306680/move-an-array-element-from-one-array-position-to-another/5306832#5306832\r\n     */\r\n    _.move = function(array, from, to) {\r\n        var size = array.length;\r\n        \r\n        while(from < 0) {\r\n            from += size;\r\n        }\r\n        \r\n        while(to < 0) {\r\n            to += size;\r\n        }\r\n\r\n        if (to >= size) {\r\n            var k = to - size;\r\n            while((k--) + 1) {\r\n                array.push(undefined);\r\n            }\r\n        }\r\n\r\n        array.splice(to, 0, array.splice(from, 1)[0]);\r\n        return array;\r\n    };\r\n\r\n    /**\r\n     * Array permutation\r\n     * https://github.com/lodash/lodash/issues/1701\r\n     */\r\n    _.permute = function(array, permuter) {\r\n        if(_.isFunction(permuter)) {\r\n            return _.reduce(array, function(result, value, key){\r\n                result[permuter(key, value)] = value;\r\n                return result;\r\n            }, []);\r\n        } else if (_.isArray(permuter)) {\r\n            return _.reduce(permuter, function(result, value, key){\r\n                result[key] = array[permuter[key]];\r\n                return result;\r\n            }, []);\r\n        }\r\n        return array;\r\n    };  \r\n    \r\n    /**\r\n     *  Bisector\r\n     *  https://github.com/d3/d3-array/blob/master/src/bisector.js\r\n     */\r\n    function ascending(a, b) {\r\n        return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\r\n    }\r\n\r\n    function descending(a, b) {\r\n        return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\r\n    }\r\n\r\n    function bisector(compare) {\r\n        return {\r\n            left: function(a, x, lo, hi) {\r\n                if (arguments.length < 3) lo = 0;\r\n                if (arguments.length < 4) hi = a.length;\r\n                while (lo < hi) {\r\n                    var mid = lo + hi >>> 1;\r\n                    if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\r\n                }\r\n                return lo;\r\n            },\r\n            right: function(a, x, lo, hi) {\r\n                if (arguments.length < 3) lo = 0;\r\n                if (arguments.length < 4) hi = a.length;\r\n                while (lo < hi) {\r\n                    var mid = lo + hi >>> 1;\r\n                    if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\r\n                }\r\n                return lo;\r\n            }\r\n        };\r\n    }\r\n\r\n    _.bisector = function(f) {\r\n        return bisector(f.length === 1 ? function(d, x){\r\n            return ascending(f(d), x);\r\n        } : f);\r\n    };\r\n    \r\n    /** \r\n     *  Sorter\r\n     *  https://github.com/gka/d3-jetpack/blob/master/d3-jetpack.js\r\n     */\r\n    _.ascendingKey = function(key) {\r\n        return typeof key == 'function' ? function (a, b) {\r\n            return key(a) < key(b) ? -1 : key(a) > key(b) ? 1 : key(a) >= key(b) ? 0 : NaN;\r\n        } : function (a, b) {\r\n            return a[key] < b[key] ? -1 : a[key] > b[key] ? 1 : a[key] >= b[key] ? 0 : NaN;\r\n        };\r\n    };\r\n\r\n    _.isIE = function() {\r\n        var na = global.navigator,\r\n            ua = (na && na.userAgent || '').toLowerCase(),\r\n            ie = ua.indexOf('MSIE ');\r\n\r\n        if (ie > 0 || !!ua.match(/Trident.*rv\\:11\\./)) {\r\n            return parseInt(ua.substring(ie + 5, ua.indexOf('.', ie)));\r\n        }\r\n        return false;\r\n    };\r\n\r\n}());","\r\n//////////////////////////////////////////////////////////////////\r\n/*\r\n * Graph - SVG Library\r\n * Documentation visit: https://github.com/londomloto/graph\r\n *\r\n * @author londomloto <roso.sasongko@gmail.com>\r\n * @author londomloto <roso@kct.co.id>\r\n */\r\n//////////////////////////////////////////////////////////////////\r\n\r\n(function(){\r\n\r\n    var GLOBAL = typeof window != 'undefined' && \r\n                 window.Math == Math \r\n                    ? window \r\n                    : (typeof self != 'undefined' && self.Math == Math \r\n                        ? self \r\n                        : Function('return this')());\r\n\r\n    var DOCUMENT  = document;\r\n    var LOCATION  = location;\r\n    var NAVIGATOR = navigator;\r\n\r\n    /**\r\n     * Size for cached result\r\n     */\r\n    var CACHE_SIZE = 100;\r\n\r\n    /**\r\n     * Size for memoize function\r\n     */\r\n    var MEMO_SIZE = 1000;\r\n\r\n    //--------------------------------------------------------------------//\r\n    \r\n    var readyFn = [];\r\n\r\n    /**\r\n     * Banner\r\n     */\r\n    GLOBAL.Graph = function(ready) {\r\n        readyFn.push(ready);\r\n    };\r\n\r\n    Graph.VERSION = '1.0.0';\r\n    \r\n    Graph.AUTHOR = 'Kreasindo Cipta Teknologi';\r\n    \r\n    /**\r\n     * Config\r\n     */\r\n    Graph.cached = {};\r\n\r\n    Graph.config = {\r\n        base: '../',\r\n        locale: 'id',\r\n        svg: {\r\n            version: '1.1'\r\n        },\r\n        xmlns: {\r\n            svg: 'http://www.w3.org/2000/svg',\r\n            xlink: 'http://www.w3.org/1999/xlink',\r\n            html: 'http://www.w3.org/1999/xhtml'\r\n        },\r\n        font: {\r\n            family: 'Segoe UI',\r\n            size: '12px',\r\n            line: 1\r\n        }\r\n    };\r\n\r\n    Graph.setup = function(name, value) {\r\n        if (_.isPlainObject(name)) {\r\n            _.extend(Graph.config, name);\r\n        } else {\r\n            Graph.config[name] = value;\r\n        }\r\n    };\r\n\r\n    // Graph.toString = function() {\r\n    //     return 'SVG Library presented by ' + Graph.AUTHOR;\r\n    // }\r\n    \r\n\r\n    /**\r\n     * String params\r\n     */\r\n    Graph.string = {\r\n        ID_VECTOR: 'graph-vector-id',\r\n        ID_SHAPE: 'graph-shape-id',\r\n        ID_LINK: 'graph-link-id',\r\n        ID_PORT: 'graph-port-id'\r\n    };\r\n\r\n    /**\r\n     * Style params\r\n     */\r\n    Graph.styles = {\r\n        VECTOR: 'graph-elem',\r\n        PAPER: 'graph-paper',\r\n        VIEWPORT: 'graph-viewport',\r\n\r\n        SHAPE: 'graph-shape',\r\n        SHAPE_BLOCK: 'comp-block',\r\n        SHAPE_LABEL: 'comp-label',\r\n        SHAPE_HEADER: 'comp-header',\r\n        SHAPE_CHILD: 'comp-child',\r\n        SHAPE_DRAG: 'shape-draggable',\r\n\r\n        LINK_HEAD: 'graph-link-head',\r\n        LINK_TAIL: 'graph-link-tail'\r\n    };\r\n\r\n    /**\r\n     * Icon params\r\n     */\r\n    Graph.icons = {\r\n        ZOOM_IN: 'ion-android-add',\r\n        ZOOM_OUT: 'ion-android-remove',\r\n        ZOOM_RESET: 'ion-pinpoint',\r\n\r\n        SHAPE: 'bpmn-icon-start-event-none',\r\n        SHAPE_LANE: 'bpmn-icon-participant',\r\n        SHAPE_LINK: 'ion-ios-shuffle-strong',\r\n        SHAPE_ACTION: 'bpmn-icon-task',\r\n        SHAPE_ROUTER: 'bpmn-icon-gateway-none',\r\n\r\n        LANE_ABOVE: 'bpmn-icon-lane-insert-above',\r\n        LANE_BELOW: 'bpmn-icon-lane-insert-below',\r\n\r\n        CONFIG: 'bpmn-icon-screw-wrench',\r\n        LINK: 'bpmn-icon-connection-multi',\r\n        TRASH: 'bpmn-icon-trash',\r\n\r\n        SEND_TO_BACK: 'font-icon-send-back',\r\n        SEND_TO_FRONT: 'font-icon-bring-front',\r\n\r\n        MOVE_UP: 'ion-android-arrow-up',\r\n        MOVE_DOWN: 'ion-android-arrow-down'\r\n    };\r\n\r\n    Graph.doc = function() {\r\n        \r\n    };\r\n\r\n    Graph.global = function() {\r\n        \r\n    };  \r\n\r\n    /**\r\n     * Language & Core helper\r\n     */\r\n    \r\n    Graph.isHTML = function(obj) {\r\n        return obj instanceof HTMLElement;\r\n    };\r\n\r\n    Graph.isSVG = function(obj) {\r\n        return obj instanceof SVGElement;\r\n    };\r\n\r\n    Graph.isElement = function(obj) {\r\n        return obj instanceof Graph.dom.Element;\r\n    };\r\n\r\n    Graph.isMac = function() {\r\n        return (/mac/i).test(NAVIGATOR.platform);    \r\n    };\r\n\r\n    Graph.ns = function(namespace) {\r\n        var cached = Graph.lookup('Graph', 'ns', namespace);\r\n\r\n        if (cached.clazz) {\r\n            return cached.clazz;\r\n        }\r\n\r\n        var parts = _.split(namespace, '.'),\r\n            parent = GLOBAL,\r\n            len = parts.length,\r\n            current,\r\n            i;\r\n\r\n        for (i = 0; i < len; i++) {\r\n            current = parts[i];\r\n            parent[current] = parent[current] || {};\r\n            parent = parent[current];\r\n        }\r\n\r\n        if (_.isFunction(parent)) {\r\n            cached.clazz = parent;\r\n        }\r\n\r\n        return parent;\r\n    };\r\n\r\n    Graph.uuid = function() {\r\n        // credit: http://stackoverflow.com/posts/2117523/revisions\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n            var r = Math.random() * 16|0;\r\n            var v = c == 'x' ? r : (r&0x3|0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Simple hashing\r\n     */\r\n    Graph.hash = function(str) {\r\n        var hash = 0, chr, len, i;\r\n        \r\n        if ( ! str.length) {\r\n            return hash;\r\n        }\r\n\r\n        for (i = 0, len = str.length; i < len; i++) {\r\n            chr   = str.charCodeAt(i);\r\n            hash  = ((hash << 5) - hash) + chr;\r\n            hash |= 0;\r\n        }\r\n\r\n        return hash;\r\n    };\r\n\r\n    // prepare for prototypal factory\r\n    Graph.create = function(superclass, props) {\r\n        \r\n    };\r\n\r\n    Graph.factory = function(clazz, args) {\r\n        args = [clazz].concat(args);\r\n        return new (Function.prototype.bind.apply(clazz, args));\r\n    };\r\n\r\n    Graph.expand = function(target, source, scope) {\r\n        var tproto = target.constructor.prototype,\r\n            sproto = source.constructor.prototype;\r\n\r\n        scope = _.defaultTo(source);\r\n\r\n        _.forOwn(sproto, function(value, key){\r\n            if (_.isFunction(value) && _.isUndefined(tproto[key])) {\r\n                (function(key, value){\r\n                    tproto[key] = _.bind(value, scope);\r\n                }(key, value));    \r\n            }\r\n        });\r\n    };\r\n\r\n    Graph.extend = function(clazz, props) {\r\n        if (_.isPlainObject(clazz)) {\r\n            props = clazz;\r\n            clazz = Graph.lang.Class;\r\n        }\r\n        return clazz.extend(props);\r\n    };\r\n\r\n    Graph.mixin = function(target, source) {\r\n        this.extend(target, source, target);\r\n    };\r\n\r\n    Graph.lookup = function(group, token) {\r\n        var args = _.toArray(arguments), cached, credit;\r\n\r\n        group  = args.shift();\r\n        token  = _.join(args, '|');\r\n        cached = Graph.cached[group] = Graph.cached[group] || {};\r\n        credit = group == 'Regex.event' ? null : CACHE_SIZE;\r\n\r\n        if (cached[token]) {\r\n            cached[token].credit = credit;\r\n        } else {\r\n            cached[token] = {\r\n                credit: credit,\r\n                remove: (function(group, token){\r\n                    return function() {\r\n                        delete Graph.cached[group][token];    \r\n                    };\r\n                }(group, token))\r\n            }\r\n        }\r\n\r\n        _.debounce(function(t){\r\n            _.forOwn(cached, function(v, k){\r\n                if (k != t) {\r\n                    if (cached[k].credit !== null) {\r\n                        cached[k].credit--;\r\n                        if (cached[k].credit <= 0) {\r\n                            delete cached[k];\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        })(token);\r\n\r\n        return cached[token];\r\n    };\r\n\r\n    Graph.memoize = function(func) {\r\n        return function memo() {\r\n            var param = _.toArray(arguments),\r\n                token = _.join(param, \"\\u2400\"),\r\n                cache = memo.cache = memo.cache || {},\r\n                saved = memo.saved = memo.saved || [];\r\n\r\n            if ( ! _.isUndefined(cache[token])) {\r\n                for (var i = 0, ii = saved.length; i < ii; i++) {\r\n                    if (saved[i] == token) {\r\n                        saved.push(saved.splice(i, 1)[0]);\r\n                        break;\r\n                    }\r\n                }\r\n                return cache[token];\r\n            }\r\n\r\n            if (saved.length >= MEMO_SIZE) {\r\n                delete cache[saved.shift()];\r\n            }\r\n\r\n            saved.push(token);\r\n            cache[token] = func.apply(this, param);\r\n\r\n            return cache[token];\r\n        }\r\n    };\r\n\r\n    Graph.defer = function() {\r\n        return $.Deferred();\r\n    };\r\n\r\n    Graph.when = $.when;\r\n\r\n    /**\r\n     * Vector\r\n     */\r\n    Graph.paper = function(width, height, options) {\r\n        return Graph.factory(Graph.svg.Paper, [width, height, options]);\r\n    };\r\n\r\n    Graph.svg = function(type) {\r\n        var args = _.toArray(arguments), svg;\r\n\r\n        type = args.shift();\r\n        svg = Graph.factory(Graph.svg[_.capitalize(type)], args);\r\n        args = null;\r\n        \r\n        return svg;\r\n    };\r\n\r\n    Graph.shape = function(names, options) {\r\n        var clazz, shape, chunk;\r\n\r\n        chunk = names.lastIndexOf('.');\r\n        names = names.substr(0, chunk) + '.' + _.capitalize(names.substr(chunk + 1));\r\n        clazz = Graph.ns('Graph.shape.' + names);\r\n        shape = Graph.factory(clazz, options);\r\n\r\n        chunk = names = clazz = null;\r\n        return shape;\r\n    };\r\n\r\n    /**\r\n     * Layout\r\n     */\r\n    Graph.layout = function(type) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Router\r\n     */\r\n    Graph.router = function(type) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Link / Connector\r\n     */\r\n    Graph.link = function(type) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Plugin\r\n     */\r\n    Graph.plugin = function(proto) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Diagram\r\n     */\r\n    Graph.diagram = function(name, options) {\r\n        var clazz, diagram;\r\n        clazz = Graph.diagram[_.capitalize(name)];\r\n        diagram = Graph.factory(clazz, [options]);\r\n        console.log(diagram);\r\n    };\r\n\r\n    /**\r\n     * Pallet\r\n     */\r\n    Graph.pallet = function(type, options) {\r\n        var clazz;\r\n        clazz = Graph.pallet[_.capitalize(type)];\r\n        return Graph.factory(clazz, [options]);\r\n    };\r\n    \r\n    /**\r\n     * Topic\r\n     */\r\n    Graph.topic = {\r\n        subscribers: {\r\n\r\n        },\r\n        publish: function(topic, message, scope) {\r\n            var subs = Graph.topic.subscribers,\r\n                lsnr = subs[topic] || [];\r\n\r\n            _.forEach(lsnr, function(handler){\r\n                (function(){\r\n                    handler.call(null, message, scope);\r\n                }(handler));\r\n            });\r\n        },\r\n\r\n        subscribe: function(topic, handler) {\r\n\r\n            if (_.isPlainObject(topic)) {\r\n                var unsub = [];\r\n\r\n                _.forOwn(topic, function(h, t){\r\n                    (function(t, h){\r\n                        var s = Graph.topic.subscribe(t, h);\r\n                        unsub.push({topic: t, sub: s});\r\n                    }(t, h));\r\n                });\r\n\r\n                return {\r\n                    unsubscribe: (function(unsub){\r\n                        return function(topic) {\r\n                            if (topic) {\r\n                                var f = _.find(unsub, function(u){\r\n                                    return u.topic == topic;\r\n                                });\r\n                                f && f.sub.unsubscribe();\r\n                            } else {\r\n                                _.forEach(unsub, function(u){\r\n                                    u.sub.unsubscribe();\r\n                                });\r\n                            }\r\n                        };\r\n                    }(unsub))\r\n                };\r\n            }\r\n\r\n            var subs = Graph.topic.subscribers, data;\r\n\r\n            subs[topic] = subs[topic] || [];\r\n            subs[topic].push(handler);\r\n\r\n            return {\r\n                unsubscribe: (function(topic, handler){\r\n                    return function() {\r\n                        Graph.topic.unsubscribe(topic, handler);\r\n                    };\r\n                }(topic, handler))\r\n            };\r\n        },\r\n\r\n        unsubscribe: function(topic, handler) {\r\n            var subs = Graph.topic.subscribers, \r\n                lsnr = subs[topic] || [];\r\n\r\n            for (var i = lsnr.length - 1; i >= 0; i--) {\r\n                if (lsnr[i] === handler) {\r\n                    lsnr.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ///////////////////////////// LOAD CONFIG /////////////////////////////\r\n    \r\n    if (GLOBAL.graphConfig) {\r\n        Graph.setup(GLOBAL.graphConfig);\r\n    }\r\n\r\n    ///////////////////////////// I18N /////////////////////////////\r\n    \r\n    Graph._ = function(message) {\r\n        return message;\r\n    };\r\n\r\n    /////////////////////////// CORE NAMESPACES ////////////////////////////\r\n    \r\n    Graph.ns('Graph.lang');\r\n    Graph.ns('Graph.collection');\r\n    Graph.ns('Graph.registry');\r\n    Graph.ns('Graph.data');\r\n    Graph.ns('Graph.popup');\r\n    Graph.ns('Graph.shape.activity');\r\n\r\n    ///////////////////////// HOOK DOCUMENT CLICK /////////////////////////\r\n    \r\n    Graph(function(){\r\n        var doc = $(DOCUMENT);\r\n\r\n        doc.on('mousedown', function(e){\r\n            var target = $(e.target),\r\n                vector = target.data(Graph.string.ID_VECTOR);\r\n\r\n            var paper;\r\n\r\n            if (vector) {\r\n                vector = Graph.registry.vector.get(vector);\r\n                paper = vector.paper();\r\n                Graph.cached.paper = paper ? paper.guid() : null;\r\n            } else {\r\n                Graph.cached.paper = null;\r\n            }\r\n\r\n            vector = paper = null;\r\n        });\r\n\r\n        doc = null;\r\n    });\r\n\r\n    ///////////////////////// LISTEN DOCUMENT READY ////////////////////////\r\n    \r\n    (function(doc, evt){\r\n        var timer;\r\n\r\n        var handler = function() {\r\n            doc.removeEventListener(evt, handler, false);\r\n            doc.readyState = 'complete';\r\n        };\r\n\r\n        var loaded = function() {\r\n            _.forEach(readyFn, function(f){\r\n                f();\r\n            });\r\n        };\r\n\r\n        var inspect = function() {\r\n            if (doc.readyState != 'complete') {\r\n                timer = _.delay(function(){\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n\r\n                    inspect();\r\n                }, 10);\r\n            } else {\r\n                loaded();\r\n            }\r\n        };\r\n\r\n        if (doc.readyState == null && doc.addEventListener) {\r\n            doc.addEventListener(evt, handler, false);\r\n            doc.readyState = 'loading';\r\n        }\r\n\r\n        inspect();\r\n        \r\n    }(DOCUMENT, 'DOMContentLoaded'));\r\n\r\n    ///////////////////////////////////////////////////////////////////////\r\n    \r\n}());","\r\n(function(){\r\n\r\n    var REGEX_PATH_STR = /([achlmrqstvz])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig;\r\n    var REGEX_PATH_VAL = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/ig;\r\n    var REGEX_PATH_CMD = /,?([achlmqrstvxz]),?/gi;\r\n    var REGEX_POLY_STR = /(\\-?[0-9.]+)\\s*,\\s*(\\-?[0-9.]+)/g;\r\n    var REGEX_TRAN_STR = /((matrix|translate|rotate|scale|skewX|skewY)*\\((\\-?\\d+\\.?\\d*e?\\-?\\d*[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+\\))+/g;\r\n    var REGEX_TRAN_SUB = /[\\w\\.\\-]+/g;\r\n    var REGEX_POLY_STR = /(\\-?[0-9.]+)\\s*,\\s*(\\-?[0-9.]+)/g;\r\n    \r\n    var CONVEX_RADIUS  = 10;\r\n    var SMOOTH_RADIUS  = 6;\r\n\r\n    /**\r\n     * Legendre Gauss (Quadratic Curve)\r\n     * https://pomax.github.io/bezierinfo/legendre-gauss.html\r\n     */\r\n    \r\n    var LEGENDRE_N = 12;\r\n    var LEGENDRE_T = [-0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873, -0.7699, 0.7699, -0.9041, 0.9041, -0.9816, 0.9816];\r\n    var LEGENDRE_C = [ 0.2491, 0.2491,  0.2335, 0.2335,  0.2032, 0.2032,  0.1601, 0.1601,  0.1069, 0.1069,  0.0472, 0.0472];\r\n    \r\n    Graph.util = {\r\n        \r\n        // --------MATH-------- //\r\n        \r\n        deg: function(rad) {\r\n            return Math.round ((rad * 180 / Math.PI % 360) * 1000) / 1000;\r\n        },  \r\n        \r\n        rad: function(deg) {\r\n            return deg % 360 * Math.PI / 180;\r\n        },\r\n        \r\n        angle: function(a, b) {\r\n            var dx = a.x - b.x,\r\n                dy = a.y - b.y;\r\n\r\n            if ( ! dx && ! dy) {\r\n                return 0;\r\n            }\r\n\r\n            return (180 + Math.atan2(-dy, -dx) * 180 / Math.PI + 360) % 360;\r\n        },\r\n\r\n        theta: function(a, b) {\r\n            var dy = -(b.y - a.y),\r\n                dx =   b.x - a.x;\r\n\r\n            var rad, deg;\r\n\r\n            if (dy.toFixed(10) == 0 && dx.toFixed(10) == 0) {\r\n                rad = 0;\r\n            } else {\r\n                rad = Math.atan2(dy, dx);\r\n            }\r\n\r\n            if (rad < 0) {\r\n                rad = 2 * Math.PI + rad;\r\n            }\r\n\r\n            deg = 180 * rad / Math.PI;\r\n            deg = (deg % 360) + (deg < 0 ? 360 : 0);\r\n\r\n            return deg;\r\n        },\r\n\r\n        taxicab: function(a, b) {\r\n            var dx = a.x - b.x,\r\n                dy = a.y - b.y;\r\n            return dx * dx + dy * dy;\r\n        },\r\n\r\n        /**\r\n         * Get vector hypotenuse (magnitude)\r\n         */\r\n        hypo: function(va, vb) {\r\n            return Math.sqrt(va * va + vb * vb);\r\n        },\r\n        \r\n        /**\r\n         * Get sign of number\r\n         */\r\n        sign: function(num) {\r\n            return num < 0 ? -1 : 1;\r\n        },\r\n            \r\n        quadrant: function(x, y) {\r\n            return x >= 0 && y >= 0 ? 1 : (x >= 0 && y < 0 ? 4 : (x < 0 && y < 0 ? 3 : 2));\r\n        },\r\n        \r\n        // slope\r\n        gradient: function(a, b) {\r\n            // parallel\r\n            if (b.x == a.x) {\r\n                return b.y > a.y ? Infinity : -Infinity\r\n            } else if (b.y == a.y) {\r\n                return b.x > a.x ? 0 : -0;\r\n            } else {\r\n                return (b.y - a.y) / (b.x - a.x);\r\n            }\r\n        },\r\n        \r\n        snapValue: function (value, snaps, range) {\r\n            range = _.defaultTo(range, 10);\r\n            \r\n            if (_.isArray(snaps)) {\r\n                var i = snaps.length;\r\n                while(i--) {\r\n                    if (Math.abs(snaps[i] - value) <= range) {\r\n                        return snaps[i];\r\n                    }\r\n                }\r\n            } else {\r\n                snaps = +snaps;\r\n                \r\n                var rem = value % snaps;\r\n                \r\n                if (rem < range) {\r\n                    return value - rem;\r\n                }\r\n                \r\n                if (rem > value - range) {\r\n                    return value - rem + snaps;\r\n                }\r\n            }\r\n            return value;\r\n        },\r\n        \r\n        // --------POINT-------- //\r\n        \r\n        pointbox: function(x, y, padding) {\r\n            if (_.isPlainObject(x)) {\r\n                padding = y;\r\n                y = x.y;\r\n                x = x.x;\r\n            }\r\n            \r\n            padding = padding || 0;\r\n            \r\n            var x1 = x - padding,\r\n                y1 = y - padding,\r\n                x2 = x + padding,\r\n                y2 = y + padding,\r\n                width = x2 - x1,\r\n                height = y2 - y1;\r\n            \r\n            return {\r\n                x: x1,\r\n                y: y1,\r\n                x2: x2,\r\n                y2: y2,\r\n                width: width,\r\n                height: height\r\n            };\r\n        },\r\n\r\n        pointAlign: function(a, b, treshold) {\r\n            if ( ! a || ! b) {\r\n                return false;\r\n            }\r\n            \r\n            treshold = treshold || 2;\r\n            \r\n            if (Math.abs(a.x - b.x) <= treshold) {\r\n                return 'h';\r\n            };\r\n\r\n            if (Math.abs(a.y - b.y) <= treshold) {\r\n                return 'v';\r\n            }\r\n\r\n            return false;\r\n        },\r\n        \r\n        pointDistance: function (a, b) {\r\n            if ( ! a || ! b) {\r\n                return -1;\r\n            }\r\n            return Graph.util.hypo((a.x - b.x), (a.y - b.y));\r\n        },\r\n        \r\n        isPointEquals: function (a, b) {\r\n            return a.x == b.x && a.y == b.y;\r\n        },\r\n        \r\n        // http://stackoverflow.com/a/907491/412190\r\n        isPointOnLine: function(a, b, p) {\r\n            if ( ! a || ! b || ! p) {\r\n                return false;\r\n            }\r\n            \r\n            var det = (b.x - a.x) * (p.y - a.y) - (b.y - a.y) * (p.x - a.x),\r\n                dis = Graph.util.pointDistance(a, b);\r\n            \r\n            return Math.abs(det / dis) < 2;\r\n        },\r\n        \r\n        polar2point: function(distance, radian, origin) {\r\n            var x, y, d;\r\n\r\n            if (_.isUndefined(origin)) {\r\n                origin = Graph.point(0, 0);\r\n            }\r\n\r\n            x = Math.abs(distance * Math.cos(radian));\r\n            y = Math.abs(distance * Math.sin(radian));\r\n            d = Graph.util.deg(radian);\r\n\r\n            if (d < 90) {\r\n                y = -y;\r\n            } else if (d < 180) {\r\n                x = -x;\r\n                y = -y;\r\n            } else if (d < 270) {\r\n                x = -x;\r\n            }\r\n\r\n            return Graph.point(origin.props.x + x, origin.props.y + y);\r\n        },\r\n        \r\n        // --------BOUNDING-------- //\r\n\r\n        isBoxContainsPoint: function(box, p) {\r\n            return p.x >= box.x && p.x <= box.x2 && p.y >= box.y && p.y <= box.y2;\r\n        },\r\n\r\n        isBoxIntersect: function(a, b) {\r\n            var fn = Graph.util.isBoxContainsPoint;\r\n\r\n            return fn(b, {x: a.x,  y: a.y})  ||\r\n                   fn(b, {x: a.x2, y: a.y})  || \r\n                   fn(b, {x: a.x,  y: a.y2}) || \r\n                   fn(b, {x: a.x2, y: a.y2}) || \r\n                   fn(a, {x: b.x,  y: b.y})  ||\r\n                   fn(a, {x: b.x2, y: b.y})  || \r\n                   fn(a, {x: b.x,  y: b.y2}) || \r\n                   fn(a, {x: b.x2, y: b.y2}) || \r\n                   (a.x < b.x2 && a.x > b.x  ||  b.x < a.x2 && b.x > a.x) && \r\n                   (a.y < b.y2 && a.y > b.y  ||  b.y < a.y2 && b.y > a.y);\r\n        },\r\n\r\n        boxOrientation: function(box1, box2, dx, dy) {\r\n            // treshold\r\n            dx = _.defaultTo(dx, 0);\r\n            dy = _.defaultTo(dy, dx);\r\n            \r\n            var top = box1.y2 + dy <= box2.y,\r\n                rgt = box1.x  - dx >= box2.x2,\r\n                btm = box1.y  - dy >= box2.y2,\r\n                lft = box1.x2 + dx <= box2.x;\r\n\r\n            var ver = top ? 'top' : (btm ? 'bottom' : null),\r\n                hor = lft ? 'left' : (rgt ? 'right' : null);\r\n\r\n            if (hor && ver) {\r\n                return ver + '-' + hor;\r\n            } else {\r\n                return hor || ver || 'intersect';\r\n            }\r\n        },\r\n        \r\n        // -------LINE------ //\r\n        \r\n        midpoint: function(a, b) {\r\n            return {\r\n                x: (a.x + b.x) / 2,\r\n                y: (a.y + b.y) / 2\r\n            };\r\n        },\r\n        \r\n        /** \r\n         * Move point `a` to `b` as far as distance \r\n         */\r\n        movepoint: function(a, b, distance) {\r\n            var tr =  Graph.util.rad(Graph.util.theta(b, a)),\r\n                dx =  Math.cos(tr) * distance,\r\n                dy = -Math.sin(tr) * distance;\r\n            \r\n            a.x += dx;\r\n            a.y += dy;\r\n            \r\n            return a;\r\n        },\r\n        \r\n        lineBendpoints: function(a, b, dir) {\r\n            var points = [],\r\n                x1 = a.x,\r\n                y1 = a.y,\r\n                x2 = b.x,\r\n                y2 = b.y;\r\n               \r\n            var xm, ym;\r\n            \r\n            dir = dir || 'h:h';\r\n            \r\n            if (dir == 'h:v') {\r\n                points = [\r\n                    { x: x2, y: y1 }\r\n                ];\r\n            } else if (dir == 'v:h') {\r\n                points = [\r\n                    { x: x1, y: y2 }\r\n                ];\r\n            } else if (dir == 'h:h') {\r\n                xm = Math.round((x2 - x1) / 2 + x1);\r\n                points = [\r\n                    { x: xm, y: y1 },\r\n                    { x: xm, y: y2 }\r\n                ];\r\n            } else if (dir == 'v:v') {\r\n                ym = Math.round((y2 - y1) / 2 + y1);\r\n                points = [\r\n                    { x: x1, y: ym },\r\n                    { x: x2, y: ym }\r\n                ];\r\n            } else {\r\n                points = [];\r\n            }\r\n            \r\n            return points;\r\n        },\r\n        \r\n        lineIntersection: function (x1, y1, x2, y2, x3, y3, x4, y4) {\r\n            if (\r\n                Math.max(x1, x2) < Math.min(x3, x4) ||\r\n                Math.min(x1, x2) > Math.max(x3, x4) ||\r\n                Math.max(y1, y2) < Math.min(y3, y4) ||\r\n                Math.min(y1, y2) > Math.max(y3, y4)\r\n            ) {\r\n                return null;\r\n            }\r\n\r\n            var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\r\n                ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\r\n                denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\r\n\r\n            if ( ! denominator) {\r\n                return null;\r\n            }\r\n\r\n            var px = nx / denominator,\r\n                py = ny / denominator,\r\n                px2 = +px.toFixed(2),\r\n                py2 = +py.toFixed(2);\r\n\r\n            if (\r\n                px2 < +Math.min(x1, x2).toFixed(2) ||\r\n                px2 > +Math.max(x1, x2).toFixed(2) ||\r\n                px2 < +Math.min(x3, x4).toFixed(2) ||\r\n                px2 > +Math.max(x3, x4).toFixed(2) ||\r\n                py2 < +Math.min(y1, y2).toFixed(2) ||\r\n                py2 > +Math.max(y1, y2).toFixed(2) ||\r\n                py2 < +Math.min(y3, y4).toFixed(2) ||\r\n                py2 > +Math.max(y3, y4).toFixed(2)\r\n            ) {\r\n                return null;\r\n            }\r\n\r\n            return {\r\n                x: px, \r\n                y: py\r\n            };\r\n        },\r\n        \r\n        perpendicular: function(a, b, h) {\r\n            var m1, m2, tt, hp;\r\n\r\n            m1 = Graph.util.gradient(a, b);\r\n            m2 = m1 === 0 ? 0 : ( -1 / m1 );\r\n            tt = Math.atan(m2);\r\n            // si = Math.sin(tt),\r\n            // co = Math.cos(tt);\r\n\r\n            var hp = h * Math.cos(tt);\r\n            // var hy = h * si;\r\n\r\n            // find `middle point`\r\n            var mx = (a.x + b.x) / 2,\r\n                my = (a.y + b.y) / 2;\r\n\r\n            // find `y` intercept\r\n            var iy = my - (mx * m2)\r\n\r\n            var x3 = mx + hp,\r\n                y3 = m2 * x3 + iy;\r\n\r\n            return {\r\n                from: {\r\n                    x: mx,\r\n                    y: my\r\n                },\r\n                to: {\r\n                    x: x3,\r\n                    y: y3\r\n                }\r\n            };\r\n        },\r\n        \r\n        // -------SHAPE/PATH------ //\r\n        \r\n        points2path: function (points) {\r\n            var segments = _.map(points, function(p, i){\r\n                var cmd = i === 0 ? 'M' : 'L';\r\n                return [cmd, p.x, p.y];\r\n            });\r\n            return Graph.util.segments2path(segments);\r\n        },\r\n        \r\n        path2points: function(command) {\r\n            var segments = Graph.util.path2segments(command);\r\n            return _.map(segments, function(s, i){\r\n                if (s[0] == 'M' || s[0] == 'L') {\r\n                    return {x: s[1], y: s[2]};\r\n                } else {\r\n                    return {x: s[5], y: s[6]};\r\n                }\r\n            });\r\n        },\r\n\r\n        segments2path: function(segments) {\r\n            return _.join(segments || [], ',').replace(REGEX_PATH_CMD, '$1');\r\n        },\r\n\r\n        path2segments: function(command) {\r\n            if ( ! command) {\r\n                return [];\r\n            }\r\n\r\n            var cached = Graph.lookup('Graph.util', 'path2segments', command),\r\n                sizes = {a: 7, c: 6, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, z: 0},\r\n                segments = [];\r\n            \r\n            if (cached.segments) {\r\n                return _.cloneDeep(cached.segments);\r\n            }\r\n\r\n            command.replace(REGEX_PATH_STR, function(match, cmd, val){\r\n                var \r\n                    params = [],\r\n                    name = cmd.toLowerCase();\r\n\r\n                val.replace(REGEX_PATH_VAL, function(match, v){\r\n                    if (v) {\r\n                        params.push(+v);\r\n                    }\r\n                });\r\n\r\n                if (name == 'm' && params.length > 2) {\r\n                    segments.push(_.concat([cmd], params.splice(0, 2)));\r\n                    name = 'l';\r\n                    cmd = cmd == 'm' ? 'l' : 'L';\r\n                }\r\n\r\n                if (name == 'r') {\r\n                    segments.push(_.concat([cmd], params));\r\n                } else while (params.length >= sizes[name]) {\r\n                    segments.push(_.concat([cmd], params.splice(0, sizes[name])));\r\n                    if ( ! sizes[name]) {\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n            \r\n            cached.segments = _.cloneDeep(segments);\r\n            return segments;\r\n        },\r\n\r\n        polygon2dots: function(command) {\r\n            var array = [];\r\n            command.replace(REGEX_POLY_STR, function($0, x, y){\r\n                array.push([_.float(x), _.float(y)]);\r\n            });\r\n            return array;\r\n        },\r\n\r\n        polygon2path: function(command) {\r\n            var dots = Graph.util.polygon2dots(command);\r\n\r\n            if ( ! dots.length) {\r\n                return 'M0,0';\r\n            }\r\n            \r\n            var command = 'M' + dots[0][0] + ',' + dots[0][1];\r\n\r\n            for (var i = 1, ii = dots.length; i < ii; i++) {\r\n                command += 'L' + dots[i][0] + ',' + dots[i][1] + ',';\r\n            }\r\n            \r\n            command  = command.substring(0, command.length - 1);\r\n            command += 'Z';\r\n\r\n            return command;\r\n        },\r\n\r\n        transform2segments: Graph.memoize(function(command) {\r\n            var valid = {\r\n                matrix: true,\r\n                translate: true,\r\n                rotate: true,\r\n                scale: true,\r\n                skewX: true,\r\n                skewY: true\r\n            };\r\n\r\n            command += '';\r\n\r\n            var transform = [], matches = command.match(REGEX_TRAN_STR);\r\n\r\n            if (matches) {\r\n                _.forEach(matches, function(sub){\r\n                    var args = sub.match(REGEX_TRAN_SUB),\r\n                        name = args.shift();\r\n                    if (valid[name]) {\r\n                        args = _.map(args, function(v){ return +v; })\r\n                        transform.push([name].concat(args));    \r\n                    }\r\n                });  \r\n            }\r\n\r\n            return transform;\r\n        }),\r\n        \r\n        // --------CURVE-------- //\r\n        \r\n        curvebox: Graph.memoize(function(x0, y0, x1, y1, x2, y2, x3, y3) {\r\n            var token = _.join(arguments, '_'),\r\n                cached = Graph.lookup('Graph.util', 'curvebox', token);\r\n\r\n            token = null;\r\n\r\n            if (cached.curvebox) {\r\n                return cached.curvebox;\r\n            }\r\n\r\n            var tvalues = [],\r\n                bounds  = [[], []];\r\n\r\n            var a, b, c, t, t1, t2, b2ac, sqrtb2ac;\r\n\r\n            for (var i = 0; i < 2; ++i) {\r\n                if (i == 0) {\r\n                    b =  6 * x0 - 12 * x1 + 6 * x2;\r\n                    a = -3 * x0 +  9 * x1 - 9 * x2 + 3 * x3;\r\n                    c =  3 * x1 -  3 * x0;\r\n                } else {\r\n                    b =  6 * y0 - 12 * y1 + 6 * y2;\r\n                    a = -3 * y0 +  9 * y1 - 9 * y2 + 3 * y3;\r\n                    c =  3 * y1 -  3 * y0;\r\n                }\r\n\r\n                if (Math.abs(a) < 1e-12) {\r\n                    if (Math.abs(b) < 1e-12) {\r\n                        continue;\r\n                    }\r\n                    t = -c / b;\r\n                    if (0 < t && t < 1) {\r\n                        tvalues.push(t);\r\n                    }\r\n                    continue;\r\n                }\r\n\r\n                b2ac = b * b - 4 * c * a;\r\n                sqrtb2ac = Math.sqrt(b2ac);\r\n                \r\n                if (b2ac < 0) {\r\n                    continue;\r\n                }\r\n                \r\n                t1 = (-b + sqrtb2ac) / (2 * a);\r\n                \r\n                if (0 < t1 && t1 < 1) {\r\n                    tvalues.push(t1);\r\n                }\r\n\r\n                t2 = (-b - sqrtb2ac) / (2 * a);\r\n                \r\n                if (0 < t2 && t2 < 1) {\r\n                    tvalues.push(t2);\r\n                }\r\n            }\r\n\r\n            var x, y, j = tvalues.length,\r\n                jlen = j,\r\n                mt;\r\n\r\n            while (j--) {\r\n                t = tvalues[j];\r\n                mt = 1 - t;\r\n                bounds[0][j] = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\r\n                bounds[1][j] = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\r\n            }\r\n\r\n            bounds[0][jlen] = x0;\r\n            bounds[1][jlen] = y0;\r\n            bounds[0][jlen + 1] = x3;\r\n            bounds[1][jlen + 1] = y3;\r\n            bounds[0].length = bounds[1].length = jlen + 2;\r\n\r\n            cached.curvebox = {\r\n                min: {x: Math.min.apply(0, bounds[0]), y: Math.min.apply(0, bounds[1])},\r\n                max: {x: Math.max.apply(0, bounds[0]), y: Math.max.apply(0, bounds[1])}\r\n            };\r\n\r\n            return cached.curvebox;\r\n        }),\r\n        \r\n        curveLength: function(x1, y1, x2, y2, x3, y3, x4, y4, t) {\r\n            t = _.defaultTo(t, 1);\r\n            t = t > 1 ? 1 : t < 0 ? 0 : t;\r\n\r\n            var h = t / 2,\r\n                sum = 0;\r\n\r\n            for (var i = 0; i < LEGENDRE_N; i++) {\r\n                var ct = h * LEGENDRE_T[i] + h,\r\n\r\n                    xb = Graph.util.curvePolynom(ct, x1, x2, x3, x4),\r\n                    yb = Graph.util.curvePolynom(ct, y1, y2, y3, y4),\r\n                    co = xb * xb + yb * yb;\r\n\r\n                sum += LEGENDRE_C[i] * Math.sqrt(co);\r\n            }\r\n\r\n            return h * sum;\r\n        },\r\n\r\n        curvePolynom: function(t, n1, n2, n3, n4) {\r\n            var t1 = -3 * n1 + 9 * n2 -  9 * n3 + 3 * n4,\r\n                t2 =  t * t1 + 6 * n1 - 12 * n2 + 6 * n3;\r\n            return t * t2 - 3 * n1 + 3 * n2;\r\n        },\r\n        \r\n        curveInterval: function(x1, y1, x2, y2, x3, y3, x4, y4, length) {\r\n            if (length < 0 || Graph.util.curveLength(x1, y1, x2, y2, x3, y3, x4, y4) < length) {\r\n                return;\r\n            }\r\n\r\n            var t = 1,\r\n                step = t / 2,\r\n                t2 = t - step,\r\n                l,\r\n                e = .01;\r\n\r\n            l = Graph.util.curveLength(x1, y1, x2, y2, x3, y3, x4, y4, t2);\r\n\r\n            while (Math.abs(l - length) > e) {\r\n                step /= 2;\r\n                t2 += (l < length ? 1 : -1) * step;\r\n                l = Graph.util.curveLength(x1, y1, x2, y2, x3, y3, x4, y4, t2);\r\n            }\r\n\r\n            return t2;\r\n        },\r\n\r\n        pointAtInterval: function(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\r\n            var t1 = 1 - t,\r\n                t13 = Math.pow(t1, 3),\r\n                t12 = Math.pow(t1, 2),\r\n                t2 = t * t,\r\n                t3 = t2 * t,\r\n                x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\r\n                y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\r\n                mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\r\n                my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\r\n                nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\r\n                ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\r\n                ax = t1 * p1x + t * c1x,\r\n                ay = t1 * p1y + t * c1y,\r\n                cx = t1 * c2x + t * p2x,\r\n                cy = t1 * c2y + t * p2y,\r\n                alpha = (90 - Math.atan2(mx - nx, my - ny) * 180 / Math.PI);\r\n            \r\n            alpha = (90 - Math.atan2(nx - mx, ny - my) * 180 / Math.PI);\r\n\r\n            // (mx > nx || my < ny) && (alpha += 180);\r\n\r\n            // if (isNaN(x) || isNaN(y)) {\r\n            //     return null;\r\n            // }\r\n\r\n            return {\r\n                x: x,\r\n                y: y,\r\n                m: {x: mx, y: my},\r\n                n: {x: nx, y: ny},\r\n                start: {x: ax, y: ay},\r\n                end:   {x: cx, y: cy},\r\n                alpha: alpha\r\n            };\r\n        },\r\n\r\n        curveIntersection: function(a, b, count) {\r\n            var bon1 = Graph.util.curvebox.apply(null, a),\r\n                bon2 = Graph.util.curvebox.apply(null, b),\r\n                nres = 0,\r\n                ares = [];\r\n\r\n            var box1 = {x: bon1.min.x, y: bon1.min.y, x2: bon1.max.x, y2: bon1.max.y},\r\n                box2 = {x: bon2.min.x, y: bon2.min.y, x2: bon2.max.x, y2: bon2.max.y};\r\n\r\n            if ( ! Graph.util.isBoxIntersect(box1, box2)) {\r\n                return count ? 0 : [];\r\n            }\r\n\r\n            var l1 = Graph.util.curveLength.apply(null, a),\r\n                l2 = Graph.util.curveLength.apply(null, b);\r\n            \r\n            var // n1 = ~~(l1 / 8),\r\n                // n2 = ~~(l2 / 8),\r\n                n1 = ~~(l1 / 10),\r\n                n2 = ~~(l2 / 10),\r\n                dots1 = [],\r\n                dots2 = [],\r\n                xy = {};\r\n\r\n            var i, j, t, p;\r\n\r\n            for (i = 0; i < n1 + 1; i++) {\r\n                t = i / n1;\r\n                p = Graph.util.pointAtInterval.apply(null, a.concat([t]));\r\n                dots1.push({x: p.x, y: p.y, t: t});\r\n            }\r\n\r\n            for (i = 0; i < n2 + 1; i++) {\r\n                t = i / n2;\r\n                p = Graph.util.pointAtInterval.apply(null, b.concat([t]));\r\n                dots2.push({x: p.x, y: p.y, t: t});\r\n            }\r\n\r\n            for (i = 0; i < n1; i++) {\r\n                for (j = 0; j < n2; j++) {\r\n\r\n                    var di  = dots1[i],\r\n                        di1 = dots1[i + 1],\r\n                        dj  = dots2[j],\r\n                        dj1 = dots2[j + 1],\r\n                        ci  = Math.abs(di1.x - di.x) < .001 ? 'y' : 'x',\r\n                        cj  = Math.abs(dj1.x - dj.x) < .001 ? 'y' : 'x',\r\n                        is  = Graph.util.lineIntersection(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\r\n                    \r\n                    if (is) {\r\n                        \r\n                        if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\r\n                            continue;\r\n                        }\r\n\r\n                        xy[is.x.toFixed(4)] = is.y.toFixed(4);\r\n                        \r\n                        var t1 = di.t + Math.abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\r\n                            t2 = dj.t + Math.abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\r\n                        \r\n                        if (t1 >= 0 && t1 <= 1.001 && t2 >= 0 && t2 <= 1.001) {\r\n                            nres++;\r\n                            // ares.push(is);\r\n                            ares.push({\r\n                                x: is.x,\r\n                                y: is.y,\r\n                                t1: t1,\r\n                                t2: t2\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            return count ? nres : ares;\r\n        },\r\n        \r\n        convexSegment: function(point, prev, next, radius) {\r\n            if ( ! prev || ! next || ! point) {\r\n                return null;\r\n            }\r\n            \r\n            var d1 = Graph.util.pointDistance(point, prev),\r\n                d2 = Graph.util.pointDistance(point, next);\r\n                \r\n            radius = radius || CONVEX_RADIUS;\r\n            \r\n            if (d1 > radius && d2 > radius) {\r\n                \r\n                var c1 = Graph.util.movepoint({x: point.x, y: point.y}, prev, -radius / 2),\r\n                    c2 = Graph.util.movepoint({x: point.x, y: point.y}, next, -radius / 2),\r\n                    dr = Graph.util.pointAlign(prev, next, radius / 2);\r\n                \r\n                var cp;\r\n                \r\n                if (dr == 'h') {\r\n                    cp = {\r\n                        x: point.x - radius, \r\n                        y: point.y\r\n                    };\r\n                } else {\r\n                    c1.y = prev.y;\r\n                    c2.y = next.y;\r\n                    cp = {\r\n                        x: point.x, \r\n                        y: point.y - radius\r\n                    };\r\n                }\r\n                \r\n                return [\r\n                    ['L', c1.x, c1.y],\r\n                    ['Q', cp.x, cp.y, c2.x, c2.y]\r\n                ];\r\n            }\r\n            \r\n            return null;\r\n        },\r\n        \r\n        smoothSegment: function(point, prev, next, radius) {\r\n            if ( ! prev || ! next || ! point) {\r\n                return null;\r\n            }\r\n            \r\n            var d1 = Graph.util.pointDistance(point, prev),\r\n                d2 = Graph.util.pointDistance(point, next);\r\n                \r\n            radius = radius || SMOOTH_RADIUS;\r\n            \r\n            if (d1 > radius && d2 > radius) {\r\n                var c1 = Graph.util.movepoint({x: point.x, y: point.y}, prev, -radius),\r\n                    c2 = Graph.util.movepoint({x: point.x, y: point.y}, next, -radius);\r\n                    \r\n                return [\r\n                    ['L', c1.x, c1.y],\r\n                    ['Q', point.x, point.y, c2.x, c2.y]\r\n                ]\r\n            }\r\n            \r\n            return null;\r\n        }\r\n        \r\n    };\r\n\r\n}());","\r\n(function(){\r\n    \r\n    var initializing = false;\r\n    // var inherit = /xyz/.test(function(){ xyz; }) ? /\\$super/ : /.*/;\r\n    var Class = Graph.lang.Class = function() {};\r\n\r\n    Class.prototype.constructor = Class;\r\n    Class.prototype.toString = function() {\r\n        return 'Graph.lang.Class';\r\n    };\r\n\r\n    Class.defaults = {};\r\n\r\n    Class.extend = function(config) {\r\n        var $super, proto, name, value, defaults;\r\n        \r\n        $super = this.prototype;\r\n        defaults = {};\r\n        \r\n        initializing = true;\r\n        \r\n        // proto = new this();\r\n        proto = Object.create($super);\r\n\r\n        initializing = false;\r\n        \r\n        var name;\r\n\r\n        for (name in config) {\r\n            value = config[name];\r\n            if ( ! _.isFunction(value)) {\r\n\r\n                proto[name] = value;\r\n                defaults[name] = value;\r\n                \r\n            } else {\r\n                proto[name] = value;\r\n                \r\n\r\n                // NOTE: perfomance penalty!!!\r\n                // ---------------------------\r\n                // proto[name] = _.isFunction($super[name])  && inherit.test(value) \r\n                //     ? (function(name, func){\r\n                //         return function() {\r\n                //             var tmp, ret;\r\n                //             tmp = this.$super;\r\n                //             this.$super = $super[name];\r\n                //             ret = func.apply(this, arguments);\r\n                //             this.$super = tmp;\r\n                //             return ret;\r\n                //         };\r\n                //     }(name, value)) : value;\r\n            }\r\n        }\r\n\r\n        var clazz, init;\r\n\r\n        if ( ! _.isUndefined(proto.constructor)) {\r\n            init = proto.constructor;\r\n            delete proto.constructor;\r\n        }\r\n\r\n        clazz = function() {\r\n\r\n            var me = this;\r\n            var prop, value;\r\n\r\n            me.listeners = {};\r\n\r\n            var classdef = me.constructor.defaults,\r\n                superdef = me.superclass.defaults;\r\n\r\n            var inherits = {};\r\n\r\n            if (superdef) {\r\n                for(prop in superdef) {\r\n                    me[prop] = _.cloneDeep(superdef[prop]);\r\n                    inherits[prop] = true;\r\n                }\r\n            }\r\n\r\n            if (classdef) {\r\n                for(prop in classdef) {\r\n                    value = _.cloneDeep(classdef[prop]);\r\n                    if (inherits[prop]) {\r\n                        if (_.isPlainObject(value) || _.isArray(value)) {\r\n                            _.assign(me[prop], value);\r\n                        }\r\n                    } else {\r\n                        me[prop] = value;    \r\n                    }\r\n                }\r\n            }\r\n\r\n            inherits = superdef = classdef = null;\r\n            \r\n            if ( ! initializing && init) {\r\n                init && init.apply(me, arguments);\r\n            }\r\n        };\r\n\r\n        // statics\r\n        clazz.extend = Class.extend;\r\n        clazz.defaults = defaults;\r\n\r\n        // instance\r\n        clazz.prototype = proto;\r\n        clazz.prototype.constructor = clazz;\r\n        clazz.prototype.superclass = $super.constructor;\r\n        \r\n        clazz.prototype.on = function(type, handler, once) {\r\n            var me = this, data;\r\n\r\n            if (_.isPlainObject(type)) {\r\n                _.forOwn(type, function(h, t){\r\n                    if (_.isPlainObject(h)) {\r\n                        var o = h;\r\n                        h = o.handler;\r\n                        s = o.once;\r\n                        me.on(t, h, s);\r\n                    } else {\r\n                        me.on(t, h, false);\r\n                    }\r\n                });\r\n                return me;\r\n            }\r\n\r\n            var part = _.split(type, '.'),\r\n                fire = part.shift();\r\n\r\n            me.listeners[fire] = me.listeners[fire] || [];\r\n            \r\n            once = _.defaultTo(once, false);\r\n\r\n            data = {\r\n                type: type,\r\n                once: once,\r\n                orig: handler,\r\n                func: _.bind(handler, this)\r\n            };\r\n\r\n            me.listeners[fire].push(data);\r\n            return this;\r\n        };\r\n\r\n        clazz.prototype.one = function(type, handler) {\r\n            var me = this;\r\n\r\n            if (_.isPlainObject(type)) {\r\n                _.forOwn(type, function(h, t){\r\n                    me.on(t, h, true);\r\n                });\r\n                return me;\r\n            }\r\n\r\n            return me.on(type, handler, true);\r\n        };\r\n\r\n        /**\r\n         * Unregister event handler\r\n         */\r\n        clazz.prototype.off = function(type, handler) {\r\n            var part, fire, lsnr, rgex;\r\n            \r\n            part = _.split(type, '.');\r\n            fire = part.shift();\r\n            lsnr = fire ? (this.listeners[fire] || []).slice() : [];\r\n\r\n            var cached = Graph.lookup('Regex.event', type);\r\n            \r\n            if (cached.rgex) {\r\n                rgex = cached.rgex;\r\n            } else {\r\n                rgex = new RegExp(_.escapeRegExp(type), 'i');\r\n                cached.rgex = rgex;\r\n            }\r\n            \r\n            if (lsnr.length) {\r\n                for (var i = lsnr.length - 1; i >= 0; i--) {\r\n                    if (handler) {\r\n                        if (rgex.test(lsnr[i].type) && lsnr[i].orig === handler) {\r\n                            this.listeners[fire].splice(i, 1);\r\n                        }\r\n                    } else {\r\n                        if (rgex.test(lsnr[i].type)) {\r\n                            this.listeners[fire].splice(i, 1);\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                var me = this;\r\n                for (fire in me.listeners) {\r\n                    (function(lsnr){\r\n                        for (var i = lsnr.length - 1; i >= 0; i--) {\r\n                            if (handler) {\r\n                                if (rgex.test(lsnr[i].type) && lsnr[i].orig === handler) {\r\n                                    lsnr.splice(i, 1);\r\n                                }\r\n                            } else {\r\n                                if (rgex.test(lsnr[i].type)) {\r\n                                    lsnr.splice(i, 1);\r\n                                }\r\n                            }\r\n                        }\r\n                    }(me.listeners[fire]))\r\n                }\r\n            }\r\n\r\n            rgex = null;\r\n            lsnr = null;\r\n            \r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Execute event handler\r\n         */\r\n        clazz.prototype.fire = function(type, data) {\r\n            var func = clazz.prototype.fire;\r\n            var args = [];\r\n            var event, part, fire, lsnr, rgex;\r\n\r\n            if (_.isString(type)) {\r\n                event = new Graph.lang.Event(type, data);\r\n            } else {\r\n                event = type;\r\n                event.originalData = event.originalData || {};\r\n                type = event.originalType || event.type;\r\n            }\r\n\r\n            // add default publisher props for later use\r\n            event.publisher = this;\r\n            \r\n            args.push(event);\r\n\r\n            part = _.split(type, '.');\r\n            fire = part.shift();\r\n            lsnr = (this.listeners[fire] || []).slice();\r\n\r\n            var cached = Graph.lookup('Regex.event', type);\r\n\r\n            if (cached.rgex) {\r\n                rgex = cached.rgex;\r\n            } else {\r\n                rgex = new RegExp(_.escapeRegExp(type), 'i');\r\n                cached.rgex = rgex;\r\n            }\r\n\r\n            var onces = [];\r\n\r\n            if (lsnr.length) {\r\n                for (var i = 0, ii = lsnr.length; i < ii; i++) {\r\n                    if (fire != type) {\r\n                        if (rgex.test(lsnr[i].type)) {\r\n                            if (lsnr[i].once) {\r\n                                onces.push(lsnr[i]);\r\n                            }\r\n                            lsnr[i].func.apply(lsnr[i].func, args);\r\n                        }\r\n                    } else {\r\n                        if (lsnr[i].once) {\r\n                            onces.push(lsnr[i]);\r\n                        }\r\n\r\n                        lsnr[i].func.apply(lsnr[i].func, args);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (onces.length) {\r\n                var me = this;\r\n                _.forEach(onces, function(lsnr){\r\n                    me.off(lsnr.type, lsnr.orig);\r\n                });\r\n            }\r\n\r\n            rgex = lsnr = null;\r\n            return event;\r\n        };\r\n\r\n        return clazz;\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Err = Graph.lang.Error = function(message) {\r\n        this.message = message;\r\n\r\n        var err = new Error();\r\n        this.stack = err.stack;\r\n\r\n        err = null;\r\n    };\r\n\r\n    Err.defaults = {\r\n        message: ''\r\n    };\r\n    Err.extend = Graph.lang.Class.extend;\r\n\r\n    Err.prototype = Object.create(Error.prototype);\r\n    Err.prototype.constructor = Err;\r\n    Err.prototype.name = \"Graph.lang.Error\";\r\n    Err.prototype.message = \"\";\r\n\r\n    ///////// SHORTCUT /////////\r\n    \r\n    Graph.error = function(message) {\r\n        return new Graph.lang.Error(message);\r\n    };\r\n\r\n    Graph.isError = function(obj) {\r\n        return obj instanceof Graph.lang.Error;\r\n    };\r\n\r\n}());","\r\n(function(_, $){\r\n\r\n    var Evt = Graph.lang.Event = function(type, data){\r\n        this.type = type;\r\n        this.originalData = null;\r\n        this.cancelBubble = false;\r\n        this.defaultPrevented = false;\r\n        this.propagationStopped = false;\r\n        this.immediatePropagationStopped = false;\r\n\r\n        this.init(data);\r\n    };\r\n    \r\n    Evt.defaults = {\r\n        type: null,\r\n        originalData: null,\r\n        cancelBubble: false,\r\n        defaultPrevented: false,\r\n        propagationStopped: false,\r\n        immediatePropagationStopped: false\r\n    };\r\n\r\n    Evt.extend = Graph.lang.Class.extend;\r\n\r\n    Evt.prototype.constructor = Evt;\r\n    \r\n    Evt.prototype.init = function(data) {\r\n        if (data) {\r\n            this.originalData = data;    \r\n            _.assign(this, data || {});\r\n        }\r\n    };\r\n\r\n    Evt.prototype.stopPropagation = function() {\r\n        this.cancelBubble = this.propagationStopped = true;\r\n    };\r\n\r\n    Evt.prototype.stopImmediatePropagation = function() {\r\n        this.immediatePropagationStopped = this.propagationStopped = true;\r\n    };\r\n\r\n    Evt.prototype.preventDefault = function() {\r\n        this.defaultPrevented = true;\r\n    };\r\n\r\n    Evt.prototype.toString = function() {\r\n        return 'Graph.lang.Event';\r\n    };\r\n\r\n    ///////// SHORTCUT /////////\r\n    \r\n    Graph.event = function(type, data) {\r\n        return new Graph.lang.Event(type, data);\r\n    };\r\n\r\n    Graph.isEvent = function(obj) {\r\n        return obj instanceof Graph.lang.Event;\r\n    };\r\n    \r\n    ///////// STATIC /////////\r\n    \r\n    Graph.event.ESC = 27;\r\n    Graph.event.ENTER = 13;\r\n    Graph.event.DELETE = 46;\r\n    Graph.event.SHIFT = 16;\r\n\r\n    Graph.event.fix = function(event) {\r\n        return $.event.fix(event);\r\n    };\r\n\r\n    Graph.event.original = function(event) {\r\n        return event.originalEvent || event;\r\n    };\r\n\r\n    Graph.event.position = function(event) {\r\n        return {\r\n            x: event.clientX,\r\n            y: event.clientY\r\n        };\r\n    };\r\n    \r\n    Graph.event.relative = function(event, vector) {\r\n        var position = Graph.event.position(event),\r\n            matrix = vector.matrix().clone().invert(),\r\n            relative = {\r\n                x: matrix.x(position.x, position.y),\r\n                y: matrix.y(position.x, position.y)\r\n            };\r\n\r\n        matrix = null;\r\n\r\n        return relative;\r\n    };\r\n\r\n    Graph.event.isPrimaryButton = function(event) {\r\n        var original = Graph.event.original(event);\r\n        return ! original.button;\r\n    };\r\n\r\n    Graph.event.hasPrimaryModifier = function(event) {\r\n        if ( ! Graph.event.isPrimaryButton(event)) {\r\n            return false;\r\n        }\r\n        var original = Graph.event.original(event);\r\n        return Graph.isMac() ? original.metaKey : original.ctrlKey;\r\n    };\r\n\r\n    Graph.event.hasSecondaryModifier = function(event) {\r\n        var original = Graph.event.original(event);\r\n        return Graph.event.isPrimaryButton(event) && original.shiftKey;\r\n    };\r\n    \r\n}(_, jQuery));","\r\n(function(){\r\n\r\n    var Collection = Graph.collection.Point = function(points) {\r\n        this.items = points || [];\r\n    };\r\n\r\n    Collection.prototype.constructor = Collection;\r\n    Collection.prototype.items = [];\r\n\r\n    Collection.prototype.get = function(index) {\r\n        return this.items[index];\r\n    };\r\n\r\n    Collection.prototype.push = function(item) {\r\n        this.items.push(item);\r\n        return item;\r\n    };\r\n\r\n    Collection.prototype.pop = function() {\r\n        var item = this.items.pop();\r\n        return item;\r\n    };\r\n\r\n    Collection.prototype.shift = function() {\r\n        var item = this.items.shift();\r\n        return item;\r\n    };\r\n\r\n    Collection.prototype.first = function() {\r\n        return _.head(this.items);\r\n    };\r\n\r\n    Collection.prototype.last = function() {\r\n        return _.last(this.items);\r\n    };\r\n\r\n    Collection.prototype.clear = function() {\r\n        this.items = [];\r\n        return this;\r\n    },\r\n\r\n    Collection.prototype.modify = function(index, x, y) {\r\n        var item = this.items[index];\r\n        item.props.x = x;\r\n        item.props.y = y;\r\n        return item;\r\n    };\r\n\r\n    Collection.prototype.each = function(iteratee) {\r\n        _.forEach(this.items, iteratee);\r\n    };\r\n\r\n    Collection.prototype.toArray = function() {\r\n        return this.items;\r\n    };\r\n\r\n    Collection.prototype.toJson = function() {\r\n        return _.map(this.items, function(item){\r\n            return item.toJson();\r\n        });\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Line = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(x1, y1, x2, y2) {\r\n            var args = _.toArray(arguments);\r\n\r\n            if (args.length === 1) {\r\n                var start = args[0].start().toJson(),\r\n                    end = args[0].end().toJson();\r\n\r\n                x1 = start.x;\r\n                y1 = start.y;\r\n                x2 = end.x;\r\n                y2 = end.y;\r\n            } else if (args.length === 2) {\r\n                if (Graph.isPoint(args[0])) {\r\n                    x1 = args[0].props.x;\r\n                    y1 = args[0].props.y;\r\n                    x2 = args[1].props.x;\r\n                    y2 = args[1].props.y;\r\n                } else {\r\n                    x1 = args[0].x;\r\n                    y1 = args[0].y;\r\n                    x2 = args[1].x;\r\n                    y2 = args[1].y;\r\n                }\r\n                \r\n            }\r\n\r\n            // this.$super('line', {\r\n            //     x1: _.defaultTo(x1, 0),\r\n            //     y1: _.defaultTo(y1, 0),\r\n            //     x2: _.defaultTo(x2, 0),\r\n            //     y2: _.defaultTo(y2, 0)\r\n            // });\r\n            \r\n            this.superclass.prototype.constructor.call(this, 'line', {\r\n                x1: _.defaultTo(x1, 0),\r\n                y1: _.defaultTo(y1, 0),\r\n                x2: _.defaultTo(x2, 0),\r\n                y2: _.defaultTo(y2, 0)\r\n            });\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Line';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.svg.Line.toString = function() {\r\n        return \"function(x1, y1, x2, y2)\";\r\n    };\r\n\r\n}());","\r\n(function(){\r\n    \r\n    var Curve = Graph.lang.Curve = function(command) {\r\n        this.segments = _.isString(command) ? Graph.util.path2segments(command) : _.cloneDeep(command);\r\n            \r\n        if (this.segments[0][0] != 'M') {\r\n            this.segments.unshift(\r\n                ['M', this.segments[0][1], this.segments[0][2]]\r\n            );\r\n        }\r\n        \r\n        if (this.segments.length === 1 && this.segments[0][0] === 'M') {\r\n            var x = this.segments[0][1],\r\n                y = this.segments[0][2];\r\n            this.segments.push(['C', x, y, x, y, x, y]);\r\n        }\r\n    };\r\n\r\n    Curve.defaults = {\r\n        segments: []\r\n    };\r\n\r\n    Curve.extend = Graph.lang.Class.extend;\r\n    \r\n    Curve.prototype.constructor = Curve;\r\n\r\n    Curve.prototype.segments = [];\r\n\r\n    Curve.prototype.x = function() {\r\n        return this.segments[1][5];\r\n    };\r\n\r\n    Curve.prototype.y = function() {\r\n        return this.segments[1][6];\r\n    };\r\n\r\n    Curve.prototype.length = function(t) {\r\n        var params = this.segments[0].slice(1).concat(this.segments[1].slice(1)).concat([t]);\r\n        return Graph.util.curveLength.apply(null, params);\r\n    };\r\n\r\n    Curve.prototype.t = function(length) {\r\n        var params = this.segments[0].slice(1).concat(this.segments[1].slice(1)).concat([length]);\r\n        return Graph.util.curveInterval.apply(null, params);\r\n    };\r\n\r\n    Curve.prototype.pointAt = function(t, json) {\r\n        var params = this.segments[0].slice(1).concat(this.segments[1].slice(1)).concat([t]),\r\n            result = Graph.util.pointAtInterval.apply(null, params);\r\n\r\n        if (json) {\r\n            return result;\r\n        } else {\r\n            var point = Graph.point(result.x, result.y);\r\n            result.x = result.y = undefined;\r\n            return _.extend(point, result);\r\n        }\r\n    };\r\n\r\n    Curve.prototype.intersection = function(curve, json) {\r\n        var a = this.segments[0].slice(1).concat(this.segments[1].slice(1)),\r\n            b = curve.segments[0].slice(1).concat(curve.segments[1].slice(1)),\r\n            i = Graph.util.curveIntersection(a, b);\r\n\r\n        if (json) {\r\n            return i;\r\n        } else {\r\n            var points = _.map(i, function(p){ return Graph.point(p.x, p.y); });\r\n            return points;\r\n        }\r\n    };\r\n\r\n    Curve.prototype.intersectnum = function(curve) {\r\n        var a = this.segments[0].slice(1).concat(this.segments[1].slice(1)),\r\n            b = curve.segments[0].slice(1).concat(curve.segments[1].slice(1));\r\n\r\n        return Graph.util.curveIntersection(a, b, true);\r\n    };\r\n\r\n    Curve.prototype.bbox = function() {\r\n        var args = [this.segments[0][1], this.segments[0][2]].concat(this.segments[1].slice(1)),\r\n            bbox = Graph.util.curvebox.apply(null, args);\r\n        return Graph.bbox({\r\n            x: bbox.min.x,\r\n            y: bbox.min.y,\r\n            x2: bbox.max.x,\r\n            y2: bbox.max.y,\r\n            width: bbox.max.x - bbox.min.x,\r\n            height: bbox.max.y - bbox.min.y\r\n        });\r\n    };\r\n\r\n    Curve.prototype.clone = function() {\r\n        var segments = _.cloneDeep(this.segments);\r\n        return new Graph.lang.Curve(segments);\r\n    };\r\n\r\n    Curve.prototype.toValue = function() {\r\n        return Graph.util.segments2path(this.segments);\r\n    };\r\n\r\n    Curve.prototype.toString = function() {\r\n        return 'Graph.lang.Curve';\r\n    };\r\n\r\n    ///////// SHORTCUT /////////\r\n    \r\n    Graph.curve = function(command) {\r\n        return new Graph.lang.Curve(command);\r\n    };\r\n\r\n    Graph.isCurve = function(obj) {\r\n        return obj instanceof Graph.lang.Curve;\r\n    };\r\n\r\n}());","\r\n(function(){\r\n    \r\n    var BBox = Graph.lang.BBox = function(bounds) {\r\n        this.props = _.extend({x: 0, y: 0, x2: 0, y2: 0, width: 0, height: 0}, bounds || {});\r\n    };\r\n\r\n    BBox.defaults = {\r\n        props: {\r\n            x: 0,\r\n            y: 0,\r\n            x2: 0,\r\n            y2: 0,\r\n            width: 0,\r\n            height: 0\r\n        }\r\n    };\r\n    \r\n    BBox.extend = Graph.lang.Class.extend;\r\n\r\n    BBox.prototype = Object.create(Graph.lang.Class.prototype);\r\n    BBox.prototype.constructor = BBox;\r\n    BBox.prototype.superclass = Graph.lang.Class;\r\n\r\n    BBox.prototype.pathinfo = function() {\r\n        var prop = this.props;\r\n\r\n        return new Graph.lang.Path([\r\n            ['M', prop.x, prop.y], \r\n            ['l', prop.width, 0], \r\n            ['l', 0, prop.height], \r\n            ['l', -prop.width, 0], \r\n            ['z']\r\n        ]);\r\n    };\r\n\r\n    BBox.prototype.origin = function(simple) {\r\n        simple = _.defaultTo(simple, false);\r\n\r\n        var x = this.props.x,\r\n            y = this.props.y;\r\n\r\n        return simple ? {x: x, y: y} : Graph.point(x, y);\r\n    };\r\n\r\n    BBox.prototype.center = function(simple) {\r\n        simple = _.defaultTo(simple, false);\r\n\r\n        var x = this.props.x + this.props.width  / 2,\r\n            y = this.props.y + this.props.height / 2;\r\n\r\n        return simple ? {x: x, y: y} : Graph.point(x, y);\r\n    };\r\n\r\n    BBox.prototype.corner = function(simple) {\r\n        simple = _.defaultTo(simple, false);\r\n\r\n        var x = this.props.x + this.props.width,\r\n            y = this.props.y + this.props.height;\r\n\r\n        return simple ? {x: x, y: y} : Graph.point(x, y);\r\n    };\r\n\r\n    BBox.prototype.width = function() {\r\n        return this.props.width;\r\n    };\r\n\r\n    BBox.prototype.height = function() {\r\n        return this.props.height;\r\n    };\r\n\r\n    BBox.prototype.clone = function() {\r\n        var props = _.extend({}, this.props);\r\n        return new BBox(props);\r\n    };\r\n\r\n    BBox.prototype.contains = function(obj) {\r\n        var contain = true,\r\n            bbox = this.props,\r\n            dots = [];\r\n\r\n        var vbox, papa, mat, dot;\r\n\r\n        if (Graph.isPoint(obj)) {\r\n            dots = [\r\n                [obj.props.x, obj.props.y]\r\n            ];\r\n        } else if (Graph.isVector(obj)) {\r\n            dots = obj.vertices(true);\r\n        } else if (Graph.isBBox(obj)) {\r\n            dots = [\r\n                [obj.props.x, obj.props.y],\r\n                [obj.props.x2, obj.props.y2]\r\n            ];\r\n        } else {\r\n            var args = _.toArray(arguments);\r\n            if (args.length === 2) {\r\n                dots = [args];\r\n            }\r\n        }\r\n\r\n        if (dots.length) {\r\n            var l = dots.length;\r\n            while(l--) {\r\n                dot = dots[l];\r\n                contain = dot[0] >= bbox.x  && \r\n                          dot[0] <= bbox.x2 && \r\n                          dot[1] >= bbox.y  && \r\n                          dot[1] <= bbox.y2;\r\n                if ( ! contain) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return contain;\r\n    };\r\n\r\n    BBox.prototype.expand = function(dx, dy, dw, dh) {\r\n        var ax, ay;\r\n        if (_.isUndefined(dy)) {\r\n            ax = Math.abs(dx);\r\n            \r\n            dx = -ax;\r\n            dy = -ax;\r\n            dw = 2 * ax;\r\n            dh = 2 * ax;\r\n        } else {\r\n            ax = Math.abs(dx);\r\n            ay = Math.abs(dy);\r\n\r\n            dx = -ax;\r\n            dy = -ay;\r\n            dw = 2 * ax;\r\n            dh = 2 * ay;\r\n        }\r\n        \r\n        this.props.x += dx;\r\n        this.props.y += dy;\r\n        this.props.width  += dw;\r\n        this.props.height += dh;\r\n\r\n        return this;\r\n    };\r\n\r\n    BBox.prototype.translate = function(dx, dy) {\r\n        this.props.x  += dx;\r\n        this.props.y  += dy;\r\n        this.props.x2 += dx;\r\n        this.props.y2 += dy;\r\n        \r\n        return this;\r\n    };\r\n\r\n    BBox.prototype.transform = function(matrix) {\r\n        var x = this.props.x,\r\n            y = this.props.y;\r\n\r\n        this.props.x = matrix.x(x, y);\r\n        this.props.y = matrix.y(x, y);\r\n\r\n        x = this.props.x2;\r\n        y = this.props.y2;\r\n\r\n        this.props.x2 = matrix.x(x, y);\r\n        this.props.y2 = matrix.y(x, y);\r\n        \r\n        this.props.width  = this.props.x2 - this.props.x;\r\n        this.props.height = this.props.y2 - this.props.y;\r\n\r\n        return this;\r\n    };\r\n\r\n    BBox.prototype.intersect = function(tbox) {\r\n        var me = this,\r\n            bdat = me.props,\r\n            tdat = tbox.toJson();\r\n\r\n        return tbox.contains(bdat.x, bdat.y)\r\n            || tbox.contains(bdat.x2, bdat.y)\r\n            || tbox.contains(bdat.x, bdat.y2)\r\n            || tbox.contains(bdat.x2, bdat.y2)\r\n            || me.contains(tdat.x, tdat.y)\r\n            || me.contains(tdat.x2, tdat.y)\r\n            || me.contains(tdat.x, tdat.y2)\r\n            || me.contains(tdat.x2, tdat.y2)\r\n            || (bdat.x < tdat.x2 && bdat.x > tdat.x || tdat.x < bdat.x2 && tdat.x > bdat.x)\r\n            && (bdat.y < tdat.y2 && bdat.y > tdat.y || tdat.y < bdat.y2 && tdat.y > bdat.y);\r\n    };\r\n\r\n    BBox.prototype.sideNearestPoint = function(point) {\r\n        var px = point.props.x,\r\n            py = point.props.y,\r\n            tx = this.props.x,\r\n            ty = this.props.y,\r\n            tw = this.props.width,\r\n            th = this.props.height;\r\n\r\n        var distToLeft = px - tx;\r\n        var distToRight = (tx + tw) - px;\r\n        var distToTop = py - ty;\r\n        var distToBottom = (ty + th) - py;\r\n        var closest = distToLeft;\r\n        var side = 'left';\r\n\r\n        if (distToRight < closest) {\r\n            closest = distToRight;\r\n            side = 'right';\r\n        }\r\n\r\n        if (distToTop < closest) {\r\n            closest = distToTop;\r\n            side = 'top';\r\n        }\r\n        if (distToBottom < closest) {\r\n            closest = distToBottom;\r\n            side = 'bottom';\r\n        }\r\n\r\n        return side;\r\n    };\r\n\r\n    BBox.prototype.pointNearestPoint = function(point) {\r\n        if (this.contains(point)) {\r\n            var side = this.sideNearestPoint(point);\r\n            switch (side){\r\n                case 'right': return Graph.point(this.props.x + this.props.width, point.props.y);\r\n                case 'left': return Graph.point(this.props.x, point.props.y);\r\n                case 'bottom': return Graph.point(point.props.x, this.props.y + this.props.height);\r\n                case 'top': return Graph.point(point.props.x, this.props.y);\r\n            }\r\n        }\r\n        return point.clone().adhereToBox(this);\r\n    };\r\n    \r\n    BBox.prototype.toJson = function() {\r\n        return _.clone(this.props);\r\n    };\r\n\r\n    BBox.prototype.toString = function() {\r\n        return 'Graph.lang.BBox';\r\n    };\r\n\r\n    BBox.prototype.toValue = function() {\r\n        var p = this.props;\r\n        return _.format(\r\n            '{0},{1} {2},{3} {4},{5} {6},{7}',\r\n            p.x, p.y,\r\n            p.x + p.width, p.y,\r\n            p.x + p.width, p.y + p.height,\r\n            p.x, p.y + p.height\r\n        );\r\n    };\r\n\r\n    ///////// EXTENSION /////////\r\n    \r\n    Graph.isBBox = function(obj) {\r\n        return obj instanceof Graph.lang.BBox;\r\n    };\r\n\r\n    Graph.bbox = function(bounds) {\r\n        return new Graph.lang.BBox(bounds);\r\n    };\r\n    \r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Path = Graph.extend(Graph.svg.Vector, {\r\n\r\n        constructor: function(d) {\r\n            if ( ! d) {\r\n                d = [['M', 0, 0]];\r\n            }\r\n\r\n            if (_.isArray(d)) {\r\n                d = Graph.path(Graph.util.segments2path(d)).absolute().toValue();\r\n            } else if (d instanceof Graph.lang.Path) {\r\n                d = d.toValue();\r\n            } else {\r\n                d = Graph.path(d).absolute().toValue();\r\n            }\r\n\r\n            this.superclass.prototype.constructor.call(this, 'path', {\r\n                d: d\r\n            });\r\n        },\r\n\r\n        pathinfo: function() {\r\n            return Graph.path(this.attrs.d)\r\n        },\r\n\r\n        segments: function() {\r\n            return this.pathinfo().segments;\r\n        },\r\n\r\n        intersection: function(path, dots) {\r\n            return this.pathinfo().intersection(path.pathinfo(), dots);\r\n        },\r\n\r\n        intersectnum: function(path) {\r\n            return this.pathinfo().intersectnum(path.pathinfo());\r\n        },\r\n\r\n        angle: function() {\r\n            var segments = _.clone(this.segments()),\r\n                max = segments.length - 1;\r\n\r\n            if (segments[max][0] == 'Z') {\r\n                max--;\r\n                segments.pop();\r\n            }\r\n\r\n            if (segments.length === 1) {\r\n                max++;\r\n                segments.push(['L', segments[0][1], segments[0][2]]);\r\n            }\r\n\r\n            var dx = segments[max][1] - segments[max - 1][1],\r\n                dy = segments[max][2] - segments[max - 1][2];\r\n\r\n            return (180 + Math.atan2(-dy, -dx) * 180 / Math.PI + 360) % 360;\r\n        },\r\n\r\n        slice: function(from, to) {\r\n            return this.pathinfo().slice(from, to);\r\n        },\r\n\r\n        pointAt: function(length) {\r\n            return this.pathinfo().pointAt(length);\r\n        },\r\n\r\n        length: function() {\r\n            return this.pathinfo().length();\r\n        },\r\n\r\n        addVertext: function(vertext) {\r\n            var path = this.pathinfo();\r\n\r\n            path.addVertext(vertext);\r\n            this.attr('d', path.command());\r\n\r\n            return this;\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var ms = this.matrix().clone(),\r\n                mr = matrix.rotate(),\r\n                ro = mr.deg,\r\n                rd = mr.rad,\r\n                si = Math.sin(rd),\r\n                co = Math.cos(rd),\r\n                pa = this.pathinfo(),\r\n                ps = pa.segments,\r\n                rx = ps[0][1],\r\n                ry = ps[0][2];\r\n\r\n            if (ro) {\r\n                ms.rotate(-ro, rx, ry);    \r\n            }\r\n            \r\n            rx = ms.x(ps[0][1], ps[0][2]);\r\n            ry = ms.y(ps[0][1], ps[0][2]);\r\n\r\n            ms.scale(sx, sy, cx, cy);\r\n\r\n            _.forEach(ps, function(seg){\r\n                var ox, oy, nx, ny;\r\n                if (seg[0] != 'Z') {\r\n                    ox = seg[seg.length - 2];\r\n                    oy = seg[seg.length - 1];\r\n\r\n                    nx = ms.x(ox, oy);\r\n                    ny = ms.y(ox, oy);\r\n                    \r\n                    seg[seg.length - 2] = nx;\r\n                    seg[seg.length - 1] = ny;\r\n                }\r\n            });\r\n\r\n            this.reset();\r\n            this.attr('d', pa.command());\r\n\r\n            if (ro) {\r\n                this.rotate(ro, rx, ry).commit(true);    \r\n            }\r\n\r\n            return {\r\n                matrix: ms,\r\n                x: rx,\r\n                y: ry\r\n            };\r\n        },\r\n\r\n        moveTo: function(x, y) {\r\n            var path = this.pathinfo();\r\n            \r\n            path.moveTo(x, y);\r\n            this.attr('d', path.command());\r\n\r\n            return this;\r\n        },\r\n\r\n        lineTo: function(x, y, append) {\r\n            var path = this.pathinfo();\r\n            \r\n            path.lineTo(x, y, append);\r\n            this.attr('d', path.command());\r\n\r\n            return this;\r\n        },\r\n\r\n        tail: function() {\r\n            var segments = this.segments();\r\n            if (segments.length) {\r\n                return Graph.point(segments[0][1], segments[0][2]);\r\n            }\r\n            return null;\r\n        },\r\n\r\n        head: function() {\r\n            var segments = this.segments(), maxs;\r\n            if (segments.length) {\r\n                maxs = segments.length - 1;\r\n                return Graph.point(segments[maxs][1], segments[maxs][2]);\r\n            }\r\n            return null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Path';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.svg.Path.toString = function() {\r\n        return 'function(d)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n    \r\n    var Matrix = Graph.lang.Matrix = function(a, b, c, d, e, f) {\r\n        this.props = {};\r\n\r\n        this.props.a = _.defaultTo(a, 1);\r\n        this.props.b = _.defaultTo(b, 0);\r\n        this.props.c = _.defaultTo(c, 0);\r\n        this.props.d = _.defaultTo(d, 1);\r\n        this.props.e = _.defaultTo(e, 0);\r\n        this.props.f = _.defaultTo(f, 0);\r\n    };\r\n\r\n    Matrix.defaults = {\r\n        props: {\r\n            a: 1,\r\n            b: 0,\r\n            c: 0,\r\n            d: 1,\r\n            e: 0,\r\n            f: 0\r\n        }\r\n    };\r\n\r\n    Matrix.extend = Graph.lang.Class.extend;\r\n\r\n    Matrix.prototype.constructor = Matrix;\r\n\r\n    Matrix.prototype.x = function(x, y) {\r\n        return x * this.props.a + y * this.props.c + this.props.e;\r\n    };\r\n\r\n    Matrix.prototype.y = function(x, y) {\r\n        return x * this.props.b + y * this.props.d + this.props.f;\r\n    };\r\n        \r\n    Matrix.prototype.get = function(chr) {\r\n        return +this.props[chr].toFixed(4);\r\n    };\r\n\r\n    Matrix.prototype.multiply = function(a, b, c, d, e, f) {\r\n        var \r\n            result = [[], [], []],\r\n            source = [\r\n                [this.props.a, this.props.c, this.props.e], \r\n                [this.props.b, this.props.d, this.props.f], \r\n                [0, 0, 1]\r\n            ],\r\n            matrix = [\r\n                [a, c, e], \r\n                [b, d, f], \r\n                [0, 0, 1]\r\n            ];\r\n\r\n        var x, y, z, tmp;\r\n\r\n        if (Graph.isMatrix(a)) {\r\n            matrix = [\r\n                [a.props.a, a.props.c, a.props.e], \r\n                [a.props.b, a.props.d, a.props.f], \r\n                [0, 0, 1]\r\n            ];\r\n        }\r\n\r\n        for (x = 0; x < 3; x++) {\r\n            for (y = 0; y < 3; y++) {\r\n                tmp = 0;\r\n                for (z = 0; z < 3; z++) {\r\n                    tmp += source[x][z] * matrix[z][y];\r\n                }\r\n                result[x][y] = tmp;\r\n            }\r\n        }\r\n\r\n        this.props.a = result[0][0];\r\n        this.props.b = result[1][0];\r\n        this.props.c = result[0][1];\r\n        this.props.d = result[1][1];\r\n        this.props.e = result[0][2];\r\n        this.props.f = result[1][2];\r\n\r\n        return this;\r\n    };\r\n\r\n    Matrix.prototype.invert = function(clone) {\r\n        var x = this.props.a * this.props.d - this.props.b * this.props.c;\r\n        var a, b, c, d, e, f;\r\n\r\n        clone = _.defaultTo(clone, false);\r\n\r\n        a =  this.props.d / x;\r\n        b = -this.props.b / x;\r\n        c = -this.props.c / x;\r\n        d =  this.props.a / x;\r\n        e = (this.props.c * this.props.f - this.props.d * this.props.e) / x;\r\n        f = (this.props.b * this.props.e - this.props.a * this.props.f) / x;\r\n\r\n        if (clone) {\r\n            return new Graph.matrix(a, b, c, d, e, f);\r\n        } else {\r\n            this.props.a = a;\r\n            this.props.b = b;\r\n            this.props.c = c;\r\n            this.props.d = d;\r\n            this.props.e = e;\r\n            this.props.f = f;    \r\n\r\n            return this;\r\n        }\r\n    };\r\n\r\n    Matrix.prototype.translate = function(x, y) {\r\n        x = _.defaultTo(x, 0);\r\n        y = _.defaultTo(y, 0);\r\n        this.multiply(1, 0, 0, 1, x, y);\r\n\r\n        return this;\r\n    };\r\n\r\n    Matrix.prototype.rotate = function(angle, cx, cy) {\r\n        if (angle === undefined) {\r\n            \r\n            var px = this.delta(0, 1),\r\n                py = this.delta(1, 0),\r\n                deg = 180 / Math.PI * Math.atan2(px.y, px.x) - 90,\r\n                rad = Graph.util.rad(deg);\r\n\r\n            return {\r\n                deg: deg,\r\n                rad: rad\r\n            };\r\n        }\r\n\r\n        angle = Graph.util.rad(angle);\r\n        cx = _.defaultTo(cx, 0);\r\n        cy = _.defaultTo(cy, 0);\r\n\r\n        var cos = +Math.cos(angle).toFixed(9),\r\n            sin = +Math.sin(angle).toFixed(9);\r\n\r\n        this.multiply(cos, sin, -sin, cos, cx, cy);\r\n        this.multiply(1, 0, 0, 1, -cx, -cy);\r\n\r\n        return this;\r\n    };\r\n\r\n    Matrix.prototype.scale = function(sx, sy, cx, cy) {\r\n        if (sx === undefined) {\r\n            var prop = this.props,\r\n                sx = Graph.util.hypo(prop.a, prop.b),\r\n                sy = Graph.util.hypo(prop.c, prop.d);\r\n\r\n            if (this.determinant() < 0) {\r\n                sx = -sx;\r\n            }\r\n\r\n            return {\r\n                x: sx,\r\n                y: sy\r\n            };\r\n        }\r\n\r\n        sy = _.defaultTo(sy, sx);\r\n\r\n        if (cx || cy) {\r\n            cx = _.defaultTo(cx, 0);\r\n            cy = _.defaultTo(cy, 0);\r\n        }\r\n\r\n        (cx || cy) && this.multiply(1, 0, 0, 1, cx, cy);\r\n        this.multiply(sx, 0, 0, sy, 0, 0);\r\n        (cx || cy) && this.multiply(1, 0, 0, 1, -cx, -cy);\r\n        \r\n        return this;\r\n    };\r\n        \r\n    Matrix.prototype.determinant = function() {\r\n        return this.props.a * this.props.d - this.props.b * this.props.c;\r\n    };\r\n\r\n    Matrix.prototype.delta = function(x, y) {\r\n        return {\r\n            x: x * this.props.a + y * this.props.c + 0,\r\n            y: x * this.props.b + y * this.props.d + 0\r\n        };\r\n    };\r\n\r\n    Matrix.prototype.data = function() {\r\n        var px = this.delta(0, 1),\r\n            py = this.delta(1, 0),\r\n            skewX = 180 / Math.PI * Math.atan2(px.y, px.x) - 90,\r\n            radSkewX = Graph.util.rad(skewX),\r\n            cosSkewX = Math.cos(radSkewX),\r\n            sinSkewX = Math.sin(radSkewX),\r\n            scaleX = Graph.util.hypo(this.props.a, this.props.b),\r\n            scaleY = Graph.util.hypo(this.props.c, this.props.d),\r\n            radian = Graph.util.rad(skewX);\r\n\r\n        if (this.determinant() < 0) {\r\n            scaleX = -scaleX;\r\n        }\r\n\r\n        return {\r\n            x: this.props.e,\r\n            y: this.props.f,\r\n            dx: (this.props.e * cosSkewX + this.props.f *  sinSkewX) / scaleX,\r\n            dy: (this.props.f * cosSkewX + this.props.e * -sinSkewX) / scaleY,\r\n            skewX: -skewX,\r\n            skewY: 180 / Math.PI * Math.atan2(py.y, py.x),\r\n            scaleX: scaleX,\r\n            scaleY: scaleY,\r\n            rotate: skewX,\r\n            rad: radian,\r\n            sin: Math.sin(radian),\r\n            cos: Math.cos(radian),\r\n            a: this.props.a,\r\n            b: this.props.b,\r\n            c: this.props.c,\r\n            d: this.props.d,\r\n            e: this.props.e,\r\n            f: this.props.f\r\n        };\r\n    };\r\n\r\n    Matrix.prototype.toFilter = function() {\r\n        return \"progid:DXImageTransform.Microsoft.Matrix(\" + \r\n           \"M11=\" + this.get('a') + \", \" + \r\n           \"M12=\" + this.get('c') + \", \" + \r\n           \"M21=\" + this.get('b') + \", \" + \r\n           \"M22=\" + this.get('d') + \", \" + \r\n           \"Dx=\"  + this.get('e') + \", \" + \r\n           \"Dy=\"  + this.get('f') + \", \" + \r\n           \"sizingmethod='auto expand'\"  + \r\n        \")\";\r\n    };\r\n\r\n    Matrix.prototype.toArray = function() {\r\n        return [\r\n            [this.get('a'), this.get('c'), this.get('e')], \r\n            [this.get('b'), this.get('d'), this.get('f')], \r\n            [0, 0, 1]\r\n        ];\r\n    };\r\n\r\n    Matrix.prototype.toValue = function() {\r\n        return _.format(\r\n            'matrix({0},{1},{2},{3},{4},{5})',\r\n            this.get('a'),\r\n            this.get('b'),\r\n            this.get('c'),\r\n            this.get('d'),\r\n            this.get('e'),\r\n            this.get('f')\r\n        );\r\n    };\r\n\r\n    Matrix.prototype.toString = function() {\r\n        return 'Graph.lang.Matrix';\r\n    };  \r\n\r\n    Matrix.prototype.clone = function() {\r\n        return new Matrix(\r\n            this.props.a, \r\n            this.props.b, \r\n            this.props.c, \r\n            this.props.d, \r\n            this.props.e, \r\n            this.props.f\r\n        );\r\n    };\r\n\r\n    ///////// EXTENSION /////////\r\n\r\n    Graph.isMatrix = function(obj) {\r\n        return obj instanceof Graph.lang.Matrix;\r\n    };\r\n\r\n    Graph.matrix = function(a, b, c, d, e, f) {\r\n        return new Graph.lang.Matrix(a, b, c, d, e, f);\r\n    };\r\n    \r\n}());","\r\n(function(){\r\n    \r\n    var storage = {},\r\n        context = {};\r\n\r\n    var Registry = function() {\r\n\r\n    };\r\n\r\n    Registry.prototype.constructor = Registry;\r\n\r\n    Registry.prototype.register = function(vector) {\r\n        var id = vector.guid(), found = this.get(id);\r\n        \r\n        if (found !== vector) {\r\n            // vector.on('resize', function(){\r\n            //     if (vector.isConnectable()) {\r\n            //         var delay = _.delay(function(){\r\n            //             clearTimeout(delay);\r\n            //             Graph.registry.link.synchronize(vector);\r\n            //         }, 1);\r\n            //     }\r\n            // });\r\n\r\n            // vector.on('translate', function(){\r\n            //     if (vector.isConnectable()) {\r\n            //         var delay = _.delay(function(){\r\n            //             clearTimeout(delay);\r\n            //             Graph.registry.link.synchronize(vector);\r\n            //         }, 1);\r\n            //     }\r\n            // });\r\n        }\r\n\r\n        storage[id] = vector;\r\n    };\r\n\r\n    Registry.prototype.unregister = function(vector) {\r\n        var id = vector.guid();\r\n        if (storage[id]) {\r\n            delete storage[id];\r\n        }\r\n\r\n        if (context[id]) {\r\n            delete context[id];\r\n        }\r\n    };\r\n\r\n    Registry.prototype.setContext = function(id, scope) {\r\n        if (storage[id]) {\r\n            context[id] = scope;\r\n        }\r\n    };\r\n\r\n    Registry.prototype.count = function() {\r\n        return _.keys(storage).length;\r\n    };\r\n\r\n    Registry.prototype.toArray = function() {\r\n        var keys = _.keys(storage);\r\n        return _.map(keys, function(k){\r\n            return storage[k];\r\n        });\r\n    };\r\n\r\n    Registry.prototype.get = function(key) {\r\n\r\n        if (_.isUndefined(key)) {\r\n            return this.toArray();\r\n        }\r\n\r\n        if (key instanceof SVGElement) {\r\n            if (key.tagName == 'tspan') {\r\n                // we only interest to text\r\n                key = key.parentNode;\r\n            }\r\n            key = Graph.$(key).data(Graph.string.ID_VECTOR);\r\n        } else if (key instanceof Graph.dom.Element) {\r\n            key = key.data(Graph.string.ID_VECTOR);\r\n        }\r\n        return storage[key];\r\n    };\r\n\r\n    Registry.prototype.collect = function(scope) {\r\n        var vectors = [];\r\n        for (var id in context) {\r\n            if (context[id] == scope && storage[id]) {\r\n                vectors.push(storage[id]);\r\n            }\r\n        }\r\n        return vectors;\r\n    };\r\n\r\n    Registry.prototype.wipe = function(paper) {\r\n        var pid = paper.guid();\r\n\r\n        for (var id in storage) {\r\n            if (storage.hasOwnProperty(id)) {\r\n                if (storage[id].tree.paper == pid) {\r\n                    delete storage[id];\r\n                }\r\n            }\r\n        }\r\n\r\n        if (storage[pid]) {\r\n            delete storage[pid];\r\n        }\r\n    };\r\n\r\n    Registry.prototype.toString = function() {\r\n        return 'Graph.registry.Vector';\r\n    };\r\n    \r\n    Graph.registry.vector = new Registry();\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Shape = Graph.shape.Shape = Graph.extend({\r\n\r\n        props: {\r\n            id: null,\r\n            guid: null,\r\n            width: 0,\r\n            height: 0,\r\n            label: ''\r\n        },\r\n\r\n        components: {\r\n            shape: null,\r\n            block: null,\r\n            label: null,\r\n            child: null\r\n        },\r\n\r\n        tree: {\r\n            paper: null,\r\n            parent: null,\r\n            children: null\r\n        },\r\n\r\n        metadata: {\r\n            name: null,\r\n            icon: Graph.icons.SHAPE,\r\n            style: 'graph-shape',\r\n            tools: null\r\n        },\r\n\r\n        cached: {\r\n            innerMatrix: null,\r\n            outerMatrix: null,\r\n            innerBBox: null,\r\n            outerBBox: null\r\n        },\r\n\r\n        constructor: function(options) {\r\n            var guid;\r\n\r\n            _.assign(this.props, options || {});\r\n\r\n            guid = 'graph-shape-' + (++Shape.guid);\r\n\r\n            this.props.guid = guid;\r\n            this.tree.children = new Graph.collection.Shape();\r\n\r\n            this.initComponent();\r\n            this.initMetadata();\r\n\r\n            if (this.components.shape) {\r\n                var style = Graph.styles.SHAPE;\r\n\r\n                if (this.metadata.style) {\r\n                    style += ' ' + this.metadata.style;\r\n                }\r\n                \r\n                this.component().addClass(style);\r\n                style = null;\r\n            }\r\n\r\n            Graph.registry.shape.register(this);\r\n\r\n            guid = null;\r\n        },\r\n\r\n        initMetadata: function() {\r\n            this.metadata.tools = [\r\n                {\r\n                    name: 'config', \r\n                    icon: Graph.icons.CONFIG, \r\n                    title: Graph._('Click to config shape'), \r\n                    enabled: true,\r\n                    handler: _.bind(this.onConfigToolClick, this)\r\n                },\r\n                {\r\n                    name: 'link', \r\n                    icon: Graph.icons.LINK, \r\n                    title: Graph._('Click to start shape linking'), \r\n                    enabled: true,\r\n                    handler: _.bind(this.onLinkToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtofront',\r\n                    icon: Graph.icons.SEND_TO_FRONT,\r\n                    title: Graph._('Send to front'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onFrontToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtoback',\r\n                    icon: Graph.icons.SEND_TO_BACK,\r\n                    title: Graph._('Send to back'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBackToolClick, this)\r\n                },\r\n                {\r\n                    name: 'trash', \r\n                    icon: Graph.icons.TRASH, \r\n                    title: Graph._('Click to remove shape'), \r\n                    enabled: true,\r\n                    handler: _.bind(this.onTrashToolClick, this)\r\n                }\r\n            ];\r\n        },\r\n\r\n        initComponent: function() {\r\n            var shape = (new Graph.svg.Group());\r\n            this.components.shape = shape.guid();\r\n            shape = null;\r\n        },\r\n\r\n        component: function(name) {\r\n            var manager = Graph.registry.vector;\r\n            if (name === undefined) {\r\n                return manager.get(this.components.shape);\r\n            }\r\n            return manager.get(this.components[name]);\r\n        },\r\n\r\n        invalidate: function() {\r\n            this.cached.innerMatrix = null;\r\n            this.cached.outerMatrix = null;\r\n            this.cached.innerBBox = null;\r\n            this.cached.outerBBox = null;\r\n        },\r\n\r\n        provider: function(plugin) {    \r\n            var provider;\r\n\r\n            switch(plugin) {\r\n                case 'network':\r\n                case 'resizer':\r\n                case 'dragger':\r\n                case 'snapper':\r\n                    provider = this.components.block;\r\n                    break;\r\n                default:\r\n                    provider = this.components.block;\r\n                    break;\r\n            }\r\n\r\n            return Graph.registry.vector.get(provider);\r\n        },\r\n\r\n        paper: function() {\r\n            return Graph.registry.vector.get(this.tree.paper);\r\n        },\r\n\r\n        parent: function() {\r\n            return Graph.registry.shape.get(this.tree.parent);\r\n        },\r\n\r\n        children: function() {\r\n            return this.tree.children;\r\n        },\r\n\r\n        addChild: function(shape) {\r\n            var parent = shape.parent();\r\n\r\n            if (parent) {\r\n                parent.removeChild(shape);\r\n            }\r\n\r\n            this.children().push(shape);\r\n            shape.tree.parent = this.guid();\r\n\r\n            if (this.components.child) {\r\n                this.component('child').append(shape.component());\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        removeChild: function(shape) {\r\n            this.children().pull(shape);\r\n            shape.tree.parent = null;\r\n\r\n            var paper = shape.paper();\r\n\r\n            if (paper) {\r\n                paper.viewport().append(shape.component());\r\n            }\r\n\r\n            return this;\r\n        },\r\n        \r\n        addChild_: function(child, relocate) {\r\n            this.children().push(child);\r\n            child.tree.parent = this.guid();\r\n\r\n            if (this.components.child) {\r\n                var context = this.component(),\r\n                    target = this.component('child'),\r\n                    source = child.component();\r\n                \r\n                // sync vector tree\r\n                target.children().push(source);\r\n                source.tree.parent = target.guid();\r\n\r\n                relocate = _.defaultTo(relocate, true);\r\n\r\n                if (relocate) {\r\n\r\n                    target.elem.append(source.elem);\r\n\r\n                    var matrix = source.innerMatrix(context);\r\n\r\n                    source.graph.matrix = matrix;\r\n                    source.attr('transform', matrix.toValue());\r\n                    source.dirty(true);\r\n\r\n                    // update child props\r\n                    _.assign(child.props, {\r\n                        left: matrix.props.e,\r\n                        top:  matrix.props.f\r\n                    });\r\n\r\n                    matrix = null;\r\n                }\r\n            }\r\n        },\r\n\r\n        removeChild_: function(child, relocate) {\r\n            // sync shape tree\r\n            this.children().pull(child);\r\n            child.tree.parent = null;\r\n\r\n            // sync vector tree => revert back to paper\r\n            var paper = child.paper();\r\n\r\n            if (paper) {\r\n                var source = child.component(),\r\n                    target = paper.viewport();\r\n\r\n                // need relocate node ?\r\n                relocate = _.defaultTo(relocate, true);\r\n\r\n                if (relocate) {\r\n                    var context = this.component(),\r\n                        srcmat = Graph.matrix();\r\n\r\n                    source.bubble(function(curr){\r\n                        srcmat.multiply(curr.matrix());\r\n                        if (curr === context) {\r\n                            return false;\r\n                        }\r\n                    });\r\n\r\n                    source.graph.matrix = srcmat;\r\n                    source.attr('transform', srcmat.toValue());\r\n                    source.dirty(true);\r\n\r\n                    // update child props\r\n                    _.assign(child.props, {\r\n                        left: srcmat.props.e,\r\n                        top: srcmat.props.f\r\n                    });\r\n\r\n                    srcmat = null;\r\n\r\n                    target.children().push(source);\r\n                    source.tree.parent = target.guid();    \r\n                    target.elem.append(source.elem);\r\n\r\n                } else {\r\n                    target.children().push(source);\r\n                    source.tree.parent = target.guid();    \r\n                }\r\n            }\r\n        },\r\n        \r\n        guid: function() {\r\n            return this.props.guid;\r\n        },\r\n\r\n        data: function(name, value) {\r\n            var me = this;\r\n            \r\n            if (_.isPlainObject(name)) {\r\n                _.forOwn(name, function(v, k){\r\n                    me.data(k, v);\r\n                });\r\n                return me;\r\n            }\r\n            \r\n            if (value === undefined) {\r\n                return me.props[name];\r\n            }\r\n            \r\n            me.props[name] = value;\r\n            return me;\r\n        },\r\n\r\n        matrix: function() {\r\n            return this.component().matrix();\r\n        },\r\n\r\n        innerMatrix: function() {\r\n            var paper = this.paper();\r\n            var matrix;\r\n\r\n            if (paper) {\r\n                matrix = this.cached.innerMatrix;\r\n\r\n                if ( ! matrix) {\r\n\r\n                    var context = paper.viewport(),\r\n                        contextId = context.guid(),\r\n                        current = this.component(),\r\n                        currentId = current.guid(),\r\n                        component = this.component(),\r\n                        outerMatrix = Graph.matrix();\r\n\r\n                    component.bubble(function(curr){\r\n                        var guid = curr.guid();\r\n\r\n                        if (guid == contextId) {\r\n                            return false;\r\n                        }\r\n\r\n                        if (guid != currentId) {\r\n                            outerMatrix.multiply(curr.matrix());    \r\n                        }\r\n                    });\r\n\r\n                    outerMatrix.invert();\r\n                    matrix = component.matrix().clone().multiply(outerMatrix);\r\n\r\n                    this.cached.innerMatrix = matrix;\r\n\r\n                    outerMatrix = null;\r\n                }\r\n            } else {\r\n                matrix = this.matrix();\r\n            }\r\n\r\n            return matrix.clone();\r\n        },\r\n\r\n        outerMatrix: function() {\r\n            var paper = this.paper();\r\n            var matrix;\r\n\r\n            if (paper) {\r\n                matrix = this.cached.outerMatrix;\r\n\r\n                if ( ! matrix) {\r\n                    var context = paper.viewport(),\r\n                        contextId = context.guid(),\r\n                        component = this.component();\r\n\r\n                    matrix = Graph.matrix();\r\n\r\n                    component.bubble(function(curr){\r\n                        if (curr.guid() == contextId) {\r\n                            return false;\r\n                        }\r\n                        matrix.multiply(curr.matrix());\r\n                    });\r\n\r\n                    this.cached.outerMatrix = matrix;\r\n\r\n                    context = component = null;\r\n                }\r\n            } else {\r\n                matrix = this.matrix();\r\n            }\r\n\r\n            return matrix.clone();\r\n        },\r\n\r\n        bbox: function() {\r\n            return Graph.bbox({\r\n                 x: this.props.left,\r\n                 y: this.props.top,\r\n                x2: this.props.left + this.props.width,\r\n                y2: this.props.top + this.props.height,\r\n                width: this.props.width,\r\n                height: this.props.height\r\n            });\r\n        },\r\n\r\n        innerBBox: function() {\r\n            var bbox = this.cached.innerBBox;\r\n        },\r\n\r\n        outerBBox: function() {\r\n            var bbox = this.cached.outerBBox;\r\n\r\n            if ( ! bbox) {\r\n                var matrix = this.outerMatrix(),\r\n                    path = this.component().pathinfo().transform(matrix);\r\n\r\n                bbox = path.bbox();\r\n                this.cached.outerBBox = bbox;\r\n            }\r\n\r\n            return bbox.clone();\r\n        },\r\n\r\n        contains: function(shape) {\r\n            var bbox1, bbox2;\r\n\r\n            bbox1 = this.outerBBox();\r\n            bbox2 = shape.outerBBox();\r\n\r\n            return bbox1.contains(bbox2);\r\n        },\r\n\r\n        render: function(paper) {\r\n            var component = this.component();\r\n            component && component.render(paper);\r\n            \r\n            // save\r\n            this.tree.paper = paper.guid();\r\n        },\r\n\r\n        remove: function() {\r\n            // just fire block removal\r\n            this.component('block').remove();\r\n        },\r\n        \r\n        redraw: _.debounce(function() {\r\n            var label = this.component('label'),\r\n                block = this.component('block'),\r\n                bound = block.bbox().toJson();\r\n\r\n            label.attr({\r\n                x: bound.x + bound.width  / 2, \r\n                y: bound.x + bound.height / 2\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n        }, 1),\r\n        \r\n        translate: function(dx, dy) {\r\n            var component = this.component();\r\n            component.translate(dx, dy).commit();\r\n\r\n            // update props\r\n            var matrix = component.matrix(),\r\n                left = matrix.props.e,\r\n                top = matrix.props.f;\r\n            \r\n            this.data({\r\n                left: left,\r\n                top: top\r\n            });\r\n        },\r\n\r\n        sendToBack: function() {\r\n            var paper = this.paper();\r\n        },\r\n\r\n        sendToFront: function() {\r\n            var paper = this.paper();\r\n            paper.viewport().elem.append(this.component().elem);\r\n        },\r\n\r\n        /**\r\n         *  Use this method only for updating `width`, `height`, `left`, `top`\r\n         *  otherwise use data()\r\n         */\r\n        attr: function(name, value) {\r\n            var me = this;\r\n            \r\n            if (_.isPlainObject(name)) {\r\n                _.forOwn(name, function(v, k){\r\n                    me.props[k] = v;\r\n                });\r\n                return this;\r\n            }\r\n            \r\n            if (value === undefined) {\r\n                return this.props[name];\r\n            }\r\n            \r\n            this.props[name] = value;\r\n            return this;\r\n        },\r\n        \r\n        height: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.height;\r\n            }\r\n            \r\n            return this.attr('height', value);\r\n        },\r\n\r\n        left: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.left;\r\n            }\r\n            \r\n            return this.attr('left', value);\r\n        },\r\n        \r\n        top: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.top;\r\n            }\r\n            \r\n            return this.attr('top', value);\r\n        },\r\n\r\n        onLabelEdit: function(e) {\r\n            var text = e.text;\r\n            this.component('label').props.text = text;\r\n            this.redraw();\r\n        },\r\n\r\n        onDragStart: function(e) {\r\n            var shape = this.component();\r\n            shape.addClass('shape-dragging');\r\n        },\r\n        \r\n        onDragEnd: function(e) {\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                matrix = block.matrix();\r\n\r\n            block.reset();\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n            shape.dirty(true);\r\n            \r\n            // update props\r\n            var matrix = shape.matrix();\r\n\r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f\r\n            });\r\n\r\n            // forward\r\n            this.fire(e);\r\n\r\n            shape.removeClass('shape-dragging');\r\n        },\r\n        \r\n        onSelect: function() {\r\n            this.component('shape').addClass('shape-selected');\r\n            Graph.topic.publish('shape/select', {shape: this});\r\n        },\r\n\r\n        onDeselect: function() {\r\n            this.component('shape').removeClass('shape-selected');\r\n            Graph.topic.publish('shape/deselect', {shape: this});\r\n        },\r\n\r\n        onResize: function() {\r\n            this.redraw();\r\n        },\r\n        \r\n        onRemove: function() {\r\n            // remove label\r\n            this.component('label').remove();\r\n\r\n            // remove shape\r\n            this.component('shape').remove();\r\n\r\n            for (var name in this.components) {\r\n                this.components[name] = null;\r\n            }\r\n            \r\n            Graph.registry.shape.unregister(this);\r\n        },\r\n        \r\n        onConfigToolClick: function(e) {\r\n            \r\n        },\r\n        \r\n        onTrashToolClick: function(e) {\r\n            this.remove();\r\n        },\r\n        \r\n        onLinkToolClick: function(e) {\r\n            var paper = this.paper();\r\n            \r\n            if (paper) {\r\n                var layout = paper.layout(),\r\n                    linker = paper.plugins.linker,\r\n                    coord  = layout.grabLocation(e);\r\n                \r\n                paper.tool().activate('linker');\r\n                linker.start(this.provider('network'), coord);\r\n            }\r\n        },\r\n\r\n        onFrontToolClick: function(e) {\r\n            this.sendToFront();\r\n        },\r\n\r\n        onBackToolClick: function(e) {\r\n            this.sendToBack();\r\n        }\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n    \r\n    Shape.guid = 0;\r\n\r\n    Shape.toString = function() {\r\n        return 'function(options)';\r\n    };\r\n\r\n    ///////// EXTENSION /////////\r\n    \r\n    Graph.isShape = function(obj) {\r\n        return obj instanceof Graph.shape.Shape;\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Tree = Graph.collection.Tree = function(nodes) {\r\n        var me = this;\r\n\r\n        me.nodes = nodes;\r\n        \r\n        me.key = function(node){ return node; };\r\n\r\n        me.bisect = _.bisector(function(node){ \r\n            return me.key(node); \r\n        }).left;\r\n    };\r\n\r\n    Tree.prototype.get = function(index) {\r\n        return this.nodes[index];\r\n    };\r\n\r\n    Tree.prototype.count = function() {\r\n        return this.nodes.length;\r\n    };\r\n\r\n    Tree.prototype.insert = function(node) {\r\n        var index = this.index(node),\r\n            value = this.key(node);\r\n\r\n        if (this.nodes[index] && value == this.key(this.nodes[index])) {\r\n            return;\r\n        }\r\n\r\n        this.nodes.splice(index, 0, node);\r\n\r\n        return index;\r\n    };\r\n\r\n    Tree.prototype.remove = function(node) {\r\n        var index = this.index(node);\r\n        this.nodes.splice(index, 1);\r\n        \r\n        return index;\r\n    };\r\n\r\n    Tree.prototype.keygen = function(keygen) {\r\n        this.key = keygen;\r\n        return this;\r\n    };\r\n\r\n    Tree.prototype.index = function(node) {\r\n        return this.bisect(this.nodes, this.key(node));\r\n    };\r\n\r\n    Tree.prototype.order = function() {\r\n        this.nodes.sort(_.ascendingKey(this.key));\r\n        return this;\r\n    };\r\n    \r\n    Tree.prototype.root = function() {\r\n        return this.nodes[0];\r\n    };\r\n    \r\n    Tree.prototype.cascade = function(node, iteratee) {\r\n        var index = this.index(node),\r\n            nodes = this.nodes,\r\n            count = this.nodes.length;\r\n        \r\n        var start = 0;\r\n        \r\n        for (var n = index; n < count; n++) {\r\n            iteratee(nodes[n], start);\r\n            start++;\r\n        }\r\n    };\r\n\r\n    Tree.prototype.bubble = function(node, iteratee) {\r\n        var index = this.index(node),\r\n            nodes = this.nodes;\r\n\r\n        var start = 0;\r\n\r\n        for (var n = index; n >= 0; n--) {\r\n            iteratee(nodes[n], start);\r\n            start++;\r\n        }\r\n    };\r\n\r\n    Tree.prototype.toArray = function() {\r\n        return this.nodes.slice();\r\n    };\r\n\r\n}());","\r\n(function(_, $){\r\n    \r\n    var REGEX_SVG_BUILDER = /^<(svg|g|rect|text|path|line|tspan|circle|polygon|defs|marker)/i;\r\n\r\n    var domParser;\r\n\r\n    ///////// BUILDER /////////\r\n    \r\n    Graph.dom = function(selector, context, query) {\r\n        var fragment, element;\r\n\r\n        if (domParser === undefined) {\r\n            try {\r\n                domParser = new DOMParser();\r\n            } catch(e){\r\n                domParser = null;\r\n            }\r\n        }\r\n\r\n        query = _.defaultTo(query, false);\r\n\r\n        if (context !== undefined) {\r\n            if (Graph.isElement(context)) {\r\n                context = context.node();\r\n            }\r\n        }\r\n\r\n\r\n        if (_.isString(selector)) {\r\n            if (REGEX_SVG_BUILDER.test(selector)) {\r\n                if (domParser) {\r\n                    fragment = '<g xmlns=\"'+ Graph.config.xmlns.svg +'\">' + selector + '</g>';\r\n                    element  = domParser.parseFromString(fragment, 'text/xml').documentElement.childNodes[0];\r\n                    fragment = null;\r\n                    element  = query ? $(element) : element;\r\n                }\r\n            } else {\r\n                element = query ? $(selector, context) : $(selector, context)[0];\r\n            }\r\n        } else {\r\n            if (Graph.isHTML(selector) || Graph.isSVG(selector)) {\r\n                element = query ? $(selector) : selector;\r\n            } else if (Graph.isElement(selector)) {\r\n                element = query ? selector.query : selector.query[0];\r\n            } else {\r\n                // document, window, ...etc\r\n                element = query ? $(selector, context) : selector;\r\n            }\r\n        }\r\n\r\n        context = null;\r\n        return element;\r\n    };  \r\n\r\n    Graph.dom.clone = function(node, deep) {\r\n        return node.cloneNode(deep);\r\n    };\r\n\r\n    ///////// ELEMENT /////////\r\n\r\n    var E = Graph.dom.Element = function(node) {\r\n        this.query = $(node);\r\n    };\r\n\r\n    E.prototype.is = function(pseudo) {\r\n        return this.query.is(pseudo);\r\n    };  \r\n\r\n    E.prototype.node = function() {\r\n        return this.query[0];\r\n    };\r\n\r\n    E.prototype.length = function() {\r\n        return this.query.length;\r\n    };\r\n\r\n    E.prototype.group = function(name) {\r\n        if (name === undefined) {\r\n            return this.query.data('component-group');\r\n        }\r\n        this.query.data('component-group', name);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.belong = function(group) {\r\n        return this.group() == group;\r\n    };\r\n\r\n    E.prototype.attr = function(name, value) {\r\n        if (value === undefined) {\r\n            return this.query.attr(name);\r\n        }\r\n        \r\n        var me = this, node = this.query[0];\r\n\r\n        if (Graph.isHTML(node)) {\r\n            this.query.attr(name, value);\r\n        } else if (Graph.isSVG(node)) {\r\n\r\n            if (_.isPlainObject(name)) {\r\n                _.forOwn(name, function(v, k){\r\n                    me.attr(k, v);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (name.substring(0, 6) == 'xlink:') {\r\n                node.setAttributeNS(Graph.config.xmlns.xlink, name.substring(6), _.toString(value));\r\n            } else {\r\n                node.setAttribute(name, _.toString(value));\r\n            }\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    E.prototype.width = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.width();\r\n        }\r\n        this.query.width(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.outerHeight = function(margin) {\r\n        return this.query.outerHeight(margin);\r\n    };\r\n\r\n    E.prototype.height = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.height();\r\n        }\r\n        this.query.height(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.show = function() {\r\n        this.query.show();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.hide = function() {\r\n        this.query.hide();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.offset = function() {\r\n        return this.query.offset();\r\n    };\r\n\r\n    E.prototype.position = function() {\r\n        return this.query.position();\r\n    };\r\n\r\n    E.prototype.css = function(name, value) {\r\n        if (value === undefined) {\r\n            return this.query.css(name);\r\n        }\r\n        this.query.css(name, value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.addClass = function(classes) {\r\n        var node = this.query[0];\r\n        if (Graph.isHTML(node)) {\r\n            this.query.addClass(classes);\r\n        } else if (Graph.isSVG(node)) {\r\n            var values = _.chain([])\r\n                .concat(_.split(node.className.baseVal || '', ' '))\r\n                .concat(_.split(classes, ' '))\r\n                .uniq()\r\n                .join(' ')\r\n                .trim()\r\n                .value();\r\n            node.className.baseVal = values;\r\n        }\r\n        return this;\r\n    };\r\n\r\n    E.prototype.removeClass = function(classes) {\r\n        var node = this.query[0];\r\n        if (Graph.isHTML(node)) {\r\n            this.query.removeClass(classes);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    E.prototype.hasClass = function(clazz) {\r\n        var node = this.query[0];\r\n\r\n        if (Graph.isHTML(node)) {\r\n            return this.query.hasClass(clazz); \r\n        } else if (Graph.isSVG(node)) {\r\n            var classes = _.split(node.className.baseVal, ' ');\r\n            return classes.indexOf(clazz) > -1;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    E.prototype.find = function(selector) {\r\n        return new Graph.dom.Element(this.query.find(selector));\r\n    };\r\n\r\n    E.prototype.parent = function() {\r\n        return new Graph.dom.Element(this.query.parent());\r\n    };\r\n\r\n    E.prototype.closest = function(element) {\r\n        return new Graph.dom.Element(this.query.closest(element));\r\n    };\r\n\r\n    E.prototype.append = function(element) {\r\n        if (element.query === undefined) {\r\n            this.query.append(element);\r\n        } else {\r\n            this.query.append(element.query);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    E.prototype.prepend = function(element) {\r\n        this.query.prepend(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.appendTo = function(element) {\r\n        this.query.appendTo(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.prependTo = function(element) {\r\n        this.query.prependTo(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.before = function(element) {\r\n        this.query.before(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.after = function(element) {\r\n        this.query.after(element.query);\r\n        return this;\r\n    };\r\n    \r\n    E.prototype.last = function() {\r\n        return new Graph.dom.Element(this.query.last());\r\n    };\r\n\r\n    E.prototype.remove = function() {\r\n        this.query.remove();\r\n        this.query = null;\r\n        return this;\r\n    };\r\n\r\n    E.prototype.detach = function() {\r\n        this.query = this.query.detach();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.on = function(types, selector, data, fn, /*INTERNAL*/ one) {\r\n        this.query.on.call(this.query, types, selector, data, fn, one);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.off = function(types, selector, fn) {\r\n        this.query.off.call(this.query, types, selector, fn);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.trigger = function(type, data) {\r\n        this.query.trigger(type, data);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.val = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.val();\r\n        }\r\n        this.query.val(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.text = function(text) {\r\n        if (text === undefined) {\r\n            return this.query.text();\r\n        }\r\n        this.query.text(text);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.html = function(html) {\r\n        if (html === undefined) {\r\n            return this.query.html();\r\n        }\r\n        this.query.html(html);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.focus = function() {\r\n        this.query.focus();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.contextmenu = function(state) {\r\n        state = _.defaultTo(state, true);\r\n        if ( ! state) {\r\n            this.query.on('contextmenu', function(e){\r\n                return false;\r\n            });\r\n        }\r\n    };\r\n\r\n    E.prototype.each = function(iteratee) {\r\n        this.query.each(iteratee);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.empty = function() {\r\n        this.query.empty();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.data = function(key, value) {\r\n        if (value === undefined) {\r\n            return this.query.data(key);\r\n        }\r\n        this.query.data(key, value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.prop = function(name, value) {\r\n        if (value === undefined) {\r\n            return this.query.data(name);\r\n        }\r\n        this.query.prop(name, value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.scrollTop = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.scrollTop();\r\n        }\r\n        this.query.scrollTop(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.scrollLeft = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.scrollLeft();\r\n        }\r\n        this.query.scrollLeft(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.toString = function() {\r\n        return 'Graph.dom.Element';\r\n    };\r\n\r\n    /// STATICS ///\r\n    \r\n    E.guid = 0;\r\n    \r\n    /// HELPERS ///\r\n\r\n    Graph.$ = function(selector, context) {\r\n        var query = Graph.dom(selector, context, true);\r\n        return new Graph.dom.Element(query);\r\n    };\r\n\r\n}(_, jQuery));","\r\n(function(){\r\n\r\n    Graph.svg.Ellipse = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(cx, cy, rx, ry) {\r\n            \r\n            // this.$super('ellipse', {\r\n            //     cx: cx,\r\n            //     cy: cy,\r\n            //     rx: rx,\r\n            //     ry: ry\r\n            // });\r\n\r\n            this.superclass.prototype.constructor.call(this, 'ellipse', {\r\n                cx: cx,\r\n                cy: cy,\r\n                rx: rx,\r\n                ry: ry\r\n            });\r\n        },\r\n\r\n        pathinfo: function() {\r\n            var a = this.attrs;\r\n\r\n            return Graph.path([\r\n                ['M', a.cx, a.cy],\r\n                ['m', 0, -a.ry],\r\n                ['a', a.rx, a.ry, 0, 1, 1, 0,  2 * a.ry],\r\n                ['a', a.rx, a.ry, 0, 1, 1, 0, -2 * a.ry],\r\n                ['z']\r\n            ]);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.graph.matrix.clone().scale(sx, sy, cx, cy),\r\n                rotate = this.props.rotate;\r\n\r\n            var mx = matrix.x(this.attrs.cx, this.attrs.cy),\r\n                my = matrix.y(this.attrs.cx, this.attrs.cy),\r\n                rx = this.attrs.rx * sx,\r\n                ry = this.attrs.ry * sy;\r\n\r\n            var gx, gy;\r\n\r\n            this.reset();\r\n\r\n            this.attr({\r\n                cx: mx,\r\n                cy: my,\r\n                rx: rx,\r\n                ry: ry\r\n            });\r\n\r\n            if (rotate) {\r\n                this.rotate(rotate, mx, my).commit();    \r\n            }\r\n\r\n            var bb = this.bbox().toJson();\r\n\r\n            gx = mx - rx - dx;\r\n            gy = my - ry - dy;\r\n\r\n            gx = bb.x;\r\n            gy = bb.y;\r\n\r\n            return  {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: mx,\r\n                    cy: my\r\n                },\r\n                magnify: {\r\n                    cx: gx,\r\n                    cy: gy\r\n                }\r\n            };\r\n        },\r\n        toString: function() {\r\n            return 'Graph.svg.Ellipse';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.svg.Ellipse.toString = function() {\r\n        return \"function(cx, cy, rx, ry)\";\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Circle = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(cx, cy, r) {\r\n            var me = this;\r\n            \r\n            if (Graph.isPoint(cx)) {\r\n                r  = cy;\r\n                cy = cx.props.y;\r\n                cx = cx.props.x;\r\n            }\r\n\r\n            // me.$super('circle', {\r\n            //     cx: cx,\r\n            //     cy: cy,\r\n            //     r: r\r\n            // });\r\n\r\n            me.superclass.prototype.constructor.call(me, 'circle', {\r\n                cx: cx,\r\n                cy: cy,\r\n                r: r\r\n            });\r\n            \r\n        },\r\n\r\n        pathinfo: function() {\r\n            var a = this.attrs;\r\n            \r\n            return Graph.path([\r\n                ['M', a.cx, a.cy],\r\n                ['m', 0, -a.r],\r\n                ['a', a.r, a.r, 0, 1, 1, 0,  2 * a.r],\r\n                ['a', a.r, a.r, 0, 1, 1, 0, -2 * a.r],\r\n                ['z']\r\n            ]);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.graph.matrix.clone(),\r\n                rotate = this.props.rotate,\r\n                ax = this.attrs.cx,\r\n                ay = this.attrs.cy,\r\n                ar = this.attrs.r;\r\n\r\n            var x, y, r;\r\n            \r\n            if (sy === 1) {\r\n                r  = ar * sx;\r\n                sy = sx;\r\n            } else if (sx === 1) {\r\n                r  = ar * sy;\r\n                sx = sy;\r\n            } else if (sx < sy) {\r\n                r = ar * sy;\r\n                sx = sy;\r\n            } else if (sx > sy) {\r\n                r  = ar * sx;\r\n                sy = sx;\r\n            }\r\n\r\n            matrix.scale(sx, sy, cx, cy);\r\n\r\n            x = matrix.x(ax, ay);\r\n            y = matrix.y(ax, ay);\r\n\r\n            this.reset();\r\n\r\n            this.attr({\r\n                cx: x,\r\n                cy: y,\r\n                 r: r\r\n            });\r\n            \r\n            if (rotate) {\r\n                this.rotate(rotate, x, y).commit();    \r\n            }\r\n\r\n            return {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: x,\r\n                    cy: y\r\n                }\r\n            };\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Circle';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.svg.Circle.toString = function() {\r\n        return \"function(cx, cy, r)\";\r\n    };  \r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Rect = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(x, y, width, height, r) {\r\n            var me = this;\r\n            r = _.defaultTo(r, 6);\r\n\r\n            // me.$super('rect', {\r\n            //     x: _.defaultTo(x, 0),\r\n            //     y: _.defaultTo(y, 0),\r\n            //     rx: r,\r\n            //     ry: r,\r\n            //     width: _.defaultTo(width, 0),\r\n            //     height: _.defaultTo(height, 0)\r\n            // });\r\n\r\n            me.superclass.prototype.constructor.call(me, 'rect', {\r\n                x: _.defaultTo(x, 0),\r\n                y: _.defaultTo(y, 0),\r\n                rx: r,\r\n                ry: r,\r\n                width: _.defaultTo(width, 0),\r\n                height: _.defaultTo(height, 0)\r\n            });\r\n            \r\n            me.origpath = me.pathinfo();\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            var result = this.superclass.prototype.attr.apply(this, [name, value]);\r\n\r\n            if (name == 'rx' && value !== undefined) {\r\n                this.attrs.r = this.attrs.rx;    \r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        pathinfo: function() {\r\n            var a = this.attrs, p;\r\n\r\n            if (a.r) {\r\n                p = Graph.path([\r\n                    ['M', a.x + a.r, a.y], \r\n                    ['l', a.width - a.r * 2, 0], \r\n                    ['a', a.r, a.r, 0, 0, 1, a.r, a.r], \r\n                    ['l', 0, a.height - a.r * 2], \r\n                    ['a', a.r, a.r, 0, 0, 1, -a.r, a.r], \r\n                    ['l', a.r * 2 - a.width, 0], \r\n                    ['a', a.r, a.r, 0, 0, 1, -a.r, -a.r], \r\n                    ['l', 0, a.r * 2 - a.height], \r\n                    ['a', a.r, a.r, 0, 0, 1, a.r, -a.r], \r\n                    ['z']\r\n                ]);\r\n            } else {\r\n                p = Graph.path([\r\n                    ['M', a.x, a.y], \r\n                    ['l', a.width, 0], \r\n                    ['l', 0, a.height], \r\n                    ['l', -a.width, 0], \r\n                    ['z']\r\n                ]);\r\n            }\r\n\r\n            return p;\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.matrix().clone(),\r\n                rotate = matrix.rotate().deg;\r\n\r\n            var x, y, w, h;\r\n\r\n            matrix.scale(sx, sy, cx, cy);\r\n\r\n            this.reset();\r\n\r\n            x = matrix.x(this.attrs.x, this.attrs.y);\r\n            y = matrix.y(this.attrs.x, this.attrs.y);\r\n            w = this.attrs.width  * sx;\r\n            h = this.attrs.height * sy;\r\n\r\n            this.attr({\r\n                x: x,\r\n                y: y,\r\n                width: w,\r\n                height: h\r\n            });\r\n\r\n            if (rotate) {\r\n                this.rotate(rotate, x, y).commit();    \r\n            }\r\n            \r\n            return {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: x,\r\n                    cy: y\r\n                }\r\n            };\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Rect';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.svg.Rect.toString = function() {\r\n        return 'function(x, y, width, height, r)';\r\n    };\r\n\r\n}());","(function(){\r\n\r\n    Graph.svg.Polyline = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(points) {\r\n            points = _.defaultTo(points, '');\r\n\r\n            if (_.isArray(points)) {\r\n                if (points.length) {\r\n                    if (_.isPlainObject(points[0])) { \r\n                        points = _.map(points, function(p){ return p.x + ',' + p.y; });\r\n                    }\r\n                    points = _.join(points, ',');\r\n                } else {\r\n                    points = '';\r\n                }\r\n            }\r\n            \r\n            this.superclass.prototype.constructor.call(this, 'polyline', {\r\n                points: points\r\n            });\r\n        },\r\n\r\n        pathinfo: function() {\r\n            var command = Graph.util.polygon2path(this.attrs.points);\r\n            command = command.replace(/Z/i, '');\r\n            return Graph.path(command);\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            if (name == 'points' && _.isArray(value)) {\r\n                value = _.join(_.map(value, function(p){\r\n                    return p[0] + ',' + p[1];\r\n                }), ' ');\r\n            }\r\n            \r\n            return this.superclass.prototype.attr.call(this, name, value); // this.$super(name, value);\r\n        },\r\n        toString: function() {\r\n            return 'Graph.svg.Polyline';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.svg.Polyline.toString = function() {\r\n        return 'function(points)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Polygon = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(points) {\r\n            points = _.defaultTo(points, '');\r\n            \r\n            if (_.isArray(points)) {\r\n                if (points.length) {\r\n                    if (_.isPlainObject(points[0])) { \r\n                        points = _.map(points, function(p){ return p.x + ',' + p.y; });\r\n                    }\r\n                    points = _.join(points, ',');\r\n                } else {\r\n                    points = '';\r\n                }\r\n            }\r\n\r\n            this.superclass.prototype.constructor.call(this, 'polygon', {\r\n                points: points\r\n            });\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            if (name == 'points' && _.isArray(value)) {\r\n                value = _.join(value, ',');\r\n            }\r\n            \r\n            return this.superclass.prototype.attr.call(this, name, value); // this.$super(name, value);\r\n        },\r\n\r\n        pathinfo: function() {\r\n            var command = Graph.util.polygon2path(this.attrs.points);\r\n            return Graph.path(command);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.graph.matrix.clone(),\r\n                origin = this.graph.matrix.clone(),\r\n                rotate = this.props.rotate,\r\n                ps = this.pathinfo().segments,\r\n                dt = [],\r\n                rx = ps[0][1],\r\n                ry = ps[0][2];\r\n\r\n            if (rotate) {\r\n                origin.rotate(-rotate, ps[0][1], ps[0][2]); \r\n                rx = origin.x(ps[0][1], ps[0][2]);\r\n                ry = origin.y(ps[0][1], ps[0][2]);\r\n            }\r\n\r\n            origin.scale(sx, sy, cx, cy);\r\n            matrix.scale(sx, sy, cx, cy);\r\n\r\n            _.forEach(ps, function(seg){\r\n                var ox, oy, x, y;\r\n                if (seg[0] != 'Z') {\r\n                    ox = seg[seg.length - 2];\r\n                    oy = seg[seg.length - 1];\r\n                    x = origin.x(ox, oy);\r\n                    y = origin.y(ox, oy);\r\n                    dt.push(x + ',' + y);\r\n                }\r\n            });\r\n\r\n            dt = _.join(dt, ' ');\r\n\r\n            this.reset();\r\n            this.attr('points', dt);\r\n\r\n            if (rotate) {\r\n                this.rotate(rotate, rx, ry).commit();\r\n            }\r\n            \r\n            return {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: rx,\r\n                    cy: ry\r\n                }\r\n            };\r\n        },\r\n        toString: function() {\r\n            return 'Graph.svg.Polygon';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.svg.Polygon.toString = function() {\r\n        return 'function(points)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Group = Graph.extend(Graph.svg.Vector, {\r\n\r\n        attrs: {\r\n            'stroke': null,\r\n            'stroke-width': null,\r\n            'class': null,\r\n            'fill': null,\r\n            'style': null\r\n        },\r\n        \r\n        constructor: function(x, y) {\r\n            // this.$super('g');\r\n            this.superclass.prototype.constructor.call(this, 'g');\r\n\r\n            if (x !== undefined && y !== undefined) {\r\n                this.graph.matrix.translate(x, y);\r\n                this.attr('transform', this.graph.matrix.toValue());\r\n            }\r\n        },\r\n\r\n        pathinfo: function() {\r\n            var size = this.dimension();\r\n            \r\n            return new Graph.lang.Path([\r\n                ['M', size.x, size.y], \r\n                ['l', size.width, 0], \r\n                ['l', 0, size.height], \r\n                ['l', -size.width, 0], \r\n                ['z']\r\n            ]);\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Group';\r\n        }\r\n        \r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.svg.Group.toString = function() {\r\n        return 'function(x, y)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Text = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        attrs: {\r\n            'text-anchor': 'middle'\r\n        },  \r\n\r\n        props: {\r\n            id: '',\r\n            guid: '',\r\n            text: '',\r\n            type: 'text',\r\n            rotate: 0,\r\n            lineHeight: 1,\r\n            fontSize: 12,\r\n            traversable: true,\r\n            focusable: false,\r\n            selectable: true,\r\n            selected: false,\r\n            rendered: false\r\n        },\r\n\r\n        rows: [],\r\n\r\n        constructor: function(x, y, text) {\r\n            // this.$super('text', {\r\n            //     x: _.defaultTo(x, 0),\r\n            //     y: _.defaultTo(y, 0)\r\n            // });\r\n\r\n            this.superclass.prototype.constructor.call(this, 'text', {\r\n                x: _.defaultTo(x, 0),\r\n                y: _.defaultTo(y, 0)\r\n            });\r\n\r\n            this.attr({\r\n                'font-size': Graph.config.font.size\r\n            });\r\n\r\n            if (text) {\r\n                this.write(text);\r\n            }\r\n            \r\n            this.on('render', _.bind(this.onTextRender, this));\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            var result = this.superclass.prototype.attr.apply(this, [name, value]);\r\n            \r\n            if (name == 'font-size' && value !== undefined) {\r\n                this.props.fontSize = _.parseInt(value) || 12;\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        write: function(text) {\r\n            var me = this, parts, span;\r\n\r\n            if (text === undefined) {\r\n                return me.props.text;\r\n            }\r\n\r\n            parts = (text || '').split(\"\\n\");\r\n\r\n            me.empty();\r\n            me.rows = [];\r\n            \r\n            _.forEach(parts, function(t, i){\r\n                me.addSpan(t);\r\n            });\r\n\r\n            me.props.text = text;\r\n            me.cached.bbox = null;\r\n        },\r\n\r\n        addSpan: function(text) {\r\n            var me = this, span;\r\n    \r\n            text = _.defaultTo(text, '');\r\n\r\n            span = Graph.$('<tspan/>');\r\n            span.text(text);\r\n\r\n            me.elem.append(span);\r\n            me.rows.push(span);\r\n\r\n            return span;\r\n        },\r\n\r\n        /**\r\n         * Arrange position\r\n         */\r\n        arrange: function() {\r\n            var rows = this.rows,\r\n                size = this.props.fontSize,\r\n                line = this.props.lineHeight,\r\n                bbox = this.bbox().toJson();\r\n            \r\n            if (rows.length) {\r\n                for (var i = 0, ii = rows.length; i < ii; i++) {\r\n                    if (i) {\r\n                        rows[i].attr('x', this.attrs.x);\r\n                        rows[i].attr('dy', size * line);\r\n                    }\r\n                }\r\n\r\n                rows[0].attr('dy', 0);\r\n\r\n                // var box = this.bbox().toJson(),\r\n                //     off = this.attrs.y - (box.y + box.height / 2);\r\n\r\n                // if (off) {\r\n                //     rows[0].setAttribute('dy', off);    \r\n                // }\r\n                \r\n            }\r\n        },\r\n\r\n        wrap: function(width) {\r\n            var text = this.props.text,\r\n                words = text.split(/\\s+/).reverse(),\r\n                lines = [],\r\n                lineNo = 0,\r\n                lineHeight = this.props.lineHeight,\r\n                ax = this.attrs.x,\r\n                ay = this.attrs.y,\r\n                dy = 0;\r\n\r\n            var word, span;\r\n\r\n            this.empty();\r\n            this.rows = [];\r\n\r\n            span = this.addSpan();\r\n            span.attr({\r\n                x: ax, \r\n                y: ay, \r\n                dy: dy + 'em'\r\n            });\r\n\r\n            while((word = words.pop())) {\r\n                lines.push(word);\r\n                span.text(lines.join(' '));\r\n                if (span.node().getComputedTextLength() > width) {\r\n                    lines.pop();\r\n                    span.text(lines.join(' '));\r\n                    lines = [word];\r\n                    span = this.addSpan(word);\r\n                    span.attr({\r\n                        x: ax, \r\n                        y: ay, \r\n                        dy: (++lineNo * lineHeight) + 'em'\r\n                    });\r\n                }\r\n            }\r\n        },\r\n\r\n        center: function(target) {\r\n            if (target) {\r\n                var targetBox = target.bbox().toJson(),\r\n                    rotate = this.matrix().rotate();\r\n\r\n                var textBox, dx, dy, cx, cy;\r\n\r\n                this.reset();\r\n\r\n                textBox = this.bbox().toJson();   \r\n\r\n                dx = targetBox.width / 2;\r\n                dy = targetBox.height / 2;\r\n                cx = textBox.x + textBox.width / 2;\r\n                cy = textBox.y + textBox.height / 2;\r\n\r\n                if (rotate.deg) {\r\n                    this.translate(dx, dy).rotate(rotate.deg).commit();\r\n                } else {\r\n                    this.translate(dx, dy).commit();\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        pathinfo: function() {\r\n            var size = this.dimension();\r\n\r\n            return new Graph.lang.Path([\r\n                ['M', size.x, size.y], \r\n                ['l', size.width, 0], \r\n                ['l', 0, size.height], \r\n                ['l', -size.width, 0], \r\n                ['z']\r\n            ]);\r\n\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Text';\r\n        },\r\n\r\n        onTextRender: function() {\r\n            var me = this;\r\n            me.arrange();\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.svg.Text.toString = function() {\r\n        return 'function(x, y, text)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Image = Graph.extend(Graph.svg.Vector, {\r\n\r\n        attrs: {\r\n            preserveAspectRatio: 'none'\r\n        },\r\n\r\n        constructor: function(src, x, y, width, height) {\r\n            var me = this;\r\n\r\n            // me.$super('image', {\r\n            //     'xlink:href': src,\r\n            //     'x': _.defaultTo(x, 0),\r\n            //     'y': _.defaultTo(y, 0),\r\n            //     'width': _.defaultTo(width, 0),\r\n            //     'height': _.defaultTo(height, 0)\r\n            // });\r\n            \r\n            me.superclass.prototype.constructor.call(me, 'image', {\r\n                'xlink:href': src,\r\n                'x': _.defaultTo(x, 0),\r\n                'y': _.defaultTo(y, 0),\r\n                'width': _.defaultTo(width, 0),\r\n                'height': _.defaultTo(height, 0)\r\n            });\r\n            \r\n        },\r\n\r\n        align: function(value, scale) {\r\n            if (value == 'none') {\r\n                this.attr('preserveAspectRatio', 'none');\r\n\r\n                return this;\r\n            }\r\n\r\n            var aspect = this.attrs.preserveAspectRatio,\r\n                align = '';\r\n\r\n            aspect = /(meet|slice)/.test(aspect) \r\n                ? aspect.replace(/(.*)\\s*(meet|slice)/i, '$2')\r\n                : '';\r\n\r\n            scale = _.defaultTo(scale, aspect);\r\n            value = value.replace(/s+/, ' ').toLowerCase();\r\n\r\n            switch(value) {\r\n                case 'top left':\r\n                case 'left top':\r\n                    align = 'xMinYMin';\r\n                    break;\r\n                case 'top center':\r\n                case 'center top':\r\n                    align = 'xMidYMin';\r\n                    break;\r\n                case 'top right':\r\n                case 'right top':\r\n                    align = 'xMaxYMin';\r\n                    break;\r\n                case 'left':\r\n                    align = 'xMinYMid';\r\n                    break;\r\n                case 'center':\r\n                    align = 'xMidYMid';\r\n                    break;\r\n                case 'right':\r\n                    align = 'xMaxYMid';\r\n                    break;\r\n                case 'bottom left':\r\n                case 'left bottom':\r\n                    align = 'xMinYMax';\r\n                    break;\r\n                case 'bottom center':\r\n                case 'center bottom':\r\n                    align = 'xMidYMax';\r\n                    break;\r\n                case 'bottom right':\r\n                case 'right bottom':\r\n                    align = 'xMaxYMax';\r\n                    break;\r\n            }\r\n\r\n            aspect = align + (scale ? ' ' + scale : '');\r\n            this.attr('preserveAspectRatio', aspect);\r\n\r\n            return this;\r\n        },\r\n\r\n        pathinfo: function() {\r\n            var a = this.attrs;\r\n\r\n            return new Graph.lang.Path([\r\n                ['M', a.x, a.y], \r\n                ['l', a.width, 0], \r\n                ['l', 0, a.height], \r\n                ['l', -a.width, 0], \r\n                ['z']\r\n            ]);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var ms = this.graph.matrix.clone().scale(sx, sy, cx, cy),\r\n                ro = this.graph.matrix.rotate();\r\n\r\n            this.reset();\r\n\r\n            var x = ms.x(this.attrs.x, this.attrs.y),\r\n                y = ms.y(this.attrs.x, this.attrs.y),\r\n                w = +this.attrs.width * sx,\r\n                h = +this.attrs.height * sy;\r\n\r\n            this.attr({\r\n                x: x,\r\n                y: y,\r\n                width: w,\r\n                height: h\r\n            });\r\n            \r\n            this.rotate(ro, x, y).commit();\r\n\r\n            return {\r\n                matrix: ms,\r\n                x: x,\r\n                y: y\r\n            };\r\n        },\r\n        toString: function() {\r\n            return 'Graph.svg.Image';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.svg.Image.toString = function() {\r\n        return 'function(src, x, y, width, height)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    /**\r\n     * Paper - root viewport\r\n     */\r\n\r\n    var Paper = Graph.svg.Paper = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        attrs: {\r\n            'class': Graph.styles.PAPER\r\n        },\r\n\r\n        props: {\r\n            id: null,\r\n            guid: null,\r\n            type: 'paper',\r\n            text: null,\r\n            rotate: 0,\r\n\r\n            traversable: false,\r\n            selectable: false,\r\n            selected: false,\r\n            focusable: false,\r\n\r\n            rendered: false,\r\n            showOrigin: true,\r\n            zoomable: true\r\n        },\r\n\r\n        components: {\r\n            viewport: null\r\n        },\r\n\r\n        drawing: {\r\n            pallets: null,\r\n            diagram: null\r\n        },\r\n\r\n        constructor: function(width, height, options) {\r\n            var me = this;\r\n            \r\n            me.superclass.prototype.constructor.call(me, 'svg', {\r\n                'xmlns': Graph.config.xmlns.svg,\r\n                'xmlns:link': Graph.config.xmlns.xlink,\r\n                'version': Graph.config.svg.version\r\n                // 'width': _.defaultTo(width, 200),\r\n                // 'height': _.defaultTo(height, 200)\r\n            });\r\n\r\n            _.assign(me.props, options || {});\r\n\r\n            me.style({\r\n                overflow: 'hidden',\r\n                position: 'relative'\r\n            });\r\n\r\n            me.interactable();\r\n            me.initLayout();\r\n\r\n            me.plugins.collector = new Graph.plugin.Collector(me);\r\n            me.plugins.toolmgr.register('collector', 'plugin');\r\n\r\n            me.plugins.linker = new Graph.plugin.Linker(me);\r\n            me.plugins.toolmgr.register('linker', 'plugin');\r\n            \r\n            me.plugins.pencil = new Graph.plugin.Pencil(me);\r\n            me.plugins.definer = new Graph.plugin.Definer(me);\r\n            \r\n            me.plugins.snapper = new Graph.plugin.Snapper(me);\r\n            me.plugins.toolpad = new Graph.plugin.Toolpad(me);\r\n\r\n            me.on('pointerdown', _.bind(me.onPointerDown, me));\r\n            me.on('keynavdown', _.bind(me.onKeynavDown, me));\r\n            me.on('keynavup', _.bind(me.onKeynavUp, me));\r\n            \r\n            // subscribe topics\r\n            Graph.topic.subscribe('link/update', _.bind(me.listenLinkUpdate, me));\r\n            Graph.topic.subscribe('link/remove', _.bind(me.listenLinkRemove, me));\r\n            Graph.topic.subscribe('shape/draw',  _.bind(me.listenShapeDraw, me));\r\n\r\n            // drawings\r\n            me.drawing.pallets = [];\r\n        },\r\n\r\n        initLayout: function() {\r\n            // create viewport\r\n            var viewport = (new Graph.svg.Group())\r\n                .addClass(Graph.styles.VIEWPORT)\r\n                .selectable(false);\r\n\r\n            viewport.props.viewport = true;\r\n            \r\n            this.components.viewport = viewport.guid();\r\n\r\n            if (this.props.showOrigin) {\r\n                var origin = Graph.$(\r\n                    '<g class=\"graph-origin\">' + \r\n                        '<rect class=\"x\" rx=\"1\" ry=\"1\" x=\"-16\" y=\"-1\" height=\"1\" width=\"30\"></rect>' + \r\n                        '<rect class=\"y\" rx=\"1\" ry=\"1\" x=\"-1\" y=\"-16\" height=\"30\" width=\"1\"></rect>' + \r\n                        '<text class=\"t\" x=\"-40\" y=\"-10\">(0, 0)</text>' + \r\n                    '</g>'\r\n                );\r\n                \r\n                origin.appendTo(viewport.elem);\r\n                origin = null;\r\n            }\r\n\r\n            // render viewport\r\n            viewport.tree.paper = viewport.tree.parent = this.guid();\r\n            viewport.translate(0.5, 0.5).commit();\r\n\r\n            this.elem.append(viewport.elem);\r\n            this.children().push(viewport);\r\n\r\n            viewport.on('render', function(){\r\n                viewport.cascade(function(c){\r\n                    if (c !== viewport && ! c.props.rendered) {\r\n                        c.props.rendered = true;\r\n                        c.tree.paper = viewport.tree.paper;\r\n                        c.fire('render');\r\n                    }\r\n                });\r\n            });\r\n\r\n            this.layout('default');\r\n        },\r\n\r\n        layout: function(options) {\r\n            var viewport = this.viewport();\r\n\r\n            if (options === undefined) {\r\n                return viewport.graph.layout;\r\n            }\r\n            \r\n            viewport.layout(options);\r\n            return this;\r\n        },\r\n\r\n        shape: function(names, options) {\r\n            var shape = Graph.shape(names, options);\r\n            shape.render(this);\r\n            \r\n            return shape;\r\n        },\r\n\r\n        render: function(container) {\r\n            var me = this, \r\n                vp = me.viewport(),\r\n                id = me.guid();\r\n\r\n            if (me.props.rendered) {\r\n                return;\r\n            }\r\n\r\n            container = Graph.$(container);\r\n            container.append(me.elem);\r\n\r\n            me.tree.container = container;\r\n            \r\n            me.elem.css({\r\n                width: '100%',\r\n                height: '100%'\r\n            });\r\n            \r\n            me.props.rendered = true;\r\n            me.fire('render');\r\n\r\n            vp.props.rendered = true;\r\n            vp.fire('render');\r\n\r\n            if (me.props.zoomable) {\r\n                me.zoomable();\r\n                \r\n                var debounce = _.debounce(function(){\r\n                    debounce.flush();\r\n                    debounce = null;\r\n                    \r\n                    me.tool().activate('panzoom');\r\n                }, 1000);\r\n                \r\n                debounce();\r\n            }\r\n\r\n            return me;\r\n        },\r\n\r\n        container: function() {\r\n            return this.tree.container;\r\n        },\r\n\r\n        selections: function() {\r\n            return this.plugins.collector.selections;\r\n        },\r\n\r\n        removeSelection: function() {\r\n            var selections = this.plugins.collector.collection;\r\n            \r\n            for (var v, i = selections.length - 1; i >= 0; i--) {\r\n                v = selections[i];\r\n                selections.splice(i, 1);\r\n                v.remove();\r\n            }\r\n        },\r\n\r\n        viewport: function() {\r\n            return Graph.registry.vector.get(this.components.viewport);\r\n        },\r\n\r\n        // @Override\r\n        scale: function(sx, sy, cx, cy) {\r\n            if (sx === undefined) {\r\n                return this.viewport().matrix().scale();\r\n            }\r\n            return this.plugins.transformer.scale(sx, sy, cx, cy);\r\n        },\r\n\r\n        width: function() {\r\n            return this.elem.width();\r\n        },\r\n\r\n        height: function() {\r\n            return this.elem.height();\r\n        },\r\n\r\n        connect: function(source, target, start, end, options) {\r\n            var layout, router, link;\r\n\r\n            if (start) {\r\n                if ( ! Graph.isPoint(start)) {\r\n                    options = start;\r\n                    start = null;\r\n                    end = null;    \r\n                }\r\n            }\r\n\r\n            source = Graph.isShape(source) ? source.provider('network') : source;\r\n            target = Graph.isShape(target) ? target.provider('network') : target;\r\n            layout = this.layout();\r\n            router = layout.createRouter(source, target, options);\r\n            \r\n            link = layout.createLink(router);\r\n            \r\n            link.connect(start, end);\r\n            link.render(this);\r\n\r\n            return link;\r\n        },\r\n        \r\n        addPallet: function(pallet) {\r\n            var guid = pallet.guid();\r\n            this.drawing.pallets.push(guid);\r\n        },\r\n        \r\n        removePallet: function(pallet) {\r\n            var guid = pallet.guid();\r\n            var index = _.indexOf(this.drawing.pallets, guid);\r\n            if (index > -1) {\r\n                this.drawing.pallets.splice(index, 1);\r\n            }\r\n        },\r\n\r\n        parse: function(json) {\r\n            var paper  = this;\r\n            var shapes = {};\r\n\r\n            _.forEach(json.shapes, function(o){\r\n                (function(o){\r\n                    var s = Graph.shape(o.type, o.data);\r\n                    s.render(paper);\r\n                    shapes[o.data.id] = s;    \r\n                }(o));\r\n            });\r\n\r\n            _.forEach(json.links, function(o){\r\n                (function(o){\r\n                    paper.connect(shapes[o.source], shapes[o.target]);\r\n                }(o))\r\n            });\r\n\r\n        },\r\n\r\n        save: function() {\r\n            alert('save');\r\n        },\r\n\r\n        diagram: function(type, options) {\r\n            var clazz = Graph.diagram[_.capitalize(type)];\r\n            var diagram = Graph.factory(clazz, options || {});\r\n            \r\n            this.drawing.diagram = diagram;\r\n            return diagram;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Paper';\r\n        },\r\n\r\n        ///////// OBSERVERS /////////\r\n        \r\n        onPointerDown: function(e) {\r\n\r\n        },\r\n\r\n        onKeynavDown: function(e) {\r\n            var me = this, key = e.keyCode;\r\n\r\n            switch(key) {\r\n                case Graph.event.DELETE:\r\n                    me.removeSelection();\r\n                    e.preventDefault();\r\n                    break;\r\n\r\n                case Graph.event.SHIFT:\r\n                    \r\n                    break;\r\n\r\n                case Graph.event.ESC:\r\n\r\n                    break;\r\n            }   \r\n\r\n        },\r\n\r\n        onKeynavUp: function(e) {\r\n            var me = this, key = e.keyCode;\r\n\r\n            switch(key) {\r\n                case Graph.event.SHIFT:\r\n\r\n                    break;\r\n            }\r\n        },\r\n\r\n        saveAsImage: function(filename) {\r\n            var exporter = new Graph.data.Exporter(this);\r\n            exporter.exportPNG(filename);\r\n            exporter = null;\r\n        },\r\n        \r\n        saveAsBlob: function(callback) {\r\n            var exporter = new Graph.data.Exporter(this);\r\n            return exporter.exportBlob(callback);\r\n        },\r\n\r\n        /**\r\n         * save workspace\r\n         */\r\n        save: function() {\r\n\r\n        },\r\n\r\n        ///////// TOPIC LISTENERS /////////\r\n        \r\n        listenLinkUpdate: _.debounce(function() {\r\n            this.layout().arrangeLinks();\r\n        }, 300),\r\n        \r\n        listenLinkRemove: _.debounce(function(){\r\n            this.layout().arrangeLinks();\r\n        }, 10),\r\n\r\n        listenShapeDraw: _.debounce(function() {\r\n            this.layout().arrangeShapes();\r\n        }, 1)\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n    \r\n    Paper.toString = function() {\r\n        return 'function( width, height )';\r\n    };\r\n\r\n    ///////// EXTENSIONS /////////\r\n\r\n    var vectors = {\r\n        ellipse: 'Ellipse',\r\n        circle: 'Circle',\r\n        rect: 'Rect',\r\n        path: 'Path',\r\n        polyline: 'Polyline',\r\n        polygon: 'Polygon',\r\n        group: 'Group',\r\n        text: 'Text',\r\n        image: 'Image',\r\n        line: 'Line'\r\n    };\r\n\r\n    _.forOwn(vectors, function(name, method){\r\n        (function(name, method){\r\n            Paper.prototype[method] = function() {\r\n                var arg = [name].concat(_.toArray(arguments)),\r\n                    svg = Graph.svg.apply(null, arg);\r\n\r\n                svg.tree.paper = this.guid();\r\n                svg.render(this);\r\n\r\n                arg = null;\r\n                return svg;\r\n            };\r\n        }(name, method));\r\n    });\r\n\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Link = Graph.link.Link = Graph.extend({\r\n        \r\n        props: {\r\n            id: null,\r\n            guid: null,\r\n            rendered: false,\r\n            selected: false,\r\n            label: '',\r\n            labelDistance: null,\r\n            labelX: null,\r\n            labelY: null,\r\n            source: null,\r\n            target: null,\r\n            connected: false\r\n        },\r\n\r\n        components: {\r\n            block: null,\r\n            coat: null,\r\n            path: null,\r\n            label: null,\r\n            editor: null\r\n        },\r\n\r\n        cached: {\r\n            bendpoints: null,\r\n            controls: null,\r\n            convex: null\r\n        },\r\n        \r\n        handlers: {\r\n            source: null,\r\n            target: null\r\n        },\r\n        \r\n        router: null,\r\n        \r\n        metadata: {\r\n            icon: Graph.icons.SHAPE_LINK\r\n        },\r\n\r\n        constructor: function(router, options) {\r\n            options = _.extend({\r\n                id: 'graph-link-' + (++Link.guid)\r\n            }, options || {});\r\n\r\n            _.assign(this.props, options);\r\n\r\n            this.props.guid = this.props.id; // Graph.uuid();\r\n            this.router = router;\r\n\r\n            this.initComponent();\r\n            this.initMetadata();\r\n            \r\n            this.bindResource('source', router.source());\r\n            this.bindResource('target', router.target());\r\n\r\n            this.router.on('route', _.bind(this.onRouterRoute, this));\r\n            this.router.on('reroute', _.bind(this.onRouterReroute, this));\r\n            \r\n            Graph.registry.link.register(this);\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components;\r\n            var block, coat, path, editor, label;\r\n\r\n            block = (new Graph.svg.Group())\r\n                .addClass('graph-link')\r\n                .selectable(false);\r\n                \r\n            block.elem.data(Graph.string.ID_LINK, this.props.guid);\r\n\r\n            coat = (new Graph.svg.Path())\r\n                .addClass('graph-link-coat')\r\n                .render(block);\r\n\r\n            coat.data('text', this.props.label);\r\n            coat.elem.data(Graph.string.ID_LINK, this.props.guid);\r\n\r\n            coat.draggable({\r\n                ghost: true,\r\n                manual: true,\r\n                batchSync: false\r\n            });\r\n            \r\n            coat.editable({\r\n                width: 150,\r\n                height: 80,\r\n                offset: 'pointer'\r\n            });\r\n\r\n            coat.on('pointerdown.link', _.bind(this.onCoatClick, this));\r\n            coat.on('select.link', _.bind(this.onCoatSelect, this));\r\n            coat.on('deselect.link', _.bind(this.onCoatDeselect, this));\r\n            coat.on('dragstart.link', _.bind(this.onCoatDragStart, this));\r\n            coat.on('dragend.link', _.bind(this.onCoatDragEnd, this));\r\n            coat.on('edit.link', _.bind(this.onCoatEdit, this));\r\n            coat.on('beforeedit.link', _.bind(this.onCoatBeforeEdit, this));\r\n            coat.on('remove.link', _.bind(this.onCoatRemove, this));\r\n\r\n            path = (new Graph.svg.Path())\r\n                .addClass('graph-link-path')\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .attr('marker-end', 'url(#marker-arrow)')\r\n                .render(block);\r\n\r\n            path.elem.data(Graph.string.ID_LINK, this.props.guid);\r\n\r\n            label = (new Graph.svg.Text(0, 0, ''))\r\n                .addClass('graph-link-label')\r\n                .selectable(false)\r\n                .render(block);\r\n            \r\n            label.draggable({ghost: true});\r\n            \r\n            label.on('render.link', _.bind(this.onLabelRender, this));\r\n            label.on('dragend.link', _.bind(this.onLabelDragend, this));\r\n\r\n            // enable label doubletap\r\n            var labelVendor = label.interactable().vendor();\r\n            labelVendor.on('doubletap', _.bind(this.onLabelDoubletap, this));\r\n                \r\n            editor = (new Graph.svg.Group())\r\n                .selectable(false)\r\n                .render(block);\r\n                \r\n            comp.block = block.guid();\r\n            comp.coat = coat.guid();\r\n            comp.path = path.guid();\r\n            comp.label = label.guid();\r\n            comp.editor = editor.guid();\r\n        },\r\n        \r\n        initMetadata: function() {\r\n            this.metadata.tools = [\r\n                {\r\n                    name: 'sendtofront',\r\n                    icon: Graph.icons.SEND_TO_FRONT,\r\n                    title: Graph._('Send to front'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onFrontToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtoback',\r\n                    icon: Graph.icons.SEND_TO_BACK,\r\n                    title: Graph._('Send to back'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBackToolClick, this)\r\n                },\r\n                {\r\n                    name: 'trash', \r\n                    icon: Graph.icons.TRASH, \r\n                    title: Graph._('Click to remove link'), \r\n                    enabled: true,\r\n                    handler: _.bind(this.onTrashToolClick, this)\r\n                }\r\n            ];\r\n        },\r\n        \r\n        unbindResource: function(type) {\r\n            var existing = this.props[type],\r\n                handlers = this.handlers[type];\r\n            \r\n            if (existing && handlers) {\r\n                existing = Graph.registry.vector.get(existing);\r\n                if (existing) {\r\n                    var name, ns;\r\n                    for (name in handlers) {\r\n                        ns = name + '.link';\r\n                        existing.off(ns, handlers[name]);\r\n                        ns = null;\r\n                    }\r\n                }\r\n            }\r\n            \r\n            handlers = null;\r\n            \r\n            return this;\r\n        },\r\n        \r\n        bindResource: function(type, resource) {\r\n            var router = this.router,\r\n                handlers = this.handlers[type];\r\n            \r\n            this.unbindResource(type, resource);\r\n            \r\n            handlers = {};\r\n    \r\n            handlers.resize    = _.bind(getHandler(this, type, 'resize'), this);\r\n            handlers.rotate    = _.bind(getHandler(this, type, 'rotate'), this);\r\n            handlers.dragstart = _.bind(getHandler(this, type, 'dragstart'), this, _, resource);\r\n            handlers.dragmove  = _.bind(getHandler(this, type, 'dragmove'), this);\r\n            handlers.dragend   = _.bind(getHandler(this, type, 'dragend'), this);\r\n\r\n            this.handlers[type] = handlers;\r\n            this.props[type] = resource.guid();\r\n            \r\n            resource.on('resize.link', handlers.resize);\r\n            resource.on('rotate.link', handlers.rotate);\r\n            \r\n            // VERY EXPENSIVE!!!\r\n            if (resource.isDraggable()) {\r\n                resource.on('dragstart.link', handlers.dragstart);\r\n                if ( ! resource.draggable().ghost()) {\r\n                    resource.on('dragmove.link', handlers.dragmove);\r\n                } else {\r\n                    resource.on('dragend.link', handlers.dragend);\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        bindSource: function(source) {\r\n            return this.bindResource('source', source);\r\n        },\r\n\r\n        bindTarget: function(target) {\r\n            return this.bindResource('target', target);\r\n        },\r\n        \r\n        unbindSource: function(source) {\r\n            return this.unbindResource('source');\r\n        },\r\n        \r\n        unbindTarget: function(target) {\r\n            return this.unbindResource('target');\r\n        },\r\n\r\n        component: function(name) {\r\n            if (name === undefined) {\r\n                return Graph.registry.vector.get(this.components.block);\r\n            }\r\n            return Graph.registry.vector.get(this.components[name]);\r\n        },\r\n        \r\n        invalidate: function() {\r\n            this.cached.bendpoints = null;\r\n        },\r\n\r\n        render: function(container) {\r\n            var paper;\r\n\r\n            this.component().render(container);\r\n            paper = container.paper();\r\n\r\n            if (paper) {\r\n                Graph.registry.link.setContext(this.guid(), paper.guid());\r\n            }\r\n        },\r\n\r\n        id: function() {\r\n            return this.props.id;\r\n        },\r\n\r\n        guid: function() {\r\n            return this.props.guid;\r\n        },\r\n\r\n        connect: function(/*start, end*/) {\r\n            // already connected ?\r\n            if (this.props.connected) {\r\n                return;\r\n            }\r\n            \r\n            this.router.route();\r\n\r\n            var source = this.router.source(),\r\n                target = this.router.target();\r\n\r\n            source.connectable().addLink(this, 'outgoing', target);\r\n            target.connectable().addLink(this, 'incoming', source);\r\n\r\n            this.props.connected = true;\r\n        },\r\n\r\n        disconnect: function() {\r\n            // already disconnected ?\r\n            if ( ! this.props.connected) {\r\n                return;\r\n            }\r\n            \r\n            // unbind resource\r\n            // this.unbindResource('source');\r\n            // sthis.unbindResource('target');\r\n            \r\n            this.props.connected = false;\r\n            this.router.reset();\r\n            this.update(this.router.command());\r\n        },\r\n        \r\n        update: function(command, silent) {\r\n            \r\n            silent = _.defaultTo(silent, false);\r\n            \r\n            this.component('coat').attr('d', command).dirty(true);\r\n            this.component('path').attr('d', command);\r\n            this.invalidate();\r\n            \r\n            if ( ! silent) {\r\n                this.redraw();\r\n                this.fire('update');\r\n                Graph.topic.publish('link/update');\r\n            }\r\n        },\r\n        \r\n        refresh: function(silent) {\r\n            var command = this.router.command();\r\n            this.update(command, silent);\r\n        },\r\n\r\n        updateConvex: function(convex) {\r\n            this.cached.convex = convex;\r\n        },\r\n        \r\n        removeConvex: function() {\r\n            this.cached.convex = null;\r\n        },\r\n        \r\n        redraw: function() {\r\n            // TODO: update label position\r\n            \r\n            if (this.props.label) {\r\n                var label = this.component('label'),\r\n                    bound = label.bbox().toJson(),\r\n                    distance = this.props.labelDistance || .5,\r\n                    scale = this.router.layout().scale(),\r\n                    path = this.router.pathinfo(),\r\n                    dots = path.pointAt(distance * path.length(), true),\r\n                    align = Graph.util.pointAlign(dots.start, dots.end, 10);\r\n                \r\n                if (align == 'h') {\r\n                    dots.x += ((10 + bound.width / 2) / scale.x);\r\n                } else {\r\n                    dots.y -= ((10 + bound.height / 2) / scale.y);\r\n                }\r\n                \r\n                label.attr({\r\n                    x: dots.x,\r\n                    y: dots.y\r\n                });\r\n                \r\n                path = null;\r\n                dots = null;\r\n\r\n                label.dirty(true);\r\n            }\r\n            \r\n        },\r\n        \r\n        label: function(text, x, y) {\r\n            var path, distance, point, align;\r\n            \r\n            if (text === undefined) {\r\n                return this.props.label;\r\n            }\r\n\r\n            this.props.label = text;\r\n            \r\n            if (x !== undefined && y !== undefined) {\r\n                path = this.router.pathinfo();\r\n                point = path.nearest({x: x, y: y});\r\n                distance = point.distance / path.length();\r\n            } else if (_.isNull(this.props.labelDistance)) {\r\n                path = this.router.pathinfo();\r\n                distance = 0.5;\r\n                point = path.pointAt(path.length() / 2, true);\r\n            }\r\n            \r\n            if (point) {\r\n                this.props.labelDistance = distance;\r\n                path = point = null;\r\n            }\r\n            \r\n            this.component('label').write(text);\r\n            this.component('coat').data('text', text);\r\n            \r\n            this.redraw();\r\n            return this;\r\n        },\r\n\r\n        select: function(batch) {\r\n            this.props.selected = true;\r\n            this.component('block').addClass('selected');\r\n            \r\n            if ( ! batch) {\r\n                //this.sendToFront();\r\n                this.resumeControl();\r\n\r\n                Graph.topic.publish('link/select', {link: this});\r\n            }\r\n        },\r\n\r\n        deselect: function(batch) {\r\n            this.props.selected = false;\r\n            this.component('block').removeClass('selected');\r\n\r\n            if ( ! batch) {\r\n                this.suspendControl();\r\n                Graph.topic.publish('link/deselect', {link: this});    \r\n            }\r\n        },\r\n        \r\n        renderControl: function() {\r\n            // TODO: render bends control\r\n        },\r\n        \r\n        resumeControl: function() {\r\n            var me = this, editor = me.component('editor');\r\n\r\n            if ( ! me.cached.bendpoints) {\r\n                me.cached.bendpoints = me.router.bendpoints();\r\n                me.renderControl();\r\n            }\r\n\r\n            editor.elem.appendTo(this.component('block').elem);\r\n        },\r\n        \r\n        suspendControl: function() {\r\n            this.component('editor').elem.detach();\r\n        },\r\n\r\n        sendToFront: function() {\r\n            var container = this.component().parent();\r\n            this.component().elem.appendTo(container.elem);\r\n        },\r\n\r\n        remove: function() {\r\n            var me = this;\r\n            var prop;\r\n            \r\n            // disconnect first\r\n            this.disconnect();\r\n            \r\n            // remove from source & target\r\n            var source = this.router.source(),\r\n                target = this.router.target();\r\n            \r\n            source.connectable().removeLink(this);\r\n            target.connectable().removeLink(this);\r\n            \r\n            // remove label\r\n            me.component('label').remove();\r\n\r\n            // remove vertexs\r\n            if (me.cached.controls) {\r\n                _.forEach(me.cached.controls, function(id){\r\n                    var c = Graph.registry.vector.get(id);\r\n                    c && c.remove();\r\n                });\r\n                me.cached.controls = null;\r\n            }\r\n\r\n            // remove editor\r\n            me.component('editor').remove();\r\n\r\n            // remove path\r\n            me.component('path').remove();\r\n\r\n            // remove block\r\n            me.component('block').remove();\r\n            \r\n            for (prop in me.components) {\r\n                me.components[prop] = null;\r\n            }\r\n\r\n            // unbind resource\r\n            this.unbindSource();\r\n            this.unbindTarget();\r\n\r\n            // clear cache\r\n            for (prop in me.cached) {\r\n                me.cached[prop] = null;\r\n            }\r\n\r\n            me.router.destroy();\r\n            me.router = null;\r\n\r\n            // unregister\r\n            Graph.registry.link.unregister(me);\r\n            \r\n            // publish\r\n            Graph.topic.publish('link/remove');\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.link.Link';\r\n        },\r\n\r\n        ///////// OBSERVERS /////////\r\n        \r\n        onRouterRoute: function(e) {\r\n            var command = e.command;\r\n            this.update(command);\r\n        },\r\n        \r\n        onRouterReroute: function(e) {\r\n            var source = e.source,\r\n                target = e.target;\r\n\r\n            this.bindResource('source', source);\r\n            this.bindResource('target', target);\r\n            this.sendToFront();\r\n        },\r\n        \r\n        onLabelRender: function(e) {\r\n            if (this.props.label) {\r\n                this.label(this.props.label);\r\n            }\r\n        },\r\n        \r\n        onLabelDragend: function(e) {\r\n            var label = this.component('label'),\r\n                matrix = label.matrix(),\r\n                x = label.attrs.x,\r\n                y = label.attrs.y,\r\n                p = {\r\n                    x: matrix.x(x, y),\r\n                    y: matrix.y(x, y)\r\n                }\r\n            \r\n            label.attr({\r\n                x: p.x,\r\n                y: p.y\r\n            });\r\n            \r\n            // update label distance\r\n            var path = this.router.pathinfo(),\r\n                near = path.nearest(p);\r\n            \r\n            this.props.labelDistance = near.distance / path.length();\r\n            \r\n            label.reset();\r\n            \r\n            matrix = path = null;\r\n        },\r\n\r\n        onLabelDoubletap: function(e) {\r\n            var coat = this.component('coat');\r\n            coat.editable().startEdit(e);\r\n        },\r\n\r\n        onCoatBeforeEdit: function(e) {\r\n            this.component('label').hide();\r\n            this.component().addClass('editing');\r\n        },\r\n\r\n        onCoatEdit: function(e) {\r\n            this.component().removeClass('editing');\r\n            this.component('label').show();\r\n            this.label(e.text, e.left, e.top);\r\n        },\r\n\r\n        onCoatClick: function(e) {\r\n            var paper = this.component('coat').paper();\r\n            if (paper.state() == 'linking') {\r\n                paper.tool().activate('panzoom');\r\n            }\r\n        },\r\n\r\n        onCoatSelect: function(e) {\r\n            this.select(e.batch);\r\n        },\r\n\r\n        onCoatDeselect: function(e) {\r\n            this.deselect(e.batch);\r\n        },\r\n\r\n        onCoatDragStart: function(e) {\r\n            this.suspendControl();\r\n        },\r\n\r\n        onCoatDragEnd: function(e) {\r\n            var dx = e.dx,\r\n                dy = e.dy;\r\n            this.router.relocate(dx, dy);\r\n            this.update(this.router.command());\r\n        },\r\n\r\n        onCoatRemove: function(e) {\r\n            this.remove();\r\n        },\r\n\r\n        ///////// OBSERVERS /////////\r\n        \r\n        onSourceRotate: function() {\r\n    \r\n        },\r\n\r\n        onSourceDragstart: function(e, source) {\r\n            var lasso = this.component('coat').lasso;\r\n            \r\n            if ( ! source.lasso) {\r\n                if (lasso) {\r\n                    lasso.decollect(this.component('coat'));\r\n                }\r\n            }\r\n\r\n            // remove convex\r\n            this.cached.convex = null;\r\n        },\r\n\r\n        onSourceDragmove: function() {\r\n            this.router.repair('source');\r\n        },\r\n\r\n        onSourceDragend: function(e) {\r\n            var lasso = this.component('coat').lasso;\r\n            if ( ! lasso) {\r\n                var port = this.router.tail();\r\n                if (port) {\r\n                    port.x += e.dx;\r\n                    port.y += e.dy;\r\n                    this.router.repair(this.router.source(), port);\r\n                }\r\n            }\r\n        },\r\n\r\n        onSourceResize: function(e) {\r\n            var port = this.router.tail();\r\n            if (port) {\r\n                port.x += e.translate.dx;\r\n                port.y += e.translate.dy;\r\n            \r\n                this.router.repair(this.router.source(), port);\r\n            }\r\n        },\r\n\r\n        onTargetRotate: function() {\r\n            \r\n        },\r\n\r\n        onTargetDragstart: function(e, target) {\r\n            var lasso = this.component('coat').lasso;\r\n\r\n            if ( ! target.lasso) {\r\n                if (lasso) {\r\n                    lasso.decollect(this.component('coat'));\r\n                }\r\n            }\r\n\r\n            // remove convex\r\n            this.cached.convex = null;\r\n        },\r\n\r\n        onTargetDragmove: function() {\r\n            this.router.repair('target');\r\n        },\r\n\r\n        onTargetDragend: function(e) {\r\n            var lasso = this.component('coat').lasso;\r\n            if ( ! lasso) {\r\n                var port = this.router.head();\r\n                if (port) {\r\n                    port.x += e.dx;\r\n                    port.y += e.dy;\r\n                    \r\n                    this.router.repair(this.router.target(), port);\r\n                }\r\n            }\r\n        },\r\n\r\n        onTargetResize: function(e) {\r\n            var port = this.router.head();\r\n            if (port) {\r\n                port.x += e.translate.dx;\r\n                port.y += e.translate.dy;\r\n                \r\n                this.router.repair(this.router.target(), port);\r\n            }\r\n        },\r\n        \r\n        onTrashToolClick: function(e) {\r\n            this.component('coat').remove();\r\n        },\r\n\r\n        onFrontToolClick: function(e) {\r\n            this.sendToFront();\r\n        },\r\n\r\n        onBackToolClick: function(e) {\r\n            \r\n        },\r\n\r\n        destroy: function() {\r\n            \r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n    \r\n    Link.guid = 0;\r\n\r\n    Link.toString = function() {\r\n        return 'function(router, options)';\r\n    };\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function getHandler(scope, resource, handler) {\r\n        var name = 'on' + _.capitalize(resource) + _.capitalize(handler),\r\n            func = scope[name];\r\n        name = null;\r\n        return func;\r\n    }\r\n\r\n}());","\r\n(function(){\r\n\r\n    var storage = {};\r\n\r\n    var Registry = function() {\r\n        \r\n    };\r\n    \r\n    Registry.prototype.constructor = Registry;\r\n\r\n    Registry.prototype.register = function(pallet) {\r\n        var id = pallet.guid();\r\n        storage[id] = pallet;\r\n    };\r\n\r\n    Registry.prototype.unregister = function(pallet) {\r\n        var id = pallet.guid();\r\n        if (storage[id]) {\r\n            delete storage[id];\r\n        }\r\n    };\r\n\r\n    Registry.prototype.get = function(key) {\r\n        if (key === undefined) {\r\n            return this.toArray();\r\n        }\r\n        return storage[key];\r\n    };\r\n\r\n    Registry.prototype.toArray = function() {\r\n        var keys = _.keys(storage);\r\n        return _.map(keys, function(k){\r\n            return storage[k];\r\n        });\r\n    };\r\n\r\n    Registry.prototype.toString = function() {\r\n        return 'Graph.registry.Pallet';\r\n    };\r\n\r\n    Graph.registry.pallet = new Registry();\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.layout.Layout = Graph.extend({\r\n        \r\n        props: {\r\n            // view config\r\n            fit: true,\r\n            view: null,\r\n            width: 0,\r\n            height: 0,\r\n\r\n            // router config\r\n            router: {\r\n                type: 'orthogonal'\r\n            },\r\n\r\n            link: {\r\n                smooth: true,\r\n                smootness: 6\r\n            }\r\n        },\r\n        \r\n        view: null,\r\n\r\n        cached: {\r\n            offset: null\r\n        },\r\n\r\n        constructor: function(view, options) {\r\n            _.assign(this.props, options || {});\r\n            this.props.view = view.guid();\r\n        },\r\n\r\n        view: function() {\r\n            return Graph.registry.vector.get(this.props.view);\r\n        },\r\n\r\n        paper: function() {\r\n            return this.view().paper();\r\n        },\r\n\r\n        offset: function() {\r\n            var offset = this.cached.offset;\r\n            var view, node;\r\n\r\n            if ( ! offset) {\r\n                view = this.view();\r\n                node = view.isViewport() ? view.parent().node() : view.node();\r\n                offset = node.getBoundingClientRect();\r\n                this.cached.offset = offset;\r\n            }\r\n\r\n            return offset;\r\n        },\r\n\r\n        center: function() {\r\n            var center = this.cached.center;\r\n\r\n            if ( ! center) {\r\n                var offset = this.offset();\r\n\r\n                center = {\r\n                    x: offset.width / 2,\r\n                    y: offset.height / 2\r\n                };\r\n\r\n                this.cached.center = _.extend({}, center);\r\n            }\r\n\r\n            return center;\r\n        },\r\n\r\n        scale: function() {\r\n            return this.view().matrix().scale();\r\n        },\r\n\r\n        width: function() {\r\n            var view, bbox, width;\r\n\r\n            view = this.view();\r\n\r\n            if (view.isViewport()) {\r\n                width = this.paper().width();\r\n            } else {\r\n                bbox  = view.bbox();\r\n                width = bbox.width();\r\n            }\r\n\r\n            view = bbox = null;\r\n            return width;\r\n        },\r\n\r\n        height: function() {\r\n            var view, bbox, height;\r\n\r\n            view = this.view();\r\n\r\n            if (view.isViewport()) {\r\n                height = this.paper().height();\r\n            } else {\r\n                bbox   = view.bbox();\r\n                height = bbox.height();\r\n            }\r\n\r\n            view = bbox = null;\r\n            return height;\r\n        },\r\n        \r\n        invalidate: function() {\r\n            this.cached.offset = null;\r\n            this.cached.center = null;\r\n        },\r\n\r\n        grabVector: function(event) {\r\n            return Graph.registry.vector.get(event.target);\r\n        },\r\n\r\n        grabLink: function(event) {\r\n            return Graph.registry.link.get(event.target);\r\n        },\r\n\r\n        grabLocation: function(event) {\r\n            var x = event.clientX,\r\n                y = event.clientY,\r\n                offset = this.offset(),\r\n                matrix = this.view().matrix(),\r\n                invert = matrix.clone().invert(),\r\n                scale  = matrix.scale(),\r\n                location = {\r\n                    x: invert.x(x, y),\r\n                    y: invert.y(x, y)\r\n                };\r\n\r\n            location.x -= offset.left / scale.x;\r\n            location.y -= offset.top / scale.y;\r\n\r\n            matrix = invert = null;\r\n\r\n            return location;\r\n        },\r\n\r\n        dragSnapping: function() {\r\n            return {\r\n                mode: 'anchor',\r\n                x: 1,\r\n                y: 1\r\n            };\r\n        },\r\n        \r\n        createRouter: function(source, target, options) {\r\n            var clazz, router;\r\n\r\n            clazz   = Graph.router[_.capitalize(this.props.router.type)];\r\n            options = _.extend({}, this.props.router, options || {});\r\n            router  = Graph.factory(clazz, [this.view(), source, target, options]);\r\n\r\n            return router;\r\n        },\r\n\r\n        createLink: function(router, options) {\r\n            var clazz, link;\r\n\r\n            clazz   = Graph.link[_.capitalize(this.props.router.type)];\r\n            options = _.extend({}, this.props.link, options || {});\r\n            link    = Graph.factory(clazz, [router, options]);\r\n\r\n            return link;\r\n        },\r\n\r\n        refresh: function(vector) {\r\n            this.fire('refresh');\r\n        },\r\n\r\n        arrangeLinks: function() {\r\n            var scope = this.view().paper().guid(),\r\n                links = Graph.registry.link.collect(scope);\r\n            \r\n            if (links.length) {\r\n                \r\n                var inspect = [];\r\n                \r\n                _.forEach(links, function(link){\r\n                    if (link.cached.convex) {\r\n                        inspect.push(link.guid());\r\n                    }\r\n                });\r\n                \r\n                // TODO: research for sweepline algorithm\r\n                \r\n                var sweeper = new Graph.util.Sweeplink(links),\r\n                    convex = sweeper.findConvex();\r\n                \r\n                var key, link, idx;\r\n                \r\n                for (key in convex) {\r\n                    link = Graph.registry.link.get(key);\r\n                    \r\n                    link.updateConvex(convex[key]);\r\n                    link.refresh(true);\r\n                    \r\n                    idx = _.indexOf(inspect, key);\r\n                    \r\n                    if (idx > -1) {\r\n                        inspect.splice(idx, 1);\r\n                    }\r\n                }\r\n                \r\n                if (inspect.length) {\r\n                    _.forEach(inspect, function(key){\r\n                        var link = Graph.registry.link.get(key);\r\n                        \r\n                        link.removeConvex();\r\n                        link.refresh(true);\r\n                    });\r\n                }\r\n                \r\n                sweeper.destroy();\r\n                sweeper = null;\r\n            }\r\n        },\r\n\r\n        arrangeShapes: function() {\r\n            \r\n        }\r\n        \r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.shape.activity.Router = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'Route',\r\n            width: 100,\r\n            height: 100,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            name: 'activity.router',\r\n            icon: Graph.icons.SHAPE_ROUTER,\r\n            style: 'graph-shape-activity-router'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = me.components;\r\n            var shape, block, label;\r\n\r\n            var points = [\r\n                me.props.width / 2, 0,\r\n                me.props.width, me.props.height / 2,\r\n                me.props.width / 2, me.props.height,\r\n                0, me.props.height / 2\r\n            ];\r\n\r\n            var cx = points[0],\r\n                cy = points[3];\r\n\r\n            shape = (new Graph.svg.Group(me.props.left, me.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Polygon(points))\r\n                .data('text', me.props.label)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, me.guid());\r\n\r\n            block.draggable({ghost: true, dragClass: 'shape-draggable'});\r\n            block.resizable();\r\n            block.editable();\r\n            block.connectable({wiring: 'h:v'});\r\n            block.snappable();\r\n\r\n            block.on('edit', _.bind(me.onLabelEdit, me));\r\n            block.on('dragstart', _.bind(me.onDragStart, me));\r\n            block.on('dragend', _.bind(me.onDragEnd, me));\r\n            block.on('resize', _.bind(me.onResize, me));\r\n            block.on('remove',  _.bind(me.onRemove, me));\r\n            block.on('select.shape',  _.bind(me.onSelect, me));\r\n            block.on('deselect.shape',  _.bind(me.onDeselect, me));\r\n\r\n            label = (new Graph.svg.Text(cx, cy, me.props.label))\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n\r\n            shape = block = label = null;\r\n        },\r\n\r\n        redraw: function() {\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                label = this.component('label');\r\n\r\n            var bound, matrix;\r\n\r\n            bound = block.bbox().toJson();\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            var points = [\r\n                bound.width / 2, 0,\r\n                bound.width, bound.height / 2,\r\n                bound.width / 2, bound.height,\r\n                0, bound.height / 2\r\n            ];\r\n\r\n            block.attr({\r\n                points: _.join(points, ',')\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            label.attr({\r\n                x: bound.width  / 2, \r\n                y: bound.height / 2\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n            // update props\r\n            \r\n            matrix = shape.matrix();\r\n            \r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            matrix = null;\r\n            bound  = null;\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.shape.activity.Router.toString = function() {\r\n        return 'function(options)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n    \r\n    var Link = Graph.link.Link;\r\n    \r\n    Graph.link.Directed = Graph.extend(Link, {\r\n        \r\n        renderControl: function() {\r\n            var me = this, editor = me.component('editor');\r\n\r\n            if (me.cached.controls) {\r\n                _.forEach(me.cached.controls, function(c){\r\n                    c = Graph.registry.vector.get(c);\r\n                    c.remove();\r\n                });\r\n                me.cached.controls = null;\r\n            }\r\n\r\n            var points = this.cached.bendpoints,\r\n                maxlen = points.length - 1,\r\n                linkid = me.guid(),\r\n                controls = [];\r\n\r\n            _.forEach(points, function(dot, i){\r\n                \r\n                var control = (new Graph.svg.Image(\r\n                    Graph.config.base + 'img/resize-control.png',\r\n                    dot.x - 17 / 2,\r\n                    dot.y - 17 / 2,\r\n                    17,\r\n                    17\r\n                ));\r\n                \r\n                control.selectable(false);\r\n                control.removeClass(Graph.styles.VECTOR);\r\n                \r\n                if (i === 0) {\r\n                    control.addClass(Graph.styles.LINK_TAIL);\r\n                    control.elem.data('pole', 'tail');\r\n                } else if (i === maxlen) {\r\n                    control.addClass(Graph.styles.LINK_HEAD);\r\n                    control.elem.data('pole', 'head');\r\n                }\r\n                \r\n                control.elem.group('graph-link');\r\n                control.elem.data(Graph.string.ID_LINK, linkid);\r\n                \r\n                var context = {\r\n                    trans: (i === 0 || i === maxlen) ? 'CONNECT' : 'BENDING',\r\n                    index: dot.index,\r\n                    space: dot.space,\r\n                    point: {\r\n                        x: dot.x,\r\n                        y: dot.y\r\n                    },\r\n                    event: {\r\n                        x: dot.x,\r\n                        y: dot.y\r\n                    },\r\n                    range: {\r\n                        start: dot.range[0],\r\n                        end:   dot.range[1]\r\n                    },\r\n                    delta: {\r\n                        x: 0,\r\n                        y: 0\r\n                    },\r\n                    snap: {\r\n                        hor: [],\r\n                        ver: []\r\n                    }\r\n                };\r\n                \r\n                control.draggable();\r\n                control.cursor('default');\r\n                \r\n                control.on('dragstart', _.bind(me.onControlStart, me, _, context, control));\r\n                control.on('dragmove',  _.bind(me.onControlMove,  me, _, context, control));\r\n                control.on('dragend',   _.bind(me.onControlEnd,   me, _, context, control));\r\n                \r\n                control.render(editor);\r\n                controls.push(control.guid());\r\n            });\r\n            \r\n            me.cached.controls = controls;\r\n            controls = null;\r\n        },\r\n        \r\n        onControlStart: function(e, context, control) {\r\n            this.router.initTrans(context);\r\n            \r\n            if (context.trans == 'CONNECT') {\r\n                var paper = this.component().paper();\r\n                if (paper) {\r\n                    paper.addClass('linking');\r\n                }\r\n            }\r\n\r\n            var snaphor = context.snap.hor,\r\n                snapver = context.snap.ver;\r\n            \r\n            control.draggable().snap([\r\n                function(x, y){\r\n                    var sx = Graph.util.snapValue(x, snapver),\r\n                        sy = Graph.util.snapValue(y, snaphor);\r\n                    \r\n                    return {\r\n                        x: sx,\r\n                        y: sy,\r\n                        range: 10\r\n                    };\r\n                }\r\n            ]);\r\n            \r\n            _.forEach(this.cached.controls, function(id){\r\n                var c = Graph.registry.vector.get(id);\r\n                if (c && c !== control) {\r\n                    c.hide();\r\n                }\r\n            });\r\n            \r\n            control.show();\r\n        },\r\n        \r\n        onControlMove: function(e, context, control) {\r\n            var me = this;\r\n            \r\n            context.delta.x += e.dx;\r\n            context.delta.y += e.dy;\r\n            \r\n            var x1, y1, x2, y2;\r\n            \r\n            x1 = context.event.x,\r\n            y1 = context.event.y;\r\n            \r\n            if (context.trans == 'BENDING') {\r\n                me.router.bending(context, function(result){\r\n                    me.update(result.command, true);\r\n                });\r\n            } else {\r\n                me.router.connecting(context, function(result){\r\n                    me.update(result.command, true);\r\n                });\r\n            }\r\n            \r\n            x2 = context.event.x,\r\n            y2 = context.event.y;\r\n            \r\n            // update dragger\r\n            e.originalData.dx = (x2 - x1);\r\n            e.originalData.dy = (y2 - y1);\r\n        },\r\n        \r\n        onControlEnd: function(e, context, control) {\r\n            this.router.stopTrans(context);\r\n\r\n            if (context.trans == 'CONNECT') {\r\n                var paper = this.component().paper();\r\n                if (paper) {\r\n                    paper.removeClass('linking');\r\n                }\r\n            }\r\n\r\n            this.update(this.router.command());\r\n            this.invalidate();\r\n            this.resumeControl();\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n    \r\n    Graph.link.Directed.toString = function() {\r\n        return 'function(router, options)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.link.Orthogonal = Graph.extend(Graph.link.Link, {\r\n        \r\n        update: function(command, silent) {\r\n            var convex, smooth, radius, routes, maxlen, segments;\r\n            \r\n            silent = _.defaultTo(silent, false);\r\n            \r\n            convex = this.cached.convex;\r\n            smooth = this.props.smooth;\r\n            \r\n            if (convex) {\r\n                var points = this.router.waypoints();\r\n\r\n                if ( ! points) {\r\n                    return;\r\n                }\r\n\r\n                routes = points.slice();\r\n                maxlen = routes.length - 1;\r\n\r\n                segments = [];\r\n                \r\n                _.forEach(routes, function(curr, i){\r\n                    var prev = curr,\r\n                        next = routes[i + 1];\r\n                        \r\n                    var item;\r\n                    \r\n                    if (i === 0) {\r\n                        item = ['M', curr.x, curr.y];\r\n                    } else {\r\n                        item = ['L', curr.x, curr.y];\r\n                    }\r\n                    \r\n                    segments.push(item);\r\n\r\n                    if (convex[i]) {\r\n                        _.forEach(convex[i], function(c){\r\n                            var conseg = Graph.util.convexSegment(c, prev, next);\r\n                            if (conseg) {\r\n                                segments.push(conseg[0], conseg[1]);\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                command = Graph.util.segments2path(segments);\r\n            }\r\n            \r\n            if (smooth) {\r\n                radius = this.props.smootness || 6;\r\n                segments = segments || Graph.util.path2segments(command).slice();\r\n                \r\n                var item, prev, next, curr, i;\r\n                var bend;\r\n                \r\n                for (i = 0; i < segments.length; i++) {\r\n                    item = segments[i];\r\n                    next = segments[i + 1];\r\n                    \r\n                    bend = !!(item[0] == 'L' && next && next[0] != 'Q');\r\n                    \r\n                    if (bend) {\r\n                        curr = {\r\n                            x: item[item.length - 2],\r\n                            y: item[item.length - 1]\r\n                        };\r\n                        \r\n                        prev = segments[i - 1];\r\n                        \r\n                        if (prev && next) {\r\n                            var ss = Graph.util.smoothSegment(\r\n                                curr, \r\n                                { x: prev[prev.length - 2], y: prev[prev.length - 1] },\r\n                                { x: next[next.length - 2], y: next[next.length - 1] },\r\n                                radius\r\n                            );\r\n                            \r\n                            if (ss) {\r\n                                segments.splice(i, 1, ss[0], ss[1]);\r\n                                i++;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                command = Graph.util.segments2path(segments);\r\n                // var p = Graph.path(command);\r\n                // this.router.source().paper().path(p).style('stroke', 'red');\r\n                \r\n            }\r\n\r\n            if (command) {\r\n                this.component('coat').attr('d', command).dirty(true);\r\n                this.component('path').attr('d', command);\r\n                \r\n                this.invalidate();\r\n                \r\n                if ( ! silent) {\r\n                    \r\n                    this.redraw();\r\n                    \r\n                    this.fire('update');\r\n                    Graph.topic.publish('link/update');\r\n                }\r\n            }\r\n        },\r\n        \r\n        renderControl: function() {\r\n            var me = this, editor = me.component('editor');\r\n\r\n            if (me.cached.controls) {\r\n                _.forEach(me.cached.controls, function(c){\r\n                    c = Graph.registry.vector.get(c);\r\n                    c.remove();\r\n                });\r\n                me.cached.controls = null;\r\n            }\r\n\r\n            var points = this.cached.bendpoints,\r\n                linkid = me.guid(),\r\n                maxlen = points.length - 1,\r\n                controls = [];\r\n\r\n            _.forEach(points, function(dot, i){\r\n                var control, cursor, align, axis, drag;\r\n                \r\n                control = (new Graph.svg.Image(\r\n                    Graph.config.base + 'img/resize-control.png',\r\n                    dot.x - 17 / 2,\r\n                    dot.y - 17 / 2,\r\n                    17,\r\n                    17\r\n                ));\r\n                \r\n                control.selectable(false);\r\n                control.removeClass(Graph.styles.VECTOR);\r\n                control.elem.group('graph-link');\r\n                control.elem.data(Graph.string.ID_LINK, linkid);\r\n                \r\n                drag = {};\r\n                axis = null;\r\n                cursor = 'default';\r\n                \r\n                if (i === 0) {\r\n                    control.addClass(Graph.styles.LINK_TAIL);\r\n                    control.elem.data('pole', 'tail');\r\n                } else if (i === maxlen) {\r\n                    control.addClass(Graph.styles.LINK_HEAD);\r\n                    control.elem.data('pole', 'head');\r\n                } else {\r\n                    align  = Graph.util.pointAlign(dot.start, dot.end);\r\n                    axis   = align == 'v' ? 'y' : 'x';\r\n                    cursor = axis  == 'x' ? 'ew-resize' : 'ns-resize';\r\n                    \r\n                    drag = {axis: axis};\r\n                }\r\n                \r\n                var context = {\r\n                    \r\n                    trans: (i === 0 || i === maxlen) ? 'CONNECT' : 'BENDING',\r\n                    index: dot.index,\r\n                    axis: axis,\r\n                    cursor: cursor,\r\n                    point: {\r\n                        x: dot.x,\r\n                        y: dot.y\r\n                    },\r\n                    \r\n                    ranges: {\r\n                        start: dot.range[0],\r\n                        end:   dot.range[1]\r\n                    },\r\n                    \r\n                    event: {\r\n                        x: dot.x,\r\n                        y: dot.y\r\n                    },\r\n                    \r\n                    snap: {\r\n                        hor: [],\r\n                        ver: []\r\n                    },\r\n                    \r\n                    delta: {\r\n                        x: 0,\r\n                        y: 0\r\n                    }\r\n                };\r\n                \r\n                \r\n                control.draggable(drag);\r\n                control.cursor(cursor);\r\n                \r\n                control.on('dragstart', _.bind(me.onControlStart, me, _, context, control));\r\n                control.on('dragmove',  _.bind(me.onControlMove,  me, _, context));\r\n                control.on('dragend',   _.bind(me.onControlEnd,   me, _, context, control));\r\n \r\n                control.render(editor);\r\n                controls.push(control.guid());\r\n            });\r\n            \r\n            me.cached.controls = controls;\r\n            controls = null;\r\n        },\r\n\r\n        onControlStart: function(e, context, control) {\r\n            this.component('coat').cursor(context.cursor);\r\n            this.router.initTrans(context);\r\n            \r\n            if (context.trans == 'CONNECT') {\r\n                var paper = this.component().paper();\r\n                if (paper) {\r\n                    paper.addClass('linking');\r\n                }\r\n            }\r\n\r\n            // snapping\r\n            var snaphor = context.snap.hor,\r\n                snapver = context.snap.ver;\r\n                \r\n            control.draggable().snap([\r\n                function(x, y) {\r\n                    var sx = Graph.util.snapValue(x, snapver),\r\n                        sy = Graph.util.snapValue(y, snaphor);\r\n                    \r\n                    return {\r\n                        x: sx,\r\n                        y: sy,\r\n                        range: 10\r\n                    };\r\n                }\r\n            ]);\r\n            \r\n            _.forEach(this.cached.controls, function(id){\r\n                var c = Graph.registry.vector.get(id);\r\n                if (c && c !== control) {\r\n                    c.hide();\r\n                }\r\n            });\r\n            \r\n            control.show();\r\n            this.removeConvex();\r\n        },\r\n\r\n        onControlMove: function(e, context) {\r\n            var me = this;\r\n            \r\n            context.delta.x += e.dx;\r\n            context.delta.y += e.dy;\r\n            \r\n            var x1, y1, x2, y2, dx, dy;\r\n            \r\n            x1 = context.event.x;\r\n            y1 = context.event.y;\r\n            \r\n            if (context.trans == 'BENDING') {\r\n                me.router.bending(context, function(result){\r\n                    me.update(result.command, true);\r\n                });\r\n            } else {\r\n                me.router.connecting(context, function(result){\r\n                    me.update(result.command, true);\r\n                });\r\n            }\r\n\r\n            x2 = context.event.x;\r\n            y2 = context.event.y;\r\n            \r\n            dx = x2 - x1;\r\n            dy = y2 - y1;\r\n            \r\n            // update dragger\r\n            e.originalData.dx = dx;\r\n            e.originalData.dy = dy;\r\n        },\r\n\r\n        onControlEnd: function(e, context, control) {\r\n            this.component('coat').cursor('pointer');\r\n            this.router.stopTrans(context);\r\n\r\n            if (context.trans == 'CONNECT') {\r\n                var paper = this.component().paper();\r\n                if (paper) {\r\n                    paper.removeClass('linking');\r\n                }\r\n            }\r\n\r\n            this.update(this.router.command());\r\n            this.invalidate();\r\n            this.resumeControl();\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.link.Orthogonal';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n    \r\n    Graph.link.Orthogonal.toString = function() {\r\n        return 'function(router, options)';\r\n    };\r\n    \r\n}());","\r\n(function(){\r\n\r\n    var KEY_TRESHOLD = 1e-9;\r\n    var SLOPE_TRESHOLD = .1;\r\n    \r\n    var Sweeplink = Graph.util.Sweeplink = function(links) {\r\n        \r\n        var me = this;\r\n        \r\n        me.points = [];\r\n        me.queue = [];\r\n        me.lines = [];\r\n        me.found = [];\r\n        me.process = [];\r\n        \r\n        _.forEach(links, function(link){\r\n            var dots = me.extract(link);\r\n            Array.prototype.push.apply(me.points, dots);\r\n        });\r\n\r\n        _.forEach(me.points, function(p, i){\r\n            if (i % 2) me.lines.push(_.sortBy( [p, me.points[i - 1]], 'y' ));\r\n        });\r\n        \r\n        _.forEach(me.lines, function(d, i){\r\n            if (d[0].x == d[1].x) {\r\n                d[0].x += SLOPE_TRESHOLD;\r\n                d[1].x -= SLOPE_TRESHOLD;\r\n            }\r\n\r\n            if (d[0].y == d[1].y) {\r\n                d[0].y -= SLOPE_TRESHOLD;\r\n                d[1].y += SLOPE_TRESHOLD;\r\n            }\r\n\r\n            d[0].line = d;\r\n            d[1].line = d;\r\n        });\r\n        \r\n    };\r\n\r\n    Sweeplink.prototype.constructor = Sweeplink;\r\n\r\n    Sweeplink.prototype.extract = function(link) {\r\n        var segments = link.router.pathinfo().curve().segments, \r\n            dots = [];\r\n\r\n        var x, y;\r\n        \r\n        _.forEach(segments, function(s, i){\r\n            var p = i === 0 ? {x: s[1], y: s[2]} : {x: s[5], y: s[6]};\r\n            var q = segments[i + 1];\r\n            \r\n            if (q) {\r\n                \r\n                q = {x: q[5], y: q[6]};\r\n                \r\n                Graph.util.movepoint(p, q, -20);\r\n                Graph.util.movepoint(q, p, -20);\r\n\r\n                p.x = Math.round(p.x, 3);\r\n                p.y = Math.round(p.y, 3);\r\n\r\n                q.x = Math.round(q.x, 3);\r\n                q.y = Math.round(q.y, 3);\r\n\r\n                p.link = link;\r\n                q.link = link;\r\n\r\n                p.range = i;\r\n                q.range = i + 1;\r\n\r\n                dots.push(p, q);\r\n            }\r\n            \r\n        });\r\n\r\n        return dots;\r\n    };\r\n\r\n    Sweeplink.prototype.findConvex = function() {\r\n        var me = this, linesByY;\r\n        \r\n        me.queue = createTree(me.points.slice())\r\n            .key(function(d){ return d.y + KEY_TRESHOLD * d.x; })\r\n            .order();\r\n        \r\n        me.found = [];\r\n        me.process = createTree([]);\r\n\r\n        for (var i = 0; i < me.queue.length && i < 1000; i++) {\r\n            \r\n            var d = me.queue[i];\r\n            var index, indexA, indexB, minIndex;\r\n            \r\n\r\n            if (d.line && d.line[0] == d) {\r\n                d.type = 'insert';\r\n                index = me.process\r\n                    .key(function(e){ return me.intercept(e, d.y - KEY_TRESHOLD / 1000); })\r\n                    .insert(d.line);\r\n                \r\n                me.validate(d.line, me.process[index + 1]);\r\n                me.validate(d.line, me.process[index - 1]);\r\n                \r\n            } else if (d.line) {\r\n                d.type = 'removal';\r\n                index = me.process.findIndex(d.line);\r\n                me.process.remove(d.line);\r\n                \r\n                me.validate(me.process[index - 1], me.process[index]);\r\n            } else if (d.lineA && d.lineB) {\r\n                me.process.key(function(e){ return me.intercept(e, d.y - KEY_TRESHOLD / 1000); });\r\n                \r\n                indexA = me.process.findIndex(d.lineA);\r\n                indexB = me.process.findIndex(d.lineB);\r\n                  \r\n                if (indexA == indexB) indexA = indexA + 1\r\n                  \r\n                me.process[indexA] = d.lineB;\r\n                me.process[indexB] = d.lineA;\r\n\r\n                minIndex = indexA < indexB ? indexA : indexB\r\n\r\n                me.validate(me.process[minIndex - 1], me.process[minIndex])\r\n                me.validate(me.process[minIndex + 1], me.process[minIndex + 2])\r\n            }\r\n        }\r\n        \r\n        var convex = {};\r\n        \r\n        _.forEach(this.found, function(f){\r\n            \r\n            var routes, rangeStart, rangeEnd, segmentAlign, segmentStart, segmentEnd,\r\n                alignA, alignB, line, link, guid;\r\n            \r\n            alignA = Graph.util.pointAlign(f.lineA[0], f.lineA[1], 10);\r\n            alignB = Graph.util.pointAlign(f.lineB[0], f.lineB[1], 10);\r\n            \r\n            if (alignA != alignB) {\r\n                segmentAlign = alignA == 'v' ? alignA : alignB;\r\n                \r\n                line = alignA == 'v' ? f.lineA : f.lineB;\r\n                link = line[0].link;\r\n                guid = link.guid();\r\n                \r\n                routes = link.router.waypoints();\r\n                \r\n                rangeStart = Math.min(line[0].range, line[1].range),\r\n                rangeEnd   = Math.max(line[0].range, line[1].range);\r\n                \r\n                segmentStart = routes[rangeStart];\r\n                segmentEnd = routes[rangeEnd];\r\n                \r\n                if ( ! convex[guid]) {\r\n                    convex[guid] = {};\r\n                }\r\n                \r\n                if ( ! convex[guid][rangeStart]) {\r\n                    convex[guid][rangeStart] = createTree([])\r\n                        .key(function(c){\r\n                            if (c.segmentAlign == 'v') {\r\n                                if (c.segmentStart.x < c.segmentEnd.x) {\r\n                                    return c.x + c.segmentStart.x;\r\n                                } else {\r\n                                    return c.segmentStart.x - c.x;\r\n                                }\r\n                            } else {\r\n                                if (c.segmentStart.y < c.segmentEnd.y) {\r\n                                    return c.y + c.segmentStart.y;\r\n                                } else {\r\n                                    return c.segmentStart.y - c.y;\r\n                                }\r\n                            }\r\n                        });\r\n                }\r\n                \r\n                convex[guid][rangeStart].insert({\r\n                    x: f.x,\r\n                    y: f.y,\r\n                    link: link.guid(),\r\n                    rangeStart: rangeStart,\r\n                    rangeEnd: rangeEnd,\r\n                    segmentAlign: segmentAlign,\r\n                    segmentStart: segmentStart,\r\n                    segmentEnd: segmentEnd\r\n                });\r\n                \r\n            }\r\n            \r\n        });\r\n        \r\n        return convex;\r\n    };\r\n    \r\n    Sweeplink.prototype.intersect = function(a, b, c, d) {\r\n        var det = (a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x),\r\n            l   = a.x * b.y - a.y * b.x,\r\n            m   = c.x * d.y - c.y * d.x,\r\n            ix  = (l * (c.x - d.x) - m * (a.x - b.x)) / det,\r\n            iy  = (l * (c.y - d.y) - m * (a.y - b.y)) / det,\r\n            i   = {x: ix, y: iy};\r\n\r\n        i.isOverlap = (ix == a.x && iy == a.y) || (ix == b.x && iy == b.y)\r\n        i.isIntersection = ! (a.x < ix ^ ix < b.x) && ! (c.x < ix ^ ix < d.x) && ! i.isOverlap && det\r\n        \r\n        // if (isNaN(i.x)) debugger\r\n\r\n        return i;\r\n    };\r\n    \r\n    Sweeplink.prototype.validate = function(a, b) {\r\n        if ( ! a || ! b ) return;\r\n        var i = this.intersect(a[0], a[1], b[0], b[1]);\r\n        \r\n        i.lineA = a;\r\n        i.lineB = b;\r\n        \r\n        if (i.isIntersection) {\r\n            this.found.push(i) && this.queue.insert(i);\r\n        }\r\n    };\r\n\r\n    Sweeplink.prototype.intercept = function(line, y) {\r\n        var a = line[0], \r\n            b = line[1],\r\n            m = (a.y - b.y) / (a.x - b.x);\r\n\r\n        return (y - a.y + m * a.x) / m;\r\n    }\r\n\r\n    Sweeplink.prototype.destroy = function() {\r\n        this.points = null;\r\n        this.lines = null;\r\n        this.found = null;\r\n        this.queue = null;\r\n        this.process = null;\r\n    };\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function createTree(array) {\r\n        var key = function(d){ return d; };\r\n        var bisect = _.bisector(function(d){ return key(d); }).left;\r\n        \r\n        array.insert = function(d) {\r\n            var i = array.findIndex(d);\r\n            var v = key(d);\r\n            if (array[i] && v == key(array[i])) return;\r\n            array.splice(i, 0, d);\r\n            return i;\r\n        };\r\n\r\n        array.remove = function(d) {\r\n            var i = array.findIndex(d);\r\n            array.splice(i, 1);\r\n            return i;\r\n        };\r\n\r\n        array.findIndex = function(d) {\r\n            return bisect(array, key(d));\r\n        };\r\n\r\n        array.key = function(f) {\r\n            key = f;\r\n            return array;\r\n        };\r\n\r\n        array.swap = function() {\r\n\r\n        };\r\n\r\n        array.order = function() {\r\n            array.sort(_.ascendingKey(key));\r\n            return array;\r\n        };\r\n\r\n        return array;\r\n    }\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Plugin = Graph.extend({\r\n\r\n        props: {\r\n            context: null,\r\n            vector: null,\r\n            activator: 'tool'\r\n        },\r\n\r\n        cached: {\r\n            path: null,\r\n            bbox: null\r\n        },\r\n\r\n        /**\r\n         * Update options\r\n         */\r\n        options: function(options) {\r\n            options = options || {};\r\n\r\n            var context = _.defaultTo(options.context, this.vector()),\r\n                contextId = context.guid();\r\n\r\n            if (contextId != this.props.context) {\r\n                this.props.context = contextId;\r\n                this.cached.bbox = null;\r\n                this.cached.path = null;\r\n            }\r\n        },\r\n        \r\n        vector: function() {\r\n            return Graph.registry.vector.get(this.props.vector);\r\n        },\r\n\r\n        context: function() {\r\n            if (this.props.context == this.props.vector) {\r\n                return this.vector();\r\n            }\r\n            return Graph.registry.vector.get(this.props.context);    \r\n        },\r\n        \r\n        invalidate: function() {\r\n            this.cached.path = null;\r\n            this.cached.bbox = null;\r\n        },\r\n\r\n        bbox: function() {\r\n            var bbox = this.cached.bbox;\r\n\r\n            if ( ! bbox) {\r\n                // TODO: grab outer matrix based on current context\r\n                var vector = this.vector(),\r\n                    path = vector.pathinfo();\r\n\r\n                var matrix, contextId;\r\n\r\n                if (this.props.context == this.props.vector) {\r\n                    matrix = vector.matrix();\r\n                } else {\r\n                    matrix = Graph.matrix();\r\n                    contextId = this.props.context;\r\n\r\n                    vector.bubble(function(curr){\r\n                        if (curr.guid() == contextId) {\r\n                            return false;\r\n                        }\r\n                        matrix.multiply(curr.matrix());\r\n                    });\r\n                }\r\n\r\n                // TODO: transform path based on calculated matrix\r\n                path = path.transform(matrix);\r\n                \r\n                bbox = path.bbox();\r\n                this.cached.bbox = bbox;\r\n\r\n                matrix = path = null;\r\n            }\r\n\r\n            return bbox.clone();\r\n        },\r\n\r\n        pathinfo: function() {\r\n            var path = this.cached.path;\r\n\r\n            if ( ! path) {\r\n                // TODO: grab outer matrix based on current context\r\n                var vector = this.vector(),\r\n                    path = vector.pathinfo();\r\n\r\n                var matrix, contextId;\r\n\r\n                if (this.props.context == this.props.vector) {\r\n                    matrix = vector.matrix();\r\n                } else {\r\n                    matrix = Graph.matrix();\r\n                    contextId = this.props.context;\r\n\r\n                    vector.bubble(function(curr){\r\n                        if (curr.guid() == contextId) {\r\n                            return false;\r\n                        }\r\n                        matrix.multiply(curr.matrix());\r\n                    });\r\n                }\r\n\r\n                // TODO: transform path\r\n                path = path.transform(matrix);\r\n                this.cached.path = path;\r\n\r\n                matrix = null;\r\n            }\r\n\r\n            return path.clone();\r\n        },\r\n\r\n        enable: function(activator) {},\r\n\r\n        disable: function() {},\r\n\r\n        destroy: function() {}\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Definer = Graph.extend(Graph.plugin.Plugin, {\r\n        props: {\r\n            vector: null\r\n        },\r\n\r\n        definitions: {\r\n\r\n        },\r\n\r\n        components: {\r\n            holder: null\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            this.props.vector = vector.guid();\r\n\r\n            this.components.holder = Graph.$('<defs/>');\r\n            this.components.holder.prependTo(vector.elem);\r\n\r\n            if (vector.isPaper()) {\r\n                this.defineArrowMarker('marker-arrow');\r\n            }\r\n\r\n        },\r\n        \r\n        defineArrowMarker: function(id) {\r\n            if (this.definitions[id]) {\r\n                return this.definitions[id];\r\n            }\r\n\r\n            var marker = Graph.$(_.format(\r\n                '<marker id=\"{0}\" refX=\"{1}\" refY=\"{2}\" viewBox=\"{3}\" markerWidth=\"{4}\" markerHeight=\"{5}\" orient=\"{6}\">' + \r\n                    '<path d=\"{7}\" fill=\"{8}\" stroke-width=\"{9}\" stroke-linecap=\"{10}\" stroke-dasharray=\"{11}\">' + \r\n                    '</path>'+\r\n                '</marker>',\r\n                id, '11', '10', '0 0 20 20', '10', '10', 'auto',\r\n                'M 1 5 L 11 10 L 1 15 Z', '#000000', '1', 'round', '10000, 1'\r\n            ));\r\n\r\n            this.definitions[id] = marker;\r\n            this.components.holder.append(marker);\r\n\r\n            return marker;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Definer';\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n    \r\n    // storages\r\n    var vendors = {};\r\n\r\n    var Reactor = Graph.plugin.Reactor = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null\r\n        },\r\n\r\n        navigationKeys: [\r\n            Graph.event.ENTER,\r\n            Graph.event.DELETE,\r\n            Graph.event.SHIFT,\r\n            Graph.event.CTRL,\r\n            Graph.event.ESC\r\n        ],\r\n\r\n        constructor: function(vector, listeners) {\r\n            var me = this, \r\n                node = vector.node(),\r\n                guid = vector.guid();\r\n\r\n            var vendor;\r\n\r\n            me.props.vector = guid;\r\n            me.listeners = listeners || {};\r\n\r\n            vendor = vendors[guid] = interact(node);\r\n\r\n            vendor.on('down', function reactorDown(e){\r\n                if (e.target === node) {\r\n                    e.originalType = 'pointerdown';\r\n                    vector.fire(e);    \r\n                }\r\n            }, true);\r\n\r\n            vector.elem.on({\r\n                contextmenu: function(e) {\r\n                    if (e.currentTarget === node) {\r\n                        vector.fire(e);\r\n                        // e.preventDefault();\r\n                    }\r\n                }\r\n            });\r\n\r\n            if (vector.isPaper()) {\r\n                var doc = Graph.$(document);\r\n\r\n                doc.on('keydown', function(e){\r\n                    if (me.isNavigation(e) && Graph.cached.paper == guid) {\r\n                        e.originalType = 'keynavdown';\r\n                        vector.fire(e); \r\n                    }\r\n                });\r\n\r\n                doc.on('keyup', function(e){\r\n                    if (me.isNavigation(e) && Graph.cached.paper == guid) {\r\n                        e.originalType = 'keynavup';\r\n                        vector.fire(e);\r\n                    }\r\n                });\r\n\r\n                doc = null;\r\n            }\r\n\r\n            vendor = null;\r\n        },\r\n\r\n        isNavigation: function(e) {\r\n            var key = e.keyCode;\r\n            return _.indexOf(this.navigationKeys, key) > -1;\r\n        },\r\n        \r\n        vendor: function() {\r\n            return vendors[this.props.vector];\r\n        },\r\n\r\n        draggable: function(options) {\r\n            return this.vendor().draggable(options);\r\n        },\r\n\r\n        dropzone: function(options) {\r\n            return this.vendor().dropzone(options);\r\n        },\r\n\r\n        gesturable: function(options) {\r\n            return this.vendor().gesturable(options);\r\n        },\r\n\r\n        destroy: function() {\r\n            var guid = this.props.vector,\r\n                vendor = vendors[guid];\r\n\r\n            if (vendor) {\r\n                vendor.unset();\r\n            }\r\n\r\n            delete vendors[guid];\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Reactor';\r\n        }\r\n    });\r\n\r\n    var on  = Reactor.prototype.on,\r\n        off = Reactor.prototype.off;\r\n\r\n    /**\r\n     * Override\r\n     */\r\n    Reactor.prototype.on = function(event, handler) {\r\n        var vector = this.vector();\r\n        return on.apply(vector, [event, handler]);\r\n    };\r\n\r\n    /**\r\n     * Override\r\n     */\r\n    Reactor.prototype.off = function(event, handler) {\r\n        var vector = this.vector();\r\n        return off.apply(vector, [event, handler]);\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Transformer = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            scale: 1,\r\n            rotate: 0\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            this.actions = [];\r\n            this.props.vector = vector.guid();\r\n        },\r\n\r\n        transform: function(command) {\r\n            var me = this, segments = Graph.util.transform2segments(command);\r\n\r\n            _.forEach(segments, function(args){\r\n                var method = args.shift();\r\n                if (me[method] && _.isFunction(me[method])) {\r\n                    (function(){\r\n                        me[method].apply(me, args);\r\n                    }(method, args));    \r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        queue: function() {\r\n            var args = _.toArray(arguments);\r\n            \r\n            this.actions.push({\r\n                name: args.shift(),\r\n                args: args,\r\n                sort: this.actions.length\r\n            });\r\n\r\n            return this;\r\n        },\r\n        translate: function(dx, dy) {\r\n            dx = _.defaultTo(dx, 0);\r\n            dy = _.defaultTo(dy, 0);\r\n            this.queue('translate', dx, dy);\r\n            return this;\r\n        },\r\n        rotate: function(deg, cx, cy) {\r\n            if ( ! _.isUndefined(cx) && ! _.isUndefined(cy)) {\r\n                this.queue('rotate', deg, cx, cy);    \r\n            } else {\r\n                this.queue('rotate', deg);    \r\n            }\r\n            return this;\r\n        },\r\n        scale: function(sx, sy, cx, cy) {\r\n            sy = _.defaultTo(sy, sx);\r\n\r\n            if ( ! _.isUndefined(cx) && ! _.isUndefined(cy)) {\r\n                this.queue('scale', sx, sy, cx, cy);\r\n            } else {\r\n                this.queue('scale', sx, sy);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        matrix: function(a, b, c, d, e, f) {\r\n            this.queue('matrix', a, b, c, d, e, f);\r\n            return this;\r\n        },\r\n\r\n        commit: function(absolute, simulate) {\r\n            var me = this,\r\n                actions = me.actions,\r\n                vector = me.vector(),\r\n                events = {\r\n                    translate: false,\r\n                    rotate: false,\r\n                    scale: false\r\n                };\r\n\r\n            if ( ! actions.length) {\r\n                return;\r\n            }\r\n            \r\n            absolute = _.defaultTo(absolute, false);\r\n            simulate = _.defaultTo(simulate, false);\r\n            \r\n            var deg = 0, \r\n                dx = 0, \r\n                dy = 0, \r\n                sx = 1, \r\n                sy = 1;\r\n                \r\n            var mat = vector.matrix().clone();\r\n            \r\n            _.forEach(actions, function(act){\r\n                var arg = act.args,\r\n                    cmd = act.name,\r\n                    len = arg.length,\r\n                    inv = false;\r\n\r\n                if (absolute) {\r\n                    inv = mat.invert(true);\r\n                }\r\n                \r\n                var x1, y1, x2, y2, bb;\r\n                \r\n                if (cmd == 'translate' && len === 2) {\r\n                    if (absolute) {\r\n                        x1 = inv.x(0, 0);\r\n                        y1 = inv.y(0, 0);\r\n                        x2 = inv.x(arg[0], arg[1]);\r\n                        y2 = inv.y(arg[0], arg[1]);\r\n                        mat.translate(x2 - x1, y2 - y1);\r\n                    } else {\r\n                        mat.translate(arg[0], arg[1]);\r\n                    }\r\n                    events.translate = true;\r\n                } else if (cmd == 'rotate') {\r\n                    if (len == 1) {\r\n                        bb = bb || vector.bbox(true).toJson();\r\n                        mat.rotate(arg[0], bb.x + bb.width / 2, bb.y + bb.height / 2);\r\n                        deg += arg[0];\r\n                    } else if (len == 3) {\r\n                        if (absolute) {\r\n                            x2 = inv.x(arg[1], arg[2]);\r\n                            y2 = inv.y(arg[1], arg[2]);\r\n                            mat.rotate(arg[0], x2, y2);\r\n                        } else {\r\n                            mat.rotate(arg[0], arg[1], arg[2]);\r\n                        }\r\n                        deg += arg[0];\r\n                    }\r\n                    events.rotate = true;\r\n                } else if (cmd == 'scale') {\r\n                    if (len === 1 || len === 2) {\r\n                        bb = bb || vector.bbox(true).toJson();\r\n                        mat.scale(arg[0], arg[len - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\r\n                        sx *= arg[0];\r\n                        sy *= arg[len - 1];\r\n                    } else if (len === 4) {\r\n                        if (absolute) {\r\n                            x2 = inv.x(arg[2], arg[3]);\r\n                            y2 = inv.y(arg[2], arg[3]);\r\n                            mat.scale(arg[0], arg[1], x2, y2);\r\n                        } else {\r\n                            mat.scale(arg[0], arg[1], arg[2], arg[3]);\r\n                        }\r\n                        sx *= arg[0];\r\n                        sy *= arg[1];\r\n                    }\r\n                    events.scale = true;\r\n                } else if (cmd == 'matrix') {\r\n                    mat.multiply(arg[0], arg[1], arg[2], arg[3], arg[4], arg[5]);\r\n                }\r\n            });\r\n\r\n            if (simulate) {\r\n                this.actions = [];\r\n                return mat;\r\n            }\r\n            \r\n            vector.graph.matrix = mat;\r\n            vector.attr('transform', mat.toValue());\r\n\r\n            if (events.translate) {\r\n                events.translate = {\r\n                    dx: mat.e,\r\n                    dy: mat.f\r\n                };\r\n                this.fire('translate', events.translate);\r\n            }\r\n\r\n            if (events.rotate) {\r\n                events.rotate = {\r\n                    deg: deg\r\n                };\r\n                this.fire('rotate', events.rotate);\r\n            }\r\n\r\n            if (events.scale) {\r\n                events.scale = {\r\n                    sx: sx,\r\n                    sy: sy\r\n                };\r\n                this.fire('scale', events.scale);\r\n            }\r\n\r\n            this.actions = [];\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Transformer';\r\n        }\r\n    });\r\n    \r\n}());","\r\n(function(){\r\n    var global = this;\r\n\r\n    var Animator = Graph.plugin.Animator = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n\r\n            // default duration\r\n            duration: 1000,\r\n\r\n            // default easing\r\n            easing: 'linier'\r\n        },\r\n\r\n        stacks: [],\r\n\r\n        constructor: function(vector) {\r\n            this.props.vector = vector.guid();\r\n        },\r\n        \r\n        create: function(keyframes, duration, easing, callback) {\r\n            return new Animation(keyframes, duration, easing, callback);\r\n        },\r\n\r\n        animate: function(params, duration, easing, callback) {\r\n            var vector = this.vector(),\r\n                reset = _.extend({}, vector.attrs);\r\n\r\n            var scenes, animation;\r\n\r\n            if (params instanceof Animation ) {\r\n                animation = params;\r\n            } else {\r\n                duration = _.defaultTo(duration, this.props.duration);\r\n\r\n                if (_.isFunction(easing)) {\r\n                    callback = easing;\r\n                    easing = this.props.easing;\r\n                }\r\n\r\n                if ( ! easing) {\r\n                    easing = this.props.easing;\r\n                }\r\n\r\n                scenes = {\r\n                    100: params\r\n                };\r\n\r\n                animation = new Animation(scenes, duration, easing, callback);\r\n            }\r\n\r\n            if ( ! animation.count()) {\r\n                animation = null;\r\n                return;\r\n            }\r\n\r\n            reset.transform = vector.attrs.transform;\r\n            reset.matrix = vector.matrix().clone();\r\n\r\n            this.start(\r\n                animation, \r\n                animation.frame(0), \r\n                reset, \r\n                null\r\n            );\r\n\r\n            animation = null;\r\n\r\n            return this;\r\n        },\r\n\r\n        resume: function() {\r\n\r\n        },\r\n\r\n        pause: function() {\r\n\r\n        },\r\n\r\n        stop: function() {\r\n\r\n        },\r\n\r\n        start: function(animation, frame, reset, status) {\r\n            var asize = animation.count();\r\n\r\n            if ( ! asize) {\r\n                animation = null;\r\n                return;\r\n            }\r\n\r\n            var vector = this.vector(),\r\n                ssize = this.stacks.length,\r\n                origin = {},\r\n                delta = {},\r\n                from = {},\r\n                to = {};\r\n\r\n            var scene, queue, last, time, playing, applied, p, i;\r\n\r\n            if (status) {\r\n                for (i = 0; i < ssize; i++) {\r\n                    p = this.stacks[i];\r\n                    if (p.animation == animation) {\r\n                        if (p.frame != frame) {\r\n                            this.stacks.splice(i, 1);\r\n                            applied = 1;\r\n                        } else {\r\n                            playing = p;\r\n                        }\r\n                        vector.attr(p.reset);\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                status = +to;\r\n            }\r\n\r\n            queue = {\r\n                animation: animation,\r\n                vector: vector\r\n            };\r\n\r\n            time = animation.duration();\r\n            last = animation.at(asize - 1).frame;\r\n\r\n            for (i = 0; i < asize; i++) {\r\n                scene = animation.at(i);\r\n                if (scene.frame == frame || scene.frame > status * last) {\r\n\r\n                    queue.prev = animation.at(i - 1);\r\n                    queue.prev = queue.prev ? queue.prev.frame : 0;\r\n\r\n                    queue.frame = scene.frame;\r\n                    queue.duration = time / last * (queue.frame - queue.prev);\r\n\r\n                    queue.next = animation.at(i + 1);\r\n                    queue.next = queue.next ? queue.next.frame : undefined;\r\n\r\n                    queue.last = last;\r\n                    break;\r\n                } else if (status) {\r\n                    vector.attr(scene.params);\r\n                }\r\n            }\r\n\r\n            if ( ! playing) {\r\n\r\n                time = queue.duration;\r\n\r\n                _.forOwn(scene.params, function(v, k){\r\n                    \r\n                    var able = Animation.animable[k];\r\n                    var plugin, matrix, inverse, segments;\r\n                    var i, j, ii, jj;\r\n\r\n                    if (able) {\r\n                        from[k] = vector.attrs[k];\r\n                        from[k] = _.defaultTo(from[k], able.defaults);\r\n                        to[k]   = v;\r\n\r\n                        switch(able.type) {\r\n                            case 'number':\r\n                                delta[k] = (to[k] - from[k]) / time;\r\n                                break;\r\n\r\n                            case 'transform':\r\n                                var eq = equalizeTransform(vector.attrs[k], v);\r\n\r\n                                if (eq.equal) {\r\n                                    from[k]  = eq.from;\r\n                                    to[k]    = eq.to;\r\n                                    delta[k] = [];\r\n                                    delta[k].semantic = true;\r\n                                    for (i = 0, ii = from[k].length; i < ii; i++) {\r\n                                        delta[k][i] = [from[k][i][0]];\r\n                                        for (j = 1, jj = from[k][i].length; j < jj; j++) {\r\n                                            delta[k][i][j] = (to[k][i][j] - from[k][i][j]) / time;\r\n                                        }\r\n                                    }\r\n                                } else {\r\n                                    plugin = vector.plugins.transformer;\r\n                                    segments = Graph.util.transform2segments(to[k]);\r\n\r\n                                    matrix = vector.matrix();\r\n\r\n                                    from[k] = matrix.clone();\r\n                                    inverse = matrix.invert(true);\r\n\r\n                                    vector.graph.matrix = matrix.multiply(inverse);\r\n\r\n                                    _.forEach(segments, function(s){\r\n                                        var cmd = s[0], args = s.slice(1);\r\n                                        plugin[cmd].apply(plugin, args);\r\n                                    });\r\n\r\n                                    matrix = plugin.commit(false, true);\r\n                                    to[k] = matrix.clone();\r\n\r\n                                    delta[k] = {\r\n                                        a: (to[k].props.a - from[k].props.a) / time,\r\n                                        b: (to[k].props.b - from[k].props.b) / time,\r\n                                        c: (to[k].props.c - from[k].props.c) / time,\r\n                                        d: (to[k].props.d - from[k].props.d) / time,\r\n                                        e: (to[k].props.e - from[k].props.e) / time,\r\n                                        f: (to[k].props.f - from[k].props.f) / time\r\n                                    };\r\n\r\n                                    segments = null;\r\n                                    plugin = null;\r\n                                    matrix = null;\r\n                                }\r\n\r\n                                break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n                var timestamp = +new Date;\r\n\r\n                _.extend(queue, {\r\n                    scene: scene,\r\n                    timestamp: timestamp,\r\n                    start: timestamp + animation.delay(),\r\n\r\n                    reset: reset,\r\n                    from: from,\r\n                    to: to,\r\n                    delta: delta,\r\n\r\n                    status: 0,\r\n                    initstatus: status || 0,\r\n\r\n                    stop: false\r\n                });\r\n\r\n                this.stacks.push(queue);\r\n\r\n                if (status && ! playing && ! applied) {\r\n                    queue.stop = true;\r\n                    queue.start = new Date - scene.duration * status;\r\n                    if (this.stacks.length === 1) {\r\n                        return this.player();\r\n                    }\r\n                }\r\n\r\n                if (applied) {\r\n                    queue.start = new Date - scene.duration * status;\r\n                }\r\n\r\n                if (this.stacks.length === 1) {\r\n                    Animator.play(_.bind(this.player, this));\r\n                }\r\n            } else {\r\n                playing.initstatus = status;\r\n                playing.start = new Date - playing.duration * status;\r\n            }\r\n\r\n            this.fire('animstart');\r\n\r\n        },\r\n\r\n        player: function() {\r\n            var timestamp = +new Date, tick = 0;\r\n            var vector, curr, from, prog, anim, time, able, value, key, type, scene, matrix;\r\n            var plugin, matrix, method, args;\r\n            var key, to, ii, jj, i, j;\r\n\r\n            for (; tick < this.stacks.length; tick++) {\r\n                curr = this.stacks[tick];\r\n\r\n                if (curr.paused) {\r\n                    continue;\r\n                }\r\n                \r\n                prog   = timestamp - curr.start;\r\n\r\n                time   = curr.duration;\r\n                vector = curr.vector;\r\n                scene  = curr.scene;\r\n                from   = curr.from;\r\n                to     = curr.to;\r\n                delta  = curr.delta;\r\n                anim   = curr.animation;\r\n\r\n                if (curr.initstatus) {\r\n                    prog = (curr.initstatus * curr.last - curr.prev) / (curr.frame - curr.prev) * time;\r\n                    curr.status = curr.initstatus;\r\n                    delete curr.initstatus;\r\n                    curr.stop && this.stacks.splice(tick--, 1);\r\n                } else {\r\n                    curr.status = (curr.prev + (curr.frame - curr.prev) * (prog / time)) / curr.last;\r\n                }\r\n\r\n                if (prog < 0) {\r\n                    continue;\r\n                }\r\n\r\n                if (prog < time) {\r\n\r\n                    ease = scene.easing(prog / time);\r\n\r\n                    for (key in from) {\r\n                        \r\n                        able = Animation.animable[key];\r\n\r\n                        switch(able.type) {\r\n                            case 'number':\r\n\r\n                                value = +from[key] + ease * time * delta[key];\r\n                                vector.attr(name, value);\r\n\r\n                                break;\r\n                            case 'transform':\r\n\r\n                                // semantic `rotate,scale,translate`\r\n                                if (delta[key].semantic) {\r\n                                    plugin = vector.plugins.transformer;\r\n\r\n                                    for (i = 0, ii = from[key].length; i < ii; i++) {\r\n                                        method = from[key][i][0];\r\n                                        args = [];\r\n\r\n                                        for (j = 1, jj = from[key][i].length; j < jj; j++) {\r\n                                            args.push(from[key][i][j] + ease * time * delta[key][i][j]);\r\n                                        }\r\n\r\n                                        plugin[method].apply(plugin, args);\r\n                                    }\r\n\r\n                                    matrix = plugin.commit(false, true);\r\n\r\n                                    vector.attr('transform', matrix.toValue());\r\n\r\n\r\n                                    matrix = null;\r\n                                    plugin = null;\r\n\r\n                                } else {\r\n                                    matrix = Graph.matrix(\r\n                                        from[key].props.a + ease * time * delta[key].a,\r\n                                        from[key].props.b + ease * time * delta[key].b,\r\n                                        from[key].props.c + ease * time * delta[key].c,\r\n                                        from[key].props.d + ease * time * delta[key].d,\r\n                                        from[key].props.e + ease * time * delta[key].e,\r\n                                        from[key].props.f + ease * time * delta[key].f\r\n                                    );\r\n                                    vector.attr('transform', matrix.toValue());\r\n                                    matrix = null;\r\n                                }\r\n\r\n                                break;\r\n                        }\r\n                    }\r\n\r\n                } else {\r\n\r\n                    for (key in to) {\r\n                        \r\n                        able = Animation.animable[key];\r\n\r\n                        switch(able.type) {\r\n\r\n                            case 'transform':\r\n\r\n                                if (delta[key].semantic) {\r\n                                    plugin = vector.plugins.transformer;\r\n\r\n                                    _.forEach(to[key], function(v){\r\n                                        var cmd = v[0], args = v.slice(1);\r\n                                        plugin[cmd].apply(plugin, args);\r\n                                    });\r\n\r\n                                    matrix = plugin.commit(false, true);\r\n\r\n                                    vector.graph.matrix = matrix;\r\n                                    vector.attr('transform', matrix.toValue());\r\n                                    \r\n                                    matrix = null;\r\n                                    plugin = null;\r\n                                } else {\r\n                                    matrix = to[key].clone();\r\n\r\n                                    vector.graph.matrix = matrix;\r\n                                    vector.attr('transform', matrix.toValue());\r\n\r\n                                    matrix = null;\r\n                                }\r\n                                break;\r\n                            \r\n                            default:\r\n                                vector.attr(key, to[key]);\r\n                                break;\r\n                        }\r\n                    }\r\n                    \r\n                    scene.played++;\r\n\r\n                    this.stacks.splice(tick--, 1);\r\n\r\n                    var repeat = anim.repeat(), \r\n                        played = scene.played;\r\n\r\n                    if ((repeat > 1 && played < repeat) && ! curr.next ) {\r\n                        _.forOwn(anim.scenes, function(s, k){\r\n                            for (var key in s.params) {\r\n                                if (key == 'transform') {\r\n                                    vector.graph.matrix = curr.reset.matrix;\r\n                                    vector.attr('transform', curr.reset.transform);\r\n                                } else {\r\n                                    vector.attr(k, curr.reset[k]);    \r\n                                }\r\n                            }\r\n                        });\r\n\r\n                        this.start(\r\n                            anim,\r\n                            anim.frame(0),\r\n                            curr.reset,\r\n                            null\r\n                        );\r\n                    }\r\n\r\n                    if (curr.next && ! curr.stop) {\r\n                        this.start(\r\n                            anim,\r\n                            curr.next,\r\n                            curr.reset,\r\n                            null\r\n                        );\r\n                    }\r\n\r\n                    if (played >= repeat) {\r\n                        // ___DONE___?\r\n                        curr = null;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.stacks.length) {\r\n                Animator.play(_.bind(this.player, this));\r\n            } else {\r\n                // ___DONE___\r\n            }\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Animator';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n    Animator.play = (function(g){\r\n        var func = g.requestAnimationFrame || \r\n                   g.webkitRequestAnimationFrame || \r\n                   g.mozRequestAnimationFrame || \r\n                   g.oRequestAnimationFrame || \r\n                   g.msRequestAnimationFrame || \r\n                   function (callback) { \r\n                        setTimeout(callback, 16); \r\n                   };\r\n\r\n        return _.bind(func, g);\r\n    }(global));\r\n\r\n    ///////// INTERNAL ANIMATION /////////\r\n    \r\n    var Animation = Graph.extend({\r\n\r\n        props: {\r\n            easing: 'linier',\r\n            duration: 1000,\r\n            repeat: 1,\r\n            delay: 0\r\n        },\r\n        \r\n        scenes: {},\r\n        frames: [],\r\n\r\n        constructor: function(keyframes, duration, easing, callback) {\r\n            this.props.guid = 'graph-anim-' + (++Animation.guid);\r\n            this.props.duration = duration = _.defaultTo(duration, 1000);\r\n\r\n            if (_.isFunction(easing)) {\r\n                if (callback) {\r\n                    this.props.easing = 'function';\r\n                } else {\r\n                    callback = easing;\r\n                    easing = this.props.easing;\r\n                }\r\n            }\r\n\r\n            if ( ! easing) {\r\n                easing = this.props.easing;\r\n            }\r\n\r\n            if (keyframes) {\r\n                var easing = _.isString(easing) ? Animation.easing[easing] : easing,\r\n                    repeat = this.props.repeat,\r\n                    scenes = this.scenes,\r\n                    frames = this.frames;\r\n\r\n                _.forOwn(keyframes, function(f, key){\r\n                    var params = {}, frame, scene;\r\n\r\n                    frame = _.toNumber(key);\r\n\r\n                    params = _.pickBy(f, function(v, k){\r\n                        return !!Animation.animable[k];\r\n                    });\r\n\r\n                    scene = {\r\n                        frame: frame,\r\n                        params: params,\r\n                        easing: easing,\r\n                        callback: callback,\r\n                        played: 0\r\n                    };\r\n\r\n                    frames.push(frame);\r\n                    scenes[frame] = scene;\r\n                });\r\n\r\n                frames.sort(function(a, b){ return a - b });\r\n            }\r\n        },\r\n\r\n        guid: function() {\r\n            return this.props.guid;\r\n        },\r\n\r\n        duration: function() {\r\n            return this.props.duration;\r\n        },\r\n\r\n        easing: function() {\r\n            return this.props.easing;\r\n        },\r\n\r\n        delay: function(delay) {\r\n\r\n            if (delay === undefined) {\r\n                return this.props.delay;\r\n            }\r\n\r\n            var anim = new Animation();\r\n\r\n            anim.frames = this.frames;\r\n            anim.scenes = _.cloneDeep(this.scenes);\r\n            anim.props  = _.cloneDeep(this.props);\r\n            anim.props.delay = delay || 0;\r\n            \r\n            return anim;\r\n        },\r\n\r\n        repeat: function(times) {\r\n\r\n            if (times === undefined) {\r\n                return this.props.repeat;\r\n            }\r\n\r\n            var anim = new Animation();\r\n\r\n            anim.frames = this.frames.slice();\r\n            anim.scenes = _.cloneDeep(this.scenes);\r\n            anim.props  = _.cloneDeep(this.props);\r\n            anim.props.repeat = Math.floor(Math.max(times, 0)) || 1;\r\n\r\n            // reset to scenes\r\n            _.forOwn(anim.scenes, function(s, f){\r\n                s.played = 0;\r\n            });\r\n\r\n            return anim;\r\n        },\r\n\r\n        count: function() {\r\n            return this.frames.length;\r\n        },\r\n\r\n        at: function(index) {\r\n            var frame = this.frame(index);\r\n            return this.scene(frame);\r\n        },\r\n\r\n        frame: function(index) {\r\n            return this.frames[index];\r\n        },\r\n\r\n        scene: function(frame) {\r\n            return this.scenes[frame];\r\n        },\r\n\r\n        destroy: function() {\r\n            this.scenes = null;\r\n            this.frames = null;\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n    _.extend(Animation, {\r\n        guid: 0,\r\n\r\n        animable: {\r\n             x: { type: 'number', defaults: 0 },\r\n             y: { type: 'number', defaults: 0 },\r\n            cx: { type: 'number', defaults: 0 },\r\n            cy: { type: 'number', defaults: 0 },\r\n            transform: { type: 'transform', defaults: '' }\r\n        },\r\n\r\n        easing: {\r\n            linier: function(n) {\r\n                return n;\r\n            },\r\n\r\n            easeIn: function(n) {\r\n                return Math.pow(n, 1.7);\r\n            },\r\n\r\n            easeOut: function(n) {\r\n                return Math.pow(n, .48);\r\n            },\r\n\r\n            easeInOut: function(n) {\r\n                var q = .48 - n / 1.04,\r\n                    Q = Math.sqrt(.1734 + q * q),\r\n                    x = Q - q,\r\n                    X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\r\n                    y = -Q - q,\r\n                    Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\r\n                    t = X + Y + .5;\r\n                return (1 - t) * 3 * t * t + t * t * t;\r\n            },\r\n\r\n            backIn: function(n) {\r\n                var s = 1.70158;\r\n                return n * n * ((s + 1) * n - s);\r\n            },\r\n\r\n            backOut: function (n) {\r\n                n = n - 1;\r\n                var s = 1.70158;\r\n                return n * n * ((s + 1) * n + s) + 1;\r\n            },\r\n\r\n            elastic: function (n) {\r\n                if (n == !!n) {\r\n                    return n;\r\n                }\r\n                return pow(2, -10 * n) * math.sin((n - .075) * (2 * PI) / .3) + 1;\r\n            },\r\n\r\n            bounce: function (n) {\r\n                var s = 7.5625,\r\n                    p = 2.75,\r\n                    l;\r\n                if (n < (1 / p)) {\r\n                    l = s * n * n;\r\n                } else {\r\n                    if (n < (2 / p)) {\r\n                        n -= (1.5 / p);\r\n                        l = s * n * n + .75;\r\n                    } else {\r\n                        if (n < (2.5 / p)) {\r\n                            n -= (2.25 / p);\r\n                            l = s * n * n + .9375;\r\n                        } else {\r\n                            n -= (2.625 / p);\r\n                            l = s * n * n + .984375;\r\n                        }\r\n                    }\r\n                }\r\n                return l;\r\n            }\r\n        }\r\n    });\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function equalizeTransform (t1, t2) {\r\n        t2 = _.toString(t2).replace(/\\.{3}|\\u2026/g, t1);\r\n        t1 = Graph.util.transform2segments(t1) || [];\r\n        t2 = Graph.util.transform2segments(t2) || [];\r\n        \r\n        var maxlength = Math.max(t1.length, t2.length),\r\n            from = [],\r\n            to = [],\r\n            i = 0, j, jj,\r\n            tt1, tt2;\r\n\r\n        for (; i < maxlength; i++) {\r\n            tt1 = t1[i] || emptyTransform(t2[i]);\r\n            tt2 = t2[i] || emptyTransform(tt1);\r\n\r\n            if ((tt1[0] != tt2[0]) ||\r\n                (tt1[0].toLowerCase() == \"rotate\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3])) ||\r\n                (tt1[0].toLowerCase() == \"scale\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4]))) {\r\n                return {\r\n                    equal: false,\r\n                    from: tt1,\r\n                    to: tt2\r\n                }\r\n            }\r\n            from[i] = [];\r\n            to[i] = [];\r\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\r\n                j in tt1 && (from[i][j] = tt1[j]);\r\n                j in tt2 && (to[i][j] = tt2[j]);\r\n            }\r\n        }\r\n        return {\r\n            equal: true,\r\n            from: from,\r\n            to: to\r\n        };\r\n    }\r\n\r\n    function emptyTransform(item) {\r\n        var l = item[0];\r\n        switch (l.toLowerCase()) {\r\n            case \"translate\": return [l, 0, 0];\r\n            case \"matrix\": return [l, 1, 0, 0, 1, 0, 0];\r\n            case \"rotate\": if (item.length == 4) {\r\n                return [l, 0, item[2], item[3]];\r\n            } else {\r\n                return [l, 0];\r\n            }\r\n            case \"scale\": if (item.length == 5) {\r\n                return [l, 1, 1, item[3], item[4]];\r\n            } else if (item.length == 3) {\r\n                return [l, 1, 1];\r\n            } else {\r\n                return [l, 1];\r\n            }\r\n        }\r\n    }\r\n\r\n}());","\r\n(function(){\r\n    \r\n    Graph.plugin.Resizer = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            context: null,\r\n            vector: null,\r\n            enabled: true,\r\n            suspended: true,\r\n            handleImage: Graph.config.base + 'img/resize-control.png',\r\n            handleSize: 17,\r\n            rendered: false\r\n        },\r\n\r\n        components: {\r\n            holder: null,\r\n            helper: null,\r\n            handle: null\r\n        },\r\n\r\n        trans: {\r\n            // original offset\r\n            ox: 0,\r\n            oy: 0,\r\n\r\n            // original\r\n            ow: 0,\r\n            oh: 0,\r\n\r\n            // current\r\n            cw: 0,\r\n            ch: 0,\r\n\r\n            // translation\r\n            dx: 0,\r\n            dy: 0\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var me = this, guid = vector.guid();\r\n            \r\n            options = options || {};\r\n\r\n            if (options.context) {\r\n                options.context = options.context.guid();\r\n            } else {\r\n                options.context = guid;\r\n            }\r\n\r\n            _.assign(me.props, options);\r\n\r\n            vector.addClass('graph-resizable');\r\n\r\n            me.props.handleImage = Graph.config.base + 'img/resize-control.png';\r\n            me.props.vector = guid;\r\n\r\n            me.cached.snapping = null;\r\n            me.cached.vertices = null;\r\n\r\n            me.initComponent();\r\n        },\r\n        \r\n        holder: function() {\r\n            return Graph.registry.vector.get(this.components.holder);\r\n        },\r\n\r\n        helper: function() {\r\n            return Graph.registry.vector.get(this.components.helper);\r\n        },\r\n\r\n        handle: function(dir) {\r\n            return Graph.registry.vector.get(this.components.handle[dir]);\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = me.components;\r\n            var holder, helper;\r\n\r\n            holder = (new Graph.svg.Group())\r\n                .addClass('graph-resizer')\r\n                .removeClass('graph-elem graph-elem-group');\r\n\r\n            holder.elem.group('graph-resizer');\r\n\r\n            holder.on({\r\n                render: _.bind(me.onHolderRender, me)\r\n            });\r\n            \r\n            helper = (new Graph.svg.Rect(0, 0, 0, 0, 0))\r\n                .addClass('graph-resizer-helper')\r\n                .removeClass('graph-elem graph-elem-rect')\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(holder);\r\n\r\n            helper.elem.group('graph-resizer');\r\n\r\n            comp.handle = {};\r\n\r\n            var handle = {\r\n                ne: {cursor: 'nesw-resize'},\r\n                se: {cursor: 'nwse-resize'},\r\n                sw: {cursor: 'nesw-resize'},\r\n                nw: {cursor: 'nwse-resize'},\r\n                 n: {cursor: 'ns-resize', axis: 'y'},\r\n                 e: {cursor: 'ew-resize', axis: 'x'},\r\n                 s: {cursor: 'ns-resize', axis: 'y'},\r\n                 w: {cursor: 'ew-resize', axis: 'x'}\r\n            };\r\n\r\n            _.forOwn(handle, function(c, dir){\r\n                (function(dir){\r\n                    var h = (new Graph.svg.Image(\r\n                        me.props.handleImage,\r\n                        0,\r\n                        0,\r\n                        me.props.handleSize,\r\n                        me.props.handleSize\r\n                    ))\r\n                    .selectable(false)\r\n                    .removeClass('graph-elem graph-elem-image')\r\n                    .addClass('graph-resizer-handle handle-' + dir);\r\n\r\n                    h.elem.group('graph-resizer');\r\n                    h.props.dir = dir;\r\n                    h.draggable(c);\r\n                    \r\n                    h.on('dragstart', _.bind(me.onHandleMoveStart, me));\r\n                    h.on('dragmove', _.bind(me.onHandleMove, me));\r\n                    h.on('dragend', _.bind(me.onHandleMoveEnd, me));\r\n\r\n                    h.render(holder);\r\n\r\n                    comp.handle[dir] = h.guid();\r\n                    h = null;\r\n                }(dir));\r\n            });\r\n\r\n            comp.holder = holder.guid();\r\n            comp.helper = helper.guid();\r\n\r\n            holder = null;\r\n            helper = null;\r\n            handle = null;\r\n        },\r\n\r\n        invalidate: function()  {\r\n            this.superclass.prototype.invalidate.call(this);\r\n            this.cached.vertices = null;\r\n        },\r\n\r\n        render: function() {\r\n            var me = this;\r\n\r\n            if (me.props.rendered) {\r\n                me.redraw();\r\n                return;\r\n            }\r\n            \r\n            me.holder().render(me.vector().parent());\r\n            me.props.rendered = true;\r\n\r\n            me.redraw();\r\n        },\r\n\r\n        snap: function(snap) {\r\n            this.cached.snapping = snap;\r\n        },\r\n\r\n        vertices: function() {\r\n            var me = this,\r\n                vector = me.vector(),\r\n                vertices = me.cached.vertices;\r\n\r\n            if ( ! vertices) {\r\n                // get original bounding\r\n                var path = vector.pathinfo(),\r\n                    bbox = path.bbox().toJson(),\r\n                    rotate = vector.globalMatrix().rotate();\r\n\r\n                var ro, cx, cy, ox, oy, hs, hw, hh;\r\n\r\n                ro = rotate.deg;\r\n                cx = 0;\r\n                cy = 0;\r\n                ox = bbox.x;\r\n                oy = bbox.y;\r\n                hs = me.props.handleSize / 2;\r\n\r\n                if (ro) {\r\n                    var rmatrix = Graph.matrix(),\r\n                        path = me.pathinfo();\r\n\r\n                    cx = bbox.x + bbox.width / 2,\r\n                    cy = bbox.y + bbox.height / 2;\r\n\r\n                    rmatrix.rotate(-ro, cx, cy);\r\n\r\n                    path = path.transform(rmatrix);\r\n                    bbox = path.bbox().toJson();\r\n                } else {\r\n                    if (this.props.context != this.props.vector) {\r\n                        path = me.pathinfo();\r\n                        bbox = path.bbox().toJson();\r\n                    }\r\n                }\r\n\r\n                hw = bbox.width / 2;\r\n                hh = bbox.height / 2;\r\n\r\n                vertices = {\r\n                    ne: {\r\n                        x: bbox.x + bbox.width - hs,\r\n                        y: bbox.y - hs\r\n                    },\r\n\r\n                    se: {\r\n                        x: bbox.x + bbox.width - hs,\r\n                        y: bbox.y + bbox.height - hs\r\n                    },\r\n\r\n                    sw: {\r\n                        x: bbox.x - hs,\r\n                        y: bbox.y + bbox.height - hs\r\n                    },\r\n\r\n                    nw: {\r\n                        x: bbox.x - hs,\r\n                        y: bbox.y - hs\r\n                    },\r\n\r\n                    n: {\r\n                        x: bbox.x + hw - hs,\r\n                        y: bbox.y - hs\r\n                    },\r\n                    e: {\r\n                        x: bbox.x + bbox.width - hs,\r\n                        y: bbox.y + hh - hs\r\n                    },\r\n                    s: {\r\n                        x: bbox.x + hw - hs,\r\n                        y: bbox.y + bbox.height - hs\r\n                    },\r\n                    w: {\r\n                        x: bbox.x - hs,\r\n                        y: bbox.y + hh - hs\r\n                    },\r\n\r\n                    rotate: {\r\n                        deg: ro,\r\n                        cx: cx,\r\n                        cy: cy\r\n                    },\r\n\r\n                    box: {\r\n                        x: bbox.x,\r\n                        y: bbox.y,\r\n                        width: bbox.width,\r\n                        height: bbox.height\r\n                    },\r\n\r\n                    offset: {\r\n                        x: ox,\r\n                        y: oy\r\n                    }\r\n                };\r\n\r\n                this.cached.vertices = vertices;\r\n            }\r\n\r\n            return vertices;\r\n        },\r\n\r\n        redraw: function() {\r\n            var me = this,\r\n                helper = me.helper(),\r\n                holder = me.holder();\r\n\r\n            var vx;\r\n\r\n            if ( ! holder) {\r\n                return;\r\n            }\r\n\r\n            vx = this.vertices();\r\n\r\n            if ( ! vx) {\r\n                return;\r\n            }\r\n            \r\n            helper.reset();\r\n\r\n            helper.attr({\r\n                x: vx.box.x,\r\n                y: vx.box.y,\r\n                width: vx.box.width,\r\n                height: vx.box.height\r\n            });\r\n            \r\n            helper.rotate(vx.rotate.deg, vx.rotate.cx, vx.rotate.cy).commit();\r\n\r\n            _.forOwn(me.components.handle, function(id, dir){\r\n                (function(id, dir){\r\n                    var h = me.handle(dir);\r\n                    h.show();\r\n                    h.reset();\r\n                    h.attr(vx[dir]);\r\n                    h.rotate(vx.rotate.deg, vx.rotate.cx, vx.rotate.cy).commit();\r\n                }(id, dir));\r\n            });\r\n\r\n            me.trans.ox = vx.offset.x;\r\n            me.trans.oy = vx.offset.y;\r\n            me.trans.ow = this.trans.cw = vx.box.width;\r\n            me.trans.oh = this.trans.ch = vx.box.height;\r\n            me.trans.dx = 0;\r\n            me.trans.dy = 0;\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.holder().elem.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            if ( ! this.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            if (this.props.suspended) {\r\n\r\n                this.props.suspended = false;\r\n\r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else { \r\n                    this.vector().parent().elem.append(this.holder().elem);\r\n                    this.redraw();\r\n                }\r\n            }\r\n        },\r\n\r\n        onHolderRender: function(e) {\r\n            \r\n        },\r\n\r\n        onHandleMoveStart: function(e) {\r\n            var me = this, handle = e.publisher;\r\n\r\n            _.forOwn(me.components.handle, function(id, dir){\r\n                var h = me.handle(dir);\r\n                if (h !== handle) {\r\n                    h.hide();\r\n                }\r\n            });\r\n\r\n            var snapping = this.cached.snapping;\r\n\r\n            if (snapping && handle.draggable().snap() !== snapping) {\r\n                handle.draggable().snap(snapping);    \r\n            }\r\n            \r\n            handle.show();\r\n            handle.removeClass('dragging');\r\n        },\r\n\r\n        onHandleMove: function(e) {\r\n            var me = this, \r\n                helper = me.helper(), \r\n                handle = e.publisher;\r\n            \r\n            var tr = this.trans,\r\n                dx = e.dx,\r\n                dy = e.dy;\r\n\r\n            switch(handle.props.dir) {\r\n                case 'ne':\r\n                    tr.cw += dx;\r\n                    tr.ch -= dy;\r\n\r\n                    me.trans.dy += dy;\r\n                    helper.translate(0, dy).commit();\r\n                    break;\r\n\r\n                case 'se':\r\n                    tr.cw += dx;\r\n                    tr.ch += dy;\r\n\r\n                    break;\r\n\r\n                case 'sw':\r\n                    tr.cw -= dx;\r\n                    tr.ch += dy;\r\n\r\n                    me.trans.dx += dx;\r\n                    helper.translate(dx, 0).commit();\r\n                    break;\r\n\r\n                case 'nw':\r\n                    tr.cw -= dx;\r\n                    tr.ch -= dy;\r\n\r\n                    me.trans.dx += dx;\r\n                    me.trans.dy += dy;\r\n                    helper.translate(dx, dy).commit();\r\n                    break;\r\n\r\n                case 'n':\r\n                    tr.cw += 0;\r\n                    tr.ch -= dy;\r\n\r\n                    me.trans.dy += dy;\r\n                    helper.translate(0, dy).commit();\r\n                    break;\r\n\r\n                case 'e':\r\n                    tr.cw += dx;\r\n                    tr.ch += 0;\r\n\r\n                    break;\r\n\r\n                case 's':\r\n                    tr.cw += 0;\r\n                    tr.ch += dy;\r\n                    break;\r\n\r\n                case 'w':\r\n                    tr.cw -= dx;\r\n                    tr.ch += 0;\r\n\r\n                    me.trans.dx += dx;\r\n                    helper.translate(dx, 0).commit();\r\n                    break;\r\n            }\r\n\r\n            helper.attr({\r\n                width:  tr.cw,\r\n                height: tr.ch\r\n            });\r\n\r\n        },\r\n\r\n        onHandleMoveEnd: function(e) {\r\n            var me = this,\r\n                tr = this.trans,\r\n                handle = e.publisher;\r\n\r\n            var sx, sy, cx, cy, dx, dy;\r\n\r\n            sx = tr.ow > 0 ? (tr.cw / tr.ow) : 1;\r\n            sy = tr.oh > 0 ? (tr.ch / tr.oh) : 1;\r\n            dx = tr.dx;\r\n            dy = tr.dy;\r\n\r\n            switch(handle.props.dir) {\r\n                case 'ne':\r\n                    cx = tr.ox;\r\n                    cy = tr.oy + tr.oh;\r\n                    break;\r\n                case 'se':\r\n                    cx = tr.ox;\r\n                    cy = tr.oy;\r\n                    break;\r\n                case 'sw':\r\n                    cx = tr.ox + tr.ow;\r\n                    cy = tr.oy;\r\n                    break;\r\n                case 'nw':\r\n                    cx = tr.ox + tr.ow;\r\n                    cy = tr.oy + tr.oh;\r\n                    break;\r\n                case 'n':\r\n                    cx = tr.ox + tr.ow / 2;\r\n                    cy = tr.oy + tr.oh;\r\n                    break;\r\n                case 'e':\r\n                    cx = tr.ox;\r\n                    cy = tr.oy + tr.oh / 2;\r\n                    break;\r\n                case 's':\r\n                    cx = tr.ox + tr.ow / 2;\r\n                    cy = tr.oy;\r\n                    break;\r\n                case 'w':\r\n                    cx = tr.ox + tr.ow;\r\n                    cy = tr.oy + tr.oh / 2;\r\n                    break;\r\n            }\r\n\r\n            // track translation\r\n            var vector = me.vector(),\r\n                oldcen = vector.bbox().center().toJson(),\r\n                resize = vector.resize(sx, sy, cx, cy, dx, dy),\r\n                newcen = vector.bbox().center().toJson();\r\n\r\n            var vdx = newcen.x - oldcen.x,\r\n                vdy = newcen.y - oldcen.y;\r\n\r\n            resize.translate.dx = vdx;\r\n            resize.translate.dy = vdy;\r\n            \r\n            me.redraw();\r\n            me.fire('resize', resize);\r\n        },\r\n\r\n        destroy: function() {\r\n            // remove handles\r\n            var me = this\r\n\r\n            _.forOwn(me.components.handle, function(id, dir){\r\n                var h = me.handle(dir);\r\n                h.remove();\r\n            });\r\n\r\n            me.components.handle = null;\r\n\r\n            // remove helper\r\n            me.helper().remove();\r\n            me.components.helper = null;\r\n\r\n            // remove holder\r\n            me.holder().remove();\r\n            me.components.holder = null;\r\n\r\n            // remove listeners\r\n            me.listeners = null;\r\n        }\r\n        \r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Collector = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            enabled: false,\r\n            suspended: true,\r\n            rendered: false,\r\n            activator: 'tool',\r\n            ready: false\r\n        },\r\n\r\n        paper: null,\r\n\r\n        collection: [],\r\n\r\n        components: {\r\n            rubber: null\r\n        },\r\n\r\n        collecting: {\r\n            \r\n        },\r\n\r\n        constructor: function(paper) {\r\n            var me = this;\r\n\r\n            if ( ! paper.isPaper()) {\r\n                throw Graph.error('Lasso tool only available for paper !');\r\n            }\r\n            \r\n            me.paper = paper;\r\n            me.components.rubber = Graph.$('<div class=\"graph-rubberband\">');\r\n\r\n            paper.on('keynavdown', _.bind(me.onKeynavDown, me));\r\n            paper.on('keynavup', _.bind(me.onKeynavUp, me));\r\n\r\n            if (me.paper.props.rendered) {\r\n                me.setup();\r\n            } else {\r\n                me.paper.on('render', function(){\r\n                    me.setup();\r\n                });\r\n            }\r\n        },\r\n\r\n        enable: function(activator) {\r\n            this.props.enabled = true;\r\n            this.props.activator = activator;\r\n\r\n            this.paper.cursor('crosshair');\r\n            this.paper.state('collecting');\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.enabled = false;\r\n            this.paper.cursor('default');\r\n        },\r\n\r\n        setup: function() {\r\n            var me = this;\r\n\r\n            if (me.props.ready) {\r\n                return;\r\n            }\r\n\r\n            me.props.ready = true;\r\n\r\n            var collecting = me.collecting,\r\n                paper = me.paper,\r\n                layout = paper.layout(),\r\n                offset = layout.offset(),\r\n                rubber = me.components.rubber,\r\n                vendor = paper.interactable().vendor();\r\n\r\n            vendor.styleCursor(false);\r\n\r\n            vendor.draggable({\r\n\r\n                manualStart: true,\r\n\r\n                onstart: function(e) {\r\n\r\n                    _.assign(collecting, {\r\n                        start: {\r\n                            x: e.clientX,\r\n                            y: e.clientY,    \r\n                        },\r\n                        end: {\r\n                            x: e.clientX,\r\n                            y: e.clientY,    \r\n                        },\r\n                        bounds: {}\r\n                    });\r\n\r\n                    rubber.query.css({\r\n                        width: 0,\r\n                        height: 0,\r\n                        transform: 'translate(' + (collecting.start.x - offset.left) + 'px, ' + (collecting.start.y - offset.top) + 'px)'   \r\n                    });\r\n                },\r\n                \r\n                onmove: function(e) {\r\n                    var start = collecting.start,\r\n                        end = {\r\n                            x: e.clientX,\r\n                            y: e.clientY\r\n                        };\r\n\r\n                    var bounds;\r\n\r\n                    if ((start.x <= end.x && start.y < end.y) || (start.x < end.x && start.y <= end.y)) {\r\n                        bounds = {\r\n                            x: start.x,\r\n                            y: start.y,\r\n                            width:  end.x - start.x,\r\n                            height: end.y - start.y\r\n                        };\r\n                    } else if ((start.x >= end.x && start.y < end.y) || (start.x > end.x && start.y <= end.y)) {\r\n                        bounds = {\r\n                            x: end.x,\r\n                            y: start.y,\r\n                            width:  start.x - end.x,\r\n                            height: end.y - start.y\r\n                        };\r\n                    } else if ((start.x <= end.x && start.y > end.y) || (start.x < end.x && start.y >= end.y)) {\r\n                        bounds = {\r\n                            x: start.x,\r\n                            y: end.y,\r\n                            width:  end.x - start.x,\r\n                            height: start.y - end.y\r\n                        };\r\n                    } else if ((start.x >= end.x && start.y > end.y) || (start.x > end.x && start.y >= end.y)) {\r\n                        bounds = {\r\n                            x: end.x,\r\n                            y: end.y,\r\n                            width:  start.x - end.x,\r\n                            height: start.y - end.y\r\n                        };\r\n                    } else {\r\n                        bounds = {\r\n                            x: end.x,\r\n                            y: end.y,\r\n                            width:  0,\r\n                            height: 0\r\n                        };\r\n                    }\r\n\r\n                    collecting.bounds = bounds;\r\n\r\n                    rubber.query.css({\r\n                        width:  bounds.width,\r\n                        height: bounds.height,\r\n                        transform: 'translate(' + (bounds.x - offset.left) + 'px,' + (bounds.y - offset.top) + 'px)'\r\n                    });\r\n                },\r\n\r\n                onend: function() {\r\n                    var context = paper.guid(),\r\n                        vectors = Graph.registry.vector.collect(context),\r\n                        bounds = collecting.bounds,\r\n                        scale = layout.scale();\r\n\r\n                    var start = layout.grabLocation({\r\n                        clientX: bounds.x, \r\n                        clientY: bounds.y\r\n                    });\r\n\r\n                    var end = layout.grabLocation({\r\n                        clientX: bounds.x + bounds.width,\r\n                        clientY: bounds.y + bounds.height\r\n                    });\r\n\r\n                    var bbox = new Graph.lang.BBox({\r\n                        x: start.x,\r\n                        y: start.y,\r\n                        x2: end.x,\r\n                        y2: end.y,\r\n                        width: end.x - start.x,\r\n                        height: end.y - start.y\r\n                    });\r\n\r\n                    bbox.transform(paper.viewport().matrix());\r\n                    \r\n                    _.forEach(vectors, function(v){\r\n                        if (v.guid() != context && v.isSelectable() && ! v.isGroup()) {\r\n                            if (bbox.contains(v)) {\r\n                                me.collect(v, true);\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    if (me.props.activator == 'tool') {\r\n                        paper.tool().activate('panzoom');    \r\n                    }\r\n\r\n                    bbox = null;\r\n                    me.suspend();\r\n                }\r\n            })\r\n            .on('down', function(e){\r\n                var single = ! (e.ctrlKey || e.shiftKey),\r\n                    vector = Graph.registry.vector.get(e.target);\r\n\r\n                if (vector) {\r\n                    if ( ! vector.isSelectable()) {\r\n                        if ( ! vector.elem.belong('graph-resizer') && ! vector.elem.belong('graph-link')) {\r\n                            if (single) {\r\n                                me.clearCollection(); \r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            .on('tap', function(e){\r\n                var vector = Graph.registry.vector.get(e.target),\r\n                    single = ! (e.ctrlKey || e.shiftKey);\r\n                \r\n                if (vector && vector.isSelectable()) {\r\n                    if (vector.paper().state() == 'linking') {\r\n                        me.clearCollection();\r\n                        return;\r\n                    }\r\n\r\n                    if (single) {\r\n                        me.clearCollection();\r\n                    }\r\n                    \r\n                    me.collect(vector, ! single);\r\n                }\r\n\r\n            }, true)\r\n            .on('move', function(e){\r\n                var i = e.interaction;\r\n\r\n                if (me.props.enabled) {\r\n                    if (i.pointerIsDown && ! i.interacting()) {\r\n\r\n                        var action = {name: 'drag'};\r\n\r\n                        // -- workaround for a bug in v1.2.6 of interact.js\r\n                        i.prepared.name = action.name;\r\n                        i.setEventXY(i.startCoords, i.pointers);\r\n\r\n                        if (e.currentTarget === paper.node()) {\r\n                            if (me.props.suspended) {\r\n                                me.resume();\r\n                            }\r\n                            i.start(action, e.interactable, rubber.node());\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        render: function() {\r\n            var me = this;\r\n\r\n            if (me.props.rendered) {\r\n                return;\r\n            }\r\n\r\n            me.paper.container().append(me.components.rubber);\r\n            me.props.rendered = true;\r\n        },\r\n\r\n        collect: function(vector, batch) {\r\n            var me = this, offset;\r\n\r\n            vector.lasso = this;\r\n            vector.batch = batch;\r\n\r\n            vector.select(batch);\r\n\r\n            offset = _.indexOf(this.collection, vector);\r\n\r\n            if (offset === -1) {\r\n                this.collection.push(vector);\r\n            }\r\n\r\n            Graph.cached.paper = me.paper.guid();\r\n        },\r\n\r\n        decollect: function(vector) {\r\n            var batch, offset;\r\n            \r\n            batch = vector.batch;\r\n\r\n            delete vector.lasso;\r\n            delete vector.batch;\r\n\r\n            vector.deselect(batch);\r\n\r\n            offset = _.indexOf(this.collection, vector);\r\n\r\n            if (offset > -1) {\r\n                this.collection.splice(offset, 1);\r\n            }\r\n        },\r\n\r\n        clearCollection: function(except) {\r\n            var me = this, \r\n                collection = me.collection.slice();\r\n\r\n            _.forEach(collection, function(v){\r\n                if (v !== except) {\r\n                    me.decollect(v);\r\n                }\r\n            });\r\n\r\n            collection = null;\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.components.rubber.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            if (this.props.suspended) {\r\n                this.props.suspended = false;\r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else {\r\n                    this.paper.container().append(this.components.rubber);\r\n                }\r\n            }\r\n        },\r\n\r\n        syncDragStart: function(origin, e) {\r\n            var me = this;\r\n\r\n            _.forEach(me.collection, function(v){\r\n                if (v.plugins.dragger && v.plugins.dragger.props.enabled && v !== origin) {\r\n                    (function(){\r\n                        var mat = v.graph.matrix.data(),\r\n                            sin = mat.sin,\r\n                            cos = mat.cos;\r\n\r\n                        if (v.plugins.resizer && ! v.plugins.resizer.suspended) {\r\n                            v.plugins.resizer.suspend();\r\n                        }\r\n\r\n                        if (v.plugins.dragger.props.ghost) {\r\n                            v.plugins.dragger.resume();\r\n                        }\r\n\r\n                        v.syncdrag = {\r\n                            sin: sin,\r\n                            cos: cos,\r\n                            tdx: 0,\r\n                            tdy: 0\r\n                        };\r\n\r\n                        v.addClass('dragging');\r\n                        \r\n                        v.fire('dragstart', {\r\n                            dx: e.dx *  cos + e.dy * sin,\r\n                            dy: e.dx * -sin + e.dy * cos,\r\n                            batch: true\r\n                        });\r\n\r\n                    }());\r\n                }\r\n            });\r\n\r\n            me.fire('beforedrag');\r\n        },\r\n\r\n        syncDragMove: function(origin, e) {\r\n            var me = this, dx, dy;\r\n\r\n            _.forEach(me.collection, function(v){\r\n                if (v.plugins.dragger && v.plugins.dragger.props.enabled && v !== origin) {\r\n                    (function(v, e){\r\n                        var dx = e.ox *  v.syncdrag.cos + e.oy * v.syncdrag.sin,\r\n                            dy = e.ox * -v.syncdrag.sin + e.oy * v.syncdrag.cos;\r\n\r\n                        if (v.plugins.dragger.props.ghost) {\r\n                            v.plugins.dragger.helper().translate(e.ox, e.oy).commit();\r\n                        } else {\r\n                            v.translate(dx, dy).commit();\r\n                        }\r\n\r\n                        v.syncdrag.tdx += dx;\r\n                        v.syncdrag.tdy += dy;\r\n\r\n                        v.fire('dragmove', {\r\n                            dx: dx,\r\n                            dy: dy,\r\n                            batch: true\r\n                        });\r\n\r\n                    }(v, e));    \r\n                }\r\n            });\r\n\r\n        },\r\n\r\n        syncDragEnd: function(origin, e) {\r\n            var me = this;\r\n\r\n            _.forEach(me.collection, function(v, i){\r\n                if (v.plugins.dragger && v.plugins.dragger.props.enabled && v !== origin) {\r\n                    (function(v, e){\r\n                        var batchSync = v.plugins.dragger.props.batchSync,\r\n                            ghost = v.plugins.dragger.props.ghost;\r\n\r\n                        if (ghost) {\r\n                            if (batchSync) {\r\n                                v.translate(v.syncdrag.tdx, v.syncdrag.tdy).commit();    \r\n                            }\r\n                            v.plugins.dragger.suspend();\r\n                        }\r\n                        \r\n                        if ( ! batchSync) {\r\n                            v.dirty(true);    \r\n                        }\r\n\r\n                        v.fire('dragend', {\r\n                            dx: v.syncdrag.tdx,\r\n                            dy: v.syncdrag.tdy,\r\n                            batch: true\r\n                        });\r\n                        \r\n                        v.removeClass('dragging');\r\n                        \r\n                        delete v.syncdrag;\r\n\r\n                    }(v, e));\r\n                }\r\n            });\r\n\r\n            e.origin = origin;\r\n            e.type = 'afterdrag';\r\n            \r\n            me.fire(e);\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Collector';\r\n        },\r\n\r\n        onKeynavDown: function(e) {\r\n            if (e.keyCode == Graph.event.SHIFT && this.props.activator != 'key') {\r\n                var tool = this.paper.tool(),\r\n                    curr = tool.current();\r\n\r\n                if (curr != 'collector') {\r\n                    tool.activate('collector', 'key');\r\n                }\r\n            }\r\n        },\r\n\r\n        onKeynavUp: function(e) {\r\n            if (e.keyCode == Graph.event.SHIFT) {\r\n                var tool = this.paper.tool(),\r\n                    curr = tool.current();\r\n\r\n                if (curr == 'collector') {\r\n                    this.props.activator = 'tool';\r\n                    tool.activate('panzoom');\r\n                }\r\n            }\r\n        }   \r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Dragger = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            ready: false,\r\n            manual: false,\r\n            \r\n            ghost: false,\r\n            vector: null,\r\n            enabled: true,\r\n            rendered: false,\r\n            suspended: true,\r\n            inertia: false,\r\n            bound: false,\r\n            grid: null,\r\n            axis: false,\r\n            cursor: 'move',\r\n\r\n            dragClass: '',\r\n\r\n            // batching operation\r\n            batchSync: true\r\n        },\r\n\r\n        rotation: {\r\n            deg: 0,\r\n            rad: 0,\r\n            sin: 0,\r\n            cos: 1\r\n        },\r\n\r\n        scaling: {\r\n            x: 1,\r\n            y: 1\r\n        },\r\n\r\n        trans: {\r\n            vector: null,\r\n            paper: null,\r\n            helper: null,\r\n            dx: 0,\r\n            dy: 0\r\n        },\r\n\r\n        components: {\r\n            holder: null,\r\n            helper: null\r\n        },\r\n        \r\n        constructor: function(vector, options) {\r\n            var me = this;\r\n\r\n            vector.addClass('graph-draggable');\r\n            me.props.vector = vector.guid();\r\n\r\n            options = _.extend({\r\n                inertia: false\r\n            }, options || {});\r\n\r\n            _.forEach(['axis', 'grid', 'bbox', 'ghost'], function(name){\r\n                if (options[name] !== undefined) {\r\n                    me.props[name] = options[name];\r\n                }\r\n            });\r\n            \r\n            _.assign(me.props, options);\r\n\r\n            me.cached.snapping = null;\r\n            me.cached.origin = null;\r\n\r\n            me.initComponent();\r\n\r\n            vector.on('render.dragger', _.bind(me.onVectorRender, me));\r\n            \r\n            if (vector.props.rendered) {\r\n                me.setup();\r\n            }\r\n        },\r\n        \r\n        holder: function() {\r\n            return Graph.registry.vector.get(this.components.holder);\r\n        },\r\n\r\n        helper: function() {\r\n            return Graph.registry.vector.get(this.components.helper);\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = me.components;\r\n            var holder, helper;\r\n\r\n            if (me.props.ghost) {\r\n                holder = (new Graph.svg.Group())\r\n                    .addClass('graph-dragger')\r\n                    .removeClass('graph-elem graph-elem-group')\r\n                    .traversable(false)\r\n                    .selectable(false);\r\n\r\n                var style = 'graph-dragger-helper' + (me.props.dragClass ? ' ' + me.props.dragClass : '');\r\n\r\n                helper = (new Graph.svg.Rect(0, 0, 0, 0, 0))\r\n                    .addClass(style)\r\n                    .removeClass('graph-elem graph-elem-rect')\r\n                    .traversable(false)\r\n                    .selectable(false)\r\n                    .clickable(false)\r\n                    .render(holder);\r\n\r\n                style = null;\r\n\r\n                helper.elem.data(Graph.string.ID_VECTOR, this.vector().guid());\r\n\r\n                comp.holder = holder.guid();\r\n                comp.helper = helper.guid();\r\n\r\n                holder = null;\r\n                helper = null;\r\n            }\r\n        },\r\n\r\n        setup: function() {\r\n            var me, vector, vendor, paper, options;\r\n\r\n            if (this.props.ready) {\r\n                return;\r\n            }\r\n\r\n            me = this;\r\n            vector = me.vector();\r\n            paper = vector.paper();\r\n            options = {};\r\n\r\n            _.extend(options, {\r\n                manualStart: true,\r\n                onstart: _.bind(me.onDragStart, me),\r\n                onmove: _.bind(me.onDragMove, me),\r\n                onend: _.bind(me.onDragEnd, me)\r\n            });\r\n\r\n            vendor = vector.interactable().vendor();\r\n            vendor.draggable(options);\r\n            vendor.styleCursor(false);\r\n\r\n            me.cached.origin   = vendor.origin();\r\n            me.cached.snapping = [];\r\n            \r\n            vendor.on('down', function draggerDown(e){\r\n                e.preventDefault();\r\n                // e.stopPropagation();\r\n            });\r\n\r\n            if ( ! me.props.manual) {\r\n                vendor.on('move', _.bind(me.onPointerMove, me, _, vector));    \r\n            }\r\n            \r\n            var matrix = vector.globalMatrix(),\r\n                rotate = matrix.rotate(),\r\n                scale  = matrix.scale();\r\n\r\n            me.rotate(rotate.deg);\r\n            me.scale(scale.x, scale.y);\r\n            \r\n            if (me.props.grid) {\r\n                me.snap({\r\n                    mode: 'grid',\r\n                    x: me.props.grid[0],\r\n                    y: me.props.grid[1]\r\n                });\r\n            }\r\n\r\n            me.props.ready = true;\r\n        },\r\n\r\n        enable: function() {\r\n            this.props.enabled = true;\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.enabled = false;\r\n        },\r\n\r\n        ghost: function(ghost) {\r\n            if (ghost === undefined) {\r\n                return this.props.ghost;\r\n            }\r\n            this.props.ghost = ghost;\r\n            return this;\r\n        },\r\n\r\n        render: function() {\r\n            var me = this, vector = me.vector();\r\n\r\n            if ( ! me.props.rendered) {\r\n                me.props.rendered = true;\r\n                me.holder().render(vector.parent());\r\n            }\r\n\r\n            if (me.props.ghost) {\r\n                me.redraw();\r\n            }   \r\n            \r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.holder().elem.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            this.props.suspended = false;\r\n\r\n            if ( ! this.props.rendered) {\r\n                this.render();\r\n            } else {\r\n                this.vector().parent().elem.append(this.holder().elem);\r\n                this.redraw();\r\n            }\r\n        },\r\n\r\n        redraw: function() {\r\n            var vector = this.vector(),\r\n                helper = this.helper();\r\n\r\n            if (helper) {\r\n                var vbox = vector.bbox().toJson(),\r\n                    hbox = helper.bbox().toJson();\r\n\r\n                var dx = vbox.x - hbox.x,\r\n                    dy = vbox.y - hbox.y;\r\n\r\n                helper.translate(dx, dy).commit();\r\n\r\n                helper.attr({\r\n                    width: vbox.width,\r\n                    height: vbox.height\r\n                });\r\n            }\r\n        },\r\n\r\n        rotate: function(deg) {\r\n            var rad = Graph.util.rad(deg);\r\n            this.rotation.deg = deg;\r\n            this.rotation.rad = rad;\r\n            this.rotation.sin = Math.sin(rad);\r\n            this.rotation.cos = Math.cos(rad);\r\n        },\r\n\r\n        scale: function(sx, sy) {\r\n            sy = _.defaultTo(sy, sx);\r\n            this.scaling.x = sx;\r\n            this.scaling.y = sy;\r\n        },\r\n\r\n        origin: function(origin) {\r\n            if (origin === undefined) {\r\n                return this.cached.origin;\r\n            }\r\n\r\n            this.cached.origin = origin;\r\n\r\n            var vendor = this.vector().interactable().vendor();\r\n\r\n            if (vendor) {\r\n                vendor.origin(origin);\r\n            }\r\n        },\r\n\r\n        snap: function(snap, end) {\r\n\r\n            if (snap === undefined) {\r\n                return this.cached.snapping;\r\n            }\r\n\r\n            if (end === undefined) {\r\n                end = false;\r\n            }\r\n\r\n            var me = this, snaps = [];\r\n\r\n            // save original request\r\n            this.cached.snapping = snap;\r\n\r\n            if (_.isArray(snap)) {\r\n                _.forEach(snap, function(s){\r\n                    snaps.push(fixsnap(s));\r\n                });\r\n            } else {\r\n                snaps.push(fixsnap(snap));\r\n            }\r\n\r\n            var vendor = this.vector().interactable().vendor();\r\n\r\n            if (vendor) {\r\n                vendor.setOptions('snap', {\r\n                    targets: snaps,\r\n                    endOnly: end\r\n                });\r\n            }\r\n\r\n            /////////\r\n            \r\n            function fixsnap(snap) {\r\n                \r\n                if (_.isFunction(snap)) {\r\n                    return snap;\r\n                }\r\n                \r\n                snap.mode = _.defaultTo(snap.mode, 'anchor');\r\n                \r\n                if (snap.mode == 'grid') {\r\n                    if (me.props.axis == 'x') {\r\n                        snap.y = 0;\r\n                    } else if (me.props.axis == 'y') {\r\n                        snap.x = 0;\r\n                    }\r\n                    snap = interact.createSnapGrid({x: snap.x, y: snap.y});\r\n                } else {\r\n                    snap.range = _.defaultTo(snap.range, 20);\r\n                }\r\n                return snap;\r\n            }\r\n        },\r\n\r\n        resetSnap: function() {\r\n            this.snaps = [];\r\n\r\n            this.snap({\r\n                mode: 'grid',\r\n                x: this.props.grid[0],\r\n                y: this.props.grid[1]\r\n            });\r\n        },\r\n\r\n        bound: function(bound) {\r\n            \r\n        },\r\n\r\n        onVectorRender: function() {\r\n            this.setup();\r\n        },\r\n\r\n        onPointerMove: function draggerMove(e, vector) {\r\n            var i = e.interaction;\r\n\r\n            if (this.props.enabled) {\r\n                if (i.pointerIsDown && ! i.interacting()) {\r\n                    var paper = vector.paper(),\r\n                        node = vector.node(),\r\n                        action = {name: 'drag'};\r\n\r\n                    // -- workaround for a bug in v1.2.6 of interact.js\r\n                    i.prepared.name = action.name;\r\n                    i.setEventXY(i.startCoords, i.pointers);\r\n\r\n                    if (e.currentTarget === node) {\r\n                        if (paper) {\r\n                            var state = paper.state();\r\n                            \r\n                            if (state == 'collecting') {\r\n                                if (vector.elem.belong('graph-resizer')) {\r\n                                    paper.tool().activate('panzoom');    \r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            } else if (state == 'linking') {\r\n                                return;\r\n                            }\r\n                        }\r\n                        \r\n                        if (this.props.ghost) {\r\n                            if (this.props.suspended) {\r\n                                this.resume();\r\n                            }\r\n                            i.start(action, e.interactable, this.helper().node());\r\n                        } else {\r\n                            i.start(action, e.interactable, node);\r\n                        }\r\n\r\n                    }\r\n                }    \r\n            }\r\n\r\n            e.preventDefault();\r\n\r\n        },\r\n\r\n        onDragStart: function(e) {\r\n            var vector = this.vector(), \r\n                paper = vector.paper(),\r\n                helper = this.helper();\r\n\r\n            vector.addClass('dragging');\r\n            paper.cursor(this.props.cursor);\r\n\r\n            this.trans.vector = vector;\r\n            this.trans.paper = paper;\r\n            this.trans.helper = helper;\r\n\r\n            this.trans.dx = 0;\r\n            this.trans.dy = 0;\r\n            this.trans.hx = 0;\r\n            this.trans.hy = 0;\r\n\r\n            var edata = {\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n                dx: 0,\r\n                dy: 0,\r\n                ghost: this.props.ghost,\r\n                batch: false\r\n            };\r\n\r\n            this.fire('dragstart', edata);\r\n        },\r\n\r\n        onDragMove: function(e) {\r\n            \r\n            var trans = this.trans,\r\n                paper = trans.paper,\r\n                vector = trans.vector,\r\n                helper = trans.helper,\r\n                axs = this.props.axis,\r\n                deg = this.rotation.deg,\r\n                sin = this.rotation.sin,\r\n                cos = this.rotation.cos,\r\n                scaleX = this.scaling.x,\r\n                scaleY = this.scaling.y;\r\n\r\n            // check current scaling\r\n            var scaling = vector.globalMatrix().scale();\r\n            \r\n            if (scaling.x !== scaleX || scaling.y !== scaleY) {\r\n                this.scale(scaling.x, scaling.y);\r\n                scaleX = scaling.x;\r\n                scaleY = scaling.y;\r\n            }\r\n            \r\n            var edx = _.defaultTo(e.dx, 0),\r\n                edy = _.defaultTo(e.dy, 0);\r\n            \r\n            var dx, dy, hx, hy, tx, ty;\r\n            \r\n            dx = dy = hx = hy = tx = ty = 0;\r\n                \r\n            edx /= scaleX;\r\n            edy /= scaleY;\r\n\r\n            if (axs == 'x') {\r\n                dx = hx = edx;\r\n                dy = hy = 0;\r\n\r\n                tx = edx *  cos + 0 * sin;\r\n                ty = edx * -sin + 0 * cos;\r\n            } else if (axs == 'y') {\r\n                dx = hx = 0;\r\n                dy = hy = edy;\r\n\r\n                tx = 0 *  cos + edy * sin;\r\n                ty = 0 * -sin + edy * cos;\r\n            } else {\r\n                hx = edx;\r\n                hy = edy;\r\n                \r\n                dx = tx = edx *  cos + edy * sin;\r\n                dy = ty = edx * -sin + edy * cos;  \r\n            }\r\n\r\n            this.trans.dx += tx;\r\n            this.trans.dy += ty;\r\n\r\n            this.trans.hx += hx;\r\n            this.trans.hy += hy;\r\n            \r\n            var pageX = _.defaultTo(e.pageX, e.x0),\r\n                pageX = _.defaultTo(e.pageY, e.y0);\r\n\r\n            pageX /= scaleX;\r\n            pageX /= scaleY;\r\n            \r\n            var event = {\r\n                pageX: pageX,\r\n                pageY: pageX,\r\n                \r\n                ex: edx,\r\n                ey: edy,\r\n\r\n                dx: dx,\r\n                dy: dy,\r\n                \r\n                hx: hx,\r\n                hy: hy,\r\n                \r\n                ox: hx,\r\n                oy: hy,\r\n                \r\n                ghost: this.props.ghost,\r\n                batch: false\r\n            };\r\n\r\n            this.fire('dragmove', event);\r\n            \r\n            if (helper) {\r\n                helper.translate(event.hx, event.hy).commit();\r\n            } else {\r\n                vector.translate(event.dx, event.dy).commit();\r\n            }\r\n        },\r\n\r\n        onDragEnd: function(e) {\r\n            var trans = this.trans,\r\n                paper = trans.paper,\r\n                vector = trans.vector,\r\n                helper = trans.helper,\r\n                dx = trans.dx,\r\n                dy = trans.dy,\r\n                hx = trans.hx,\r\n                hy = trans.hy;\r\n\r\n            if (helper) {\r\n                vector.translate(dx, dy).commit();\r\n                this.redraw();\r\n                this.suspend();\r\n            }\r\n\r\n            vector.removeClass('dragging');\r\n            paper.cursor('default');\r\n\r\n            var edata = {\r\n                dx: dx,\r\n                dy: dy,\r\n                ghost: this.props.ghost,\r\n                batch: false\r\n            };\r\n            \r\n            this.fire('dragend', edata);\r\n            \r\n            this.trans.vector = null;\r\n            this.trans.paper = null;\r\n            this.trans.helper = null;\r\n\r\n            this.trans.dx = 0;\r\n            this.trans.dy = 0;\r\n            this.trans.hx = 0;\r\n            this.trans.hy = 0;\r\n\r\n        },\r\n\r\n        destroy: function() {\r\n            var me = this;\r\n\r\n            if (me.components.helper) {\r\n                me.helper().remove();\r\n            }\r\n\r\n            me.components.helper = null;\r\n\r\n            if (me.components.holder) {\r\n                me.holder().remove();\r\n            }\r\n\r\n            me.components.holder = null;\r\n            me.listeners = {};\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Dropper = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            overlap: 'center',\r\n            accept: '.graph-draggable'\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var me = this;\r\n\r\n            _.assign(me.props, options || {});\r\n            vector.addClass('graph-dropzone').removeClass('graph-draggable');\r\n\r\n            me.props.vector = vector.guid();    \r\n            \r\n            vector.on({\r\n                render: _.bind(me.onVectorRender, me)\r\n            });\r\n\r\n            if (vector.props.rendered) {\r\n                me.setup();\r\n            }\r\n        },\r\n\r\n        setup: function() {\r\n            var me = this;\r\n\r\n            if (me.plugin) {\r\n                return;\r\n            }\r\n\r\n            var config = _.extend({}, me.props, {\r\n                checker: _.bind(me.onDropValidate, me),\r\n\r\n                ondropactivate: _.bind(me.onDropActivate, me),\r\n                ondropdeactivate: _.bind(me.onDropDeactivate, me),\r\n                ondragenter: _.bind(me.onDragEnter, me),\r\n                ondragleave: _.bind(me.onDragLeave, me),\r\n                ondrop: _.bind(me.onDrop, me)\r\n            });\r\n\r\n            me.plugin = me.vector.interactable().dropzone(config);\r\n        },\r\n\r\n        onDropValidate: function( edrop, edrag, dropped, dropzone, dropel, draggable, dragel ) {\r\n            return dropped;\r\n            /*if (dropped) {\r\n                if (this.config.validate) {\r\n                    var args = _.toArray(arguments);\r\n                    dropped = this.config.validate.apply(this, args);\r\n                }    \r\n            }\r\n            \r\n            return dropped;*/\r\n        },\r\n\r\n        onVectorRender: function() {\r\n            this.setup();\r\n        },\r\n\r\n        onDropActivate: function(e) {\r\n            this.vector().addClass('drop-activate');\r\n        },\r\n\r\n        onDropDeactivate: function(e) {\r\n            this.vector().removeClass('drop-activate');\r\n        },\r\n\r\n        onDragEnter: function(e) {\r\n            this.vector().removeClass('drop-activate').addClass('drop-enter');\r\n            e.type = 'dropenter';\r\n            this.fire(e);\r\n        },\r\n\r\n        onDragLeave: function(e) {\r\n            this.vector().removeClass('drop-enter').addClass('drop-activate');\r\n            e.type = 'dropleave';\r\n            this.fire(e);\r\n        },\r\n\r\n        onDrop: function(e) {\r\n            this.vector().removeClass('drop-activate drop-enter');\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Sorter = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            height: 0,\r\n            width: 0,\r\n            suspended: true,\r\n            enabled: true,\r\n            offsetTop: 0,\r\n            offsetLeft: 0\r\n        },\r\n\r\n        sortables: [],\r\n        origins: [],\r\n        guests: [],\r\n        batch: [],\r\n        \r\n        trans: {\r\n            sorting: false,\r\n            valid: false,\r\n            drag: null,\r\n            drop: null\r\n        },\r\n\r\n        components: {\r\n            helper: null\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            var me = this;\r\n\r\n            me.vector = vector;\r\n            me.vector.addClass('graph-sorter');\r\n\r\n            me.components.helper = new Graph.svg.Rect(0, 0, 0, 0);\r\n            me.components.helper.addClass('graph-sorter-helper');\r\n            me.components.helper.removeClass('graph-elem graph-elem-rect');\r\n            me.components.helper.props.selectable = false;\r\n            me.components.helper.render(me.vector);\r\n            me.components.helper.$sorter = me;\r\n            \r\n            me.sortables.push(me.components.helper);\r\n\r\n            me.vector.on({\r\n                render: _.bind(me.onVectorRender, me),\r\n                appendchild: _.bind(me.onItemAdded, me),\r\n                prependchild: _.bind(me.onItemAdded, me)\r\n            });\r\n\r\n            if (me.vector.props.rendered) {\r\n                me.setup();\r\n            }\r\n        },\r\n\r\n        // setup plugin\r\n        setup: function() {\r\n            var me = this,\r\n                vector = me.vector,\r\n                paper = vector.paper(),\r\n                context = vector.node();\r\n\r\n            if (me.plugin) {\r\n                return;\r\n            }\r\n            \r\n            me.plugin = interact('.graph-sortable', {context: context}).dropzone({\r\n                accept: '.graph-sortable',\r\n                // overlap: 'center',\r\n                overlap: .1,\r\n                // checker: _.bind(me.snapping, me),\r\n                ondropactivate: _.bind(me.onSortActivate, me),\r\n                ondropdeactivate: _.bind(me.onSortDeactivate, me),\r\n                ondragenter: _.bind(me.onSortEnter, me),\r\n                ondragleave: _.bind(me.onSortLeave, me),\r\n                ondrop: _.bind(me.onSort, me)\r\n            });\r\n\r\n            me.plugin.styleCursor(false);\r\n\r\n            if (paper.plugins.collector) {\r\n                paper.plugins.collector.on({\r\n                    afterdrag: function(e) {\r\n                        var origin = e.origin;\r\n                        if (_.indexOf(me.sortables, origin) > -1) {\r\n                           me.props.offsetTop += e.dy;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        snapping: function(drage, pointe, dropped, dropzone, dropel, draggable, dragel) {\r\n            return dropped;\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n\r\n            if (this.components.helper) {\r\n                this.components.helper.focus(false);\r\n                this.components.helper.removeClass('visible');\r\n            }\r\n        },\r\n\r\n        resume: function() {\r\n            var me = this;\r\n\r\n            me.props.suspended = false;\r\n\r\n            if (me.components.helper) {\r\n                me.components.helper.addClass('visible');\r\n            }\r\n        },\r\n\r\n        redraw: function() {\r\n            var me = this;\r\n\r\n            if (me.trans.valid) {\r\n\r\n                if (me.props.suspended) {\r\n                    me.resume();    \r\n                }\r\n\r\n                me.swap(me.components.helper, me.trans.drop);\r\n                me.components.helper.focus();\r\n            }\r\n        },\r\n\r\n        commit: function() {\r\n            var me = this;\r\n\r\n            _.forEach(me.guests, function(g){\r\n                me.vector.elem.append(g.node());\r\n            });\r\n\r\n            _.forEach(me.sortables, function(s){\r\n                s.$master  = false;\r\n                s.$sorter  = null;\r\n                s.$sorting = false;\r\n            });\r\n\r\n            me.components.helper.attr('height', 0);\r\n            \r\n            if (me.batch.length) {\r\n                me.permute();\r\n            } else {\r\n                me.swap(me.trans.drag, me.components.helper);\r\n            }\r\n\r\n            _.forEach(me.origins, function(o){\r\n                o.components.helper.attr('height', 0);\r\n                o.reset();\r\n                o.arrange();\r\n                o.suspend();\r\n            });\r\n\r\n            me.reset();\r\n            me.suspend();\r\n            me.resumeBatch(me.batch);\r\n        },\r\n\r\n        revert: function() {\r\n            var me = this;\r\n            \r\n            _.forEach(me.guests, function(g){\r\n                me.vector.elem.append(g.node());\r\n            });\r\n\r\n            _.forEach(me.sortables, function(s){\r\n                s.$sorting = false;\r\n                s.$sorter  = null;\r\n                s.$master  = false;\r\n            });\r\n\r\n            _.forEach(me.origins, function(o){\r\n                o.components.helper.attr('height', 0);\r\n                o.reset();\r\n                o.arrange();\r\n                o.suspend();\r\n            });\r\n\r\n            me.components.helper.attr('height', 0);\r\n            me.reset();\r\n            me.arrange();\r\n            me.suspend();\r\n            me.resumeBatch(me.batch);\r\n        },  \r\n\r\n        permute: function() {\r\n            var me = this,\r\n                target = _.indexOf(me.sortables, me.components.helper),\r\n                stacks = _.map(me.sortables, function(s, i){ return i; });\r\n\r\n            me.batch.sort(function(a, b){\r\n                var ta = a.offset().top,\r\n                    tb = b.offset().top;\r\n                return ta === tb ? 0 : (ta < tb ? -1 : 1);\r\n            });\r\n\r\n            orders = _.map(me.batch, function(b){\r\n                return _.indexOf(me.sortables, b);\r\n            });\r\n\r\n            var swaps  = _.difference(stacks, orders),\r\n                repos = _.indexOf(swaps, target);\r\n\r\n            _.insert(swaps, repos, orders);\r\n\r\n            me.sortables = _.permute(me.sortables, swaps);\r\n            me.arrange();\r\n        },\r\n\r\n        swap: function(source, target) {\r\n            var me = this,\r\n                from = _.indexOf(me.sortables, source),\r\n                to = _.indexOf(me.sortables, target);\r\n\r\n            _.move(me.sortables, from, to);\r\n            me.arrange();\r\n        },\r\n\r\n        arrange: function() {\r\n            var me = this;\r\n\r\n            me.props.height = 0;\r\n            me.props.width  = 0;\r\n\r\n            _.forEach(me.sortables, function(s){\r\n                if ( ! s.$sorting) {\r\n                    var sbox = s.bbox().toJson(),\r\n                        dy = me.props.height- sbox.y + me.props.offsetTop;\r\n\r\n                    s.translate(0, dy).commit();\r\n                    me.props.height += sbox.height;\r\n\r\n                    if (sbox.width > me.props.width) {\r\n                        me.props.width = sbox.width;\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        suspendBatch: function(batch, predicate) {\r\n            _.forEach(batch, function(b){\r\n                b.cascade(function(c){\r\n                    if (c.props.selected && c.resizer) {\r\n                        c.resizer.suspend();\r\n                    }\r\n                });\r\n\r\n                if (predicate) {\r\n                    predicate.call(b, b);\r\n                }\r\n            });\r\n        },\r\n\r\n        resumeBatch: function(batch) {\r\n            var me = this, timer;\r\n            timer = _.delay(function(){\r\n                clearTimeout(timer);\r\n                _.forEach(batch, function(b){\r\n                    b.cascade(function(c){\r\n                        if (c.props.selected && c.resizer) {\r\n                            c.resizer.resume();\r\n                        }\r\n                    });\r\n                })\r\n            }, 0);\r\n        },\r\n\r\n        reset: function() {\r\n            this.guests = [];\r\n            this.origins = [];\r\n            this.trans.drag = null;\r\n            this.trans.sorting = false;\r\n            this.trans.valid = false;\r\n            this.trans.drop = null;\r\n        },\r\n\r\n        enroll: function(item) {\r\n            var me = this, sorter;\r\n\r\n            if (_.indexOf(me.sortables, item) === -1)  {\r\n                sorter = item.$sorter;\r\n                sorter.release(item);\r\n\r\n                if (_.indexOf(me.origins, sorter) === -1) {\r\n                    me.origins.push(sorter);\r\n                }\r\n\r\n                item.$sorter  = me;\r\n\r\n                if (item.$master) {\r\n                    me.trans.drag = item;\r\n                }\r\n                \r\n                item.off('.sorter');\r\n                item.tree.parent = me.vector;\r\n                me.vector.children().push(item);\r\n                me.guests.push(item);    \r\n            }\r\n            \r\n        },\r\n\r\n        release: function(item) {\r\n            var me = this, \r\n                sorter = item.$sorter || me;\r\n\r\n            var offset;\r\n\r\n            item.off('.sorter');\r\n            item.$sorter = null;\r\n            item.tree.parent = null;\r\n\r\n            if (item.$master) {\r\n                sorter.trans.drag = null;\r\n            }\r\n\r\n            sorter.vector.children().pull(item);\r\n            \r\n            if ((offset = _.indexOf(sorter.sortables, item)) > -1) {\r\n                sorter.sortables.splice(offset, 1);\r\n            }\r\n\r\n            if ((offset = _.indexOf(sorter.batch, item)) > -1) {\r\n                sorter.batch.splice(offset, 1);\r\n            }\r\n\r\n            if ((offset = _.indexOf(sorter.guests, item)) > -1) {\r\n                sorter.guests.splice(offset, 1);\r\n            }\r\n        },\r\n\r\n        onVectorRender: function() {\r\n            this.setup();\r\n        },\r\n\r\n        onItemAdded: function(item) {\r\n            var me = this, delay;\r\n\r\n            if (_.indexOf(me.sortables, item) > -1) {\r\n                return;\r\n            }\r\n\r\n            if (item.hasClass('graph-sorter-helper')) {\r\n                return;\r\n            }\r\n\r\n            item.$sorter = this;\r\n            item.addClass('graph-sortable');\r\n            \r\n            item.off('.sorter');\r\n\r\n            item.on('render.sorter',    _.bind(me.onItemRender, me));\r\n            item.on('resize.sorter',    _.bind(me.onItemResize, me));\r\n            item.on('dragstart.sorter', _.bind(me.onItemDragStart, me));\r\n            item.on('dragend.sorter',   _.bind(me.onItemDragEnd, me));\r\n            item.on('collect.sorter',   _.bind(me.onItemCollect, me));\r\n            item.on('decollect.sorter', _.bind(me.onItemDecollect, me));\r\n\r\n            me.sortables.push(item);\r\n\r\n            if (item.props.rendered && ! item.$sorting) {\r\n                delay = _.delay(function(){\r\n                    clearTimeout(delay);\r\n                    me.arrange();\r\n                }, 0);\r\n            }\r\n        },\r\n\r\n        onItemRender: function(e) {\r\n            var me = this, delay;\r\n            delay = _.delay(function(){\r\n                clearTimeout(delay);\r\n                me.arrange();\r\n            }, 0);\r\n        },\r\n\r\n        onItemResize: function(e) {\r\n            var item = e.publisher,\r\n                sorter = item.$sorter || this, defer;\r\n\r\n            suppress(item, true);\r\n\r\n            _.forEach(sorter.sortables, function(s){\r\n                if (s !== item) {\r\n                    e.type = 'resize.sortable';\r\n                    s.fire(e);\r\n                }\r\n            });\r\n\r\n            defer = _.defer(function(item){\r\n                clearTimeout(defer);\r\n                sorter.arrange();\r\n                suppress(item, false);\r\n            }, item);\r\n\r\n            /////////\r\n            \r\n            function suppress(item, state) {\r\n                item.cascade(function(c){\r\n                    if (c.props.selected && c.resizer) {\r\n                        var method = state ? 'suspend' : 'resume';\r\n                        c.resizer[method].call(c.resizer);\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        onItemDragStart: function(e) {\r\n            var me = this, \r\n                item = e.publisher,\r\n                bsize = me.batch.length;\r\n\r\n            var bbox;\r\n            \r\n            me.props.enabled = bsize && (bsize + 1) === me.sortables.length ? false : true;\r\n\r\n            if ( ! me.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            item.$sorter = me;\r\n            item.$master = true;\r\n            item.$sorting = true;\r\n\r\n            me.trans.drag = item;\r\n            me.trans.sorting = true;\r\n\r\n            bbox = item.bbox().toJson();  \r\n            width = me.props.width;\r\n            height = bbox.height;\r\n\r\n            if (bsize) {\r\n                if ( ! item.lasso) {\r\n                    me.batch.pop().lasso.clearCollection();\r\n                    me.batch = [];\r\n                } else {\r\n                    height = 0;\r\n                    me.suspendBatch(me.batch, function(b){\r\n                        var box = b.bbox().toJson();\r\n                        height += box.height;\r\n\r\n                        b.$sorter = me;\r\n                        b.$sorting = true;\r\n                    });\r\n                }\r\n            }\r\n\r\n            me.components.helper.attr({\r\n                width: width,\r\n                height: height\r\n            });   \r\n        },\r\n\r\n        onItemDragEnd: function(e) {\r\n            var me = this;\r\n\r\n            if ( ! me.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            if (me.trans.sorting) {\r\n                if ( ! me.trans.valid) {\r\n                    me.revert();\r\n                }\r\n            } else {\r\n                me.revert();\r\n            }\r\n        },\r\n\r\n        onItemCollect: function(e) {\r\n            var item = e.publisher,\r\n                sorter = item.$sorter || this;\r\n\r\n            sorter.batch.push(item);\r\n        },\r\n\r\n        onItemDecollect: function(e, item) {\r\n            var item = e.publisher,\r\n                sorter = item.$sorter || this, offset;\r\n\r\n            offset = _.indexOf(sorter.batch, item);\r\n            \r\n            if (offset > -1) {\r\n                sorter.batch.splice(offset, 1);\r\n            }\r\n        },\r\n\r\n        onSortActivate: function() {},\r\n\r\n        onSortDeactivate: function() {},\r\n\r\n        onSortEnter: function(e) {\r\n            var me = this;\r\n            var drag, drop, bbox, width, height;\r\n            \r\n            if ( ! me.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            drag = Graph.registry.vector.get(e.relatedTarget);\r\n            drop = Graph.registry.vector.get(e.target);\r\n\r\n            if (drag.lasso) {\r\n                \r\n                height = 0;\r\n                width  = me.props.width;\r\n\r\n                _.forEach(drag.lasso.collection, function(v){\r\n                    var box;\r\n\r\n                    if (v.$sorter) {\r\n\r\n                        if (v.$sorter !== me) {\r\n                            me.enroll(v);\r\n                            me.batch.push(v);\r\n                        }\r\n                        \r\n                        box = v.bbox().toJson();\r\n                        height += box.height;\r\n\r\n                        if (box.width > width) {\r\n                            width = box.width;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                me.components.helper.attr({\r\n                    width: width,\r\n                    height: height\r\n                });\r\n            } else {\r\n                if (drag.$sorter) {\r\n                    if (drag.$sorter !== me) {\r\n                        if (me.batch.length) {\r\n                            me.suspendBatch(me.batch);\r\n                        }\r\n\r\n                        me.enroll(drag);\r\n\r\n                        bbox = drag.bbox().toJson();\r\n                        height = bbox.height;\r\n                        width = me.props.width;\r\n\r\n                        me.components.helper.attr({\r\n                            width: width,\r\n                            height: height    \r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            me.trans.drop  = drop;\r\n            me.trans.valid = true;\r\n\r\n            me.redraw();\r\n        },\r\n\r\n        onSortLeave: function() {\r\n            var me = this;\r\n\r\n            if ( ! me.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            me.trans.drop = null;\r\n            me.trans.valid = false;\r\n            me.suspend();\r\n        },\r\n\r\n        onSort: function() {\r\n            var me = this;\r\n\r\n            if ( ! me.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            me.commit();\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n    \r\n    var CLS_CONNECT_VALID = 'connect-valid',\r\n        CLS_CONNECT_INVALID = 'connect-invalid',\r\n        CLS_CONNECT_RESET = 'connect-valid connect-invalid',\r\n        CLS_CONNECT_CLEAR = 'connect-valid connect-invalid connect-hover',\r\n        CLS_CONNECT_HOVER = 'connect-hover';\r\n    \r\n    Graph.plugin.Network = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            context: null,\r\n            vector: null,\r\n            wiring: 'h:h'\r\n        },\r\n\r\n        linking: {\r\n            valid: false,\r\n            router: null,\r\n            source: null,\r\n            target: null,\r\n            link: null,\r\n            pole: null\r\n        },\r\n        \r\n        constructor: function(vector, options) {\r\n            var me = this, guid = vector.guid();\r\n            \r\n            options = options || {};\r\n\r\n            if (options.context) {\r\n                options.context = options.context.guid();\r\n            } else {\r\n                options.context = guid;\r\n            }\r\n\r\n            _.assign(me.props, options);\r\n\r\n            me.props.vector = guid;\r\n\r\n            me.cached.cables = {};\r\n            me.cached.pairs = {};\r\n\r\n            vector.addClass('graph-connectable');\r\n            \r\n            // setup link droppable\r\n            \r\n            var vendor = vector.interactable().vendor();\r\n            \r\n            vendor.dropzone({\r\n                accept: _.format('.{0}, .{1}', Graph.styles.LINK_HEAD, Graph.styles.LINK_TAIL),\r\n                overlap: .2\r\n            })\r\n            .on('dropdeactivate', function(e){\r\n                var v = Graph.registry.vector.get(e.target);\r\n                if (v) {\r\n                    v.removeClass(CLS_CONNECT_CLEAR);\r\n                }\r\n                me.invalidateTrans();\r\n            })\r\n            .on('dropactivate', function(e){\r\n                var v = Graph.registry.vector.get(e.target);\r\n                \r\n                if (v) {\r\n                    v.addClass(CLS_CONNECT_HOVER);\r\n                }\r\n                \r\n                me.invalidateTrans();\r\n            })\r\n            .on('dragenter', function(e){\r\n                var link = Graph.registry.link.get(e.relatedTarget);\r\n\r\n                if (link) {\r\n                    var pole = Graph.$(e.relatedTarget).data('pole');\r\n                    var valid, source, target;\r\n\r\n                    if (pole == 'head') {\r\n                        source = link.router.source();\r\n                        target = vector;\r\n                    } else {\r\n                        source = vector;\r\n                        target = link.router.target();\r\n                    }\r\n                    \r\n                    valid  = source.connectable().canConnect(target.connectable(), link);\r\n                    \r\n                    if (valid) {\r\n                        vector.removeClass(CLS_CONNECT_INVALID);\r\n                        vector.addClass(CLS_CONNECT_VALID);\r\n                    } else {\r\n                        vector.removeClass(CLS_CONNECT_VALID);\r\n                        vector.addClass(CLS_CONNECT_INVALID);\r\n                    }\r\n                    \r\n                    _.assign(me.linking, {\r\n                        valid: valid,\r\n                        router: link.router,\r\n                        source: source,\r\n                        target: target,\r\n                        pole: pole\r\n                    });\r\n\r\n                    link.router.updateTrans('CONNECT', {\r\n                        valid: valid,\r\n                        source: source,\r\n                        target: target\r\n                    });\r\n                }\r\n            })\r\n            .on('dragleave', function(e){\r\n                var v = Graph.registry.vector.get(e.target);\r\n                if (v) {\r\n                    v.removeClass(CLS_CONNECT_RESET);\r\n                }\r\n                \r\n                me.linking.valid = false;\r\n                \r\n                if (me.linking.pole == 'head') {\r\n                    me.linking.router.updateTrans('CONNECT', {\r\n                        valid: false,\r\n                        target: null\r\n                    });    \r\n                } else {\r\n                    me.linking.router.updateTrans('CONNECT', {\r\n                        valid: false,\r\n                        source: null\r\n                    });\r\n                }\r\n                \r\n            })\r\n            .on('drop', function(e){\r\n                if (me.linking.valid) {\r\n                    if (me.linking.pole == 'head') {\r\n                        me.linking.router.updateTrans('CONNECT', {\r\n                            target: vector\r\n                        });\r\n                    } else {\r\n                        me.linking.router.updateTrans('CONNECT', {\r\n                            source: vector\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        \r\n        invalidateTrans: function() {\r\n            for (var name in this.linking) {\r\n                this.linking[name] = null;\r\n            }\r\n        },  \r\n        \r\n        wiring: function() {\r\n            return this.props.wiring;\r\n        },\r\n\r\n        treshold: function() {\r\n            var wiring = this.props.wiring;\r\n\r\n            switch(wiring) {\r\n                case 'h:h':\r\n                case 'v:v':\r\n                    return 20;\r\n                case 'h:v':\r\n                case 'v:h':\r\n                    return -10;\r\n            }\r\n\r\n            return 0;\r\n        },\r\n        \r\n        direction: function (network) {\r\n            var orient = this.orientation(network);\r\n            \r\n            switch(orient) {\r\n                case 'intersect':\r\n                    return null;\r\n                case 'top':\r\n                case 'bottom':\r\n                    return 'v:v';\r\n                case 'left':\r\n                case 'right':\r\n                    return 'h:h';\r\n                default:\r\n                    return this.props.wiring;\r\n            }\r\n        },\r\n        \r\n        orientation: function(network) {\r\n            var srcbox = this.bbox().toJson(),\r\n                refbox = network.bbox().toJson(),\r\n                orient = Graph.util.boxOrientation(srcbox, refbox, this.treshold());\r\n            \r\n            srcbox = refbox = null;\r\n            \r\n            return orient;\r\n        },\r\n        \r\n        isSource: function(link) {\r\n            return link.source().guid() == this.vector().guid();\r\n        },\r\n        \r\n        isTarget: function(link) {\r\n            return link.target().guid() == this.vector().guid();\r\n        },\r\n        \r\n        addLink: function(link, type, pair) {\r\n            var guid = link.guid(),\r\n                cables = this.cached.cables,\r\n                pairs = this.cached.pairs;\r\n\r\n            pair  = pair.guid();\r\n            pairs = pairs || {};\r\n            \r\n            pairs[pair] = pairs[pair] || [];\r\n\r\n            if (_.indexOf(pairs[pair], guid) === -1) {\r\n                pairs[pair].push(guid);\r\n            }\r\n            \r\n            cables[guid] = {\r\n                type: type,\r\n                pair: pair\r\n            };\r\n        },\r\n\r\n        removeLink: function(link) {\r\n            var guid, pair;\r\n\r\n            if (_.isString(link)) {\r\n                guid = link;\r\n            } else {\r\n                guid = link.guid();\r\n            }\r\n            \r\n            var conn = this.cached.cables[guid];\r\n\r\n            if (conn) {\r\n                if (this.cached.pairs[conn.pair]) {\r\n                    var index = _.indexOf(this.cached.pairs[conn.pair], guid);\r\n                \r\n                    if (index > -1) {\r\n                        this.cached.pairs[conn.pair].splice(index, 1);\r\n                    }\r\n\r\n                    if ( ! this.cached.pairs[conn.pair].length) {\r\n                        delete this.cached.pairs[conn.pair];\r\n                    }\r\n                }\r\n            }\r\n\r\n            delete this.cached.cables[guid];\r\n            conn = null;\r\n        },\r\n        \r\n        hasConnection: function(network) {\r\n            var conn = this.getConnection();\r\n            return conn.length ? conn : false;\r\n        },\r\n        \r\n        connections: function(network) {\r\n            var me = this, \r\n                registry = Graph.registry.link,\r\n                current = this.props.vector,\r\n                conns = [];\r\n            \r\n            if (network !== undefined) {\r\n                \r\n                var pair = network.vector().guid();\r\n                \r\n                if (this.cached.pairs[pair]) {\r\n                    _.forEach(me.cached.pairs[pair], function(guid){\r\n                        var link = registry.get(guid),\r\n                            opts = me.cached.cables[guid];\r\n                        if (link && opts) {\r\n                            conns.push({\r\n                                link: link,\r\n                                type: opts.type,\r\n                                source: opts.type == 'outgoing' ? current : pair,\r\n                                target: opts.type == 'outgoing' ? pair : current\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n                \r\n                return conns;\r\n            }\r\n            \r\n            var cables = me.cached.cables;\r\n            \r\n            _.forOwn(cables, function(opts, guid){\r\n                var link = registry.get(guid);\r\n                if (link) {\r\n                    conns.push({\r\n                        link: link,\r\n                        type: opts.type,\r\n                        source: opts.type == 'outgoing' ? current : opts.pair,\r\n                        target: opts.type == 'outgoing' ? opts.pair : current\r\n                    });\r\n                }\r\n            });\r\n            \r\n            return conns;\r\n        },\r\n\r\n        ///////// RULES /////////\r\n        \r\n        /**\r\n         * Can connect to target network\r\n         */\r\n        canConnect: function(network, link) {\r\n            var a = this.vector().guid(),\r\n                b = network.vector().guid();\r\n            \r\n            if (a != b) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        destroy: function() {\r\n            var me = this, conns = this.connections();\r\n\r\n            _.forEach(conns, function(conn){\r\n                conn.link.remove(); \r\n            });\r\n            \r\n            // collect garbage\r\n            this.cached.cables = null;\r\n            this.cached.pairs  = null;\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.History = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            limit: 1,\r\n            index: 0\r\n        },\r\n\r\n        items: {},\r\n\r\n        constructor: function(vector) {\r\n            this.props.vector = vector.guid();\r\n        },\r\n\r\n        save: function(prop, data) {\r\n            var lim = this.props.limit, len;\r\n\r\n            if (len > lim) {\r\n                _.drop(this.items, len - lim);\r\n            }\r\n\r\n            this.items[prop] = this.items[prop] || [];\r\n\r\n            if ((len = this.items[prop].length) > lim - 1) {\r\n                this.items[prop].splice(0, len - lim);\r\n            }\r\n\r\n            this.items[prop].push(data);\r\n\r\n            console.log(this);\r\n        },\r\n\r\n        last: function(prop) {\r\n\r\n        },\r\n\r\n        go: function() {\r\n\r\n        },\r\n\r\n        back: function() {\r\n\r\n        },\r\n\r\n        next: function() {\r\n\r\n        },\r\n\r\n        clear: function() {\r\n\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Panzoom = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            panEnabled: false,\r\n            zoomEnabled: true,\r\n            showToolbox: true,\r\n            vector: null\r\n        },\r\n\r\n        caching: {\r\n            offset: {x: 0, y: 0}\r\n        },\r\n\r\n        scrolling: {\r\n            steps: 10\r\n        },\r\n\r\n        zooming: {\r\n            scale: 1,\r\n            zoom: 1,\r\n            origin: null,\r\n            range: {min: 0.2, max: 4}\r\n        },\r\n\r\n        components: {\r\n            toolbox: null\r\n        },\r\n\r\n        panning: {\r\n            start: {x: 0, y: 0},\r\n            moveHandler: null,\r\n            stopHandler: null\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            var me = this, vendor, viewport, scale, bound;\r\n\r\n            // validate vector\r\n            if ( ! vector.isPaper()) {\r\n                throw Graph.error('Panzoom only available for paper !');\r\n            }\r\n\r\n            viewport = vector.viewport();\r\n            scale    = Math.round(viewport.matrix().scale().x, 1000);\r\n            vendor   = vector.interactable().vendor();\r\n\r\n            _.assign(me.props, {\r\n                vector: vector.guid()\r\n            });\r\n\r\n            _.assign(me.zooming, {\r\n                scale: scale,\r\n                zoom: scale\r\n            });\r\n\r\n            me.initComponent(vector);\r\n\r\n            // use native engine\r\n            vendor.on('wheel', _.bind(me.onMouseWheel, me, _, vector, viewport));\r\n            vendor.on('down', _.bind(me.onPointerDown, me, _, vector, viewport));\r\n\r\n            if (vector.props.rendered) {\r\n                me.revalidate(vector);\r\n\r\n                if (me.props.showToolbox) {\r\n                    me.components.toolbox.appendTo(vector.container());\r\n                }\r\n            } else {\r\n                vector.on('render', function(){\r\n                    me.revalidate(vector);\r\n\r\n                    if (me.props.showToolbox) {\r\n                        me.components.toolbox.appendTo(vector.container());\r\n                    }\r\n                });\r\n            }\r\n\r\n            vendor = null;\r\n            vector = null;\r\n        },\r\n\r\n        initComponent: function(vector) {\r\n            var me = this;\r\n            var container, toolbox;\r\n\r\n            if (me.props.showToolbox) {\r\n                container = vector.container();\r\n\r\n                toolbox = me.components.toolbox = Graph.$('<div class=\"graph-zoom-toolbox\">');\r\n                toolbox.html(\r\n                    '<div>' + \r\n                        '<a data-tool=\"zoom-reset\" href=\"javascript:void(0)\" title=\"' + Graph._('Reset zoom') + '\">' + \r\n                            '<i class=\"'+ Graph.icons.ZOOM_RESET +'\"></i>' + \r\n                        '</a>'+\r\n                        '<div class=\"splitter\"></div>'+\r\n                        '<a data-tool=\"zoom-in\" href=\"javascript:void(0)\" title=\"' + Graph._('Zoom in') + '\">' + \r\n                            '<i class=\"'+ Graph.icons.ZOOM_IN +'\"></i>' + \r\n                        '</a>'+\r\n                        '<div class=\"splitter\"></div>'+\r\n                        '<a data-tool=\"zoom-out\" href=\"javascript:void(0)\" title=\"' + Graph._('Zoom out') + '\">' + \r\n                            '<i class=\"'+ Graph.icons.ZOOM_OUT +'\"></i>' + \r\n                        '</a>'+\r\n                    '</div>'\r\n                );\r\n\r\n                toolbox.on('click', '[data-tool]', function(e){\r\n                    e.preventDefault();\r\n                    var tool = Graph.$(this).data('tool');\r\n                    switch(tool) {\r\n                        case 'zoom-reset':\r\n                            me.zoomReset();\r\n                            break;\r\n                        case 'zoom-in':\r\n                            me.zoomIn();\r\n                            break;\r\n                        case 'zoom-out':\r\n                            me.zoomOut();\r\n                            break;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        revalidate: function(vector) {\r\n            var bound = vector.node().getBoundingClientRect();\r\n\r\n            this.caching.offset = {\r\n                x: bound.left,\r\n                y: bound.top\r\n            };\r\n        },\r\n        \r\n        enable: function() {\r\n            var vector = this.vector();\r\n\r\n            this.props.panEnabled = true;\r\n            this.props.zoomEnabled = true;\r\n\r\n            vector.cursor('default');\r\n            vector.state('panning');\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.panEnabled = false;\r\n        },\r\n\r\n        zoomReset: function() {\r\n            var viewport = this.vector().viewport();\r\n            var matrix;\r\n\r\n            this.zooming.zoom = 1;\r\n            this.zooming.scale = 1;\r\n\r\n            viewport.reset();\r\n\r\n            matrix = Graph.matrix();\r\n            matrix.translate(.5, .5);\r\n\r\n            viewport.attr('transform', matrix.toValue());\r\n            viewport.graph.matrix = matrix;\r\n        },\r\n\r\n        zoomIn: function() {\r\n            var paper = this.vector().paper(),\r\n                viewport = paper.viewport(),\r\n                origin = paper.layout().center(),\r\n                direction = 0.1;\r\n\r\n            this.zoom(paper, viewport, direction, origin);\r\n        },\r\n\r\n        zoomOut: function() {\r\n            var paper = this.vector().paper(),\r\n                viewport = paper.viewport(),\r\n                origin = paper.layout().center(),\r\n                direction = -0.1;\r\n\r\n            this.zoom(paper, viewport, direction, origin);\r\n        },\r\n\r\n        zoom: function(paper, viewport, direction, origin) {\r\n            var range = this.zooming.range,\r\n                currentZoom = this.zooming.zoom,\r\n                zoomType = direction > 0 ? 'in' : 'out',\r\n                factor = Math.pow(1 + Math.abs(direction), zoomType == 'in' ? 1 : -1),\r\n                zoom = (zoomRange(range, currentZoom * factor)),\r\n                matrix = viewport.matrix(),\r\n                currentScale = matrix.props.a,\r\n                scale = 1 / currentScale * zoom,\r\n                matrixScale = matrix.clone();\r\n\r\n            this.onBeforeZoom(paper);\r\n\r\n            matrixScale.scale(scale, scale, origin.x, origin.y);\r\n\r\n            viewport.attr('transform', matrixScale.toValue());\r\n            viewport.graph.matrix = matrixScale;\r\n\r\n            this.zooming.zoom  = zoom;\r\n            this.zooming.scale = matrixScale.props.a;\r\n            \r\n            if (paper.state() == 'panning') {\r\n                paper.cursor(zoomType == 'in' ? 'zoom-in' : 'zoom-out');    \r\n            }\r\n\r\n            this.onZoom(paper);\r\n        },\r\n\r\n        scroll: function(paper, viewport, dx, dy) {\r\n            var matrix = viewport.matrix().clone(),\r\n                scale = this.zooming.scale;\r\n\r\n            this.onBeforeScroll(paper);\r\n\r\n            dx /= scale;\r\n            dy /= scale;\r\n            \r\n            matrix.translate(dx, dy);\r\n\r\n            viewport.attr('transform', matrix.toValue());\r\n            viewport.graph.matrix = matrix;\r\n\r\n            if (this.zooming.origin) {\r\n                this.zooming.origin.x += dx;\r\n                this.zooming.origin.y += dy;\r\n            }\r\n\r\n            this.onScroll();\r\n        },\r\n\r\n        onMouseWheel: function(e, paper, viewport) {\r\n\r\n            e = Graph.event.fix(e);\r\n            e.preventDefault();\r\n\r\n            var vscroll = Graph.event.hasPrimaryModifier(e),\r\n                hscroll = Graph.event.hasSecondaryModifier(e),\r\n                event   = Graph.event.original(e);\r\n\r\n            var factor, delta, origin, offset, box;\r\n\r\n            if (vscroll || hscroll) {\r\n\r\n                if (Graph.isMac()) {\r\n                    factor = event.deltaMode === 0 ? 1.25 : 50;\r\n                } else {\r\n                    // factor = event.deltaMode === 0 ? 1/40 : 1/2;\r\n                    factor = event.deltaMode === 0 ? 1 : 20;\r\n                }\r\n\r\n                delta = {};\r\n\r\n                if (hscroll) {\r\n                    delta.dx = (factor * (event.deltaX || event.deltaY));\r\n                    delta.dy = 0;\r\n                } else {\r\n                    delta.dx = 0;\r\n                    delta.dy = (factor * event.deltaY);\r\n                }\r\n\r\n                this.scroll(paper, viewport, delta.dx, delta.dy);\r\n\r\n            } else {\r\n                factor = (event.deltaMode === 0 ? 1/40 : 1/2);\r\n                offset = this.caching.offset;\r\n\r\n                origin = {\r\n                    x: event.clientX - offset.x,\r\n                    y: event.clientY - offset.y    \r\n                };\r\n\r\n                this.zooming.origin = origin;\r\n\r\n                this.zoom(\r\n                    paper,\r\n                    viewport,\r\n                    // event.deltaY * factor / (-5), \r\n                    event.deltaY * factor / (-8), \r\n                    origin\r\n                );\r\n            }\r\n        }, \r\n\r\n        onPointerDown: function(e, paper, viewport, vendor) {\r\n            var target = Graph.$(e.target),\r\n                vector = Graph.registry.vector.get(target),\r\n                vendor = paper.interactable().vendor(),\r\n                tool   = paper.tool().current();\r\n\r\n            var offset;\r\n\r\n            if (this.panning.moveHandler) {\r\n                vendor.off('move', this.panning.moveHandler);\r\n                this.panning.moveHandler = null;\r\n            }\r\n\r\n            if (this.panning.stopHandler) {\r\n                vendor.off('up', this.panning.stopHandler);\r\n                this.panning.stopHandler = null;\r\n            }\r\n\r\n            if (tool == 'collector') {\r\n                return;\r\n            }\r\n\r\n            if (vector) {\r\n                // already has drag feature\r\n                if (vector.isDraggable()) {\r\n                    return;\r\n                }\r\n\r\n                // reject non primary button\r\n                if (e.button || e.ctrlKey || e.shiftKey || e.altKey) {\r\n                    return;\r\n                }\r\n\r\n                this.revalidate(paper);\r\n\r\n                offset = this.caching.offset;\r\n\r\n                this.panning.start = {\r\n                    x: e.clientX - offset.x,\r\n                    y: e.clientY - offset.y\r\n                };\r\n\r\n                // install temporary events handler\r\n                this.panning.moveHandler = _.bind(this.onPointerMove, this, _, paper, viewport);\r\n                this.panning.stopHandler = _.bind(this.onPointerStop, this, _, paper, viewport);\r\n\r\n                vendor.on('move', this.panning.moveHandler);\r\n                vendor.on('up', this.panning.stopHandler);\r\n            }\r\n        },\r\n\r\n        onPointerMove: function(e, paper, viewport) {\r\n            \r\n            var offset = this.caching.offset,\r\n                start = this.panning.start,\r\n                current = { \r\n                    x: e.clientX - offset.x, \r\n                    y: e.clientY - offset.y\r\n                },\r\n                dx = current.x - start.x,\r\n                dy = current.y - start.y,\r\n                mg = Graph.util.hypo(dx, dy);\r\n\r\n            this.scroll(paper, viewport, dx, dy);\r\n\r\n            this.panning.start = {\r\n                x: e.clientX - offset.x,\r\n                y: e.clientY - offset.y\r\n            };\r\n\r\n            paper.cursor('move');\r\n            \r\n            // prevent select\r\n            e.preventDefault();\r\n        },\r\n\r\n        onPointerStop: function(e, paper) {\r\n            var me = this, vendor = paper.interactable().vendor();\r\n            var delay;\r\n\r\n            // wait interact to fire last posible event...\r\n            delay = _.delay(function(){\r\n                clearTimeout(delay);\r\n                delay = null;\r\n\r\n                vendor.off('move', me.panning.moveHandler);\r\n                vendor.off('up', me.panning.stopHandler);\r\n\r\n                me.panning.moveHandler = null;\r\n                me.panning.stopHandler = null;\r\n            }, 0);\r\n\r\n            paper.cursor('default');\r\n        },\r\n\r\n        onBeforeZoom: _.debounce(function(paper){\r\n            \r\n            Graph.topic.publish('paper/beforezoom', null, paper);\r\n\r\n        }, 300, {leading: true, trailing: false}),\r\n\r\n        onZoom: _.debounce(function(paper) {\r\n            var state = paper.state();\r\n\r\n            if (state == 'panning') {\r\n                paper.cursor('default');\r\n            }\r\n\r\n        }, 300),\r\n\r\n        onBeforeScroll: _.debounce(function(paper){\r\n            \r\n            Graph.topic.publish('paper/beforescroll', null, paper);\r\n\r\n        }, 300, {leading: true, trailing: false}),\r\n\r\n        onScroll: _.debounce(function() {\r\n\r\n        }, 300)\r\n\r\n    });\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function logarithm(num, base) {\r\n        base = base || 10;\r\n        return Math.log(num) / Math.log(base);\r\n    }\r\n\r\n    function stepRange(range, steps) {\r\n        var min = logarithm(range.min),\r\n            max = logarithm(range.max),\r\n            abs = Math.abs(min) + Math.abs(max);\r\n\r\n        return abs / steps;\r\n    }\r\n\r\n    function zoomRange(range, scale) {\r\n        return Math.max(range.min, Math.min(range.max, scale));\r\n    }\r\n\r\n    function pointerLocation(event, paper) {\r\n        var offset = paper.node().getBoundingClientRect(),\r\n            x = event.clientX - offset.left,\r\n            y = event.clientY - offset.top;\r\n\r\n        return {\r\n            x: x, \r\n            y: y\r\n        };\r\n    }\r\n\r\n}());","\r\n(function(){\r\n\r\n    var CLS_CONNECT_VALID = 'connect-valid',\r\n        CLS_CONNECT_INVALID = 'connect-invalid',\r\n        CLS_CONNECT_RESET = 'connect-valid connect-invalid';\r\n\r\n    Graph.plugin.Linker = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n            context: null,\r\n            enabled: false,\r\n            suspended: true,\r\n            rendered: false\r\n        },\r\n\r\n        components: {\r\n            block: null,\r\n            pointer: null,\r\n            path: null\r\n        },\r\n\r\n        linking: {\r\n            treshold: 10,\r\n            enabled: false,\r\n            moveHandler: null,\r\n            stopHandler: null,\r\n            source: null,\r\n            start: null,\r\n            target: null,\r\n            end: null,\r\n            visits: []\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            var me = this, vendor;\r\n\r\n            if ( ! vector.isPaper()) {\r\n                throw Graph.error('Linker plugin is only available for paper !');\r\n            }\r\n\r\n            vendor = vector.interactable().vendor();\r\n            vendor.on('down', _.bind(me.onPointerDown, me, _, vector));\r\n\r\n            vector.on('keynavdown', function(e){\r\n                if (e.keyCode === Graph.event.ESC) {\r\n                    me.invalidate();\r\n                    vector.tool().activate('panzoom');\r\n                }\r\n            });\r\n\r\n            me.props.vector = vector.guid();\r\n            me.initComponent();\r\n        },\r\n        \r\n        initComponent: function() {\r\n            var me = this, \r\n                comp = me.components;\r\n\r\n            var block, pointer, path;\r\n\r\n            block = (new Graph.svg.Group())\r\n                .addClass('graph-linker-path')\r\n                .selectable(false);\r\n\r\n            pointer = (new Graph.svg.Circle())\r\n                .addClass('graph-linker-pointer')\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .selectable(false)\r\n                .render(block);\r\n\r\n            path = (new Graph.svg.Path())\r\n                .addClass('graph-linker-path')\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .selectable(false)\r\n                .render(block)\r\n                .attr('marker-end', 'url(#marker-arrow)');\r\n\r\n            comp.block = block.guid();\r\n            comp.pointer = pointer.guid();\r\n            comp.path = path.guid();\r\n        },\r\n\r\n        component: function(name) {\r\n            if (name === undefined) {\r\n                return Graph.registry.vector.get(this.components.block);\r\n            }\r\n            return Graph.registry.vector.get(this.components[name]);\r\n        },\r\n\r\n        render: function() {\r\n            var paper;\r\n\r\n            if (this.props.rendered) {\r\n                return;\r\n            }\r\n\r\n            paper = this.vector();\r\n            this.component().render(paper);\r\n\r\n            this.props.rendered = true;\r\n            this.props.context = paper.viewport().guid();\r\n        },\r\n\r\n        invalidate: function() {\r\n            var vector, vendor;\r\n\r\n            if (this.linking.enabled) {\r\n                vector = this.vector();\r\n                vendor = vector.interactable().vendor();\r\n                \r\n                if (this.linking.moveHandler) {\r\n                    vendor.off('move', this.linking.moveHandler);\r\n                    this.linking.moveHandler = null;\r\n                }\r\n\r\n                if (this.linking.source) {\r\n                    this.linking.source.removeClass('disallowed');\r\n                }\r\n\r\n                if (this.linking.target) {\r\n                    this.linking.target.removeClass('allowed');\r\n                }\r\n\r\n                _.assign(this.linking, {\r\n                    enabled: false,\r\n                    moveHandler: null,\r\n                    stopHandler: null,\r\n                    source: null,\r\n                    start: null,\r\n                    target: null,\r\n                    end: null\r\n                });\r\n                \r\n                if (this.linking.visits) {\r\n                    _.forEach(this.linking.visits, function(v){\r\n                        v.removeClass('connect-valid connect-invalid');\r\n                    });\r\n                }\r\n                \r\n                this.linking.visits = null;\r\n            }\r\n        },\r\n\r\n        enable: function() {\r\n            var paper = this.vector();\r\n            this.props.enabled = true;\r\n\r\n            paper.state('linking');\r\n            paper.addClass('linking');\r\n        },\r\n\r\n        disable: function() {\r\n            var paper = this.vector();\r\n\r\n            this.props.enabled = false;\r\n            this.invalidate();\r\n            this.suspend();\r\n\r\n            paper.removeClass('linking');\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.component().elem.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            var paper;\r\n\r\n            if ( ! this.props.suspended) {\r\n                return;\r\n            }\r\n\r\n            paper = this.vector();\r\n\r\n            this.props.suspended = false;\r\n            \r\n            if ( ! this.props.rendered) {\r\n                this.render();\r\n            } else {\r\n                this.component().elem.appendTo(paper.viewport().elem);\r\n            }\r\n        },\r\n        \r\n        /**\r\n         *  Start manual linking\r\n         */\r\n        start: function(source, anchor) {\r\n            var paper = this.vector(),\r\n                layout = paper.layout(),\r\n                offset = layout.offset();\r\n                \r\n            if (paper.tool().current() != 'linker') {\r\n                return;\r\n            }\r\n            \r\n            if (this.linking.enabled) {\r\n                if (this.linking.source && this.linking.target) {\r\n                    this.build();\r\n                } else {\r\n                    this.invalidate();\r\n                    this.suspend();\r\n                }\r\n                return;\r\n            }\r\n            \r\n            this.linking.visits = [];\r\n            \r\n            var vendor, sbox, port;\r\n\r\n            if (source.isConnectable()) {\r\n\r\n                if (this.props.suspended) {\r\n                    this.resume();    \r\n                }\r\n\r\n                var path = this.component('path'),\r\n                    context = this.context();\r\n\r\n                this.linking.moveHandler = _.bind(this.onPointerMove, this, _, paper, path, context);    \r\n                \r\n                vendor = paper.interactable().vendor();\r\n                vendor.on('move', this.linking.moveHandler);\r\n\r\n                this.linking.visits.push(source);    \r\n\r\n                if (source.isConnectable()) {\r\n                    \r\n                    if ( ! this.linking.source) {\r\n                        // update context\r\n                        source.connectable({\r\n                            context: context\r\n                        });\r\n\r\n                        sbox = source.connectable().bbox();\r\n                        port = sbox.center(true);\r\n\r\n                        this.linking.source = source;\r\n                        this.linking.start  = port;\r\n                        \r\n                        if (anchor) {\r\n                            path.moveTo(port.x, port.y).lineTo(anchor.x, anchor.y, false);\r\n                        } else {\r\n                            path.moveTo(port.x, port.y).lineTo(port.x, port.y, false);\r\n                        }   \r\n\r\n                        sbox = port = null;\r\n                    }\r\n\r\n                }\r\n\r\n                this.linking.enabled = true;\r\n            }\r\n        },\r\n        \r\n        cropping: function(start, end) {\r\n            var source = this.linking.source,\r\n                target = this.linking.target,\r\n                cable = new Graph.lang.Path([['M', start.x, start.y], ['L', end.x, end.y]]);\r\n\r\n            var spath, scrop, tpath, tcrop;\r\n\r\n            if (source) {\r\n                spath = source.connectable().pathinfo();\r\n                scrop = spath.intersection(cable, true);\r\n            }\r\n\r\n            if (target) {\r\n                tpath = target.connectable().pathinfo();\r\n                tcrop = tpath.intersection(cable, true);\r\n            }\r\n\r\n            cable = spath = tpath = null;\r\n\r\n            return {\r\n                start: scrop ? scrop[0] : null,\r\n                end:   tcrop ? tcrop[0] : null\r\n            };\r\n        },\r\n\r\n        build: function() {\r\n            var path = this.component('path'),\r\n                tail = path.tail(),\r\n                head = path.head();\r\n\r\n            if (tail && head) {\r\n                var paper = this.vector();\r\n                paper.connect(\r\n                    this.linking.source, \r\n                    this.linking.target,\r\n                    tail,\r\n                    head\r\n                );\r\n            }\r\n\r\n            this.invalidate();\r\n            this.suspend();\r\n        },\r\n\r\n        onPointerDown: function(e, paper) {\r\n            var layout = paper.layout(),\r\n                source = layout.grabVector(e);\r\n            \r\n            if (source) {\r\n                this.start(source);\r\n            }\r\n            \r\n            layout = source = null;\r\n        },\r\n\r\n        onPointerMove: function(e, paper, path, context) {\r\n\r\n            if (this.linking.enabled) {\r\n\r\n                var layout = paper.layout(),\r\n                    target = layout.grabVector(e);\r\n\r\n                if ( ! target) {\r\n                    return;\r\n                }\r\n\r\n                var source = this.linking.source,\r\n                    valid = false;\r\n\r\n                if (source) {\r\n\r\n                    // track visit\r\n                    if (this.linking.visits.indexOf(target.guid()) === -1) {\r\n                        this.linking.visits.push(target);\r\n                    }\r\n                    \r\n                    var start = this.linking.start,\r\n                        coord = layout.grabLocation(e),\r\n                        x = coord.x,\r\n                        y = coord.y,\r\n                        rad = Graph.util.rad(Graph.util.theta(start, {x: x, y: y})),\r\n                        sin = Math.sin(rad),\r\n                        cos = Math.cos(rad),\r\n                        tdx = this.linking.treshold * -cos,\r\n                        tdy = this.linking.treshold *  sin;\r\n\r\n                    x += tdx;\r\n                    y += tdy;\r\n\r\n                    if (target.isConnectable()) {\r\n                        \r\n                        var crop, tbox, port;\r\n\r\n                        if (source.connectable().canConnect(target.connectable())) {\r\n                            valid  = true;\r\n                            \r\n                            target.removeClass(CLS_CONNECT_INVALID);\r\n                            target.addClass(CLS_CONNECT_VALID);\r\n                            \r\n                            // update target context\r\n                            target.connectable({\r\n                                context: context\r\n                            });\r\n\r\n                            tbox = target.connectable().bbox();\r\n                            port = tbox.center(true);\r\n\r\n                            this.linking.target = target;\r\n                            this.linking.end    = port;\r\n\r\n                            crop = this.cropping(start, port);\r\n\r\n                            if (crop.start) {\r\n                                path.moveTo(crop.start.x, crop.start.y);\r\n                            }\r\n\r\n                            if (crop.end) {\r\n                                path.lineTo(crop.end.x, crop.end.y, false);\r\n                            } else {\r\n                                path.lineTo(x, y, false);\r\n                            }\r\n\r\n                            tbox = port = null;\r\n                        } else {\r\n                            target.removeClass(CLS_CONNECT_VALID);\r\n                            target.addClass(CLS_CONNECT_INVALID);\r\n                        }\r\n\r\n                    } else {\r\n                        target.addClass(CLS_CONNECT_INVALID);\r\n                    }\r\n\r\n                    if ( ! valid) {\r\n\r\n                        if (this.linking.target) {\r\n                            this.linking.target.removeClass(CLS_CONNECT_RESET);\r\n                        }\r\n\r\n                        this.linking.target = null;\r\n                        this.linking.end    = null; \r\n\r\n                        crop = this.cropping(start, {x: x, y: y});\r\n\r\n                        if (crop.start) {\r\n                            path.moveTo(crop.start.x, crop.start.y);\r\n                        }\r\n\r\n                        if (crop.end) {\r\n                            path.lineTo(crop.end.x, crop.end.y, false);\r\n                        } else {\r\n                            path.lineTo(x, y, false);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            e.preventDefault();\r\n        }\r\n\r\n    });\r\n\r\n    ///////// HELPER /////////\r\n    \r\n\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.ToolManager = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n            current: null\r\n        },\r\n\r\n        tools: {\r\n\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            var me = this;\r\n\r\n            me.props.vector = vector.guid();\r\n\r\n        },\r\n        \r\n        has: function(tool) {\r\n            return !!this.tools[tool];\r\n        },\r\n\r\n        get: function(name) {\r\n            var data = this.tools[name],\r\n                vector = this.vector();\r\n\r\n            if (data) {\r\n                switch(data.type) {\r\n                    case 'plugin':\r\n                        return vector.plugins[name];\r\n                    case 'util':\r\n                        return vector.utils[name];\r\n                }\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        current: function() {\r\n            return this.props.current;\r\n        },\r\n\r\n        register: function(name, type) {\r\n            type = _.defaultTo(type, 'plugin');\r\n\r\n            this.tools[name] = {\r\n                name: name,\r\n                type: type,\r\n                enabled: false\r\n            };\r\n        },\r\n\r\n        unregister: function(name) {\r\n            if (this.tools[name]) {\r\n                delete this.tools[name];\r\n            }\r\n        },\r\n\r\n        activate: function(name, activator) {\r\n            if (this.props.current != name) {\r\n\r\n                var tool = this.get(name), data;\r\n                \r\n                if (tool) {\r\n                    this.deactivateAll(name);\r\n                    this.props.current = name;\r\n\r\n                    data = this.tools[name];\r\n                    data.enabled = true;\r\n\r\n                    activator = _.defaultTo(activator, 'tool');\r\n                    tool.enable(activator);\r\n\r\n                    this.fire('activate', {\r\n                        name: data.name,\r\n                        enabled: data.enabled\r\n                    });\r\n                }\r\n            }\r\n            \r\n        },\r\n\r\n        deactivate: function(name) {\r\n            var tool = this.get(name), data;\r\n\r\n            if (tool) {\r\n                data = this.tools[name];\r\n                data.enabled = false;\r\n                this.props.current = null;\r\n\r\n                tool.disable();\r\n\r\n                this.fire('deactivate', {\r\n                    name: data.name,\r\n                    enabled: data.enabled\r\n                });\r\n            }\r\n        },\r\n\r\n        deactivateAll: function(except) {\r\n            var vector = this.vector();\r\n\r\n            for(var name in this.tools) {\r\n                if (name != except) {\r\n                    this.deactivate(name);\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        toggle: function(tool) {\r\n            var data = this.tools[tool];\r\n            if (data) {\r\n                if (data.enabled) {\r\n                    this.deactivate(tool);\r\n                } else {\r\n                    this.activate(tool);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    });\r\n\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Pencil = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        paper: null,\r\n\r\n        drawing: {\r\n            offset: {\r\n                x: 0, \r\n                y: 0\r\n            },\r\n            moveHandler: null,\r\n            stopHandler: null\r\n        },\r\n\r\n        constructor: function(paper) {\r\n            this.paper = paper;\r\n        },\r\n        \r\n        draw: function() {\r\n            var paper, shape, vendor;\r\n            \r\n            // activate panzoom\r\n            this.paper.tool().activate('panzoom');\r\n\r\n            shape = Graph.shape.apply(null, arguments);\r\n\r\n            if (shape) {\r\n\r\n                shape.render(this.paper);\r\n                shape.move(-500, -500);\r\n                \r\n                this.refresh(shape);\r\n                this.paper.state('drawing');\r\n\r\n                vendor = this.paper.interactable().vendor();\r\n\r\n                this.drawing.offset = this.paper.layout().offset();\r\n                this.drawing.moveHandler = _.bind(this.onPointerMove, this, _, shape);\r\n                this.drawing.stopHandler = _.bind(this.onPointerStop, this, _, shape);\r\n\r\n                vendor.on('move', this.drawing.moveHandler);\r\n                vendor.on('up', this.drawing.stopHandler);    \r\n            }\r\n\r\n            return shape;\r\n        },\r\n\r\n        refresh: function(shape) {\r\n            var snapping = this.paper.layout().dragSnapping();\r\n\r\n            shape.component().cascade(function(comp){\r\n                if (comp.isDraggable()) {\r\n                    comp.draggable().snap(snapping);\r\n                }\r\n\r\n                if (comp.isResizable()) {\r\n                    comp.resizable().snap(snapping);\r\n                }\r\n            });\r\n\r\n        },\r\n\r\n        onPointerMove: function(e, shape) {\r\n            var offset = this.drawing.offset,   \r\n                viewport = this.paper.viewport(),\r\n                coords = Graph.event.relative(e, viewport),\r\n                scale = viewport.scale();\r\n\r\n            var x = coords.x - (offset.left / scale.x),\r\n                y = coords.y - (offset.top / scale.y);\r\n\r\n            shape.move(x, y);\r\n        },\r\n\r\n        onPointerStop: function(e, shape) {\r\n            var vendor = this.paper.interactable().vendor();\r\n            var delay;\r\n\r\n            delay = _.delay(_.bind(function(){\r\n                if (this.drawing.moveHandler) {\r\n                    vendor.off('move', this.drawing.moveHandler);    \r\n                    this.drawing.moveHandler = null;\r\n                }\r\n\r\n                if (this.drawing.stopHandler) {\r\n                    vendor.off('up', this.drawing.stopHandler);    \r\n                    this.drawing.stopHandler = null;\r\n                }\r\n            }, this), 0);\r\n            \r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    var MIN_BOX_WIDTH  = 150,\r\n        MIN_BOX_HEIGHT = 50,\r\n        OFFSET_TRESHOLD = 10;\r\n\r\n    Graph.plugin.Editor = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n            rendered: false,\r\n            suspended: true,\r\n            width: 'auto',\r\n            height: 'auto',\r\n            offset: 'auto'\r\n        },\r\n\r\n        editing: {\r\n            commitHandler: null\r\n        },\r\n\r\n        components: {\r\n            editor: null\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var vendor;\r\n\r\n            _.assign(this.props, options || {});\r\n\r\n            this.props.vector = vector.guid();\r\n\r\n            _.assign(this.cached, {\r\n                left: 0,\r\n                top: 0,\r\n                width: 0,\r\n                height: 0\r\n            });\r\n\r\n            vendor = vector.interactable().vendor();\r\n            vendor.on('doubletap', _.bind(this.onDoubleTap, this));\r\n\r\n            this.initComponent();\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = this.components;\r\n            comp.editor = Graph.$('<div class=\"graph-editor\" contenteditable=\"true\"></div>');\r\n            comp.editor.on('keypress', function(e){\r\n                if (e.keyCode === Graph.event.ENTER) {\r\n                    me.commit();\r\n                }\r\n            });\r\n        },\r\n        \r\n        commit: function() {\r\n            var text = this.components.editor.text();\r\n            this.suspend();\r\n            this.vector().props.text = text;\r\n\r\n            this.fire('edit', {\r\n                text: text,\r\n                left: this.cached.left,\r\n                top: this.cached.top\r\n            });\r\n        },\r\n\r\n        render: function() {\r\n            if (this.props.rendered) {\r\n                this.redraw();\r\n                return;\r\n            }\r\n\r\n            this.vector().paper().container().append(this.components.editor);\r\n            this.props.rendered = true;\r\n            this.redraw();\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.components.editor.detach();\r\n\r\n            if (this.editing.commitHandler) {\r\n                Graph.topic.unsubscribe('paper/beforezoom', this.editing.commitHandler);\r\n                Graph.topic.unsubscribe('paper/beforescroll', this.editing.commitHandler);\r\n                this.vector().paper().off('pointerdown', this.editing.commitHandler);\r\n                this.editing.commitHandler = null;\r\n            }\r\n        },\r\n\r\n        resume: function() {\r\n            var container;\r\n\r\n            if ( ! this.props.rendered) {\r\n                this.render();\r\n            } else {\r\n                if (this.props.suspended) {\r\n                    this.props.suspended = false;\r\n                    container = this.vector().paper().container();\r\n                    container.append(this.components.editor);\r\n                }\r\n                this.redraw();\r\n            }\r\n\r\n        },\r\n\r\n        redraw: function() {\r\n            var editor = this.components.editor,\r\n                vector = this.vector(),\r\n                matrix = vector.globalMatrix(),\r\n                scale  = matrix.scale();\r\n\r\n            var vbox = vector.bbox().clone().transform(matrix).toJson();\r\n            var left, top, width, height;\r\n            \r\n            width  = vbox.width;\r\n            height = vbox.height;\r\n            left = vbox.x;\r\n            top  = vbox.y;\r\n\r\n            if (this.props.width != 'auto') {\r\n                width = Math.max(Math.min(this.props.width, width), MIN_BOX_WIDTH);\r\n                left = vbox.x + (vbox.width - width) / 2;\r\n            }\r\n\r\n            if (this.props.height != 'auto') {\r\n                height = Math.max((Math.min(this.props.height, height)), MIN_BOX_HEIGHT);\r\n                top = vbox.y + (vbox.height - height) / 2;\r\n            }\r\n\r\n            left = left + 4 * scale.x;\r\n            top = top + 4 * scale.y;\r\n            width = width - 8 * scale.x;\r\n            height = height - 8 * scale.y;\r\n\r\n            editor.css({\r\n                left: left,\r\n                top:  top,\r\n                width: width,\r\n                height: height\r\n            });\r\n\r\n            _.assign(this.cached, {\r\n                left: left,\r\n                top: top,\r\n                width: width,\r\n                height: height\r\n            });\r\n\r\n            editor.text((vector.props.text || ''));\r\n            editor.focus();\r\n\r\n            vbox = null;\r\n        },\r\n\r\n        startEdit: function(e) {\r\n            var me = this, vector = me.vector();\r\n\r\n            if (vector.lasso) {\r\n                vector.lasso.decollect(vector);\r\n            }\r\n\r\n            if (vector.paper().tool().current() == 'linker') {\r\n                vector.paper().tool().activate('panzoom');\r\n            }\r\n\r\n            me.fire('beforeedit');\r\n            me.resume();\r\n\r\n            if (e && this.props.offset == 'pointer') {\r\n                var editor = me.components.editor,\r\n                    paper = vector.paper(),\r\n                    scale = paper.layout().scale();\r\n\r\n                var offset, coords, left, top;\r\n\r\n                if (paper) {\r\n                    offset = paper.offset();\r\n                    coords = paper.layout().grabLocation(e);\r\n\r\n                    left = e.clientX - offset.left + (OFFSET_TRESHOLD * scale.x);\r\n                    top = e.clientY - offset.top + (OFFSET_TRESHOLD * scale.y);\r\n\r\n                    editor.css({\r\n                        left: left,\r\n                        top: top\r\n                    });\r\n\r\n                    me.cached.left = coords.x;\r\n                    me.cached.top = coords.y;\r\n                }\r\n            }\r\n\r\n            me.editing.commitHandler = function() {\r\n                me.commit();\r\n            };\r\n\r\n            Graph.topic.subscribe('paper/beforezoom', me.editing.commitHandler);\r\n            Graph.topic.subscribe('paper/beforescroll', me.editing.commitHandler);\r\n\r\n            vector.paper().on('pointerdown', me.editing.commitHandler);\r\n            vector = null;\r\n        },\r\n\r\n        onDoubleTap: function(e) {\r\n            this.startEdit(e);\r\n            e.preventDefault();\r\n        },\r\n\r\n        destroy: function() {\r\n\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Snapper = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            enabled: true,\r\n            suspended: true,\r\n            rendered: false,\r\n            vector: null,\r\n            context: null\r\n        },\r\n\r\n        clients: {\r\n\r\n        },\r\n\r\n        components: {\r\n            block: null,\r\n            stubx: null,\r\n            stuby: null\r\n        },\r\n\r\n        // trans\r\n        snapping: {\r\n            coords: null,\r\n            vector: null,\r\n            offset: null,\r\n            stubx: null,\r\n            stuby: null\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            options = options || {};\r\n\r\n            if ( ! vector.isPaper()) {\r\n                throw Graph.error(\"Snapper plugin only available for paper\");\r\n            }\r\n\r\n            _.assign(this.props, options);\r\n\r\n            this.props.vector  = vector.guid();\r\n            this.props.context = vector.viewport().guid();\r\n\r\n            this.initComponent(vector);\r\n            this.snapping.coords = {};\r\n        },\r\n\r\n        initComponent: function(vector) {\r\n            var block, stubx, stuby;\r\n\r\n            block = (new Graph.svg.Group())\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .addClass('graph-snapper');\r\n\r\n            stubx = (new Graph.svg.Path('M 0 0 L 0 0'))\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(block);\r\n\r\n            stuby = (new Graph.svg.Path('M 0 0 L 0 0'))\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(block);\r\n\r\n            this.components.block = block.guid();\r\n            this.components.stuby = stuby.guid();\r\n            this.components.stubx = stubx.guid();\r\n\r\n        },\r\n\r\n        component: function(name) {\r\n            if (name === undefined) {\r\n                return Graph.registry.vector.get(this.components.block);    \r\n            }\r\n            return Graph.registry.vector.get(this.components[name]);\r\n        },\r\n\r\n        render: function() {\r\n            if (this.props.rendered) {\r\n                return;\r\n            }\r\n            this.component().render(this.vector());\r\n            this.props.rendered = true;\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.component().elem.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            if (this.props.suspended) {\r\n                this.props.suspended = false;\r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else {\r\n                    var block = this.component(),\r\n                        viewport = this.vector().viewport();\r\n                    block.elem.appendTo(viewport.elem);\r\n                }\r\n            }\r\n        },\r\n\r\n        setup: function(client, options) {\r\n\r\n            if ( ! this.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            var me = this,\r\n                contextId = this.props.context,\r\n                clientId = client.guid();\r\n\r\n            var key;\r\n\r\n            if (me.clients[clientId]) {\r\n                client.off('dragstart', me.clients[clientId].dragStartHandler);\r\n                client.off('dragend',  me.clients[clientId].dragEndHandler);\r\n                client.off('remove',  me.clients[clientId].removeHandler);\r\n\r\n                if (me.clients[clientId].coords) {\r\n                    delete me.snapping.coords[me.clients[clientId].coords];\r\n                }\r\n\r\n                delete me.clients[clientId];\r\n            }\r\n\r\n            if (options.enabled) {\r\n\r\n                var dragger = client.draggable();\r\n\r\n                me.clients[clientId] = {\r\n                    coords: null,\r\n                    osnaps: dragger.snap(),\r\n                    dragStartHandler: _.bind(me.onClientDragStart, me, _, client),\r\n                    dragEndHandler: _.bind(me.onClientDragEnd, me, _, client),\r\n                    removeHandler: _.bind(me.onClientRemove, me, _, client)\r\n                };\r\n\r\n                client.on('dragstart', me.clients[clientId].dragStartHandler);\r\n                client.on('dragend', me.clients[clientId].dragEndHandler);\r\n                client.on('remove',  me.clients[clientId].removeHandler);\r\n\r\n                var center = me.getClientCenter(client),\r\n                    coords = this.snapping.coords;\r\n\r\n                key = center.x + '_' + center.y;\r\n\r\n                if ( ! coords[key]) {\r\n                    coords[key] = center;\r\n                    me.clients[clientId].coords = key;\r\n                }\r\n\r\n                key = null;\r\n            }\r\n        },\r\n\r\n        getClientCenter: function(client) {\r\n            var clientId = client.guid(),\r\n                contextId = this.props.context,\r\n                matrix = Graph.matrix(),\r\n                path = client.pathinfo();\r\n\r\n            var center, bbox;\r\n\r\n            client.bubble(function(curr){\r\n                if (curr.guid() == contextId) {\r\n                    return false;\r\n                }\r\n                matrix.multiply(curr.matrix());\r\n            });\r\n\r\n            path = path.transform(matrix);\r\n            bbox = path.bbox();\r\n\r\n            center = bbox.center().toJson();\r\n\r\n            matrix = path = bbox = null;\r\n\r\n            return center;\r\n        },\r\n\r\n        showStub: function(axis, value) {\r\n            var snapping = this.snapping;\r\n            var command;\r\n\r\n            if (axis == 'x') {\r\n                command = 'M ' + value + ' -100000 L ' + value + ' 100000';\r\n\r\n                snapping.stubx.attr('d', command);\r\n                snapping.stubx.addClass('visible');\r\n            }\r\n\r\n            if (axis == 'y') {\r\n                command = 'M -100000 ' + value + ' L 100000 ' + value;\r\n\r\n                snapping.stuby.attr('d', command);\r\n                snapping.stuby.addClass('visible');\r\n            }\r\n\r\n            command = null;\r\n        },\r\n\r\n        hideStub: function(axis) {\r\n            var stub = axis == 'x' ? 'stubx' : 'stuby';\r\n            this.snapping[stub].removeClass('visible');\r\n        },\r\n\r\n        onClientDragStart: function(e, client) {\r\n            var me = this,\r\n                paper = me.vector(),\r\n                layout = paper.layout(),\r\n                offset = layout.offset(),\r\n                center = me.getClientCenter(client);\r\n\r\n            var snapping = this.snapping,\r\n                coords = snapping.coords;\r\n\r\n            snapping.stubx = this.component('stubx');\r\n            snapping.stuby = this.component('stuby');\r\n\r\n            var left = offset.left,\r\n                top = offset.top,\r\n                ma = this.context().matrix(),\r\n                dx = ma.props.e,\r\n                dy = ma.props.f,\r\n                point = layout.grabLocation({clientX: e.x, clientY: e.y}),\r\n                diffx = center.x - point.x,\r\n                diffy = center.y - point.y,\r\n                snapx = [],\r\n                snapy = [];\r\n\r\n            _.forOwn(coords, function(c){\r\n                var mx, my, vx, vy;\r\n                \r\n                mx = ma.x(c.x - diffx, c.y - diffy);\r\n                my = ma.y(c.x - diffx, c.y - diffy);\r\n\r\n                vx = mx + left;\r\n\r\n                if (_.indexOf(snapx, vx) === -1) {\r\n                    snapx.push(vx);\r\n                }\r\n\r\n                vy = my + top;\r\n\r\n                if (_.indexOf(snapy, vy) === -1) {\r\n                    snapy.push(vy);\r\n                }\r\n            });\r\n\r\n            client.draggable().snap([\r\n                function(x, y) {\r\n                    var rx, ry, x1, y1, pt;\r\n\r\n                    rx = snapValue(x, snapx);\r\n                    ry = snapValue(y, snapy);\r\n\r\n                    x1 = rx.value;\r\n                    y1 = ry.value;\r\n\r\n                    pt = layout.grabLocation({\r\n                        clientX: x1,\r\n                        clientY: y1\r\n                    });\r\n\r\n                    if (rx.snapped) {\r\n                        me.showStub('x', pt.x + diffx);\r\n                    } else {\r\n                        me.hideStub('x');\r\n                    }\r\n\r\n                    if (ry.snapped) {\r\n                        me.showStub('y', pt.y + diffy);\r\n                    } else {\r\n                        me.hideStub('y');\r\n                    }\r\n\r\n                    return {\r\n                        x: x1,\r\n                        y: y1\r\n                    };\r\n                }\r\n            ]);\r\n\r\n            me.resume();\r\n        },\r\n\r\n        onClientDragEnd: function(e, client) {\r\n            var snapping = this.snapping,\r\n                options = this.clients[client.guid()];\r\n\r\n            if (options) {\r\n                var dragger = client.draggable();\r\n                \r\n                if (options.osnaps) {\r\n                    dragger.snap(options.osnaps);\r\n                }\r\n\r\n                var key, center;\r\n\r\n                if (options.coords) {\r\n                    delete snapping.coords[options.coords];\r\n                }\r\n\r\n                center = this.getClientCenter(client);\r\n                key = center.x + '_' + center.y;\r\n\r\n                if ( ! snapping.coords[key]) {\r\n                    snapping.coords[key] = center;\r\n                    options.coords = key;\r\n                }\r\n                \r\n                key = null;\r\n                center = null;\r\n            }\r\n            \r\n            this.suspend();\r\n\r\n            _.assign(this.snapping, {\r\n                stubx: null,\r\n                stuby: null\r\n            });\r\n        },\r\n\r\n        onClientRemove: function(e, client) {\r\n            var guid = client.guid(),\r\n                options = this.clients[guid],\r\n                snapping = this.snapping;\r\n\r\n            if (options) {\r\n                if (options.coords) {\r\n                    if (snapping.coords[options.coords]) {\r\n                        delete snapping.coords[options.coords];\r\n                    }\r\n                }\r\n                delete this.clients[guid];\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    ///////// HELPERS /////////\r\n\r\n    function bboxCenter(client, context) {\r\n        if (client.guid() == context.guid()) {\r\n            return client.bbox().center(true);\r\n        }\r\n\r\n        var matrix = Graph.matrix();\r\n        var path, bbox, center;\r\n\r\n        client.bubble(function(curr){\r\n            matrix.multiply(curr.matrix());\r\n            if (curr === context) {\r\n                return false;\r\n            }\r\n        });\r\n\r\n        path = client.pathinfo().transform(matrix);\r\n        bbox = path.bbox();\r\n\r\n        center = bbox.center(true);\r\n        path = bbox = null;\r\n\r\n        return center;\r\n    }\r\n\r\n    function snapValue(value, snaps, range) {\r\n        range = _.defaultTo(range, 10);\r\n        \r\n        var i = snaps.length, v;\r\n\r\n        while(i--) {\r\n            v = Math.abs(snaps[i] - value);\r\n            if (v <= range) {\r\n                return {\r\n                    snapped: true,\r\n                    value: snaps[i]\r\n                };\r\n            }\r\n        }\r\n\r\n        return {\r\n            snapped: false,\r\n            value: value\r\n        };\r\n    }\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Toolpad = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            vector: null,\r\n            rendered: false,\r\n            suspended: true\r\n        },\r\n        \r\n        components: {\r\n            pad: null\r\n        },  \r\n    \r\n        constructor: function(paper) {\r\n            \r\n            this.props.vector = paper.guid();\r\n            this.initComponent(paper);\r\n\r\n            this.cached.tools = null;\r\n            \r\n            Graph.topic.subscribe('shape/select', _.bind(this.onShapeSelect, this));\r\n            Graph.topic.subscribe('shape/deselect', _.bind(this.onShapeDeselect, this));\r\n            \r\n            Graph.topic.subscribe('link/select', _.bind(this.onLinkSelect, this));\r\n            Graph.topic.subscribe('link/deselect', _.bind(this.onLinkDeselect, this));\r\n        },\r\n        \r\n        initComponent: function(paper) {\r\n            \r\n            var pad = '<div class=\"graph-toolpad\">' + \r\n                            '<div class=\"pad-header\"></div>' + \r\n                            '<div class=\"pad-splitter\"></div>' + \r\n                            '<div class=\"pad-body\">x</div>'+\r\n                      '</div>';\r\n\r\n            pad = Graph.$(pad);\r\n\r\n            pad.on('click', '[data-shape-tool]', _.bind(this.onToolClick, this));\r\n            \r\n            this.components.pad = pad;\r\n        },\r\n        \r\n        render: function() {\r\n            if (this.props.rendered) {\r\n                return;\r\n            }\r\n            \r\n            this.components.pad.appendTo(this.vector().container());\r\n            this.props.rendered = true;\r\n        },\r\n        \r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.components.pad.detach();\r\n        },\r\n        \r\n        resume: function() {\r\n            if (this.props.suspended) {\r\n                \r\n                this.props.suspended = false;\r\n                \r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else {\r\n                    this.components.pad.appendTo(this.vector().container());\r\n                }\r\n            }\r\n        },\r\n        \r\n        onShapeSelect: function(e) {\r\n            var shape = e.shape,\r\n                meta = shape.metadata,\r\n                pad = this.components.pad;\r\n            \r\n            pad.find('.pad-header').html('<a><i class=\"' + meta.icon + '\"></i></a>');\r\n            \r\n            var body = '';\r\n            \r\n            _.forEach(meta.tools, function(tool){\r\n                if (tool.enabled) {\r\n                    body += '<div class=\"splitter\"></div>';\r\n                    body += '<a data-shape-tool=\"' + tool.name + '\" href=\"javascript:void(0)\" title=\"' + tool.title + '\"><i class=\"' + tool.icon + '\"></i></a>';\r\n                }\r\n            });\r\n            \r\n            pad.find('.pad-body').html(body);\r\n            \r\n            this.cached.tools = meta.tools;\r\n            this.resume();\r\n        },\r\n        \r\n        onShapeDeselect: function(e) {\r\n            this.suspend();\r\n        },\r\n        \r\n\r\n        onLinkSelect: function(e) {\r\n            var link = e.link,\r\n                meta = link.metadata,\r\n                pad = this.components.pad;\r\n            \r\n            pad.find('.pad-header').html('<a><i class=\"' + meta.icon + '\"></i></a>');\r\n            \r\n            var body = '';\r\n            \r\n            _.forEach(meta.tools, function(tool){\r\n                if (tool.enabled) {\r\n                    body += '<div class=\"splitter\"></div>';\r\n                    body += '<a data-shape-tool=\"' + tool.name + '\" href=\"#\" title=\"' + tool.title + '\"><i class=\"' + tool.icon + '\"></i></a>';\r\n                }\r\n            });\r\n            \r\n            pad.find('.pad-body').html(body);\r\n            \r\n            this.cached.tools = meta.tools;\r\n            this.resume();\r\n        },\r\n\r\n        onLinkDeselect: function(e) {\r\n            this.suspend();\r\n        },\r\n        \r\n        onToolClick: function(e) {\r\n            var target = Graph.$(e.currentTarget),\r\n                name = target.data('shapeTool');\r\n            \r\n            var tool = _.find(this.cached.tools, function(t){\r\n                return t.name == name;\r\n            });\r\n            \r\n            if (tool && tool.handler) {\r\n                tool.handler(e);\r\n            }\r\n            \r\n            e.preventDefault();\r\n        }\r\n        \r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.ns('Graph.shape.activity');\r\n\r\n    Graph.shape.activity.Start = Graph.extend(Graph.shape.Shape, {\r\n        \r\n        props: {\r\n            label: 'START',\r\n            width: 60,\r\n            height: 60,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            name: 'activity.start',\r\n            style: 'graph-shape-activity-start'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, \r\n                comp = me.components;\r\n\r\n            var shape, block, label;\r\n\r\n            shape = (new Graph.svg.Group(me.props.left, me.props.top))\r\n                .selectable(false);\r\n\r\n            var cx = me.props.width / 2,\r\n                cy = me.props.height / 2;\r\n\r\n            block = (new Graph.svg.Ellipse(cx, cy, cx, cy))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .data('text', me.props.label)\r\n                .render(shape);\r\n\r\n            block.draggable({\r\n                ghost: true,\r\n                dragClass: Graph.styles.SHAPE_DRAG\r\n            });\r\n            \r\n            block.connectable({wiring: 'h:v'});\r\n            block.resizable();\r\n            block.editable();\r\n            block.snappable();\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            block.on('edit.shape',    _.bind(me.onLabelEdit, me));\r\n            block.on('dragstart.shape', _.bind(me.onDragStart, me));\r\n            block.on('dragend.shape', _.bind(me.onDragEnd, me));\r\n            block.on('resize.shape',  _.bind(me.onResize, me));\r\n            block.on('remove.shape',  _.bind(me.onRemove, me));\r\n            block.on('select.shape',  _.bind(me.onSelect, me));\r\n            block.on('deselect.shape',  _.bind(me.onDeselect, me));\r\n\r\n            label = (new Graph.svg.Text(cx, cy, me.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n\r\n            shape = block = label = null;\r\n        },\r\n\r\n        redraw: function() {\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                label = this.component('label');\r\n\r\n            var matrix, bound, cx, cy;\r\n\r\n            bound  = block.bbox().toJson(),\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            cx = bound.width  / 2;\r\n            cy = bound.height / 2;\r\n\r\n            block.attr({\r\n                cx: cx,\r\n                cy: cy\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n            \r\n            label.attr({\r\n                x: cx, \r\n                y: cy\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n            // update props\r\n            \r\n            matrix = shape.matrix();\r\n            \r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n            \r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Start';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.shape.activity.Start.toString = function() {\r\n        return 'function(options)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.shape.activity.Final = Graph.extend(Graph.shape.Shape, {\r\n        \r\n        props: {\r\n            label: 'STOP',\r\n            width: 60,\r\n            height: 60,\r\n            left: 0,\r\n            top: 0\r\n        }, \r\n\r\n        metadata: {\r\n            name: 'activity.final',\r\n            style: 'graph-shape-activity-final'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, \r\n                comp = me.components;\r\n\r\n            var shape, block, inner, label;\r\n\r\n            shape = (new Graph.svg.Group(me.props.left, me.props.top))\r\n                .selectable(false);\r\n\r\n            var cx = me.props.width / 2,\r\n                cy = me.props.height / 2;\r\n\r\n            block = (new Graph.svg.Ellipse(cx, cy, cx, cy))\r\n                .addClass('comp-block')\r\n                .data('text', me.props.label)\r\n                .render(shape);\r\n\r\n            block.draggable({ghost: true});\r\n            block.connectable();\r\n            block.resizable();\r\n            block.editable();\r\n\r\n            block.on('edit',    _.bind(me.onLabelEdit, me));\r\n            block.on('dragend', _.bind(me.onDragEnd, me));\r\n            block.on('resize',  _.bind(me.onResize, me));\r\n            block.on('remove',  _.bind(me.onRemove, me));\r\n\r\n            inner = (new Graph.svg.Ellipse(cx, cy, cx - 6, cy - 6))\r\n                .addClass('comp-inner')\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            label = (new Graph.svg.Text(cx, cy, me.props.label))\r\n                .addClass('comp-label')\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n            comp.inner = inner.guid();\r\n\r\n            shape = block = label = null;\r\n        },\r\n\r\n        redraw: function() {\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                inner = this.component('inner'),\r\n                label = this.component('label');\r\n\r\n            var matrix, bound, cx, cy;\r\n\r\n            bound  = block.bbox().toJson(),\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n            \r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            cx = bound.width / 2,\r\n            cy = bound.height / 2;\r\n\r\n            block.attr({\r\n                cx: cx,\r\n                cy: cy\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            label.attr({\r\n                x: cx, \r\n                y: cy\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n            inner.attr({\r\n                cx: cx,\r\n                cy: cy,\r\n                rx: cx - 6,\r\n                ry: cy - 6\r\n            });\r\n\r\n            // update props\r\n            matrix = shape.matrix();\r\n            \r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n            \r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Final';\r\n        },\r\n\r\n        onRemove: function() {\r\n            // remove label\r\n            this.component('label').remove();\r\n\r\n            // remove inner\r\n            this.component('inner').remove();\r\n\r\n            // remove shape\r\n            this.component('shape').remove();\r\n\r\n            for (var name in this.components) {\r\n                this.components[name] = null;\r\n            }\r\n\r\n            Graph.registry.shape.unregister(this);\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.shape.activity.Final.toString = function() {\r\n        return 'function(options)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.shape.activity.Action = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'Action',\r\n            width: 140,\r\n            height: 60,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            name: 'activity.action',\r\n            icon: Graph.icons.SHAPE_ACTION,\r\n            style: 'graph-shape-activity-action'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = this.components;\r\n            var shape, block, label;\r\n\r\n            var cx = me.props.width / 2,\r\n                cy = me.props.height / 2;\r\n\r\n            shape = (new Graph.svg.Group(me.props.left, me.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Rect(0, 0, me.props.width, me.props.height))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .data('text', me.props.label)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, me.guid());\r\n\r\n            block.draggable({ghost: true, dragClass: Graph.styles.SHAPE_DRAG});\r\n            block.resizable();\r\n            block.editable();\r\n            block.connectable({wiring: 'h:v'});\r\n            block.snappable();\r\n\r\n            block.on('edit.shape',    _.bind(me.onLabelEdit, me));\r\n            block.on('dragstart.shape', _.bind(me.onDragStart, me));\r\n            block.on('dragend.shape', _.bind(me.onDragEnd, me));\r\n            block.on('resize.shape',  _.bind(me.onResize, me));\r\n            block.on('remove.shape',  _.bind(me.onRemove, me));\r\n            block.on('select.shape',  _.bind(me.onSelect, me));\r\n            block.on('deselect.shape',  _.bind(me.onDeselect, me));\r\n\r\n            label = (new Graph.svg.Text(cx, cy, me.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n\r\n            shape = block = label = null;\r\n        },\r\n\r\n        redraw: function() {\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                label = this.component('label');\r\n\r\n            var bound, matrix;\r\n\r\n            bound = block.bbox().toJson();\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            block.attr({\r\n                x: 0,\r\n                y: 0\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n            \r\n            label.attr({\r\n                x: bound.width  / 2, \r\n                y: bound.height / 2\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n            \r\n            // update props\r\n            \r\n            matrix = shape.matrix();\r\n            \r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n            \r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        onResize: function() {\r\n            this.redraw();\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Action';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.shape.activity.Action.toString = function() {\r\n        return 'function(options)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.shape.activity.Fork = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            width: 100,\r\n            height: 50,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            name: 'activity.fork',\r\n            style: 'graph-shape-activity-fork'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = this.components;\r\n            var shape, block, label;\r\n\r\n            shape = (new Graph.svg.Group(me.props.left, me.props.top))\r\n                .selectable(false);\r\n\r\n            comp.shape = shape.guid();\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.shape.activity.Fork.toString = function() {\r\n        return 'function(options)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.shape.activity.Join = Graph.extend(Graph.shape.Shape, {\r\n        props: {\r\n            width: 140,\r\n            height: 12,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            name: 'activity.join',\r\n            style: 'graph-shape-activity-join'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = this.components;\r\n            var shape, block, beam, label;\r\n\r\n            shape = (new Graph.svg.Group(me.props.left, me.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Rect(0, 0, me.props.width, me.props.height, 0))\r\n                .addClass('block')\r\n                .render(shape);\r\n\r\n            block.draggable({ghost: true});\r\n            block.connectable();\r\n            block.on('dragend', _.bind(me.onDragEnd, me));\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.shape.activity.Join.toString = function() {\r\n        return 'function(options)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    var TRANSFER_RECEIVE = 'receive',\r\n        TRANSFER_DISPOSE = 'dispose';\r\n\r\n    Graph.shape.activity.Lane = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'Participant Role',\r\n            width: 1000,\r\n            height: 200,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        components: {\r\n            header: null\r\n        },\r\n\r\n        tree: {\r\n            pool: null\r\n        },\r\n\r\n        transfer: null,\r\n\r\n        metadata: {\r\n            name: 'activity.lane',\r\n            icon: Graph.icons.SHAPE_LANE,\r\n            style: 'graph-shape-activity-lane'\r\n        },\r\n\r\n        constructor: function(options) {\r\n            this.superclass.prototype.constructor.call(this, options);\r\n            this.initDropzone();\r\n        },\r\n        \r\n        initMetadata: function() {\r\n            this.metadata.tools = [\r\n                {\r\n                    name: 'config', \r\n                    icon: Graph.icons.CONFIG, \r\n                    title: Graph._('Click to config shape'), \r\n                    enabled: true\r\n                },\r\n                {\r\n                    name: 'above', \r\n                    icon: Graph.icons.LANE_ABOVE,\r\n                    title: Graph._('Add shape above'), \r\n                    enabled: true,\r\n                    handler: _.bind(this.onAboveToolClick, this)\r\n                },\r\n                {\r\n                    name: 'below', \r\n                    icon: Graph.icons.LANE_BELOW,\r\n                    title: Graph._('Add shape below'), \r\n                    enabled: true,\r\n                    handler: _.bind(this.onBelowToolClick, this)\r\n                },\r\n                {\r\n                    name: 'moveup',\r\n                    icon: Graph.icons.MOVE_UP,\r\n                    title: Graph._('Move up'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onUpToolClick, this)\r\n                },\r\n                {\r\n                    name: 'movedown',\r\n                    icon: Graph.icons.MOVE_DOWN,\r\n                    title: Graph._('Move down'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onDownToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtofront',\r\n                    icon: Graph.icons.SEND_TO_FRONT,\r\n                    title: Graph._('Send to front'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onFrontToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtoback',\r\n                    icon: Graph.icons.SEND_TO_BACK,\r\n                    title: Graph._('Send to back'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBackToolClick, this)\r\n                },\r\n                {\r\n                    name: 'trash', \r\n                    icon: Graph.icons.TRASH, \r\n                    title: Graph._('Click to remove shape'), \r\n                    enabled: true,\r\n                    handler: _.bind(this.onTrashToolClick, this)\r\n                }\r\n            ];\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, \r\n                comp = me.components;\r\n\r\n            var shape, block, header, label, child;\r\n\r\n            shape = (new Graph.svg.Group(me.props.left, me.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Rect(0, 0, me.props.width, me.props.height, 0))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .render(shape);\r\n\r\n            block.resizable();\r\n\r\n            block.draggable({\r\n                ghost: true,\r\n                batchSync: false\r\n            });\r\n\r\n            block.on('dragend.shape', _.bind(me.onDragEnd, me));\r\n            block.on('resize.shape', _.bind(me.onResize, me));\r\n            block.on('remove.shape',  _.bind(me.onRemove, me));\r\n            block.on('select.shape',  _.bind(me.onSelect, me));\r\n            block.on('deselect.shape',  _.bind(me.onDeselect, me));\r\n\r\n            header = (new Graph.svg.Rect(0, 0, 30, me.props.height, 0))\r\n                .addClass(Graph.styles.SHAPE_HEADER)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            header.data('text', me.props.label);\r\n            header.editable({\r\n                width: 200,\r\n                height: 100\r\n            });\r\n\r\n            header.on('edit.shape', _.bind(me.onLabelEdit, me));\r\n\r\n            var tx = 15,\r\n                ty = me.props.height / 2;\r\n\r\n            label = (new Graph.svg.Text(tx, ty, me.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(shape);\r\n\r\n            label.rotate(270, tx, ty).commit();\r\n\r\n            child = (new Graph.svg.Group())\r\n                .addClass(Graph.styles.SHAPE_CHILD)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            child.translate(50, 0).commit();\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.header = header.guid();\r\n            comp.label = label.guid();\r\n            comp.child = child.guid();\r\n\r\n            // set virtual pool\r\n            me.tree.pool = new Graph.shape.activity.Pool();\r\n            me.tree.pool.insert(me);\r\n\r\n            shape = block = header = label = null;\r\n        },\r\n\r\n        initDropzone: function() {\r\n            var me = this,\r\n                comp = me.component(),\r\n                block = me.component('block'),\r\n                children = me.children();\r\n\r\n            block.interactable().dropzone({\r\n                accept: '.shape-draggable',\r\n                overlap: .2\r\n            })\r\n            .on('dragenter', function laneDragEnter(e){\r\n                var vector, shape, batch;\r\n\r\n                if ( ! me.transfer) {\r\n                    vector = Graph.registry.vector.get(e.relatedTarget);\r\n\r\n                    if (vector) {\r\n\r\n                        shape = Graph.registry.shape.get(vector);\r\n\r\n                        if (shape) {\r\n                            me.transfer = {\r\n                                shape: shape,\r\n                                batch: [],\r\n                                startHandler: _.bind(me.onTransferStart, me),\r\n                                stopHandler: _.bind(me.onTransferEnd, me)\r\n                            };\r\n\r\n                            shape.on('dragend', me.transfer.stopHandler);\r\n\r\n                            // handle batch\r\n                            if (vector.lasso) {\r\n                                batch = vector.lasso.collection.slice();\r\n                                _.forEach(batch, function(v){\r\n                                    var s = Graph.registry.shape.get(v);\r\n                                    if (s && s !== shape) {\r\n                                        me.transfer.batch.push(s);\r\n                                    }\r\n                                });\r\n                                batch = null;\r\n                            }\r\n\r\n                            // handle shape\r\n                            if ( ! children.has(shape)) {\r\n                                me.transfer.trans = TRANSFER_RECEIVE;\r\n                                comp.addClass('receiving');\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (me.transfer.trans == TRANSFER_RECEIVE) {\r\n                        comp.addClass('receiving');\r\n                    }\r\n                }\r\n            })\r\n            .on('dragleave', function laneDragLeave(e){\r\n                if (me.transfer) {\r\n                    comp.removeClass('receiving');\r\n                }\r\n            })\r\n            .on('drop', function laneDrop(e){\r\n                if (me.transfer) {\r\n                    comp.removeClass('receiving');\r\n                }\r\n            });\r\n\r\n            block = null;\r\n        },\r\n\r\n        pool: function() {\r\n            return this.tree.pool;\r\n        },\r\n\r\n        // @Override\r\n        render: function(paper, method, sibling) {\r\n            var component = this.component();\r\n\r\n            method = _.defaultTo(method, 'prepend');\r\n\r\n            component.render(paper, method, sibling);\r\n            \r\n            // save\r\n            this.tree.paper = paper.guid();\r\n        },\r\n\r\n        sendToBack: function() {\r\n            var paper = this.paper();\r\n        },\r\n\r\n        sendToFront: function() {\r\n            this.pool().bringToFront(this);\r\n        },\r\n        \r\n        redraw: function() {\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                header = this.component('header'),\r\n                label = this.component('label');\r\n\r\n            var matrix, bound;\r\n\r\n            bound  = block.bbox().toJson();\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n            \r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n            shape.dirty(true);\r\n            \r\n            block.attr({\r\n                x: 0,\r\n                y: 0\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            header.attr({\r\n                x: 0,\r\n                y: 0,\r\n                height: bound.height\r\n            });\r\n\r\n            header.dirty(true);\r\n\r\n            var tx = 15,\r\n                ty = bound.height / 2;\r\n\r\n            label.graph.matrix = Graph.matrix();\r\n            label.attr('transform', '');\r\n\r\n            label.attr({\r\n                x: tx,\r\n                y: ty\r\n            });\r\n            \r\n            label.wrap(bound.height - 10);\r\n            label.rotate(270, tx, ty).commit();\r\n            \r\n            // update props\r\n            \r\n            matrix = shape.matrix();\r\n            \r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n            \r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n        \r\n        attr: function(name, value) {\r\n            var result = this.superclass.prototype.attr.call(this, name, value),\r\n                maps = {\r\n                    width: 'width',\r\n                    height: 'height',\r\n                    left: 'x',\r\n                    top: 'y'\r\n                };\r\n                \r\n            var block, key, val;\r\n            \r\n            if (_.isPlainObject(name)) {\r\n                \r\n                block = this.component('block');\r\n                \r\n                for (key in name) {\r\n                    if (maps[key]) {\r\n                        val = name[key];\r\n                        block.attr(maps[key], val);\r\n                    }\r\n                }\r\n                \r\n                this.redraw();\r\n                \r\n            } else if (value !== undefined) {\r\n                block = this.component('block');\r\n                \r\n                if (maps[name]) {\r\n                    block.attr(maps[name], value);\r\n                }\r\n                \r\n                this.redraw();\r\n            }\r\n            \r\n            return result;\r\n        },\r\n        \r\n        addSiblingAbove: function() {\r\n            var sibling = new Graph.shape.activity.Lane(),\r\n                paper = this.paper(),\r\n                pool = this.pool();\r\n                \r\n            // create space above\r\n            pool.createSpaceAbove(this, sibling.height());\r\n                \r\n            // sync position 'above'\r\n            var top = (this.top() - sibling.height());\r\n            \r\n            sibling.attr({\r\n                width: this.props.width,\r\n                left: this.props.left,\r\n                top: top\r\n            });\r\n            \r\n            // sync pool\r\n            sibling.tree.pool = pool;\r\n\r\n            var result = pool.insert(sibling);\r\n            \r\n            if (result !== undefined) {\r\n                sibling.render(paper, 'before', this.component());\r\n            }\r\n            \r\n            sibling = null;\r\n        },\r\n        \r\n        addSiblingBellow: function() {\r\n            var sibling = new Graph.shape.activity.Lane(),\r\n                paper = this.paper(),\r\n                pool = this.pool();\r\n            \r\n            // create space\r\n            pool.createSpaceBellow(this, sibling.height());\r\n            \r\n            // sync position 'bellow'\r\n            var bottom = (this.top() + this.height());\r\n            \r\n            sibling.attr({\r\n                width: this.props.width,\r\n                left: this.props.left,\r\n                top: bottom\r\n            });\r\n            \r\n            // sync pool\r\n            sibling.tree.pool = pool;\r\n            \r\n            var result = pool.insert(sibling);\r\n            \r\n            if (result !== undefined) {\r\n                sibling.render(paper, 'after', this.component());\r\n            }\r\n            \r\n            sibling = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Lane';\r\n        },\r\n\r\n        onRemove: function() {\r\n            // remove label\r\n            this.component('label').remove();\r\n\r\n            // remove header\r\n            this.component('header').remove();\r\n\r\n            // remove shape\r\n            this.component('shape').remove();\r\n\r\n            for (var name in this.components) {\r\n                this.components[name] = null;\r\n            }\r\n\r\n            Graph.registry.shape.unregister(this);\r\n        },\r\n        \r\n        onDragEnd: function(e) {\r\n            this.superclass.prototype.onDragEnd.call(this, e);\r\n\r\n            if ( ! e.batch) {\r\n                this.pool().translateBy(this, e.dx, e.dy);\r\n            }\r\n        },\r\n\r\n        onResize: function(e) {\r\n            this.superclass.prototype.onResize.call(this, e);\r\n            this.pool().resizeBy(this);\r\n        },\r\n\r\n        onAboveToolClick: function(e) {\r\n            this.addSiblingAbove();\r\n        },\r\n        \r\n        onBelowToolClick: function(e) {\r\n            this.addSiblingBellow();\r\n        },\r\n\r\n        onUpToolClick: function(e) {\r\n            this.pool().moveUp(this);\r\n        },\r\n\r\n        onDownToolClick: function(e) {\r\n            this.pool().moveDown(this);\r\n        },\r\n\r\n        onTransferStart: function(e) {\r\n\r\n        },\r\n\r\n        onTransferEnd: function(e) {\r\n            var delay;\r\n\r\n            _.delay(function(me){\r\n\r\n                clearTimeout(delay);\r\n                delay = null;\r\n\r\n                var children = me.children(),\r\n                    transfer = me.transfer;\r\n\r\n                var shapeMatrix, shapeComp;\r\n\r\n                console.log(me.contains(transfer.shape));\r\n\r\n                // handle shape\r\n                if (me.contains(transfer.shape)) {\r\n                    \r\n                    shapeComp = transfer.shape.component(); \r\n                    \r\n                    if ( ! children.has(transfer.shape)) {\r\n                        me.addChild(transfer.shape);\r\n\r\n                        // sync matrix\r\n                        // shapeMatrix = transfer.shape.innerMatrix();\r\n\r\n                        // shapeComp.graph.matrix = shapeMatrix;\r\n                        // shapeComp.attr('transform', shapeMatrix.toValue());\r\n                        // shapeComp.dirty(true);\r\n\r\n                    } else {\r\n                        // shapeMatrix = shapeComp.matrix();\r\n                    }\r\n                    \r\n                    // update props\r\n                    // transfer.shape.data({\r\n                    //     left: shapeMatrix.props.e,\r\n                    //     top: shapeMatrix.props.f\r\n                    // });\r\n                    \r\n                    // invalidate\r\n                    transfer.shape.invalidate();\r\n\r\n                    // shapeMatrix = null;\r\n                } else {\r\n                    if (children.has(transfer.shape)) {\r\n                        me.removeChild(transfer.shape);\r\n\r\n                        // sync matrix\r\n                        \r\n                    }\r\n\r\n                    transfer.shape.invalidate();\r\n                }\r\n\r\n                /*console.log(me.contains(transfer.shape));\r\n\r\n                var parent;\r\n                \r\n                // handle shape\r\n                if (children.has(transfer.shape)) {\r\n                    if ( ! bbox.contains(transfer.shape.outerBBox(me))) {\r\n                        //me.removeChild(transfer.shape);\r\n                    } else {\r\n                        // just update matrix\r\n                        var matrix = transfer.shape.matrix();\r\n\r\n                        transfer.shape.data({\r\n                            left: matrix.props.e,\r\n                            top: matrix.props.f\r\n                        });\r\n                    }\r\n                } else {\r\n                    if (bbox.contains(transfer.shape.bbox())) {\r\n                        parent = transfer.shape.parent();\r\n                        if (parent) {\r\n                            //parent.removeChild(transfer.shape, false);\r\n                        }\r\n                        //me.addChild(transfer.shape);\r\n                        console.log(transfer.shape.outerBBox(me).toJson());\r\n                        console.log(bbox.contains(transfer.shape.outerBBox(me)));\r\n                    }\r\n                }\r\n\r\n                \r\n\r\n                // handle batch\r\n                _.forEach(me.transfer.batch, function(shape){\r\n                    if (children.has(shape)) {\r\n                        if ( ! bbox.contains(shape.innerBBox(me))) {\r\n                            me.removeChild(shape);\r\n                        }\r\n                    } else {\r\n                        if (bbox.contains(shape.outerBBox(me))) {\r\n                            parent = shape.parent();\r\n                            if (parent) {\r\n                                parent.removeChild(shape, false);\r\n                            }\r\n                            me.addChild(shape);\r\n                        }\r\n                    }\r\n                });*/\r\n\r\n                transfer.shape.off('dragend', transfer.stopHandler);\r\n                me.transfer = transfer = null;\r\n\r\n                console.log(me.children().items);\r\n\r\n            }, 0, this);\r\n\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.shape.activity.Lane.toString = function() {\r\n        return 'function(options)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    /**\r\n     * Virtual pool for lanes\r\n     */\r\n\r\n    var Pool = Graph.shape.activity.Pool = function() {\r\n        this.guid = 'pool-' + (++Pool.guid);\r\n        \r\n        // tree nodes\r\n        this.lanes = (new Graph.collection.Tree([]))\r\n            .keygen(function(lane){ \r\n                return lane.bbox.y;\r\n                // return (lane.bbox.y + (1e-9 * lane.bbox.x));\r\n            });\r\n        \r\n        // raw nodes\r\n        this.cached = {};\r\n    };\r\n\r\n    Pool.prototype.bbox = function() {\r\n        var nodes = this.lanes.toArray(),\r\n             x = [], \r\n             y = [], \r\n            x2 = [], \r\n            y2 = [];\r\n\r\n        var bbox;\r\n\r\n        for (var i = nodes.length - 1; i >= 0; i--) {\r\n            bbox = nodes[i].bbox;\r\n\r\n            x.push(bbox.x);\r\n            y.push(bbox.y);\r\n\r\n            x2.push(bbox.x + bbox.width);\r\n            y2.push(bbox.y + bbox.height);\r\n        }\r\n\r\n         x = _.min(x);\r\n         y = _.min(y);\r\n        x2 = _.max(x2);\r\n        y2 = _.max(y2);\r\n\r\n        nodes = null;\r\n\r\n        return Graph.bbox({\r\n            x: x,\r\n            y: y,\r\n            x2: x2,\r\n            y2: y2,\r\n            width: x2 - x,\r\n            height: y2 - y\r\n        });\r\n    };\r\n    \r\n    Pool.prototype.get = function(index) {\r\n        var data = this.lanes.get(index);\r\n        if (data) {\r\n            return Graph.registry.shape.get(data.lane);\r\n        }\r\n        return null;\r\n    };\r\n\r\n    Pool.prototype.prev = function(lane) {\r\n        var index = this.index(lane),\r\n            prev = this.lanes.get(index - 1);\r\n            \r\n        if (prev) {\r\n            return Graph.registry.shape.get(prev.lane);\r\n        }\r\n        \r\n        return null;\r\n    };\r\n    \r\n    Pool.prototype.last = function() {\r\n        var index = this.count() - 1,\r\n            last = this.lanes.get(index);\r\n            \r\n        if (last) {\r\n            return Graph.registry.shape.get(last.lane);\r\n        }\r\n        \r\n        return null;\r\n    };\r\n    \r\n    /**\r\n     * Create new space\r\n     */\r\n    Pool.prototype.createSpaceAbove = function(lane, height) {\r\n        var laneIndex = this.index(lane),\r\n            prev = this.lanes.get(laneIndex - 1);\r\n\r\n        if (prev) {\r\n            this.lanes.bubble(prev, function(curr){\r\n                var shape = Graph.registry.shape.get(curr.lane);\r\n                if (shape) {\r\n                    shape.translate(0, -height);\r\n                    curr.bbox = shape.bbox().toJson();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    \r\n    Pool.prototype.createSpaceBellow = function(lane, height) {\r\n        var laneIndex = this.index(lane),\r\n            next = this.lanes.get(laneIndex + 1);\r\n\r\n        if (next) {\r\n            this.lanes.cascade(next, function(curr){\r\n                var shape = Graph.registry.shape.get(curr.lane);\r\n                if (shape) {\r\n                    shape.translate(0, height);\r\n                    curr.bbox = shape.bbox().toJson();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    \r\n    Pool.prototype.translateBy = function(lane, dx, dy) {\r\n        var root = this.lanes.root(),\r\n            guid = lane.guid();\r\n        \r\n        if (root) {\r\n            this.lanes.cascade(root, function(curr){\r\n                if (curr.lane == guid) {\r\n                    curr.bbox = lane.bbox().toJson();\r\n                } else {\r\n                    var shape = Graph.registry.shape.get(curr.lane);\r\n                    if (shape) {\r\n                        shape.translate(dx, dy);\r\n                        curr.bbox = shape.bbox().toJson();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    Pool.prototype.resizeBy = function(lane) {\r\n        var guid = lane.guid(),\r\n            bbox = lane.bbox().toJson(),\r\n            root = this.lanes.root(),\r\n            index = this.index(lane);\r\n            \r\n        if (root) {\r\n\r\n            // sample\r\n            var prev, next, dx1, dx2, dy1, dy2;\r\n\r\n            prev = this.lanes.get(index - 1);\r\n            next = this.lanes.get(index + 1);\r\n\r\n            dx1 = 0;\r\n            dy1 = 0;\r\n\r\n            dx2 = 0\r\n            dy2 = 0;\r\n\r\n            if (prev) {\r\n                dx1 = bbox.x - prev.bbox.x;\r\n                dy1 = bbox.y - (prev.bbox.y + prev.bbox.height);\r\n            }\r\n\r\n            if (next) {\r\n                dx2 = bbox.x - next.bbox.x;\r\n                dy2 = (bbox.y + bbox.height) - next.bbox.y;\r\n            }\r\n\r\n            this.lanes.cascade(root, function(curr, i){\r\n                if (curr.lane == guid) {\r\n                    curr.bbox = bbox;\r\n                } else {\r\n                    var shape = Graph.registry.shape.get(curr.lane);\r\n                    if (shape) {\r\n                        \r\n                        var group = shape.component(),\r\n                            block = shape.component('block');\r\n                        \r\n                        // up\r\n                        if (index > i) {\r\n                            shape.translate(dx1, dy1);\r\n                        } \r\n                        // down\r\n                        else if (index < i) {\r\n                            shape.translate(dx2, dy2);\r\n                        }\r\n\r\n                        block.attr({\r\n                            width: bbox.width\r\n                        });\r\n\r\n                        block.dirty(true);\r\n\r\n                        shape.redraw();\r\n\r\n                        curr.bbox = shape.bbox().toJson();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        bbox = null;\r\n    };\r\n\r\n    Pool.prototype.bringToFront = function(lane) {\r\n        var sets = Graph.$('[data-pool=\"' + this.guid + '\"]'),\r\n            last = sets.last();\r\n        \r\n        if (last.length()) {\r\n            if (last.node() != lane.component().node()) {\r\n                last.after(lane.component().elem);\r\n            }\r\n        }\r\n    };\r\n\r\n    Pool.prototype.moveUp = function(lane) {\r\n        var index = this.index(lane),\r\n            prev  = this.get(index - 1),\r\n            laneNode = this.lanes.get(index),\r\n            prevNode = this.lanes.get(index - 1);\r\n\r\n        if (prev) {\r\n            var laneBox = lane.bbox().toJson(),\r\n                prevBox = prev.bbox().toJson();\r\n\r\n            var dx1 = 0,\r\n                dy1 = prevBox.y - laneBox.y,\r\n                dx2 = 0,\r\n                dy2 = laneBox.y - prevBox.y;\r\n            \r\n            laneNode.bbox.y  += dy1;\r\n            laneNode.bbox.y2 += dy1;\r\n\r\n            prevNode.bbox.y  += dy2;\r\n            prevNode.bbox.y2 += dy2;\r\n\r\n            lane.translate(dx1, dy1);\r\n            prev.translate(dx2, dy2);\r\n\r\n            this.lanes.order();\r\n        }\r\n    };\r\n\r\n    Pool.prototype.moveDown = function(lane) {\r\n        var index = this.index(lane),\r\n            next  = this.get(index + 1),\r\n            laneNode = this.lanes.get(index),\r\n            nextNode = this.lanes.get(index + 1);\r\n\r\n        if (next) {\r\n            var laneBox = lane.bbox().toJson(),\r\n                nextBox = next.bbox().toJson();\r\n\r\n            var dx1 = 0,\r\n                dy1 = nextBox.y - laneBox.y,\r\n                dx2 = 0,\r\n                dy2 = laneBox.y - nextBox.y;\r\n            \r\n            laneNode.bbox.y  += dy1;\r\n            laneNode.bbox.y2 += dy1;\r\n\r\n            nextNode.bbox.y  += dy2;\r\n            nextNode.bbox.y2 += dy2;\r\n\r\n            lane.translate(dx1, dy1);\r\n            next.translate(dx2, dy2);\r\n\r\n            this.lanes.order();\r\n        }\r\n    };\r\n\r\n    Pool.prototype.count = function() {\r\n        return this.lanes.count();\r\n    };\r\n    \r\n    Pool.prototype.insert = function(lane) {\r\n        var guid = lane.guid();\r\n        var node, index;\r\n        \r\n        node = {\r\n            lane: guid,\r\n            bbox: lane.bbox().toJson()\r\n        };\r\n        \r\n        index = this.lanes.insert(node);\r\n        \r\n        if (index !== undefined) {\r\n            this.cached[guid] = node;\r\n            lane.component().elem.attr('data-pool', this.guid);\r\n        }\r\n        \r\n        node = null;\r\n        return index;\r\n    };\r\n\r\n    Pool.prototype.remove = function(lane) {\r\n        var guid = lane.guid(),\r\n            node = this.cached[guid];\r\n        \r\n        var index = this.lanes.remove(node);\r\n        \r\n        if (index !== undefined) {\r\n            delete this.cached[guid];\r\n        }\r\n        \r\n        node = null;\r\n        \r\n        return index;\r\n    };\r\n\r\n    Pool.prototype.index = function(lane) {\r\n        var guid = lane.guid(),\r\n            node = this.cached[guid];\r\n        \r\n        var index = this.lanes.index(node);\r\n        \r\n        node = null;\r\n        \r\n        return index;\r\n    };\r\n    \r\n    ///////// STATIC /////////\r\n    \r\n    Pool.guid = 0;\r\n\r\n    Pool.toString = function() {\r\n        return 'function(options)';\r\n    };\r\n    \r\n}());","\r\n(function(){\r\n    \r\n    var XMLDOC = '<?xml version=\"1.0\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\" [<!ENTITY nbsp \"&#160;\">]>';\r\n    \r\n    var Exporter = Graph.data.Exporter = function(vector, options){\r\n        \r\n        this.options = _.extend({}, Exporter.defaults, options || {});\r\n        this.element = vector.node();\r\n        \r\n        var width, height, scale;\r\n        \r\n        if (vector.isPaper()) {\r\n            width  = vector.elem.width();\r\n            height = vector.elem.height();\r\n            scale  = vector.layout().scale();\r\n        } else {\r\n            var bounds = vector.bbox().toJson();\r\n            \r\n            width  = bounds.width;\r\n            height = bounds.height;\r\n            scale  = vector.globalMatrix().scale();\r\n        }\r\n        \r\n        _.assign(this.options, {\r\n            width: width,\r\n            height: height,\r\n            scaleX: scale.x,\r\n            scaleY: scale.y\r\n        });\r\n    };\r\n    \r\n    Exporter.defaults = {\r\n        width: 0,\r\n        height: 0,\r\n        \r\n        scaleX: 1,\r\n        scaleY: 1\r\n    };\r\n\r\n    Exporter.prototype.exportDataURI = function() {\r\n        \r\n    };\r\n    \r\n    Exporter.prototype.exportSVG = function() {\r\n        \r\n    };\r\n\r\n    Exporter.prototype.exportJPEG = function(filename, compression) {\r\n        var options = _.extend({}, this.options);\r\n        \r\n        options.encoder = 'image/jpeg';\r\n        options.compression = compression || 0.8;\r\n        \r\n        filename = _.defaultTo(filename, 'download.jpg');\r\n        \r\n        exportImage(this.element, options, function(result){\r\n            if (result) {\r\n                document(filename, result);\r\n            }\r\n        });\r\n    };\r\n\r\n    Exporter.prototype.exportPNG = function(filename, compression) {\r\n        var options = _.extend({}, this.options);\r\n        \r\n        filename = _.defaultTo(filename, 'download.png');\r\n        \r\n        options.encoder = 'image/png';\r\n        options.compression = compression || 0.8;\r\n        \r\n        exportImage(this.element, options, function(result){\r\n            if (result) {\r\n                download(filename, result);\r\n            }\r\n        });\r\n    };\r\n\r\n    Exporter.prototype.exportBlob = function(callback) {\r\n        var options = _.extend({}, this.options);\r\n        \r\n        options.encoder = 'image/jpeg';\r\n        options.compression = 1;\r\n        options.background = '#ffffff';\r\n\r\n        exportImage(this.element, options, function(result){\r\n            if (result) {\r\n                var blob = createBlob(result);\r\n                callback && callback(blob);\r\n            } else {\r\n                callback && callback(false);\r\n            }\r\n        });\r\n    };\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function repair(data) {\r\n        var encoded = encodeURIComponent(data);\r\n        \r\n        encoded = encoded.replace(/%([0-9A-F]{2})/g, function(match, p1) {\r\n            var c = String.fromCharCode('0x'+p1);\r\n            return c === '%' ? '%25' : c;\r\n        });\r\n        \r\n        return decodeURIComponent(encoded);\r\n    }\r\n    \r\n    function download(name, uri) {\r\n        if (navigator.msSaveOrOpenBlob) {\r\n            var blob = createBlob(uri);\r\n            navigator.msSaveOrOpenBlob(blob, name);\r\n            blob = null;\r\n        } else {\r\n            var link = Graph.dom('<a/>');\r\n            \r\n            if ('download' in link) {\r\n                link.download = name;\r\n                link.href = uri;\r\n                link.style.display = 'none';\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                document.body.removeChild(link);\r\n            } else {\r\n                window.open(uri, '_download', 'menubar=no,toolbar=no,status=no');\r\n            }\r\n            \r\n            link = null;\r\n        }\r\n    }\r\n    \r\n    function createBlob(uri) {\r\n        var byteString = window.atob(uri.split(',')[1]),\r\n            mimeString = uri.split(',')[0].split(':')[1].split(';')[0],\r\n            buffer = new ArrayBuffer(byteString.length),\r\n            intArray = new Uint8Array(buffer);\r\n        \r\n        for (var i = 0, ii = byteString.length; i < ii; i++) {\r\n            intArray[i] = byteString.charCodeAt(i);\r\n        }\r\n        \r\n        return new Blob([buffer], {type: mimeString});\r\n    }\r\n    \r\n    function exportImage(element, options, callback) {\r\n        var data = createDataURI(element, options),\r\n            image = new Image();\r\n        \r\n        image.onload = function() {\r\n            var canvas, context, result;\r\n            \r\n            canvas = document.createElement('canvas');\r\n            canvas.width  = image.width;\r\n            canvas.height = image.height;\r\n            \r\n            context = canvas.getContext('2d');\r\n\r\n            if (options.background) {\r\n                context.fillStyle = options.background;\r\n                context.fillRect(0, 0, canvas.width, canvas.height);\r\n            }\r\n\r\n            context.drawImage(image, 0, 0);\r\n            \r\n            try {\r\n                result = canvas.toDataURL(options.encoder, options.compression);\r\n            } catch(e) {\r\n                result = false;\r\n            }\r\n            \r\n            canvas = context = null;\r\n            callback(result);\r\n        };\r\n        \r\n        image.onerror = function() {\r\n            callback(false);\r\n        };\r\n        \r\n        image.src = data; // DOMURL.createObjectURL(blob);\r\n    }\r\n    \r\n    function createDataURI(element, options) {\r\n        var holder = Graph.dom('<div/>'),\r\n            cloned = element.cloneNode(true);\r\n        \r\n        var css, sty, svg, xml, uri;\r\n            \r\n        if (cloned.tagName == 'svg') {\r\n            cloned.setAttribute('width',  options.width);\r\n            cloned.setAttribute('height', options.height);\r\n        } else {\r\n            svg = Graph.dom('<svg/>');\r\n            \r\n            svg.setAttribute('xmlns', Graph.config.xmlns.svg);\r\n            svg.setAttribute('xmlns:xlink', Graph.config.xmlns.xlink);\r\n            svg.setAttribute('version', Graph.config.svg.version);\r\n            svg.setAttribute('width',  options.width);\r\n            svg.setAttribute('height', options.height);\r\n            \r\n            svg.appendChild(cloned);\r\n            cloned = svg;\r\n        }\r\n        \r\n        holder.appendChild(cloned);\r\n        \r\n        css = getElementStyles(element);\r\n        sty = Graph.dom('<style/>');\r\n        sty.setAttribute('type', 'text/css');\r\n        sty.innerHTML = \"<![CDATA[\\n\" + css + \"\\n]]>\";\r\n        \r\n        var first = cloned.childNodes[0];\r\n        \r\n        if (first) {\r\n            cloned.insertBefore(sty, first);\r\n        } else {\r\n            cloned.appendChild(sty);\r\n        }\r\n        \r\n        xml = XMLDOC + holder.innerHTML;\r\n        uri = 'data:image/svg+xml;base64,' + window.btoa(repair(xml));\r\n        \r\n        cloned = holder = null;\r\n        return uri;\r\n    }\r\n    \r\n    function getElementStyles(element) {\r\n        var styles = document.styleSheets,\r\n            result = '';\r\n            \r\n        var rules, rule, found;\r\n        \r\n        for (var i = 0, ii = styles.length; i < ii; i++) {\r\n            \r\n            rules = styles[i].cssRules;\r\n            \r\n            if (rules != null) {\r\n                \r\n                for (var j = 0, jj = rules.length; j < jj; j++, found = null) {\r\n                    \r\n                    rule = rules[j];\r\n                    \r\n                    if (rule.style !== undefined) {\r\n                        if (rule.selectorText) {\r\n                            \r\n                            found = element.querySelector(rule.selectorText);\r\n                            \r\n                            if (found) {\r\n                                result += rule.selectorText + \" { \" + rule.style.cssText + \" }\\n\";\r\n                            } else if(rule.cssText.match(/^@font-face/)) {\r\n                                result += rule.cssText + '\\n';\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.pallet.Activity = Graph.extend({\r\n        \r\n        props: {\r\n            guid: null\r\n        },\r\n        \r\n        components: {\r\n            pallet: null\r\n        },\r\n        \r\n        cached: {\r\n            \r\n        },\r\n        \r\n        constructor: function(options) {\r\n            _.assign(this.props, options || {});\r\n            this.props.guid = 'pallet-' + (++Graph.pallet.Activity.guid);\r\n            this.initComponent();\r\n\r\n            Graph.registry.pallet.register(this);\r\n        },\r\n\r\n        guid: function() {\r\n            return this.props.guid;\r\n        },\r\n\r\n        initComponent: function() {\r\n            var template, pallet;\r\n            \r\n            template = _.format(\r\n                '<svg class=\"graph-pallet\" xmlns=\"{0}\" xmlns:xlink=\"{1}\" version=\"{2}\" style=\"width: 100%; height: 100%\">' + \r\n                    '<defs>' + \r\n                        '<marker id=\"marker-arrow-pallet\" refX=\"11\" refY=\"10\" viewBox=\"0 0 20 20\" markerWidth=\"10\" markerHeight=\"10\" orient=\"auto\">' + \r\n                            '<path d=\"M 1 5 L 11 10 L 1 15 Z\" fill=\"#30D0C6\" stroke-linecap=\"round\" stroke-dasharray=\"10000, 1\"/>' + \r\n                        '</marker>' + \r\n                    '</defs>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"activity.start\" transform=\"matrix(1,0,0,1,40,0)\">' + \r\n                        '<circle cx=\"32\" cy=\"32\" r=\"30\"/>' +\r\n                        '<text x=\"32\" y=\"36\">Start</text>' + \r\n                    '</g>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"activity.final\" transform=\"matrix(1,0,0,1,40,80)\">' + \r\n                        '<circle cx=\"32\" cy=\"32\" r=\"30\"/>' + \r\n                        '<circle cx=\"32\" cy=\"32\" r=\"24\" class=\"full\"/>' + \r\n                        '<text x=\"32\" y=\"36\">Stop</text>' + \r\n                    '</g>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"activity.action\" transform=\"matrix(1,0,0,1,40,160)\">' + \r\n                        '<rect x=\"2\" y=\"2\" width=\"60\" height=\"60\" rx=\"7\" ry=\"7\"/>' + \r\n                        '<text x=\"32\" y=\"34\">Action</text>' + \r\n                    '</g>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"activity.router\" transform=\"matrix(1,0,0,1,40,250)\">' + \r\n                        '<rect x=\"4\" y=\"4\" width=\"54\" height=\"54\" transform=\"rotate(45,32,32)\"/>' + \r\n                        '<text x=\"30\" y=\"34\">Route</text>' + \r\n                    '</g>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"activity.join\" transform=\"matrix(1,0,0,1,40,340)\">' + \r\n                        '<rect x=\"2\" y=\"28\" width=\"60\" height=\"6\" rx=\"0\" ry=\"0\" class=\"full\"/>' + \r\n                        '<path d=\"M 10  0 L 10 28\"></path>' + \r\n                        '<path d=\"M 54  0 L 54 28\"></path>' + \r\n                        '<path d=\"M 32 34 L 32 60\" marker-end=\"url(#marker-arrow-pallet)\"></path>' + \r\n                        '<text x=\"32\" y=\"20\">Join</text>' + \r\n                    '</g>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"activity.fork\" transform=\"matrix(1,0,0,1,40,420)\">' + \r\n                        '<rect x=\"2\" y=\"28\" width=\"60\" height=\"6\" rx=\"0\" ry=\"0\" class=\"full\"/>' + \r\n                        '<path d=\"M 10 34 L 10 60\" marker-end=\"url(#marker-arrow-pallet)\"></path>' + \r\n                        '<path d=\"M 54 34 L 54 60\" marker-end=\"url(#marker-arrow-pallet)\"></path>' + \r\n                        '<path d=\"M 32  0 L 32 28\"></path>' + \r\n                        '<text x=\"32\" y=\"50\">Fork</text>' + \r\n                    '</g>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"activity.lane\" transform=\"matrix(1,0,0,1,40,500)\">' + \r\n                        '<rect x=\"2\" y=\"2\" width=\"60\" height=\"60\" rx=\"0\" ry=\"0\"/>' + \r\n                        '<rect x=\"2\" y=\"2\" width=\"10\" height=\"60\" rx=\"0\" ry=\"0\"/>' + \r\n                        '<text x=\"32\" y=\"34\">Role</text>' + \r\n                    '</g>' + \r\n                '</svg>',\r\n                Graph.config.xmlns.svg,\r\n                Graph.config.xmlns.xlink,\r\n                Graph.config.svg.version\r\n            );\r\n            \r\n            pallet = Graph.$(template);\r\n            \r\n            pallet.on('click', '[data-shape]', _.bind(this.onShapeClick, this));\r\n            \r\n            var me = this;\r\n\r\n            // setup draggable\r\n            var draggable = interact('.graph-pallet-item', pallet.node()).draggable({\r\n                manualStart: true,\r\n                onstart: function(e) {\r\n                    var target = Graph.$(e.target),\r\n                        transform = Graph.util.transform2segments(target.attr('transform'));\r\n\r\n                    transform = transform[0].slice(1);\r\n                    me.cached.matrix = Graph.factory(Graph.lang.Matrix, transform);\r\n\r\n                    target.addClass('grabbing');\r\n                    transform = target = null;\r\n                    \r\n                },\r\n                onmove: function(e) {\r\n                    me.cached.matrix.translate(e.dx, e.dy);\r\n                    e.target.setAttribute('transform', me.cached.matrix.toValue());\r\n                },\r\n                onend: function(e) {\r\n                    var target = Graph.$(e.target);\r\n                    \r\n                    target.removeClass('grabbing');\r\n                    pallet.node().removeChild(me.cached.clone);\r\n\r\n                    me.cached.matrix = null;\r\n                    target = null;\r\n                }\r\n            })\r\n            .on('move', function(e){\r\n                var i = e.interaction;\r\n                if (i.pointerIsDown && ! i.interacting()) {\r\n                    var action = {name: 'drag'};\r\n\r\n                    // -- workaround for a bug in v1.2.6 of interact.js\r\n                    i.prepared.name = action.name;\r\n                    i.setEventXY(i.startCoords, i.pointers);\r\n\r\n                    me.cached.clone = e.currentTarget.cloneNode(true);\r\n                    pallet.node().appendChild(me.cached.clone);\r\n                    i.start(action, e.interactable, me.cached.clone);\r\n                }\r\n            });\r\n            \r\n            draggable.styleCursor(false);\r\n            \r\n            this.components.pallet = pallet;\r\n        },\r\n\r\n        render: function(container) {\r\n            container = Graph.$(container);\r\n            container.prepend(this.components.pallet);\r\n            container = null;\r\n        },\r\n        \r\n        onShapeClick: function(e) {\r\n            \r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.pallet.Activity';\r\n        }\r\n\r\n    });\r\n\r\n    Graph.pallet.Activity.guid = 0;\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.diagram.Diagram = Graph.extend({\r\n        \r\n        props: {\r\n            type: '',\r\n            name: '',\r\n            desc: ''\r\n        },\r\n\r\n        constructor: function(options) {\r\n            options = options || {};\r\n            _.assign(this.props, options);\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.diagram.Diagram';\r\n        }\r\n    });\r\n\r\n    Graph.diagram.Diagram.toString = function() {\r\n        return 'function(options)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.popup.Dialog = Graph.extend({\r\n\r\n        props: {\r\n            opened: false\r\n        },\r\n\r\n        components: {\r\n            element: null,\r\n            backdrop: null\r\n        },\r\n\r\n        handlers: {\r\n            backdrop_click: null\r\n        },\r\n\r\n        constructor: function(element, options) {\r\n            var me = this, \r\n                comp = me.components,\r\n                handlers = me.handlers;\r\n\r\n            comp.element = Graph.$(element);\r\n\r\n            if (options.buttons) {\r\n                _.forEach(options.buttons, function(button, index){\r\n                    var element = Graph.$(button.element, comp.element);\r\n                    if (element.length()) {\r\n                        var name = 'button' + index,\r\n                            func = name + '_click';\r\n\r\n                        comp[name] = element;\r\n\r\n                        if (_.isFunction(button.onclick)) {\r\n                            handlers[func] = _.bind(function(e){\r\n                                button.onclick.call(me, e);\r\n                            }, me);\r\n                            element.on('click', handlers[func]);\r\n                        }\r\n                        name = func = null;\r\n                    }\r\n                    element = null;\r\n                });\r\n            }\r\n        },\r\n\r\n        element: function() {\r\n            return this.components.element;\r\n        },\r\n\r\n        open: function() {\r\n            if (this.props.opened) {\r\n                return;\r\n            }\r\n\r\n            this.element().addClass('open');\r\n            this.props.opened = true;\r\n\r\n            this.center();\r\n            this.backdrop();\r\n        },\r\n\r\n        close: function() {\r\n            var me = this,\r\n                comp = this.components,\r\n                handlers = this.handlers,\r\n                backdrop = comp.backdrop;\r\n\r\n            this.element().removeClass('open');\r\n            this.props.opened = false;\r\n\r\n            if (handlers.backdrop_click) {\r\n                backdrop.off('click', handlers.backdrop_click);\r\n                handlers.backdrop_click = null;\r\n\r\n                var backdropUser = +backdrop.data('user');\r\n\r\n                backdropUser--;\r\n\r\n                if (backdropUser <= 0) {\r\n                    backdropUser = 0;\r\n                    backdrop.detach();\r\n                }\r\n\r\n                backdrop.data('user', backdropUser);\r\n            }\r\n\r\n            _.forOwn(handlers, function(handler, name){\r\n                var tmp = _.split(name, '_'),\r\n                    key = tmp[0],\r\n                    evt = tmp[1];\r\n\r\n                if (handler && comp[key] && evt) {\r\n                    comp[key].off(evt, handler);\r\n                    handlers[name] = null;\r\n                }\r\n                \r\n                tmp = key = evt = null;\r\n            });\r\n\r\n            this.fire('close');\r\n        },\r\n\r\n        center: _.debounce(function() {\r\n            var element = this.element(),\r\n                width = element.width(),\r\n                height = element.height();\r\n\r\n            element.css({\r\n                'top': '50%',\r\n                'left': '50%',\r\n                'margin-top': -height / 2,\r\n                'margin-left': -width / 2\r\n            });\r\n        }, 0),\r\n\r\n        backdrop: function() {\r\n            var me = this,\r\n                backdrop = Graph.$('.graph-dialog-backdrop');\r\n\r\n            if ( ! backdrop.length()) {\r\n                backdrop = Graph.$('<div class=\"graph-dialog-backdrop\"/>');\r\n                backdrop.data('user', 0);\r\n                backdrop.on('click', function(e){\r\n                    e.stopPropagation();\r\n                });\r\n            }\r\n\r\n            me.handlers.backdrop_click = function() {\r\n                me.close();\r\n            };\r\n\r\n            backdrop.on('click', me.handlers.backdrop_click);\r\n\r\n            var backdropUser = +backdrop.data('user');\r\n\r\n            backdropUser++;\r\n            backdrop.data('user', backdropUser);\r\n\r\n            me.components.element.before(backdrop);\r\n            me.components.backdrop = backdrop;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.popup.Dialog';\r\n        },\r\n\r\n        destroy: function() {\r\n            this.components.element = null;\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n    \r\n    Graph.popup.Dialog.toString = function() {\r\n        return 'function(element, options)';\r\n    };\r\n\r\n    ///////// SHORTCUT /////////\r\n    \r\n    Graph.dialog = function(element, options){\r\n        return new Graph.popup.Dialog(element, options);\r\n    };\r\n\r\n}());"],"sourceRoot":"/source/"}