{"version":3,"sources":["poly.js","core.js","util.js","class.js","error.js","event.js","point.js","line.js","curve.js","bbox.js","path.js","matrix.js","vector.js","shape.js","tree.js","link.js","element.js","ellipse.js","circle.js","rect.js","polyline.js","polygon.js","group.js","text.js","image.js","paper.js","pallet.js","layout.js","router.js","directed.js","orthogonal.js","sweeplink.js","plugin.js","manager.js","definer.js","reactor.js","transformer.js","animator.js","resizer.js","rotator.js","collector.js","dragger.js","dropper.js","network.js","history.js","panzoom.js","linker.js","toolmanager.js","pencil.js","editor.js","snapper.js","toolpad.js","clipper.js","start.js","final.js","action.js","fork.js","join.js","lane.js","pool.js","label.js","exporter.js","parser.js","activity.js","Diagram.js","Activity.js","dialog.js","init.js"],"names":["ascending","a","b","NaN","bisector","compare","left","x","lo","hi","arguments","length","mid","right","_","float","parseFloat","gcd","array","t","i","r","len","lcm","format","params","toArray","shift","replace","match","number","insert","index","Array","prototype","splice","apply","concat","move","from","to","size","k","push","undefined","permute","permuter","isFunction","reduce","result","value","key","isArray","f","d","ascendingKey","isIE","na","global","navigator","ua","userAgent","toLowerCase","ie","indexOf","parseInt","substring","GLOBAL","window","Math","self","Function","NAVIGATOR","Graph","ready","BOOTSTRAPS","VERSION","AUTHOR","cached","config","base","locale","dom","svg","version","xmlns","xlink","html","font","family","line","resizer","image","rotator","setup","name","val","locals","isPlainObject","extend","string","ID_VECTOR","ID_SHAPE","ID_LINK","ID_PORT","styles","VECTOR","PAPER","VIEWPORT","SHAPE","SHAPE_BLOCK","SHAPE_LABEL","SHAPE_HEADER","SHAPE_CHILD","SHAPE_DRAG","LINK_HEAD","LINK_TAIL","icons","ZOOM_IN","ZOOM_OUT","ZOOM_RESET","SHAPE_LANE","SHAPE_LINK","SHAPE_ACTION","SHAPE_ROUTER","LANE_ABOVE","LANE_BELOW","CONFIG","LINK","TRASH","SEND_TO_BACK","SEND_TO_FRONT","MOVE_UP","MOVE_DOWN","ROUTER_OR","ROUTER_XOR","ROUTER_NONE","ROUTER_PARALLEL","doc","isHTML","obj","HTMLElement","isSVG","SVGElement","isElement","Element","isMac","test","platform","ns","namespace","lookup","clazz","current","parts","split","parent","uuid","c","random","toString","hash","str","l","hval","charCodeAt","substr","create","superclass","props","factory","args","bind","expand","target","source","scope","tproto","constructor","sproto","defaultTo","forOwn","isUndefined","lang","Class","mixin","this","group","token","credit","join","remove","debounce","v","memoize","func","memo","param","cache","saved","ii","defer","$","Deferred","when","paper","width","height","options","Paper","type","capitalize","shape","names","chunk","lastIndexOf","layout","router","link","plugin","proto","diagram","util","pallet","topic","subscribers","publish","message","subs","lsnr","forEach","handler","call","subscribe","unsub","h","s","sub","unsubscribe","find","u","graphConfig","REGEX_POLY_STR","LEGENDRE_T","LEGENDRE_C","deg","rad","round","PI","angle","dx","dy","y","atan2","theta","toFixed","taxicab","hypo","va","vb","sqrt","sign","num","quadrant","gradient","Infinity","snapValue","snaps","range","abs","rem","pointbox","padding","x1","y1","x2","y2","pointAlign","treshold","pointDistance","isPointEquals","isPointOnLine","p","det","dis","polar2point","distance","radian","origin","point","cos","sin","isBoxContainsPoint","box","isBoxIntersect","fn","boxOrientation","box1","box2","top","rgt","btm","lft","ver","hor","expandBox","groupBox","boxes","min","max","midpoint","movepoint","tr","lineBendpoints","dir","xm","ym","points","lineIntersection","x3","y3","x4","y4","nx","ny","denominator","px","py","px2","py2","perpendicular","m1","m2","tt","hp","atan","mx","my","iy","points2path","segments","map","segments2path","path2points","command","path2segments","sizes","m","q","z","cloneDeep","cmd","polygon2dots","$0","polygon2path","dots","transform2segments","valid","matrix","translate","rotate","scale","skewX","skewY","transform","matches","curvebox","x0","y0","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","j","jlen","curveLength","sum","ct","xb","curvePolynom","yb","co","n1","n2","n3","n4","curveInterval","step","pointAtInterval","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","t13","pow","t12","t3","ax","ay","cx","cy","alpha","n","start","end","curveIntersection","count","bon1","bon2","nres","ares","l1","l2","dots1","dots2","xy","di","di1","dj","dj1","ci","cj","is","convexSegment","prev","next","radius","d1","d2","cp","c1","c2","dr","smoothSegment","context","eventType","once","priority","eventNames","eventRoot","listeners","original","unbind","eventRegex","cachedRegex","rgex","RegExp","escapeRegExp","_super","_proto","_constructor","_definition","_class","_classopt","Object","__initialized__","_superopt","_superclass","merge","on","one","off","batch","fire","data","eventObject","onces","isString","Event","originalData","originalType","publisher","slice","Err","Error","err","stack","error","isError","Evt","cancelBubble","defaultPrevented","propagationStopped","immediatePropagationStopped","init","assign","stopPropagation","stopImmediatePropagation","preventDefault","event","isEvent","ESC","ENTER","DELETE","SHIFT","CTRL","CMD","C","V","fix","e","originalEvent","path","composedPath","position","clientX","clientY","relative","vector","clone","invert","isNavigation","navs","code","keyCode","isPrimaryButton","button","hasPrimaryModifier","metaKey","ctrlKey","hasSecondaryModifier","shiftKey","jQuery","snap","Point","tmp","trim","toNumber","manhattan","toJson","triangle","difference","alignment","bbox","bearing","Line","bear","dec","equals","polar","adhereToBox","contains","stringify","sep","toValue","isPoint","lat1","lat2","lon1","lon2","deltaLon","intersect","intersection","isLine","Curve","unshift","pointAt","json","curve","intersectnum","isCurve","BBox","prop","Path","simple","center","corner","dot","contain","isVector","vertices","isBBox","dw","dh","tbox","me","bdat","tdat","sideNearestPoint","tx","ty","tw","th","distToLeft","distToRight","distToTop","distToBottom","closest","side","pointNearestPoint","fixsegment","segment","attr","tq","T","Q","qx","qy","X","Y","arc2curve","bx","by","quad2curve","line2curve","cat2bezier","def","rx","ry","large_arc_flag","sweep_flag","recursive","_120","res","f1","f2","rx2","ry2","asin","df","f2old","x2old","y2old","s1","s2","tan","hx","hy","m3","m4","path1","path2","x1m","y1m","x2m","y2m","bz1","bz2","cv1","cv2","si","sj","inter","ss1","ln1","ss2","ln2","kk","segment1","segment2","bezier1","bezier2","isPath","absolute","seg","itm","toUpperCase","toUpper","jj","pop","ll","head","tail","toLower","com","pi","curve2curve","fixmove2","segments1","segments2","a1","a2","p1","p2","com1","com2","attrs2","pcom","fixArc2","xmin","ymin","xmax","ymax","lengthAt","ps","segmentAt","total","sp","vs","addVertext","vertext","isSimple","vx","vy","nearest","best","bestlen","currpoint","currdist","tolerance","bestdist","prevlen","nextlen","prevdist","nextdist","moveTo","lineTo","append","maxs","Matrix","get","chr","multiply","isMatrix","delta","sx","sy","determinant","radSkewX","cosSkewX","sinSkewX","scaleX","scaleY","toFilter","Collection","collection","items","item","first","last","clear","modify","each","iteratee","Vector","vectors","guid","has","id","not","filter","o","registry","offset","pull","reverse","methods","method","Shape","shapes","keys","identity","component","Tree","nodes","node","bisect","keygen","order","sort","root","cascade","bubble","Link","links","domParser","REGEX_SVG_BUILDER","selector","query","fragment","element","DOMParser","parseFromString","documentElement","childNodes","deep","cloneNode","E","pseudo","belong","setAttributeNS","setAttribute","outerHeight","margin","show","hide","getBoundingClientRect","css","addClass","classes","values","chain","className","baseVal","uniq","removeClass","hasClass","prepend","appendTo","prependTo","before","after","detach","types","trigger","text","focus","select","delay","timer","clearTimeout","document","createRange","getSelection","selectNodeContents","selection","removeAllRanges","addRange","contextmenu","state","empty","scrollTop","scrollLeft","child","children","curr","parentNode","nodeName","tree","container","traversable","selectable","focusable","snappable","selected","rendered","attrs","style","class","plugins","transformer","collector","definer","animator","reactor","dragger","dropper","network","history","panzoom","toolmgr","toolpad","snapper","editor","graph","bboxView","bboxPristine","bboxOriginal","matrixCurrent","matrixView","shapeOriginal","shapeView","elem","createElementNS","Transformer","onTransformerAfterTranslate","onTransformerAfterRotate","onTransformerAfterScale","isPaper","ToolManager","onActivateTool","onDeactivateTool","register","viewport","viewportGuid","native","getCTM","refresh","reset","removeAttr","dirty","invalidate","interactable","Reactor","animable","Animator","animstart","animating","animend","resizable","Resizer","beforeresize","onResizerBeforeResize","afterresize","onResizerAfterResize","rotatable","Rotator","afterrotate","onRotatorAfterRotate","draggable","Dragger","beforedrag","onDraggerStart","drag","onDraggerMove","afterdrag","onDraggerEnd","zoomable","Panzoom","droppable","Dropper","dropenter","onDropperEnter","dropleave","onDropperLeave","connectable","Network","clickable","editable","Editor","beforeedit","edit","isBoolean","enabled","getDefaultInstance","removeAttribute","cursor","predicate","added","removed","removal","pullAll","vmatrix","vrotate","rmatrix","rcenter","shapeRelative","parentMatrix","ma","pa","dt","dimension","getBBox","clientLeft","clientTop","clientWidth","clientHeight","bottom","nbox","pbox","elems","render","sibling","isViewport","setContext","attach","isContainer","isRendered","isTraversable","relocate","resetMatrix","targetMatrix","applyMatrix","ancestors","descendants","deselect","destroy","unregister","initial","add","isResizable","resume","isRotatable","suspend","_collector","animate","duration","easing","callback","label","sendToFront","sendToBack","resize","isGroup","isSelectable","isDraggable","isConnectable","isSnappable","isSelected","tool","master","syncBeforeDrag","syncDrag","syncAfterDrag","Ellipse","gx","gy","commit","bb","magnify","Circle","ar","Rect","origpath","w","ms","mr","ro","rd","ox","oy","Polyline","Polygon","Group","stroke","stroke-width","fill","Text","text-anchor","lineHeight","fontSize","rows","font-size","write","onTextRender","addSpan","span","arrange","wrap","word","words","lines","lineNo","getComputedTextLength","textBox","targetBox","Image","preserveAspectRatio","src","xlink:href","align","aspect","showOrigin","components","manager","xmlns:link","overflow","initLayout","Collector","linker","Linker","pencil","Pencil","Definer","Snapper","Toolpad","clipper","Clipper","Manager","listenLinkChange","listenLinkAfterDestroy","defaultInstance","vp","flush","activate","locateLink","locateShape","arrangeLinks","ellipse","circle","rect","polyline","polygon","arg","storage","Registry","tagName","collect","wipe","pid","hasOwnProperty","Layout","fit","view","smooth","smoothness","grabVector","grabLink","pointerLocation","pointer","location","screenLocation","coord","screen","getScreenCTM","dragSnapping","mode","routerType","createRouter","createLink","inspect","convex","idx","sweeper","Sweeplink","findConvex","reloadConvex","removeConvex","arrangeShapes","Router","domain","waypoints","bendpoints","bending","connect","execute","route","repair","port","initTrans","updateTrans","trans","connecting","stopTrans","portCentering","axis","porting","routes","cable","sortIntersection","isRepairable","getSegmentIndex","sortBy","floor","getClosestIntersect","repairBendpoint","bend","oldport","newport","repairRoutes","bound1","bound2","clonedRoutes","tidyRoutes","Directed","space","sourceNetwork","sourceBBox","sourceBox","targetNetwork","targetBBox","orient","orientation","direct","direction","tuneup","sdot","edot","maxlen","sourcePath","targetPath","rangeStart","rangeEnd","segmentStart","segmentEnd","oldSource","oldTarget","align1","align2","cropBinding","srcport","tarport","cropped","cropConnect","changed","Orthogonal","croping","bends","repaired","ranges","snapH","snapV","sourceBound","targetBound","segmentAlign","q1","q2","newStart","newEnd","sourceOrient","targetOrient","dotlen","newRangeStart","cropBending","getHandler","resource","labelDistance","connected","block","coat","controls","handlers","metadata","icon","initComponent","initMetadata","bindResource","onRouterRoute","onRouterReroute","excludes","router_type","client_id","client_source","client_target","diagram_id","source_id","target_id","maps","label_distance","comp","ghost","manual","batchSync","onCoatClick","onCoatSelect","onCoatDeselect","onCoatBeforeDrag","onCoatAfterDrag","onCoatEdit","onCoatBeforeEdit","onCoatAfterDestroy","onLabelRender","onLabelAfterDrag","vendor","onLabelDoubletap","tools","title","onConfigToolClick","onFrontToolClick","onBackToolClick","onTrashToolClick","unbindResource","existing","beforedestroy","bindSource","bindTarget","unbindSource","unbindTarget","connectByCommand","disconnect","reload","redraw","silent","bound","componentLabel","componentCoat","single","clearCollection","renderControl","resumeControl","suspendControl","relocateHead","relocateTail","isConnected","sourceShape","targetShape","sourceType","targetType","near","startEdit","showControl","onSourceAfterRotate","oport","nport","onSourceSelect","onSourceBeforeDrag","onSourceDrag","console","warn","onSourceAfterDrag","onSourceAfterResize","onSourceBeforeDestroy","onTargetAfterRotate","onTargetSelect","onTargetBeforeDrag","onTargetDrag","onTargetAfterDrag","onTargetAfterResize","onTargetBeforeDestroy","linkid","controlImage","controlSize","control","onControlStart","onControlMove","onControlEnd","snaphor","snapver","conseg","ss","createTree","findIndex","swap","queue","found","process","extract","indexA","indexB","minIndex","intercept","KEY_TRESHOLD","validate","lineA","lineB","alignA","alignB","ix","isOverlap","isIntersection","Plugin","activator","enable","disable","installed","install","getPluginHandler","uninstall","definitions","holder","defineArrowMarker","defineCircleMarker","marker","vendors","interact","dropzone","gesturable","unset","actions","simulate","events","mat","act","inv","equalizeTransform","tt1","tt2","maxlength","emptyTransform","equal","stacks","keyframes","Animation","scenes","animation","100","frame","pause","stop","status","asize","scene","time","playing","applied","ssize","at","initstatus","Date","inverse","able","defaults","eq","semantic","timestamp","player","play","prog","anim","tick","paused","ease","played","repeat","g","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","frames","pickBy","times","linier","easeIn","easeOut","easeInOut","backIn","backOut","elastic","math","bounce","getRestrictOrigin","handle","suspended","restriction","handleImage","handleSize","helper","ow","oh","cw","ch","snapping","onHolderRender","ne","se","sw","nw","onHandleBeforeDrag","onHandleDrag","onHandleAfterDrag","hs","hw","hh","restrict","setupRestriction","MAX_VALUE","Number","MAX_SAFE_INTEGER","oldcen","newcen","vdx","vdy","suspendHelper","handleNode","resizing","manualStart","onstart","resumeHelper","onmove","edx","edy","onend","vcenter","drotate","interaction","pointerIsDown","interacting","prepared","setEventXY","startCoords","pointers","currentTarget","rpath","vpath","cmp","rubber","collecting","onKeynavDown","onKeynavUp","styleCursor","action","decollect","syncdrag","tdx","tdy","inertia","grid","cls","rotation","scaling","dragging","onVectorRender","onDragStart","onDragMove","onDragEnd","onPointerDown","fixsnap","createSnapGrid","setOptions","targets","endOnly","resetSnap","moveHandler","onPointerMove","edata","axs","pageX","pageY","overlap","accept","checker","onDropValidate","ondropactivate","onDropActivate","ondropdeactivate","onDropDeactivate","ondragenter","onDragEnter","ondragleave","onDragLeave","ondrop","onDrop","edrop","edrag","dropped","dropel","dragel","wiring","tuning","limitIncoming","limitOutgoing","linking","pole","cables","pairs","invalidateTrans","relatedTarget","canConnect","removeLink","isSource","isTarget","sourceVector","targetVector","paperLayout","beforeDestroyHandler","onLinkBeforeDestroy","addLink","connectByLinker","connections","connectionsLength","disconnected","linkIds","conn","pair","repairLinks","log","hasConnection","conns","opts","outgoing","incoming","History","limit","save","lim","drop","go","back","zoomRange","panEnabled","zoomEnabled","showToolbox","caching","scrolling","steps","zooming","zoom","toolbox","panning","stopHandler","onMouseWheel","revalidate","zoomReset","zoomIn","zoomOut","currentZoom","zoomType","factor","currentScale","matrixScale","onBeforeZoom","onZoom","scroll","onBeforeScroll","onScroll","vscroll","hscroll","deltaMode","deltaX","deltaY","altKey","onPointerStop","leading","trailing","visits","anchor","build","sbox","cropping","spath","scrop","tpath","tcrop","crop","utils","deactivateAll","deactivate","except","toggle","writing","startHandler","drawShape","editing","commitHandler","onDoubleTap","vbox","coords","snapped","clients","stubx","stuby","clientId","client","getClientCenter","beforeDragHandler","afterDragHandler","afterDestroyHandler","osnaps","onClientBeforeDrag","onClientAfterDrag","onClientAfterDestroy","repairClient","showStub","hideStub","stub","pt","diffx","diffy","snapx","snapy","pad","onShapeSelect","onShapeDeselect","onLinkSelect","onLinkDeselect","onShapeToolClick","onLinkToolClick","meta","body","copy","paste","clips","cut","clip","alias","strokeWidth","client_parent","client_pool","parent_id","stroke_width","update","suspendLayout","resumeLayout","hasChild","addChild","placeTarget","onChildBeforeDestroy","removeChild","shapeComponent","onChildAfterDrag","connectHandler","onChildConnect","autoResize","paperGuid","blockComponent","childComponent","pool","linkData","onLabelEdit","onBeforeDrag","capture","onAfterDrag","shapeMatrix","blockMatrix","onAfterRotate","shapeRotate","onSelect","onDeselect","onConnect","onAfterResize","onBeforeDestroy","onAfterDestroy","isShape","activity","Start","pmgr","Final","inner","Action","onModeClick","Fork","Join","Lane","header","transfer","onAboveToolClick","onBelowToolClick","onUpToolClick","onDownToolClick","onBeforeResize","Pool","initDropzone","onTransferEnd","poolGuid","laneGuid","appended","lanes","addSiblingBellow","bringToFront","childBox","lane","offsetWidth","offsetLeft","offsetTop","createSpaceBellow","boxAfter","boxBefore","netcom","relocateLinks","refreshSnapper","createSiblingAbove","createSpaceAbove","createSiblingBellow","actualBBox","populateChildren","childOffsets","resizeBy","sourceParent","targetParent","sourcePool","targetPool","populateLinks","isolated","separated","relocateSiblings","refreshContents","refreshChildren","laneChildComponent","laneChildBox","moveUp","moveDown","contents","laneIndex","comnet","dx1","dx2","dy1","dy2","sets","laneNode","prevNode","laneBox","prevBox","nextNode","nextBox","populateContents","connectableBlock","contentKeys","pairVector","pairShape","common","Label","labelBox","encoded","encodeURIComponent","String","fromCharCode","decodeURIComponent","download","uri","msSaveOrOpenBlob","blob","createBlob","href","display","appendChild","click","open","byteString","atob","mimeString","buffer","ArrayBuffer","intArray","Uint8Array","Blob","exportImage","createDataURI","onload","canvas","createElement","getContext","background","fillStyle","fillRect","drawImage","toDataURL","encoder","compression","onerror","createData","sty","xml","cloned","getElementStyles","innerHTML","insertBefore","XMLDOC","btoa","rules","rule","styleSheets","ownerDocument","cssRules","selectorText","querySelector","cssText","Exporter","exportDataURI","exportSVG","filename","createEvent","initEvent","dispatchEvent","createEventObject","fireEvent","exportJPEG","exportPNG","exportFile","exportBlob","defaultType","pallets","snapshoot","deselectAll","removeSelection","undo","redo","addPallet","drawing","pick","movable","stopPicking","saveAsImage","exporter","saveAsFile","saveAsBlob","traverse","Parser","_props","_shapes","_links","_tree","parse","Pallet","Activity","template","picking","begin","dragStart","dragStop","dragMove","Diagram","parser","getShapeBy","getLinkBy","getShapes","getLinks","indexes","findShapeBy","description","cover","rendering","active","beforeDrag","afterDrag","hasLane","snappcomp","pools","JSON","resolve","promise","then","popup","Dialog","opened","backdrop","backdrop_click","buttons","onclick","close","backdropUser","evt","margin-top","margin-left","dialog","DOCUMENT","addEventListener","attachEvent","cmdKey","removeEventListener","readyState"],"mappings":"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","file":"graph.min.js","sourcesContent":["\r\n(function(){\r\n\r\n    /**\r\n     * Lodash polyfill\r\n     */\r\n\r\n    _.float = parseFloat;\r\n\r\n    _.gcd = function(array) {\r\n        if (array.length === 2) {\r\n            var a = array[0], b = array[1], t;\r\n\r\n            while (b > 0) {\r\n                t = b;\r\n                b = a % b;\r\n                a = t;\r\n            }\r\n\r\n            return a;\r\n        } else {\r\n            var r = array[0], len = array.length, i;\r\n            for (i = 1; i < len; i++) {\r\n                r = _.gcd([r, array[i]]);\r\n            }\r\n            return r;\r\n        }\r\n    };\r\n\r\n    _.lcm = function(array) {\r\n        if (array.length === 2) {\r\n            var a = array[0], b = array[1];\r\n            return a * (b / _.gcd([a, b]));\r\n        } else {\r\n            var r = array[0], len = array.length, i;\r\n            for (i = 1; i < len; i++) {\r\n                r = _.lcm([r, array[i]]);\r\n            }\r\n            return r;\r\n        }\r\n    };\r\n\r\n    _.format = function() {\r\n        var params = _.toArray(arguments),\r\n            format = params.shift();\r\n        return format.replace(/{(\\d+)}/g, function(match, number) {\r\n            return typeof params[number] != 'undefined'\r\n                ? params[number]\r\n                : match;\r\n        });\r\n    }\r\n\r\n    _.insert = function(array, index, insert) {\r\n        Array.prototype.splice.apply(array, [index, 0].concat(insert));\r\n        return array;\r\n    };\r\n\r\n    /**\r\n     * Array move (swap)\r\n     * http://stackoverflow.com/questions/5306680/move-an-array-element-from-one-array-position-to-another/5306832#5306832\r\n     */\r\n    _.move = function(array, from, to) {\r\n        var size = array.length;\r\n        \r\n        while(from < 0) {\r\n            from += size;\r\n        }\r\n        \r\n        while(to < 0) {\r\n            to += size;\r\n        }\r\n\r\n        if (to >= size) {\r\n            var k = to - size;\r\n            while((k--) + 1) {\r\n                array.push(undefined);\r\n            }\r\n        }\r\n\r\n        array.splice(to, 0, array.splice(from, 1)[0]);\r\n        return array;\r\n    };\r\n\r\n    /**\r\n     * Array permutation\r\n     * https://github.com/lodash/lodash/issues/1701\r\n     */\r\n    _.permute = function(array, permuter) {\r\n        if(_.isFunction(permuter)) {\r\n            return _.reduce(array, function(result, value, key){\r\n                result[permuter(key, value)] = value;\r\n                return result;\r\n            }, []);\r\n        } else if (_.isArray(permuter)) {\r\n            return _.reduce(permuter, function(result, value, key){\r\n                result[key] = array[permuter[key]];\r\n                return result;\r\n            }, []);\r\n        }\r\n        return array;\r\n    };  \r\n    \r\n    /**\r\n     *  Bisector\r\n     *  https://github.com/d3/d3-array/blob/master/src/bisector.js\r\n     */\r\n    function ascending(a, b) {\r\n        return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\r\n    }\r\n\r\n    function descending(a, b) {\r\n        return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\r\n    }\r\n\r\n    function bisector(compare) {\r\n        return {\r\n            left: function(a, x, lo, hi) {\r\n                if (arguments.length < 3) lo = 0;\r\n                if (arguments.length < 4) hi = a.length;\r\n                while (lo < hi) {\r\n                    var mid = lo + hi >>> 1;\r\n                    if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\r\n                }\r\n                return lo;\r\n            },\r\n            right: function(a, x, lo, hi) {\r\n                if (arguments.length < 3) lo = 0;\r\n                if (arguments.length < 4) hi = a.length;\r\n                while (lo < hi) {\r\n                    var mid = lo + hi >>> 1;\r\n                    if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\r\n                }\r\n                return lo;\r\n            }\r\n        };\r\n    }\r\n\r\n    _.bisector = function(f) {\r\n        return bisector(f.length === 1 ? function(d, x){\r\n            return ascending(f(d), x);\r\n        } : f);\r\n    };\r\n    \r\n    /** \r\n     *  Sorter\r\n     *  https://github.com/gka/d3-jetpack/blob/master/d3-jetpack.js\r\n     */\r\n    _.ascendingKey = function(key) {\r\n        return typeof key == 'function' ? function (a, b) {\r\n            return key(a) < key(b) ? -1 : key(a) > key(b) ? 1 : key(a) >= key(b) ? 0 : NaN;\r\n        } : function (a, b) {\r\n            return a[key] < b[key] ? -1 : a[key] > b[key] ? 1 : a[key] >= b[key] ? 0 : NaN;\r\n        };\r\n    };\r\n\r\n    _.isIE = function() {\r\n        var na = global.navigator,\r\n            ua = (na && na.userAgent || '').toLowerCase(),\r\n            ie = ua.indexOf('MSIE ');\r\n\r\n        if (ie > 0 || !!ua.match(/Trident.*rv\\:11\\./)) {\r\n            return parseInt(ua.substring(ie + 5, ua.indexOf('.', ie)));\r\n        }\r\n        return false;\r\n    };\r\n\r\n}());","\r\n//////////////////////////////////////////////////////////////////\r\n/*\r\n * Graph - SVG Library\r\n * Documentation visit: https://github.com/londomloto/graph\r\n *\r\n * @author londomloto <roso.sasongko@gmail.com>\r\n * @author londomloto <roso@kct.co.id>\r\n */\r\n//////////////////////////////////////////////////////////////////\r\n\r\n(function(){\r\n\r\n    var GLOBAL = typeof window != 'undefined' && \r\n                 window.Math == Math \r\n                    ? window \r\n                    : (typeof self != 'undefined' && self.Math == Math \r\n                        ? self \r\n                        : Function('return this')());\r\n\r\n    var NAVIGATOR = navigator;\r\n\r\n    /**\r\n     * Size for cached result\r\n     */\r\n    var CACHE_SIZE = 100;\r\n\r\n    /**\r\n     * Size for memoize function\r\n     */\r\n    var MEMO_SIZE = 1000;\r\n\r\n    //--------------------------------------------------------------------//\r\n    \r\n    /**\r\n     * Banner\r\n     */\r\n    GLOBAL.Graph = function(ready) {\r\n        Graph.BOOTSTRAPS.push(ready);\r\n    };\r\n\r\n    Graph.BOOTSTRAPS = [];\r\n\r\n    Graph.VERSION = '1.0.0';\r\n    \r\n    Graph.AUTHOR = 'Kreasindo Cipta Teknologi';\r\n\r\n    /**\r\n     * Config\r\n     */\r\n    Graph.cached = {};\r\n\r\n    Graph.config = {\r\n        base: '../',\r\n        locale: 'id',\r\n        dom: 'light',\r\n        svg: {\r\n            version: '1.1'\r\n        },\r\n        xmlns: {\r\n            svg: 'http://www.w3.org/2000/svg',\r\n            xlink: 'http://www.w3.org/1999/xlink',\r\n            html: 'http://www.w3.org/1999/xhtml'\r\n        },\r\n        font: {\r\n            family: 'Segoe UI',\r\n            size: '12px',\r\n            line: 1\r\n        },\r\n        resizer: {\r\n            image: 'resize-control.png',\r\n            size: 17\r\n        },\r\n        rotator: {\r\n            image: 'rotator.png',\r\n            size: 21\r\n        }\r\n    };\r\n\r\n    Graph.setup = function(name, value) {\r\n        var locals = ['icons', 'string', 'styles'];\r\n        var key, val;\r\n\r\n        if (_.isPlainObject(name)) {\r\n            for (key in name) {\r\n                val = name[key];\r\n                if (locals.indexOf(key) !== -1) {\r\n                    _.extend(Graph[key], val);\r\n                } else {\r\n                    if (_.isPlainObject(val)) {\r\n                        _.extend(Graph.config[key], val);\r\n                    } else {\r\n                        Graph.config[key] = val;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (locals.indexOf(name) !== -1) {\r\n                _.extend(Graph[name], value);\r\n            } else {\r\n                if (_.isPlainObject(value)) {\r\n                    _.extend(Graph.config[name], value);\r\n                } else {\r\n                    Graph.config[name] = value;    \r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    // Graph.toString = function() {\r\n    //     return 'SVG Library presented by ' + Graph.AUTHOR;\r\n    // }\r\n    \r\n\r\n    /**\r\n     * String params\r\n     */\r\n    Graph.string = {\r\n        ID_VECTOR: 'graph-vector-id',\r\n        ID_SHAPE: 'graph-shape-id',\r\n        ID_LINK: 'graph-link-id',\r\n        ID_PORT: 'graph-port-id'\r\n    };\r\n\r\n    /**\r\n     * Style params\r\n     */\r\n    Graph.styles = {\r\n        VECTOR: 'graph-elem',\r\n        PAPER: 'graph-paper',\r\n        VIEWPORT: 'graph-viewport',\r\n\r\n        SHAPE: 'graph-shape',\r\n        SHAPE_BLOCK: 'comp-block',\r\n        SHAPE_LABEL: 'comp-label',\r\n        SHAPE_HEADER: 'comp-header',\r\n        SHAPE_CHILD: 'comp-child',\r\n        SHAPE_DRAG: 'shape-draggable',\r\n\r\n        LINK_HEAD: 'graph-link-head',\r\n        LINK_TAIL: 'graph-link-tail'\r\n    };\r\n\r\n    /**\r\n     * Icon params\r\n     */\r\n    Graph.icons = {\r\n        ZOOM_IN: '<i class=\"ion-android-add\"></i>',\r\n        ZOOM_OUT: '<i class=\"ion-android-remove\"></i>',\r\n        ZOOM_RESET: '<i class=\"ion-pinpoint\"></i>',\r\n\r\n        SHAPE: '<i class=\"bpmn-icon-start-event-none\"></i>',\r\n        SHAPE_LANE: '<i class=\"bpmn-icon-participant\"></i>',\r\n        SHAPE_LINK: '<i class=\"ion-android-share-alt\"></i>',\r\n        SHAPE_ACTION: '<i class=\"bpmn-icon-task\"></i>',\r\n        SHAPE_ROUTER: '<i class=\"bpmn-icon-gateway-none\"></i>',\r\n\r\n        LANE_ABOVE: '<i class=\"bpmn-icon-lane-insert-above\"></i>',\r\n        LANE_BELOW: '<i class=\"bpmn-icon-lane-insert-below\"></i>',\r\n\r\n        CONFIG: '<i class=\"bpmn-icon-screw-wrench\"></i>',\r\n        LINK: '<i class=\"bpmn-icon-connection-multi\"></i>',\r\n        TRASH: '<i class=\"bpmn-icon-trash\"></i>',\r\n\r\n        SEND_TO_BACK: '<i class=\"font-icon-send-back\"></i>',\r\n        SEND_TO_FRONT: '<i class=\"font-icon-bring-front\"></i>',\r\n\r\n        MOVE_UP: '<i class=\"ion-android-arrow-up\"></i>',\r\n        MOVE_DOWN: '<i class=\"ion-android-arrow-down\"></i>',\r\n\r\n        ROUTER_OR: '<i class=\"bpmn-icon-gateway-or\"></i>',\r\n        ROUTER_XOR: '<i class=\"bpmn-icon-gateway-xor\"></i>',\r\n        ROUTER_NONE: '<i class=\"bpmn-icon-gateway-none\"></i>',\r\n        ROUTER_PARALLEL: '<i class=\"bpmn-icon-gateway-parallel\"></i>'\r\n    };\r\n\r\n    Graph.doc = function() {\r\n        \r\n    };\r\n\r\n    Graph.global = function() {\r\n        \r\n    };  \r\n\r\n    /**\r\n     * Language & Core helper\r\n     */\r\n    \r\n    Graph.isHTML = function(obj) {\r\n        return obj instanceof HTMLElement;\r\n    };\r\n\r\n    Graph.isSVG = function(obj) {\r\n        return obj instanceof SVGElement;\r\n    };\r\n\r\n    Graph.isElement = function(obj) {\r\n        return obj instanceof Graph.dom.Element;\r\n    };\r\n\r\n    Graph.isMac = function() {\r\n        return (/mac/i).test(NAVIGATOR.platform);    \r\n    };\r\n\r\n    Graph.ns = function(namespace) {\r\n        var cached = Graph.lookup('Graph', 'ns', namespace);\r\n\r\n        if (cached.clazz) {\r\n            return cached.clazz;\r\n        }\r\n\r\n        var parts = _.split(namespace, '.'),\r\n            parent = GLOBAL,\r\n            len = parts.length,\r\n            current,\r\n            i;\r\n\r\n        for (i = 0; i < len; i++) {\r\n            current = parts[i];\r\n            parent[current] = parent[current] || {};\r\n            parent = parent[current];\r\n        }\r\n\r\n        if (_.isFunction(parent)) {\r\n            cached.clazz = parent;\r\n        }\r\n\r\n        return parent;\r\n    };\r\n\r\n    Graph.uuid = function() {\r\n        // credit: http://stackoverflow.com/posts/2117523/revisions\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n            var r = Math.random() * 16|0;\r\n            var v = c == 'x' ? r : (r&0x3|0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Simple hashing\r\n     * http://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript-jquery\r\n     */\r\n    Graph.hash = function(str) {\r\n        var hval = 0x811c9dc5, i, l;\r\n        \r\n        for (i = 0, l = str.length; i < l; i++) {\r\n            hval ^= str.charCodeAt(i);\r\n            hval += (hval << 1) + (hval << 4) + (hval << 7) + (hval << 8) + (hval << 24);\r\n        }\r\n\r\n        return ('0000000' + (hval >>> 0).toString(16)).substr(-8);\r\n\r\n        // var hash = 0, chr, len, i;\r\n        \r\n        // if ( ! str.length) {\r\n        //     return hash;\r\n        // }\r\n\r\n        // for (i = 0, len = str.length; i < len; i++) {\r\n        //     chr   = str.charCodeAt(i);\r\n        //     hash  = ((hash << 5) - hash) + chr;\r\n        //     hash |= 0;\r\n        // }\r\n\r\n        // return hash;\r\n    };\r\n\r\n    // prepare for prototypal factory\r\n    Graph.create = function(superclass, props) {\r\n        \r\n    };\r\n\r\n    Graph.factory = function(clazz, args) {\r\n        args = [clazz].concat(args);\r\n        return new (Function.prototype.bind.apply(clazz, args));\r\n    };\r\n\r\n    Graph.expand = function(target, source, scope) {\r\n        var tproto = target.constructor.prototype,\r\n            sproto = source.constructor.prototype;\r\n\r\n        scope = _.defaultTo(source);\r\n\r\n        _.forOwn(sproto, function(value, key){\r\n            if (_.isFunction(value) && _.isUndefined(tproto[key])) {\r\n                (function(key, value){\r\n                    tproto[key] = _.bind(value, scope);\r\n                }(key, value));    \r\n            }\r\n        });\r\n    };\r\n\r\n    Graph.extend = function(clazz, props) {\r\n        if (_.isPlainObject(clazz)) {\r\n            props = clazz;\r\n            clazz = Graph.lang.Class;\r\n        }\r\n        return clazz.extend(props);\r\n    };\r\n\r\n    Graph.mixin = function(target, source) {\r\n        this.extend(target, source, target);\r\n    };\r\n\r\n    Graph.lookup = function(group, token) {\r\n        var args = _.toArray(arguments), cached, credit;\r\n\r\n        group  = args.shift();\r\n        token  = _.join(args, '|');\r\n        cached = Graph.cached[group] = Graph.cached[group] || {};\r\n        credit = group == 'Regex.event' ? null : CACHE_SIZE;\r\n\r\n        if (cached[token]) {\r\n            cached[token].credit = credit;\r\n        } else {\r\n            cached[token] = {\r\n                credit: credit,\r\n                remove: (function(group, token){\r\n                    return function() {\r\n                        delete Graph.cached[group][token];    \r\n                    };\r\n                }(group, token))\r\n            }\r\n        }\r\n\r\n        _.debounce(function(t){\r\n            _.forOwn(cached, function(v, k){\r\n                if (k != t) {\r\n                    if (cached[k].credit !== null) {\r\n                        cached[k].credit--;\r\n                        if (cached[k].credit <= 0) {\r\n                            delete cached[k];\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        })(token);\r\n\r\n        return cached[token];\r\n    };\r\n\r\n    Graph.memoize = function(func) {\r\n        return function memo() {\r\n            var param = _.toArray(arguments),\r\n                token = _.join(param, \"\\u2400\"),\r\n                cache = memo.cache = memo.cache || {},\r\n                saved = memo.saved = memo.saved || [];\r\n\r\n            if ( ! _.isUndefined(cache[token])) {\r\n                for (var i = 0, ii = saved.length; i < ii; i++) {\r\n                    if (saved[i] == token) {\r\n                        saved.push(saved.splice(i, 1)[0]);\r\n                        break;\r\n                    }\r\n                }\r\n                return cache[token];\r\n            }\r\n\r\n            if (saved.length >= MEMO_SIZE) {\r\n                delete cache[saved.shift()];\r\n            }\r\n\r\n            saved.push(token);\r\n            cache[token] = func.apply(this, param);\r\n\r\n            return cache[token];\r\n        }\r\n    };\r\n\r\n    Graph.defer = function() {\r\n        return $.Deferred();\r\n    };\r\n\r\n    Graph.when = $.when;\r\n\r\n    /**\r\n     * Vector\r\n     */\r\n    Graph.paper = function(width, height, options) {\r\n        return Graph.factory(Graph.svg.Paper, [width, height, options]);\r\n    };\r\n\r\n    Graph.svg = function(type) {\r\n        var args = _.toArray(arguments), svg;\r\n\r\n        type = args.shift();\r\n        svg = Graph.factory(Graph.svg[_.capitalize(type)], args);\r\n        args = null;\r\n        \r\n        return svg;\r\n    };\r\n\r\n    Graph.shape = function(names, options) {\r\n        var clazz, shape, chunk;\r\n\r\n        chunk = names.lastIndexOf('.');\r\n        names = names.substr(0, chunk) + '.' + _.capitalize(names.substr(chunk + 1));\r\n        clazz = Graph.ns('Graph.shape.' + names);\r\n        shape = Graph.factory(clazz, options);\r\n\r\n        chunk = names = clazz = null;\r\n        return shape;\r\n    };\r\n\r\n    /**\r\n     * Layout\r\n     */\r\n    Graph.layout = function(type) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Router\r\n     */\r\n    Graph.router = function(type) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Link / Connector\r\n     */\r\n    Graph.link = function(type) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Plugin\r\n     */\r\n    Graph.plugin = function(proto) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Diagram\r\n     */\r\n    Graph.diagram = function(name, options) {\r\n        var clazz, diagram;\r\n        clazz = Graph.diagram.type[_.capitalize(name)];\r\n        return Graph.factory(clazz, [options]);\r\n    };\r\n\r\n    Graph.diagram.type = {};\r\n    Graph.diagram.util = {};\r\n    Graph.diagram.pallet = {};\r\n\r\n    /**\r\n     * Pallet\r\n     */\r\n    Graph.pallet = function(type, options) {\r\n        var clazz;\r\n        clazz = Graph.diagram.pallet[_.capitalize(type)];\r\n        return Graph.factory(clazz, [options]);\r\n    };\r\n    \r\n    /**\r\n     * Topic\r\n     */\r\n    Graph.topic = {\r\n        subscribers: {\r\n\r\n        },\r\n        publish: function(topic, message, scope) {\r\n            var subs = Graph.topic.subscribers,\r\n                lsnr = subs[topic] || [];\r\n\r\n            _.forEach(lsnr, function(handler){\r\n                if (handler) {\r\n                    handler.call(null, message, scope);  \r\n                }\r\n            });\r\n        },\r\n\r\n        subscribe: function(topic, handler) {\r\n\r\n            if (_.isPlainObject(topic)) {\r\n                var unsub = [];\r\n\r\n                _.forOwn(topic, function(h, t){\r\n                    (function(t, h){\r\n                        var s = Graph.topic.subscribe(t, h);\r\n                        unsub.push({topic: t, sub: s});\r\n                    }(t, h));\r\n                });\r\n\r\n                return {\r\n                    unsubscribe: (function(unsub){\r\n                        return function(topic) {\r\n                            if (topic) {\r\n                                var f = _.find(unsub, function(u){\r\n                                    return u.topic == topic;\r\n                                });\r\n                                f && f.sub.unsubscribe();\r\n                            } else {\r\n                                _.forEach(unsub, function(u){\r\n                                    u.sub.unsubscribe();\r\n                                });\r\n                            }\r\n                        };\r\n                    }(unsub))\r\n                };\r\n            }\r\n\r\n            var subs = Graph.topic.subscribers, data;\r\n\r\n            subs[topic] = subs[topic] || [];\r\n            subs[topic].push(handler);\r\n\r\n            return {\r\n                unsubscribe: (function(topic, handler){\r\n                    return function() {\r\n                        Graph.topic.unsubscribe(topic, handler);\r\n                    };\r\n                }(topic, handler))\r\n            };\r\n        },\r\n\r\n        unsubscribe: function(topic, handler) {\r\n            var subs = Graph.topic.subscribers, \r\n                lsnr = subs[topic] || [];\r\n\r\n            for (var i = lsnr.length - 1; i >= 0; i--) {\r\n                if (lsnr[i] === handler) {\r\n                    lsnr.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    Graph.message = function(message, type) {\r\n        type = _.defaultTo(type, 'info');\r\n        \r\n        Graph.topic.publish('graph:message', {\r\n            type: type,\r\n            message: message\r\n        });\r\n    };\r\n\r\n    ///////////////////////////// LOAD CONFIG /////////////////////////////\r\n    \r\n    if (GLOBAL.graphConfig) {\r\n        Graph.setup(GLOBAL.graphConfig);\r\n    }\r\n\r\n    ///////////////////////////// I18N /////////////////////////////\r\n    \r\n    Graph._ = function(message) {\r\n        return message;\r\n    };\r\n\r\n    /////////////////////////// CORE NAMESPACES ////////////////////////////\r\n    \r\n    Graph.ns('Graph.lang');\r\n    Graph.ns('Graph.collection');\r\n    Graph.ns('Graph.registry');\r\n    Graph.ns('Graph.data');\r\n    Graph.ns('Graph.popup');\r\n    Graph.ns('Graph.shape.activity');\r\n    Graph.ns('Graph.shape.common');\r\n    \r\n}());","\r\n(function(){\r\n\r\n    var REGEX_PATH_STR = /([achlmrqstvz])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig;\r\n    var REGEX_PATH_VAL = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/ig;\r\n    var REGEX_PATH_CMD = /,?([achlmqrstvxz]),?/gi;\r\n    var REGEX_POLY_STR = /(\\-?[0-9.]+)\\s*,\\s*(\\-?[0-9.]+)/g;\r\n    var REGEX_TRAN_STR = /((matrix|translate|rotate|scale|skewX|skewY)*\\((\\-?\\d+\\.?\\d*e?\\-?\\d*[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+\\))+/g;\r\n    var REGEX_TRAN_SUB = /[\\w\\.\\-]+/g;\r\n    var REGEX_POLY_STR = /(\\-?[0-9.]+)\\s*,\\s*(\\-?[0-9.]+)/g;\r\n    \r\n    var CONVEX_RADIUS  = 10;\r\n    var SMOOTH_RADIUS  = 6;\r\n\r\n    /**\r\n     * Legendre Gauss (Quadratic Curve)\r\n     * https://pomax.github.io/bezierinfo/legendre-gauss.html\r\n     */\r\n    \r\n    var LEGENDRE_N = 12;\r\n    var LEGENDRE_T = [-0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873, -0.7699, 0.7699, -0.9041, 0.9041, -0.9816, 0.9816];\r\n    var LEGENDRE_C = [ 0.2491, 0.2491,  0.2335, 0.2335,  0.2032, 0.2032,  0.1601, 0.1601,  0.1069, 0.1069,  0.0472, 0.0472];\r\n    \r\n    Graph.util = {\r\n        \r\n        // --------MATH-------- //\r\n        \r\n        deg: function(rad) {\r\n            return Math.round ((rad * 180 / Math.PI % 360) * 1000) / 1000;\r\n        },  \r\n        \r\n        rad: function(deg) {\r\n            return deg % 360 * Math.PI / 180;\r\n        },\r\n        \r\n        angle: function(a, b) {\r\n            var dx = a.x - b.x,\r\n                dy = a.y - b.y;\r\n\r\n            if ( ! dx && ! dy) {\r\n                return 0;\r\n            }\r\n\r\n            return (180 + Math.atan2(-dy, -dx) * 180 / Math.PI + 360) % 360;\r\n        },\r\n\r\n        theta: function(a, b) {\r\n            var dy = -(b.y - a.y),\r\n                dx =   b.x - a.x;\r\n\r\n            var rad, deg;\r\n\r\n            if (dy.toFixed(10) == 0 && dx.toFixed(10) == 0) {\r\n                rad = 0;\r\n            } else {\r\n                rad = Math.atan2(dy, dx);\r\n            }\r\n\r\n            if (rad < 0) {\r\n                rad = 2 * Math.PI + rad;\r\n            }\r\n\r\n            deg = 180 * rad / Math.PI;\r\n            deg = (deg % 360) + (deg < 0 ? 360 : 0);\r\n\r\n            return deg;\r\n        },\r\n\r\n        taxicab: function(a, b) {\r\n            var dx = a.x - b.x,\r\n                dy = a.y - b.y;\r\n            return dx * dx + dy * dy;\r\n        },\r\n\r\n        /**\r\n         * Get vector hypotenuse (magnitude)\r\n         */\r\n        hypo: function(va, vb) {\r\n            return Math.sqrt(va * va + vb * vb);\r\n        },\r\n        \r\n        /**\r\n         * Get sign of number\r\n         */\r\n        sign: function(num) {\r\n            return num < 0 ? -1 : 1;\r\n        },\r\n            \r\n        quadrant: function(x, y) {\r\n            return x >= 0 && y >= 0 ? 1 : (x >= 0 && y < 0 ? 4 : (x < 0 && y < 0 ? 3 : 2));\r\n        },\r\n        \r\n        // slope\r\n        gradient: function(a, b) {\r\n            // parallel\r\n            if (b.x == a.x) {\r\n                return b.y > a.y ? Infinity : -Infinity\r\n            } else if (b.y == a.y) {\r\n                return b.x > a.x ? 0 : -0;\r\n            } else {\r\n                return (b.y - a.y) / (b.x - a.x);\r\n            }\r\n        },\r\n        \r\n        snapValue: function (value, snaps, range) {\r\n            range = _.defaultTo(range, 10);\r\n            \r\n            if (_.isArray(snaps)) {\r\n                var i = snaps.length;\r\n                while(i--) {\r\n                    if (Math.abs(snaps[i] - value) <= range) {\r\n                        return snaps[i];\r\n                    }\r\n                }\r\n            } else {\r\n                snaps = +snaps;\r\n                \r\n                var rem = value % snaps;\r\n                \r\n                if (rem < range) {\r\n                    return value - rem;\r\n                }\r\n                \r\n                if (rem > value - range) {\r\n                    return value - rem + snaps;\r\n                }\r\n            }\r\n            return value;\r\n        },\r\n        \r\n        // --------POINT-------- //\r\n        \r\n        pointbox: function(x, y, padding) {\r\n            if (_.isPlainObject(x)) {\r\n                padding = y;\r\n                y = x.y;\r\n                x = x.x;\r\n            }\r\n            \r\n            padding = padding || 0;\r\n            \r\n            var x1 = x - padding,\r\n                y1 = y - padding,\r\n                x2 = x + padding,\r\n                y2 = y + padding,\r\n                width = x2 - x1,\r\n                height = y2 - y1;\r\n            \r\n            return {\r\n                x: x1,\r\n                y: y1,\r\n                x2: x2,\r\n                y2: y2,\r\n                width: width,\r\n                height: height\r\n            };\r\n        },\r\n        \r\n        pointAlign: function(a, b, treshold) {\r\n            if ( ! a || ! b) {\r\n                return false;\r\n            }\r\n            \r\n            treshold = treshold || 2;\r\n            \r\n            if (Math.abs(a.x - b.x) <= treshold) {\r\n                return 'h';\r\n            };\r\n\r\n            if (Math.abs(a.y - b.y) <= treshold) {\r\n                return 'v';\r\n            }\r\n\r\n            return false;\r\n        },\r\n        \r\n        pointDistance: function (a, b) {\r\n            if ( ! a || ! b) {\r\n                return -1;\r\n            }\r\n            return Graph.util.hypo((a.x - b.x), (a.y - b.y));\r\n        },\r\n        \r\n        isPointEquals: function (a, b) {\r\n            return a.x == b.x && a.y == b.y;\r\n        },\r\n        \r\n        // http://stackoverflow.com/a/907491/412190\r\n        isPointOnLine: function(a, b, p) {\r\n            if ( ! a || ! b || ! p) {\r\n                return false;\r\n            }\r\n            \r\n            var det = (b.x - a.x) * (p.y - a.y) - (b.y - a.y) * (p.x - a.x),\r\n                dis = Graph.util.pointDistance(a, b);\r\n            \r\n            return Math.abs(det / dis) < 2;\r\n        },\r\n        \r\n        polar2point: function(distance, radian, origin) {\r\n            var x, y, d;\r\n\r\n            if (_.isUndefined(origin)) {\r\n                origin = Graph.point(0, 0);\r\n            }\r\n\r\n            x = Math.abs(distance * Math.cos(radian));\r\n            y = Math.abs(distance * Math.sin(radian));\r\n            d = Graph.util.deg(radian);\r\n\r\n            if (d < 90) {\r\n                y = -y;\r\n            } else if (d < 180) {\r\n                x = -x;\r\n                y = -y;\r\n            } else if (d < 270) {\r\n                x = -x;\r\n            }\r\n\r\n            return Graph.point(origin.props.x + x, origin.props.y + y);\r\n        },\r\n        \r\n        // --------BOUNDING-------- //\r\n\r\n        isBoxContainsPoint: function(box, p) {\r\n            return p.x >= box.x && p.x <= box.x2 && p.y >= box.y && p.y <= box.y2;\r\n        },\r\n\r\n        isBoxIntersect: function(a, b) {\r\n            var fn = Graph.util.isBoxContainsPoint;\r\n\r\n            return fn(b, {x: a.x,  y: a.y})  ||\r\n                   fn(b, {x: a.x2, y: a.y})  || \r\n                   fn(b, {x: a.x,  y: a.y2}) || \r\n                   fn(b, {x: a.x2, y: a.y2}) || \r\n                   fn(a, {x: b.x,  y: b.y})  ||\r\n                   fn(a, {x: b.x2, y: b.y})  || \r\n                   fn(a, {x: b.x,  y: b.y2}) || \r\n                   fn(a, {x: b.x2, y: b.y2}) || \r\n                   (a.x < b.x2 && a.x > b.x  ||  b.x < a.x2 && b.x > a.x) && \r\n                   (a.y < b.y2 && a.y > b.y  ||  b.y < a.y2 && b.y > a.y);\r\n        },\r\n\r\n        boxOrientation: function(box1, box2, dx, dy) {\r\n            // treshold\r\n            dx = _.defaultTo(dx, 0);\r\n            dy = _.defaultTo(dy, dx);\r\n            \r\n            var top = box1.y2 + dy <= box2.y,\r\n                rgt = box1.x  - dx >= box2.x2,\r\n                btm = box1.y  - dy >= box2.y2,\r\n                lft = box1.x2 + dx <= box2.x;\r\n\r\n            var ver = top ? 'top' : (btm ? 'bottom' : null),\r\n                hor = lft ? 'left' : (rgt ? 'right' : null);\r\n\r\n            if (hor && ver) {\r\n                return ver + '-' + hor;\r\n            } else {\r\n                return hor || ver || 'intersect';\r\n            }\r\n        },\r\n\r\n        expandBox: function(box, dx, dy) {\r\n            dx = _.defaultTo(dx, 0);\r\n            dy = _.defaultTo(dy, 0);\r\n\r\n            box.x  -= dx;\r\n            box.x2 += dx;\r\n            box.y  -= dy;\r\n            box.y2 += dy;\r\n            box.width = box.x2 - box.x;\r\n            box.height = box.y2 - box.y;\r\n\r\n            return box;\r\n        },\r\n\r\n        groupBox: function(boxes) {\r\n            var x  = [], \r\n                y  = [], \r\n                x2 = [], \r\n                y2 = [];\r\n\r\n            if (boxes.length) {\r\n                _.forEach(boxes, function(box){\r\n                    x.push(box.x);\r\n                    y.push(box.y);\r\n                    x2.push(box.x + box.width);\r\n                    y2.push(box.y + box.height);\r\n                });\r\n\r\n                x  = _.min(x);\r\n                y  = _.min(y);\r\n                x2 = _.max(x2);\r\n                y2 = _.max(y2);\r\n\r\n                return {\r\n                    x: x,\r\n                    y: y,\r\n                    x2: x2,\r\n                    y2: y2,\r\n                    width: (x2 - x),\r\n                    height: (y2 - y)\r\n                };\r\n            } else {\r\n                return {\r\n                    x: 0,\r\n                    y: 0,\r\n                    x2: 0,\r\n                    y2: 0,\r\n                    width: 0,\r\n                    height: 0\r\n                }\r\n            }\r\n        },\r\n        \r\n        // -------LINE------ //\r\n        \r\n        midpoint: function(a, b) {\r\n            return {\r\n                x: (a.x + b.x) / 2,\r\n                y: (a.y + b.y) / 2\r\n            };\r\n        },\r\n        \r\n        /** \r\n         * Move point `a` to `b` as far as distance \r\n         */\r\n        movepoint: function(a, b, distance) {\r\n            var tr =  Graph.util.rad(Graph.util.theta(b, a)),\r\n                dx =  Math.cos(tr) * distance,\r\n                dy = -Math.sin(tr) * distance;\r\n            \r\n            a.x += dx;\r\n            a.y += dy;\r\n            \r\n            return a;\r\n        },\r\n        \r\n        lineBendpoints: function(a, b, dir) {\r\n            var points = [],\r\n                x1 = a.x,\r\n                y1 = a.y,\r\n                x2 = b.x,\r\n                y2 = b.y;\r\n               \r\n            var xm, ym;\r\n            \r\n            dir = dir || 'h:h';\r\n            \r\n            if (dir == 'h:v') {\r\n                points = [\r\n                    { x: x2, y: y1 }\r\n                ];\r\n            } else if (dir == 'v:h') {\r\n                points = [\r\n                    { x: x1, y: y2 }\r\n                ];\r\n            } else if (dir == 'h:h') {\r\n                xm = Math.round((x2 - x1) / 2 + x1);\r\n                points = [\r\n                    { x: xm, y: y1 },\r\n                    { x: xm, y: y2 }\r\n                ];\r\n            } else if (dir == 'v:v') {\r\n                ym = Math.round((y2 - y1) / 2 + y1);\r\n                points = [\r\n                    { x: x1, y: ym },\r\n                    { x: x2, y: ym }\r\n                ];\r\n            } else {\r\n                points = [];\r\n            }\r\n            \r\n            return points;\r\n        },\r\n        \r\n        lineIntersection: function (x1, y1, x2, y2, x3, y3, x4, y4) {\r\n            if (\r\n                Math.max(x1, x2) < Math.min(x3, x4) ||\r\n                Math.min(x1, x2) > Math.max(x3, x4) ||\r\n                Math.max(y1, y2) < Math.min(y3, y4) ||\r\n                Math.min(y1, y2) > Math.max(y3, y4)\r\n            ) {\r\n                return null;\r\n            }\r\n\r\n            var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\r\n                ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\r\n                denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\r\n\r\n            if ( ! denominator) {\r\n                return null;\r\n            }\r\n\r\n            var px = nx / denominator,\r\n                py = ny / denominator,\r\n                px2 = +px.toFixed(2),\r\n                py2 = +py.toFixed(2);\r\n\r\n            if (\r\n                px2 < +Math.min(x1, x2).toFixed(2) ||\r\n                px2 > +Math.max(x1, x2).toFixed(2) ||\r\n                px2 < +Math.min(x3, x4).toFixed(2) ||\r\n                px2 > +Math.max(x3, x4).toFixed(2) ||\r\n                py2 < +Math.min(y1, y2).toFixed(2) ||\r\n                py2 > +Math.max(y1, y2).toFixed(2) ||\r\n                py2 < +Math.min(y3, y4).toFixed(2) ||\r\n                py2 > +Math.max(y3, y4).toFixed(2)\r\n            ) {\r\n                return null;\r\n            }\r\n\r\n            return {\r\n                x: px, \r\n                y: py\r\n            };\r\n        },\r\n        \r\n        perpendicular: function(a, b, h) {\r\n            var m1, m2, tt, hp;\r\n\r\n            m1 = Graph.util.gradient(a, b);\r\n            m2 = m1 === 0 ? 0 : ( -1 / m1 );\r\n            tt = Math.atan(m2);\r\n            // si = Math.sin(tt),\r\n            // co = Math.cos(tt);\r\n\r\n            var hp = h * Math.cos(tt);\r\n            // var hy = h * si;\r\n\r\n            // find `middle point`\r\n            var mx = (a.x + b.x) / 2,\r\n                my = (a.y + b.y) / 2;\r\n\r\n            // find `y` intercept\r\n            var iy = my - (mx * m2)\r\n\r\n            var x3 = mx + hp,\r\n                y3 = m2 * x3 + iy;\r\n\r\n            return {\r\n                from: {\r\n                    x: mx,\r\n                    y: my\r\n                },\r\n                to: {\r\n                    x: x3,\r\n                    y: y3\r\n                }\r\n            };\r\n        },\r\n        \r\n        // -------SHAPE/PATH------ //\r\n        \r\n        points2path: function (points) {\r\n            var segments = _.map(points, function(p, i){\r\n                var cmd = i === 0 ? 'M' : 'L';\r\n                return [cmd, p.x, p.y];\r\n            });\r\n            return Graph.util.segments2path(segments);\r\n        },\r\n        \r\n        path2points: function(command) {\r\n            var segments = Graph.util.path2segments(command);\r\n            return _.map(segments, function(s, i){\r\n                if (s[0] == 'M' || s[0] == 'L') {\r\n                    return {x: s[1], y: s[2]};\r\n                } else {\r\n                    return {x: s[5], y: s[6]};\r\n                }\r\n            });\r\n        },\r\n\r\n        segments2path: function(segments) {\r\n            return _.join(segments || [], ',').replace(REGEX_PATH_CMD, '$1');\r\n        },\r\n\r\n        path2segments: function(command) {\r\n            if ( ! command) {\r\n                return [];\r\n            }\r\n\r\n            var cached = Graph.lookup('Graph.util', 'path2segments', command),\r\n                sizes = {a: 7, c: 6, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, z: 0},\r\n                segments = [];\r\n            \r\n            if (cached.segments) {\r\n                return _.cloneDeep(cached.segments);\r\n            }\r\n\r\n            command.replace(REGEX_PATH_STR, function(match, cmd, val){\r\n                var \r\n                    params = [],\r\n                    name = cmd.toLowerCase();\r\n\r\n                val.replace(REGEX_PATH_VAL, function(match, v){\r\n                    if (v) {\r\n                        params.push(+v);\r\n                    }\r\n                });\r\n\r\n                if (name == 'm' && params.length > 2) {\r\n                    segments.push(_.concat([cmd], params.splice(0, 2)));\r\n                    name = 'l';\r\n                    cmd = cmd == 'm' ? 'l' : 'L';\r\n                }\r\n\r\n                if (name == 'r') {\r\n                    segments.push(_.concat([cmd], params));\r\n                } else while (params.length >= sizes[name]) {\r\n                    segments.push(_.concat([cmd], params.splice(0, sizes[name])));\r\n                    if ( ! sizes[name]) {\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n            \r\n            cached.segments = _.cloneDeep(segments);\r\n            return segments;\r\n        },\r\n\r\n        polygon2dots: function(command) {\r\n            var array = [];\r\n            command.replace(REGEX_POLY_STR, function($0, x, y){\r\n                array.push([_.float(x), _.float(y)]);\r\n            });\r\n            return array;\r\n        },\r\n\r\n        polygon2path: function(command) {\r\n            var dots = Graph.util.polygon2dots(command);\r\n\r\n            if ( ! dots.length) {\r\n                return 'M0,0';\r\n            }\r\n            \r\n            var command = 'M' + dots[0][0] + ',' + dots[0][1];\r\n\r\n            for (var i = 1, ii = dots.length; i < ii; i++) {\r\n                command += 'L' + dots[i][0] + ',' + dots[i][1] + ',';\r\n            }\r\n            \r\n            command  = command.substring(0, command.length - 1);\r\n            command += 'Z';\r\n\r\n            return command;\r\n        },\r\n\r\n        transform2segments: Graph.memoize(function(command) {\r\n            var valid = {\r\n                matrix: true,\r\n                translate: true,\r\n                rotate: true,\r\n                scale: true,\r\n                skewX: true,\r\n                skewY: true\r\n            };\r\n\r\n            command += '';\r\n\r\n            var transform = [], matches = command.match(REGEX_TRAN_STR);\r\n\r\n            if (matches) {\r\n                _.forEach(matches, function(sub){\r\n                    var args = sub.match(REGEX_TRAN_SUB),\r\n                        name = args.shift();\r\n                    if (valid[name]) {\r\n                        args = _.map(args, function(v){ return +v; })\r\n                        transform.push([name].concat(args));    \r\n                    }\r\n                });  \r\n            }\r\n\r\n            return transform;\r\n        }),\r\n        \r\n        // --------CURVE-------- //\r\n        \r\n        curvebox: Graph.memoize(function(x0, y0, x1, y1, x2, y2, x3, y3) {\r\n            var token = _.join(arguments, '_'),\r\n                cached = Graph.lookup('Graph.util', 'curvebox', token);\r\n\r\n            token = null;\r\n\r\n            if (cached.curvebox) {\r\n                return cached.curvebox;\r\n            }\r\n\r\n            var tvalues = [],\r\n                bounds  = [[], []];\r\n\r\n            var a, b, c, t, t1, t2, b2ac, sqrtb2ac;\r\n\r\n            for (var i = 0; i < 2; ++i) {\r\n                if (i == 0) {\r\n                    b =  6 * x0 - 12 * x1 + 6 * x2;\r\n                    a = -3 * x0 +  9 * x1 - 9 * x2 + 3 * x3;\r\n                    c =  3 * x1 -  3 * x0;\r\n                } else {\r\n                    b =  6 * y0 - 12 * y1 + 6 * y2;\r\n                    a = -3 * y0 +  9 * y1 - 9 * y2 + 3 * y3;\r\n                    c =  3 * y1 -  3 * y0;\r\n                }\r\n\r\n                if (Math.abs(a) < 1e-12) {\r\n                    if (Math.abs(b) < 1e-12) {\r\n                        continue;\r\n                    }\r\n                    t = -c / b;\r\n                    if (0 < t && t < 1) {\r\n                        tvalues.push(t);\r\n                    }\r\n                    continue;\r\n                }\r\n\r\n                b2ac = b * b - 4 * c * a;\r\n                sqrtb2ac = Math.sqrt(b2ac);\r\n                \r\n                if (b2ac < 0) {\r\n                    continue;\r\n                }\r\n                \r\n                t1 = (-b + sqrtb2ac) / (2 * a);\r\n                \r\n                if (0 < t1 && t1 < 1) {\r\n                    tvalues.push(t1);\r\n                }\r\n\r\n                t2 = (-b - sqrtb2ac) / (2 * a);\r\n                \r\n                if (0 < t2 && t2 < 1) {\r\n                    tvalues.push(t2);\r\n                }\r\n            }\r\n\r\n            var x, y, j = tvalues.length,\r\n                jlen = j,\r\n                mt;\r\n\r\n            while (j--) {\r\n                t = tvalues[j];\r\n                mt = 1 - t;\r\n                bounds[0][j] = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\r\n                bounds[1][j] = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\r\n            }\r\n\r\n            bounds[0][jlen] = x0;\r\n            bounds[1][jlen] = y0;\r\n            bounds[0][jlen + 1] = x3;\r\n            bounds[1][jlen + 1] = y3;\r\n            bounds[0].length = bounds[1].length = jlen + 2;\r\n\r\n            cached.curvebox = {\r\n                min: {x: Math.min.apply(0, bounds[0]), y: Math.min.apply(0, bounds[1])},\r\n                max: {x: Math.max.apply(0, bounds[0]), y: Math.max.apply(0, bounds[1])}\r\n            };\r\n\r\n            return cached.curvebox;\r\n        }),\r\n        \r\n        curveLength: function(x1, y1, x2, y2, x3, y3, x4, y4, t) {\r\n            t = _.defaultTo(t, 1);\r\n            t = t > 1 ? 1 : t < 0 ? 0 : t;\r\n\r\n            var h = t / 2,\r\n                sum = 0;\r\n\r\n            for (var i = 0; i < LEGENDRE_N; i++) {\r\n                var ct = h * LEGENDRE_T[i] + h,\r\n\r\n                    xb = Graph.util.curvePolynom(ct, x1, x2, x3, x4),\r\n                    yb = Graph.util.curvePolynom(ct, y1, y2, y3, y4),\r\n                    co = xb * xb + yb * yb;\r\n\r\n                sum += LEGENDRE_C[i] * Math.sqrt(co);\r\n            }\r\n\r\n            return h * sum;\r\n        },\r\n\r\n        curvePolynom: function(t, n1, n2, n3, n4) {\r\n            var t1 = -3 * n1 + 9 * n2 -  9 * n3 + 3 * n4,\r\n                t2 =  t * t1 + 6 * n1 - 12 * n2 + 6 * n3;\r\n            return t * t2 - 3 * n1 + 3 * n2;\r\n        },\r\n        \r\n        curveInterval: function(x1, y1, x2, y2, x3, y3, x4, y4, length) {\r\n\r\n            if (length < 0 || Graph.util.curveLength(x1, y1, x2, y2, x3, y3, x4, y4) < length) {\r\n                return;\r\n            }\r\n\r\n            var t = 1,\r\n                step = t / 2,\r\n                t2 = t - step,\r\n                l,\r\n                e = .01;\r\n\r\n            l = Graph.util.curveLength(x1, y1, x2, y2, x3, y3, x4, y4, t2);\r\n\r\n            while (Math.abs(l - length) > e) {\r\n                step /= 2;\r\n                t2 += (l < length ? 1 : -1) * step;\r\n                l = Graph.util.curveLength(x1, y1, x2, y2, x3, y3, x4, y4, t2);\r\n            }\r\n\r\n            return t2;\r\n        },\r\n\r\n        pointAtInterval: function(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\r\n            var t1 = 1 - t,\r\n                t13 = Math.pow(t1, 3),\r\n                t12 = Math.pow(t1, 2),\r\n                t2 = t * t,\r\n                t3 = t2 * t,\r\n                x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\r\n                y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\r\n                mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\r\n                my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\r\n                nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\r\n                ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\r\n                ax = t1 * p1x + t * c1x,\r\n                ay = t1 * p1y + t * c1y,\r\n                cx = t1 * c2x + t * p2x,\r\n                cy = t1 * c2y + t * p2y,\r\n                alpha = (90 - Math.atan2(mx - nx, my - ny) * 180 / Math.PI);\r\n            \r\n            alpha = (90 - Math.atan2(nx - mx, ny - my) * 180 / Math.PI);\r\n\r\n            // (mx > nx || my < ny) && (alpha += 180);\r\n\r\n            // if (isNaN(x) || isNaN(y)) {\r\n            //     return null;\r\n            // }\r\n\r\n            return {\r\n                x: x,\r\n                y: y,\r\n                m: {x: mx, y: my},\r\n                n: {x: nx, y: ny},\r\n                start: {x: ax, y: ay},\r\n                end:   {x: cx, y: cy},\r\n                alpha: alpha\r\n            };\r\n        },\r\n\r\n        curveIntersection: function(a, b, count) {\r\n            var bon1 = Graph.util.curvebox.apply(null, a),\r\n                bon2 = Graph.util.curvebox.apply(null, b),\r\n                nres = 0,\r\n                ares = [];\r\n\r\n            var box1 = {x: bon1.min.x, y: bon1.min.y, x2: bon1.max.x, y2: bon1.max.y},\r\n                box2 = {x: bon2.min.x, y: bon2.min.y, x2: bon2.max.x, y2: bon2.max.y};\r\n                \r\n            if ( ! Graph.util.isBoxIntersect(box1, box2)) {\r\n                return count ? 0 : [];\r\n            }\r\n\r\n            var l1 = Graph.util.curveLength.apply(null, a),\r\n                l2 = Graph.util.curveLength.apply(null, b);\r\n            \r\n            var // n1 = ~~(l1 / 8),\r\n                // n2 = ~~(l2 / 8),\r\n                n1 = ~~(l1 / 10),\r\n                n2 = ~~(l2 / 10),\r\n                dots1 = [],\r\n                dots2 = [],\r\n                xy = {};\r\n\r\n            var i, j, t, p;\r\n\r\n            for (i = 0; i < n1 + 1; i++) {\r\n                t = i / n1;\r\n                p = Graph.util.pointAtInterval.apply(null, a.concat([t]));\r\n                dots1.push({x: p.x, y: p.y, t: t});\r\n            }\r\n\r\n            for (i = 0; i < n2 + 1; i++) {\r\n                t = i / n2;\r\n                p = Graph.util.pointAtInterval.apply(null, b.concat([t]));\r\n                dots2.push({x: p.x, y: p.y, t: t});\r\n            }\r\n\r\n            for (i = 0; i < n1; i++) {\r\n                for (j = 0; j < n2; j++) {\r\n\r\n                    var di  = dots1[i],\r\n                        di1 = dots1[i + 1],\r\n                        dj  = dots2[j],\r\n                        dj1 = dots2[j + 1],\r\n                        ci  = Math.abs(di1.x - di.x) < .001 ? 'y' : 'x',\r\n                        cj  = Math.abs(dj1.x - dj.x) < .001 ? 'y' : 'x',\r\n                        is  = Graph.util.lineIntersection(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\r\n                    \r\n                    if (is) {\r\n                        \r\n                        if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\r\n                            continue;\r\n                        }\r\n\r\n                        xy[is.x.toFixed(4)] = is.y.toFixed(4);\r\n                        \r\n                        var t1 = di.t + Math.abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\r\n                            t2 = dj.t + Math.abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\r\n                        \r\n                        if (t1 >= 0 && t1 <= 1.001 && t2 >= 0 && t2 <= 1.001) {\r\n                            nres++;\r\n                            // ares.push(is);\r\n                            ares.push({\r\n                                x: is.x,\r\n                                y: is.y,\r\n                                t1: t1,\r\n                                t2: t2\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            return count ? nres : ares;\r\n        },\r\n        \r\n        convexSegment: function(point, prev, next, radius) {\r\n            if ( ! prev || ! next || ! point) {\r\n                return null;\r\n            }\r\n            \r\n            var d1 = Graph.util.pointDistance(point, prev),\r\n                d2 = Graph.util.pointDistance(point, next);\r\n                \r\n            radius = radius || CONVEX_RADIUS;\r\n            \r\n            if (d1 > radius && d2 > radius) {\r\n                \r\n                var c1 = Graph.util.movepoint({x: point.x, y: point.y}, prev, -radius / 2),\r\n                    c2 = Graph.util.movepoint({x: point.x, y: point.y}, next, -radius / 2),\r\n                    dr = Graph.util.pointAlign(prev, next, radius / 2);\r\n                \r\n                var cp;\r\n                \r\n                if (dr == 'h') {\r\n                    cp = {\r\n                        x: point.x - radius, \r\n                        y: point.y\r\n                    };\r\n                } else {\r\n                    c1.y = prev.y;\r\n                    c2.y = next.y;\r\n                    cp = {\r\n                        x: point.x, \r\n                        y: point.y - radius\r\n                    };\r\n                }\r\n                \r\n                return [\r\n                    ['L', c1.x, c1.y],\r\n                    ['Q', cp.x, cp.y, c2.x, c2.y]\r\n                ];\r\n            }\r\n            \r\n            return null;\r\n        },\r\n        \r\n        smoothSegment: function(point, prev, next, radius) {\r\n            if ( ! prev || ! next || ! point) {\r\n                return null;\r\n            }\r\n            \r\n            var d1 = Graph.util.pointDistance(point, prev),\r\n                d2 = Graph.util.pointDistance(point, next);\r\n                \r\n            radius = radius || SMOOTH_RADIUS;\r\n            \r\n            if (d1 > radius && d2 > radius) {\r\n                var c1 = Graph.util.movepoint({x: point.x, y: point.y}, prev, -radius),\r\n                    c2 = Graph.util.movepoint({x: point.x, y: point.y}, next, -radius);\r\n                    \r\n                return [\r\n                    ['L', c1.x, c1.y],\r\n                    ['Q', point.x, point.y, c2.x, c2.y]\r\n                ]\r\n            }\r\n            \r\n            return null;\r\n        }\r\n        \r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Class = Graph.lang.Class = function() {};\r\n\r\n    Class.options = {};\r\n\r\n    Class.prototype.constructor = Class;\r\n    Class.prototype.toString = function() { return 'Graph.lang.Class'; };\r\n\r\n    Class.extend = function(config) {\r\n        var _super, _proto, _constructor, _definition, _class, _classopt;\r\n\r\n        _super = this.prototype;\r\n        _proto = Object.create(_super);\r\n\r\n        _classopt = {};\r\n\r\n        _.forOwn(config, function(v, k){\r\n\r\n            if (_.isFunction(v)) {\r\n                _proto[k] = v;\r\n                if (k == 'constructor') {\r\n                    _constructor = v;\r\n                }\r\n            } else {\r\n                _classopt[k] = v;\r\n            }\r\n        });\r\n\r\n        if ( ! _constructor) {\r\n            _constructor = _super.constructor;\r\n        }\r\n\r\n        _class = function() {\r\n\r\n            if ( ! this.__initialized__) {\r\n                this.__initialized__ = true;\r\n\r\n                this.listeners = {};\r\n\r\n                var _superclass = this.superclass;\r\n                var _superopt, key, val;\r\n\r\n                for (key in _classopt) {\r\n                    this[key] = _.cloneDeep(_classopt[key]);\r\n                }\r\n\r\n                while(_superclass) {\r\n                    _superopt = _superclass.options;\r\n\r\n                    if (_superopt) {\r\n                        for (key in _superopt) {\r\n                            if (this[key] !== undefined) {\r\n                                this[key] = _.merge(_.cloneDeep(_superopt[key]), this[key]);\r\n                            } else {\r\n                                this[key] = _.cloneDeep(_superopt[key]);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    _superclass = _superclass.prototype.superclass;\r\n                }\r\n            }\r\n\r\n            if (_constructor) {\r\n                _constructor.apply(this, arguments);\r\n            }\r\n        }\r\n\r\n        _definition = _constructor.toString().match(/(function)?([^\\{=]+)/);\r\n        _definition = 'function' + _definition[2];\r\n\r\n        _class.toString = function() {\r\n            return _definition;\r\n        };\r\n\r\n        _class.extend = _super.constructor.extend;\r\n        _class.options = _classopt;\r\n\r\n        _class.prototype = _proto;\r\n        _class.prototype.constructor = _class;\r\n        _class.prototype.superclass = _super.constructor;\r\n\r\n        _class.prototype.on = function(eventType, handler, once, priority) {\r\n            if (_.isPlainObject(eventType)) {\r\n                var key, val;\r\n                for (key in eventType) {\r\n                    val = eventType[key];\r\n                    if (_.isFunction(val)) {\r\n                        bind(this, key, val);\r\n                    } else {\r\n                        bind(this, key, val['handler'], val['once'], val['priority']);\r\n                    }\r\n                }\r\n            } else {\r\n                bind(this, eventType, handler, once, priority);\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        _class.prototype.one = function(eventType, handler) {\r\n            if (_.isPlainObject(eventType)) {\r\n                var key, val;\r\n                for (key in eventType) {\r\n                    val = eventType[key];\r\n                    if (_.isFunction(val)) {\r\n                        bind(this, key, val, true);\r\n                    } else {\r\n                        bind(this, key, val['handler'], true, val['priority']);\r\n                    }\r\n                }\r\n            } else {\r\n                bind(this, eventType, handler, true);\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        _class.prototype.off = function(eventType, handler) {\r\n            var batch = eventType.split(/\\s/);\r\n\r\n            if (batch.length > 1) {\r\n                for (var i = 0, ii = batch.length; i < ii; i++) {\r\n                    unbind(this, batch[i]);\r\n                }\r\n            } else {\r\n                unbind(this, eventType, handler);\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        _class.prototype.fire = function(eventType, data) {\r\n            var args = [], onces = [];\r\n            var eventObject, eventNames, eventRoot, listeners,\r\n                eventRegex, cachedRegex, ii, i;\r\n\r\n            data = data || {};\r\n\r\n            if (_.isString(eventType)) {\r\n                eventObject = new Graph.lang.Event(eventType, data);\r\n            } else {\r\n                eventObject = eventType;\r\n                eventObject.originalData = data;\r\n                eventType = eventObject.originalType || eventObject.type;\r\n            }\r\n\r\n            eventObject.publisher = this;\r\n            args.push(eventObject);\r\n\r\n            eventNames = eventType.split(/\\./);\r\n            eventRoot = eventNames.shift();\r\n            listeners = (this.listeners[eventRoot] || []).slice();\r\n\r\n            var cachedRegex = Graph.lookup('Regex.event', eventType);\r\n\r\n            if (cachedRegex.rgex) {\r\n                eventRegex = cachedRegex.rgex;\r\n            } else {\r\n                eventRegex = new RegExp(_.escapeRegExp(eventType), 'i');\r\n                cachedRegex.rgex = eventRegex;\r\n            }\r\n\r\n            if (listeners.length) {\r\n                for (i = 0, ii = listeners.length; i < ii; i++) {\r\n                    if (eventRoot == listeners[i].eventType) {\r\n                        if (listeners[i].once) {\r\n                            onces.push(listeners[i]);\r\n                        }\r\n                        listeners[i].handler.apply(listeners[i].handler, args);\r\n                    } else if (eventRegex.test(listeners[i].eventType)) {\r\n                        if (listeners[i].once) {\r\n                            onces.push(listeners[i]);\r\n                        }\r\n                        listeners[i].handler.apply(listeners[i].handler, args);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (onces.length) {\r\n                for (i = 0, ii = onces.length; i < ii; i++) {\r\n                    this.off(onces[i].eventType, onces[i].original);\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n        return _class;\r\n    };\r\n\r\n    /////////\r\n\r\n    function bind(context, eventType, handler, once, priority) {\r\n        var eventNames = eventType.split(/\\./),\r\n            eventRoot = eventNames.shift();\r\n\r\n        once = _.defaultTo(once, false);\r\n        priority = _.defaultTo(priority, 1500);\r\n\r\n        context.listeners[eventRoot] = context.listeners[eventRoot] || [];\r\n\r\n        context.listeners[eventRoot].push({\r\n            eventType: eventType,\r\n            priority: priority,\r\n            original: handler,\r\n            handler: _.bind(handler, context),\r\n            once: once\r\n        });\r\n    }\r\n\r\n    function unbind(context, eventType, handler) {\r\n        var eventNames = eventType.split(/\\./),\r\n            eventRoot = eventNames.shift(),\r\n            listeners = context.listeners[eventRoot] || [];\r\n\r\n        var eventRegex, cachedRegex;\r\n\r\n        cachedRegex = Graph.lookup('Regex.event', eventType);\r\n\r\n        if (cachedRegex.rgex) {\r\n            eventRegex = cachedRegex.rgex;\r\n        } else {\r\n            eventRegex = new RegExp(_.escapeRegExp(eventType), 'i');\r\n            cachedRegex.rgex = eventRegex;\r\n        }\r\n\r\n        for (var i = listeners.length - 1; i >= 0; i--) {\r\n            if (eventRegex.test(listeners[i].eventType)) {\r\n                if (handler) {\r\n                    if (handler === listeners[i].original) {\r\n                        listeners.splice(i, 1);\r\n                    }\r\n                } else {\r\n                    listeners.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n\r\n        if ( ! listeners.length) {\r\n            delete context.listeners[eventRoot];\r\n        }\r\n    }\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var Err = Graph.lang.Error = function(message) {\r\n        this.message = message;\r\n\r\n        var err = new Error();\r\n        this.stack = err.stack;\r\n\r\n        err = null;\r\n    };\r\n\r\n    Err.options = {\r\n        message: ''\r\n    };\r\n    Err.extend = Graph.lang.Class.extend;\r\n\r\n    Err.prototype = Object.create(Error.prototype);\r\n    Err.prototype.constructor = Err;\r\n    Err.prototype.name = \"Graph.lang.Error\";\r\n    Err.prototype.message = \"\";\r\n\r\n    ///////// SHORTCUT /////////\r\n\r\n    Graph.error = function(message) {\r\n        return new Graph.lang.Error(message);\r\n    };\r\n\r\n    Graph.isError = function(obj) {\r\n        return obj instanceof Graph.lang.Error;\r\n    };\r\n\r\n}());\r\n","\r\n(function(_, $){\r\n\r\n    var Evt = Graph.lang.Event = function(type, data){\r\n        this.type = type;\r\n        this.originalData = null;\r\n        this.cancelBubble = false;\r\n        this.defaultPrevented = false;\r\n        this.propagationStopped = false;\r\n        this.immediatePropagationStopped = false;\r\n\r\n        this.init(data);\r\n    };\r\n\r\n    Evt.options = {\r\n        type: null,\r\n        originalData: null,\r\n        cancelBubble: false,\r\n        defaultPrevented: false,\r\n        propagationStopped: false,\r\n        immediatePropagationStopped: false\r\n    };\r\n\r\n    Evt.extend = Graph.lang.Class.extend;\r\n\r\n    Evt.prototype.constructor = Evt;\r\n\r\n    Evt.prototype.init = function(data) {\r\n        if (data) {\r\n            this.originalData = data;\r\n            _.assign(this, data || {});\r\n        }\r\n    };\r\n\r\n    Evt.prototype.stopPropagation = function() {\r\n        this.cancelBubble = this.propagationStopped = true;\r\n    };\r\n\r\n    Evt.prototype.stopImmediatePropagation = function() {\r\n        this.immediatePropagationStopped = this.propagationStopped = true;\r\n    };\r\n\r\n    Evt.prototype.preventDefault = function() {\r\n        this.defaultPrevented = true;\r\n    };\r\n\r\n    Evt.prototype.toString = function() {\r\n        return 'Graph.lang.Event';\r\n    };\r\n\r\n    ///////// SHORTCUT /////////\r\n\r\n    Graph.event = function(type, data) {\r\n        return new Graph.lang.Event(type, data);\r\n    };\r\n\r\n    Graph.isEvent = function(obj) {\r\n        return obj instanceof Graph.lang.Event;\r\n    };\r\n\r\n    ///////// STATIC /////////\r\n\r\n    Graph.event.ESC = 27;\r\n    Graph.event.ENTER = 13;\r\n    Graph.event.DELETE = 46;\r\n    Graph.event.SHIFT = 16;\r\n    Graph.event.CTRL = 17;\r\n    Graph.event.CMD = 91;\r\n\r\n    Graph.event.C = 67;\r\n    Graph.event.V = 86;\r\n\r\n    Graph.event.fix = function(event) {\r\n        return $.event.fix(event);\r\n    };\r\n\r\n    Graph.event.target = function(event) {\r\n        var e = event.originalEvent || event;\r\n        var target = e.target;\r\n\r\n        if (Graph.config.dom == 'shadow') {\r\n            var path = e.path || (e.composedPath && e.composedPath());\r\n            if (path) {\r\n                target = path[0];\r\n            }\r\n        }\r\n\r\n        return target;\r\n    }\r\n\r\n    Graph.event.original = function(event) {\r\n        return event.originalEvent || event;\r\n    };\r\n\r\n    Graph.event.position = function(event) {\r\n        return {\r\n            x: event.clientX,\r\n            y: event.clientY\r\n        };\r\n    };\r\n\r\n    Graph.event.relative = function(event, vector) {\r\n        var position = Graph.event.position(event),\r\n            matrix = vector.matrix().clone().invert(),\r\n            relative = {\r\n                x: matrix.x(position.x, position.y),\r\n                y: matrix.y(position.x, position.y)\r\n            };\r\n\r\n        matrix = null;\r\n\r\n        return relative;\r\n    };\r\n\r\n    Graph.event.isNavigation = function(e) {\r\n        var navs = [\r\n            Graph.event.ENTER,\r\n            Graph.event.DELETE,\r\n            Graph.event.SHIFT,\r\n            Graph.event.CTRL,\r\n            Graph.event.CMD,\r\n            Graph.event.ESC\r\n        ];\r\n\r\n        var code = e.keyCode;\r\n        return _.indexOf(navs, code) !== -1;\r\n    };\r\n\r\n    Graph.event.isPrimaryButton = function(event) {\r\n        var original = Graph.event.original(event);\r\n        return ! original.button;\r\n    };\r\n\r\n    Graph.event.hasPrimaryModifier = function(event) {\r\n        if ( ! Graph.event.isPrimaryButton(event)) {\r\n            return false;\r\n        }\r\n        var original = Graph.event.original(event);\r\n        return Graph.isMac() ? original.metaKey : original.ctrlKey;\r\n    };\r\n\r\n    Graph.event.hasSecondaryModifier = function(event) {\r\n        var original = Graph.event.original(event);\r\n        return Graph.event.isPrimaryButton(event) && original.shiftKey;\r\n    };\r\n\r\n}(_, jQuery));\r\n","\r\n(function(){\r\n\r\n    var Collection = Graph.collection.Point = function(points) {\r\n        this.items = points || [];\r\n    };\r\n\r\n    Collection.prototype.constructor = Collection;\r\n    Collection.prototype.items = [];\r\n\r\n    Collection.prototype.get = function(index) {\r\n        return this.items[index];\r\n    };\r\n\r\n    Collection.prototype.push = function(item) {\r\n        this.items.push(item);\r\n        return item;\r\n    };\r\n\r\n    Collection.prototype.pop = function() {\r\n        var item = this.items.pop();\r\n        return item;\r\n    };\r\n\r\n    Collection.prototype.shift = function() {\r\n        var item = this.items.shift();\r\n        return item;\r\n    };\r\n\r\n    Collection.prototype.first = function() {\r\n        return _.head(this.items);\r\n    };\r\n\r\n    Collection.prototype.last = function() {\r\n        return _.last(this.items);\r\n    };\r\n\r\n    Collection.prototype.clear = function() {\r\n        this.items = [];\r\n        return this;\r\n    },\r\n\r\n    Collection.prototype.modify = function(index, x, y) {\r\n        var item = this.items[index];\r\n        item.props.x = x;\r\n        item.props.y = y;\r\n        return item;\r\n    };\r\n\r\n    Collection.prototype.each = function(iteratee) {\r\n        _.forEach(this.items, iteratee);\r\n    };\r\n\r\n    Collection.prototype.toArray = function() {\r\n        return this.items;\r\n    };\r\n\r\n    Collection.prototype.toJson = function() {\r\n        return _.map(this.items, function(item){\r\n            return item.toJson();\r\n        });\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Line = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(x1, y1, x2, y2) {\r\n            var args = _.toArray(arguments);\r\n\r\n            if (args.length === 1) {\r\n                var start = args[0].start().toJson(),\r\n                    end = args[0].end().toJson();\r\n\r\n                x1 = start.x;\r\n                y1 = start.y;\r\n                x2 = end.x;\r\n                y2 = end.y;\r\n            } else if (args.length === 2) {\r\n                if (Graph.isPoint(args[0])) {\r\n                    x1 = args[0].props.x;\r\n                    y1 = args[0].props.y;\r\n                    x2 = args[1].props.x;\r\n                    y2 = args[1].props.y;\r\n                } else {\r\n                    x1 = args[0].x;\r\n                    y1 = args[0].y;\r\n                    x2 = args[1].x;\r\n                    y2 = args[1].y;\r\n                }\r\n                \r\n            }\r\n\r\n            // this.$super('line', {\r\n            //     x1: _.defaultTo(x1, 0),\r\n            //     y1: _.defaultTo(y1, 0),\r\n            //     x2: _.defaultTo(x2, 0),\r\n            //     y2: _.defaultTo(y2, 0)\r\n            // });\r\n            \r\n            this.superclass.prototype.constructor.call(this, 'line', {\r\n                x1: _.defaultTo(x1, 0),\r\n                y1: _.defaultTo(y1, 0),\r\n                x2: _.defaultTo(x2, 0),\r\n                y2: _.defaultTo(y2, 0)\r\n            });\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Line';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n}());","\r\n(function(){\r\n\r\n    var Curve = Graph.lang.Curve = function(command) {\r\n        this.segments = _.isString(command) ? Graph.util.path2segments(command) : _.cloneDeep(command);\r\n\r\n        if (this.segments[0][0] != 'M') {\r\n            this.segments.unshift(\r\n                ['M', this.segments[0][1], this.segments[0][2]]\r\n            );\r\n        }\r\n\r\n        if (this.segments.length === 1 && this.segments[0][0] === 'M') {\r\n            var x = this.segments[0][1],\r\n                y = this.segments[0][2];\r\n            this.segments.push(['C', x, y, x, y, x, y]);\r\n        }\r\n    };\r\n\r\n    Curve.options = {\r\n        segments: []\r\n    };\r\n\r\n    Curve.extend = Graph.lang.Class.extend;\r\n\r\n    Curve.prototype.constructor = Curve;\r\n\r\n    Curve.prototype.segments = [];\r\n\r\n    Curve.prototype.x = function() {\r\n        return this.segments[1][5];\r\n    };\r\n\r\n    Curve.prototype.y = function() {\r\n        return this.segments[1][6];\r\n    };\r\n\r\n    Curve.prototype.length = function(t) {\r\n        var params = this.segments[0].slice(1).concat(this.segments[1].slice(1)).concat([t]);\r\n        return Graph.util.curveLength.apply(null, params);\r\n    };\r\n\r\n    Curve.prototype.t = function(length) {\r\n        var params = this.segments[0].slice(1).concat(this.segments[1].slice(1)).concat([length]);\r\n        return Graph.util.curveInterval.apply(null, params);\r\n    };\r\n\r\n    Curve.prototype.pointAt = function(t, json) {\r\n        var params = this.segments[0].slice(1).concat(this.segments[1].slice(1)).concat([t]),\r\n            result = Graph.util.pointAtInterval.apply(null, params);\r\n\r\n        if (json) {\r\n            return result;\r\n        } else {\r\n            var point = Graph.point(result.x, result.y);\r\n            result.x = result.y = undefined;\r\n            return _.extend(point, result);\r\n        }\r\n    };\r\n\r\n    Curve.prototype.intersection = function(curve, json) {\r\n        var a = this.segments[0].slice(1).concat(this.segments[1].slice(1)),\r\n            b = curve.segments[0].slice(1).concat(curve.segments[1].slice(1)),\r\n            i = Graph.util.curveIntersection(a, b);\r\n\r\n        if (json) {\r\n            return i;\r\n        } else {\r\n            var points = _.map(i, function(p){ return Graph.point(p.x, p.y); });\r\n            return points;\r\n        }\r\n    };\r\n\r\n    Curve.prototype.intersectnum = function(curve) {\r\n        var a = this.segments[0].slice(1).concat(this.segments[1].slice(1)),\r\n            b = curve.segments[0].slice(1).concat(curve.segments[1].slice(1));\r\n\r\n        return Graph.util.curveIntersection(a, b, true);\r\n    };\r\n\r\n    Curve.prototype.bbox = function() {\r\n        var args = [this.segments[0][1], this.segments[0][2]].concat(this.segments[1].slice(1)),\r\n            bbox = Graph.util.curvebox.apply(null, args);\r\n        return Graph.bbox({\r\n            x: bbox.min.x,\r\n            y: bbox.min.y,\r\n            x2: bbox.max.x,\r\n            y2: bbox.max.y,\r\n            width: bbox.max.x - bbox.min.x,\r\n            height: bbox.max.y - bbox.min.y\r\n        });\r\n    };\r\n\r\n    Curve.prototype.clone = function() {\r\n        var segments = _.cloneDeep(this.segments);\r\n        return new Graph.lang.Curve(segments);\r\n    };\r\n\r\n    Curve.prototype.toValue = function() {\r\n        return Graph.util.segments2path(this.segments);\r\n    };\r\n\r\n    Curve.prototype.toString = function() {\r\n        return 'Graph.lang.Curve';\r\n    };\r\n\r\n    ///////// SHORTCUT /////////\r\n\r\n    Graph.curve = function(command) {\r\n        return new Graph.lang.Curve(command);\r\n    };\r\n\r\n    Graph.isCurve = function(obj) {\r\n        return obj instanceof Graph.lang.Curve;\r\n    };\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var BBox = Graph.lang.BBox = function(bounds) {\r\n        this.props = _.extend({\r\n            x: 0,\r\n            y: 0,\r\n            x2: 0,\r\n            y2: 0,\r\n            width: 0,\r\n            height: 0\r\n        }, bounds || {});\r\n    };\r\n\r\n    BBox.options = {\r\n        props: {\r\n            x: 0,\r\n            y: 0,\r\n            x2: 0,\r\n            y2: 0,\r\n            width: 0,\r\n            height: 0\r\n        }\r\n    };\r\n\r\n    BBox.extend = Graph.lang.Class.extend;\r\n\r\n    BBox.prototype = Object.create(Graph.lang.Class.prototype);\r\n    BBox.prototype.constructor = BBox;\r\n    BBox.prototype.superclass = Graph.lang.Class;\r\n\r\n    BBox.prototype.shape = function() {\r\n        var prop = this.props;\r\n\r\n        return new Graph.lang.Path([\r\n            ['M', prop.x, prop.y],\r\n            ['l', prop.width, 0],\r\n            ['l', 0, prop.height],\r\n            ['l', -prop.width, 0],\r\n            ['z']\r\n        ]);\r\n    };\r\n\r\n    BBox.prototype.origin = function(simple) {\r\n        simple = _.defaultTo(simple, false);\r\n\r\n        var x = this.props.x,\r\n            y = this.props.y;\r\n\r\n        return simple ? {x: x, y: y} : Graph.point(x, y);\r\n    };\r\n\r\n    BBox.prototype.center = function(simple) {\r\n        simple = _.defaultTo(simple, false);\r\n\r\n        var x = this.props.x + this.props.width  / 2,\r\n            y = this.props.y + this.props.height / 2;\r\n\r\n        return simple ? {x: x, y: y} : Graph.point(x, y);\r\n    };\r\n\r\n    BBox.prototype.corner = function(simple) {\r\n        simple = _.defaultTo(simple, false);\r\n\r\n        var x = this.props.x + this.props.width,\r\n            y = this.props.y + this.props.height;\r\n\r\n        return simple ? {x: x, y: y} : Graph.point(x, y);\r\n    };\r\n\r\n    BBox.prototype.width = function() {\r\n        return this.props.width;\r\n    };\r\n\r\n    BBox.prototype.height = function() {\r\n        return this.props.height;\r\n    };\r\n\r\n    BBox.prototype.clone = function() {\r\n        var props = _.extend({}, this.props);\r\n        return new BBox(props);\r\n    };\r\n\r\n    BBox.prototype.contains = function(obj) {\r\n        var contain = true,\r\n            bbox = this.props,\r\n            dots = [];\r\n\r\n        var vbox, papa, mat, dot;\r\n\r\n        if (Graph.isPoint(obj)) {\r\n            dots = [\r\n                [obj.props.x, obj.props.y]\r\n            ];\r\n        } else if (Graph.isVector(obj)) {\r\n            dots = obj.vertices(true);\r\n        } else if (Graph.isBBox(obj)) {\r\n            dots = [\r\n                [obj.props.x, obj.props.y],\r\n                [obj.props.x2, obj.props.y2]\r\n            ];\r\n        } else {\r\n            var args = _.toArray(arguments);\r\n            if (args.length === 2) {\r\n                dots = [args];\r\n            }\r\n        }\r\n\r\n        if (dots.length) {\r\n            var l = dots.length;\r\n            while(l--) {\r\n                dot = dots[l];\r\n                contain = dot[0] >= bbox.x  &&\r\n                          dot[0] <= bbox.x2 &&\r\n                          dot[1] >= bbox.y  &&\r\n                          dot[1] <= bbox.y2;\r\n                if ( ! contain) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return contain;\r\n    };\r\n\r\n    BBox.prototype.expand = function(dx, dy, dw, dh) {\r\n        var ax, ay;\r\n        if (_.isUndefined(dy)) {\r\n            ax = Math.abs(dx);\r\n\r\n            dx = -ax;\r\n            dy = -ax;\r\n            dw = 2 * ax;\r\n            dh = 2 * ax;\r\n        } else {\r\n            ax = Math.abs(dx);\r\n            ay = Math.abs(dy);\r\n\r\n            dx = -ax;\r\n            dy = -ay;\r\n            dw = 2 * ax;\r\n            dh = 2 * ay;\r\n        }\r\n\r\n        this.props.x += dx;\r\n        this.props.y += dy;\r\n        this.props.width  += dw;\r\n        this.props.height += dh;\r\n\r\n        return this;\r\n    };\r\n\r\n    BBox.prototype.translate = function(dx, dy) {\r\n        this.props.x  += dx;\r\n        this.props.y  += dy;\r\n        this.props.x2 += dx;\r\n        this.props.y2 += dy;\r\n\r\n        return this;\r\n    };\r\n\r\n    BBox.prototype.transform = function(matrix) {\r\n        var x = this.props.x,\r\n            y = this.props.y;\r\n\r\n        this.props.x = matrix.x(x, y);\r\n        this.props.y = matrix.y(x, y);\r\n\r\n        x = this.props.x2;\r\n        y = this.props.y2;\r\n\r\n        this.props.x2 = matrix.x(x, y);\r\n        this.props.y2 = matrix.y(x, y);\r\n\r\n        this.props.width  = this.props.x2 - this.props.x;\r\n        this.props.height = this.props.y2 - this.props.y;\r\n\r\n        return this;\r\n    };\r\n\r\n    BBox.prototype.intersect = function(tbox) {\r\n        var me = this,\r\n            bdat = me.props,\r\n            tdat = tbox.toJson();\r\n\r\n        return tbox.contains(bdat.x, bdat.y)\r\n            || tbox.contains(bdat.x2, bdat.y)\r\n            || tbox.contains(bdat.x, bdat.y2)\r\n            || tbox.contains(bdat.x2, bdat.y2)\r\n            || me.contains(tdat.x, tdat.y)\r\n            || me.contains(tdat.x2, tdat.y)\r\n            || me.contains(tdat.x, tdat.y2)\r\n            || me.contains(tdat.x2, tdat.y2)\r\n            || (bdat.x < tdat.x2 && bdat.x > tdat.x || tdat.x < bdat.x2 && tdat.x > bdat.x)\r\n            && (bdat.y < tdat.y2 && bdat.y > tdat.y || tdat.y < bdat.y2 && tdat.y > bdat.y);\r\n    };\r\n\r\n    BBox.prototype.sideNearestPoint = function(point) {\r\n        var px = point.props.x,\r\n            py = point.props.y,\r\n            tx = this.props.x,\r\n            ty = this.props.y,\r\n            tw = this.props.width,\r\n            th = this.props.height;\r\n\r\n        var distToLeft = px - tx;\r\n        var distToRight = (tx + tw) - px;\r\n        var distToTop = py - ty;\r\n        var distToBottom = (ty + th) - py;\r\n        var closest = distToLeft;\r\n        var side = 'left';\r\n\r\n        if (distToRight < closest) {\r\n            closest = distToRight;\r\n            side = 'right';\r\n        }\r\n\r\n        if (distToTop < closest) {\r\n            closest = distToTop;\r\n            side = 'top';\r\n        }\r\n        if (distToBottom < closest) {\r\n            closest = distToBottom;\r\n            side = 'bottom';\r\n        }\r\n\r\n        return side;\r\n    };\r\n\r\n    BBox.prototype.pointNearestPoint = function(point) {\r\n        if (this.contains(point)) {\r\n            var side = this.sideNearestPoint(point);\r\n            switch (side){\r\n                case 'right': return Graph.point(this.props.x + this.props.width, point.props.y);\r\n                case 'left': return Graph.point(this.props.x, point.props.y);\r\n                case 'bottom': return Graph.point(point.props.x, this.props.y + this.props.height);\r\n                case 'top': return Graph.point(point.props.x, this.props.y);\r\n            }\r\n        }\r\n        return point.clone().adhereToBox(this);\r\n    };\r\n\r\n    BBox.prototype.toJson = function() {\r\n        return _.clone(this.props);\r\n    };\r\n\r\n    BBox.prototype.toString = function() {\r\n        return 'Graph.lang.BBox';\r\n    };\r\n\r\n    BBox.prototype.toValue = function() {\r\n        var p = this.props;\r\n        return _.format(\r\n            '{0},{1} {2},{3} {4},{5} {6},{7}',\r\n            p.x, p.y,\r\n            p.x + p.width, p.y,\r\n            p.x + p.width, p.y + p.height,\r\n            p.x, p.y + p.height\r\n        );\r\n    };\r\n\r\n    ///////// EXTENSION /////////\r\n\r\n    Graph.isBBox = function(obj) {\r\n        return obj instanceof Graph.lang.BBox;\r\n    };\r\n\r\n    Graph.bbox = function(bounds) {\r\n        return new Graph.lang.BBox(bounds);\r\n    };\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.svg.Path = Graph.extend(Graph.svg.Vector, {\r\n\r\n        constructor: function(d) {\r\n            if ( ! d) {\r\n                d = [['M', 0, 0]];\r\n            }\r\n\r\n            if (_.isArray(d)) {\r\n                d = Graph.path(Graph.util.segments2path(d)).absolute().toValue();\r\n            } else if (d instanceof Graph.lang.Path) {\r\n                d = d.toValue();\r\n            } else {\r\n                d = Graph.path(d).absolute().toValue();\r\n            }\r\n\r\n            this.superclass.prototype.constructor.call(this, 'path', {\r\n                d: d\r\n            });\r\n        },\r\n\r\n        shape: function() {\r\n            return Graph.path(this.attrs.d)\r\n        },\r\n\r\n        segments: function() {\r\n            return this.shape().segments;\r\n        },\r\n\r\n        intersection: function(path, dots) {\r\n            return this.shape().intersection(path.shape(), dots);\r\n        },\r\n\r\n        intersectnum: function(path) {\r\n            return this.shape().intersectnum(path.shape());\r\n        },\r\n\r\n        angle: function() {\r\n            var segments = _.clone(this.segments()),\r\n                max = segments.length - 1;\r\n\r\n            if (segments[max][0] == 'Z') {\r\n                max--;\r\n                segments.pop();\r\n            }\r\n\r\n            if (segments.length === 1) {\r\n                max++;\r\n                segments.push(['L', segments[0][1], segments[0][2]]);\r\n            }\r\n\r\n            var dx = segments[max][1] - segments[max - 1][1],\r\n                dy = segments[max][2] - segments[max - 1][2];\r\n\r\n            return (180 + Math.atan2(-dy, -dx) * 180 / Math.PI + 360) % 360;\r\n        },\r\n\r\n        slice: function(from, to) {\r\n            return this.shape().slice(from, to);\r\n        },\r\n\r\n        pointAt: function(length) {\r\n            return this.shape().pointAt(length);\r\n        },\r\n\r\n        length: function() {\r\n            return this.shape().length();\r\n        },\r\n\r\n        addVertext: function(vertext) {\r\n            var path = this.shape();\r\n\r\n            path.addVertext(vertext);\r\n            this.attr('d', path.command());\r\n\r\n            return this;\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var ms = this.matrix().clone(),\r\n                mr = matrix.rotate(),\r\n                ro = mr.deg,\r\n                rd = mr.rad,\r\n                si = Math.sin(rd),\r\n                co = Math.cos(rd),\r\n                pa = this.shape(),\r\n                ps = pa.segments,\r\n                rx = ps[0][1],\r\n                ry = ps[0][2];\r\n\r\n            if (ro) {\r\n                ms.rotate(-ro, rx, ry);    \r\n            }\r\n            \r\n            rx = ms.x(ps[0][1], ps[0][2]);\r\n            ry = ms.y(ps[0][1], ps[0][2]);\r\n\r\n            ms.scale(sx, sy, cx, cy);\r\n\r\n            _.forEach(ps, function(seg){\r\n                var ox, oy, nx, ny;\r\n                if (seg[0] != 'Z') {\r\n                    ox = seg[seg.length - 2];\r\n                    oy = seg[seg.length - 1];\r\n\r\n                    nx = ms.x(ox, oy);\r\n                    ny = ms.y(ox, oy);\r\n                    \r\n                    seg[seg.length - 2] = nx;\r\n                    seg[seg.length - 1] = ny;\r\n                }\r\n            });\r\n\r\n            this.reset();\r\n            this.attr('d', pa.command());\r\n\r\n            if (ro) {\r\n                this.rotate(ro, rx, ry).commit(true);    \r\n            }\r\n\r\n            return {\r\n                matrix: ms,\r\n                x: rx,\r\n                y: ry\r\n            };\r\n        },\r\n\r\n        moveTo: function(x, y) {\r\n            var path = this.shape();\r\n            \r\n            path.moveTo(x, y);\r\n            this.attr('d', path.command());\r\n\r\n            return this;\r\n        },\r\n\r\n        lineTo: function(x, y, append) {\r\n            var path = this.shape();\r\n            \r\n            path.lineTo(x, y, append);\r\n            this.attr('d', path.command());\r\n\r\n            return this;\r\n        },\r\n\r\n        tail: function() {\r\n            var segments = this.segments();\r\n            if (segments.length) {\r\n                return Graph.point(segments[0][1], segments[0][2]);\r\n            }\r\n            return null;\r\n        },\r\n\r\n        head: function() {\r\n            var segments = this.segments(), maxs;\r\n            if (segments.length) {\r\n                maxs = segments.length - 1;\r\n                return Graph.point(segments[maxs][1], segments[maxs][2]);\r\n            }\r\n            return null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Path';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Matrix = Graph.lang.Matrix = function(a, b, c, d, e, f) {\r\n        this.props = {};\r\n\r\n        this.props.a = _.defaultTo(a, 1);\r\n        this.props.b = _.defaultTo(b, 0);\r\n        this.props.c = _.defaultTo(c, 0);\r\n        this.props.d = _.defaultTo(d, 1);\r\n        this.props.e = _.defaultTo(e, 0);\r\n        this.props.f = _.defaultTo(f, 0);\r\n    };\r\n\r\n    Matrix.options = {\r\n        props: {\r\n            a: 1,\r\n            b: 0,\r\n            c: 0,\r\n            d: 1,\r\n            e: 0,\r\n            f: 0\r\n        }\r\n    };\r\n\r\n    Matrix.extend = Graph.lang.Class.extend;\r\n\r\n    Matrix.prototype.constructor = Matrix;\r\n\r\n    Matrix.prototype.x = function(x, y) {\r\n        return x * this.props.a + y * this.props.c + this.props.e;\r\n    };\r\n\r\n    Matrix.prototype.y = function(x, y) {\r\n        return x * this.props.b + y * this.props.d + this.props.f;\r\n    };\r\n\r\n    Matrix.prototype.get = function(chr) {\r\n        return +this.props[chr].toFixed(4);\r\n    };\r\n\r\n    Matrix.prototype.multiply = function(a, b, c, d, e, f) {\r\n        var\r\n            result = [[], [], []],\r\n            source = [\r\n                [this.props.a, this.props.c, this.props.e],\r\n                [this.props.b, this.props.d, this.props.f],\r\n                [0, 0, 1]\r\n            ],\r\n            matrix = [\r\n                [a, c, e],\r\n                [b, d, f],\r\n                [0, 0, 1]\r\n            ];\r\n\r\n        var x, y, z, tmp;\r\n        \r\n        if (Graph.isMatrix(a)) {\r\n            matrix = [\r\n                [a.props.a, a.props.c, a.props.e],\r\n                [a.props.b, a.props.d, a.props.f],\r\n                [0, 0, 1]\r\n            ];\r\n        }\r\n\r\n        for (x = 0; x < 3; x++) {\r\n            for (y = 0; y < 3; y++) {\r\n                tmp = 0;\r\n                for (z = 0; z < 3; z++) {\r\n                    tmp += source[x][z] * matrix[z][y];\r\n                }\r\n                result[x][y] = tmp;\r\n            }\r\n        }\r\n\r\n        this.props.a = result[0][0];\r\n        this.props.b = result[1][0];\r\n        this.props.c = result[0][1];\r\n        this.props.d = result[1][1];\r\n        this.props.e = result[0][2];\r\n        this.props.f = result[1][2];\r\n\r\n        return this;\r\n    };\r\n\r\n    Matrix.prototype.invert = function(clone) {\r\n        var x = this.props.a * this.props.d - this.props.b * this.props.c;\r\n        var a, b, c, d, e, f;\r\n\r\n        clone = _.defaultTo(clone, false);\r\n\r\n        a =  this.props.d / x;\r\n        b = -this.props.b / x;\r\n        c = -this.props.c / x;\r\n        d =  this.props.a / x;\r\n        e = (this.props.c * this.props.f - this.props.d * this.props.e) / x;\r\n        f = (this.props.b * this.props.e - this.props.a * this.props.f) / x;\r\n\r\n        if (clone) {\r\n            return new Graph.matrix(a, b, c, d, e, f);\r\n        } else {\r\n            this.props.a = a;\r\n            this.props.b = b;\r\n            this.props.c = c;\r\n            this.props.d = d;\r\n            this.props.e = e;\r\n            this.props.f = f;\r\n\r\n            return this;\r\n        }\r\n    };\r\n\r\n    Matrix.prototype.translate = function(x, y) {\r\n        x = _.defaultTo(x, 0);\r\n        y = _.defaultTo(y, 0);\r\n        this.multiply(1, 0, 0, 1, x, y);\r\n\r\n        return this;\r\n    };\r\n\r\n    // http://stackoverflow.com/questions/16359246/how-to-extract-position-rotation-and-scale-from-matrix-svg\r\n    Matrix.prototype.rotate = function(angle, cx, cy) {\r\n        var args = arguments;\r\n        if ( ! args.length) {\r\n            var px = this.delta(0, 1),\r\n                py = this.delta(1, 0);\r\n\r\n            var deg, rad;\r\n\r\n            deg = 180 / Math.PI * Math.atan2(px.y, px.x) - 90;\r\n            rad = Graph.util.rad(deg);\r\n\r\n            return {\r\n                deg: deg,\r\n                rad: rad,\r\n                sin: Math.sin(rad),\r\n                cos: Math.cos(rad)\r\n            };\r\n        }\r\n\r\n        var radian;\r\n\r\n        radian = Graph.util.rad(angle);\r\n\r\n        cx = _.defaultTo(cx, 0);\r\n        cy = _.defaultTo(cy, 0);\r\n        \r\n        var cos = +Math.cos(radian).toFixed(9),\r\n            sin = +Math.sin(radian).toFixed(9);\r\n            \r\n        this.multiply(cos, sin, -sin, cos, cx, cy);\r\n        this.multiply(1, 0, 0, 1, -cx, -cy);\r\n        \r\n        return this;\r\n    };\r\n\r\n    Matrix.prototype.scale = function(sx, sy, cx, cy) {\r\n        if (sx === undefined) {\r\n            var prop = this.props,\r\n                sx = Graph.util.hypo(prop.a, prop.b),\r\n                sy = Graph.util.hypo(prop.c, prop.d);\r\n\r\n            if (this.determinant() < 0) {\r\n                sx = -sx;\r\n            }\r\n\r\n            return {\r\n                x: sx,\r\n                y: sy\r\n            };\r\n        }\r\n\r\n        sy = _.defaultTo(sy, sx);\r\n\r\n        if (cx || cy) {\r\n            cx = _.defaultTo(cx, 0);\r\n            cy = _.defaultTo(cy, 0);\r\n        }\r\n\r\n        (cx || cy) && this.multiply(1, 0, 0, 1, cx, cy);\r\n        this.multiply(sx, 0, 0, sy, 0, 0);\r\n        (cx || cy) && this.multiply(1, 0, 0, 1, -cx, -cy);\r\n\r\n        return this;\r\n    };\r\n\r\n    Matrix.prototype.determinant = function() {\r\n        return this.props.a * this.props.d - this.props.b * this.props.c;\r\n    };\r\n\r\n    Matrix.prototype.delta = function(x, y) {\r\n        return {\r\n            x: x * this.props.a + y * this.props.c + 0,\r\n            y: x * this.props.b + y * this.props.d + 0\r\n        };\r\n    };\r\n\r\n    Matrix.prototype.data = function() {\r\n        var px = this.delta(0, 1),\r\n            py = this.delta(1, 0),\r\n            skewX = 180 / Math.PI * Math.atan2(px.y, px.x) - 90,\r\n            radSkewX = Graph.util.rad(skewX),\r\n            cosSkewX = Math.cos(radSkewX),\r\n            sinSkewX = Math.sin(radSkewX),\r\n            scaleX = Graph.util.hypo(this.props.a, this.props.b),\r\n            scaleY = Graph.util.hypo(this.props.c, this.props.d),\r\n            radian = Graph.util.rad(skewX);\r\n\r\n        if (this.determinant() < 0) {\r\n            scaleX = -scaleX;\r\n        }\r\n\r\n        return {\r\n            x: this.props.e,\r\n            y: this.props.f,\r\n            dx: (this.props.e * cosSkewX + this.props.f *  sinSkewX) / scaleX,\r\n            dy: (this.props.f * cosSkewX + this.props.e * -sinSkewX) / scaleY,\r\n            skewX: -skewX,\r\n            skewY: 180 / Math.PI * Math.atan2(py.y, py.x),\r\n            scaleX: scaleX,\r\n            scaleY: scaleY,\r\n            // rotate: skewX,\r\n            rotate: this.rotate().deg,\r\n            rad: radian,\r\n            sin: Math.sin(radian),\r\n            cos: Math.cos(radian),\r\n            a: this.props.a,\r\n            b: this.props.b,\r\n            c: this.props.c,\r\n            d: this.props.d,\r\n            e: this.props.e,\r\n            f: this.props.f\r\n        };\r\n    };\r\n\r\n    Matrix.prototype.toFilter = function() {\r\n        return \"progid:DXImageTransform.Microsoft.Matrix(\" +\r\n           \"M11=\" + this.get('a') + \", \" +\r\n           \"M12=\" + this.get('c') + \", \" +\r\n           \"M21=\" + this.get('b') + \", \" +\r\n           \"M22=\" + this.get('d') + \", \" +\r\n           \"Dx=\"  + this.get('e') + \", \" +\r\n           \"Dy=\"  + this.get('f') + \", \" +\r\n           \"sizingmethod='auto expand'\"  +\r\n        \")\";\r\n    };\r\n\r\n    Matrix.prototype.toArray = function() {\r\n        return [\r\n            [this.get('a'), this.get('c'), this.get('e')],\r\n            [this.get('b'), this.get('d'), this.get('f')],\r\n            [0, 0, 1]\r\n        ];\r\n    };\r\n\r\n    Matrix.prototype.toValue = function() {\r\n        return _.format(\r\n            'matrix({0},{1},{2},{3},{4},{5})',\r\n            this.get('a'),\r\n            this.get('b'),\r\n            this.get('c'),\r\n            this.get('d'),\r\n            this.get('e'),\r\n            this.get('f')\r\n        );\r\n    };\r\n\r\n    Matrix.prototype.toString = function() {\r\n        return 'Graph.lang.Matrix';\r\n    };\r\n\r\n    Matrix.prototype.clone = function() {\r\n        return new Matrix(\r\n            this.props.a,\r\n            this.props.b,\r\n            this.props.c,\r\n            this.props.d,\r\n            this.props.e,\r\n            this.props.f\r\n        );\r\n    };\r\n\r\n    ///////// EXTENSION /////////\r\n\r\n    Graph.isMatrix = function(obj) {\r\n        return obj instanceof Graph.lang.Matrix;\r\n    };\r\n\r\n    Graph.matrix = function(a, b, c, d, e, f) {\r\n        return new Graph.lang.Matrix(a, b, c, d, e, f);\r\n    };\r\n\r\n}());\r\n","\r\n(function(){\r\n    \r\n    var storage = {},\r\n        context = {};\r\n\r\n    var Registry = function() {\r\n\r\n    };\r\n\r\n    Registry.prototype.constructor = Registry;\r\n\r\n    Registry.prototype.register = function(vector) {\r\n        var id = vector.guid(), found = this.get(id);\r\n        storage[id] = vector;\r\n    };\r\n\r\n    Registry.prototype.unregister = function(vector) {\r\n        var id = vector.guid();\r\n        if (storage[id]) {\r\n            delete storage[id];\r\n        }\r\n\r\n        if (context[id]) {\r\n            delete context[id];\r\n        }\r\n    };\r\n\r\n    Registry.prototype.setContext = function(id, scope) {\r\n        if (storage[id]) {\r\n            context[id] = scope;\r\n        }\r\n    };\r\n\r\n    Registry.prototype.size = function() {\r\n        return _.keys(storage).length;\r\n    };\r\n\r\n    Registry.prototype.toArray = function() {\r\n        var keys = _.keys(storage);\r\n        return _.map(keys, function(k){\r\n            return storage[k];\r\n        });\r\n    };\r\n\r\n    Registry.prototype.get = function(key) {\r\n\r\n        if (_.isUndefined(key)) {\r\n            return this.toArray();\r\n        }\r\n\r\n        if (key instanceof SVGElement) {\r\n            if (key.tagName == 'tspan') {\r\n                // we only interest to text\r\n                key = key.parentNode;\r\n            }\r\n            key = Graph.$(key).data(Graph.string.ID_VECTOR);\r\n        } else if (key instanceof Graph.dom.Element) {\r\n            key = key.data(Graph.string.ID_VECTOR);\r\n        }\r\n        return storage[key];\r\n    };\r\n\r\n    Registry.prototype.collect = function(scope) {\r\n        var vectors = [];\r\n        for (var id in context) {\r\n            if (context[id] == scope && storage[id]) {\r\n                vectors.push(storage[id]);\r\n            }\r\n        }\r\n        return vectors;\r\n    };\r\n\r\n    Registry.prototype.wipe = function(paper) {\r\n        var pid = paper.guid();\r\n\r\n        for (var id in storage) {\r\n            if (storage.hasOwnProperty(id)) {\r\n                if (storage[id].tree.paper == pid) {\r\n                    delete storage[id];\r\n                }\r\n            }\r\n        }\r\n\r\n        if (storage[pid]) {\r\n            delete storage[pid];\r\n        }\r\n    };\r\n\r\n    Registry.prototype.toString = function() {\r\n        return 'Graph.registry.Vector';\r\n    };\r\n    \r\n    Graph.registry.vector = new Registry();\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Shape = Graph.shape.Shape = Graph.extend({\r\n\r\n        props: {\r\n            id: null,\r\n            guid: null,\r\n            mode: null,\r\n            left: 0,\r\n            top: 0,\r\n            width: 0,\r\n            height: 0,\r\n            rotate: 0,\r\n            label: '',\r\n            alias: '',\r\n            fill: 'rgb(255, 255, 255)',\r\n            stroke: 'rgb(0, 0, 0)',\r\n            strokeWidth: 2\r\n        },\r\n\r\n        params: [],\r\n\r\n        components: {\r\n            shape: null,\r\n            block: null,\r\n            label: null,\r\n            child: null\r\n        },\r\n\r\n        layout: {\r\n            suspended: false\r\n        },\r\n\r\n        tree: {\r\n            paper: null,\r\n            parent: null,\r\n            children: null\r\n        },\r\n\r\n        metadata: {\r\n            type: null,\r\n            icon: Graph.icons.SHAPE,\r\n            style: 'graph-shape',\r\n            tools: null,\r\n            params: []\r\n        },\r\n\r\n        cached: {\r\n\r\n        },\r\n\r\n        plugins: {\r\n            manager: null\r\n        },\r\n\r\n        constructor: function(options) {\r\n            var guid;\r\n\r\n            this.data(options || {});\r\n\r\n            guid = 'graph-shape-' + (++Shape.guid);\r\n\r\n            this.props.guid = guid;\r\n            this.tree.children = new Graph.collection.Shape();\r\n            this.plugins.manager = new Graph.plugin.Manager();\r\n\r\n            this.initComponent();\r\n            this.initMetadata();\r\n\r\n            if (this.components.shape) {\r\n                var style = Graph.styles.SHAPE,\r\n                    shape = this.component();\r\n\r\n                if (this.metadata.style) {\r\n                    style += ' ' + this.metadata.style;\r\n                }\r\n\r\n                shape.addClass(style);\r\n                shape.attr('data-shape', guid);\r\n                \r\n                style = null;\r\n            }\r\n\r\n            Graph.registry.shape.register(this);\r\n\r\n            guid = null;\r\n        },\r\n\r\n        data: function(name, value) {\r\n            if (name === undefined && value === undefined) {\r\n                return this.props;\r\n            }\r\n\r\n            var excludes = {\r\n                type: true,\r\n                client_id: true,\r\n                client_parent: true,\r\n                client_pool: true,\r\n                diagram_id: true,\r\n                parent_id: true\r\n            };\r\n\r\n            var maps = {\r\n                stroke_width: 'strokeWidth'\r\n            };\r\n\r\n            var map, key;\r\n\r\n            if (_.isPlainObject(name)) {\r\n                for (key in name) {\r\n                    if ( ! excludes[key]) {\r\n                        map = maps[key] || key;\r\n                        if (key == 'params') {\r\n                            this.params = name[key];\r\n                        } else {\r\n                            this.props[map] = name[key];\r\n                        }\r\n                    }\r\n                }\r\n                return this;\r\n            }\r\n\r\n            if (value === undefined) {\r\n                return this.props[name];\r\n            }\r\n\r\n            if ( ! excludes[name]) {\r\n                map = maps[name] || name;\r\n                if (name == 'params') {\r\n                    this.params = value;\r\n                } else {\r\n                    this.props[map] = value;        \r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        update: function(data) {\r\n            data = data || {};\r\n\r\n            if (data.props) {\r\n                this.data(data.props);\r\n            }\r\n        },\r\n\r\n        redraw: function(props) {\r\n            var key;\r\n            \r\n            props = props || {};\r\n\r\n            this.suspendLayout();\r\n\r\n            for (key in props) {\r\n                if (this[key] !== undefined && _.isFunction(this[key])) {\r\n                    this[key](props[key]);\r\n                }\r\n            }\r\n\r\n            this.resumeLayout();\r\n            this.refresh();\r\n        },\r\n\r\n        is: function(type) {\r\n            return this.metadata.type == type;\r\n        },\r\n\r\n        initMetadata: function() {\r\n            this.metadata.tools = [\r\n                {\r\n                    name: 'config',\r\n                    icon: Graph.icons.CONFIG,\r\n                    title: Graph._('Click to config shape'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onConfigToolClick, this)\r\n                },\r\n                {\r\n                    name: 'link',\r\n                    icon: Graph.icons.LINK,\r\n                    title: Graph._('Click to start shape linking'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onLinkToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtofront',\r\n                    icon: Graph.icons.SEND_TO_FRONT,\r\n                    title: Graph._('Send to front'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onFrontToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtoback',\r\n                    icon: Graph.icons.SEND_TO_BACK,\r\n                    title: Graph._('Send to back'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBackToolClick, this)\r\n                },\r\n                {\r\n                    name: 'trash',\r\n                    icon: Graph.icons.TRASH,\r\n                    title: Graph._('Click to remove shape'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onTrashToolClick, this)\r\n                }\r\n            ];\r\n        },\r\n\r\n        initComponent: function() {\r\n            var shape = (new Graph.svg.Group());\r\n            this.components.shape = shape.guid();\r\n            shape = null;\r\n        },\r\n\r\n        component: function(name) {\r\n            var manager = Graph.registry.vector;\r\n            if (name === undefined) {\r\n                return manager.get(this.components.shape);\r\n            }\r\n            return manager.get(this.components[name]);\r\n        },\r\n\r\n        invalidate: function() {\r\n            for (var key in this.cached) {\r\n                this.cached[key] = null;\r\n            }\r\n        },\r\n\r\n        connectable: function() {\r\n            return this.plugins.manager.get('network');\r\n        },\r\n\r\n        resizable: function() {\r\n            return this.plugins.manager.get('resizer');\r\n        },\r\n\r\n        draggable: function() {\r\n            return this.plugins.manager.get('dragger');\r\n        },\r\n\r\n        snappable: function() {\r\n            return this.plugins.manager.get('snapper');\r\n        },\r\n\r\n        editable: function() {\r\n            return this.plugins.manager.get('editor');  \r\n        },\r\n\r\n        paper: function() {\r\n            return Graph.registry.vector.get(this.tree.paper);\r\n        },\r\n\r\n        parent: function() {\r\n            return Graph.registry.shape.get(this.tree.parent);\r\n        },\r\n\r\n        children: function() {\r\n            return this.tree.children;\r\n        },\r\n\r\n        hasChild: function(child) {\r\n            return this.children().has(child);\r\n        },\r\n\r\n        addChild: function(child, relocate) {\r\n            var children = this.children(),\r\n                placeTarget = this.component('child'),\r\n                guid = this.guid(),\r\n                me = this;\r\n\r\n            relocate = _.defaultTo(relocate, true);\r\n\r\n            if ( ! _.isArray(child)) {\r\n                child = [child];\r\n            }\r\n\r\n            var beforeDestroyHandler = _.bind(this.onChildBeforeDestroy, this);\r\n\r\n            _.forEach(child, function(shape){\r\n                var parent = shape.parent();\r\n\r\n                if (parent && parent.guid() != guid) {\r\n                    parent.removeChild(shape);\r\n                }\r\n\r\n                if ( ! children.has(shape)) {\r\n                    var shapeComponent = shape.component();\r\n\r\n                    if (relocate) {\r\n                        shapeComponent.relocate(placeTarget);    \r\n                    } else {\r\n                        placeTarget.append(shapeComponent);\r\n                    }\r\n                    \r\n                    shape.cached.beforeDestroyHandler = _.bind(me.onChildBeforeDestroy, me);\r\n                    shape.cached.afterDragHandler = _.bind(me.onChildAfterDrag, me);\r\n                    shape.cached.connectHandler = _.bind(me.onChildConnect, me);\r\n\r\n                    shape.on('beforedestroy', shape.cached.beforeDestroyHandler);\r\n                    shape.on('afterdrag', shape.cached.afterDragHandler);\r\n                    shape.on('connect', shape.cached.connectHandler);\r\n\r\n                    children.push(shape);\r\n                    shape.tree.parent = guid;\r\n\r\n                    // update shape props\r\n                    var matrix = shapeComponent.matrix();\r\n\r\n                    shape.data({\r\n                        left: matrix.props.e,\r\n                        top: matrix.props.f\r\n                    });\r\n                }\r\n            });\r\n\r\n            if (relocate) {\r\n                this.autoResize();    \r\n            }\r\n        },\r\n\r\n        removeChild: function(child) {\r\n            var children = this.children();\r\n\r\n            if (children.has(child)) {\r\n                children.pull(child);\r\n                child.tree.parent = null;\r\n            }\r\n        },\r\n\r\n        guid: function() {\r\n            return this.props.guid;\r\n        },\r\n\r\n        matrix: function() {\r\n            return this.component().matrix();\r\n        },\r\n\r\n        bbox: function() {\r\n            return Graph.bbox({\r\n                 x: this.props.left,\r\n                 y: this.props.top,\r\n                x2: this.props.left + this.props.width,\r\n                y2: this.props.top + this.props.height,\r\n                width: this.props.width,\r\n                height: this.props.height\r\n            });\r\n        },\r\n\r\n        render: function(paper) {\r\n            var guid = this.guid(),\r\n                paperGuid = paper.guid();\r\n\r\n            var component = this.component();\r\n            component && component.render(paper);\r\n            \r\n            // save\r\n            this.tree.paper = paperGuid;\r\n            Graph.registry.shape.setContext(guid, paperGuid);\r\n        },\r\n\r\n        select: function(single) {\r\n            var blockComponent = this.component('block'),\r\n                paper = this.paper();\r\n\r\n            single = _.defaultTo(single, false);\r\n\r\n            if (single && paper) {\r\n                paper.collector().clearCollection();\r\n            }\r\n\r\n            if (blockComponent) {\r\n                blockComponent.select();\r\n            }\r\n        },\r\n\r\n        deselect: function() {\r\n            var blockComponent = this.component('block');\r\n            if (blockComponent) {\r\n                blockComponent.deselect();\r\n            }\r\n        },\r\n\r\n        remove: function() {\r\n            // just fire block removal\r\n            this.component('block').remove();\r\n        },\r\n\r\n        refresh: _.debounce(function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n\r\n            var label = this.component('label'),\r\n                block = this.component('block'),\r\n                bound = block.bbox().toJson();\r\n\r\n            label.attr({\r\n                x: bound.x + bound.width  / 2,\r\n                y: bound.x + bound.height / 2\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n        }, 1),\r\n\r\n        autoResize: function() {\r\n\r\n        },\r\n\r\n        center: function() {\r\n            var bbox = this.component().bboxView().toJson();\r\n            return {\r\n                x: (bbox.x + bbox.x2) / 2,\r\n                y: (bbox.y + bbox.y2) / 2\r\n            };\r\n        },\r\n\r\n        translate: function(dx, dy) {\r\n            var component = this.component();\r\n            component.translate(dx, dy).commit();\r\n\r\n            // update props\r\n            var matrix = component.matrix(),\r\n                left = matrix.props.e,\r\n                top = matrix.props.f;\r\n\r\n            this.data({\r\n                left: left,\r\n                top: top\r\n            });\r\n\r\n            var childComponent = this.component('child');\r\n\r\n            if (childComponent) {\r\n                childComponent.dirty(true);\r\n            }\r\n\r\n        },\r\n\r\n        cascade: function(handler) {\r\n            cascade(this, handler);\r\n        },\r\n\r\n        sendToBack: function() {\r\n            var parent = this.parent(),\r\n                container = parent \r\n                    ? parent.component('child').elem\r\n                    : this.paper().viewport().elem;\r\n\r\n            container && container.prepend(this.component().elem);\r\n        },\r\n\r\n        sendToFront: function() {\r\n            var parent = this.parent(),\r\n                container = parent \r\n                    ? parent.component('child').elem\r\n                    : this.paper().viewport().elem;\r\n\r\n            container && container.append(this.component().elem);\r\n        },\r\n\r\n        suspendLayout: function() {\r\n            this.layout.suspended = true;\r\n        },\r\n\r\n        resumeLayout: function() {\r\n            this.layout.suspended = false;\r\n        },\r\n\r\n        /**\r\n         *  Use this method only for updating `width`, `height`, `left`, `top`\r\n         *  otherwise use data()\r\n         */\r\n        attr: function(name, value) {\r\n            var me = this;\r\n\r\n            if (_.isPlainObject(name)) {\r\n                _.forOwn(name, function(v, k){\r\n                    me.props[k] = v;\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (value === undefined) {\r\n                return this.props[name];\r\n            }\r\n\r\n            this.props[name] = value;\r\n            return this;\r\n        },\r\n\r\n        height: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.height;\r\n            }\r\n\r\n            var block = this.component('block'),\r\n                box = block.bbox().toJson(),\r\n                sx = 1,\r\n                sy = value / this.props.height,\r\n                cx = (box.x + box.x2) / 2,\r\n                cy = box.y,\r\n                dx = 0,\r\n                dy = 0;\r\n\r\n            var resize = block.resize(sx, sy, cx, cy, dx, dy);\r\n            block.fire('afterresize', resize);\r\n            \r\n            this.props.height = value;\r\n            return this;\r\n        },\r\n\r\n        width: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.width;\r\n            }\r\n\r\n            var block = this.component('block'),\r\n                box = block.bbox().toJson(),\r\n                sx = value / this.props.width,\r\n                sy = 1,\r\n                cx = box.x,\r\n                cy = (box.y + box.y2) / 2,\r\n                dx = 0,\r\n                dy = 0;\r\n\r\n            var resize = block.resize(sx, sy, cx, cy, dx, dy);\r\n            block.fire('afterresize', resize);\r\n\r\n            this.props.width = value;\r\n            return this;\r\n        },\r\n\r\n        left: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.left;\r\n            }\r\n\r\n            var shape = this.component(),\r\n                matrix = shape.matrix(),\r\n                dx = value - matrix.props.e,\r\n                dy = 0;\r\n\r\n            shape.translate(dx, dy).commit();\r\n            this.props.left = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        top: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.top;\r\n            }\r\n\r\n            var shape = this.component(),\r\n                matrix = shape.matrix(),\r\n                dx = 0,\r\n                dy = value - matrix.props.f;\r\n\r\n            shape.translate(dx, dy).commit();\r\n            this.props.top = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        rotate: function(value) {\r\n            var block = this.component('block');\r\n            if (block && block.isRotatable()) {\r\n                var center = block.bbox().toJson();\r\n                block.rotate(value, center.x, center.y).commit();\r\n            }\r\n        },\r\n\r\n        label: function(label) {\r\n            if (label === undefined) {\r\n                return this.props.label;\r\n            }\r\n\r\n            var blockComponent = this.component('block'),\r\n                labelComponent = this.component('label');\r\n\r\n            labelComponent.props.text = label;\r\n            blockComponent.data('text', label);\r\n\r\n            this.props.label = label;\r\n            this.refresh();\r\n        },\r\n\r\n        fill: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.fill;\r\n            }\r\n            this.props.fill = value;\r\n            this.component('block').elem.css('fill', value);\r\n        },\r\n\r\n        stroke: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.stroke;\r\n            }\r\n            \r\n            this.props.stroke = value;\r\n            this.component('block').elem.css('stroke', value);\r\n        },\r\n\r\n        strokeWidth: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.strokeWidth;\r\n            }\r\n\r\n            this.props.strokeWidth = value;\r\n            this.component('block').elem.css('stroke-width', value);\r\n        },\r\n\r\n        connect: function(target, start, end, options){\r\n            var sourceNetwork = this.connectable().plugin(),\r\n                targetNetwork = target.connectable().plugin();\r\n\r\n            if (sourceNetwork && targetNetwork) {\r\n                return sourceNetwork.connect(targetNetwork, start, end, options);\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        disconnect: function(target, link) {\r\n            var sourceNetwork = this.connectable().plugin(),\r\n                targetNetwork = target.connectable().plugin();\r\n\r\n            if (sourceNetwork && targetNetwork) {\r\n                return sourceNetwork.disconnect(targetNetwork, link);\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        toJson: function() {\r\n            var blockComponent = this.component('block'),\r\n                paper = this.paper();\r\n\r\n            var shape = {\r\n                metadata: {\r\n\r\n                },\r\n                props: {\r\n                    id: this.props.id,\r\n                    type: this.toString(),\r\n                    mode: this.props.mode,\r\n                    guid: this.props.guid,\r\n                    pool: null,\r\n                    parent: this.tree.parent,\r\n                    label: this.props.label,\r\n                    left: this.props.left,\r\n                    top: this.props.top,\r\n                    width: this.props.width,\r\n                    height: this.props.height,\r\n                    rotate: this.props.rotate,\r\n                    fill: this.props.fill,\r\n                    strokeWidth: this.props.strokeWidth,\r\n                    stroke: this.props.stroke\r\n                },\r\n                params: this.params,\r\n                links: [\r\n                    \r\n                ]\r\n            };\r\n\r\n            var network = this.connectable().plugin();\r\n\r\n            if (network) {\r\n                var connections = network.connections();\r\n\r\n                _.forEach(connections, function(conn){\r\n                    var linkData = conn.link.toJson();\r\n\r\n                    shape.links.push({\r\n                        guid: conn.guid,\r\n                        mode: conn.type,\r\n                        pair: conn.type == 'outgoing' ? linkData.props.target : linkData.props.source\r\n                    });\r\n                });\r\n            }\r\n\r\n            return shape;\r\n        },\r\n\r\n        ///////// PRIVATE OBSERVERS /////////\r\n\r\n        onLabelEdit: function(e) {\r\n            this.label(e.text);\r\n        },\r\n\r\n        onBeforeDrag: function(e) {\r\n            this.fire(e);\r\n            this.paper().diagram().capture();\r\n        },\r\n\r\n        onAfterDrag: function(e) {\r\n            var blockComponent = this.component('block'),\r\n                shapeComponent = this.component('shape'),\r\n                childComponent = this.component('child'),\r\n                blockMatrix = blockComponent.matrix();\r\n\r\n            var shapeMatrix;\r\n\r\n            blockComponent.reset();\r\n\r\n            shapeComponent.matrix().multiply(blockMatrix);\r\n            shapeComponent.attr('transform', shapeComponent.matrix().toValue());\r\n            shapeComponent.dirty(true);\r\n\r\n            if (childComponent) {\r\n                childComponent.dirty(true);\r\n            }\r\n\r\n            // update props\r\n            shapeMatrix = shapeComponent.matrix();\r\n\r\n            this.data({\r\n                left: shapeMatrix.props.e,\r\n                top: shapeMatrix.props.f\r\n            });\r\n\r\n            // forward\r\n            this.fire(e);\r\n        },\r\n\r\n        onAfterRotate: function(e) {\r\n            var shapeComponent = this.component('shape'),\r\n                blockComponent = this.component('block'),\r\n                childComponent = this.component('child');\r\n\r\n            var shapeMatrix = shapeComponent.matrix();\r\n\r\n            shapeMatrix.multiply(blockComponent.matrix());\r\n            shapeComponent.attr('transform', shapeMatrix.toValue());\r\n            shapeComponent.dirty(true);\r\n\r\n            if (childComponent) {\r\n                childComponent.dirty(true);\r\n            }\r\n\r\n            blockComponent.reset();\r\n            blockComponent.rotatable().redraw();\r\n\r\n            if (blockComponent.isResizable() && blockComponent.resizable().props.suspended === false) {\r\n                blockComponent.resizable().redraw();    \r\n            }\r\n\r\n            var shapeRotate = shapeMatrix.rotate();\r\n            this.props.rotate = shapeRotate.deg;\r\n        },\r\n\r\n        onSelect: function(e) {\r\n            this.component('shape').addClass('shape-selected');\r\n            if (e.initial) {\r\n                Graph.topic.publish('shape:select', {shape: this});    \r\n            }\r\n        },\r\n\r\n        onDeselect: function(e) {\r\n            this.component('shape').removeClass('shape-selected');\r\n            if (e.initial) {\r\n                Graph.topic.publish('shape:deselect', {shape: this});\r\n            }\r\n        },\r\n\r\n        onConnect: function(e) {\r\n            var link = e.link,\r\n                sourceVector = link.router.source(),\r\n                targetVector = link.router.target();\r\n\r\n            if (sourceVector && targetVector) {\r\n                var sourceShape = Graph.registry.shape.get(sourceVector),\r\n                    targetShape = Graph.registry.shape.get(targetVector);\r\n\r\n                if (sourceShape && targetShape) {\r\n                    this.fire('connect', {\r\n                        link: link,\r\n                        source: sourceShape,\r\n                        target: targetShape\r\n                    });\r\n                }\r\n            }\r\n        },\r\n\r\n        onAfterResize: function() {\r\n            this.refresh();\r\n        },\r\n\r\n        onBeforeDestroy: function() {\r\n            this.fire('beforedestroy', {shape: this});\r\n        },\r\n\r\n        onAfterDestroy: function() {\r\n            // remove label\r\n            this.component('label').remove();\r\n\r\n            // remove shape\r\n            this.component('shape').remove();\r\n\r\n            for (var name in this.components) {\r\n                this.components[name] = null;\r\n            }\r\n\r\n            this.fire('afterdestroy', {shape: this});\r\n            Graph.registry.shape.unregister(this);\r\n        },\r\n\r\n        onChildConnect: function(e) {\r\n\r\n        },\r\n\r\n        onChildAfterDrag: function(e) {\r\n            var childComponent;\r\n\r\n            if (e.batch) {\r\n                if (e.master) {\r\n                    childComponent = this.component('child');\r\n                    if (childComponent) {\r\n                        childComponent.dirty(true);\r\n                    }\r\n                }\r\n            } else {\r\n                childComponent = this.component('child');\r\n                if (childComponent) {\r\n                    childComponent.dirty(true);\r\n                }\r\n            }\r\n        },\r\n\r\n        onChildBeforeDestroy: function(e) {\r\n            var shape = e.shape;\r\n\r\n            this.children().pull(shape);\r\n\r\n            shape.off('beforedestroy', shape.cached.beforeDestroyHandler);\r\n            shape.off('afterdrag', shape.cached.afterDragHandler);\r\n            shape.off('connect', shape.cached.connectHandler);\r\n\r\n            shape.cached.beforeDestroyHandler = null;\r\n            shape.cached.afterDragHandler = null;\r\n            shape.cached.connectHandler = null;\r\n\r\n            var childComponent = shape.component('child');\r\n\r\n            if (childComponent) {\r\n                childComponent.dirty(true);\r\n            }\r\n        },\r\n\r\n        onConfigToolClick: function(e) {\r\n\r\n        },\r\n\r\n        onTrashToolClick: function(e) {\r\n            this.paper().diagram().capture();\r\n            this.remove();\r\n        },\r\n\r\n        onLinkToolClick: function(e) {\r\n            var paper = this.paper();\r\n\r\n            if (paper) {\r\n                var layout = paper.layout(),\r\n                    linker = paper.plugins.linker,\r\n                    coord  = layout.pointerLocation(e);\r\n\r\n                paper.tool().activate('linker');\r\n                linker.start(this.connectable().component(), coord);\r\n            }\r\n        },\r\n\r\n        onFrontToolClick: function(e) {\r\n            this.sendToFront();\r\n        },\r\n\r\n        onBackToolClick: function(e) {\r\n            this.sendToBack();\r\n        }\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n    Shape.guid = 0;\r\n\r\n    ///////// EXTENSION /////////\r\n\r\n    Graph.isShape = function(obj) {\r\n        return obj instanceof Graph.shape.Shape;\r\n    };\r\n\r\n    ///////// HELPERS /////////\r\n\r\n    function cascade(shape, handler) {\r\n        var child = shape.children().toArray();\r\n        var result;\r\n\r\n        result = handler.call(shape, shape);\r\n        result = _.defaultTo(result, true);\r\n\r\n        if (result && child.length) {\r\n            _.forEach(child, function(curr){\r\n                cascade(curr, handler);\r\n            });\r\n        }\r\n    }\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var Tree = Graph.collection.Tree = function(nodes) {\r\n        var me = this;\r\n\r\n        me.nodes = nodes;\r\n        \r\n        me.key = function(node){ return node; };\r\n\r\n        me.bisect = _.bisector(function(node){ \r\n            return me.key(node); \r\n        }).left;\r\n    };\r\n\r\n    Tree.prototype.get = function(index) {\r\n        return this.nodes[index];\r\n    };\r\n\r\n    Tree.prototype.size = function() {\r\n        return this.nodes.length;\r\n    };\r\n\r\n    Tree.prototype.insert = function(node) {\r\n        var index = this.index(node),\r\n            value = this.key(node);\r\n\r\n        if (this.nodes[index] && value == this.key(this.nodes[index])) {\r\n            return;\r\n        }\r\n\r\n        this.nodes.splice(index, 0, node);\r\n\r\n        return index;\r\n    };\r\n\r\n    Tree.prototype.remove = function(node) {\r\n        var index = this.index(node);\r\n        this.nodes.splice(index, 1);\r\n        \r\n        return index;\r\n    };\r\n\r\n    Tree.prototype.keygen = function(keygen) {\r\n        this.key = keygen;\r\n        return this;\r\n    };\r\n\r\n    Tree.prototype.index = function(node) {\r\n        return this.bisect(this.nodes, this.key(node));\r\n    };\r\n\r\n    Tree.prototype.order = function() {\r\n        this.nodes.sort(_.ascendingKey(this.key));\r\n        return this;\r\n    };\r\n    \r\n    Tree.prototype.root = function() {\r\n        return this.nodes[0];\r\n    };\r\n    \r\n    Tree.prototype.cascade = function(node, iteratee) {\r\n        var index = this.index(node),\r\n            nodes = this.nodes,\r\n            count = this.nodes.length;\r\n        \r\n        var start = 0;\r\n        \r\n        for (var n = index; n < count; n++) {\r\n            iteratee(nodes[n], start);\r\n            start++;\r\n        }\r\n    };\r\n\r\n    Tree.prototype.bubble = function(node, iteratee) {\r\n        var index = this.index(node),\r\n            nodes = this.nodes;\r\n\r\n        var start = 0;\r\n\r\n        for (var n = index; n >= 0; n--) {\r\n            iteratee(nodes[n], start);\r\n            start++;\r\n        }\r\n    };\r\n\r\n    Tree.prototype.toArray = function() {\r\n        return this.nodes.slice();\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Link = Graph.link.Link = Graph.extend({\r\n\r\n        props: {\r\n            id: null,\r\n            guid: null,\r\n            type: 'normal',\r\n            rendered: false,\r\n            selected: false,\r\n            label: '',\r\n            labelDistance: .5,\r\n            source: null,\r\n            target: null,\r\n            connected: false,\r\n            removed: false,\r\n            command: null,\r\n            stroke: '#000',\r\n            convex: 1,\r\n            smooth: 0,\r\n            smoothness: 6\r\n        },\r\n\r\n        params: [],\r\n\r\n        components: {\r\n            block: null,\r\n            coat: null,\r\n            path: null,\r\n            label: null,\r\n            editor: null\r\n        },\r\n\r\n        cached: {\r\n            bendpoints: null,\r\n            controls: null,\r\n            convex: null\r\n        },\r\n\r\n        handlers: {\r\n            source: null,\r\n            target: null\r\n        },\r\n\r\n        router: null,\r\n\r\n        metadata: {\r\n            icon: Graph.icons.SHAPE_LINK\r\n        },\r\n\r\n        constructor: function(router, options) {\r\n            var guid;\r\n            this.data(options || {});\r\n\r\n            guid = 'graph-link-' + (++Link.guid);\r\n\r\n            this.props.guid = guid;\r\n            this.router = router;\r\n\r\n            this.initComponent();\r\n            this.initMetadata();\r\n\r\n            this.bindResource('source', router.source());\r\n            this.bindResource('target', router.target());\r\n\r\n            this.router.on('route', _.bind(this.onRouterRoute, this));\r\n            this.router.on('reroute', _.bind(this.onRouterReroute, this));\r\n\r\n            Graph.registry.link.register(this);\r\n        },\r\n\r\n        data: function(name, value) {\r\n            if (name === undefined && value === undefined) {\r\n                return this.props;\r\n            }\r\n\r\n            var excludes = {\r\n                type: true,\r\n                router_type: true,\r\n                client_id: true,\r\n                client_source: true,\r\n                client_target: true,\r\n                diagram_id: true,\r\n                source_id: true,\r\n                target_id: true\r\n            };\r\n\r\n            var maps = {\r\n                label_distance: 'labelDistance'\r\n            };\r\n\r\n            var key, map;\r\n\r\n            if (_.isPlainObject(name)) {\r\n                for (var key in name) {\r\n                    if ( ! excludes[key]) { \r\n                        map = maps[key] || key;\r\n                        if (key == 'params') {\r\n                            this.params = name[key];\r\n                        } else {\r\n                            this.props[map] = name[key];        \r\n                        }\r\n                    }\r\n                }\r\n                return this;\r\n            }\r\n\r\n            if (value === undefined) {\r\n                return this.props[name];\r\n            }\r\n\r\n            if ( ! excludes[name]) {\r\n                map = maps[name] || name;\r\n                if (name == 'params') {\r\n                    this.params = value;\r\n                } else {\r\n                    this.props[map] = value;        \r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components;\r\n            var block, coat, path, editor, label;\r\n\r\n            block = (new Graph.svg.Group())\r\n                .addClass('graph-link')\r\n                .selectable(false);\r\n\r\n            block.elem.data(Graph.string.ID_LINK, this.props.guid);\r\n            block.addClass('link-' + this.props.type);\r\n\r\n            coat = (new Graph.svg.Path())\r\n                .addClass('graph-link-coat')\r\n                .render(block);\r\n\r\n            coat.data('text', this.props.label);\r\n            coat.elem.data(Graph.string.ID_LINK, this.props.guid);\r\n\r\n            coat.draggable({\r\n                ghost: true,\r\n                manual: true,\r\n                batchSync: false\r\n            });\r\n\r\n            coat.editable({\r\n                width: 150,\r\n                height: 80,\r\n                offset: 'pointer'\r\n            });\r\n\r\n            coat.on('pointerdown.link', _.bind(this.onCoatClick, this));\r\n            coat.on('select.link', _.bind(this.onCoatSelect, this));\r\n            coat.on('deselect.link', _.bind(this.onCoatDeselect, this));\r\n            coat.on('beforedrag.link', _.bind(this.onCoatBeforeDrag, this));\r\n            coat.on('afterdrag.link', _.bind(this.onCoatAfterDrag, this));\r\n            coat.on('edit.link', _.bind(this.onCoatEdit, this));\r\n            coat.on('beforeedit.link', _.bind(this.onCoatBeforeEdit, this));\r\n            coat.on('afterdestroy.link', _.bind(this.onCoatAfterDestroy, this));\r\n\r\n            path = (new Graph.svg.Path())\r\n                .addClass('graph-link-path')\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .attr('marker-end', 'url(#marker-link-end)')\r\n                .attr('stroke', this.props.stroke || '#000000')\r\n                .render(block);\r\n\r\n            if (this.props.type == 'message') {\r\n                path.attr('marker-start', 'url(#marker-link-start-circle)');\r\n            }\r\n\r\n            path.elem.data(Graph.string.ID_LINK, this.props.guid);\r\n\r\n            label = (new Graph.svg.Text(0, 0, ''))\r\n                .addClass('graph-link-label')\r\n                .selectable(false)\r\n                .render(block);\r\n\r\n            label.draggable({ghost: true});\r\n\r\n            label.on('render.link', _.bind(this.onLabelRender, this));\r\n            label.on('afterdrag.link', _.bind(this.onLabelAfterDrag, this));\r\n\r\n            // enable label doubletap\r\n            var labelVendor = label.interactable().vendor();\r\n            labelVendor.on('doubletap', _.bind(this.onLabelDoubletap, this));\r\n\r\n            editor = (new Graph.svg.Group())\r\n                .selectable(false)\r\n                .render(block);\r\n\r\n            comp.block = block.guid();\r\n            comp.coat = coat.guid();\r\n            comp.path = path.guid();\r\n            comp.label = label.guid();\r\n            comp.editor = editor.guid();\r\n        },\r\n\r\n        initMetadata: function() {\r\n            this.metadata.tools = [\r\n                {\r\n                    name: 'config',\r\n                    icon: Graph.icons.CONFIG,\r\n                    title: Graph._('Click to config link'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onConfigToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtofront',\r\n                    icon: Graph.icons.SEND_TO_FRONT,\r\n                    title: Graph._('Send to front'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onFrontToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtoback',\r\n                    icon: Graph.icons.SEND_TO_BACK,\r\n                    title: Graph._('Send to back'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBackToolClick, this)\r\n                },\r\n                {\r\n                    name: 'trash',\r\n                    icon: Graph.icons.TRASH,\r\n                    title: Graph._('Click to remove link'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onTrashToolClick, this)\r\n                }\r\n            ];\r\n        },\r\n\r\n        unbindResource: function(type) {\r\n            var existing = this.props[type],\r\n                handlers = this.handlers[type];\r\n\r\n            if (existing) {\r\n                var vector = Graph.registry.vector.get(existing);\r\n                if (vector) {\r\n                    if (handlers) {\r\n                        var name, ns;\r\n                        for (name in handlers) {\r\n                            ns = name + '.link';\r\n                            vector.off(ns, handlers[name]);\r\n                            ns = null;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            handlers = null;\r\n\r\n            return this;\r\n        },\r\n\r\n        bindResource: function(type, resource) {\r\n            var router = this.router,\r\n                handlers = this.handlers[type];\r\n\r\n            this.unbindResource(type, resource);\r\n\r\n            handlers = {};\r\n\r\n            handlers.afterresize = _.bind(getHandler(this, type, 'AfterResize'), this);\r\n            handlers.select = _.bind(getHandler(this, type, 'Select'), this);\r\n            handlers.afterrotate = _.bind(getHandler(this, type, 'AfterRotate'), this);\r\n            handlers.beforedrag = _.bind(getHandler(this, type, 'BeforeDrag'), this, _, resource);\r\n            handlers.drag = _.bind(getHandler(this, type, 'Drag'), this);\r\n            handlers.afterdrag = _.bind(getHandler(this, type, 'AfterDrag'), this);\r\n            handlers.beforedestroy = _.bind(getHandler(this, type, 'BeforeDestroy'), this);\r\n            \r\n            this.handlers[type] = handlers;\r\n            this.props[type] = resource.guid();\r\n\r\n            resource.on('afterresize.link', handlers.afterresize);\r\n            resource.on('afterrotate.link', handlers.afterrotate);\r\n            resource.on('beforedestroy.link', handlers.beforedestroy);\r\n            resource.on('select.link', handlers.select);\r\n\r\n            // VERY EXPENSIVE!!!\r\n            if (resource.isDraggable()) {\r\n                resource.on('beforedrag.link', handlers.beforedrag);\r\n                if ( ! resource.draggable().ghost()) {\r\n                    resource.on('drag.link', handlers.drag);\r\n                } else {\r\n                    resource.on('afterdrag.link', handlers.afterdrag);\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        bindSource: function(source) {\r\n            return this.bindResource('source', source);\r\n        },\r\n\r\n        bindTarget: function(target) {\r\n            return this.bindResource('target', target);\r\n        },\r\n\r\n        unbindSource: function(source) {\r\n            return this.unbindResource('source');\r\n        },\r\n\r\n        unbindTarget: function(target) {\r\n            return this.unbindResource('target');\r\n        },\r\n\r\n        component: function(name) {\r\n            if (name === undefined) {\r\n                return Graph.registry.vector.get(this.components.block);\r\n            }\r\n            return Graph.registry.vector.get(this.components[name]);\r\n        },\r\n\r\n        invalidate: function(cache) {\r\n            if (cache !== undefined) {\r\n                this.cached[cache] = null;\r\n            } else {\r\n                this.cached.bendpoints = null;\r\n            }\r\n        },\r\n\r\n        render: function(container) {\r\n            var paper;\r\n\r\n            this.component().render(container);\r\n            paper = container.paper();\r\n\r\n            if (paper) {\r\n                Graph.registry.link.setContext(this.guid(), paper.guid());\r\n            }\r\n        },\r\n\r\n        id: function() {\r\n            return this.props.id;\r\n        },\r\n\r\n        guid: function() {\r\n            return this.props.guid;\r\n        },\r\n\r\n        type: function(type) {\r\n            if (type === undefined) {\r\n                return this.props.type;\r\n            }\r\n\r\n            this.props.type = type;\r\n\r\n            var component = this.component();\r\n\r\n            if (type == 'message') {\r\n                this.component('path').attr('marker-start', 'url(#marker-link-start-circle)');\r\n            } else {\r\n                this.component('path').attr('marker-start', '');\r\n            }\r\n\r\n            component.removeClass('link-normal link-message');\r\n            component.addClass('link-' + type);\r\n        },\r\n\r\n        connect: function(start, end) {\r\n            // already connected ?\r\n            if (this.props.connected) {\r\n                return;\r\n            }\r\n\r\n            this.router.route(start, end);\r\n            this.props.connected = true;\r\n        },\r\n\r\n        connectByCommand: function(command) {\r\n            if (this.props.connected) {\r\n                return;\r\n            }\r\n\r\n            this.router.execute(command);\r\n            this.props.connected = true;\r\n        },\r\n\r\n        disconnect: function(reload) {\r\n            // already disconnected ?\r\n            if ( ! this.props.connected) {\r\n                return;\r\n            }\r\n\r\n            reload = _.defaultTo(reload, true);\r\n\r\n            this.props.connected = false;\r\n\r\n            if (reload) {\r\n                this.router.reset();\r\n                this.reload(this.router.command());    \r\n            }\r\n        },\r\n\r\n        redraw: function(props) {\r\n\r\n        },\r\n\r\n        reload: function(command, silent) {\r\n            silent = _.defaultTo(silent, false);\r\n\r\n            command = command || '';\r\n\r\n            this.component('coat').attr('d', command).dirty(true);\r\n            this.component('path').attr('d', command);\r\n            this.invalidate();\r\n\r\n            if ( ! silent) {\r\n                this.refresh();\r\n                this.fire('change');\r\n                Graph.topic.publish('link:change');\r\n            }\r\n        },\r\n\r\n        reloadConvex: function(convex) {\r\n            this.cached.convex = convex;\r\n        },\r\n\r\n        removeConvex: function() {\r\n            this.cached.convex = null;\r\n        },\r\n\r\n        reset: function(silent) {\r\n            var command = this.router.command();\r\n            this.reload(command, silent);\r\n        },\r\n\r\n        refresh: function() {\r\n\r\n            // TODO: update label position\r\n            if (this.props.label) {\r\n                var label = this.component('label');\r\n\r\n                if (label.props.rendered) {\r\n                    var path = this.router.path();\r\n\r\n                    if (path.segments.length) {\r\n                        var bound = label.bbox().toJson(),\r\n                            distance = this.props.labelDistance || .5,\r\n                            scale = this.router.layout().scale(),\r\n                            path = this.router.path(),\r\n                            dots = path.pointAt(distance * path.length(), true),\r\n                            align = Graph.util.pointAlign(dots.start, dots.end, 10);\r\n\r\n                        if (align == 'h') {\r\n                            dots.x += (bound.width / 2 + (10 / scale.x));\r\n                        } else {\r\n                            dots.y -= (bound.height - (5 / scale.y));\r\n                        }\r\n\r\n                        label.attr({\r\n                            x: dots.x,\r\n                            y: dots.y\r\n                        });\r\n\r\n                        label.arrange();\r\n\r\n                        path = null;\r\n                        dots = null;\r\n\r\n                        label.dirty(true);\r\n                    } else {\r\n                        label.hide();\r\n                    }\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        label: function(text) {\r\n            var path, distance, point, align;\r\n\r\n            if (text === undefined) {\r\n                return this.props.label;\r\n            }\r\n\r\n            this.props.label = text;\r\n            \r\n            var componentLabel = this.component('label'),\r\n                componentCoat = this.component('coat');\r\n\r\n            componentLabel.write(text);\r\n            componentLabel.arrange();\r\n\r\n            componentCoat.data('text', text);\r\n            \r\n            if (componentLabel.props.rendered) {\r\n                this.refresh();\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        select: function(single) {\r\n            var paper = this.router.source().paper();\r\n            single = _.defaultTo(single, false);\r\n            if (single && paper) {\r\n                paper.collector().clearCollection();\r\n            }\r\n\r\n            this.component('coat').select();\r\n        },\r\n\r\n        deselect: function() {\r\n            this.component('coat').deselect();\r\n        },\r\n\r\n        renderControl: function() {\r\n            // TODO: render bends control\r\n        },\r\n\r\n        resumeControl: function() {\r\n            var me = this, editor = me.component('editor');\r\n\r\n            if ( ! me.cached.bendpoints) {\r\n                me.cached.bendpoints = me.router.bendpoints();\r\n                me.renderControl();\r\n            }\r\n\r\n            editor.elem.appendTo(this.component('block').elem);\r\n        },\r\n\r\n        suspendControl: function() {\r\n            this.component('editor').elem.detach();\r\n        },\r\n\r\n        sendToFront: function() {\r\n            var container = this.component().parent();\r\n            this.component().elem.appendTo(container.elem);\r\n        },\r\n\r\n        relocate: function(dx, dy) {\r\n            this.router.relocate(dx, dy);\r\n            this.reload(this.router.command());\r\n        },\r\n\r\n        relocateHead: function(dx, dy) {\r\n            var port = this.router.head();\r\n            if (port) {\r\n                port.x += dx;\r\n                port.y += dy;\r\n                this.router.repair(this.router.target(), port);\r\n            }\r\n        },\r\n\r\n        relocateTail: function(dx, dy) {\r\n            var port = this.router.tail();\r\n            if (port) {\r\n                port.x += dx;\r\n                port.y += dy;\r\n                this.router.repair(this.router.source(), port);\r\n            }\r\n        },\r\n\r\n        remove: function() {\r\n            var me = this;\r\n            var prop;\r\n\r\n            if (this.props.removed) {\r\n                return;\r\n            }\r\n\r\n            // flag\r\n            this.props.removed = true;\r\n\r\n            // disconnect first\r\n            this.disconnect(false);\r\n            \r\n            // unbind resource\r\n            this.unbindSource();\r\n            this.unbindTarget();\r\n\r\n            this.fire('beforedestroy', {link: this});\r\n\r\n            // remove label\r\n            me.component('label').remove();\r\n\r\n            // remove vertexs\r\n            if (me.cached.controls) {\r\n                _.forEach(me.cached.controls, function(id){\r\n                    var c = Graph.registry.vector.get(id);\r\n                    c && c.remove();\r\n                });\r\n                me.cached.controls = null;\r\n            }\r\n\r\n            // remove editor\r\n            me.component('editor').remove();\r\n\r\n            // remove path\r\n            me.component('path').remove();\r\n\r\n            // remove block\r\n            me.component('block').remove();\r\n\r\n            for (prop in me.components) {\r\n                me.components[prop] = null;\r\n            }\r\n\r\n            // clear cache\r\n            for (prop in me.cached) {\r\n                me.cached[prop] = null;\r\n            }\r\n\r\n            me.router.destroy();\r\n            me.router = null;\r\n\r\n            me.fire('afterdestroy');\r\n\r\n            // unregister\r\n            Graph.registry.link.unregister(me);\r\n\r\n            // publish\r\n            Graph.topic.publish('link:afterdestroy');\r\n        },\r\n        isSelected: function() {\r\n            return this.props.selected;\r\n        },\r\n        isConnected: function() {\r\n            return this.props.connected;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.link.Link';\r\n        },\r\n\r\n        toJson: function() {\r\n            var source = this.router.source(),\r\n                target = this.router.target();\r\n\r\n            var sourceShape = Graph.registry.shape.get(source),\r\n                targetShape = Graph.registry.shape.get(target);\r\n\r\n            var link = {\r\n                metadata: {\r\n\r\n                },\r\n                props: {\r\n                    id: this.props.id,\r\n                    guid: this.guid(),\r\n                    type: this.toString(),\r\n                    routerType: this.router.type(),\r\n                    command: this.router.command(),\r\n                    label: this.props.label,\r\n                    labelDistance: this.props.labelDistance,\r\n                    source: sourceShape ? sourceShape.guid() : source.guid(),\r\n                    sourceType: sourceShape ? 'shape' : 'vector',\r\n                    target: targetShape ? targetShape.guid() : target.guid(),\r\n                    targetType: targetShape ? 'shape' : 'vector',\r\n                    convex: +this.props.convex ? 1 : 0,\r\n                    smooth: +this.props.smooth ? 1 : 0,\r\n                    smoothness: this.props.smoothness,\r\n                    stroke: this.props.stroke\r\n                },\r\n\r\n                params: this.params\r\n            };\r\n\r\n            return link;\r\n        },\r\n\r\n        ///////// OBSERVERS /////////\r\n\r\n        onRouterRoute: function(e) {\r\n            var command = e.command;\r\n            this.reload(command);\r\n        },\r\n\r\n        onRouterReroute: function(e) {\r\n            var source = e.source,\r\n                target = e.target;\r\n\r\n            this.bindResource('source', source);\r\n            this.bindResource('target', target);\r\n\r\n            this.sendToFront();\r\n        },\r\n\r\n        onLabelRender: function(e) {\r\n            if (this.props.label) {\r\n                this.label(this.props.label);\r\n            }\r\n        },\r\n\r\n        onLabelAfterDrag: function(e) {\r\n            var label = this.component('label'),\r\n                matrix = label.matrix(),\r\n                x = label.attrs.x,\r\n                y = label.attrs.y,\r\n                p = {\r\n                    x: matrix.x(x, y),\r\n                    y: matrix.y(x, y)\r\n                }\r\n\r\n            label.attr({\r\n                x: p.x,\r\n                y: p.y\r\n            });\r\n\r\n            label.arrange();\r\n\r\n            // update label distance\r\n            var path = this.router.path(),\r\n                near = path.nearest(p);\r\n\r\n            this.props.labelDistance = near.distance / path.length();\r\n\r\n            label.reset();\r\n            matrix = path = null;\r\n        },\r\n\r\n        onLabelDoubletap: function(e) {\r\n            var coat = this.component('coat');\r\n            coat.editable().startEdit(e);\r\n        },\r\n\r\n        onCoatBeforeEdit: function(e) {\r\n            this.component('label').hide();\r\n            this.component().addClass('editing');\r\n        },\r\n\r\n        onCoatEdit: function(e) {\r\n            this.component().removeClass('editing');\r\n            this.component('label').show();\r\n            this.label(e.text, e.left, e.top);\r\n        },\r\n\r\n        onCoatClick: function(e) {\r\n            var paper = this.component('coat').paper();\r\n            if (paper.state() == 'linking') {\r\n                paper.tool().activate('panzoom');\r\n            }\r\n        },\r\n\r\n        onCoatSelect: function(e) {\r\n            var coat = this.component('coat'),\r\n                showControl = false;\r\n\r\n            if (e.initial) {\r\n                showControl = true;\r\n            }\r\n\r\n            this.props.selected = true;\r\n            this.component().addClass('selected');\r\n\r\n            if (showControl) {\r\n                this.resumeControl();\r\n                Graph.topic.publish('link:select', {link: this});\r\n            }\r\n        },\r\n\r\n        onCoatDeselect: function(e) {\r\n            if (this.props.removed) return;\r\n\r\n            this.props.selected = false;\r\n            this.component().removeClass('selected');\r\n            this.suspendControl();\r\n\r\n            if (e.initial) {\r\n                Graph.topic.publish('link:deselect', {link: this});    \r\n            }\r\n        },\r\n\r\n        onCoatBeforeDrag: function(e) {\r\n            this.suspendControl();\r\n        },\r\n\r\n        onCoatAfterDrag: function(e) {\r\n            this.relocate(e.dx, e.dy);\r\n        },\r\n\r\n        onCoatAfterDestroy: function(e) {\r\n            this.remove();\r\n        },\r\n\r\n        ///////// OBSERVERS /////////\r\n\r\n        onSourceAfterRotate: function(e) {\r\n            var matrix = this.router.source().matrix(),\r\n                oport = this.router.tail(),\r\n                nport = {\r\n                    x: matrix.x(oport.x, oport.y),\r\n                    y: matrix.y(oport.x, oport.y)\r\n                },\r\n                dx = nport.x - oport.x,\r\n                dy = nport.y - oport.y;\r\n\r\n            this.relocateTail(dx, dy);\r\n        },\r\n\r\n        onSourceSelect: function(e) {\r\n            var target = this.router.target();\r\n            if (this.isSelected()) {\r\n                if ( ! target.isSelected()) {\r\n                    this.deselect();\r\n                }\r\n            } else {\r\n                if (target.isSelected()) {\r\n                    this.select();\r\n                }\r\n            }\r\n        },\r\n\r\n        onSourceBeforeDrag: function(e, source) {\r\n            var target = this.router.target();\r\n            if ( ! source.isSelected() || ! target.isSelected()) {\r\n                this.deselect();\r\n            }\r\n            this.cached.convex = null;\r\n        },\r\n\r\n        onSourceDrag: function(e) {\r\n            console.warn('Not yet implemented');\r\n        },\r\n\r\n        onSourceAfterDrag: function(e) {\r\n            var source = this.router.source(),\r\n                target = this.router.target(),\r\n                dx = e.tx,\r\n                dy = e.ty;\r\n\r\n            if (source.isSelected()) {\r\n                if ( ! target.isSelected()) {\r\n                    this.relocateTail(dx, dy);\r\n                }\r\n            } else {\r\n                this.relocateTail(dx, dy);\r\n            }\r\n        },\r\n\r\n        onSourceAfterResize: function(e) {\r\n            this.relocateTail(e.translate.dx, e.translate.dy);\r\n        },\r\n\r\n        onSourceBeforeDestroy: function() {\r\n            if ( ! this.props.removed) {\r\n                this.component('coat').remove();    \r\n            }\r\n        },\r\n\r\n        onTargetAfterRotate: function(e) {\r\n            var matrix = this.router.target().matrix(),\r\n                oport = this.router.head(),\r\n                nport = {\r\n                    x: matrix.x(oport.x, oport.y),\r\n                    y: matrix.y(oport.x, oport.y)\r\n                },\r\n                dx = nport.x - oport.x,\r\n                dy = nport.y - oport.y;\r\n\r\n            this.relocateHead(dx, dy);\r\n        },\r\n\r\n        onTargetSelect: function(e) {\r\n            var source = this.router.source();\r\n            if (this.isSelected()) {\r\n                if ( ! source.isSelected()) {\r\n                    this.deselect();\r\n                }\r\n            } else {\r\n                if (source.isSelected()) {\r\n                    this.select();\r\n                }\r\n            }\r\n        },\r\n\r\n        onTargetBeforeDrag: function(e, target) {\r\n            var source = this.router.source();\r\n            if ( ! source.isSelected() || ! target.isSelected()) {\r\n                this.deselect();\r\n            }\r\n            this.cached.convex = null;\r\n        },\r\n\r\n        onTargetDrag: function(e) {\r\n            console.warn('Not yet implemented');\r\n        },\r\n\r\n        onTargetAfterDrag: function(e) {\r\n            var target = this.router.target(),\r\n                source = this.router.source(),\r\n                dx = e.tx,\r\n                dy = e.ty;\r\n\r\n            if (target.isSelected()) {\r\n                if ( ! source.isSelected()) {\r\n                    this.relocateHead(dx, dy);\r\n                }\r\n            } else {\r\n                this.relocateHead(dx, dy);\r\n            }\r\n        },\r\n\r\n        onTargetAfterResize: function(e) {\r\n            this.relocateHead(e.translate.dx, e.translate.dy);\r\n        },\r\n\r\n        onTargetBeforeDestroy: function() {\r\n            if ( ! this.props.removed) {\r\n                this.component('coat').remove();    \r\n            }\r\n        },  \r\n\r\n        onTrashToolClick: function(e) {\r\n            this.component('coat').remove();\r\n        },\r\n\r\n        onConfigToolClick: function(e) {\r\n\r\n        },\r\n\r\n        onFrontToolClick: function(e) {\r\n            this.sendToFront();\r\n        },\r\n\r\n        onBackToolClick: function(e) {\r\n\r\n        },\r\n\r\n        destroy: function() {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n    Link.guid = 0;\r\n\r\n    ///////// HELPERS /////////\r\n\r\n    function getHandler(scope, resource, handler) {\r\n        var name = 'on' + _.capitalize(resource) + handler,\r\n            func = scope[name];\r\n\r\n        name = null;\r\n        return func;\r\n    }\r\n\r\n}());\r\n","\r\n(function(_, $){\r\n    \r\n    var REGEX_SVG_BUILDER = /^<(svg|g|rect|text|path|line|tspan|circle|polygon|defs|marker)/i;\r\n\r\n    var domParser;\r\n\r\n    ///////// BUILDER /////////\r\n    \r\n    Graph.dom = function(selector, context, query) {\r\n        var fragment, element;\r\n\r\n        if (domParser === undefined) {\r\n            try {\r\n                domParser = new DOMParser();\r\n            } catch(e){\r\n                domParser = null;\r\n            }\r\n        }\r\n\r\n        query = _.defaultTo(query, false);\r\n\r\n        if (context !== undefined) {\r\n            if (Graph.isElement(context)) {\r\n                context = context.node();\r\n            }\r\n        }\r\n\r\n\r\n        if (_.isString(selector)) {\r\n            if (REGEX_SVG_BUILDER.test(selector)) {\r\n                if (domParser) {\r\n                    fragment = '<g xmlns=\"'+ Graph.config.xmlns.svg +'\">' + selector + '</g>';\r\n                    element  = domParser.parseFromString(fragment, 'text/xml').documentElement.childNodes[0];\r\n                    fragment = null;\r\n                    element  = query ? $(element) : element;\r\n                }\r\n            } else {\r\n                element = query ? $(selector, context) : $(selector, context)[0];\r\n            }\r\n        } else {\r\n            if (Graph.isHTML(selector) || Graph.isSVG(selector)) {\r\n                element = query ? $(selector) : selector;\r\n            } else if (Graph.isElement(selector)) {\r\n                element = query ? selector.query : selector.query[0];\r\n            } else {\r\n                // document, window, ...etc\r\n                element = query ? $(selector, context) : selector;\r\n            }\r\n        }\r\n\r\n        context = null;\r\n        return element;\r\n    };  \r\n\r\n    Graph.dom.clone = function(node, deep) {\r\n        return node.cloneNode(deep);\r\n    };\r\n\r\n    ///////// ELEMENT /////////\r\n\r\n    var E = Graph.dom.Element = function(node) {\r\n        this.query = $(node);\r\n    };\r\n\r\n    E.prototype.is = function(pseudo) {\r\n        return this.query.is(pseudo);\r\n    };  \r\n\r\n    E.prototype.node = function() {\r\n        return this.query[0];\r\n    };\r\n\r\n    E.prototype.length = function() {\r\n        return this.query.length;\r\n    };\r\n\r\n    E.prototype.group = function(name) {\r\n        if (name === undefined) {\r\n            return this.query.data('component-group');\r\n        }\r\n        this.query.data('component-group', name);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.belong = function(group) {\r\n        return this.group() == group;\r\n    };\r\n\r\n    E.prototype.attr = function(name, value) {\r\n        if (value === undefined) {\r\n            return this.query.attr(name);\r\n        }\r\n        \r\n        var me = this, node = this.query[0];\r\n\r\n        if (Graph.isHTML(node)) {\r\n            this.query.attr(name, value);\r\n        } else if (Graph.isSVG(node)) {\r\n\r\n            if (_.isPlainObject(name)) {\r\n                _.forOwn(name, function(v, k){\r\n                    me.attr(k, v);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (name.substring(0, 6) == 'xlink:') {\r\n                node.setAttributeNS(Graph.config.xmlns.xlink, name.substring(6), _.toString(value));\r\n            } else {\r\n                node.setAttribute(name, _.toString(value));\r\n            }\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    E.prototype.width = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.width();\r\n        }\r\n        this.query.width(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.outerHeight = function(margin) {\r\n        return this.query.outerHeight(margin);\r\n    };\r\n\r\n    E.prototype.height = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.height();\r\n        }\r\n        this.query.height(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.show = function() {\r\n        this.query.show();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.hide = function() {\r\n        this.query.hide();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.offset = function() {\r\n        var node = this.query[0];\r\n        if (Graph.isSVG(node)) {\r\n            var offset = node.getBoundingClientRect();\r\n            return {\r\n                left: offset.left,\r\n                top: offset.top,\r\n                width: offset.width,\r\n                height: offset.height\r\n            };\r\n        } else {\r\n           return this.query.offset(); \r\n        }\r\n    };\r\n\r\n    E.prototype.position = function() {\r\n        return this.query.position();\r\n    };\r\n\r\n    E.prototype.css = function(name, value) {\r\n        if (value === undefined) {\r\n            return this.query.css(name);\r\n        }\r\n        this.query.css(name, value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.addClass = function(classes) {\r\n        var node = this.query[0];\r\n        if (Graph.isHTML(node)) {\r\n            this.query.addClass(classes);\r\n        } else if (Graph.isSVG(node)) {\r\n            var values = _.chain([])\r\n                .concat(_.split(node.className.baseVal || '', ' '))\r\n                .concat(_.split(classes, ' '))\r\n                .uniq()\r\n                .join(' ')\r\n                .trim()\r\n                .value();\r\n            node.className.baseVal = values;\r\n        }\r\n        return this;\r\n    };\r\n\r\n    E.prototype.removeClass = function(classes) {\r\n        var node = this.query[0];\r\n        if (Graph.isHTML(node)) {\r\n            this.query.removeClass(classes);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    E.prototype.hasClass = function(clazz) {\r\n        var node = this.query[0];\r\n\r\n        if (Graph.isHTML(node)) {\r\n            return this.query.hasClass(clazz); \r\n        } else if (Graph.isSVG(node)) {\r\n            var classes = _.split(node.className.baseVal, ' ');\r\n            return classes.indexOf(clazz) > -1;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    E.prototype.find = function(selector) {\r\n        return new Graph.dom.Element(this.query.find(selector));\r\n    };\r\n\r\n    E.prototype.parent = function() {\r\n        return new Graph.dom.Element(this.query.parent());\r\n    };\r\n\r\n    E.prototype.closest = function(element) {\r\n        return new Graph.dom.Element(this.query.closest(element));\r\n    };\r\n\r\n    E.prototype.append = function(element) {\r\n        if (element.query === undefined) {\r\n            this.query.append(element);\r\n        } else {\r\n            this.query.append(element.query);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    E.prototype.prepend = function(element) {\r\n        this.query.prepend(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.appendTo = function(element) {\r\n        this.query.appendTo(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.prependTo = function(element) {\r\n        this.query.prependTo(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.before = function(element) {\r\n        this.query.before(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.after = function(element) {\r\n        this.query.after(element.query);\r\n        return this;\r\n    };\r\n    \r\n    E.prototype.last = function() {\r\n        return new Graph.dom.Element(this.query.last());\r\n    };\r\n\r\n    E.prototype.remove = function() {\r\n        this.query.remove();\r\n        this.query = null;\r\n        return this;\r\n    };\r\n\r\n    E.prototype.detach = function() {\r\n        this.query = this.query.detach();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.on = function(types, selector, data, fn, /*INTERNAL*/ one) {\r\n        this.query.on.call(this.query, types, selector, data, fn, one);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.off = function(types, selector, fn) {\r\n        this.query.off.call(this.query, types, selector, fn);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.trigger = function(type, data) {\r\n        this.query.trigger(type, data);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.val = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.val();\r\n        }\r\n        this.query.val(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.text = function(text) {\r\n        if (text === undefined) {\r\n            return this.query.text();\r\n        }\r\n        this.query.text(text);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.html = function(html) {\r\n        if (html === undefined) {\r\n            return this.query.html();\r\n        }\r\n        this.query.html(html);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.focus = function(select, delay) {\r\n        var query = this.query, timer;\r\n\r\n        delay = _.defaultTo(delay, 0);\r\n\r\n        if (this.query.attr('contenteditable') !== undefined) {\r\n            timer = _.delay(function(){\r\n                clearTimeout(timer);\r\n                timer = null;\r\n\r\n                query[0].focus();\r\n\r\n                if (document.createRange && window.getSelection) {\r\n                    var range = document.createRange();\r\n                    range.selectNodeContents(query[0]);\r\n                    var selection = window.getSelection();\r\n                    selection.removeAllRanges();\r\n                    selection.addRange(range);\r\n                }\r\n\r\n            }, delay);\r\n            \r\n        } else {\r\n            timer = _.delay(function(){\r\n                clearTimeout(timer);\r\n                timer = null;\r\n\r\n                query.focus();\r\n\r\n                if (select) {\r\n                    query.select();\r\n                }\r\n            }, delay);\r\n        }\r\n        \r\n        return this;\r\n    };\r\n\r\n    E.prototype.contextmenu = function(state) {\r\n        state = _.defaultTo(state, true);\r\n        if ( ! state) {\r\n            this.query.on('contextmenu', function(e){\r\n                return false;\r\n            });\r\n        }\r\n    };\r\n\r\n    E.prototype.each = function(iteratee) {\r\n        this.query.each(iteratee);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.empty = function() {\r\n        this.query.empty();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.data = function(key, value) {\r\n        if (value === undefined) {\r\n            return this.query.data(key);\r\n        }\r\n        this.query.data(key, value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.prop = function(name, value) {\r\n        if (value === undefined) {\r\n            return this.query.data(name);\r\n        }\r\n        this.query.prop(name, value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.scrollTop = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.scrollTop();\r\n        }\r\n        this.query.scrollTop(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.scrollLeft = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.scrollLeft();\r\n        }\r\n        this.query.scrollLeft(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.toString = function() {\r\n        return 'Graph.dom.Element';\r\n    };\r\n\r\n    /// STATICS ///\r\n    \r\n    E.guid = 0;\r\n    \r\n    /// HELPERS ///\r\n\r\n    Graph.$ = function(selector, context) {\r\n        var query = Graph.dom(selector, context, true);\r\n        return new Graph.dom.Element(query);\r\n    };\r\n\r\n}(_, jQuery));","\r\n(function(){\r\n\r\n    Graph.svg.Ellipse = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(cx, cy, rx, ry) {\r\n            \r\n            // this.$super('ellipse', {\r\n            //     cx: cx,\r\n            //     cy: cy,\r\n            //     rx: rx,\r\n            //     ry: ry\r\n            // });\r\n\r\n            this.superclass.prototype.constructor.call(this, 'ellipse', {\r\n                cx: cx,\r\n                cy: cy,\r\n                rx: rx,\r\n                ry: ry\r\n            });\r\n        },\r\n\r\n        shape: function() {\r\n            var a = this.attrs;\r\n\r\n            return Graph.path([\r\n                ['M', a.cx, a.cy],\r\n                ['m', 0, -a.ry],\r\n                ['a', a.rx, a.ry, 0, 1, 1, 0,  2 * a.ry],\r\n                ['a', a.rx, a.ry, 0, 1, 1, 0, -2 * a.ry],\r\n                ['z']\r\n            ]);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.graph.matrix.clone().scale(sx, sy, cx, cy),\r\n                rotate = this.props.rotate;\r\n\r\n            var mx = matrix.x(this.attrs.cx, this.attrs.cy),\r\n                my = matrix.y(this.attrs.cx, this.attrs.cy),\r\n                rx = this.attrs.rx * sx,\r\n                ry = this.attrs.ry * sy;\r\n\r\n            var gx, gy;\r\n\r\n            this.reset();\r\n\r\n            this.attr({\r\n                cx: mx,\r\n                cy: my,\r\n                rx: rx,\r\n                ry: ry\r\n            });\r\n\r\n            if (rotate) {\r\n                this.rotate(rotate, mx, my).commit();    \r\n            }\r\n\r\n            var bb = this.bbox().toJson();\r\n\r\n            gx = mx - rx - dx;\r\n            gy = my - ry - dy;\r\n\r\n            gx = bb.x;\r\n            gy = bb.y;\r\n\r\n            return  {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: mx,\r\n                    cy: my\r\n                },\r\n                magnify: {\r\n                    cx: gx,\r\n                    cy: gy\r\n                }\r\n            };\r\n        },\r\n        toString: function() {\r\n            return 'Graph.svg.Ellipse';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Circle = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(cx, cy, r) {\r\n            var me = this;\r\n            \r\n            if (Graph.isPoint(cx)) {\r\n                r  = cy;\r\n                cy = cx.props.y;\r\n                cx = cx.props.x;\r\n            }\r\n\r\n            // me.$super('circle', {\r\n            //     cx: cx,\r\n            //     cy: cy,\r\n            //     r: r\r\n            // });\r\n\r\n            me.superclass.prototype.constructor.call(me, 'circle', {\r\n                cx: cx,\r\n                cy: cy,\r\n                r: r\r\n            });\r\n            \r\n        },\r\n\r\n        shape: function() {\r\n            var a = this.attrs;\r\n            \r\n            return Graph.path([\r\n                ['M', a.cx, a.cy],\r\n                ['m', 0, -a.r],\r\n                ['a', a.r, a.r, 0, 1, 1, 0,  2 * a.r],\r\n                ['a', a.r, a.r, 0, 1, 1, 0, -2 * a.r],\r\n                ['z']\r\n            ]);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.graph.matrix.clone(),\r\n                rotate = this.props.rotate,\r\n                ax = this.attrs.cx,\r\n                ay = this.attrs.cy,\r\n                ar = this.attrs.r;\r\n\r\n            var x, y, r;\r\n            \r\n            if (sy === 1) {\r\n                r  = ar * sx;\r\n                sy = sx;\r\n            } else if (sx === 1) {\r\n                r  = ar * sy;\r\n                sx = sy;\r\n            } else if (sx < sy) {\r\n                r = ar * sy;\r\n                sx = sy;\r\n            } else if (sx > sy) {\r\n                r  = ar * sx;\r\n                sy = sx;\r\n            }\r\n\r\n            matrix.scale(sx, sy, cx, cy);\r\n\r\n            x = matrix.x(ax, ay);\r\n            y = matrix.y(ax, ay);\r\n\r\n            this.reset();\r\n\r\n            this.attr({\r\n                cx: x,\r\n                cy: y,\r\n                 r: r\r\n            });\r\n            \r\n            if (rotate) {\r\n                this.rotate(rotate, x, y).commit();    \r\n            }\r\n\r\n            return {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: x,\r\n                    cy: y\r\n                }\r\n            };\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Circle';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Rect = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(x, y, width, height, r) {\r\n            var me = this;\r\n            r = _.defaultTo(r, 6);\r\n\r\n            // me.$super('rect', {\r\n            //     x: _.defaultTo(x, 0),\r\n            //     y: _.defaultTo(y, 0),\r\n            //     rx: r,\r\n            //     ry: r,\r\n            //     width: _.defaultTo(width, 0),\r\n            //     height: _.defaultTo(height, 0)\r\n            // });\r\n\r\n            me.superclass.prototype.constructor.call(me, 'rect', {\r\n                x: _.defaultTo(x, 0),\r\n                y: _.defaultTo(y, 0),\r\n                rx: r,\r\n                ry: r,\r\n                width: _.defaultTo(width, 0),\r\n                height: _.defaultTo(height, 0)\r\n            });\r\n            \r\n            me.origpath = me.shape();\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            var result = this.superclass.prototype.attr.apply(this, [name, value]);\r\n\r\n            if (name == 'rx' && value !== undefined) {\r\n                this.attrs.r = this.attrs.rx;    \r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        shape: function() {\r\n            var a = this.attrs, p;\r\n\r\n            if (a.r) {\r\n                p = Graph.path([\r\n                    ['M', a.x + a.r, a.y], \r\n                    ['l', a.width - a.r * 2, 0], \r\n                    ['a', a.r, a.r, 0, 0, 1, a.r, a.r], \r\n                    ['l', 0, a.height - a.r * 2], \r\n                    ['a', a.r, a.r, 0, 0, 1, -a.r, a.r], \r\n                    ['l', a.r * 2 - a.width, 0], \r\n                    ['a', a.r, a.r, 0, 0, 1, -a.r, -a.r], \r\n                    ['l', 0, a.r * 2 - a.height], \r\n                    ['a', a.r, a.r, 0, 0, 1, a.r, -a.r], \r\n                    ['z']\r\n                ]);\r\n            } else {\r\n                p = Graph.path([\r\n                    ['M', a.x, a.y], \r\n                    ['l', a.width, 0], \r\n                    ['l', 0, a.height], \r\n                    ['l', -a.width, 0], \r\n                    ['z']\r\n                ]);\r\n            }\r\n\r\n            return p;\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.matrix().clone(),\r\n                rotate = matrix.rotate().deg;\r\n\r\n            var x, y, w, h;\r\n\r\n            matrix.scale(sx, sy, cx, cy);\r\n\r\n            this.reset();\r\n\r\n            x = matrix.x(this.attrs.x, this.attrs.y);\r\n            y = matrix.y(this.attrs.x, this.attrs.y);\r\n            w = this.attrs.width  * sx;\r\n            h = this.attrs.height * sy;\r\n\r\n            this.attr({\r\n                x: x,\r\n                y: y,\r\n                width: w,\r\n                height: h\r\n            });\r\n\r\n            if (rotate) {\r\n                this.rotate(rotate, x, y).commit();    \r\n            }\r\n            \r\n            return {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: x,\r\n                    cy: y\r\n                }\r\n            };\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Rect';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","(function(){\r\n\r\n    Graph.svg.Polyline = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(points) {\r\n            points = _.defaultTo(points, '');\r\n\r\n            if (_.isArray(points)) {\r\n                if (points.length) {\r\n                    if (_.isPlainObject(points[0])) { \r\n                        points = _.map(points, function(p){ return p.x + ',' + p.y; });\r\n                    }\r\n                    points = _.join(points, ',');\r\n                } else {\r\n                    points = '';\r\n                }\r\n            }\r\n            \r\n            this.superclass.prototype.constructor.call(this, 'polyline', {\r\n                points: points\r\n            });\r\n        },\r\n\r\n        shape: function() {\r\n            var command = Graph.util.polygon2path(this.attrs.points);\r\n            command = command.replace(/Z/i, '');\r\n            return Graph.path(command);\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            if (name == 'points' && _.isArray(value)) {\r\n                value = _.join(_.map(value, function(p){\r\n                    return p[0] + ',' + p[1];\r\n                }), ' ');\r\n            }\r\n            \r\n            return this.superclass.prototype.attr.call(this, name, value); // this.$super(name, value);\r\n        },\r\n        toString: function() {\r\n            return 'Graph.svg.Polyline';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Polygon = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(points) {\r\n            points = _.defaultTo(points, '');\r\n            \r\n            if (_.isArray(points)) {\r\n                if (points.length) {\r\n                    if (_.isPlainObject(points[0])) { \r\n                        points = _.map(points, function(p){ return p.x + ',' + p.y; });\r\n                    }\r\n                    points = _.join(points, ',');\r\n                } else {\r\n                    points = '';\r\n                }\r\n            }\r\n\r\n            this.superclass.prototype.constructor.call(this, 'polygon', {\r\n                points: points\r\n            });\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            if (name == 'points' && _.isArray(value)) {\r\n                value = _.join(value, ',');\r\n            }\r\n            \r\n            return this.superclass.prototype.attr.call(this, name, value); // this.$super(name, value);\r\n        },\r\n\r\n        shape: function() {\r\n            var command = Graph.util.polygon2path(this.attrs.points);\r\n            return Graph.path(command);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.graph.matrix.clone(),\r\n                origin = this.graph.matrix.clone(),\r\n                rotate = this.props.rotate,\r\n                ps = this.shape().segments,\r\n                dt = [],\r\n                rx = ps[0][1],\r\n                ry = ps[0][2];\r\n\r\n            if (rotate) {\r\n                origin.rotate(-rotate, ps[0][1], ps[0][2]); \r\n                rx = origin.x(ps[0][1], ps[0][2]);\r\n                ry = origin.y(ps[0][1], ps[0][2]);\r\n            }\r\n\r\n            origin.scale(sx, sy, cx, cy);\r\n            matrix.scale(sx, sy, cx, cy);\r\n\r\n            _.forEach(ps, function(seg){\r\n                var ox, oy, x, y;\r\n                if (seg[0] != 'Z') {\r\n                    ox = seg[seg.length - 2];\r\n                    oy = seg[seg.length - 1];\r\n                    x = origin.x(ox, oy);\r\n                    y = origin.y(ox, oy);\r\n                    dt.push(x + ',' + y);\r\n                }\r\n            });\r\n\r\n            dt = _.join(dt, ' ');\r\n\r\n            this.reset();\r\n            this.attr('points', dt);\r\n\r\n            if (rotate) {\r\n                this.rotate(rotate, rx, ry).commit();\r\n            }\r\n            \r\n            return {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: rx,\r\n                    cy: ry\r\n                }\r\n            };\r\n        },\r\n        toString: function() {\r\n            return 'Graph.svg.Polygon';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Group = Graph.extend(Graph.svg.Vector, {\r\n\r\n        attrs: {\r\n            'stroke': null,\r\n            'stroke-width': null,\r\n            'class': null,\r\n            'fill': null,\r\n            'style': null\r\n        },\r\n        \r\n        constructor: function(x, y) {\r\n            // this.$super('g');\r\n            this.superclass.prototype.constructor.call(this, 'g');\r\n\r\n            if (x !== undefined && y !== undefined) {\r\n                this.graph.matrix.translate(x, y);\r\n                this.attr('transform', this.graph.matrix.toValue());\r\n            }\r\n        },\r\n\r\n        shape: function() {\r\n            var size = this.dimension();\r\n            \r\n            return new Graph.lang.Path([\r\n                ['M', size.x, size.y], \r\n                ['l', size.width, 0], \r\n                ['l', 0, size.height], \r\n                ['l', -size.width, 0], \r\n                ['z']\r\n            ]);\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Group';\r\n        }\r\n        \r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Text = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        attrs: {\r\n            'text-anchor': 'middle'\r\n        },  \r\n\r\n        props: {\r\n            id: '',\r\n            guid: '',\r\n            text: '',\r\n            type: 'text',\r\n            rotate: 0,\r\n            lineHeight: 1.1,\r\n            fontSize: 12,\r\n            traversable: true,\r\n            focusable: false,\r\n            selectable: true,\r\n            selected: false,\r\n            rendered: false\r\n        },\r\n\r\n        rows: [],\r\n\r\n        constructor: function(x, y, text) {\r\n            // this.$super('text', {\r\n            //     x: _.defaultTo(x, 0),\r\n            //     y: _.defaultTo(y, 0)\r\n            // });\r\n\r\n            this.superclass.prototype.constructor.call(this, 'text', {\r\n                x: _.defaultTo(x, 0),\r\n                y: _.defaultTo(y, 0)\r\n            });\r\n\r\n            this.attr({\r\n                'font-size': Graph.config.font.size\r\n            });\r\n\r\n            if (text) {\r\n                this.write(text);\r\n            }\r\n            \r\n            this.on('render', _.bind(this.onTextRender, this));\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            var result = this.superclass.prototype.attr.apply(this, [name, value]);\r\n            \r\n            if (name == 'font-size' && value !== undefined) {\r\n                this.props.fontSize = _.parseInt(value) || 12;\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        write: function(text) {\r\n            var me = this, parts, span;\r\n\r\n            if (text === undefined) {\r\n                return me.props.text;\r\n            }\r\n\r\n            parts = (text || '').split(\"\\n\");\r\n\r\n            me.empty();\r\n            me.rows = [];\r\n            \r\n            _.forEach(parts, function(t, i){\r\n                me.addSpan(t);\r\n            });\r\n\r\n            me.props.text = text;\r\n            me.cached.bbox = null;\r\n        },\r\n\r\n        addSpan: function(text) {\r\n            var me = this, span;\r\n    \r\n            text = _.defaultTo(text, '');\r\n\r\n            span = Graph.$('<tspan/>');\r\n            span.text(text);\r\n\r\n            me.elem.append(span);\r\n            me.rows.push(span);\r\n\r\n            return span;\r\n        },\r\n\r\n        /**\r\n         * Arrange position\r\n         */\r\n        arrange: function() {\r\n            var rows = this.rows,\r\n                size = this.props.fontSize,\r\n                line = this.props.lineHeight,\r\n                bbox = this.bbox().toJson();\r\n            \r\n            if (rows.length) {\r\n                for (var i = 0, ii = rows.length; i < ii; i++) {\r\n                    if (i) {\r\n                        rows[i].attr('x', this.attrs.x);\r\n                        rows[i].attr('dy', size * line);\r\n                    }\r\n                }\r\n                rows[0].attr('dy', 0);\r\n                this.dirty(true);\r\n            }\r\n        },\r\n\r\n        wrap: function(width) {\r\n            var text = this.props.text,\r\n                words = text.split(/\\s+/).reverse(),\r\n                lines = [],\r\n                lineNo = 0,\r\n                lineHeight = this.props.lineHeight,\r\n                ax = this.attrs.x,\r\n                ay = this.attrs.y,\r\n                dy = 0;\r\n\r\n            var word, span;\r\n\r\n            this.empty();\r\n            this.rows = [];\r\n\r\n            span = this.addSpan();\r\n            span.attr({\r\n                x: ax, \r\n                y: ay, \r\n                dy: dy + 'em'\r\n            });\r\n\r\n            while((word = words.pop())) {\r\n                lines.push(word);\r\n                span.text(lines.join(' '));\r\n                if (span.node().getComputedTextLength() > width) {\r\n                    lines.pop();\r\n                    span.text(lines.join(' '));\r\n                    lines = [word];\r\n                    span = this.addSpan(word);\r\n                    span.attr({\r\n                        x: ax, \r\n                        y: ay, \r\n                        dy: (++lineNo * lineHeight) + 'em'\r\n                    });\r\n                }\r\n            }\r\n        },\r\n\r\n        center: function(target) {\r\n            if (target) {\r\n                var targetBox = target.bbox().toJson(),\r\n                    rotate = this.matrix().rotate();\r\n\r\n                var textBox, dx, dy, cx, cy;\r\n\r\n                this.reset();\r\n\r\n                textBox = this.bbox().toJson();   \r\n\r\n                dx = targetBox.width / 2;\r\n                dy = targetBox.height / 2;\r\n                cx = textBox.x + textBox.width / 2;\r\n                cy = textBox.y + textBox.height / 2;\r\n\r\n                if (rotate.deg) {\r\n                    this.translate(dx, dy).rotate(rotate.deg).commit();\r\n                } else {\r\n                    this.translate(dx, dy).commit();\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        shape: function() {\r\n            var size = this.dimension();\r\n\r\n            return new Graph.lang.Path([\r\n                ['M', size.x, size.y], \r\n                ['l', size.width, 0], \r\n                ['l', 0, size.height], \r\n                ['l', -size.width, 0], \r\n                ['z']\r\n            ]);\r\n\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Text';\r\n        },\r\n\r\n        onTextRender: function() {\r\n            var me = this;\r\n            me.arrange();\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Image = Graph.extend(Graph.svg.Vector, {\r\n\r\n        attrs: {\r\n            preserveAspectRatio: 'none'\r\n        },\r\n\r\n        constructor: function(src, x, y, width, height) {\r\n            var me = this;\r\n\r\n            // me.$super('image', {\r\n            //     'xlink:href': src,\r\n            //     'x': _.defaultTo(x, 0),\r\n            //     'y': _.defaultTo(y, 0),\r\n            //     'width': _.defaultTo(width, 0),\r\n            //     'height': _.defaultTo(height, 0)\r\n            // });\r\n            \r\n            me.superclass.prototype.constructor.call(me, 'image', {\r\n                'xlink:href': src,\r\n                'x': _.defaultTo(x, 0),\r\n                'y': _.defaultTo(y, 0),\r\n                'width': _.defaultTo(width, 0),\r\n                'height': _.defaultTo(height, 0)\r\n            });\r\n            \r\n        },\r\n\r\n        align: function(value, scale) {\r\n            if (value == 'none') {\r\n                this.attr('preserveAspectRatio', 'none');\r\n\r\n                return this;\r\n            }\r\n\r\n            var aspect = this.attrs.preserveAspectRatio,\r\n                align = '';\r\n\r\n            aspect = /(meet|slice)/.test(aspect) \r\n                ? aspect.replace(/(.*)\\s*(meet|slice)/i, '$2')\r\n                : '';\r\n\r\n            scale = _.defaultTo(scale, aspect);\r\n            value = value.replace(/s+/, ' ').toLowerCase();\r\n\r\n            switch(value) {\r\n                case 'top left':\r\n                case 'left top':\r\n                    align = 'xMinYMin';\r\n                    break;\r\n                case 'top center':\r\n                case 'center top':\r\n                    align = 'xMidYMin';\r\n                    break;\r\n                case 'top right':\r\n                case 'right top':\r\n                    align = 'xMaxYMin';\r\n                    break;\r\n                case 'left':\r\n                    align = 'xMinYMid';\r\n                    break;\r\n                case 'center':\r\n                    align = 'xMidYMid';\r\n                    break;\r\n                case 'right':\r\n                    align = 'xMaxYMid';\r\n                    break;\r\n                case 'bottom left':\r\n                case 'left bottom':\r\n                    align = 'xMinYMax';\r\n                    break;\r\n                case 'bottom center':\r\n                case 'center bottom':\r\n                    align = 'xMidYMax';\r\n                    break;\r\n                case 'bottom right':\r\n                case 'right bottom':\r\n                    align = 'xMaxYMax';\r\n                    break;\r\n            }\r\n\r\n            aspect = align + (scale ? ' ' + scale : '');\r\n            this.attr('preserveAspectRatio', aspect);\r\n\r\n            return this;\r\n        },\r\n\r\n        shape: function() {\r\n            var a = this.attrs;\r\n\r\n            return new Graph.lang.Path([\r\n                ['M', a.x, a.y], \r\n                ['l', a.width, 0], \r\n                ['l', 0, a.height], \r\n                ['l', -a.width, 0], \r\n                ['z']\r\n            ]);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var ms = this.graph.matrix.clone().scale(sx, sy, cx, cy),\r\n                ro = this.graph.matrix.rotate();\r\n\r\n            this.reset();\r\n\r\n            var x = ms.x(this.attrs.x, this.attrs.y),\r\n                y = ms.y(this.attrs.x, this.attrs.y),\r\n                w = +this.attrs.width * sx,\r\n                h = +this.attrs.height * sy;\r\n\r\n            this.attr({\r\n                x: x,\r\n                y: y,\r\n                width: w,\r\n                height: h\r\n            });\r\n            \r\n            this.rotate(ro, x, y).commit();\r\n\r\n            return {\r\n                matrix: ms,\r\n                x: x,\r\n                y: y\r\n            };\r\n        },\r\n        toString: function() {\r\n            return 'Graph.svg.Image';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    /**\r\n     * Paper - root viewport\r\n     */\r\n\r\n    var Paper = Graph.svg.Paper = Graph.extend(Graph.svg.Vector, {\r\n\r\n        attrs: {\r\n            'class': Graph.styles.PAPER\r\n        },\r\n\r\n        props: {\r\n            id: null,\r\n            guid: null,\r\n            type: 'paper',\r\n            text: null,\r\n            rotate: 0,\r\n\r\n            traversable: false,\r\n            selectable: false,\r\n            selected: false,\r\n            focusable: false,\r\n\r\n            rendered: false,\r\n            showOrigin: true,\r\n            zoomable: true\r\n        },\r\n\r\n        components: {\r\n            viewport: null\r\n        },\r\n\r\n        diagram: {\r\n            enabled: true,\r\n            manager: null\r\n        },\r\n\r\n        constructor: function (width, height, options) {\r\n            var me = this;\r\n\r\n            me.superclass.prototype.constructor.call(me, 'svg', {\r\n                'xmlns': Graph.config.xmlns.svg,\r\n                'xmlns:link': Graph.config.xmlns.xlink,\r\n                'version': Graph.config.svg.version\r\n                // 'width': _.defaultTo(width, 200),\r\n                // 'height': _.defaultTo(height, 200)\r\n            });\r\n\r\n            _.assign(me.props, options || {});\r\n\r\n            me.style({\r\n                overflow: 'hidden',\r\n                position: 'relative'\r\n            });\r\n\r\n            me.interactable();\r\n            me.initLayout();\r\n\r\n            me.plugins.collector = new Graph.plugin.Collector(me);\r\n            me.plugins.toolmgr.register('collector', 'plugin');\r\n\r\n            me.plugins.linker = new Graph.plugin.Linker(me);\r\n            me.plugins.toolmgr.register('linker', 'plugin');\r\n\r\n            me.plugins.pencil = new Graph.plugin.Pencil(me);\r\n            me.plugins.toolmgr.register('pencil', 'plugin');\r\n\r\n            me.plugins.definer = new Graph.plugin.Definer(me);\r\n\r\n            me.plugins.snapper = new Graph.plugin.Snapper(me);\r\n            me.plugins.toolpad = new Graph.plugin.Toolpad(me);\r\n            me.plugins.clipper = new Graph.plugin.Clipper(me);\r\n\r\n            // diagram feature\r\n            me.diagram.enabled = true;\r\n            me.diagram.manager = new Graph.diagram.Manager(me);\r\n\r\n            // subscribe topics\r\n            Graph.topic.subscribe('link:change', _.bind(me.listenLinkChange, me));\r\n            Graph.topic.subscribe('link:afterdestroy', _.bind(me.listenLinkAfterDestroy, me));\r\n\r\n            if ( ! Paper.defaultInstance) {\r\n                Paper.defaultInstance = me.guid();\r\n            }\r\n        },\r\n\r\n        initLayout: function() {\r\n            // create viewport\r\n            var viewport = (new Graph.svg.Group())\r\n                .addClass(Graph.styles.VIEWPORT)\r\n                .selectable(false);\r\n\r\n            viewport.props.viewport = true;\r\n\r\n            this.components.viewport = viewport.guid();\r\n\r\n            if (this.props.showOrigin) {\r\n                var origin = Graph.$(\r\n                    '<g class=\"graph-elem graph-origin\">' +\r\n                        '<rect class=\"x\" rx=\"1\" ry=\"1\" x=\"-16\" y=\"-1\" height=\"1\" width=\"30\"></rect>' +\r\n                        '<rect class=\"y\" rx=\"1\" ry=\"1\" x=\"-1\" y=\"-16\" height=\"30\" width=\"1\"></rect>' +\r\n                        '<text class=\"t\" x=\"-40\" y=\"-10\">(0, 0)</text>' +\r\n                    '</g>'\r\n                );\r\n\r\n                origin.appendTo(viewport.elem);\r\n                origin = null;\r\n            }\r\n\r\n            // render viewport\r\n            viewport.tree.paper = viewport.tree.parent = this.guid();\r\n            // viewport.translate(0.5, 0.5).commit();\r\n\r\n            this.elem.append(viewport.elem);\r\n            this.children().push(viewport);\r\n\r\n            viewport.on('render', function(){\r\n                viewport.cascade(function(c){\r\n                    if (c !== viewport && ! c.props.rendered) {\r\n                        c.props.rendered = true;\r\n                        c.tree.paper = viewport.tree.paper;\r\n                        c.fire('render');\r\n                    }\r\n                });\r\n            });\r\n\r\n            this.layout('default');\r\n        },\r\n\r\n        layout: function(options) {\r\n            var viewport = this.viewport();\r\n\r\n            if (options === undefined) {\r\n                return viewport.graph.layout;\r\n            }\r\n\r\n            viewport.layout(options);\r\n            return this;\r\n        },\r\n\r\n        shape: function(names, options) {\r\n            var shape = Graph.shape(names, options);\r\n            shape.render(this);\r\n\r\n            return shape;\r\n        },\r\n\r\n        render: function(container) {\r\n            var me = this,\r\n                vp = me.viewport(),\r\n                id = me.guid();\r\n\r\n            if (me.props.rendered) {\r\n                return;\r\n            }\r\n\r\n            container = Graph.$(container);\r\n            container.append(me.elem);\r\n\r\n            me.tree.container = container;\r\n\r\n            me.elem.css({\r\n                width: '100%',\r\n                height: '100%'\r\n            });\r\n\r\n            me.props.rendered = true;\r\n            me.fire('render');\r\n\r\n            vp.props.rendered = true;\r\n            vp.fire('render');\r\n\r\n            if (me.props.zoomable) {\r\n                me.zoomable();\r\n\r\n                var debounce = _.debounce(function(){\r\n                    debounce.flush();\r\n                    debounce = null;\r\n\r\n                    me.tool().activate('panzoom');\r\n                }, 1000);\r\n\r\n                debounce();\r\n            }\r\n\r\n            return me;\r\n        },\r\n\r\n        container: function() {\r\n            return this.tree.container;\r\n        },\r\n\r\n        collector: function() {\r\n            return this.plugins.collector;\r\n        },\r\n\r\n        snapper: function() {\r\n            return this.plugins.snapper;\r\n        },\r\n\r\n        viewport: function() {\r\n            return Graph.registry.vector.get(this.components.viewport);\r\n        },\r\n\r\n        diagram: function() {\r\n            return this.diagram.manager;\r\n        },\r\n\r\n        // @Override\r\n        scale: function(sx, sy, cx, cy) {\r\n            if (sx === undefined) {\r\n                return this.viewport().matrix().scale();\r\n            }\r\n            return this.plugins.transformer.scale(sx, sy, cx, cy);\r\n        },\r\n\r\n        width: function() {\r\n            return this.elem.width();\r\n        },\r\n\r\n        height: function() {\r\n            return this.elem.height();\r\n        },\r\n        \r\n        locateLink: function(guid) {\r\n            var link = Graph.registry.link.get(guid);\r\n            if (link) {\r\n                link.select(false);\r\n            }\r\n        },\r\n\r\n        locateShape: function(guid) {\r\n            var shape = Graph.registry.shape.get(guid);\r\n            if (shape) {\r\n                shape.select(false);\r\n            }\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Paper';\r\n        },\r\n\r\n        ///////// OBSERVERS /////////\r\n        \r\n        ///////// TOPIC LISTENERS /////////\r\n\r\n        listenLinkChange: _.debounce(function() {\r\n            this.layout().arrangeLinks();\r\n        }, 300),\r\n\r\n        listenLinkAfterDestroy: _.debounce(function(){\r\n            this.layout().arrangeLinks();\r\n        }, 10)\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n    Paper.defaultInstance = null;\r\n    \r\n    Paper.getDefaultInstance = function() {\r\n        return Graph.registry.vector.get(Paper.defaultInstance);\r\n    };\r\n\r\n    ///////// EXTENSIONS /////////\r\n\r\n    var vectors = {\r\n        ellipse: 'Ellipse',\r\n        circle: 'Circle',\r\n        rect: 'Rect',\r\n        path: 'Path',\r\n        polyline: 'Polyline',\r\n        polygon: 'Polygon',\r\n        group: 'Group',\r\n        text: 'Text',\r\n        image: 'Image',\r\n        line: 'Line'\r\n    };\r\n\r\n    _.forOwn(vectors, function(name, method){\r\n        (function(name, method){\r\n            Paper.prototype[method] = function() {\r\n                var arg = [name].concat(_.toArray(arguments)),\r\n                    svg = Graph.svg.apply(null, arg);\r\n\r\n                svg.tree.paper = this.guid();\r\n                svg.render(this);\r\n\r\n                arg = null;\r\n                return svg;\r\n            };\r\n        }(name, method));\r\n    });\r\n\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var storage = {};\r\n\r\n    var Registry = function() {\r\n        \r\n    };\r\n    \r\n    Registry.prototype.constructor = Registry;\r\n\r\n    Registry.prototype.register = function(pallet) {\r\n        var id = pallet.guid();\r\n        storage[id] = pallet;\r\n    };\r\n\r\n    Registry.prototype.unregister = function(pallet) {\r\n        var id = pallet.guid();\r\n        if (storage[id]) {\r\n            delete storage[id];\r\n        }\r\n    };\r\n\r\n    Registry.prototype.get = function(key) {\r\n        if (key === undefined) {\r\n            return this.toArray();\r\n        }\r\n        return storage[key];\r\n    };\r\n\r\n    Registry.prototype.toArray = function() {\r\n        var keys = _.keys(storage);\r\n        return _.map(keys, function(k){\r\n            return storage[k];\r\n        });\r\n    };\r\n\r\n    Registry.prototype.toString = function() {\r\n        return 'Graph.registry.Pallet';\r\n    };\r\n\r\n    Graph.registry.pallet = new Registry();\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.layout.Layout = Graph.extend({\r\n        \r\n        props: {\r\n            // view config\r\n            fit: true,\r\n            view: null,\r\n            width: 0,\r\n            height: 0,\r\n\r\n            // router config\r\n            router: {\r\n                type: 'orthogonal'\r\n            },\r\n\r\n            link: {\r\n                smooth: false,\r\n                smoothness: 6\r\n            }\r\n        },\r\n        \r\n        view: null,\r\n\r\n        cached: {\r\n            offset: null,\r\n            position: null\r\n        },\r\n\r\n        constructor: function(view, options) {\r\n            _.assign(this.props, options || {});\r\n            this.props.view = view.guid();\r\n        },\r\n\r\n        view: function() {\r\n            return Graph.registry.vector.get(this.props.view);\r\n        },\r\n\r\n        paper: function() {\r\n            return this.view().paper();\r\n        },\r\n\r\n        offset: function() {\r\n            // TODO: please fix...\r\n            return this.position();\r\n        },\r\n\r\n        position: function() {\r\n            var position = this.cached.position;\r\n            var view, node;\r\n\r\n            if ( ! position) {\r\n                view = this.view();\r\n                node = view.isViewport() ? view.parent().node() : view.node();\r\n\r\n                position = node.getBoundingClientRect();\r\n                this.cached.position = position;\r\n            }\r\n\r\n            return position;\r\n        },\r\n\r\n        center: function() {\r\n            var center = this.cached.center;\r\n\r\n            if ( ! center) {\r\n                var position = this.position();\r\n\r\n                center = {\r\n                    x: position.width / 2,\r\n                    y: position.height / 2\r\n                };\r\n\r\n                this.cached.center = _.extend({}, center);\r\n            }\r\n            \r\n            return center;\r\n        },\r\n\r\n        scale: function() {\r\n            return this.view().matrix().scale();\r\n        },\r\n\r\n        width: function() {\r\n            var view, bbox, width;\r\n\r\n            view = this.view();\r\n\r\n            if (view.isViewport()) {\r\n                width = this.paper().width();\r\n            } else {\r\n                bbox  = view.bbox();\r\n                width = bbox.width();\r\n            }\r\n\r\n            view = bbox = null;\r\n            return width;\r\n        },\r\n\r\n        height: function() {\r\n            var view, bbox, height;\r\n\r\n            view = this.view();\r\n\r\n            if (view.isViewport()) {\r\n                height = this.paper().height();\r\n            } else {\r\n                bbox   = view.bbox();\r\n                height = bbox.height();\r\n            }\r\n\r\n            view = bbox = null;\r\n            return height;\r\n        },\r\n        \r\n        invalidate: function() {\r\n            this.cached.offset = null;\r\n            this.cached.center = null;\r\n            this.cached.position = null;\r\n        },\r\n\r\n        grabVector: function(event) {\r\n            var target = Graph.event.target(event);\r\n            return Graph.registry.vector.get(target);\r\n        },\r\n\r\n        grabLink: function(event) {\r\n            var target = Graph.event.target(event);\r\n            return Graph.registry.link.get(target);\r\n        },\r\n\r\n        pointerLocation: function(pointer) {\r\n            var x = pointer.clientX,\r\n                y = pointer.clientY,\r\n                position = this.position(),\r\n                matrix = this.view().matrix(),\r\n                invert = matrix.clone().invert(),\r\n                scale  = matrix.scale(),\r\n                location = {\r\n                    x: invert.x(x, y),\r\n                    y: invert.y(x, y)\r\n                };\r\n\r\n            \r\n            location.x -= position.left / scale.x;\r\n            location.y -= position.top / scale.y;    \r\n            \r\n            matrix = invert = null;\r\n\r\n            return location;\r\n        },\r\n\r\n        screenLocation: function(coord) {\r\n            var screen = this.view().node().getScreenCTM();\r\n                matrix = Graph.matrix(\r\n                    screen.a,\r\n                    screen.b,\r\n                    screen.c,\r\n                    screen.d,\r\n                    screen.e,\r\n                    screen.f\r\n                );\r\n\r\n            var x = matrix.x(coord.x, coord.y),\r\n                y = matrix.y(coord.x, coord.y);\r\n\r\n            coord.x = x;\r\n            coord.y = y;\r\n            \r\n            return coord;\r\n        },\r\n\r\n        dragSnapping: function() {\r\n            return {\r\n                mode: 'anchor',\r\n                x: 1,\r\n                y: 1\r\n            };\r\n        },\r\n\r\n        routerType: function() {\r\n            return this.props.router.type;\r\n        },\r\n        \r\n        createRouter: function(source, target, options) {\r\n            var clazz, router;\r\n\r\n            clazz   = Graph.router[_.capitalize(this.props.router.type)];\r\n            options = _.extend({}, this.props.router, options || {});\r\n            router  = Graph.factory(clazz, [this.view(), source, target, options]);\r\n\r\n            return router;\r\n        },\r\n        \r\n        createLink: function(router, options) {\r\n            var clazz, link;\r\n\r\n            clazz   = Graph.link[_.capitalize(this.props.router.type)];\r\n            options = _.extend({}, this.props.link, options || {});\r\n            link    = Graph.factory(clazz, [router, options]);\r\n\r\n            return link;\r\n        },\r\n\r\n        refresh: function(vector) {\r\n            this.fire('refresh');\r\n        },\r\n\r\n        arrangeLinks: function() {\r\n            var scope = this.view().paper().guid(),\r\n                links = Graph.registry.link.collect(scope);\r\n            \r\n            if (links.length) {\r\n                \r\n                var inspect = [];\r\n                \r\n                _.forEach(links, function(link){\r\n                    if (link.cached.convex) {\r\n                        inspect.push(link.guid());\r\n                    }\r\n                });\r\n                \r\n                // TODO: research for sweepline algorithm\r\n                \r\n                var sweeper = new Graph.util.Sweeplink(links),\r\n                    convex = sweeper.findConvex();\r\n                \r\n                var key, link, idx;\r\n                \r\n                for (key in convex) {\r\n                    link = Graph.registry.link.get(key);\r\n                    \r\n                    link.reloadConvex(convex[key]);\r\n                    link.reset(true);\r\n                    \r\n                    idx = _.indexOf(inspect, key);\r\n                    \r\n                    if (idx > -1) {\r\n                        inspect.splice(idx, 1);\r\n                    }\r\n                }\r\n                \r\n                if (inspect.length) {\r\n                    _.forEach(inspect, function(key){\r\n                        var link = Graph.registry.link.get(key);\r\n                        \r\n                        link.removeConvex();\r\n                        link.reset(true);\r\n                    });\r\n                }\r\n                \r\n                sweeper.destroy();\r\n                sweeper = null;\r\n            }\r\n        },\r\n\r\n        arrangeShapes: function() {\r\n            \r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.layout.Layout';\r\n        }\r\n        \r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.shape.activity.Router = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'Route',\r\n            mode: 'xor', // none | parallel | or | xor | complex | event\r\n            width: 100,\r\n            height: 100,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            type: 'activity.router',\r\n            icon: Graph.icons.ROUTER_NONE,\r\n            style: 'graph-shape-activity-router'\r\n        },\r\n\r\n        constructor: function() {\r\n            if (this.props.mode != 'none') {\r\n                this.props.width = this.props.height = 50;\r\n            }\r\n            this.superclass.prototype.constructor.apply(this, arguments);\r\n        },\r\n\r\n        initMetadata: function() {\r\n            this.metadata.tools = [\r\n                {\r\n                    name: 'mode-none',\r\n                    icon: Graph.icons.ROUTER_NONE,\r\n                    title: Graph._('Change to default mode'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onModeClick, this, _, 'none')\r\n                },\r\n                {\r\n                    name: 'mode-or',\r\n                    icon: Graph.icons.ROUTER_OR,\r\n                    title: Graph._('Change to OR mode'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onModeClick, this, _, 'or')\r\n                },\r\n                {\r\n                    name: 'mode-xor',\r\n                    icon: Graph.icons.ROUTER_XOR,\r\n                    title: Graph._('Change to XOR mode'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onModeClick, this, _, 'xor')\r\n                },\r\n                {\r\n                    name: 'mode-parallel',\r\n                    icon: Graph.icons.ROUTER_PARALLEL,\r\n                    title: Graph._('Change to parallel mode'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onModeClick, this, _, 'parallel')\r\n                },\r\n                {\r\n                    name: 'config',\r\n                    icon: Graph.icons.CONFIG,\r\n                    title: Graph._('Click to config shape'),\r\n                    enabled: true\r\n                },\r\n                {\r\n                    name: 'link',\r\n                    icon: Graph.icons.LINK,\r\n                    title: Graph._('Click to start shape linking'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onLinkToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtofront',\r\n                    icon: Graph.icons.SEND_TO_FRONT,\r\n                    title: Graph._('Send to front'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onFrontToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtoback',\r\n                    icon: Graph.icons.SEND_TO_BACK,\r\n                    title: Graph._('Send to back'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBackToolClick, this)\r\n                },\r\n                {\r\n                    name: 'trash',\r\n                    icon: Graph.icons.TRASH,\r\n                    title: Graph._('Click to remove shape'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onTrashToolClick, this)\r\n                }\r\n            ];\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, label, mode;\r\n\r\n            var points = [\r\n                this.props.width / 2, 0,\r\n                this.props.width, this.props.height / 2,\r\n                this.props.width / 2, this.props.height,\r\n                0, this.props.height / 2\r\n            ];\r\n\r\n            var cx = points[0],\r\n                cy = points[3];\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Polygon(points))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .data('text', this.props.label)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n            \r\n            pmgr.install('dragger', block, {ghost: true, cls: Graph.styles.SHAPE_DRAG});\r\n            pmgr.install('resizer', block);\r\n            pmgr.install('editor',  block);\r\n            pmgr.install('network', block, {wiring: 'v:v'});\r\n            pmgr.install('snapper', block);\r\n\r\n            block.on('edit.shape',      _.bind(this.onLabelEdit, this));\r\n            block.on('beforedrag.shape', _.bind(this.onBeforeDrag, this));\r\n            block.on('afterdrag.shape',   _.bind(this.onAfterDrag, this));\r\n            block.on('afterresize.shape',    _.bind(this.onAfterResize, this));\r\n            block.on('beforedestroy.shape',    _.bind(this.onBeforeDestroy, this));\r\n            block.on('afterdestroy.shape',    _.bind(this.onAfterDestroy, this));\r\n            block.on('select.shape',    _.bind(this.onSelect, this));\r\n            block.on('deselect.shape',  _.bind(this.onDeselect, this));\r\n            block.on('connect.shape', _.bind(this.onConnect, this));\r\n\r\n            label = (new Graph.svg.Text(cx, cy, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n\r\n            shape = block = label = null;\r\n\r\n            this.mode(this.props.mode);\r\n        },\r\n\r\n        mode: function(mode) {\r\n            if (mode === undefined) {\r\n                return this.props.mode;\r\n            }\r\n            \r\n            this.props.mode = mode;\r\n\r\n            var inner;\r\n\r\n            if (this.props.mode != 'none') {\r\n                \r\n                this.component('label').hide();\r\n                this.component('block').resizable().disable();\r\n\r\n                if (this.components.inner) {\r\n                    this.component('inner').remove();\r\n                }\r\n\r\n                var shape = this.component();\r\n\r\n                switch(mode) {\r\n                    case 'parallel':\r\n                        inner = (new Graph.svg.Path('M 10 25 L 25 25 L 25 40 L 25 25 L 40 25 L 25 25 L 25 10'));\r\n                        break;\r\n                    case 'or':\r\n                        inner = (new Graph.svg.Circle(25, 25, 10));\r\n                        break;\r\n                    case 'xor':\r\n                        inner = (new Graph.svg.Path('M 15 15 L 25 25 L 15 35 L 25 25 L 35 35 L 25 25 L 35 15'));\r\n                        break;\r\n                }\r\n\r\n                if (inner) {\r\n                    inner.addClass('comp-inner');\r\n                    inner.selectable(false);\r\n                    inner.clickable(false);\r\n                    inner.render(shape);\r\n\r\n                    this.components.inner = inner.guid();\r\n                }\r\n            } else {\r\n                this.component('label').show();\r\n                this.component('block').resizable().enable();\r\n\r\n                inner = this.component('inner');\r\n\r\n                if (inner) {\r\n                    inner.remove();\r\n                    this.components.inner = null;\r\n                }\r\n\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        width: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.width;\r\n            }\r\n\r\n            var box = this.component('block').bbox().toJson(),\r\n                sx = value / this.props.width,\r\n                sy = 1,\r\n                cx = box.x,\r\n                cy = (box.y + box.y2) / 2,\r\n                dx = 0,\r\n                dy = 0;\r\n\r\n            this.component('block').resize(sx, sy, cx, cy, dx, dy);\r\n            this.component().dirty(true);\r\n\r\n            this.props.width = value;\r\n            return this;\r\n        },\r\n\r\n        height: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.height;\r\n            }\r\n\r\n            var block = this.component('block'),\r\n                box = block.bbox().toJson(),\r\n                sx = 1,\r\n                sy = value / this.props.height,\r\n                cx = (box.x + box.x2) / 2,\r\n                cy = box.y,\r\n                dx = 0,\r\n                dy = 0;\r\n\r\n            var resize = block.resize(sx, sy, cx, cy, dx, dy);\r\n            block.fire('afterresize', resize);\r\n\r\n            this.props.height = value;\r\n            return this;\r\n        },\r\n\r\n        refresh: function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                label = this.component('label');\r\n\r\n            var bound, matrix;\r\n\r\n            bound = block.bbox().toJson();\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            var points = [\r\n                bound.width / 2, 0,\r\n                bound.width, bound.height / 2,\r\n                bound.width / 2, bound.height,\r\n                0, bound.height / 2\r\n            ];\r\n\r\n            block.attr({\r\n                points: _.join(points, ',')\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            label.attr({\r\n                x: bound.width  / 2,\r\n                y: bound.height / 2\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n            // update props\r\n\r\n            matrix = shape.matrix();\r\n\r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            matrix = null;\r\n            bound  = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Router';\r\n        },\r\n\r\n        onModeClick: function(e, mode) {\r\n            this.mode(mode);\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n    \r\n    var Link = Graph.link.Link;\r\n    \r\n    Graph.link.Directed = Graph.extend(Link, {\r\n        \r\n        renderControl: function() {\r\n            var me = this, editor = me.component('editor');\r\n\r\n            if (me.cached.controls) {\r\n                _.forEach(me.cached.controls, function(c){\r\n                    c = Graph.registry.vector.get(c);\r\n                    c.remove();\r\n                });\r\n                me.cached.controls = null;\r\n            }\r\n\r\n            var points = this.cached.bendpoints,\r\n                maxlen = points.length - 1,\r\n                linkid = me.guid(),\r\n                controls = [],\r\n                controlImage = Graph.config.base + 'img/' + Graph.config.resizer.image,\r\n                controlSize = Graph.config.resizer.size;\r\n\r\n            _.forEach(points, function(dot, i){\r\n                \r\n                var control = (new Graph.svg.Image(\r\n                    controlImage,\r\n                    dot.x - controlSize / 2,\r\n                    dot.y - controlSize / 2,\r\n                    controlSize,\r\n                    controlSize\r\n                ));\r\n                \r\n                control.selectable(false);\r\n                control.removeClass(Graph.styles.VECTOR);\r\n                \r\n                if (i === 0) {\r\n                    control.addClass(Graph.styles.LINK_TAIL);\r\n                    control.elem.data('pole', 'tail');\r\n                } else if (i === maxlen) {\r\n                    control.addClass(Graph.styles.LINK_HEAD);\r\n                    control.elem.data('pole', 'head');\r\n                }\r\n                \r\n                control.elem.group('graph-link');\r\n                control.elem.data(Graph.string.ID_LINK, linkid);\r\n                \r\n                var context = {\r\n                    trans: (i === 0 || i === maxlen) ? 'CONNECT' : 'BENDING',\r\n                    index: dot.index,\r\n                    space: dot.space,\r\n                    point: {\r\n                        x: dot.x,\r\n                        y: dot.y\r\n                    },\r\n                    event: {\r\n                        x: dot.x,\r\n                        y: dot.y\r\n                    },\r\n                    range: {\r\n                        start: dot.range[0],\r\n                        end:   dot.range[1]\r\n                    },\r\n                    delta: {\r\n                        x: 0,\r\n                        y: 0\r\n                    },\r\n                    snap: {\r\n                        hor: [],\r\n                        ver: []\r\n                    }\r\n                };\r\n                \r\n                control.draggable({ghost: false});\r\n                control.cursor('default');\r\n                \r\n                control.on('beforedrag', _.bind(me.onControlStart, me, _, context, control));\r\n                control.on('drag',  _.bind(me.onControlMove,  me, _, context, control));\r\n                control.on('afterdrag',   _.bind(me.onControlEnd,   me, _, context, control));\r\n                \r\n                control.render(editor);\r\n                controls.push(control.guid());\r\n            });\r\n            \r\n            me.cached.controls = controls;\r\n            controls = null;\r\n        },\r\n        \r\n        onControlStart: function(e, context, control) {\r\n            this.router.initTrans(context);\r\n            \r\n            if (context.trans == 'CONNECT') {\r\n                var paper = this.component().paper();\r\n                if (paper) {\r\n                    paper.addClass('linking');\r\n                }\r\n            }\r\n\r\n            var snaphor = context.snap.hor,\r\n                snapver = context.snap.ver;\r\n            \r\n            control.draggable().snap([\r\n                function(x, y){\r\n                    var sx = Graph.util.snapValue(x, snapver),\r\n                        sy = Graph.util.snapValue(y, snaphor);\r\n                    \r\n                    return {\r\n                        x: sx,\r\n                        y: sy,\r\n                        range: 10\r\n                    };\r\n                }\r\n            ]);\r\n            \r\n            _.forEach(this.cached.controls, function(id){\r\n                var c = Graph.registry.vector.get(id);\r\n                if (c && c !== control) {\r\n                    c.hide();\r\n                }\r\n            });\r\n            \r\n            control.show();\r\n        },\r\n        \r\n        onControlMove: function(e, context, control) {\r\n            var me = this;\r\n            \r\n            context.delta.x += e.dx;\r\n            context.delta.y += e.dy;\r\n            \r\n            var x1, y1, x2, y2;\r\n            \r\n            x1 = context.event.x,\r\n            y1 = context.event.y;\r\n            \r\n            if (context.trans == 'BENDING') {\r\n                me.router.bending(context, function(result){\r\n                    me.reload(result.command, true);\r\n                });\r\n            } else {\r\n                me.router.connecting(context, function(result){\r\n                    me.reload(result.command, true);\r\n                });\r\n            }\r\n            \r\n            x2 = context.event.x,\r\n            y2 = context.event.y;\r\n            \r\n            // update dragger\r\n            e.originalData.dx = (x2 - x1);\r\n            e.originalData.dy = (y2 - y1);\r\n        },\r\n        \r\n        onControlEnd: function(e, context, control) {\r\n            this.router.stopTrans(context);\r\n\r\n            if (context.trans == 'CONNECT') {\r\n                var paper = this.component().paper();\r\n                if (paper) {\r\n                    paper.removeClass('linking');\r\n                }\r\n            }\r\n\r\n            this.reload(this.router.command());\r\n            this.invalidate();\r\n            this.resumeControl();\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.link.Orthogonal = Graph.extend(Graph.link.Link, {\r\n\r\n        reload: function(command, silent) {\r\n            var convex, smooth, radius, routes, maxlen, segments;\r\n            \r\n            silent = _.defaultTo(silent, false);\r\n            convex = this.cached.convex;\r\n            smooth = this.props.smooth;\r\n\r\n            if (convex) {\r\n                var points = this.router.waypoints();\r\n\r\n                if ( ! points) {\r\n                    return;\r\n                }\r\n\r\n                routes = points.slice();\r\n                maxlen = routes.length - 1;\r\n\r\n                segments = [];\r\n\r\n                _.forEach(routes, function(curr, i){\r\n                    var prev = curr,\r\n                        next = routes[i + 1];\r\n\r\n                    var item;\r\n\r\n                    if (i === 0) {\r\n                        item = ['M', curr.x, curr.y];\r\n                    } else {\r\n                        item = ['L', curr.x, curr.y];\r\n                    }\r\n\r\n                    segments.push(item);\r\n\r\n                    if (convex[i]) {\r\n                        _.forEach(convex[i], function(c){\r\n                            var conseg = Graph.util.convexSegment(c, prev, next);\r\n                            if (conseg) {\r\n                                segments.push(conseg[0], conseg[1]);\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                command = Graph.util.segments2path(segments);\r\n            }\r\n            \r\n            if (smooth) {\r\n                radius = this.props.smoothness || 6;\r\n                segments = segments || Graph.util.path2segments(command).slice();\r\n\r\n                var item, prev, next, curr, i;\r\n                var bend;\r\n\r\n                for (i = 0; i < segments.length; i++) {\r\n                    item = segments[i];\r\n                    next = segments[i + 1];\r\n\r\n                    bend = !!(item[0] == 'L' && next && next[0] != 'Q');\r\n\r\n                    if (bend) {\r\n                        curr = {\r\n                            x: item[item.length - 2],\r\n                            y: item[item.length - 1]\r\n                        };\r\n\r\n                        prev = segments[i - 1];\r\n\r\n                        if (prev && next) {\r\n                            var ss = Graph.util.smoothSegment(\r\n                                curr,\r\n                                { x: prev[prev.length - 2], y: prev[prev.length - 1] },\r\n                                { x: next[next.length - 2], y: next[next.length - 1] },\r\n                                radius\r\n                            );\r\n\r\n                            if (ss) {\r\n                                segments.splice(i, 1, ss[0], ss[1]);\r\n                                i++;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                command = Graph.util.segments2path(segments);\r\n\r\n            }\r\n\r\n            command = command || '';\r\n\r\n            this.component('coat').attr('d', command).dirty(true);\r\n            this.component('path').attr('d', command);\r\n            this.invalidate();\r\n\r\n            if ( ! silent) {\r\n                this.refresh();\r\n                this.fire('change');\r\n                Graph.topic.publish('link:change');\r\n            }\r\n        },\r\n\r\n        renderControl: function() {\r\n            var me = this, editor = me.component('editor');\r\n\r\n            if (me.cached.controls) {\r\n                _.forEach(me.cached.controls, function(c){\r\n                    c = Graph.registry.vector.get(c);\r\n                    c.remove();\r\n                });\r\n                me.cached.controls = null;\r\n            }\r\n\r\n            var points = this.cached.bendpoints,\r\n                linkid = me.guid(),\r\n                maxlen = points.length - 1,\r\n                controls = [],\r\n                controlImage = Graph.config.base + 'img/' + Graph.config.resizer.image,\r\n                controlSize = Graph.config.resizer.size;\r\n\r\n            _.forEach(points, function(dot, i){\r\n                var control, cursor, align, axis, drag;\r\n\r\n                control = (new Graph.svg.Image(\r\n                    controlImage,\r\n                    dot.x - controlSize / 2,\r\n                    dot.y - controlSize / 2,\r\n                    controlSize,\r\n                    controlSize\r\n                ));\r\n\r\n                control.selectable(false);\r\n                control.removeClass(Graph.styles.VECTOR);\r\n                control.elem.group('graph-link');\r\n                control.elem.data(Graph.string.ID_LINK, linkid);\r\n\r\n                drag = {ghost: false};\r\n                axis = null;\r\n                cursor = 'default';\r\n\r\n                if (i === 0) {\r\n                    control.addClass(Graph.styles.LINK_TAIL);\r\n                    control.elem.data('pole', 'tail');\r\n                } else if (i === maxlen) {\r\n                    control.addClass(Graph.styles.LINK_HEAD);\r\n                    control.elem.data('pole', 'head');\r\n                } else {\r\n                    align  = Graph.util.pointAlign(dot.start, dot.end);\r\n                    axis   = align == 'v' ? 'y' : 'x';\r\n                    cursor = axis  == 'x' ? 'ew-resize' : 'ns-resize';\r\n\r\n                    drag = {ghost:false, axis: axis};\r\n                }\r\n\r\n                var context = {\r\n\r\n                    trans: (i === 0 || i === maxlen) ? 'CONNECT' : 'BENDING',\r\n                    index: dot.index,\r\n                    axis: axis,\r\n                    cursor: cursor,\r\n                    point: {\r\n                        x: dot.x,\r\n                        y: dot.y\r\n                    },\r\n\r\n                    ranges: {\r\n                        start: dot.range[0],\r\n                        end:   dot.range[1]\r\n                    },\r\n\r\n                    event: {\r\n                        x: dot.x,\r\n                        y: dot.y\r\n                    },\r\n\r\n                    snap: {\r\n                        hor: [],\r\n                        ver: []\r\n                    },\r\n\r\n                    delta: {\r\n                        x: 0,\r\n                        y: 0\r\n                    }\r\n                };\r\n\r\n\r\n                control.draggable(drag);\r\n                control.cursor(cursor);\r\n\r\n                control.on('beforedrag', _.bind(me.onControlStart, me, _, context, control));\r\n                control.on('drag',  _.bind(me.onControlMove,  me, _, context));\r\n                control.on('afterdrag',   _.bind(me.onControlEnd,   me, _, context, control));\r\n\r\n                control.render(editor);\r\n                controls.push(control.guid());\r\n            });\r\n\r\n            me.cached.controls = controls;\r\n            controls = null;\r\n        },\r\n\r\n        onControlStart: function(e, context, control) {\r\n            this.component('coat').cursor(context.cursor);\r\n            this.router.initTrans(context);\r\n\r\n            if (context.trans == 'CONNECT') {\r\n                var paper = this.component().paper();\r\n                if (paper) {\r\n                    paper.addClass('linking');\r\n                }\r\n            }\r\n\r\n            // snapping\r\n            var snaphor = context.snap.hor,\r\n                snapver = context.snap.ver;\r\n\r\n            control.draggable().snap([\r\n                function(x, y) {\r\n                    var sx = Graph.util.snapValue(x, snapver),\r\n                        sy = Graph.util.snapValue(y, snaphor);\r\n\r\n                    return {\r\n                        x: sx,\r\n                        y: sy,\r\n                        range: 10\r\n                    };\r\n                }\r\n            ]);\r\n\r\n            _.forEach(this.cached.controls, function(id){\r\n                var c = Graph.registry.vector.get(id);\r\n                if (c && c !== control) {\r\n                    c.hide();\r\n                }\r\n            });\r\n\r\n            control.show();\r\n            this.removeConvex();\r\n        },\r\n\r\n        onControlMove: function(e, context) {\r\n            var me = this;\r\n\r\n            context.delta.x += e.dx;\r\n            context.delta.y += e.dy;\r\n\r\n            var x1, y1, x2, y2, dx, dy;\r\n\r\n            x1 = context.event.x;\r\n            y1 = context.event.y;\r\n\r\n            if (context.trans == 'BENDING') {\r\n                me.router.bending(context, function(result){\r\n                    me.reload(result.command, true);\r\n                });\r\n            } else {\r\n                me.router.connecting(context, function(result){\r\n                    me.reload(result.command, true);\r\n                });\r\n            }\r\n\r\n            x2 = context.event.x;\r\n            y2 = context.event.y;\r\n\r\n            dx = x2 - x1;\r\n            dy = y2 - y1;\r\n\r\n            // update dragger\r\n            e.originalData.dx = dx;\r\n            e.originalData.dy = dy;\r\n        },\r\n\r\n        onControlEnd: function(e, context, control) {\r\n            this.component('coat').cursor('pointer');\r\n            this.router.stopTrans(context);\r\n\r\n            if (context.trans == 'CONNECT') {\r\n                var paper = this.component().paper();\r\n                if (paper) {\r\n                    paper.removeClass('linking');\r\n                }\r\n            }\r\n\r\n            this.reload(this.router.command());\r\n            this.invalidate();\r\n            this.resumeControl();\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.link.Orthogonal';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var KEY_TRESHOLD = 1e-9;\r\n    var SLOPE_TRESHOLD = .1;\r\n    \r\n    var Sweeplink = Graph.util.Sweeplink = function(links) {\r\n        \r\n        var me = this;\r\n        \r\n        me.points = [];\r\n        me.queue = [];\r\n        me.lines = [];\r\n        me.found = [];\r\n        me.process = [];\r\n        \r\n        _.forEach(links, function(link){\r\n            var dots = me.extract(link);\r\n            Array.prototype.push.apply(me.points, dots);\r\n        });\r\n\r\n        _.forEach(me.points, function(p, i){\r\n            if (i % 2) me.lines.push(_.sortBy( [p, me.points[i - 1]], 'y' ));\r\n        });\r\n        \r\n        _.forEach(me.lines, function(d, i){\r\n            if (d[0].x == d[1].x) {\r\n                d[0].x += SLOPE_TRESHOLD;\r\n                d[1].x -= SLOPE_TRESHOLD;\r\n            }\r\n\r\n            if (d[0].y == d[1].y) {\r\n                d[0].y -= SLOPE_TRESHOLD;\r\n                d[1].y += SLOPE_TRESHOLD;\r\n            }\r\n\r\n            d[0].line = d;\r\n            d[1].line = d;\r\n        });\r\n        \r\n    };\r\n\r\n    Sweeplink.prototype.constructor = Sweeplink;\r\n\r\n    Sweeplink.prototype.extract = function(link) {\r\n        var segments = link.router.path().curve().segments, \r\n            dots = [];\r\n\r\n        var x, y;\r\n        \r\n        _.forEach(segments, function(s, i){\r\n            var p = i === 0 ? {x: s[1], y: s[2]} : {x: s[5], y: s[6]};\r\n            var q = segments[i + 1];\r\n            \r\n            if (q) {\r\n                \r\n                q = {x: q[5], y: q[6]};\r\n                \r\n                Graph.util.movepoint(p, q, -20);\r\n                Graph.util.movepoint(q, p, -20);\r\n\r\n                p.x = Math.round(p.x, 3);\r\n                p.y = Math.round(p.y, 3);\r\n\r\n                q.x = Math.round(q.x, 3);\r\n                q.y = Math.round(q.y, 3);\r\n\r\n                p.link = link;\r\n                q.link = link;\r\n\r\n                p.range = i;\r\n                q.range = i + 1;\r\n\r\n                dots.push(p, q);\r\n            }\r\n            \r\n        });\r\n\r\n        return dots;\r\n    };\r\n\r\n    Sweeplink.prototype.findConvex = function() {\r\n        var me = this, linesByY;\r\n        \r\n        me.queue = createTree(me.points.slice())\r\n            .key(function(d){ return d.y + KEY_TRESHOLD * d.x; })\r\n            .order();\r\n        \r\n        me.found = [];\r\n        me.process = createTree([]);\r\n\r\n        for (var i = 0; i < me.queue.length && i < 1000; i++) {\r\n            \r\n            var d = me.queue[i];\r\n            var index, indexA, indexB, minIndex;\r\n            \r\n\r\n            if (d.line && d.line[0] == d) {\r\n                d.type = 'insert';\r\n                index = me.process\r\n                    .key(function(e){ return me.intercept(e, d.y - KEY_TRESHOLD / 1000); })\r\n                    .insert(d.line);\r\n                \r\n                me.validate(d.line, me.process[index + 1]);\r\n                me.validate(d.line, me.process[index - 1]);\r\n                \r\n            } else if (d.line) {\r\n                d.type = 'removal';\r\n                index = me.process.findIndex(d.line);\r\n                me.process.remove(d.line);\r\n                \r\n                me.validate(me.process[index - 1], me.process[index]);\r\n            } else if (d.lineA && d.lineB) {\r\n                me.process.key(function(e){ return me.intercept(e, d.y - KEY_TRESHOLD / 1000); });\r\n                \r\n                indexA = me.process.findIndex(d.lineA);\r\n                indexB = me.process.findIndex(d.lineB);\r\n                  \r\n                if (indexA == indexB) indexA = indexA + 1\r\n                  \r\n                me.process[indexA] = d.lineB;\r\n                me.process[indexB] = d.lineA;\r\n\r\n                minIndex = indexA < indexB ? indexA : indexB\r\n\r\n                me.validate(me.process[minIndex - 1], me.process[minIndex])\r\n                me.validate(me.process[minIndex + 1], me.process[minIndex + 2])\r\n            }\r\n        }\r\n        \r\n        var convex = {};\r\n        \r\n        _.forEach(this.found, function(f){\r\n            \r\n            var routes, rangeStart, rangeEnd, segmentAlign, segmentStart, segmentEnd,\r\n                alignA, alignB, line, link, guid;\r\n            \r\n            alignA = Graph.util.pointAlign(f.lineA[0], f.lineA[1], 10);\r\n            alignB = Graph.util.pointAlign(f.lineB[0], f.lineB[1], 10);\r\n            \r\n            if (alignA != alignB) {\r\n                segmentAlign = alignA == 'v' ? alignA : alignB;\r\n                \r\n                line = alignA == 'v' ? f.lineA : f.lineB;\r\n                link = line[0].link;\r\n                guid = link.guid();\r\n                \r\n                routes = link.router.waypoints();\r\n                \r\n                rangeStart = Math.min(line[0].range, line[1].range),\r\n                rangeEnd   = Math.max(line[0].range, line[1].range);\r\n                \r\n                segmentStart = routes[rangeStart];\r\n                segmentEnd = routes[rangeEnd];\r\n                \r\n                if ( ! convex[guid]) {\r\n                    convex[guid] = {};\r\n                }\r\n                \r\n                if ( ! convex[guid][rangeStart]) {\r\n                    convex[guid][rangeStart] = createTree([])\r\n                        .key(function(c){\r\n                            if (c.segmentAlign == 'v') {\r\n                                if (c.segmentStart.x < c.segmentEnd.x) {\r\n                                    return c.x + c.segmentStart.x;\r\n                                } else {\r\n                                    return c.segmentStart.x - c.x;\r\n                                }\r\n                            } else {\r\n                                if (c.segmentStart.y < c.segmentEnd.y) {\r\n                                    return c.y + c.segmentStart.y;\r\n                                } else {\r\n                                    return c.segmentStart.y - c.y;\r\n                                }\r\n                            }\r\n                        });\r\n                }\r\n                \r\n                convex[guid][rangeStart].insert({\r\n                    x: f.x,\r\n                    y: f.y,\r\n                    link: link.guid(),\r\n                    rangeStart: rangeStart,\r\n                    rangeEnd: rangeEnd,\r\n                    segmentAlign: segmentAlign,\r\n                    segmentStart: segmentStart,\r\n                    segmentEnd: segmentEnd\r\n                });\r\n                \r\n            }\r\n            \r\n        });\r\n        \r\n        return convex;\r\n    };\r\n    \r\n    Sweeplink.prototype.intersect = function(a, b, c, d) {\r\n        var det = (a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x),\r\n            l   = a.x * b.y - a.y * b.x,\r\n            m   = c.x * d.y - c.y * d.x,\r\n            ix  = (l * (c.x - d.x) - m * (a.x - b.x)) / det,\r\n            iy  = (l * (c.y - d.y) - m * (a.y - b.y)) / det,\r\n            i   = {x: ix, y: iy};\r\n\r\n        i.isOverlap = (ix == a.x && iy == a.y) || (ix == b.x && iy == b.y)\r\n        i.isIntersection = ! (a.x < ix ^ ix < b.x) && ! (c.x < ix ^ ix < d.x) && ! i.isOverlap && det\r\n        \r\n        // if (isNaN(i.x)) debugger\r\n\r\n        return i;\r\n    };\r\n    \r\n    Sweeplink.prototype.validate = function(a, b) {\r\n        if ( ! a || ! b ) return;\r\n        var i = this.intersect(a[0], a[1], b[0], b[1]);\r\n        \r\n        i.lineA = a;\r\n        i.lineB = b;\r\n        \r\n        if (i.isIntersection) {\r\n            this.found.push(i) && this.queue.insert(i);\r\n        }\r\n    };\r\n\r\n    Sweeplink.prototype.intercept = function(line, y) {\r\n        var a = line[0], \r\n            b = line[1],\r\n            m = (a.y - b.y) / (a.x - b.x);\r\n\r\n        return (y - a.y + m * a.x) / m;\r\n    }\r\n\r\n    Sweeplink.prototype.destroy = function() {\r\n        this.points = null;\r\n        this.lines = null;\r\n        this.found = null;\r\n        this.queue = null;\r\n        this.process = null;\r\n    };\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function createTree(array) {\r\n        var key = function(d){ return d; };\r\n        var bisect = _.bisector(function(d){ return key(d); }).left;\r\n        \r\n        array.insert = function(d) {\r\n            var i = array.findIndex(d);\r\n            var v = key(d);\r\n            if (array[i] && v == key(array[i])) return;\r\n            array.splice(i, 0, d);\r\n            return i;\r\n        };\r\n\r\n        array.remove = function(d) {\r\n            var i = array.findIndex(d);\r\n            array.splice(i, 1);\r\n            return i;\r\n        };\r\n\r\n        array.findIndex = function(d) {\r\n            return bisect(array, key(d));\r\n        };\r\n\r\n        array.key = function(f) {\r\n            key = f;\r\n            return array;\r\n        };\r\n\r\n        array.swap = function() {\r\n\r\n        };\r\n\r\n        array.order = function() {\r\n            array.sort(_.ascendingKey(key));\r\n            return array;\r\n        };\r\n\r\n        return array;\r\n    }\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Plugin = Graph.extend({\r\n\r\n        props: {\r\n            vector: null,\r\n            activator: 'tool'\r\n        },\r\n\r\n        cached: {\r\n            \r\n        },\r\n\r\n        /**\r\n         * Get/set options\r\n         */\r\n        options: function(options) {\r\n\r\n        },\r\n        \r\n        vector: function() {\r\n            return Graph.registry.vector.get(this.props.vector);\r\n        },\r\n\r\n        invalidate: function() {\r\n            \r\n        },\r\n\r\n        enable: function(activator) {},\r\n\r\n        disable: function() {},\r\n\r\n        destroy: function() {}\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Manager = Graph.diagram.Manager = Graph.extend({\r\n\r\n        props: {\r\n            paper: null,\r\n            defaultType: 'activity'\r\n        },\r\n\r\n        pallets: [],\r\n        diagram: null,\r\n        snapshoot: [],\r\n\r\n        constructor: function(paper) {\r\n            this.props.paper = paper.guid();\r\n            paper.on('keynavdown', _.bind(this.onKeynavDown, this));\r\n        },\r\n\r\n        paper: function() {\r\n            return Graph.registry.vector.get(this.props.paper);\r\n        },\r\n\r\n        deselectAll: function() {\r\n            this.paper().collector().clearCollection();\r\n        },\r\n\r\n        removeSelection: function() {\r\n            var selection = this.paper().collector().collection.toArray().slice();\r\n                  \r\n            this.capture();\r\n\r\n            _.forEach(selection, function(vector){\r\n                vector.remove();\r\n            });\r\n        },\r\n\r\n        capture: function() {\r\n            // capture to snapshoot\r\n            if (this.diagram) {\r\n                // var data = this.diagram.toJson();\r\n                // this.snapshoot = [data];\r\n            }\r\n        },\r\n\r\n        undo: function() {\r\n            if (this.snapshoot.length) {\r\n                this.diagram.render(this.snapshoot[0]);\r\n            }\r\n        },\r\n\r\n        redo: function() {\r\n\r\n        },\r\n\r\n        addPallet: function(pallet) {\r\n            var me = this,\r\n                paper = me.paper(),\r\n                layout = paper.layout(),\r\n                scale = layout.scale(),\r\n                drawing = null;\r\n\r\n            me.pallets.push(pallet);\r\n\r\n            pallet.on({\r\n                pick: function(e) {\r\n\r\n                    paper.tool().activate('panzoom');\r\n\r\n                    if ( ! me.diagram) {\r\n                        me.create(me.props.defaultType);\r\n                    }\r\n\r\n                    var origin = layout.pointerLocation({\r\n                        clientX: e.origin.x,\r\n                        clientY: e.origin.y\r\n                    });\r\n\r\n                    var options = {\r\n                        left: origin.x,\r\n                        top: origin.y\r\n                    };\r\n\r\n                    var result = me.diagram.drawShape(e.shape, options);\r\n                    \r\n                    if (result.movable) {\r\n                        drawing = result.shape;\r\n                        scale = paper.layout().scale();\r\n                        drawing.component('block').dirty(true);\r\n                        drawing.component().dirty(true);\r\n                    } else {\r\n                        drawing = null;\r\n                        pallet.stopPicking();\r\n                    }\r\n\r\n                },\r\n                drag: function(e) {\r\n                    if (drawing) {\r\n                        var dx = e.dx,\r\n                            dy = e.dy;\r\n\r\n                        dx /= scale.x;\r\n                        dy /= scale.y;\r\n\r\n                        if (scale.x < 1) {\r\n                            dx += scale.x;\r\n                        }\r\n\r\n                        drawing.translate(dx, dy);\r\n                    }\r\n                },\r\n                drop: function(e) {\r\n                    if (drawing) {\r\n                        drawing = null;\r\n                    }\r\n                }\r\n            });\r\n\r\n        },\r\n\r\n        current: function() {\r\n            return this.diagram;\r\n        },\r\n\r\n        remove: function() {\r\n            if (this.diagram) {\r\n                this.diagram.remove();\r\n                this.diagram = null;\r\n\r\n                this.paper().fire('diagram.destroy');\r\n            }\r\n        },\r\n\r\n        create: function(type, options, silent) {\r\n            type = _.defaultTo(this.props.defaultType);\r\n\r\n            var clazz = Graph.diagram.type[_.capitalize(type)],\r\n                paper = this.paper();\r\n\r\n            this.diagram = Graph.factory(clazz, [paper, options]);\r\n            silent = _.defaultTo(silent, false);\r\n\r\n            if ( ! silent) {\r\n                paper.fire('diagram.create', {\r\n                    diagram: this.diagram\r\n                });\r\n            }\r\n\r\n            return this.diagram;\r\n        },\r\n\r\n        saveAsImage: function(type, filename) {\r\n            var exporter = new Graph.data.Exporter(this.paper());\r\n              \r\n            switch(type) {\r\n                case 'svg':\r\n                    exporter.exportSVG(filename);\r\n                    break;\r\n                case 'png':\r\n                    exporter.exportPNG(filename);\r\n                    break;\r\n                case 'jpg':\r\n                case 'jpeg':\r\n                    exporter.exportJPEG(filename);\r\n                    break;\r\n            }\r\n\r\n            exporter = null;\r\n        },\r\n\r\n        saveAsFile: function(callback) {\r\n            var exporter = new Graph.data.Exporter(this.paper());\r\n            exporter.exportFile(callback);\r\n            exporter = null;\r\n        },\r\n\r\n        saveAsBlob: function(callback) {\r\n            var exporter = new Graph.data.Exporter(this.paper());\r\n            return exporter.exportBlob(callback);\r\n        },\r\n\r\n        onKeynavDown: function(e) {\r\n            switch (e.keyCode) {\r\n                case Graph.event.DELETE:\r\n                    this.removeSelection();\r\n                    e.preventDefault();\r\n                    break;\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Definer = Graph.extend(Graph.plugin.Plugin, {\r\n        props: {\r\n            vector: null\r\n        },\r\n\r\n        definitions: {\r\n\r\n        },\r\n\r\n        components: {\r\n            holder: null\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            this.props.vector = vector.guid();\r\n\r\n            this.components.holder = Graph.$('<defs/>');\r\n            this.components.holder.prependTo(vector.elem);\r\n\r\n            if (vector.isPaper()) {\r\n                this.defineArrowMarker('marker-link-end');\r\n                this.defineCircleMarker('marker-link-start-circle');\r\n            }\r\n\r\n        },\r\n        \r\n        defineArrowMarker: function(id) {\r\n            if (this.definitions[id]) {\r\n                return this.definitions[id];\r\n            }\r\n\r\n            var marker = Graph.$(_.format(\r\n                '<marker id=\"{0}\" refX=\"{1}\" refY=\"{2}\" viewBox=\"{3}\" markerWidth=\"{4}\" markerHeight=\"{5}\" orient=\"{6}\">' + \r\n                    '<path d=\"{7}\" fill=\"{8}\" stroke-width=\"{9}\" stroke-linecap=\"{10}\" stroke-dasharray=\"{11}\">' + \r\n                    '</path>'+\r\n                '</marker>',\r\n                id, '11', '10', '0 0 20 20', '10', '10', 'auto',\r\n                'M 1 5 L 11 10 L 1 15 Z', '#000000', '1', 'round', '10000, 1'\r\n            ));\r\n\r\n            this.definitions[id] = marker;\r\n            this.components.holder.append(marker);\r\n\r\n            return marker;\r\n        },\r\n\r\n        defineCircleMarker: function(id) {\r\n            if (this.definitions[id]) {\r\n                return this.definitions[id];\r\n            }\r\n\r\n            var marker = Graph.$(_.format(\r\n                '<marker id=\"{0}\" refX=\"{1}\" refY=\"{2}\" viewBox=\"{3}\" markerWidth=\"{4}\" markerHeight=\"{5}\" orient=\"{6}\">' + \r\n                    '<circle cx=\"6\" cy=\"6\" r=\"4\" fill=\"none\" stroke=\"#000000\" stroke-width=\"1\" />' + \r\n                '</marker>',\r\n                id, '6', '6', '0 0 20 20', '10', '10', 'auto'\r\n            ));\r\n\r\n            this.definitions[id] = marker;\r\n            this.components.holder.append(marker);\r\n\r\n            return marker;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Definer';\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n    \r\n    // storages\r\n    var vendors = {};\r\n\r\n    var Reactor = Graph.plugin.Reactor = function(vector, listeners) {\r\n\r\n        var me = this,\r\n            node = vector.node(),\r\n            guid = vector.guid();\r\n\r\n        me.props = {\r\n            vector: guid\r\n        };\r\n        \r\n        me.listeners = listeners || {};\r\n\r\n        var vendor = vendors[guid] = interact(node);\r\n\r\n        vendor.on('down', function reactorDown(e){\r\n            var target = Graph.event.target(e);\r\n            if (target === node) {\r\n                e.originalType = 'pointerdown';\r\n                Graph.topic.publish('vector:pointerdown', {vector: vector});\r\n                vector.fire(e);\r\n            }\r\n        }, true);\r\n\r\n        vector.elem.on({\r\n            contextmenu: function(e) {\r\n                var target = Graph.event.target(e);\r\n                if (target === node) {\r\n                    vector.fire(e);\r\n                    // e.preventDefault();\r\n                }\r\n            }\r\n        });\r\n\r\n        vendor = null;\r\n\r\n    };\r\n\r\n    Reactor.prototype.constructor = Reactor;\r\n\r\n    Reactor.prototype.fire = function(eventType) {\r\n        var eventObject;\r\n\r\n        switch(eventType) {\r\n            case 'down':\r\n\r\n                eventObject = {\r\n                    type: 'mousedown'\r\n                };\r\n\r\n                break;\r\n        }\r\n\r\n        if (eventObject) {\r\n            // this.vendor().fire(eventObject);\r\n        }\r\n    };\r\n\r\n    Reactor.prototype.vendor = function() {\r\n        return vendors[this.props.vector];\r\n    };\r\n\r\n    Reactor.prototype.draggable = function(options) {\r\n        return this.vendor().draggable(options);\r\n    };\r\n\r\n    Reactor.prototype.dropzone = function(options) {\r\n        return this.vendor().dropzone(options);\r\n    };\r\n\r\n    Reactor.prototype.gesturable = function(options) {\r\n        return this.vendor().gesturable(options);\r\n    };\r\n\r\n    Reactor.prototype.destroy = function() {\r\n        var guid = this.props.vector,\r\n            vendor = vendors[guid];\r\n\r\n        if (vendor) {\r\n            vendor.unset();\r\n        }\r\n\r\n        delete vendors[guid];\r\n    };\r\n\r\n    Reactor.prototype.toString = function() {\r\n        return 'Graph.plugin.Reactor';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Transformer = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            scale: 1,\r\n            rotate: 0\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            this.actions = [];\r\n            this.props.vector = vector.guid();\r\n        },\r\n\r\n        transform: function(command) {\r\n            var me = this, segments = Graph.util.transform2segments(command);\r\n\r\n            _.forEach(segments, function(args){\r\n                var method = args.shift();\r\n                if (me[method] && _.isFunction(me[method])) {\r\n                    (function(){\r\n                        me[method].apply(me, args);\r\n                    }(method, args));    \r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        queue: function() {\r\n            var args = _.toArray(arguments);\r\n            \r\n            this.actions.push({\r\n                name: args.shift(),\r\n                args: args,\r\n                sort: this.actions.length\r\n            });\r\n\r\n            return this;\r\n        },\r\n        translate: function(dx, dy) {\r\n            dx = _.defaultTo(dx, 0);\r\n            dy = _.defaultTo(dy, 0);\r\n            this.queue('translate', dx, dy);\r\n            return this;\r\n        },\r\n        rotate: function(deg, cx, cy) {\r\n            if ( ! _.isUndefined(cx) && ! _.isUndefined(cy)) {\r\n                this.queue('rotate', deg, cx, cy);    \r\n            } else {\r\n                this.queue('rotate', deg);    \r\n            }\r\n            return this;\r\n        },\r\n        scale: function(sx, sy, cx, cy) {\r\n            sy = _.defaultTo(sy, sx);\r\n\r\n            if ( ! _.isUndefined(cx) && ! _.isUndefined(cy)) {\r\n                this.queue('scale', sx, sy, cx, cy);\r\n            } else {\r\n                this.queue('scale', sx, sy);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        matrix: function(a, b, c, d, e, f) {\r\n            this.queue('matrix', a, b, c, d, e, f);\r\n            return this;\r\n        },\r\n\r\n        commit: function(absolute, simulate) {\r\n            var me = this,\r\n                actions = me.actions,\r\n                vector = me.vector(),\r\n                events = {\r\n                    translate: false,\r\n                    rotate: false,\r\n                    scale: false\r\n                };\r\n\r\n            if ( ! actions.length) {\r\n                return;\r\n            }\r\n            \r\n            absolute = _.defaultTo(absolute, false);\r\n            simulate = _.defaultTo(simulate, false);\r\n            \r\n            var deg = 0, \r\n                dx = 0, \r\n                dy = 0, \r\n                sx = 1, \r\n                sy = 1;\r\n                \r\n            var mat = vector.matrix().clone();\r\n            \r\n            _.forEach(actions, function(act){\r\n                var arg = act.args,\r\n                    cmd = act.name,\r\n                    len = arg.length,\r\n                    inv = false;\r\n\r\n                if (absolute) {\r\n                    inv = mat.invert(true);\r\n                }\r\n                \r\n                var x1, y1, x2, y2, bb;\r\n                \r\n                if (cmd == 'translate' && len === 2) {\r\n                    if (absolute) {\r\n                        x1 = inv.x(0, 0);\r\n                        y1 = inv.y(0, 0);\r\n                        x2 = inv.x(arg[0], arg[1]);\r\n                        y2 = inv.y(arg[0], arg[1]);\r\n                        mat.translate(x2 - x1, y2 - y1);\r\n                    } else {\r\n                        mat.translate(arg[0], arg[1]);\r\n                    }\r\n                    events.translate = true;\r\n                } else if (cmd == 'rotate') {\r\n                    if (len == 1) {\r\n                        bb = bb || vector.bboxPristine().toJson();\r\n                        mat.rotate(arg[0], bb.x + bb.width / 2, bb.y + bb.height / 2);\r\n                        deg += arg[0];\r\n                    } else if (len == 3) {\r\n                        if (absolute) {\r\n                            x2 = inv.x(arg[1], arg[2]);\r\n                            y2 = inv.y(arg[1], arg[2]);\r\n                            mat.rotate(arg[0], x2, y2);\r\n                        } else {\r\n                            mat.rotate(arg[0], arg[1], arg[2]);\r\n                        }\r\n                        deg += arg[0];\r\n                    }\r\n                    events.rotate = true;\r\n                } else if (cmd == 'scale') {\r\n                    if (len === 1 || len === 2) {\r\n                        bb = bb || vector.bboxPristine().toJson();\r\n                        mat.scale(arg[0], arg[len - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\r\n                        sx *= arg[0];\r\n                        sy *= arg[len - 1];\r\n                    } else if (len === 4) {\r\n                        if (absolute) {\r\n                            x2 = inv.x(arg[2], arg[3]);\r\n                            y2 = inv.y(arg[2], arg[3]);\r\n                            mat.scale(arg[0], arg[1], x2, y2);\r\n                        } else {\r\n                            mat.scale(arg[0], arg[1], arg[2], arg[3]);\r\n                        }\r\n                        sx *= arg[0];\r\n                        sy *= arg[1];\r\n                    }\r\n                    events.scale = true;\r\n                } else if (cmd == 'matrix') {\r\n                    mat.multiply(arg[0], arg[1], arg[2], arg[3], arg[4], arg[5]);\r\n                }\r\n            });\r\n\r\n            if (simulate) {\r\n                this.actions = [];\r\n                return mat;\r\n            }\r\n            \r\n            vector.graph.matrix = mat;\r\n            vector.attr('transform', mat.toValue());\r\n\r\n\r\n            if (events.translate) {\r\n                events.translate = {\r\n                    dx: mat.e,\r\n                    dy: mat.f\r\n                };\r\n                this.fire('aftertranslate', events.translate);\r\n            }\r\n\r\n            if (events.rotate) {\r\n                events.rotate = {\r\n                    deg: deg\r\n                };\r\n                this.fire('afterrotate', events.rotate);\r\n            }\r\n\r\n            if (events.scale) {\r\n                events.scale = {\r\n                    sx: sx,\r\n                    sy: sy\r\n                };\r\n                this.fire('afterscale', events.scale);\r\n            }\r\n\r\n            this.actions = [];\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Transformer';\r\n        }\r\n    });\r\n    \r\n}());","\r\n(function(){\r\n    var global = this;\r\n\r\n    var Animator = Graph.plugin.Animator = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n\r\n            // default duration\r\n            duration: 1000,\r\n\r\n            // default easing\r\n            easing: 'linier'\r\n        },\r\n\r\n        stacks: [],\r\n\r\n        constructor: function(vector) {\r\n            this.props.vector = vector.guid();\r\n        },\r\n        \r\n        create: function(keyframes, duration, easing, callback) {\r\n            return new Animation(keyframes, duration, easing, callback);\r\n        },\r\n\r\n        animate: function(params, duration, easing, callback) {\r\n            var vector = this.vector(),\r\n                reset = _.extend({}, vector.attrs);\r\n\r\n            var scenes, animation;\r\n\r\n            if (params instanceof Animation ) {\r\n                animation = params;\r\n            } else {\r\n                duration = _.defaultTo(duration, this.props.duration);\r\n\r\n                if (_.isFunction(easing)) {\r\n                    callback = easing;\r\n                    easing = this.props.easing;\r\n                }\r\n\r\n                if ( ! easing) {\r\n                    easing = this.props.easing;\r\n                }\r\n\r\n                scenes = {\r\n                    100: params\r\n                };\r\n\r\n                animation = new Animation(scenes, duration, easing, callback);\r\n            }\r\n\r\n            if ( ! animation.count()) {\r\n                animation = null;\r\n                return;\r\n            }\r\n\r\n            reset.transform = vector.attrs.transform;\r\n            reset.matrix = vector.matrix().clone();\r\n\r\n            this.start(\r\n                animation, \r\n                animation.frame(0), \r\n                reset, \r\n                null\r\n            );\r\n\r\n            animation = null;\r\n\r\n            return this;\r\n        },\r\n\r\n        resume: function() {\r\n\r\n        },\r\n\r\n        pause: function() {\r\n\r\n        },\r\n\r\n        stop: function() {\r\n\r\n        },\r\n\r\n        start: function(animation, frame, reset, status) {\r\n            var asize = animation.count();\r\n\r\n            if ( ! asize) {\r\n                animation = null;\r\n                return;\r\n            }\r\n\r\n            var vector = this.vector(),\r\n                ssize = this.stacks.length,\r\n                origin = {},\r\n                delta = {},\r\n                from = {},\r\n                to = {};\r\n\r\n            var scene, queue, last, time, playing, applied, p, i;\r\n\r\n            if (status) {\r\n                for (i = 0; i < ssize; i++) {\r\n                    p = this.stacks[i];\r\n                    if (p.animation == animation) {\r\n                        if (p.frame != frame) {\r\n                            this.stacks.splice(i, 1);\r\n                            applied = 1;\r\n                        } else {\r\n                            playing = p;\r\n                        }\r\n                        vector.attr(p.reset);\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                status = +to;\r\n            }\r\n\r\n            queue = {\r\n                animation: animation,\r\n                vector: vector\r\n            };\r\n\r\n            time = animation.duration();\r\n            last = animation.at(asize - 1).frame;\r\n\r\n            for (i = 0; i < asize; i++) {\r\n                scene = animation.at(i);\r\n                if (scene.frame == frame || scene.frame > status * last) {\r\n\r\n                    queue.prev = animation.at(i - 1);\r\n                    queue.prev = queue.prev ? queue.prev.frame : 0;\r\n\r\n                    queue.frame = scene.frame;\r\n                    queue.duration = time / last * (queue.frame - queue.prev);\r\n\r\n                    queue.next = animation.at(i + 1);\r\n                    queue.next = queue.next ? queue.next.frame : undefined;\r\n\r\n                    queue.last = last;\r\n                    break;\r\n                } else if (status) {\r\n                    vector.attr(scene.params);\r\n                }\r\n            }\r\n\r\n            if ( ! playing) {\r\n\r\n                time = queue.duration;\r\n\r\n                _.forOwn(scene.params, function(v, k){\r\n                    \r\n                    var able = Animation.animable[k];\r\n                    var plugin, matrix, inverse, segments;\r\n                    var i, j, ii, jj;\r\n\r\n                    if (able) {\r\n                        from[k] = vector.attrs[k];\r\n                        from[k] = _.defaultTo(from[k], able.defaults);\r\n                        to[k]   = v;\r\n\r\n                        switch(able.type) {\r\n                            case 'number':\r\n                                delta[k] = (to[k] - from[k]) / time;\r\n                                break;\r\n\r\n                            case 'transform':\r\n                                var eq = equalizeTransform(vector.attrs[k], v);\r\n\r\n                                if (eq.equal) {\r\n                                    from[k]  = eq.from;\r\n                                    to[k]    = eq.to;\r\n                                    delta[k] = [];\r\n                                    delta[k].semantic = true;\r\n                                    for (i = 0, ii = from[k].length; i < ii; i++) {\r\n                                        delta[k][i] = [from[k][i][0]];\r\n                                        for (j = 1, jj = from[k][i].length; j < jj; j++) {\r\n                                            delta[k][i][j] = (to[k][i][j] - from[k][i][j]) / time;\r\n                                        }\r\n                                    }\r\n                                } else {\r\n                                    plugin = vector.plugins.transformer;\r\n                                    segments = Graph.util.transform2segments(to[k]);\r\n\r\n                                    matrix = vector.matrix();\r\n\r\n                                    from[k] = matrix.clone();\r\n                                    inverse = matrix.invert(true);\r\n\r\n                                    vector.graph.matrix = matrix.multiply(inverse);\r\n\r\n                                    _.forEach(segments, function(s){\r\n                                        var cmd = s[0], args = s.slice(1);\r\n                                        plugin[cmd].apply(plugin, args);\r\n                                    });\r\n\r\n                                    matrix = plugin.commit(false, true);\r\n                                    to[k] = matrix.clone();\r\n\r\n                                    delta[k] = {\r\n                                        a: (to[k].props.a - from[k].props.a) / time,\r\n                                        b: (to[k].props.b - from[k].props.b) / time,\r\n                                        c: (to[k].props.c - from[k].props.c) / time,\r\n                                        d: (to[k].props.d - from[k].props.d) / time,\r\n                                        e: (to[k].props.e - from[k].props.e) / time,\r\n                                        f: (to[k].props.f - from[k].props.f) / time\r\n                                    };\r\n\r\n                                    segments = null;\r\n                                    plugin = null;\r\n                                    matrix = null;\r\n                                }\r\n\r\n                                break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n                var timestamp = +new Date;\r\n\r\n                _.extend(queue, {\r\n                    scene: scene,\r\n                    timestamp: timestamp,\r\n                    start: timestamp + animation.delay(),\r\n\r\n                    reset: reset,\r\n                    from: from,\r\n                    to: to,\r\n                    delta: delta,\r\n\r\n                    status: 0,\r\n                    initstatus: status || 0,\r\n\r\n                    stop: false\r\n                });\r\n\r\n                this.stacks.push(queue);\r\n\r\n                if (status && ! playing && ! applied) {\r\n                    queue.stop = true;\r\n                    queue.start = new Date - scene.duration * status;\r\n                    if (this.stacks.length === 1) {\r\n                        return this.player();\r\n                    }\r\n                }\r\n\r\n                if (applied) {\r\n                    queue.start = new Date - scene.duration * status;\r\n                }\r\n\r\n                if (this.stacks.length === 1) {\r\n                    Animator.play(_.bind(this.player, this));\r\n                }\r\n            } else {\r\n                playing.initstatus = status;\r\n                playing.start = new Date - playing.duration * status;\r\n            }\r\n\r\n            this.fire('animstart');\r\n\r\n        },\r\n\r\n        player: function() {\r\n            var timestamp = +new Date, tick = 0;\r\n            var vector, curr, from, prog, anim, time, able, value, key, type, scene, matrix;\r\n            var plugin, matrix, method, args;\r\n            var key, to, ii, jj, i, j;\r\n\r\n            for (; tick < this.stacks.length; tick++) {\r\n                curr = this.stacks[tick];\r\n\r\n                if (curr.paused) {\r\n                    continue;\r\n                }\r\n                \r\n                prog   = timestamp - curr.start;\r\n\r\n                time   = curr.duration;\r\n                vector = curr.vector;\r\n                scene  = curr.scene;\r\n                from   = curr.from;\r\n                to     = curr.to;\r\n                delta  = curr.delta;\r\n                anim   = curr.animation;\r\n\r\n                if (curr.initstatus) {\r\n                    prog = (curr.initstatus * curr.last - curr.prev) / (curr.frame - curr.prev) * time;\r\n                    curr.status = curr.initstatus;\r\n                    delete curr.initstatus;\r\n                    curr.stop && this.stacks.splice(tick--, 1);\r\n                } else {\r\n                    curr.status = (curr.prev + (curr.frame - curr.prev) * (prog / time)) / curr.last;\r\n                }\r\n\r\n                if (prog < 0) {\r\n                    continue;\r\n                }\r\n\r\n                if (prog < time) {\r\n\r\n                    ease = scene.easing(prog / time);\r\n\r\n                    for (key in from) {\r\n                        \r\n                        able = Animation.animable[key];\r\n\r\n                        switch(able.type) {\r\n                            case 'number':\r\n\r\n                                value = +from[key] + ease * time * delta[key];\r\n                                vector.attr(name, value);\r\n\r\n                                break;\r\n                            case 'transform':\r\n\r\n                                // semantic `rotate,scale,translate`\r\n                                if (delta[key].semantic) {\r\n                                    plugin = vector.plugins.transformer;\r\n\r\n                                    for (i = 0, ii = from[key].length; i < ii; i++) {\r\n                                        method = from[key][i][0];\r\n                                        args = [];\r\n\r\n                                        for (j = 1, jj = from[key][i].length; j < jj; j++) {\r\n                                            args.push(from[key][i][j] + ease * time * delta[key][i][j]);\r\n                                        }\r\n\r\n                                        plugin[method].apply(plugin, args);\r\n                                    }\r\n\r\n                                    matrix = plugin.commit(false, true);\r\n\r\n                                    vector.attr('transform', matrix.toValue());\r\n\r\n\r\n                                    matrix = null;\r\n                                    plugin = null;\r\n\r\n                                } else {\r\n                                    matrix = Graph.matrix(\r\n                                        from[key].props.a + ease * time * delta[key].a,\r\n                                        from[key].props.b + ease * time * delta[key].b,\r\n                                        from[key].props.c + ease * time * delta[key].c,\r\n                                        from[key].props.d + ease * time * delta[key].d,\r\n                                        from[key].props.e + ease * time * delta[key].e,\r\n                                        from[key].props.f + ease * time * delta[key].f\r\n                                    );\r\n                                    vector.attr('transform', matrix.toValue());\r\n                                    matrix = null;\r\n                                }\r\n\r\n                                break;\r\n                        }\r\n                    }\r\n\r\n                } else {\r\n\r\n                    for (key in to) {\r\n                        \r\n                        able = Animation.animable[key];\r\n\r\n                        switch(able.type) {\r\n\r\n                            case 'transform':\r\n\r\n                                if (delta[key].semantic) {\r\n                                    plugin = vector.plugins.transformer;\r\n\r\n                                    _.forEach(to[key], function(v){\r\n                                        var cmd = v[0], args = v.slice(1);\r\n                                        plugin[cmd].apply(plugin, args);\r\n                                    });\r\n\r\n                                    matrix = plugin.commit(false, true);\r\n\r\n                                    vector.graph.matrix = matrix;\r\n                                    vector.attr('transform', matrix.toValue());\r\n                                    \r\n                                    matrix = null;\r\n                                    plugin = null;\r\n                                } else {\r\n                                    matrix = to[key].clone();\r\n\r\n                                    vector.graph.matrix = matrix;\r\n                                    vector.attr('transform', matrix.toValue());\r\n\r\n                                    matrix = null;\r\n                                }\r\n                                break;\r\n                            \r\n                            default:\r\n                                vector.attr(key, to[key]);\r\n                                break;\r\n                        }\r\n                    }\r\n                    \r\n                    scene.played++;\r\n\r\n                    this.stacks.splice(tick--, 1);\r\n\r\n                    var repeat = anim.repeat(), \r\n                        played = scene.played;\r\n\r\n                    if ((repeat > 1 && played < repeat) && ! curr.next ) {\r\n                        _.forOwn(anim.scenes, function(s, k){\r\n                            for (var key in s.params) {\r\n                                if (key == 'transform') {\r\n                                    vector.graph.matrix = curr.reset.matrix;\r\n                                    vector.attr('transform', curr.reset.transform);\r\n                                } else {\r\n                                    vector.attr(k, curr.reset[k]);    \r\n                                }\r\n                            }\r\n                        });\r\n\r\n                        this.start(\r\n                            anim,\r\n                            anim.frame(0),\r\n                            curr.reset,\r\n                            null\r\n                        );\r\n                    }\r\n\r\n                    if (curr.next && ! curr.stop) {\r\n                        this.start(\r\n                            anim,\r\n                            curr.next,\r\n                            curr.reset,\r\n                            null\r\n                        );\r\n                    }\r\n\r\n                    if (played >= repeat) {\r\n                        // ___DONE___?\r\n                        curr = null;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.stacks.length) {\r\n                Animator.play(_.bind(this.player, this));\r\n            } else {\r\n                // ___DONE___\r\n            }\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Animator';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n    Animator.play = (function(g){\r\n        var func = g.requestAnimationFrame || \r\n                   g.webkitRequestAnimationFrame || \r\n                   g.mozRequestAnimationFrame || \r\n                   g.oRequestAnimationFrame || \r\n                   g.msRequestAnimationFrame || \r\n                   function (callback) { \r\n                        setTimeout(callback, 16); \r\n                   };\r\n\r\n        return _.bind(func, g);\r\n    }(global));\r\n\r\n    ///////// INTERNAL ANIMATION /////////\r\n    \r\n    var Animation = Graph.extend({\r\n\r\n        props: {\r\n            easing: 'linier',\r\n            duration: 1000,\r\n            repeat: 1,\r\n            delay: 0\r\n        },\r\n        \r\n        scenes: {},\r\n        frames: [],\r\n\r\n        constructor: function(keyframes, duration, easing, callback) {\r\n            this.props.guid = 'graph-anim-' + (++Animation.guid);\r\n            this.props.duration = duration = _.defaultTo(duration, 1000);\r\n\r\n            if (_.isFunction(easing)) {\r\n                if (callback) {\r\n                    this.props.easing = 'function';\r\n                } else {\r\n                    callback = easing;\r\n                    easing = this.props.easing;\r\n                }\r\n            }\r\n\r\n            if ( ! easing) {\r\n                easing = this.props.easing;\r\n            }\r\n\r\n            if (keyframes) {\r\n                var easing = _.isString(easing) ? Animation.easing[easing] : easing,\r\n                    repeat = this.props.repeat,\r\n                    scenes = this.scenes,\r\n                    frames = this.frames;\r\n\r\n                _.forOwn(keyframes, function(f, key){\r\n                    var params = {}, frame, scene;\r\n\r\n                    frame = _.toNumber(key);\r\n\r\n                    params = _.pickBy(f, function(v, k){\r\n                        return !!Animation.animable[k];\r\n                    });\r\n\r\n                    scene = {\r\n                        frame: frame,\r\n                        params: params,\r\n                        easing: easing,\r\n                        callback: callback,\r\n                        played: 0\r\n                    };\r\n\r\n                    frames.push(frame);\r\n                    scenes[frame] = scene;\r\n                });\r\n\r\n                frames.sort(function(a, b){ return a - b });\r\n            }\r\n        },\r\n\r\n        guid: function() {\r\n            return this.props.guid;\r\n        },\r\n\r\n        duration: function() {\r\n            return this.props.duration;\r\n        },\r\n\r\n        easing: function() {\r\n            return this.props.easing;\r\n        },\r\n\r\n        delay: function(delay) {\r\n\r\n            if (delay === undefined) {\r\n                return this.props.delay;\r\n            }\r\n\r\n            var anim = new Animation();\r\n\r\n            anim.frames = this.frames;\r\n            anim.scenes = _.cloneDeep(this.scenes);\r\n            anim.props  = _.cloneDeep(this.props);\r\n            anim.props.delay = delay || 0;\r\n            \r\n            return anim;\r\n        },\r\n\r\n        repeat: function(times) {\r\n\r\n            if (times === undefined) {\r\n                return this.props.repeat;\r\n            }\r\n\r\n            var anim = new Animation();\r\n\r\n            anim.frames = this.frames.slice();\r\n            anim.scenes = _.cloneDeep(this.scenes);\r\n            anim.props  = _.cloneDeep(this.props);\r\n            anim.props.repeat = Math.floor(Math.max(times, 0)) || 1;\r\n\r\n            // reset to scenes\r\n            _.forOwn(anim.scenes, function(s, f){\r\n                s.played = 0;\r\n            });\r\n\r\n            return anim;\r\n        },\r\n\r\n        count: function() {\r\n            return this.frames.length;\r\n        },\r\n\r\n        at: function(index) {\r\n            var frame = this.frame(index);\r\n            return this.scene(frame);\r\n        },\r\n\r\n        frame: function(index) {\r\n            return this.frames[index];\r\n        },\r\n\r\n        scene: function(frame) {\r\n            return this.scenes[frame];\r\n        },\r\n\r\n        destroy: function() {\r\n            this.scenes = null;\r\n            this.frames = null;\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n    _.extend(Animation, {\r\n        guid: 0,\r\n\r\n        animable: {\r\n             x: { type: 'number', defaults: 0 },\r\n             y: { type: 'number', defaults: 0 },\r\n            cx: { type: 'number', defaults: 0 },\r\n            cy: { type: 'number', defaults: 0 },\r\n            transform: { type: 'transform', defaults: '' }\r\n        },\r\n\r\n        easing: {\r\n            linier: function(n) {\r\n                return n;\r\n            },\r\n\r\n            easeIn: function(n) {\r\n                return Math.pow(n, 1.7);\r\n            },\r\n\r\n            easeOut: function(n) {\r\n                return Math.pow(n, .48);\r\n            },\r\n\r\n            easeInOut: function(n) {\r\n                var q = .48 - n / 1.04,\r\n                    Q = Math.sqrt(.1734 + q * q),\r\n                    x = Q - q,\r\n                    X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\r\n                    y = -Q - q,\r\n                    Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\r\n                    t = X + Y + .5;\r\n                return (1 - t) * 3 * t * t + t * t * t;\r\n            },\r\n\r\n            backIn: function(n) {\r\n                var s = 1.70158;\r\n                return n * n * ((s + 1) * n - s);\r\n            },\r\n\r\n            backOut: function (n) {\r\n                n = n - 1;\r\n                var s = 1.70158;\r\n                return n * n * ((s + 1) * n + s) + 1;\r\n            },\r\n\r\n            elastic: function (n) {\r\n                if (n == !!n) {\r\n                    return n;\r\n                }\r\n                return pow(2, -10 * n) * math.sin((n - .075) * (2 * PI) / .3) + 1;\r\n            },\r\n\r\n            bounce: function (n) {\r\n                var s = 7.5625,\r\n                    p = 2.75,\r\n                    l;\r\n                if (n < (1 / p)) {\r\n                    l = s * n * n;\r\n                } else {\r\n                    if (n < (2 / p)) {\r\n                        n -= (1.5 / p);\r\n                        l = s * n * n + .75;\r\n                    } else {\r\n                        if (n < (2.5 / p)) {\r\n                            n -= (2.25 / p);\r\n                            l = s * n * n + .9375;\r\n                        } else {\r\n                            n -= (2.625 / p);\r\n                            l = s * n * n + .984375;\r\n                        }\r\n                    }\r\n                }\r\n                return l;\r\n            }\r\n        }\r\n    });\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function equalizeTransform (t1, t2) {\r\n        t2 = _.toString(t2).replace(/\\.{3}|\\u2026/g, t1);\r\n        t1 = Graph.util.transform2segments(t1) || [];\r\n        t2 = Graph.util.transform2segments(t2) || [];\r\n        \r\n        var maxlength = Math.max(t1.length, t2.length),\r\n            from = [],\r\n            to = [],\r\n            i = 0, j, jj,\r\n            tt1, tt2;\r\n\r\n        for (; i < maxlength; i++) {\r\n            tt1 = t1[i] || emptyTransform(t2[i]);\r\n            tt2 = t2[i] || emptyTransform(tt1);\r\n\r\n            if ((tt1[0] != tt2[0]) ||\r\n                (tt1[0].toLowerCase() == \"rotate\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3])) ||\r\n                (tt1[0].toLowerCase() == \"scale\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4]))) {\r\n                return {\r\n                    equal: false,\r\n                    from: tt1,\r\n                    to: tt2\r\n                }\r\n            }\r\n            from[i] = [];\r\n            to[i] = [];\r\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\r\n                j in tt1 && (from[i][j] = tt1[j]);\r\n                j in tt2 && (to[i][j] = tt2[j]);\r\n            }\r\n        }\r\n        return {\r\n            equal: true,\r\n            from: from,\r\n            to: to\r\n        };\r\n    }\r\n\r\n    function emptyTransform(item) {\r\n        var l = item[0];\r\n        switch (l.toLowerCase()) {\r\n            case \"translate\": return [l, 0, 0];\r\n            case \"matrix\": return [l, 1, 0, 0, 1, 0, 0];\r\n            case \"rotate\": if (item.length == 4) {\r\n                return [l, 0, item[2], item[3]];\r\n            } else {\r\n                return [l, 0];\r\n            }\r\n            case \"scale\": if (item.length == 5) {\r\n                return [l, 1, 1, item[3], item[4]];\r\n            } else if (item.length == 3) {\r\n                return [l, 1, 1];\r\n            } else {\r\n                return [l, 1];\r\n            }\r\n        }\r\n    }\r\n\r\n}());","\r\n(function(){\r\n    \r\n    Graph.plugin.Resizer = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            vector: null,\r\n            enabled: true,\r\n            suspended: true,\r\n            restriction: null,\r\n            handleImage: null,\r\n            handleSize: null,\r\n            rendered: false\r\n        },\r\n\r\n        components: {\r\n            holder: null,\r\n            helper: null,\r\n            handle: null\r\n        },\r\n\r\n        trans: {\r\n            // original offset\r\n            ox: 0,\r\n            oy: 0,\r\n\r\n            // original\r\n            ow: 0,\r\n            oh: 0,\r\n\r\n            // current\r\n            cw: 0,\r\n            ch: 0,\r\n\r\n            // translation\r\n            dx: 0,\r\n            dy: 0\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var me = this, guid = vector.guid();\r\n            \r\n            options = options || {};\r\n\r\n            _.assign(me.props, options);\r\n\r\n            vector.addClass('graph-resizable');\r\n\r\n            me.props.handleImage = Graph.config.base + 'img/' + Graph.config.resizer.image;\r\n            me.props.handleSize = Graph.config.resizer.size;\r\n\r\n            me.props.vector = guid;\r\n\r\n            me.cached.snapping = null;\r\n            me.cached.vertices = null;\r\n\r\n            me.initComponent();\r\n        },\r\n        \r\n        holder: function() {\r\n            return Graph.registry.vector.get(this.components.holder);\r\n        },\r\n\r\n        helper: function() {\r\n            return Graph.registry.vector.get(this.components.helper);\r\n        },\r\n\r\n        handle: function(dir) {\r\n            return Graph.registry.vector.get(this.components.handle[dir]);\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = me.components;\r\n            var holder, helper;\r\n\r\n            holder = (new Graph.svg.Group())\r\n                .addClass('graph-resizer')\r\n                .removeClass('graph-elem graph-elem-group');\r\n\r\n            holder.elem.group('graph-resizer');\r\n\r\n            holder.on({\r\n                render: _.bind(me.onHolderRender, me)\r\n            });\r\n            \r\n            helper = (new Graph.svg.Rect(0, 0, 0, 0, 0))\r\n                .addClass('graph-resizer-helper')\r\n                .removeClass('graph-elem graph-elem-rect')\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(holder);\r\n\r\n            helper.elem.group('graph-resizer');\r\n\r\n            comp.handle = {};\r\n\r\n            var handle = {\r\n                ne: {ghost: false, cursor: 'nesw-resize'},\r\n                se: {ghost: false, cursor: 'nwse-resize'},\r\n                sw: {ghost: false, cursor: 'nesw-resize'},\r\n                nw: {ghost: false, cursor: 'nwse-resize'},\r\n                 n: {ghost: false, cursor: 'ns-resize', axis: 'y'},\r\n                 e: {ghost: false, cursor: 'ew-resize', axis: 'x'},\r\n                 s: {ghost: false, cursor: 'ns-resize', axis: 'y'},\r\n                 w: {ghost: false, cursor: 'ew-resize', axis: 'x'}\r\n            };\r\n\r\n            _.forOwn(handle, function(c, dir){\r\n                (function(dir){\r\n                    var h = (new Graph.svg.Image(\r\n                        me.props.handleImage,\r\n                        0,\r\n                        0,\r\n                        me.props.handleSize,\r\n                        me.props.handleSize\r\n                    ))\r\n                    .selectable(false)\r\n                    .removeClass('graph-elem graph-elem-image')\r\n                    .addClass('graph-resizer-handle handle-' + dir);\r\n\r\n                    h.elem.group('graph-resizer');\r\n                    h.props.dir = dir;\r\n                    h.draggable(c);\r\n                    \r\n                    h.on('beforedrag', _.bind(me.onHandleBeforeDrag, me));\r\n                    h.on('drag', _.bind(me.onHandleDrag, me));\r\n                    h.on('afterdrag', _.bind(me.onHandleAfterDrag, me));\r\n\r\n                    h.render(holder);\r\n\r\n                    comp.handle[dir] = h.guid();\r\n                    h = null;\r\n                }(dir));\r\n            });\r\n\r\n            comp.holder = holder.guid();\r\n            comp.helper = helper.guid();\r\n\r\n            holder = null;\r\n            helper = null;\r\n            handle = null;\r\n        },\r\n\r\n        invalidate: function()  {\r\n            this.superclass.prototype.invalidate.call(this);\r\n            this.cached.vertices = null;\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.enabled = false;\r\n        },\r\n\r\n        enable: function() {\r\n            this.props.enabled = true;\r\n        },\r\n\r\n        render: function() {\r\n            var me = this;\r\n\r\n            if (me.props.rendered) {\r\n                me.redraw();\r\n                return;\r\n            }\r\n\r\n            me.holder().render(me.vector().parent());\r\n            me.props.rendered = true;\r\n            me.redraw();\r\n        },\r\n\r\n        snap: function(snap) {\r\n            this.cached.snapping = snap;\r\n        },\r\n\r\n        vertices: function() {\r\n            var me = this,\r\n                vector = me.vector(),\r\n                vertices = me.cached.vertices;\r\n\r\n            if ( ! vertices) {\r\n                // get original bounding\r\n                var path, bbox, rotate;\r\n                var ro, cx, cy, ox, oy, hs, hw, hh;\r\n\r\n                path = vector.shape();\r\n                bbox = path.bbox().toJson();\r\n                // rotate = vector.matrixCurrent().rotate();\r\n                rotate = vector.matrix().rotate();\r\n\r\n                ro = rotate.deg;\r\n                cx = 0;\r\n                cy = 0;\r\n                ox = bbox.x;\r\n                oy = bbox.y;\r\n                hs = me.props.handleSize / 2;\r\n                \r\n                if (ro) {\r\n                    var rmatrix = Graph.matrix(),\r\n                        path = vector.shapeRelative();\r\n\r\n                    cx = bbox.x + bbox.width / 2,\r\n                    cy = bbox.y + bbox.height / 2;\r\n\r\n                    rmatrix.rotate(-ro, cx, cy);\r\n\r\n                    path = path.transform(rmatrix);\r\n                    bbox = path.bbox().toJson();\r\n                } else {\r\n                    var vmatrix = vector.matrix();\r\n                    path = path.transform(vmatrix);\r\n                    bbox = path.bbox().toJson();\r\n                }\r\n                \r\n\r\n                hw = bbox.width / 2;\r\n                hh = bbox.height / 2;\r\n\r\n                vertices = {\r\n                    ne: {\r\n                        x: bbox.x + bbox.width - hs,\r\n                        y: bbox.y - hs\r\n                    },\r\n\r\n                    se: {\r\n                        x: bbox.x + bbox.width - hs,\r\n                        y: bbox.y + bbox.height - hs\r\n                    },\r\n\r\n                    sw: {\r\n                        x: bbox.x - hs,\r\n                        y: bbox.y + bbox.height - hs\r\n                    },\r\n\r\n                    nw: {\r\n                        x: bbox.x - hs,\r\n                        y: bbox.y - hs\r\n                    },\r\n\r\n                    n: {\r\n                        x: bbox.x + hw - hs,\r\n                        y: bbox.y - hs\r\n                    },\r\n                    e: {\r\n                        x: bbox.x + bbox.width - hs,\r\n                        y: bbox.y + hh - hs\r\n                    },\r\n                    s: {\r\n                        x: bbox.x + hw - hs,\r\n                        y: bbox.y + bbox.height - hs\r\n                    },\r\n                    w: {\r\n                        x: bbox.x - hs,\r\n                        y: bbox.y + hh - hs\r\n                    },\r\n\r\n                    rotate: {\r\n                        deg: ro,\r\n                        cx: cx,\r\n                        cy: cy\r\n                    },\r\n\r\n                    box: {\r\n                        x: bbox.x,\r\n                        y: bbox.y,\r\n                        width: bbox.width,\r\n                        height: bbox.height\r\n                    },\r\n\r\n                    offset: {\r\n                        x: ox,\r\n                        y: oy\r\n                    }\r\n                };\r\n\r\n                this.cached.vertices = vertices;\r\n            }\r\n\r\n            return vertices;\r\n        },\r\n\r\n        redraw: function() {\r\n            var me = this,\r\n                helper = me.helper(),\r\n                holder = me.holder();\r\n\r\n            var vx;\r\n\r\n            if ( ! holder) {\r\n                return;\r\n            }\r\n\r\n            vx = this.vertices();\r\n\r\n            if ( ! vx) {\r\n                return;\r\n            }\r\n            \r\n            helper.reset();\r\n\r\n            helper.attr({\r\n                x: vx.box.x,\r\n                y: vx.box.y,\r\n                width: vx.box.width,\r\n                height: vx.box.height\r\n            });\r\n\r\n            helper.rotate(vx.rotate.deg, vx.rotate.cx, vx.rotate.cy).commit();\r\n\r\n            _.forOwn(me.components.handle, function(id, dir){\r\n                (function(id, dir){\r\n                    var h = me.handle(dir);\r\n                    h.show();\r\n                    h.reset();\r\n                    h.attr(vx[dir]);\r\n                    h.rotate(vx.rotate.deg, vx.rotate.cx, vx.rotate.cy).commit();\r\n                }(id, dir));\r\n            });\r\n\r\n            me.trans.ox = vx.offset.x;\r\n            me.trans.oy = vx.offset.y;\r\n            me.trans.ow = this.trans.cw = vx.box.width;\r\n            me.trans.oh = this.trans.ch = vx.box.height;\r\n            me.trans.dx = 0;\r\n            me.trans.dy = 0;\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.holder().elem.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            if ( ! this.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            if (this.props.suspended) {\r\n                this.props.suspended = false;\r\n\r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else { \r\n                    this.vector().parent().elem.append(this.holder().elem);\r\n                    this.redraw();\r\n                }\r\n            }\r\n        },\r\n\r\n        restrict: function(options) {\r\n            _.assign(this.props, {\r\n                restriction: options\r\n            });\r\n        },\r\n\r\n        setupRestriction: function(handle) {\r\n            var me = this,\r\n                restriction = this.props.restriction || {},\r\n                vector = me.vector(),\r\n                paper = vector.paper(),\r\n                layout = paper.layout(),\r\n                dir = handle.props.dir,\r\n                width = +restriction.width || 0,\r\n                height = +restriction.height || 0,\r\n                MAX_VALUE = Number.MAX_SAFE_INTEGER;\r\n\r\n            var bounds = {\r\n                top: -MAX_VALUE,\r\n                left: -MAX_VALUE,\r\n                right: MAX_VALUE,\r\n                bottom: MAX_VALUE\r\n            };\r\n\r\n            var origin;\r\n            \r\n            if (restriction.origin === undefined) {\r\n                var box = vector.bboxView().toJson();\r\n                origin = getRestrictOrigin(handle, box);\r\n            } else {\r\n                origin = _.extend({x: 0, y: 0}, restriction.origin);\r\n            }\r\n\r\n            switch(dir) {\r\n                case 'n':\r\n                    bounds.bottom = origin.y - height;\r\n                    break;\r\n                case 'e':\r\n                    bounds.left = origin.x + width;\r\n                    break;\r\n                case 's':\r\n                    bounds.top = origin.y + height;\r\n                    break;\r\n                case 'w':\r\n                    bounds.right = origin.x - width;\r\n                    break;\r\n                case 'ne':\r\n                    bounds.left = origin.x + width;\r\n                    bounds.bottom = origin.y - height;\r\n                    break;\r\n                case 'se':\r\n                    bounds.top = origin.y + height;\r\n                    bounds.left = origin.x + width;\r\n                    break;\r\n                case 'sw':\r\n                    bounds.right = origin.x - width;\r\n                    bounds.top = origin.y + height;\r\n                    break;\r\n                case 'nw':\r\n                    bounds.right = origin.x - width;\r\n                    bounds.bottom = origin.y - height;\r\n                    break;\r\n            }\r\n\r\n            handle.draggable().restrict(bounds);\r\n\r\n        },\r\n        \r\n        onHolderRender: function(e) {\r\n            \r\n        },\r\n\r\n        onHandleBeforeDrag: function(e) {\r\n            var me = this, \r\n                vector = me.vector(), \r\n                handle = e.publisher;\r\n\r\n            me.fire('beforeresize', {\r\n                resizer: this,\r\n                direction: handle.props.dir\r\n            });\r\n\r\n            if (vector.isRotatable()) {\r\n                vector.rotatable().suspend();\r\n            }\r\n\r\n            _.forOwn(me.components.handle, function(id, dir){\r\n                var h = me.handle(dir);\r\n                if (h !== handle) {\r\n                    h.hide();\r\n                }\r\n            });\r\n\r\n            var snapping = this.cached.snapping;\r\n\r\n            if (snapping && handle.draggable().snap() !== snapping) {\r\n                handle.draggable().snap(snapping);    \r\n            }\r\n            \r\n            if (this.props.restriction) {\r\n                this.setupRestriction(handle);    \r\n            }\r\n\r\n            handle.show();\r\n            handle.removeClass('dragging');\r\n        },\r\n\r\n        onHandleDrag: function(e) {\r\n            var me = this, \r\n                helper = me.helper(), \r\n                handle = e.publisher;\r\n            \r\n            var tr = this.trans,\r\n                dx = e.dx,\r\n                dy = e.dy;\r\n\r\n            switch(handle.props.dir) {\r\n                case 'ne':\r\n                    tr.cw += dx;\r\n                    tr.ch -= dy;\r\n\r\n                    me.trans.dy += dy;\r\n                    helper.translate(0, dy).commit();\r\n                    break;\r\n\r\n                case 'se':\r\n                    tr.cw += dx;\r\n                    tr.ch += dy;\r\n\r\n                    break;\r\n\r\n                case 'sw':\r\n                    tr.cw -= dx;\r\n                    tr.ch += dy;\r\n\r\n                    me.trans.dx += dx;\r\n                    helper.translate(dx, 0).commit();\r\n                    break;\r\n\r\n                case 'nw':\r\n                    tr.cw -= dx;\r\n                    tr.ch -= dy;\r\n\r\n                    me.trans.dx += dx;\r\n                    me.trans.dy += dy;\r\n                    helper.translate(dx, dy).commit();\r\n                    break;\r\n\r\n                case 'n':\r\n                    tr.cw += 0;\r\n                    tr.ch -= dy;\r\n\r\n                    me.trans.dy += dy;\r\n                    helper.translate(0, dy).commit();\r\n                    break;\r\n\r\n                case 'e':\r\n                    tr.cw += dx;\r\n                    tr.ch += 0;\r\n\r\n                    break;\r\n\r\n                case 's':\r\n                    tr.cw += 0;\r\n                    tr.ch += dy;\r\n                    break;\r\n\r\n                case 'w':\r\n                    tr.cw -= dx;\r\n                    tr.ch += 0;\r\n\r\n                    me.trans.dx += dx;\r\n                    helper.translate(dx, 0).commit();\r\n                    break;\r\n            }\r\n\r\n            helper.attr({\r\n                width:  tr.cw,\r\n                height: tr.ch\r\n            });\r\n\r\n        },\r\n\r\n        onHandleAfterDrag: function(e) {\r\n            var me = this,\r\n                tr = this.trans,\r\n                handle = e.publisher;\r\n\r\n            var sx, sy, cx, cy, dx, dy;\r\n\r\n            sx = tr.ow > 0 ? (tr.cw / tr.ow) : 1;\r\n            sy = tr.oh > 0 ? (tr.ch / tr.oh) : 1;\r\n            dx = tr.dx;\r\n            dy = tr.dy;\r\n\r\n            switch(handle.props.dir) {\r\n                case 'ne':\r\n                    cx = tr.ox;\r\n                    cy = tr.oy + tr.oh;\r\n                    break;\r\n                case 'se':\r\n                    cx = tr.ox;\r\n                    cy = tr.oy;\r\n                    break;\r\n                case 'sw':\r\n                    cx = tr.ox + tr.ow;\r\n                    cy = tr.oy;\r\n                    break;\r\n                case 'nw':\r\n                    cx = tr.ox + tr.ow;\r\n                    cy = tr.oy + tr.oh;\r\n                    break;\r\n                case 'n':\r\n                    cx = tr.ox + tr.ow / 2;\r\n                    cy = tr.oy + tr.oh;\r\n                    break;\r\n                case 'e':\r\n                    cx = tr.ox;\r\n                    cy = tr.oy + tr.oh / 2;\r\n                    break;\r\n                case 's':\r\n                    cx = tr.ox + tr.ow / 2;\r\n                    cy = tr.oy;\r\n                    break;\r\n                case 'w':\r\n                    cx = tr.ox + tr.ow;\r\n                    cy = tr.oy + tr.oh / 2;\r\n                    break;\r\n            }\r\n\r\n            // track translation\r\n            var vector = me.vector(),\r\n                oldcen = vector.bbox().center().toJson(),\r\n                resize = vector.resize(sx, sy, cx, cy, dx, dy),\r\n                newcen = vector.bbox().center().toJson();\r\n\r\n            var vdx = newcen.x - oldcen.x,\r\n                vdy = newcen.y - oldcen.y;\r\n\r\n            resize.translate.dx = vdx;\r\n            resize.translate.dy = vdy;\r\n            \r\n            me.redraw();\r\n            me.fire('afterresize', resize);\r\n\r\n            if (vector.isRotatable()) {\r\n                vector.rotatable().resume();\r\n            }\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Resizer';\r\n        },\r\n\r\n        destroy: function() {\r\n            // remove handles\r\n            var me = this\r\n\r\n            _.forOwn(me.components.handle, function(id, dir){\r\n                var h = me.handle(dir);\r\n                h.remove();\r\n            });\r\n\r\n            me.components.handle = null;\r\n\r\n            // remove helper\r\n            me.helper().remove();\r\n            me.components.helper = null;\r\n\r\n            // remove holder\r\n            me.holder().remove();\r\n            me.components.holder = null;\r\n\r\n            // remove listeners\r\n            me.listeners = null;\r\n        }\r\n        \r\n    });\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function getRestrictOrigin(handle, box) {\r\n        var origin = {\r\n            x: box.x,\r\n            y: box.y\r\n        };\r\n\r\n        switch(handle.props.dir) {\r\n            case 'n':\r\n                origin.x = (box.x + box.x2) / 2;\r\n                origin.y = box.y2;\r\n                break;\r\n            case 'e':\r\n                origin.x = box.x;\r\n                origin.y = (box.y + box.y2) / 2;\r\n                break;\r\n            case 's':\r\n                origin.x = (box.x + box.x2) / 2;\r\n                origin.y = box.y;\r\n                break;\r\n            case 'w':\r\n                origin.x = box.x2;\r\n                origin.y = (box.y + box.y2) / 2;\r\n                break;\r\n            case 'ne':\r\n                origin.x = box.x;\r\n                origin.y = box.y2;\r\n                break;\r\n            case 'se':\r\n                origin.x = box.x;\r\n                origin.y = box.y;\r\n                break;\r\n            case 'sw':\r\n                origin.x = box.x2;\r\n                origin.y = box.y;\r\n                break;\r\n            case 'nw':\r\n                origin.x = box.x2;\r\n                origin.y = box.y2;\r\n                break;\r\n        }\r\n\r\n        return origin;\r\n    }\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Rotator = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n            enabled: true,\r\n            suspended: true,\r\n            handleImage: null,\r\n            handleSize: null,\r\n            rendered: false\r\n        },\r\n\r\n        components: {\r\n            helper: null,\r\n            handle: null,\r\n            holder: null,\r\n            circle: null,\r\n            radius: null\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var guid = vector.guid();\r\n\r\n            options = options || {};\r\n\r\n            _.assign(this.props, options);\r\n\r\n            this.props.vector = guid;\r\n            this.props.handleImage = Graph.config.base + 'img/' + Graph.config.rotator.image;\r\n            this.props.handleSize = Graph.config.rotator.size;\r\n\r\n            this.initComponent();\r\n        },\r\n\r\n        invalidate: function()  {\r\n            this.superclass.prototype.invalidate.call(this);\r\n        },\r\n\r\n        initComponent: function() {\r\n            var holder, helper, handle, circle, radius;\r\n\r\n            holder = (new Graph.svg.Group())    \r\n                .removeClass(Graph.styles.VECTOR)\r\n                .addClass('graph-rotator');\r\n\r\n            holder.elem.group('graph-rotator');\r\n            holder.on('render.rotator', _.bind(this.setup, this));\r\n\r\n            helper = (new Graph.svg.Rect(0, 0, 0, 0, 0))\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .addClass('graph-rotator-helper')\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(holder);\r\n\r\n            handle = (new Graph.svg.Image(\r\n                this.props.handleImage, \r\n                0, \r\n                0, \r\n                this.props.handleSize - 2, \r\n                this.props.handleSize\r\n            ))\r\n            .selectable(false)\r\n            .removeClass(Graph.styles.VECTOR)\r\n            .addClass('graph-rotator-handle')\r\n            .render(holder);\r\n\r\n            handle.elem.group('graph-rotator');\r\n\r\n            radius = (new Graph.svg.Line())\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .render(holder);\r\n\r\n            circle = (new Graph.svg.Circle(0, 0, 5))\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .render(holder);\r\n\r\n            this.components.helper = helper.guid();\r\n            this.components.handle = handle.guid();\r\n            this.components.holder = holder.guid();\r\n            this.components.circle = circle.guid();\r\n            this.components.radius = radius.guid();\r\n            this.suspendHelper();\r\n\r\n            holder = handle = helper = circle = radius = null;\r\n        },\r\n\r\n        setup: function() {\r\n\r\n            var me = this,\r\n                vector = this.vector(),\r\n                layout = vector.paper().layout(),\r\n                helper = this.helper(),\r\n                handle = this.handle(),\r\n                holder = this.holder(),\r\n                radius = this.radius(),\r\n                handleNode = handle.node();\r\n\r\n            var trans = {\r\n                scale: null,\r\n                center: null,\r\n                translate: null,\r\n                move: null,\r\n                rotate: null,\r\n                snaps: null,\r\n                resizing: null\r\n            };\r\n\r\n            handle.interactable().draggable({\r\n                manualStart: true,\r\n                onstart: function(e) {\r\n\r\n                    var matrix = vector.matrix();\r\n                    var center, radian;\r\n\r\n                    trans.scale = layout.scale();\r\n                    trans.origin = handle.bbox().center().toJson();\r\n                    trans.target = {x: trans.origin.x, y: trans.origin.y};\r\n                    trans.move = {x: 0, y: 0};\r\n                    trans.rotate = matrix.rotate().deg;\r\n                    trans.snaps = [0, 45, 90, -135, -180, -225, -90, -45];\r\n                    trans.resizing = vector.isResizable() && vector.resizable().props.suspended === false;\r\n                    \r\n                    center = helper.bbox().center().toJson();\r\n                    trans.center = center;\r\n\r\n                    radian = holder.matrixCurrent().rotate().rad;\r\n                    trans.radian = {\r\n                        sin: Math.sin(radian),\r\n                        cos: Math.cos(radian)\r\n                    };\r\n\r\n                    if (trans.resizing) {\r\n                        vector.resizable().suspend();\r\n                    }\r\n\r\n                    me.resumeHelper();\r\n                },\r\n                onmove: function(e) {\r\n                    var edx = e.dx,\r\n                        edy = e.dy;\r\n\r\n                    var transform, rad, deg, dx, dy, tx, ty;\r\n\r\n                    trans.matrix = new Graph.lang.Matrix();\r\n\r\n                    // scaling\r\n                    edx /= trans.scale.x;\r\n                    edy /= trans.scale.y;\r\n\r\n                    // radian\r\n                    dx = edx *  trans.radian.cos + edy * trans.radian.sin;\r\n                    dy = edx * -trans.radian.sin + edy * trans.radian.cos;\r\n\r\n                    trans.move.x += dx;\r\n                    trans.move.y += dy;\r\n\r\n                    tx = trans.move.x + trans.origin.x;\r\n                    ty = trans.move.y + trans.origin.y;\r\n\r\n                    trans.target = {x: tx, y: ty};\r\n\r\n                    // rad = Math.atan2((ty - trans.center.y), (tx - trans.center.x));\r\n                    rad = Math.atan2((trans.center.y - ty), (trans.center.x - tx));\r\n                    deg = Math.round(rad * 180 / Math.PI - 90);\r\n\r\n                    // snapping\r\n                    deg = Graph.util.snapValue(deg, trans.snaps, 5);\r\n                    \r\n                    trans.matrix.rotate(deg, trans.center.x, trans.center.y);\r\n                    trans.rotate = deg;\r\n\r\n                    transform = trans.matrix.toValue();\r\n\r\n                    handle.attr('transform', transform);\r\n                    helper.attr('transform', transform);\r\n                    radius.attr('transform', transform);\r\n                },\r\n\r\n                onend: function() {\r\n                    var vmatrix = vector.matrix(),\r\n                        vcenter = vector.bboxPristine().center().toJson(),\r\n                        vrotate = vmatrix.rotate().deg,\r\n                        drotate = trans.rotate - vrotate;\r\n\r\n                    var cx, cy;\r\n\r\n                    cx = vcenter.x;\r\n                    cy = vcenter.y;\r\n\r\n                    vmatrix.rotate(drotate, cx, cy);\r\n                    vector.attr('transform', vmatrix.toValue());\r\n                    vector.dirty(true);\r\n\r\n                    me.redraw();\r\n\r\n                    if (trans.resizing) {\r\n                        vector.resizable().resume();\r\n                    }\r\n\r\n                    me.fire('afterrotate', {\r\n                        deg: trans.rotate - 90,\r\n                        cx: cx,\r\n                        cy: cy\r\n                    });\r\n\r\n                }\r\n            })\r\n            .on('down', function(e){\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            })\r\n            .on('move', function(e){\r\n                if (me.props.enabled) {\r\n                    var i = e.interaction;\r\n                    if (i.pointerIsDown && ! i.interacting()) {\r\n                        var a = {name: 'drag'};\r\n                        i.prepared.name = a.name;\r\n                        i.setEventXY(i.startCoords, i.pointers);\r\n\r\n                        if (e.currentTarget === handleNode) {\r\n                            i.start(a, e.interactable, handleNode);    \r\n                        }\r\n                    }    \r\n                }\r\n            });\r\n        },\r\n\r\n        holder: function() {\r\n            return Graph.registry.vector.get(this.components.holder);\r\n        },\r\n\r\n        helper: function() {\r\n            return Graph.registry.vector.get(this.components.helper);\r\n        },\r\n\r\n        circle: function() {\r\n            return Graph.registry.vector.get(this.components.circle);\r\n        },\r\n\r\n        radius: function() {\r\n            return Graph.registry.vector.get(this.components.radius);\r\n        },\r\n\r\n        handle: function() {\r\n            return Graph.registry.vector.get(this.components.handle);\r\n        },\r\n\r\n        resume: function() {\r\n            if ( ! this.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            if (this.props.suspended) {\r\n                this.props.suspended = false;\r\n\r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else {\r\n                    this.vector().parent().elem.append(this.holder().elem);\r\n                    this.redraw();\r\n                }\r\n            }\r\n        },\r\n\r\n        resumeHelper: function() {\r\n            var vector, key;\r\n            for (key in this.components) {\r\n                if (['holder', 'handle'].indexOf(key) === -1) {\r\n                    vector = this[key]();\r\n                    vector && vector.show();\r\n                }\r\n            }\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.holder().elem.detach();\r\n        },\r\n\r\n        suspendHelper: function() {\r\n            var vector, key;\r\n            for (key in this.components) {\r\n                if (['holder', 'handle'].indexOf(key) === -1) {\r\n                    vector = this[key]();\r\n                    vector && vector.hide();\r\n                }\r\n            }\r\n        },\r\n\r\n        render: function() {\r\n            if (this.props.rendered) {\r\n                this.redraw();\r\n                return;\r\n            }\r\n\r\n            this.props.rendered = true;\r\n            this.holder().render(this.vector().parent());\r\n            this.redraw();\r\n        },\r\n\r\n        redraw: function() {\r\n            \r\n            var vector = this.vector(),\r\n                holder = this.holder(),\r\n                helper = this.helper(),\r\n                handle = this.handle(),\r\n                circle = this.circle(),\r\n                radius = this.radius(),\r\n                rotate = vector.matrix().rotate().deg;\r\n\r\n            var bound = vector.bbox().toJson(),\r\n                edge = 30;\r\n\r\n            var cx, cy;\r\n\r\n            if (rotate) {\r\n                var rmatrix = Graph.matrix(),\r\n                    rpath = vector.shapeRelative();\r\n\r\n                cx = bound.x + bound.width / 2,\r\n                cy = bound.y + bound.height / 2;\r\n\r\n                rmatrix.rotate(-rotate, cx, cy);\r\n\r\n                rpath = rpath.transform(rmatrix);\r\n                bound = rpath.bbox().toJson();\r\n\r\n            } else {\r\n                var vmatrix = vector.matrix(),\r\n                    vpath = vector.shape();\r\n\r\n                vpath = vpath.transform(vmatrix);\r\n                bound = vpath.bbox().toJson();\r\n\r\n                cx = bound.x + bound.width / 2;\r\n                cy = bound.y + bound.height / 2;\r\n            }\r\n\r\n            \r\n\r\n            // reset first\r\n            helper.reset();\r\n            handle.reset();\r\n            radius.reset();\r\n\r\n            helper.attr({\r\n                x: bound.x,\r\n                y: bound.y,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            var hw = (this.props.handleSize - 2) / 2,\r\n                hh = (this.props.handleSize) / 2,\r\n                hx = cx - hw,\r\n                hy = bound.y - edge - hh;\r\n\r\n            circle.attr({\r\n                cx: cx, \r\n                cy: cy\r\n            });\r\n\r\n            handle.attr({\r\n                x: hx, \r\n                y: hy\r\n            });\r\n\r\n            radius.attr({\r\n                x1: cx,\r\n                y1: cy,\r\n                x2: cx,\r\n                y2:  bound.y - edge + hh\r\n            });\r\n\r\n            handle.rotate(rotate, cx, cy).commit();\r\n            helper.rotate(rotate, cx, cy).commit();\r\n            radius.rotate(rotate, cx, cy).commit();\r\n\r\n            holder = helper = bound = handle = radius = circle = null;\r\n        },\r\n\r\n        destroy: function() {\r\n            var key, cmp;\r\n\r\n            for (key in this.components) {\r\n                cmp = this[key]();\r\n                if (cmp) {\r\n                    cmp.remove();\r\n                    this.components[key] = cmp = null;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Collector = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            enabled: false,\r\n            suspended: true,\r\n            rendered: false,\r\n            activator: 'tool',\r\n            ready: false\r\n        },\r\n\r\n        paper: null,\r\n\r\n        collection: [],\r\n\r\n        components: {\r\n            rubber: null\r\n        },\r\n\r\n        collecting: {\r\n            enabled: false\r\n        },\r\n\r\n        constructor: function(paper) {\r\n            var me = this;\r\n\r\n            if ( ! paper.isPaper()) {\r\n                throw Graph.error('Collector tool only available for paper !');\r\n            }\r\n\r\n            me.paper = paper;\r\n            me.components.rubber = Graph.$('<div class=\"graph-rubberband\">');\r\n            me.collection = new Graph.collection.Vector();\r\n\r\n            paper.on('keynavdown', _.bind(me.onKeynavDown, me));\r\n            paper.on('keynavup', _.bind(me.onKeynavUp, me));\r\n\r\n            if (me.paper.props.rendered) {\r\n                me.setup();\r\n            } else {\r\n                me.paper.on('render', function(){\r\n                    me.setup();\r\n                });\r\n            }\r\n        },\r\n\r\n        enable: function(activator) {\r\n            this.props.enabled = true;\r\n            this.props.activator = activator;\r\n\r\n            this.paper.cursor('crosshair');\r\n            this.paper.state('collecting');\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.enabled = false;\r\n            this.paper.cursor('default');\r\n        },\r\n\r\n        setup: function() {\r\n            var me = this;\r\n\r\n            if (me.props.ready) {\r\n                return;\r\n            }\r\n\r\n            me.props.ready = true;\r\n\r\n            var collecting = me.collecting,\r\n                paper = me.paper,\r\n                layout = paper.layout(),\r\n                position = layout.position(),\r\n                rubber = me.components.rubber,\r\n                vendor = paper.interactable().vendor();\r\n\r\n            vendor.styleCursor(false);\r\n\r\n            vendor.draggable({\r\n\r\n                manualStart: true,\r\n\r\n                onstart: function(e) {\r\n                    layout.invalidate();\r\n                    position = layout.position();\r\n\r\n                    var offset = {\r\n                        x: e.clientX - position.left,\r\n                        y: e.clientY - position.top\r\n                    };\r\n\r\n                    _.assign(collecting, {\r\n                        enabled: true,\r\n                        start: {\r\n                            // x: e.clientX,\r\n                            // y: e.clientY,\r\n                            x: offset.x,\r\n                            y: offset.y\r\n                        },\r\n                        end: {\r\n                            // x: e.clientX,\r\n                            // y: e.clientY,\r\n                            x: offset.x,\r\n                            y: offset.y\r\n                        },\r\n                        bounds: {}\r\n                    });\r\n\r\n                    rubber.query.css({\r\n                        width: 0,\r\n                        height: 0,\r\n                        // transform: 'translate(' + (collecting.start.x - position.left) + 'px, ' + (collecting.start.y - position.top) + 'px)'\r\n                        transform: 'translate(' + (collecting.start.x) + 'px, ' + (collecting.start.y) + 'px)'\r\n                    });\r\n                },\r\n\r\n                onmove: function(e) {\r\n                    var start = collecting.start,\r\n                        offset = {\r\n                            x: e.clientX - position.left,\r\n                            y: e.clientY - position.top\r\n                        },\r\n                        end = {\r\n                            // x: e.clientX,\r\n                            // y: e.clientY\r\n                            x: offset.x,\r\n                            y: offset.y\r\n                        };\r\n\r\n                    var bounds;\r\n\r\n                    if ((start.x <= end.x && start.y < end.y) || (start.x < end.x && start.y <= end.y)) {\r\n                        bounds = {\r\n                            x: start.x,\r\n                            y: start.y,\r\n                            width:  end.x - start.x,\r\n                            height: end.y - start.y\r\n                        };\r\n                    } else if ((start.x >= end.x && start.y < end.y) || (start.x > end.x && start.y <= end.y)) {\r\n                        bounds = {\r\n                            x: end.x,\r\n                            y: start.y,\r\n                            width:  start.x - end.x,\r\n                            height: end.y - start.y\r\n                        };\r\n                    } else if ((start.x <= end.x && start.y > end.y) || (start.x < end.x && start.y >= end.y)) {\r\n                        bounds = {\r\n                            x: start.x,\r\n                            y: end.y,\r\n                            width:  end.x - start.x,\r\n                            height: start.y - end.y\r\n                        };\r\n                    } else if ((start.x >= end.x && start.y > end.y) || (start.x > end.x && start.y >= end.y)) {\r\n                        bounds = {\r\n                            x: end.x,\r\n                            y: end.y,\r\n                            width:  start.x - end.x,\r\n                            height: start.y - end.y\r\n                        };\r\n                    } else {\r\n                        bounds = {\r\n                            x: end.x,\r\n                            y: end.y,\r\n                            width:  0,\r\n                            height: 0\r\n                        };\r\n                    }\r\n\r\n                    collecting.bounds = bounds;\r\n\r\n                    rubber.query.css({\r\n                        width:  bounds.width,\r\n                        height: bounds.height,\r\n                        // transform: 'translate(' + (bounds.x - position.left) + 'px,' + (bounds.y - position.top) + 'px)'\r\n                        transform: 'translate(' + (bounds.x) + 'px,' + (bounds.y) + 'px)'\r\n                    });\r\n                },\r\n\r\n                onend: function() {\r\n                    \r\n                    if ( ! collecting.enabled) return;\r\n                    collecting.enabled = false;\r\n\r\n                    var context = paper.guid(),\r\n                        vectors = Graph.registry.vector.collect(context),\r\n                        bounds = collecting.bounds;\r\n\r\n                    var start = layout.pointerLocation({\r\n                        clientX: bounds.x + position.left,\r\n                        clientY: bounds.y + position.top\r\n                    });\r\n\r\n                    var end = layout.pointerLocation({\r\n                        clientX: bounds.x + position.left + bounds.width,\r\n                        clientY: bounds.y + position.top + bounds.height\r\n                    });\r\n                    \r\n                    var bbox = new Graph.lang.BBox({\r\n                        x: start.x,\r\n                        y: start.y,\r\n                        x2: end.x,\r\n                        y2: end.y,\r\n                        width: end.x - start.x,\r\n                        height: end.y - start.y\r\n                    });\r\n\r\n                    bbox.transform(paper.viewport().matrix());\r\n\r\n                    _.forEach(vectors, function(v){\r\n                        if (v.guid() != context && v.isSelectable() && ! v.isGroup()) {\r\n                            if (bbox.contains(v)) {\r\n                                me.collect(v, true);\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    if (me.props.activator == 'tool') {\r\n                        paper.tool().activate('panzoom');\r\n                    }\r\n\r\n                    bbox = null;\r\n                    me.suspend();\r\n                }\r\n            })\r\n            .on('down', function(e){\r\n                var target, single, vector;\r\n\r\n                target = Graph.event.target(e);\r\n                single = ! (e.ctrlKey || e.shiftKey);\r\n                vector = Graph.registry.vector.get(target);\r\n\r\n                if (vector) {\r\n                    if ( ! vector.isSelectable()) {\r\n                        if ( \r\n                            ! vector.elem.belong('graph-resizer') && \r\n                            ! vector.elem.belong('graph-link') && \r\n                            ! vector.elem.belong('graph-rotator')\r\n                        ) {\r\n                            if (single) {\r\n                                me.clearCollection();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            .on('tap', function(e){\r\n                var target, vector, single;\r\n                \r\n                target = Graph.event.target(e);\r\n                vector = Graph.registry.vector.get(target);\r\n                single = ! (e.ctrlKey || e.shiftKey);\r\n\r\n                if (vector && vector.isSelectable()) {\r\n                    if (vector.paper().state() == 'linking') {\r\n                        me.clearCollection();\r\n                        return;\r\n                    }\r\n\r\n                    if (single) {\r\n                        me.clearCollection();\r\n                    }\r\n\r\n                    me.collect(vector);\r\n                }\r\n\r\n            }, true)\r\n            .on('move', function(e){\r\n                var i = e.interaction;\r\n\r\n                if (me.props.enabled) {\r\n                    if (i.pointerIsDown && ! i.interacting()) {\r\n                        var action = {name: 'drag'};\r\n\r\n                        // -- workaround for a bug in v1.2.6 of interact.js\r\n                        i.prepared.name = action.name;\r\n                        i.setEventXY(i.startCoords, i.pointers);\r\n\r\n                        if (e.currentTarget === paper.node()) {\r\n                            if (me.props.suspended) {\r\n                                me.resume();\r\n                            }\r\n                            i.start(action, e.interactable, rubber.node());\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        render: function() {\r\n            var me = this;\r\n\r\n            if (me.props.rendered) {\r\n                return;\r\n            }\r\n\r\n            me.paper.container().append(me.components.rubber);\r\n            me.props.rendered = true;\r\n        },\r\n\r\n        size: function() {\r\n            return this.collection.size();\r\n        },\r\n\r\n        index: function(vector) {\r\n            return this.collection.index(vector);\r\n        },\r\n\r\n        add: function(vector) {\r\n            var offset = this.index(vector);\r\n            vector._collector = this;\r\n            if (offset === -1) {\r\n                this.collection.push(vector);\r\n            }\r\n        },\r\n\r\n        remove: function(vector) {\r\n            delete vector._collector;\r\n            this.collection.pull(vector);\r\n        },\r\n\r\n        collect: function(vector) {\r\n            vector.select();\r\n            Graph.cached.paper = this.paper.guid();\r\n        },\r\n\r\n        decollect: function(vector) {\r\n            vector.deselect();\r\n        },\r\n\r\n        clearCollection: function() {\r\n            var me = this,\r\n                collection = me.collection.toArray().slice();\r\n\r\n            _.forEach(collection, function(vector){\r\n                me.decollect(vector);\r\n            });\r\n\r\n            collection = null;\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.components.rubber.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            if (this.props.suspended) {\r\n                this.props.suspended = false;\r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else {\r\n                    this.paper.container().append(this.components.rubber);\r\n                }\r\n            }\r\n        },\r\n\r\n        syncBeforeDrag: function(master, e) {\r\n            var me = this;\r\n\r\n            me.collection.each(function(v){\r\n                if (v.plugins.dragger && v.plugins.dragger.props.enabled && v !== master) {\r\n                    (function(){\r\n                        // var mat = v.graph.matrix.data(),\r\n                        //     sin = mat.sin,\r\n                        //     cos = mat.cos;\r\n\r\n                        var rotate = v.matrixCurrent().rotate(),\r\n                            rad = rotate.rad,\r\n                            sin = Math.sin(rad),\r\n                            cos = Math.cos(rad);\r\n\r\n                        if (v.plugins.resizer && ! v.plugins.resizer.props.suspended) {\r\n                            v.plugins.resizer.suspend();\r\n                        }\r\n\r\n                        if (v.plugins.rotator && ! v.plugins.rotator.props.suspended) {\r\n                            v.plugins.rotator.suspend();\r\n                        }\r\n\r\n                        if (v.plugins.dragger.props.ghost) {\r\n                            v.plugins.dragger.resume();\r\n                        }\r\n\r\n                        v.syncdrag = {\r\n                            sin: sin,\r\n                            cos: cos,\r\n                            tdx: 0,\r\n                            tdy: 0\r\n                        };\r\n\r\n                        v.addClass('dragging');\r\n\r\n                        v.fire('beforedrag', {\r\n                            dx: e.dx *  cos + e.dy * sin,\r\n                            dy: e.dx * -sin + e.dy * cos,\r\n                            master: false\r\n                        });\r\n\r\n                    }());\r\n                }\r\n            });\r\n\r\n            me.fire('beforedrag');\r\n        },\r\n\r\n        syncDrag: function(master, e) {\r\n            var me = this;\r\n\r\n            me.collection.each(function(v){\r\n                if (v.plugins.dragger && v.plugins.dragger.props.enabled && v !== master) {\r\n                    (function(v, e){\r\n                        var dx = e.tx *  v.syncdrag.cos + e.ty * v.syncdrag.sin,\r\n                            dy = e.tx * -v.syncdrag.sin + e.ty * v.syncdrag.cos;\r\n\r\n                        if (v.plugins.dragger.props.ghost) {\r\n                            v.plugins.dragger.helper().translate(dx, dy).commit();\r\n                        } else {\r\n                            v.translate(dx, dy).commit();\r\n                        }\r\n\r\n                        v.syncdrag.tdx += dx;\r\n                        v.syncdrag.tdy += dy;\r\n\r\n                        v.fire('drag', {\r\n                            dx: dx,\r\n                            dy: dy,\r\n                            master: false\r\n                        });\r\n\r\n                    }(v, e));\r\n                }\r\n            });\r\n\r\n        },\r\n\r\n        syncAfterDrag: function(master, e) {\r\n            var me = this;\r\n\r\n            me.collection.each(function(v){\r\n                if (v.plugins.dragger && v.plugins.dragger.props.enabled && v !== master) {\r\n                    (function(v, e){\r\n                        var batchSync = v.plugins.dragger.props.batchSync,\r\n                            ghost = v.plugins.dragger.props.ghost;\r\n\r\n                        if (ghost) {\r\n                            if (batchSync) {\r\n                                v.translate(v.syncdrag.tdx, v.syncdrag.tdy).commit();\r\n                            }\r\n                            v.plugins.dragger.suspend();\r\n                        }\r\n\r\n                        if ( ! batchSync) {\r\n                            v.dirty(true);\r\n                        }\r\n\r\n                        v.fire('afterdrag', {\r\n                            dx: v.syncdrag.tdx,\r\n                            dy: v.syncdrag.tdy,\r\n                            batch: true,\r\n                            master: false\r\n                        });\r\n\r\n                        v.removeClass('dragging');\r\n\r\n                        delete v.syncdrag;\r\n\r\n                    }(v, e));\r\n                }\r\n            });\r\n\r\n            e.type = 'afterdrag';\r\n            me.fire(e);\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Collector';\r\n        },\r\n\r\n        onKeynavDown: function(e) {\r\n            if (e.keyCode == Graph.event.SHIFT && this.props.activator != 'key') {\r\n                var tool = this.paper.tool(),\r\n                    curr = tool.current();\r\n\r\n                if (curr != 'collector') {\r\n                    tool.activate('collector', 'key');\r\n                }\r\n            }\r\n        },\r\n\r\n        onKeynavUp: function(e) {\r\n            if (e.keyCode == Graph.event.SHIFT) {\r\n                var tool = this.paper.tool(),\r\n                    curr = tool.current();\r\n\r\n                if (curr == 'collector') {\r\n                    this.props.activator = 'tool';\r\n                    tool.activate('panzoom');\r\n                }\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.plugin.Dragger = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            ready: false,\r\n            manual: false,\r\n\r\n            ghost: true,\r\n            vector: null,\r\n            enabled: true,\r\n            rendered: false,\r\n            suspended: true,\r\n            inertia: false,\r\n            bound: false,\r\n            grid: null,\r\n            axis: false,\r\n            cursor: 'move',\r\n\r\n            cls: '',\r\n\r\n            // batching operation\r\n            batchSync: true,\r\n            restriction: false\r\n        },\r\n\r\n        rotation: {\r\n            deg: 0,\r\n            rad: 0,\r\n            sin: 0,\r\n            cos: 1\r\n        },\r\n\r\n        scaling: {\r\n            x: 1,\r\n            y: 1\r\n        },\r\n\r\n        dragging: {\r\n            enabled: false,\r\n            vector: null,\r\n            paper: null,\r\n            helper: null,\r\n            dx: 0,\r\n            dy: 0,\r\n            coord: null\r\n        },\r\n\r\n        components: {\r\n            holder: null,\r\n            helper: null\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var me = this;\r\n\r\n            vector.addClass('graph-draggable');\r\n            me.props.vector = vector.guid();\r\n\r\n            options = _.extend({\r\n                inertia: false\r\n            }, options || {});\r\n\r\n            _.forEach(['axis', 'grid', 'bbox', 'ghost'], function(name){\r\n                if (options[name] !== undefined) {\r\n                    me.props[name] = options[name];\r\n                }\r\n            });\r\n\r\n            _.assign(me.props, options);\r\n\r\n            me.cached.snapping = null;\r\n            me.cached.origin = null;\r\n\r\n            me.initComponent();\r\n            \r\n            vector.on('render.dragger', _.bind(me.onVectorRender, me));\r\n\r\n            if (vector.props.rendered) {\r\n                me.setup();\r\n            }\r\n        },\r\n\r\n        holder: function() {\r\n            return Graph.registry.vector.get(this.components.holder);\r\n        },\r\n\r\n        helper: function() {\r\n            return Graph.registry.vector.get(this.components.helper);\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = me.components;\r\n            var holder, helper;\r\n\r\n            if (me.props.ghost) {\r\n                holder = (new Graph.svg.Group())\r\n                    .addClass('graph-dragger')\r\n                    .removeClass('graph-elem graph-elem-group')\r\n                    .traversable(false)\r\n                    .selectable(false);\r\n\r\n                helper = (new Graph.svg.Rect(0, 0, 0, 0, 0))\r\n                    .addClass('graph-dragger-helper' + ((this.props.cls ? ' ' : '') + this.props.cls ))\r\n                    .removeClass('graph-elem graph-elem-rect')\r\n                    .traversable(false)\r\n                    .selectable(false)\r\n                    .clickable(false)\r\n                    .render(holder);\r\n\r\n                helper.elem.data(Graph.string.ID_VECTOR, this.vector().guid());\r\n\r\n                comp.holder = holder.guid();\r\n                comp.helper = helper.guid();\r\n\r\n                holder = null;\r\n                helper = null;\r\n            } else {\r\n                this.props.cls && (this.vector().addClass(this.props.cls));\r\n            }\r\n        },\r\n\r\n        setup: function() {\r\n            var me, vector, vendor, paper, options;\r\n\r\n            if (this.props.ready) {\r\n                return;\r\n            }\r\n\r\n            me = this;\r\n            vector = me.vector();\r\n            paper = vector.paper();\r\n            options = {};\r\n\r\n            _.extend(options, {\r\n                manualStart: true,\r\n                onstart: _.bind(me.onDragStart, me),\r\n                onmove: _.bind(me.onDragMove, me),\r\n                onend: _.bind(me.onDragEnd, me)\r\n            });\r\n\r\n            vendor = vector.interactable().vendor();\r\n            vendor.draggable(options);\r\n            vendor.styleCursor(false);\r\n\r\n            me.cached.origin = vendor.origin();\r\n            me.cached.snapping = [];\r\n\r\n            vendor.on('down', _.bind(me.onPointerDown, me));\r\n\r\n            if (me.props.grid) {\r\n                me.snap({\r\n                    mode: 'grid',\r\n                    x: me.props.grid[0],\r\n                    y: me.props.grid[1]\r\n                });\r\n            }\r\n\r\n            me.props.ready = true;\r\n        },\r\n\r\n        enable: function() {\r\n            this.props.enabled = true;\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.enabled = false;\r\n        },\r\n\r\n        ghost: function(ghost) {\r\n            if (ghost === undefined) {\r\n                return this.props.ghost;\r\n            }\r\n            \r\n            this.props.ghost = ghost;\r\n            return this;\r\n        },\r\n\r\n        render: function() {\r\n            if (this.props.ghost) {\r\n                if ( ! this.props.rendered) {\r\n                    this.props.rendered = true;\r\n                    this.holder().render(this.vector().parent());\r\n                    this.redraw();\r\n                }\r\n            }\r\n        },\r\n\r\n        suspend: function() {\r\n            if (this.props.ghost) {\r\n                this.props.suspended = true;\r\n                this.holder().elem.detach();    \r\n            }\r\n        },\r\n\r\n        resume: function() {\r\n            if (this.props.ghost) {\r\n                this.props.suspended = false;\r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else {\r\n                    this.vector().parent().elem.append(this.holder().elem);\r\n                    this.redraw();\r\n                }    \r\n            }\r\n        },\r\n\r\n        redraw: function() {\r\n            if (this.props.ghost) {\r\n                var vector = this.vector(),\r\n                    helper = this.helper(),\r\n                    matrix = vector.matrix(),\r\n                    rotate = matrix.rotate().deg,\r\n                    bound = vector.bbox().toJson();\r\n\r\n                var cx, cy;\r\n\r\n                if (rotate) {\r\n                    var rmatrix = Graph.matrix(),\r\n                        rpath = vector.shapeRelative();\r\n\r\n                    cx = bound.x + bound.width / 2,\r\n                    cy = bound.y + bound.height /2;\r\n\r\n                    rmatrix.rotate(-rotate, cx, cy);\r\n\r\n                    rpath = rpath.transform(rmatrix);\r\n                    bound = rpath.bbox().toJson();\r\n                }\r\n\r\n                helper.reset();\r\n\r\n                helper.attr({\r\n                    x: bound.x,\r\n                    y: bound.y,\r\n                    width: bound.width,\r\n                    height: bound.height\r\n                });\r\n\r\n                if (rotate) {\r\n                    helper.rotate(rotate, cx, cy).commit();\r\n                }\r\n            }\r\n        },\r\n\r\n        origin: function(origin) {\r\n            if (origin === undefined) {\r\n                return this.cached.origin;\r\n            }\r\n\r\n            this.cached.origin = origin;\r\n\r\n            var vendor = this.vector().interactable().vendor();\r\n\r\n            if (vendor) {\r\n                vendor.origin(origin);\r\n            }\r\n        },\r\n\r\n        snap: function(snap, end) {\r\n\r\n            if (snap === undefined) {\r\n                return this.cached.snapping;\r\n            }\r\n\r\n            if (end === undefined) {\r\n                end = false;\r\n            }\r\n\r\n            var me = this, snaps = [];\r\n\r\n            // save original request\r\n            this.cached.snapping = snap;\r\n\r\n            if (_.isArray(snap)) {\r\n                _.forEach(snap, function(s){\r\n                    snaps.push(fixsnap(s));\r\n                });\r\n            } else {\r\n                snaps.push(fixsnap(snap));\r\n            }\r\n\r\n            var vendor = this.vector().interactable().vendor();\r\n\r\n            if (vendor) {\r\n                vendor.setOptions('snap', {\r\n                    targets: snaps,\r\n                    endOnly: end\r\n                });\r\n            }\r\n\r\n            /////////\r\n\r\n            function fixsnap(snap) {\r\n\r\n                if (_.isFunction(snap)) {\r\n                    return snap;\r\n                }\r\n\r\n                snap.mode = _.defaultTo(snap.mode, 'anchor');\r\n\r\n                if (snap.mode == 'grid') {\r\n                    if (me.props.axis == 'x') {\r\n                        snap.y = 0;\r\n                    } else if (me.props.axis == 'y') {\r\n                        snap.x = 0;\r\n                    }\r\n                    snap = interact.createSnapGrid({x: snap.x, y: snap.y});\r\n                } else {\r\n                    snap.range = _.defaultTo(snap.range, 20);\r\n                }\r\n                return snap;\r\n            }\r\n        },\r\n\r\n        resetSnap: function() {\r\n            this.snaps = [];\r\n\r\n            this.snap({\r\n                mode: 'grid',\r\n                x: this.props.grid[0],\r\n                y: this.props.grid[1]\r\n            });\r\n        },\r\n\r\n        restrict: function(options) {\r\n            this.props.restriction = options;\r\n        },\r\n\r\n        start: function() {\r\n            var me = this, \r\n                vector = me.vector(),\r\n                vendor = vector.interactable().vendor();\r\n\r\n            if (me.props.manual) {\r\n                return;\r\n            }\r\n\r\n            if (me.dragging.enabled) {\r\n                return;\r\n            }\r\n\r\n            me.dragging.enabled = true;\r\n            me.dragging.moveHandler = _.bind(me.onPointerMove, me, _, vector);\r\n            \r\n            vendor.on('move', me.dragging.moveHandler);\r\n        },\r\n\r\n        onVectorRender: function() {\r\n            this.setup();\r\n        },\r\n\r\n        onPointerDown: function draggerDown(e) {\r\n            e.preventDefault();\r\n            this.start();\r\n        },\r\n\r\n        onPointerMove: function draggerMove(e, vector) {\r\n            var i = e.interaction;\r\n\r\n            if (this.props.enabled) {\r\n                if (i.pointerIsDown && ! i.interacting()) {\r\n                    var paper = vector.paper(),\r\n                        node = vector.node(),\r\n                        action = { name: 'drag' };\r\n\r\n                    // -- workaround for a bug in v1.2.6 of interact.js\r\n                    i.prepared.name = action.name;\r\n                    i.setEventXY(i.startCoords, i.pointers);\r\n\r\n                    if (e.currentTarget === node) {\r\n                        if (paper) {\r\n                            var state = paper.state();\r\n\r\n                            if (state == 'collecting') {\r\n                                if (vector.elem.belong('graph-resizer')) {\r\n                                    paper.tool().activate('panzoom');\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            } else if (state == 'linking') {\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        if (this.props.ghost) {\r\n                            if (this.props.suspended) {\r\n                                this.resume();\r\n                            }\r\n                            i.start(action, e.interactable, this.helper().node());\r\n                        } else {\r\n                            i.start(action, e.interactable, node);\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n            e.preventDefault();\r\n\r\n        },\r\n\r\n        onDragStart: function(e) {\r\n            var vector = this.vector(),\r\n                paper = vector.paper(),\r\n                layout = paper.layout(),\r\n                helper = this.helper();\r\n\r\n            vector.addClass('dragging');\r\n\r\n            paper.cursor(this.props.cursor);\r\n\r\n            this.dragging.vector = vector;\r\n            this.dragging.paper = paper;\r\n            this.dragging.helper = helper;\r\n\r\n            this.dragging.dx = 0;\r\n            this.dragging.dy = 0;\r\n            this.dragging.tx = 0;\r\n            this.dragging.ty = 0;\r\n\r\n            var matrix = vector.matrixCurrent(),\r\n                rotate = matrix.rotate(),\r\n                scale  = matrix.scale();\r\n\r\n            this.dragging.deg = rotate.deg;\r\n            this.dragging.rad = rotate.rad;\r\n            this.dragging.sin = Math.sin(rotate.rad);\r\n            this.dragging.cos = Math.cos(rotate.rad);\r\n            this.dragging.sx = scale.x;\r\n            this.dragging.sy = scale.y;\r\n\r\n            var edata = {\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n                dx: 0,\r\n                dy: 0,\r\n                ghost: this.props.ghost\r\n            };\r\n\r\n            this.fire('beforedrag', edata);\r\n\r\n            var coord = layout.pointerLocation(e);\r\n            this.dragging.coord = coord;\r\n        },\r\n\r\n        onDragMove: function(e) {\r\n\r\n            var dragging = this.dragging,\r\n                paper = dragging.paper,\r\n                vector = dragging.vector,\r\n                helper = dragging.helper,\r\n                ghost = this.props.ghost,\r\n                axs = this.props.axis,\r\n                deg = dragging.deg,\r\n                sin = dragging.sin,\r\n                cos = dragging.cos,\r\n                scaleX = dragging.sx,\r\n                scaleY = dragging.sy;\r\n\r\n            var tx = _.defaultTo(e.dx, 0),\r\n                ty = _.defaultTo(e.dy, 0);\r\n\r\n            var dx, dy, mx, my;\r\n\r\n            dx = dy = mx = my = 0;\r\n\r\n            tx /= scaleX;\r\n            ty /= scaleY;\r\n            \r\n            if (axs == 'x') {\r\n                dx = tx;\r\n                dy = 0;\r\n\r\n                mx = tx *  cos + 0 * sin;\r\n                my = tx * -sin + 0 * cos;\r\n            } else if (axs == 'y') {\r\n                dx = 0;\r\n                dy = ty;\r\n\r\n                mx = 0 *  cos + ty * sin;\r\n                my = 0 * -sin + ty * cos;\r\n            } else {\r\n                dx = mx = tx *  cos + ty * sin;\r\n                dy = my = tx * -sin + ty * cos;\r\n            }\r\n\r\n            // check restriction\r\n            var restriction = this.props.restriction;\r\n\r\n            if (restriction) {\r\n                var coord = this.dragging.coord;\r\n\r\n                coord.x += dx;\r\n                coord.y += dy;\r\n\r\n                if (coord.x < restriction.left || coord.x > restriction.right) {\r\n                    dx = mx = tx = 0;\r\n                }\r\n                \r\n                if (coord.y < restriction.top || coord.y > restriction.bottom) {\r\n                    dy = my = ty = 0;\r\n                }\r\n            }\r\n\r\n            this.dragging.dx += mx;\r\n            this.dragging.dy += my;\r\n            this.dragging.tx += tx;\r\n            this.dragging.ty += ty;\r\n\r\n            var pageX = _.defaultTo(e.pageX, e.x0),\r\n                pageX = _.defaultTo(e.pageY, e.y0);\r\n\r\n            pageX /= scaleX;\r\n            pageX /= scaleY;\r\n\r\n            var event = {\r\n                pageX: pageX,\r\n                pageY: pageX,\r\n\r\n                tx: tx,\r\n                ty: ty,\r\n\r\n                dx: dx,\r\n                dy: dy,\r\n\r\n                ghost: this.props.ghost\r\n            };\r\n\r\n            this.fire('drag', event);\r\n\r\n            if (ghost) {\r\n                helper.translate(event.dx, event.dy).commit();\r\n            } else {\r\n                vector.translate(event.dx, event.dy).commit();\r\n            }\r\n        },\r\n\r\n        onDragEnd: function(e) {\r\n            var dragging = this.dragging,\r\n                paper = dragging.paper,\r\n                vector = dragging.vector,\r\n                helper = dragging.helper,\r\n                ghost = this.props.ghost,\r\n                dx = dragging.dx,\r\n                dy = dragging.dy,\r\n                tx = dragging.tx,\r\n                ty = dragging.ty;\r\n\r\n            if (ghost) {\r\n                vector.translate(dx, dy).commit();\r\n\r\n                this.redraw();\r\n                this.suspend();\r\n            }\r\n\r\n            vector.removeClass('dragging');\r\n            paper.cursor('default');\r\n\r\n            var edata = {\r\n                dx: dx,\r\n                dy: dy,\r\n                tx: tx,\r\n                ty: ty,\r\n                ghost: this.props.ghost\r\n            };\r\n\r\n            var vendor = vector.interactable().vendor();\r\n            vendor.off('move', this.dragging.moveHandler);\r\n            \r\n            this.dragging.moveHandler = null;\r\n            this.dragging.enabled = false;\r\n\r\n            this.fire('afterdrag', edata);\r\n\r\n            for (var key in this.dragging) {\r\n                this.dragging[key] = null;\r\n            }\r\n\r\n        },\r\n\r\n        destroy: function() {\r\n            var me = this;\r\n\r\n            if (me.components.helper) {\r\n                me.helper().remove();\r\n            }\r\n\r\n            me.components.helper = null;\r\n\r\n            if (me.components.holder) {\r\n                me.holder().remove();\r\n            }\r\n\r\n            me.components.holder = null;\r\n            me.listeners = {};\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Dragger';\r\n        }\r\n    });\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.plugin.Dropper = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            overlap: 'center',\r\n            accept: '.graph-draggable'\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var me = this;\r\n\r\n            _.assign(me.props, options || {});\r\n            vector.addClass('graph-dropzone').removeClass('graph-draggable');\r\n\r\n            me.props.vector = vector.guid();    \r\n            \r\n            vector.on({\r\n                render: _.bind(me.onVectorRender, me)\r\n            });\r\n\r\n            if (vector.props.rendered) {\r\n                me.setup();\r\n            }\r\n        },\r\n\r\n        setup: function() {\r\n            var me = this;\r\n\r\n            if (me.plugin) {\r\n                return;\r\n            }\r\n\r\n            var config = _.extend({}, me.props, {\r\n                checker: _.bind(me.onDropValidate, me),\r\n\r\n                ondropactivate: _.bind(me.onDropActivate, me),\r\n                ondropdeactivate: _.bind(me.onDropDeactivate, me),\r\n                ondragenter: _.bind(me.onDragEnter, me),\r\n                ondragleave: _.bind(me.onDragLeave, me),\r\n                ondrop: _.bind(me.onDrop, me)\r\n            });\r\n\r\n            me.plugin = me.vector.interactable().dropzone(config);\r\n        },\r\n\r\n        onDropValidate: function( edrop, edrag, dropped, dropzone, dropel, draggable, dragel ) {\r\n            return dropped;\r\n            /*if (dropped) {\r\n                if (this.config.validate) {\r\n                    var args = _.toArray(arguments);\r\n                    dropped = this.config.validate.apply(this, args);\r\n                }    \r\n            }\r\n            \r\n            return dropped;*/\r\n        },\r\n\r\n        onVectorRender: function() {\r\n            this.setup();\r\n        },\r\n\r\n        onDropActivate: function(e) {\r\n            this.vector().addClass('drop-activate');\r\n        },\r\n\r\n        onDropDeactivate: function(e) {\r\n            this.vector().removeClass('drop-activate');\r\n        },\r\n\r\n        onDragEnter: function(e) {\r\n            this.vector().removeClass('drop-activate').addClass('drop-enter');\r\n            e.type = 'dropenter';\r\n            this.fire(e);\r\n        },\r\n\r\n        onDragLeave: function(e) {\r\n            this.vector().removeClass('drop-enter').addClass('drop-activate');\r\n            e.type = 'dropleave';\r\n            this.fire(e);\r\n        },\r\n\r\n        onDrop: function(e) {\r\n            this.vector().removeClass('drop-activate drop-enter');\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    var CLS_CONNECT_VALID = 'connect-valid',\r\n        CLS_CONNECT_INVALID = 'connect-invalid',\r\n        CLS_CONNECT_RESET = 'connect-valid connect-invalid',\r\n        CLS_CONNECT_CLEAR = 'connect-valid connect-invalid connect-hover',\r\n        CLS_CONNECT_HOVER = 'connect-hover',\r\n\r\n        CONNECT_OUTGOING = 'outgoing',\r\n        CONNECT_INCOMING = 'incoming';\r\n\r\n    Graph.plugin.Network = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n            wiring: 'h:h',\r\n            tuning: true,\r\n            limitIncoming: 0,\r\n            limitOutgoing: 0\r\n        },\r\n\r\n        linking: {\r\n            valid: false,\r\n            router: null,\r\n            source: null,\r\n            target: null,\r\n            link: null,\r\n            pole: null\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var me = this, guid = vector.guid();\r\n\r\n            options = options || {};\r\n\r\n            _.assign(me.props, options);\r\n\r\n            me.props.vector = guid;\r\n\r\n            me.cached.cables = {};\r\n            me.cached.pairs = {};\r\n\r\n            vector.addClass('graph-connectable');\r\n\r\n            // setup link droppable\r\n\r\n            var vendor = vector.interactable().vendor();\r\n\r\n            vendor.dropzone({\r\n                accept: _.format('.{0}, .{1}', Graph.styles.LINK_HEAD, Graph.styles.LINK_TAIL),\r\n                overlap: .2\r\n            })\r\n            .on('dropdeactivate', function(e){\r\n                var t = Graph.event.target(e);\r\n                var v = Graph.registry.vector.get(t);\r\n                if (v) {\r\n                    v.removeClass(CLS_CONNECT_CLEAR);\r\n                }\r\n                me.invalidateTrans();\r\n            })\r\n            .on('dropactivate', function(e){\r\n                var t = Graph.event.target(e);\r\n                var v = Graph.registry.vector.get(t);\r\n\r\n                if (v) {\r\n                    v.addClass(CLS_CONNECT_HOVER);\r\n                }\r\n\r\n                me.invalidateTrans();\r\n            })\r\n            .on('dragenter', function(e){\r\n                var link = Graph.registry.link.get(e.relatedTarget);\r\n\r\n                if (link) {\r\n                    var pole = Graph.$(e.relatedTarget).data('pole');\r\n                    var valid, source, target;\r\n\r\n                    if (pole == 'head') {\r\n                        source = link.router.source();\r\n                        target = vector;\r\n                    } else {\r\n                        source = vector;\r\n                        target = link.router.target();\r\n                    }\r\n\r\n                    valid  = source.connectable().canConnect(target.connectable(), link);\r\n\r\n                    if (valid) {\r\n                        vector.removeClass(CLS_CONNECT_INVALID);\r\n                        vector.addClass(CLS_CONNECT_VALID);\r\n                    } else {\r\n                        vector.removeClass(CLS_CONNECT_VALID);\r\n                        vector.addClass(CLS_CONNECT_INVALID);\r\n                    }\r\n\r\n                    _.assign(me.linking, {\r\n                        valid: valid,\r\n                        router: link.router,\r\n                        source: source,\r\n                        target: target,\r\n                        pole: pole\r\n                    });\r\n\r\n                    link.router.updateTrans('CONNECT', {\r\n                        valid: valid,\r\n                        source: source,\r\n                        target: target\r\n                    });\r\n                }\r\n            })\r\n            .on('dragleave', function(e){\r\n                var t = Graph.event.target(e);\r\n                var v = Graph.registry.vector.get(t);\r\n                if (v) {\r\n                    v.removeClass(CLS_CONNECT_RESET);\r\n                }\r\n\r\n                me.linking.valid = false;\r\n\r\n                if (me.linking.pole == 'head') {\r\n                    me.linking.router.updateTrans('CONNECT', {\r\n                        valid: false,\r\n                        target: null\r\n                    });\r\n                } else {\r\n                    me.linking.router.updateTrans('CONNECT', {\r\n                        valid: false,\r\n                        source: null\r\n                    });\r\n                }\r\n\r\n            })\r\n            .on('drop', function(e){\r\n                var link = Graph.registry.link.get(e.relatedTarget);\r\n\r\n                if (me.linking.valid) {\r\n                    if (me.linking.pole == 'head') {\r\n\r\n                        var oldTarget = me.linking.router.target();\r\n                        \r\n                        if (oldTarget && oldTarget.guid() != vector.guid()) {\r\n                            oldTarget.connectable().removeLink(link);\r\n                        }\r\n\r\n                        me.linking.router.updateTrans('CONNECT', {\r\n                            target: vector\r\n                        });\r\n\r\n                    } else {\r\n\r\n                        var oldSource = me.linking.router.source();\r\n\r\n                        if (oldSource && oldSource.guid() != vector.guid()) {\r\n                            oldSource.connectable().removeLink(link);\r\n                        }\r\n\r\n                        me.linking.router.updateTrans('CONNECT', {\r\n                            source: vector\r\n                        });\r\n\r\n\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        invalidateTrans: function() {\r\n            for (var name in this.linking) {\r\n                this.linking[name] = null;\r\n            }\r\n        },\r\n\r\n        wiring: function() {\r\n            return this.props.wiring;\r\n        },\r\n\r\n        treshold: function() {\r\n            var wiring = this.props.wiring;\r\n\r\n            switch(wiring) {\r\n                case 'h:h':\r\n                case 'v:v':\r\n                    return 20;\r\n                case 'h:v':\r\n                case 'v:h':\r\n                    return -10;\r\n            }\r\n\r\n            return 0;\r\n        },\r\n\r\n        direction: function (network) {\r\n            if (this.props.tuning) {\r\n                var orient = this.orientation(network);\r\n\r\n                switch(orient) {\r\n                    case 'intersect':\r\n                        return null;\r\n                    case 'top':\r\n                    case 'bottom':\r\n                        return 'v:v';\r\n                    case 'left':\r\n                    case 'right':\r\n                        return 'h:h';\r\n                    default:\r\n                        return this.props.wiring;\r\n                }    \r\n            } else {\r\n                return this.props.wiring;\r\n            }\r\n        },\r\n\r\n        orientation: function(network) {\r\n            var sourceBox = this.vector().bboxOriginal().toJson(),\r\n                targetBox = network.vector().bboxOriginal().toJson(),\r\n                orientation = Graph.util.boxOrientation(sourceBox, targetBox, this.treshold());\r\n\r\n            sourceBox = targetBox = null;\r\n            return orientation;\r\n        },\r\n\r\n        isSource: function(link) {\r\n            return link.source().guid() == this.vector().guid();\r\n        },\r\n\r\n        isTarget: function(link) {\r\n            return link.target().guid() == this.vector().guid();\r\n        },\r\n\r\n        connect: function(target, start, end, options) {\r\n            if (this.canConnect(target)) {\r\n\r\n                if (start && ! end) {\r\n                    options = start;\r\n                    start = null;\r\n                    end = null;\r\n                } else {\r\n                    if (start instanceof Graph.lang.Point) {\r\n                        start = start.toJson();\r\n                    }\r\n\r\n                    if (end instanceof Graph.lang.Point) {\r\n                        end = end.toJson();\r\n                    }    \r\n                }\r\n\r\n                options = options || {};\r\n\r\n                var source = this,\r\n                    sourceVector = source.vector(),\r\n                    targetVector = target.vector(),\r\n                    paper = sourceVector.paper(),\r\n                    paperLayout = paper.layout(),\r\n                    router = paperLayout.createRouter(sourceVector, targetVector),\r\n                    link = paperLayout.createLink(router, options);\r\n\r\n                if (options.command !== undefined) {\r\n                    link.connectByCommand(options.command);\r\n                } else {\r\n                    link.connect(start, end);    \r\n                }\r\n\r\n                link.render(paper);\r\n\r\n                link.cached.beforeDestroyHandler = _.bind(this.onLinkBeforeDestroy, this);\r\n                link.on('beforedestroy', link.cached.beforeDestroyHandler);\r\n\r\n                source.addLink(link, CONNECT_OUTGOING, targetVector);\r\n                target.addLink(link, CONNECT_INCOMING, sourceVector);\r\n\r\n                sourceVector.fire('connect', {link: link});\r\n\r\n                return link;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        connectByLinker: function(target, start, end, options) {\r\n            var routerType = this.vector().paper().layout().routerType();\r\n\r\n            if (routerType == 'orthogonal') {\r\n                this.connect(target, null, null, options);\r\n            } else {\r\n                this.connect(target, start, end, options);\r\n            }\r\n        },\r\n\r\n        disconnect: function(target, link) {\r\n            var connections = this.connections(target),\r\n                connectionsLength = connections.length,\r\n                disconnected = 0,\r\n                linkIds = [];\r\n\r\n            if (link !== undefined) {\r\n                if ( ! _.isArray(link)) {\r\n                    linkIds = link ? [link.guid()] : [];\r\n                } else {\r\n                    linkIds = _.map(link, function(l){ return l && l.guid() });\r\n                }\r\n            }\r\n            \r\n            _.forEach(connections, function(conn){\r\n                if (linkIds.length) {\r\n                    if (_.indexOf(linkIds, conn.guid) > -1) {\r\n                        conn.link.disconnect();\r\n                        disconnected++;\r\n                        connectionsLength--;\r\n                    }\r\n                } else {\r\n                    conn.link.disconnect();\r\n                    connectionsLength--;\r\n                }\r\n            });\r\n\r\n            if (linkIds.length) {\r\n                return disconnected === linkIds.length;\r\n            } else {\r\n                return connectionsLength === 0;\r\n            }\r\n\r\n        },\r\n\r\n        addLink: function(link, type, pair) {\r\n            var guid = link.guid(),\r\n                cables = this.cached.cables,\r\n                pairs = this.cached.pairs;\r\n\r\n            pair  = pair.guid();\r\n            pairs = pairs || {};\r\n\r\n            pairs[pair] = pairs[pair] || [];\r\n\r\n            if (_.indexOf(pairs[pair], guid) === -1) {\r\n                pairs[pair].push(guid);\r\n            }\r\n\r\n            cables[guid] = {\r\n                type: type,\r\n                pair: pair\r\n            };\r\n        },\r\n\r\n        removeLink: function(link) {\r\n            var guid, pair;\r\n\r\n            if (_.isString(link)) {\r\n                guid = link;\r\n            } else {\r\n                guid = link.guid();\r\n            }\r\n\r\n            var conn = this.cached.cables[guid];\r\n\r\n            if (conn) {\r\n                if (this.cached.pairs[conn.pair]) {\r\n                    var index = _.indexOf(this.cached.pairs[conn.pair], guid);\r\n\r\n                    if (index > -1) {\r\n                        this.cached.pairs[conn.pair].splice(index, 1);\r\n                    }\r\n\r\n                    if ( ! this.cached.pairs[conn.pair].length) {\r\n                        delete this.cached.pairs[conn.pair];\r\n                    }\r\n                }\r\n            }\r\n\r\n            delete this.cached.cables[guid];\r\n            conn = null;\r\n        },\r\n\r\n        repairLinks: function() {\r\n            console.log('called');\r\n        },\r\n\r\n        hasConnection: function(network) {\r\n            var conn = this.connections(network);\r\n            return conn.length ? conn : false;\r\n        },\r\n\r\n        connections: function(network) {\r\n            var me = this,\r\n                registry = Graph.registry.link,\r\n                current = this.props.vector,\r\n                conns = [];\r\n\r\n            if (network !== undefined) {\r\n\r\n                var pair = network.vector().guid();\r\n\r\n                if (this.cached.pairs[pair]) {\r\n                    _.forEach(me.cached.pairs[pair], function(guid){\r\n                        var link = registry.get(guid),\r\n                            opts = me.cached.cables[guid];\r\n                        if (link && opts) {\r\n                            conns.push({\r\n                                guid: guid,\r\n                                link: link,\r\n                                type: opts.type,\r\n                                source: opts.type == 'outgoing' ? current : pair,\r\n                                target: opts.type == 'outgoing' ? pair : current\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                return conns;\r\n            }\r\n\r\n            var cables = me.cached.cables;\r\n\r\n            _.forOwn(cables, function(opts, guid){\r\n                var link = registry.get(guid);\r\n                if (link) {\r\n                    conns.push({\r\n                        guid: guid,\r\n                        link: link,\r\n                        type: opts.type,\r\n                        source: opts.type == 'outgoing' ? current : opts.pair,\r\n                        target: opts.type == 'outgoing' ? opts.pair : current\r\n                    });\r\n                }\r\n            });\r\n\r\n            return conns;\r\n        },\r\n\r\n        ///////// RULES /////////\r\n\r\n        /**\r\n         * Can connect to target\r\n         */\r\n        canConnect: function(target) {\r\n            if (target instanceof Graph.plugin.Network) {\r\n                var sourceVector = this.vector().guid(),\r\n                    targetVector = target.vector().guid();\r\n\r\n                var connections, outgoing, incoming;\r\n\r\n                // check limit outgoing\r\n                if (this.props.limitOutgoing > 0) {\r\n                    connections = this.connections();\r\n                    outgoing = _.filter(connections, function(conn){\r\n                        return conn.type == 'outgoing';\r\n                    });\r\n\r\n                    if (outgoing.length + 1 > this.props.limitOutgoing) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                if (target.props.limitIncoming > 0) {\r\n                    connections = target.connections();\r\n                    \r\n                    incoming = _.filter(connections, function(conn){\r\n                        return conn.type == 'incoming';\r\n                    });\r\n\r\n                    if (incoming.length + 1 > target.props.limitIncoming) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                if (sourceVector != targetVector) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        destroy: function() {\r\n            var me = this;\r\n\r\n            // collect garbage\r\n            this.cached.cables = null;\r\n            this.cached.pairs  = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Network';\r\n        },\r\n\r\n        onLinkBeforeDestroy: function(e) {\r\n            var link = e.link;\r\n            var vector, network;\r\n\r\n            if ((vector = link.router.source())) {\r\n                vector.connectable().removeLink(link);\r\n            }\r\n\r\n            if ((vector = link.router.target())) {\r\n                vector.connectable().removeLink(link);\r\n            }\r\n\r\n            link.off('beforedestroy', link.cached.beforeDestroyHandler);\r\n            link.cached.beforeDestroyHandler = null;\r\n        }\r\n\r\n    });\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.plugin.History = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            limit: 1,\r\n            index: 0\r\n        },\r\n\r\n        items: {},\r\n\r\n        constructor: function(vector) {\r\n            this.props.vector = vector.guid();\r\n        },\r\n\r\n        save: function(prop, data) {\r\n            var lim = this.props.limit, len;\r\n\r\n            if (len > lim) {\r\n                _.drop(this.items, len - lim);\r\n            }\r\n\r\n            this.items[prop] = this.items[prop] || [];\r\n\r\n            if ((len = this.items[prop].length) > lim - 1) {\r\n                this.items[prop].splice(0, len - lim);\r\n            }\r\n\r\n            this.items[prop].push(data);\r\n        },\r\n\r\n        last: function(prop) {\r\n\r\n        },\r\n\r\n        go: function() {\r\n\r\n        },\r\n\r\n        back: function() {\r\n\r\n        },\r\n\r\n        next: function() {\r\n\r\n        },\r\n\r\n        clear: function() {\r\n\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Panzoom = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            panEnabled: false,\r\n            zoomEnabled: true,\r\n            showToolbox: true,\r\n            vector: null\r\n        },\r\n\r\n        caching: {\r\n            offset: {x: 0, y: 0}\r\n        },\r\n\r\n        scrolling: {\r\n            steps: 10\r\n        },\r\n\r\n        zooming: {\r\n            scale: 1,\r\n            zoom: 1,\r\n            origin: null,\r\n            range: {min: 0.2, max: 4.0}\r\n        },\r\n\r\n        components: {\r\n            toolbox: null\r\n        },\r\n\r\n        panning: {\r\n            start: {x: 0, y: 0},\r\n            moveHandler: null,\r\n            stopHandler: null\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            var me = this, vendor, viewport, scale, bound;\r\n\r\n            // validate vector\r\n            if ( ! vector.isPaper()) {\r\n                throw Graph.error('Panzoom only available for paper !');\r\n            }\r\n\r\n            viewport = vector.viewport();\r\n            scale    = Math.round(viewport.matrix().scale().x, 1000);\r\n            vendor   = vector.interactable().vendor();\r\n\r\n            _.assign(me.props, {\r\n                vector: vector.guid()\r\n            });\r\n\r\n            _.assign(me.zooming, {\r\n                scale: scale,\r\n                zoom: scale\r\n            });\r\n\r\n            me.initComponent(vector);\r\n\r\n            // use native engine\r\n            vendor.on('wheel', _.bind(me.onMouseWheel, me, _, vector, viewport));\r\n            vendor.on('down', _.bind(me.onPointerDown, me, _, vector, viewport));\r\n\r\n\r\n            if (vector.props.rendered) {\r\n                me.revalidate(vector);\r\n\r\n                if (me.props.showToolbox) {\r\n                    me.components.toolbox.appendTo(vector.container());\r\n                }\r\n            } else {\r\n                vector.on('render', function(){\r\n                    me.revalidate(vector);\r\n\r\n                    if (me.props.showToolbox) {\r\n                        me.components.toolbox.appendTo(vector.container());\r\n                    }\r\n                });\r\n            }\r\n\r\n            vendor = null;\r\n            vector = null;\r\n        },\r\n\r\n        initComponent: function(vector) {\r\n            var me = this;\r\n            var container, toolbox;\r\n\r\n            if (me.props.showToolbox) {\r\n                container = vector.container();\r\n\r\n                toolbox = me.components.toolbox = Graph.$('<div class=\"graph-zoom-toolbox\">');\r\n                toolbox.html(\r\n                    '<div>' +\r\n                        '<a data-tool=\"zoom-reset\" href=\"javascript:void(0)\" title=\"' + Graph._('Reset zoom') + '\">' + Graph.icons.ZOOM_RESET + '</a>'+\r\n                        '<div class=\"splitter\"></div>'+\r\n                        '<a data-tool=\"zoom-in\" href=\"javascript:void(0)\" title=\"' + Graph._('Zoom in') + '\">' + Graph.icons.ZOOM_IN + '</a>'+\r\n                        '<div class=\"splitter\"></div>'+\r\n                        '<a data-tool=\"zoom-out\" href=\"javascript:void(0)\" title=\"' + Graph._('Zoom out') + '\">' + Graph.icons.ZOOM_OUT +  '</a>'+\r\n                    '</div>'\r\n                );\r\n\r\n                toolbox.on('click', '[data-tool]', function(e){\r\n                    e.preventDefault();\r\n                    var tool = Graph.$(this).data('tool');\r\n                    switch(tool) {\r\n                        case 'zoom-reset':\r\n                            me.zoomReset();\r\n                            break;\r\n                        case 'zoom-in':\r\n                            me.zoomIn();\r\n                            break;\r\n                        case 'zoom-out':\r\n                            me.zoomOut();\r\n                            break;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        revalidate: function(vector) {\r\n            var bound = vector.node().getBoundingClientRect();\r\n\r\n            this.caching.offset = {\r\n                x: bound.left,\r\n                y: bound.top\r\n            };\r\n        },\r\n\r\n        enable: function() {\r\n            var vector = this.vector();\r\n\r\n            this.props.panEnabled = true;\r\n            this.props.zoomEnabled = true;\r\n\r\n            vector.cursor('default');\r\n            vector.state('panning');\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.panEnabled = false;\r\n        },\r\n\r\n        zoomReset: function() {\r\n            var viewport = this.vector().viewport();\r\n            var matrix;\r\n\r\n            this.zooming.zoom = 1;\r\n            this.zooming.scale = 1;\r\n\r\n            viewport.reset();\r\n\r\n            matrix = Graph.matrix();\r\n            // matrix.translate(.5, .5);\r\n\r\n            viewport.attr('transform', matrix.toValue());\r\n            viewport.graph.matrix = matrix;\r\n        },\r\n\r\n        zoomIn: function() {\r\n            var paper = this.vector().paper(),\r\n                viewport = paper.viewport(),\r\n                origin = paper.layout().center(),\r\n                direction = 0.1875;\r\n\r\n            this.zoom(paper, viewport, direction, origin);\r\n        },\r\n\r\n        zoomOut: function() {\r\n            var paper = this.vector().paper(),\r\n                viewport = paper.viewport(),\r\n                origin = paper.layout().center(),\r\n                direction = -0.1875;\r\n\r\n            this.zoom(paper, viewport, direction, origin);\r\n        },\r\n\r\n        zoom: function(paper, viewport, direction, origin) {\r\n            var range = this.zooming.range,\r\n                currentZoom = this.zooming.zoom,\r\n                zoomType = direction > 0 ? 'in' : 'out',\r\n                factor = Math.pow(1 + Math.abs(direction), zoomType == 'in' ? 1 : -1),\r\n                zoom = (zoomRange(range, currentZoom * factor)),\r\n                matrix = viewport.matrix(),\r\n                currentScale = matrix.props.a,\r\n                scale = 1 / currentScale * zoom,\r\n                matrixScale = matrix.clone();\r\n\r\n            this.onBeforeZoom(paper);\r\n\r\n            matrixScale.scale(scale, scale, origin.x, origin.y);\r\n\r\n            viewport.attr('transform', matrixScale.toValue());\r\n            viewport.graph.matrix = matrixScale;\r\n\r\n            this.zooming.zoom  = zoom;\r\n            this.zooming.scale = matrixScale.props.a;\r\n\r\n            if (paper.state() == 'panning') {\r\n                paper.cursor(zoomType == 'in' ? 'zoom-in' : 'zoom-out');\r\n            }\r\n\r\n            this.onZoom(paper);\r\n        },\r\n\r\n        scroll: function(paper, viewport, dx, dy) {\r\n            var matrix = viewport.matrix().clone(),\r\n                scale = this.zooming.scale;\r\n\r\n            this.onBeforeScroll(paper);\r\n\r\n            dx /= scale;\r\n            dy /= scale;\r\n\r\n            matrix.translate(dx, dy);\r\n\r\n            viewport.attr('transform', matrix.toValue());\r\n            viewport.graph.matrix = matrix;\r\n\r\n            if (this.zooming.origin) {\r\n                this.zooming.origin.x += dx;\r\n                this.zooming.origin.y += dy;\r\n            }\r\n\r\n            this.onScroll();\r\n        },\r\n\r\n        onMouseWheel: function(e, paper, viewport) {\r\n\r\n            e = Graph.event.fix(e);\r\n            e.preventDefault();\r\n\r\n            var vscroll = Graph.event.hasPrimaryModifier(e),\r\n                hscroll = Graph.event.hasSecondaryModifier(e),\r\n                event   = Graph.event.original(e);\r\n\r\n            var factor, delta, origin, offset, box;\r\n\r\n            if (vscroll || hscroll) {\r\n\r\n                if (Graph.isMac()) {\r\n                    factor = event.deltaMode === 0 ? 1.25 : 50;\r\n                } else {\r\n                    // factor = event.deltaMode === 0 ? 1/40 : 1/2;\r\n                    factor = event.deltaMode === 0 ? 1 : 20;\r\n                }\r\n\r\n                delta = {};\r\n\r\n                if (hscroll) {\r\n                    delta.dx = (factor * (event.deltaX || event.deltaY));\r\n                    delta.dy = 0;\r\n                } else {\r\n                    delta.dx = 0;\r\n                    delta.dy = (factor * event.deltaY);\r\n                }\r\n\r\n                this.scroll(paper, viewport, delta.dx, delta.dy);\r\n\r\n            } else {\r\n                factor = (event.deltaMode === 0 ? 1/40 : 1/2);\r\n                offset = this.caching.offset;\r\n\r\n                origin = {\r\n                    x: event.clientX - offset.x,\r\n                    y: event.clientY - offset.y\r\n                };\r\n\r\n                this.zooming.origin = origin;\r\n\r\n                // console.log(event.deltaY, factor, event.deltaY * factor / (-15));\r\n\r\n                this.zoom(\r\n                    paper,\r\n                    viewport,\r\n                    // event.deltaY * factor / (-5),\r\n                    event.deltaY * factor / (-8),\r\n                    origin\r\n                );\r\n            }\r\n        },\r\n\r\n        onPointerDown: function(e, paper, viewport, vendor) {\r\n\r\n            var target = Graph.$(Graph.event.target(e)),\r\n                vector = Graph.registry.vector.get(target),\r\n                vendor = paper.interactable().vendor(),\r\n                tool   = paper.tool().current();\r\n\r\n            var offset;\r\n\r\n            if (this.panning.moveHandler) {\r\n                vendor.off('move', this.panning.moveHandler);\r\n                this.panning.moveHandler = null;\r\n            }\r\n\r\n            if (this.panning.stopHandler) {\r\n                vendor.off('up', this.panning.stopHandler);\r\n                this.panning.stopHandler = null;\r\n            }\r\n\r\n            if (' collector pencil '.indexOf(tool) > -1) {\r\n                return;\r\n            }\r\n\r\n            if (vector) {\r\n                // already has drag feature\r\n                if (vector.isDraggable()) {\r\n                    return;\r\n                }\r\n\r\n                // reject non primary button\r\n                if (e.button || e.ctrlKey || e.shiftKey || e.altKey) {\r\n                    return;\r\n                }\r\n\r\n                this.revalidate(paper);\r\n\r\n                offset = this.caching.offset;\r\n\r\n                this.panning.start = {\r\n                    x: e.clientX - offset.x,\r\n                    y: e.clientY - offset.y\r\n                };\r\n\r\n                // install temporary events handler\r\n                this.panning.moveHandler = _.bind(this.onPointerMove, this, _, paper, viewport);\r\n                this.panning.stopHandler = _.bind(this.onPointerStop, this, _, paper, viewport);\r\n\r\n                vendor.on('move', this.panning.moveHandler);\r\n                vendor.on('up', this.panning.stopHandler);\r\n            }\r\n        },\r\n\r\n        onPointerMove: function(e, paper, viewport) {\r\n\r\n            var offset = this.caching.offset,\r\n                start = this.panning.start,\r\n                current = {\r\n                    x: e.clientX - offset.x,\r\n                    y: e.clientY - offset.y\r\n                },\r\n                dx = current.x - start.x,\r\n                dy = current.y - start.y,\r\n                mg = Graph.util.hypo(dx, dy);\r\n\r\n            this.scroll(paper, viewport, dx, dy);\r\n\r\n            this.panning.start = {\r\n                x: e.clientX - offset.x,\r\n                y: e.clientY - offset.y\r\n            };\r\n\r\n            paper.cursor('move');\r\n\r\n            // prevent select\r\n            e.preventDefault();\r\n        },\r\n\r\n        onPointerStop: function(e, paper) {\r\n            var me = this, vendor = paper.interactable().vendor();\r\n            var delay;\r\n\r\n            // wait interact to fire last posible event...\r\n            delay = _.delay(function(){\r\n                clearTimeout(delay);\r\n                delay = null;\r\n\r\n                vendor.off('move', me.panning.moveHandler);\r\n                vendor.off('up', me.panning.stopHandler);\r\n\r\n                me.panning.moveHandler = null;\r\n                me.panning.stopHandler = null;\r\n            }, 0);\r\n\r\n            paper.cursor('default');\r\n        },\r\n\r\n        onBeforeZoom: _.debounce(function(paper){\r\n\r\n            Graph.topic.publish('paper:beforezoom', null, paper);\r\n\r\n        }, 300, {leading: true, trailing: false}),\r\n\r\n        onZoom: _.debounce(function(paper) {\r\n            var state = paper.state();\r\n\r\n            if (state == 'panning') {\r\n                paper.cursor('default');\r\n            }\r\n\r\n        }, 300),\r\n\r\n        onBeforeScroll: _.debounce(function(paper){\r\n\r\n            Graph.topic.publish('paper:beforescroll', null, paper);\r\n\r\n        }, 300, {leading: true, trailing: false}),\r\n\r\n        onScroll: _.debounce(function() {\r\n\r\n        }, 300),\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Panzoom';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// HELPERS /////////\r\n\r\n    function logarithm(num, base) {\r\n        base = base || 10;\r\n        return Math.log(num) / Math.log(base);\r\n    }\r\n\r\n    function stepRange(range, steps) {\r\n        var min = logarithm(range.min),\r\n            max = logarithm(range.max),\r\n            abs = Math.abs(min) + Math.abs(max);\r\n\r\n        return abs / steps;\r\n    }\r\n\r\n    function zoomRange(range, scale) {\r\n        return Math.max(range.min, Math.min(range.max, scale));\r\n    }\r\n\r\n    function onDestroy(event, paper) {\r\n        var offset = paper.node().getBoundingClientRect(),\r\n            x = event.clientX - offset.left,\r\n            y = event.clientY - offset.top;\r\n\r\n        return {\r\n            x: x,\r\n            y: y\r\n        };\r\n    }\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var CLS_CONNECT_VALID = 'connect-valid',\r\n        CLS_CONNECT_INVALID = 'connect-invalid',\r\n        CLS_CONNECT_RESET = 'connect-valid connect-invalid';\r\n\r\n    Graph.plugin.Linker = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n            enabled: false,\r\n            suspended: true,\r\n            rendered: false\r\n        },\r\n\r\n        components: {\r\n            block: null,\r\n            pointer: null,\r\n            path: null\r\n        },\r\n\r\n        linking: {\r\n            treshold: 10,\r\n            enabled: false,\r\n            moveHandler: null,\r\n            stopHandler: null,\r\n            source: null,\r\n            start: null,\r\n            target: null,\r\n            end: null,\r\n            visits: []\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            var me = this, vendor;\r\n\r\n            if ( ! vector.isPaper()) {\r\n                throw Graph.error('Linker plugin is only available for paper !');\r\n            }\r\n\r\n            vendor = vector.interactable().vendor();\r\n            vendor.on('down', _.bind(me.onPointerDown, me, _, vector));\r\n\r\n            vector.on('keynavdown', function(e){\r\n                if (e.keyCode === Graph.event.ESC) {\r\n                    me.invalidate();\r\n                    vector.tool().activate('panzoom');\r\n                }\r\n            });\r\n\r\n            me.props.vector = vector.guid();\r\n            me.initComponent();\r\n        },\r\n        \r\n        initComponent: function() {\r\n            var me = this, \r\n                comp = me.components;\r\n\r\n            var block, pointer, path;\r\n\r\n            block = (new Graph.svg.Group())\r\n                .addClass('graph-linker-path')\r\n                .selectable(false);\r\n\r\n            pointer = (new Graph.svg.Circle())\r\n                .addClass('graph-linker-pointer')\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .selectable(false)\r\n                .render(block);\r\n\r\n            path = (new Graph.svg.Path())\r\n                .addClass('graph-linker-path')\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .selectable(false)\r\n                .render(block)\r\n                .attr('marker-end', 'url(#marker-link-end)');\r\n\r\n            comp.block = block.guid();\r\n            comp.pointer = pointer.guid();\r\n            comp.path = path.guid();\r\n        },\r\n\r\n        component: function(name) {\r\n            if (name === undefined) {\r\n                return Graph.registry.vector.get(this.components.block);\r\n            }\r\n            return Graph.registry.vector.get(this.components[name]);\r\n        },\r\n\r\n        render: function() {\r\n            var paper;\r\n\r\n            if (this.props.rendered) {\r\n                return;\r\n            }\r\n\r\n            paper = this.vector();\r\n            this.component().render(paper);\r\n\r\n            this.props.rendered = true;\r\n        },\r\n\r\n        invalidate: function() {\r\n            var vector, vendor;\r\n\r\n            if (this.linking.enabled) {\r\n                vector = this.vector();\r\n                vendor = vector.interactable().vendor();\r\n                \r\n                if (this.linking.moveHandler) {\r\n                    vendor.off('move', this.linking.moveHandler);\r\n                    this.linking.moveHandler = null;\r\n                }\r\n\r\n                if (this.linking.source) {\r\n                    this.linking.source.removeClass('disallowed');\r\n                }\r\n\r\n                if (this.linking.target) {\r\n                    this.linking.target.removeClass('allowed');\r\n                }\r\n\r\n                _.assign(this.linking, {\r\n                    enabled: false,\r\n                    moveHandler: null,\r\n                    stopHandler: null,\r\n                    source: null,\r\n                    start: null,\r\n                    target: null,\r\n                    end: null\r\n                });\r\n                \r\n                if (this.linking.visits) {\r\n                    _.forEach(this.linking.visits, function(v){\r\n                        v.removeClass('connect-valid connect-invalid');\r\n                    });\r\n                }\r\n                \r\n                this.linking.visits = null;\r\n            }\r\n        },\r\n\r\n        enable: function() {\r\n            var paper = this.vector();\r\n            this.props.enabled = true;\r\n\r\n            paper.state('linking');\r\n            paper.addClass('linking');\r\n        },\r\n\r\n        disable: function() {\r\n            var paper = this.vector();\r\n\r\n            this.props.enabled = false;\r\n            this.invalidate();\r\n            this.suspend();\r\n\r\n            paper.removeClass('linking');\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.component().elem.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            var paper;\r\n\r\n            if ( ! this.props.suspended) {\r\n                return;\r\n            }\r\n\r\n            paper = this.vector();\r\n\r\n            this.props.suspended = false;\r\n            \r\n            if ( ! this.props.rendered) {\r\n                this.render();\r\n            } else {\r\n                this.component().elem.appendTo(paper.viewport().elem);\r\n            }\r\n        },\r\n        \r\n        /**\r\n         *  Start manual linking\r\n         */\r\n        start: function(source, anchor) {\r\n            var paper = this.vector(),\r\n                layout = paper.layout(),\r\n                offset = layout.position();\r\n                \r\n            if (paper.tool().current() != 'linker') {\r\n                return;\r\n            }\r\n            \r\n            if (this.linking.enabled) {\r\n                if (this.linking.source && this.linking.target) {\r\n                    this.build();\r\n                } else {\r\n                    this.invalidate();\r\n                    this.suspend();\r\n                }\r\n                return;\r\n            } else {\r\n                if (source.isPaper()) {\r\n                    this.invalidate();\r\n                    this.suspend();\r\n                    paper.tool().activate('panzoom');\r\n                    return;\r\n                }\r\n            }\r\n            \r\n            this.linking.visits = [];\r\n            \r\n            var vendor, sbox, port;\r\n\r\n            if (source.isConnectable()) {\r\n\r\n                if (this.props.suspended) {\r\n                    this.resume();    \r\n                }\r\n\r\n                var path = this.component('path');\r\n\r\n                this.linking.moveHandler = _.bind(this.onPointerMove, this, _, paper, path);    \r\n                \r\n                vendor = paper.interactable().vendor();\r\n                vendor.on('move', this.linking.moveHandler);\r\n\r\n                this.linking.visits.push(source);    \r\n\r\n                if (source.isConnectable()) {\r\n                    \r\n                    if ( ! this.linking.source) {\r\n                        sbox = source.bboxOriginal();\r\n                        port = sbox.center(true);\r\n\r\n                        this.linking.source = source;\r\n                        this.linking.start  = port;\r\n                        \r\n                        if (anchor) {\r\n                            path.moveTo(port.x, port.y).lineTo(anchor.x, anchor.y, false);\r\n                        } else {\r\n                            path.moveTo(port.x, port.y).lineTo(port.x, port.y, false);\r\n                        }   \r\n\r\n                        sbox = port = null;\r\n                    }\r\n\r\n                }\r\n\r\n                this.linking.enabled = true;\r\n            }\r\n        },\r\n        \r\n        cropping: function(start, end) {\r\n            var source = this.linking.source,\r\n                target = this.linking.target,\r\n                cable = new Graph.lang.Path([['M', start.x, start.y], ['L', end.x, end.y]]);\r\n\r\n            var spath, scrop, tpath, tcrop;\r\n\r\n            if (source) {\r\n                spath = source.shapeView();\r\n                scrop = spath.intersection(cable, true);\r\n            }\r\n\r\n            if (target) {\r\n                tpath = target.shapeView();\r\n                tcrop = tpath.intersection(cable, true);\r\n            }\r\n\r\n            cable = spath = tpath = null;\r\n\r\n            return {\r\n                start: scrop ? scrop[0] : null,\r\n                end:   tcrop ? tcrop[0] : null\r\n            };\r\n        },\r\n\r\n        build: function() {\r\n            var path = this.component('path'),\r\n                tail = path.tail(),\r\n                head = path.head();\r\n\r\n            if (tail && head) {\r\n                var sourceNetwork = this.linking.source.connectable(),\r\n                    targetNetwork = this.linking.target.connectable();\r\n\r\n                sourceNetwork.connectByLinker(targetNetwork, tail, head);\r\n            }\r\n\r\n            this.invalidate();\r\n            this.suspend();\r\n        },\r\n\r\n        onPointerDown: function(e, paper) {\r\n            var layout = paper.layout(),\r\n                source = layout.grabVector(e);\r\n            \r\n            if (source) {\r\n                this.start(source);\r\n            }\r\n            \r\n            layout = source = null;\r\n        },\r\n\r\n        onPointerMove: function(e, paper, path) {\r\n            if (this.linking.enabled) {\r\n\r\n                var layout = paper.layout(),\r\n                    target = layout.grabVector(e);\r\n\r\n                if ( ! target) {\r\n                    return;\r\n                }\r\n\r\n                var source = this.linking.source,\r\n                    valid = false;\r\n\r\n                if (source) {\r\n\r\n                    // track visit\r\n                    if (this.linking.visits.indexOf(target.guid()) === -1) {\r\n                        this.linking.visits.push(target);\r\n                    }\r\n                    \r\n                    var start = this.linking.start,\r\n                        coord = layout.pointerLocation(e),\r\n                        x = coord.x,\r\n                        y = coord.y,\r\n                        rad = Graph.util.rad(Graph.util.theta(start, {x: x, y: y})),\r\n                        sin = Math.sin(rad),\r\n                        cos = Math.cos(rad),\r\n                        tdx = this.linking.treshold * -cos,\r\n                        tdy = this.linking.treshold *  sin;\r\n\r\n                    x += tdx;\r\n                    y += tdy;\r\n\r\n                    if (target.isConnectable()) {\r\n                        \r\n                        var crop, tbox, port;\r\n\r\n                        if (source.connectable().canConnect(target.connectable())) {\r\n                            valid  = true;\r\n\r\n                            target.removeClass(CLS_CONNECT_INVALID);\r\n                            target.addClass(CLS_CONNECT_VALID);\r\n                            \r\n                            tbox = target.bboxOriginal();\r\n                            port = tbox.center(true);\r\n\r\n                            this.linking.target = target;\r\n                            this.linking.end    = port;\r\n\r\n                            crop = this.cropping(start, port);\r\n\r\n                            if (crop.start) {\r\n                                path.moveTo(crop.start.x, crop.start.y);\r\n                            }\r\n\r\n                            if (crop.end) {\r\n                                path.lineTo(crop.end.x, crop.end.y, false);\r\n                            } else {\r\n                                path.lineTo(x, y, false);\r\n                            }\r\n\r\n                            tbox = port = null;\r\n                        } else {\r\n                            target.removeClass(CLS_CONNECT_VALID);\r\n                            target.addClass(CLS_CONNECT_INVALID);\r\n                        }\r\n\r\n                    } else {\r\n                        target.addClass(CLS_CONNECT_INVALID);\r\n                    }\r\n\r\n                    if ( ! valid) {\r\n\r\n                        if (this.linking.target) {\r\n                            this.linking.target.removeClass(CLS_CONNECT_RESET);\r\n                        }\r\n\r\n                        this.linking.target = null;\r\n                        this.linking.end    = null; \r\n\r\n                        crop = this.cropping(start, {x: x, y: y});\r\n\r\n                        if (crop.start) {\r\n                            path.moveTo(crop.start.x, crop.start.y);\r\n                        }\r\n\r\n                        if (crop.end) {\r\n                            path.lineTo(crop.end.x, crop.end.y, false);\r\n                        } else {\r\n                            path.lineTo(x, y, false);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            e.preventDefault();\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Linker';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// HELPER /////////\r\n    \r\n\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.ToolManager = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n            current: null\r\n        },\r\n\r\n        tools: {\r\n\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            var me = this;\r\n\r\n            me.props.vector = vector.guid();\r\n\r\n        },\r\n        \r\n        has: function(tool) {\r\n            return !!this.tools[tool];\r\n        },\r\n\r\n        get: function(name) {\r\n            var data = this.tools[name],\r\n                vector = this.vector();\r\n\r\n            if (data) {\r\n                switch(data.type) {\r\n                    case 'plugin':\r\n                        return vector.plugins[name];\r\n                    case 'util':\r\n                        return vector.utils[name];\r\n                }\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        current: function() {\r\n            return this.props.current;\r\n        },\r\n\r\n        register: function(name, type) {\r\n            type = _.defaultTo(type, 'plugin');\r\n\r\n            this.tools[name] = {\r\n                name: name,\r\n                type: type,\r\n                enabled: false\r\n            };\r\n        },\r\n\r\n        unregister: function(name) {\r\n            if (this.tools[name]) {\r\n                delete this.tools[name];\r\n            }\r\n        },\r\n\r\n        activate: function(name, activator) {\r\n            if (this.props.current != name) {\r\n\r\n                var tool = this.get(name), data;\r\n                \r\n                if (tool) {\r\n                    this.deactivateAll(name);\r\n                    this.props.current = name;\r\n\r\n                    data = this.tools[name];\r\n                    data.enabled = true;\r\n\r\n                    activator = _.defaultTo(activator, 'tool');\r\n                    tool.enable(activator);\r\n\r\n                    this.fire('activate', {\r\n                        name: data.name,\r\n                        enabled: data.enabled\r\n                    });\r\n                }\r\n            }\r\n            \r\n        },\r\n\r\n        deactivate: function(name) {\r\n            var tool = this.get(name), data;\r\n\r\n            if (tool) {\r\n                data = this.tools[name];\r\n                data.enabled = false;\r\n                this.props.current = null;\r\n\r\n                tool.disable();\r\n\r\n                this.fire('deactivate', {\r\n                    name: data.name,\r\n                    enabled: data.enabled\r\n                });\r\n            }\r\n        },\r\n\r\n        deactivateAll: function(except) {\r\n            var vector = this.vector();\r\n\r\n            for(var name in this.tools) {\r\n                if (name != except) {\r\n                    this.deactivate(name);\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        toggle: function(tool) {\r\n            var data = this.tools[tool];\r\n            if (data) {\r\n                if (data.enabled) {\r\n                    this.deactivate(tool);\r\n                } else {\r\n                    this.activate(tool);\r\n                }\r\n            }\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.ToolManager';\r\n        }\r\n\r\n\r\n    });\r\n\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Pencil = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        writing: {\r\n            startHandler: null\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            this.props.vector = vector.guid();\r\n        },\r\n\r\n        enable: function(activator) {\r\n            this.props.enabled = true;\r\n            this.props.activator = activator;\r\n\r\n            var vector = this.vector(),\r\n                vendor = vector.interactable().vendor();\r\n\r\n            vector.cursor('text');\r\n            vector.state('writing');\r\n\r\n            this.writing.startHandler = _.bind(this.onPointerDown, this);\r\n            vendor.on('down', this.writing.startHandler);\r\n\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.enabled = false;\r\n            var vendor = this.vector().interactable().vendor();\r\n            vendor.off('down', this.writing.startHandler);\r\n            this.writing.startHandler = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Pencil';\r\n        },\r\n\r\n        onPointerDown: function(e) {\r\n            var vector = this.vector();\r\n\r\n            if (vector.isPaper()) {\r\n                var offset, options, result;\r\n\r\n                offset = vector.layout().pointerLocation(e);\r\n                options = {\r\n                    left: offset.x,\r\n                    top: offset.y\r\n                };\r\n\r\n                if ( ! vector.diagram().current()) {\r\n                    vector.diagram().create();\r\n                }\r\n                \r\n                result = vector.diagram().current().drawShape(\r\n                    'Graph.shape.common.Label', \r\n                    options\r\n                );\r\n\r\n                if (result.shape) {\r\n                    var t = _.delay(function(e){\r\n                        clearTimeout(t);\r\n                        t = null;\r\n\r\n                        vector.tool().activate('panzoom');\r\n                        result.shape.editable().plugin().startEdit();\r\n\r\n                    }, 10);    \r\n                } else {\r\n                    //vector.tool().activate('panzoom');\r\n                }\r\n                \r\n            }\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    var MIN_BOX_WIDTH  = 150,\r\n        MIN_BOX_HEIGHT = 50,\r\n        OFFSET_TRESHOLD = 10;\r\n\r\n    var Editor = Graph.plugin.Editor = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n            rendered: false,\r\n            suspended: true,\r\n            width: 'auto',\r\n            height: 'auto',\r\n            offset: 'auto',\r\n            align: 'center'\r\n        },\r\n\r\n        editing: {\r\n            commitHandler: null\r\n        },\r\n\r\n        components: {\r\n            editor: null\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var vendor;\r\n\r\n            _.assign(this.props, options || {});\r\n\r\n            this.props.vector = vector.guid();\r\n\r\n            _.assign(this.cached, {\r\n                left: 0,\r\n                top: 0,\r\n                width: 0,\r\n                height: 0\r\n            });\r\n\r\n            vendor = vector.interactable().vendor();\r\n            vendor.on('doubletap', _.bind(this.onDoubleTap, this));\r\n\r\n            this.initComponent();\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = this.components;\r\n            \r\n            comp.editor = Graph.$('<div class=\"graph-editor\" contenteditable=\"true\"></div>');\r\n            comp.editor.css('text-align', this.props.align);\r\n            \r\n            comp.editor.on('keydown', function(e){\r\n                switch(e.keyCode) {\r\n                    case Graph.event.ENTER:\r\n                        me.commit();\r\n                        break;\r\n                    case Graph.event.DELETE:\r\n                    case Graph.event.SHIFT:\r\n                        e.stopPropagation();\r\n                        break;\r\n\r\n                }\r\n            });\r\n        },\r\n        \r\n        commit: function() {\r\n\r\n            var text = this.components.editor.text();\r\n\r\n            this.suspend();\r\n            this.vector().props.text = text;\r\n            this.fire('edit', {\r\n                text: text,\r\n                left: this.cached.left,\r\n                top: this.cached.top\r\n            });\r\n        },\r\n\r\n        render: function() {\r\n            if (this.props.rendered) {\r\n                this.redraw();\r\n                return;\r\n            }\r\n            \r\n            this.vector().paper().container().append(this.components.editor);\r\n            this.props.rendered = true;\r\n            this.redraw();\r\n        },\r\n\r\n        suspend: function() {\r\n\r\n            this.props.suspended = true;\r\n            this.components.editor.detach();\r\n\r\n            if (this.editing.commitHandler) {\r\n                Graph.topic.unsubscribe('paper:beforezoom', this.editing.commitHandler);\r\n                Graph.topic.unsubscribe('paper:beforescroll', this.editing.commitHandler);\r\n                Graph.topic.unsubscribe('vector:pointerdown', this.editing.commitHandler);\r\n\r\n                this.editing.commitHandler = null;\r\n            }\r\n        },\r\n\r\n        resume: function() {\r\n            var container;\r\n\r\n            if ( ! this.props.rendered) {\r\n                this.render();\r\n            } else {\r\n                if (this.props.suspended) {\r\n                    this.props.suspended = false;\r\n                    container = this.vector().paper().container();\r\n                    container.append(this.components.editor);\r\n                }\r\n                this.redraw();\r\n            }\r\n\r\n        },\r\n\r\n        redraw: function() {\r\n            var editor = this.components.editor,\r\n                vector = this.vector(),\r\n                matrix = vector.matrixCurrent(),\r\n                scale  = matrix.scale();\r\n\r\n            var vbox = vector.bbox().clone().transform(matrix).toJson();\r\n            var left, top, width, height;\r\n            \r\n            width  = vbox.width;\r\n            height = vbox.height;\r\n            left = vbox.x;\r\n            top  = vbox.y;\r\n\r\n            if (this.props.width != 'auto') {\r\n                width = Math.max(this.props.width, MIN_BOX_WIDTH);\r\n                width = Math.max(width * scale.x, width);\r\n                left = vbox.x;\r\n            } else {\r\n                width = width - 8 * scale.x;\r\n                left = left + 4 * scale.x;\r\n            }   \r\n\r\n            if (this.props.height != 'auto') {\r\n                height = Math.max(this.props.height, MIN_BOX_HEIGHT);\r\n                height = Math.max(height * scale.y, height);\r\n                top = vbox.y;\r\n            } else {\r\n                height = height - 8 * scale.y;\r\n                top = top + 4 * scale.y;\r\n            }\r\n\r\n            editor.css({\r\n                left: left,\r\n                top:  top,\r\n                width: width,\r\n                height: height\r\n            });\r\n\r\n            _.assign(this.cached, {\r\n                left: left,\r\n                top: top,\r\n                width: width,\r\n                height: height\r\n            });\r\n\r\n            editor.text((vector.props.text || ''));\r\n            editor.focus();\r\n\r\n            vbox = null;\r\n        },\r\n\r\n        startEdit: function(e) {\r\n            var me = this, vector = me.vector();\r\n\r\n            vector.deselect();\r\n\r\n            if (vector.paper()) {\r\n                if (vector.paper().tool().current() == 'linker') {\r\n                    vector.paper().tool().activate('panzoom');\r\n                }        \r\n            }\r\n\r\n            me.fire('beforeedit');\r\n            me.resume();\r\n\r\n            if (e && this.props.offset == 'pointer') {\r\n                var editor = me.components.editor,\r\n                    paper = vector.paper(),\r\n                    layout = paper.layout(),\r\n                    scale = layout.scale();\r\n\r\n                var offset, coords, screen;\r\n\r\n                if (paper) {\r\n                    offset = paper.position();\r\n                    coords = layout.pointerLocation(e);\r\n                    \r\n                    if (this.props.align == 'center') {\r\n                        screen = {\r\n                            x: e.clientX - offset.left,\r\n                            y: e.clientY - offset.top\r\n                        };\r\n\r\n                        editor.css({\r\n                            left: screen.x - editor.width() / 2,\r\n                            top: screen.y - editor.height() / 2\r\n                        });\r\n                    } else {\r\n                        screen = vector.bboxView().toJson();\r\n                        screen = layout.screenLocation({x: screen.x, y: screen.y});\r\n\r\n                        editor.css({\r\n                            left: screen.x - offset.left,\r\n                            top: screen.y - offset.top\r\n                        });\r\n                    }\r\n\r\n                    editor.focus(true);\r\n\r\n                    me.cached.left = coords.x;\r\n                    me.cached.top  = coords.y;\r\n                }\r\n            }\r\n\r\n            if ( ! me.editing.commitHandler) {\r\n                me.editing.commitHandler = function() {\r\n                    me.commit();\r\n                };\r\n\r\n                Graph.topic.subscribe('paper:beforezoom', me.editing.commitHandler);\r\n                Graph.topic.subscribe('paper:beforescroll', me.editing.commitHandler);\r\n                Graph.topic.subscribe('vector:pointerdown', me.editing.commitHandler);\r\n            }\r\n        },\r\n\r\n        onDoubleTap: function(e) {\r\n            this.startEdit(e);\r\n            e.preventDefault();\r\n        },\r\n\r\n        destroy: function() {\r\n            if (this.editing.commitHandler) {\r\n                Graph.topic.unsubscribe('paper:beforezoom', this.editing.commitHandler);\r\n                Graph.topic.unsubscribe('paper:beforescroll', this.editing.commitHandler);\r\n                Graph.topic.unsubscribe('vector:pointerdown', this.editing.commitHandler);\r\n\r\n                this.editing.commitHandler = null;\r\n            }\r\n\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Editor';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n    \r\n    \r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Snapper = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            enabled: true,\r\n            suspended: true,\r\n            rendered: false,\r\n            vector: null\r\n        },\r\n\r\n        clients: {\r\n\r\n        },\r\n\r\n        components: {\r\n            block: null,\r\n            stubx: null,\r\n            stuby: null\r\n        },\r\n\r\n        // trans\r\n        snapping: {\r\n            coords: null,\r\n            vector: null,\r\n            offset: null,\r\n            stubx: null,\r\n            stuby: null\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            options = options || {};\r\n\r\n            if ( ! vector.isPaper()) {\r\n                throw Graph.error(\"Snapper plugin only available for paper\");\r\n            }\r\n\r\n            _.assign(this.props, options);\r\n\r\n            this.props.vector  = vector.guid();\r\n\r\n            this.initComponent(vector);\r\n            this.snapping.coords = {};\r\n        },\r\n\r\n        invalidate: function() {\r\n            for (var key in this.snapping) {\r\n                this.snapping[key] = null;\r\n            }\r\n\r\n            this.snapping.coords = {};\r\n            this.clients = {};\r\n        },\r\n\r\n        initComponent: function(vector) {\r\n            var block, stubx, stuby;\r\n\r\n            block = (new Graph.svg.Group())\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .addClass('graph-snapper');\r\n\r\n            stubx = (new Graph.svg.Path('M 0 0 L 0 0'))\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(block);\r\n\r\n            stuby = (new Graph.svg.Path('M 0 0 L 0 0'))\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(block);\r\n\r\n            this.components.block = block.guid();\r\n            this.components.stuby = stuby.guid();\r\n            this.components.stubx = stubx.guid();\r\n\r\n        },\r\n\r\n        component: function(name) {\r\n            if (name === undefined) {\r\n                return Graph.registry.vector.get(this.components.block);\r\n            }\r\n            return Graph.registry.vector.get(this.components[name]);\r\n        },\r\n\r\n        render: function() {\r\n            if (this.props.rendered) {\r\n                return;\r\n            }\r\n            this.component().render(this.vector());\r\n            this.props.rendered = true;\r\n        },\r\n\r\n        enable: function() {\r\n            this.props.enabled = true;\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.enabled = false;\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.component().elem.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            if (this.props.suspended) {\r\n                this.props.suspended = false;\r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else {\r\n                    var block = this.component(),\r\n                        viewport = this.vector().viewport();\r\n                    block.elem.appendTo(viewport.elem);\r\n                }\r\n            }\r\n        },\r\n\r\n        refresh: function(clientId) {\r\n            if (this.props.enabled) {\r\n                var key, client, center, token;\r\n\r\n                if (clientId !== undefined) {\r\n                    var options = this.clients[clientId];\r\n\r\n                    if (options) {\r\n                        if (this.snapping.coords[options.coords]) {\r\n                            delete this.snapping.coords[options.coords];\r\n                        }\r\n                        client = Graph.registry.vector.get(clientId);    \r\n                        if (client) {\r\n                            center = this.getClientCenter(client);\r\n                            token = center.x + '_' + center.y;\r\n                            this.snapping.coords[token] = center;\r\n                            this.clients[clientId].coords = token;\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.snapping.coords = {};    \r\n                    for (key in this.clients) {\r\n                        client = Graph.registry.vector.get(key);\r\n                        if (client) {\r\n                            center = this.getClientCenter(client);\r\n                            token = center.x + '_' + center.y;\r\n                            this.snapping.coords[token] = center;\r\n                            this.clients[key].coords = token;\r\n                        }\r\n                    }  \r\n                }\r\n            }\r\n        },\r\n\r\n        setup: function(client, options) {\r\n\r\n            if ( ! this.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            var me = this,\r\n                clientId = client.guid();\r\n\r\n            var key;\r\n\r\n            if (me.clients[clientId]) {\r\n                client.off('beforedrag', me.clients[clientId].beforeDragHandler);\r\n                client.off('afterdrag',  me.clients[clientId].afterDragHandler);\r\n                client.off('afterdestroy',  me.clients[clientId].afterDestroyHandler);\r\n\r\n                if (me.clients[clientId].coords) {\r\n                    delete me.snapping.coords[me.clients[clientId].coords];\r\n                }\r\n\r\n                delete me.clients[clientId];\r\n            }\r\n\r\n            if (options.enabled) {\r\n\r\n                var dragger = client.draggable();\r\n\r\n                me.clients[clientId] = {\r\n                    coords: null,\r\n                    osnaps: dragger.snap(),\r\n                    beforeDragHandler: _.bind(me.onClientBeforeDrag, me, _, client),\r\n                    afterDragHandler: _.bind(me.onClientAfterDrag, me, _, client),\r\n                    afterDestroyHandler: _.bind(me.onClientAfterDestroy, me, _, client)\r\n                };\r\n\r\n                client.on('beforedrag', me.clients[clientId].beforeDragHandler);\r\n                client.on('afterdrag', me.clients[clientId].afterDragHandler);\r\n                client.on('afterdestroy',  me.clients[clientId].afterDestroyHandler);\r\n\r\n                var center = me.getClientCenter(client),\r\n                    coords = this.snapping.coords;\r\n\r\n                // this.vector().circle(center.x, center.y, 5);\r\n\r\n                key = center.x + '_' + center.y;\r\n\r\n                if ( ! coords[key]) {\r\n                    coords[key] = center;\r\n                    me.clients[clientId].coords = key;\r\n                }\r\n\r\n                key = null;\r\n            }\r\n        },\r\n\r\n        repairClient: function(client) {\r\n            console.log(client);\r\n        },\r\n\r\n        getClientCenter: function(client) {\r\n            var bbox = client.bboxView(),\r\n                center = bbox.center(true);\r\n\r\n            return center;\r\n        },\r\n\r\n        showStub: function(axis, value) {\r\n            var snapping = this.snapping;\r\n            var command;\r\n\r\n            if (axis == 'x') {\r\n                command = 'M ' + value + ' -100000 L ' + value + ' 100000';\r\n\r\n                snapping.stubx.attr('d', command);\r\n                snapping.stubx.addClass('visible');\r\n            }\r\n\r\n            if (axis == 'y') {\r\n                command = 'M -100000 ' + value + ' L 100000 ' + value;\r\n\r\n                snapping.stuby.attr('d', command);\r\n                snapping.stuby.addClass('visible');\r\n            }\r\n\r\n            command = null;\r\n        },\r\n\r\n        hideStub: function(axis) {\r\n            var stub = axis == 'x' ? 'stubx' : 'stuby';\r\n            this.snapping[stub].removeClass('visible');\r\n        },\r\n\r\n        onClientBeforeDrag: function(e, client) {\r\n\r\n            if ( ! this.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            var me = this,\r\n                paper = me.vector(),\r\n                viewport = paper.viewport(),\r\n                layout = paper.layout(),\r\n                offset = layout.position(),\r\n                center = me.getClientCenter(client);\r\n\r\n            var snapping = this.snapping,\r\n                coords = snapping.coords;\r\n\r\n            snapping.stubx = this.component('stubx');\r\n            snapping.stuby = this.component('stuby');\r\n\r\n            var left = offset.left,\r\n                top = offset.top,\r\n                ma = viewport.matrix(),\r\n                pt = layout.pointerLocation({clientX: e.x, clientY: e.y}),\r\n                diffx = center.x - pt.x,\r\n                diffy = center.y - pt.y,\r\n                snapx = [],\r\n                snapy = [];\r\n\r\n            _.forOwn(coords, function(c){\r\n                var mx, my, vx, vy;\r\n\r\n                mx = ma.x(c.x - diffx, c.y - diffy);\r\n                my = ma.y(c.x - diffx, c.y - diffy);\r\n\r\n                vx = mx + left;\r\n\r\n                if (_.indexOf(snapx, vx) === -1) {\r\n                    snapx.push(vx);\r\n                }\r\n\r\n                vy = my + top;\r\n\r\n                if (_.indexOf(snapy, vy) === -1) {\r\n                    snapy.push(vy);\r\n                }\r\n            });\r\n\r\n            client.draggable().snap([\r\n                function(x, y) {\r\n                    var rx, ry, x1, y1, pt;\r\n\r\n                    rx = snapValue(x, snapx);\r\n                    ry = snapValue(y, snapy);\r\n\r\n                    x1 = rx.value;\r\n                    y1 = ry.value;\r\n\r\n                    pt = layout.pointerLocation({\r\n                        clientX: x1,\r\n                        clientY: y1\r\n                    });\r\n\r\n                    if (rx.snapped) {\r\n                        me.showStub('x', pt.x + diffx);\r\n                    } else {\r\n                        me.hideStub('x');\r\n                    }\r\n\r\n                    if (ry.snapped) {\r\n                        me.showStub('y', pt.y + diffy);\r\n                    } else {\r\n                        me.hideStub('y');\r\n                    }\r\n\r\n                    return {\r\n                        x: x1,\r\n                        y: y1\r\n                    };\r\n                }\r\n            ]);\r\n\r\n            me.resume();\r\n        },\r\n\r\n        onClientAfterDrag: function(e, client) {\r\n\r\n            if ( ! this.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            var snapping = this.snapping,\r\n                options = this.clients[client.guid()];\r\n\r\n            if (options) {\r\n                var dragger = client.draggable();\r\n\r\n                if (options.osnaps) {\r\n                    dragger.snap(options.osnaps);\r\n                }\r\n\r\n                var token, center;\r\n\r\n                if (options.coords) {\r\n                    delete snapping.coords[options.coords];\r\n                }\r\n\r\n                center = this.getClientCenter(client);\r\n                token = center.x + '_' + center.y;\r\n\r\n                if ( ! snapping.coords[token]) {\r\n                    snapping.coords[token] = center;\r\n                    options.coords = token;\r\n                }\r\n\r\n                token = null;\r\n                center = null;\r\n            }\r\n\r\n            this.suspend();\r\n\r\n            _.assign(this.snapping, {\r\n                stubx: null,\r\n                stuby: null\r\n            });\r\n        },\r\n\r\n        onClientAfterDestroy: function(e, client) {\r\n            var guid = client.guid(),\r\n                options = this.clients[guid],\r\n                snapping = this.snapping;\r\n\r\n            if (options) {\r\n                if (options.coords) {\r\n                    if (snapping.coords[options.coords]) {\r\n                        delete snapping.coords[options.coords];\r\n                    }\r\n                }\r\n                delete this.clients[guid];\r\n            }\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Snapper';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// HELPERS /////////\r\n\r\n    function snapValue(value, snaps, range) {\r\n        range = _.defaultTo(range, 10);\r\n\r\n        var i = snaps.length, v;\r\n\r\n        while(i--) {\r\n            v = Math.abs(snaps[i] - value);\r\n            if (v <= range) {\r\n                return {\r\n                    snapped: true,\r\n                    value: snaps[i]\r\n                };\r\n            }\r\n        }\r\n\r\n        return {\r\n            snapped: false,\r\n            value: value\r\n        };\r\n    }\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.plugin.Toolpad = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            vector: null,\r\n            rendered: false,\r\n            suspended: true\r\n        },\r\n        \r\n        components: {\r\n            pad: null\r\n        },  \r\n    \r\n        constructor: function(paper) {\r\n            \r\n            this.props.vector = paper.guid();\r\n            this.initComponent(paper);\r\n\r\n            this.cached.tools = null;\r\n            this.cached.shape = null;\r\n            this.cached.link  = null;\r\n            \r\n            Graph.topic.subscribe('shape:select', _.bind(this.onShapeSelect, this));\r\n            Graph.topic.subscribe('shape:deselect', _.bind(this.onShapeDeselect, this));\r\n            \r\n            Graph.topic.subscribe('link:select', _.bind(this.onLinkSelect, this));\r\n            Graph.topic.subscribe('link:deselect', _.bind(this.onLinkDeselect, this));\r\n        },\r\n        \r\n        initComponent: function(paper) {\r\n            \r\n            var pad = '<div class=\"graph-toolpad\">' + \r\n                            // '<div class=\"pad-header\"></div>' + \r\n                            // '<div class=\"pad-splitter\"></div>' + \r\n                            '<div class=\"pad-body\"></div>'+\r\n                      '</div>';\r\n\r\n            pad = Graph.$(pad);\r\n\r\n            pad.on('click', '[data-shape-tool]', _.bind(this.onShapeToolClick, this));\r\n            pad.on('click', '[data-link-tool]', _.bind(this.onLinkToolClick, this));\r\n            \r\n            this.components.pad = pad;\r\n        },\r\n        \r\n        render: function() {\r\n            if (this.props.rendered) {\r\n                return;\r\n            }\r\n            \r\n            this.components.pad.appendTo(this.vector().container());\r\n            this.props.rendered = true;\r\n        },\r\n        \r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.components.pad.detach();\r\n        },\r\n        \r\n        resume: function() {\r\n            if (this.props.suspended) {\r\n                \r\n                this.props.suspended = false;\r\n                \r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else {\r\n                    this.components.pad.appendTo(this.vector().container());\r\n                }\r\n            }\r\n        },\r\n        \r\n        onShapeSelect: function(e) {\r\n            var shape = e.shape,\r\n                meta = shape.metadata,\r\n                pad = this.components.pad;\r\n\r\n            var body = '';\r\n\r\n            // pad.find('.pad-header').html('<a href=\"javascript:void(0);\"><i class=\"' + meta.icon + '\"></i></a>');            \r\n            // pad.find('.pad-header').html('<a href=\"javascript:void(0);\"><i class=\"ion-navicon-round\"></i></a>');            \r\n            \r\n            _.forEach(meta.tools, function(tool, index){\r\n                if (tool.enabled) {\r\n                    if (index > 0) {\r\n                        body += '<div class=\"splitter\"></div>';    \r\n                    }\r\n                    body += '<a data-shape-tool=\"' + tool.name + '\" href=\"javascript:void(0)\" title=\"' + tool.title + '\">' + tool.icon + '</a>';\r\n                }\r\n            });\r\n            \r\n            pad.find('.pad-body').html(body);\r\n\r\n            this.cached.tools = meta.tools;\r\n            this.cached.shape = shape;\r\n\r\n            this.resume();\r\n        },\r\n        \r\n        onShapeDeselect: function(e) {\r\n            this.suspend();\r\n        },\r\n        \r\n\r\n        onLinkSelect: function(e) {\r\n            var link = e.link,\r\n                meta = link.metadata,\r\n                pad = this.components.pad;\r\n            \r\n            // pad.find('.pad-header').html('<a><i class=\"' + meta.icon + '\"></i></a>');\r\n            // pad.find('.pad-header').html('<a><i class=\"ion-navicon-round\"></i></a>');\r\n            \r\n            var body = '';\r\n            \r\n            _.forEach(meta.tools, function(tool, index){\r\n                if (tool.enabled) {\r\n                    if (index > 0) {\r\n                        body += '<div class=\"splitter\"></div>';        \r\n                    }\r\n                    body += '<a data-link-tool=\"' + tool.name + '\" href=\"#\" title=\"' + tool.title + '\">'+ tool.icon +'</a>';                    \r\n                }\r\n            });\r\n            \r\n            pad.find('.pad-body').html(body);\r\n            \r\n            this.cached.tools = meta.tools;\r\n            this.cached.link = link;\r\n            this.resume();\r\n        },\r\n\r\n        onLinkDeselect: function(e) {\r\n            this.suspend();\r\n        },\r\n        \r\n        onShapeToolClick: function(e) {\r\n            var target = Graph.$(e.currentTarget),\r\n                name = target.data('shapeTool');\r\n\r\n            var tool = _.find(this.cached.tools, function(t){\r\n                return t.name == name;\r\n            });\r\n\r\n            if (tool) {\r\n                if (tool.name == 'config') {\r\n                    var paper = this.vector();\r\n                    paper.fire('shapetoolclick', {\r\n                        shape: this.cached.shape\r\n                    });\r\n                } else if (tool.handler) {\r\n                    tool.handler(e);\r\n                }\r\n            }\r\n            \r\n            e.preventDefault();\r\n        },\r\n\r\n        onLinkToolClick: function(e) {\r\n            var target = Graph.$(e.currentTarget),\r\n                name = target.data('linkTool');\r\n            \r\n            var tool = _.find(this.cached.tools, function(t){\r\n                return t.name == name;\r\n            });\r\n\r\n            if (tool) {\r\n                if (tool.name == 'config') {\r\n                    var paper = this.vector();\r\n                    paper.fire('linktoolclick', {\r\n                        link: this.cached.link\r\n                    });\r\n                } else if (tool.handler) {\r\n                    tool.handler(e);\r\n                }\r\n            }\r\n            \r\n            e.preventDefault();  \r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Toolpad';\r\n        }\r\n        \r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Clipper = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            var me = this,\r\n                guid = vector.guid();\r\n\r\n            me.props.vector = guid;\r\n\r\n            if (vector.isPaper()) {\r\n                vector.on('keycopy', function(e){\r\n                    me.copy();\r\n                });\r\n\r\n                vector.on('keypaste', function(e){\r\n                    me.paste();\r\n                });\r\n            }\r\n\r\n            me.cached.clips = null;\r\n            me.cached.paste = 1;\r\n        },\r\n\r\n        vector: function() {\r\n            return Graph.registry.vector.get(this.props.vector);\r\n        },\r\n\r\n        invalidate: function() {\r\n            this.cached.clips = null;\r\n        },\r\n\r\n        cut: function() {\r\n\r\n        },\r\n\r\n        copy: function() {\r\n            var me = this,\r\n                paper = this.vector(),\r\n                selection = paper.collector().collection.toArray().slice();\r\n\r\n            me.cached.paste = 1;\r\n\r\n            if (selection.length) {\r\n                var clips = [],\r\n                    excludes = { \r\n                        guid: true,\r\n                        id: true\r\n                    };\r\n\r\n                _.forEach(selection, function(vector){\r\n                    var shape = Graph.registry.shape.get(vector);\r\n                    if (shape) {\r\n                        var data = shape.toJson(),\r\n                            clip = {};\r\n                        var key, val;\r\n\r\n                        for (key in data.props) {\r\n                            val = data.props[key];\r\n                            if ( ! excludes[key]) {\r\n                                clip[key] = val;\r\n                            }\r\n                        }\r\n                        clips.push(clip);\r\n                    }\r\n                });\r\n                this.cached.clips = clips;\r\n            } else {\r\n                this.cached.clips = null;\r\n            }\r\n        },\r\n\r\n        paste: function() {\r\n            var me = this,\r\n                clips = this.cached.clips,\r\n                paper = this.vector(),\r\n                scale = paper.layout().scale(),\r\n                collector = paper.collector();\r\n\r\n            if (clips && clips.length) {\r\n\r\n                collector.clearCollection();\r\n\r\n                _.forEach(clips, function(clip){\r\n                    var prop = _.cloneDeep(clip);  \r\n\r\n                    if (prop.left !== undefined) {\r\n                        prop.left += me.cached.paste * 20 / scale.x;\r\n                    }\r\n\r\n                    if (prop.top !== undefined) {\r\n                        prop.top += me.cached.paste * 20 / scale.y;\r\n                    }\r\n\r\n                    var shape = Graph.factory(Graph.ns(clip.type), [prop]);\r\n                    shape.render(paper);\r\n                    shape.select();\r\n                });\r\n\r\n                me.cached.paste++;\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.ns('Graph.shape.activity');\r\n\r\n    Graph.shape.activity.Start = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'Start',\r\n            width: 60,\r\n            height: 60,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            type: 'activity.start',\r\n            style: 'graph-shape-activity-start'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, label;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            var cx = this.props.width / 2,\r\n                cy = this.props.height / 2;\r\n\r\n            block = (new Graph.svg.Ellipse(cx, cy, cx, cy))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .style({\r\n                    fill: this.props.fill,\r\n                    stroke: this.props.stroke,\r\n                    strokeWidth: this.props.strokeWidth\r\n                })\r\n                .data('text', this.props.label)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            pmgr.install('dragger', block, {ghost: true, cls: Graph.styles.SHAPE_DRAG});\r\n            pmgr.install('network', block, {wiring: 'h:v'});\r\n            pmgr.install('resizer', block);\r\n            pmgr.install('editor',  block);\r\n            pmgr.install('snapper', block);\r\n\r\n            block.on('edit.shape',      _.bind(this.onLabelEdit, this));\r\n            block.on('beforedrag.shape', _.bind(this.onBeforeDrag, this));\r\n            block.on('afterdrag.shape',   _.bind(this.onAfterDrag, this));\r\n            block.on('afterresize.shape',    _.bind(this.onAfterResize, this));\r\n            block.on('beforedestroy.shape',    _.bind(this.onBeforeDestroy, this));\r\n            block.on('afterdestroy.shape',    _.bind(this.onAfterDestroy, this));\r\n            block.on('select.shape',    _.bind(this.onSelect, this));\r\n            block.on('deselect.shape',  _.bind(this.onDeselect, this));\r\n            block.on('connect.shape', _.bind(this.onConnect, this));\r\n\r\n            label = (new Graph.svg.Text(cx, cy, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n\r\n            shape = block = label = null;\r\n        },\r\n\r\n        refresh: function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n            \r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                label = this.component('label');\r\n\r\n            var matrix, bound, cx, cy;\r\n\r\n            bound  = block.bbox().toJson(),\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            cx = bound.width  / 2;\r\n            cy = bound.height / 2;\r\n\r\n            block.attr({\r\n                cx: cx,\r\n                cy: cy\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            label.attr({\r\n                x: cx,\r\n                y: cy\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n            // update props\r\n\r\n            matrix = shape.matrix();\r\n\r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Start';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.shape.activity.Final = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'End',\r\n            width: 60,\r\n            height: 60,\r\n            left: 0,\r\n            top: 0,\r\n            fill: '#FF4081'\r\n        },\r\n\r\n        metadata: {\r\n            type: 'activity.final',\r\n            style: 'graph-shape-activity-final'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, inner, label;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            var cx = this.props.width / 2,\r\n                cy = this.props.height / 2;\r\n\r\n            block = (new Graph.svg.Ellipse(cx, cy, cx, cy))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .style({\r\n                    stroke: this.props.stroke,\r\n                    strokeWidth: this.props.strokeWidth\r\n                })\r\n                .data('text', this.props.label)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            pmgr.install('dragger', block, {ghost: true, cls: Graph.styles.SHAPE_DRAG});\r\n            pmgr.install('network', block, {wiring: 'h:v'});\r\n            pmgr.install('resizer', block);\r\n            pmgr.install('editor',  block);\r\n            pmgr.install('snapper', block);\r\n\r\n            block.on('edit.shape',      _.bind(this.onLabelEdit, this));\r\n            block.on('beforedrag.shape', _.bind(this.onBeforeDrag, this));\r\n            block.on('afterdrag.shape',   _.bind(this.onAfterDrag, this));\r\n            block.on('afterresize.shape',    _.bind(this.onAfterResize, this));\r\n            block.on('beforedestroy.shape',    _.bind(this.onBeforeDestroy, this));\r\n            block.on('afterdestroy.shape',    _.bind(this.onAfterDestroy, this));\r\n            block.on('select.shape',    _.bind(this.onSelect, this));\r\n            block.on('deselect.shape',  _.bind(this.onDeselect, this));\r\n            block.on('connect.shape', _.bind(this.onConnect, this));\r\n\r\n            inner = (new Graph.svg.Ellipse(cx, cy, cx - 6, cy - 6))\r\n                .addClass('comp-inner')\r\n                .style({\r\n                    fill: this.props.fill\r\n                })\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            label = (new Graph.svg.Text(cx, cy, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .addClass('comp-label')\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n            comp.inner = inner.guid();\r\n\r\n            shape = block = label = inner = null;\r\n        },\r\n\r\n        fill: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.value;\r\n            }\r\n\r\n            this.component('inner').elem.css('fill', value);\r\n            this.props.fill = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        refresh: function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                inner = this.component('inner'),\r\n                label = this.component('label');\r\n\r\n            var matrix, bound, cx, cy;\r\n\r\n            bound  = block.bbox().toJson(),\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            cx = bound.width / 2,\r\n            cy = bound.height / 2;\r\n\r\n            block.attr({\r\n                cx: cx,\r\n                cy: cy\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            label.attr({\r\n                x: cx,\r\n                y: cy\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n            inner.attr({\r\n                cx: cx,\r\n                cy: cy,\r\n                rx: cx - 6,\r\n                ry: cy - 6\r\n            });\r\n\r\n            // update props\r\n            matrix = shape.matrix();\r\n\r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Final';\r\n        },\r\n\r\n        onAfterDestroy: function() {\r\n            // remove label\r\n            this.component('label').remove();\r\n\r\n            // remove inner\r\n            this.component('inner').remove();\r\n\r\n            // remove shape\r\n            this.component('shape').remove();\r\n\r\n            for (var name in this.components) {\r\n                this.components[name] = null;\r\n            }\r\n\r\n            Graph.registry.shape.unregister(this);\r\n            \r\n            this.fire('afterdestroy');\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.shape.activity.Action = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'Action',\r\n            width: 140,\r\n            height: 60,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            type: 'activity.action',\r\n            icon: Graph.icons.SHAPE_ACTION,\r\n            style: 'graph-shape-activity-action'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, label;\r\n\r\n            var cx = this.props.width / 2,\r\n                cy = this.props.height / 2;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Rect(0, 0, this.props.width, this.props.height))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .style({\r\n                    fill: this.props.fill,\r\n                    stroke: this.props.stroke,\r\n                    strokeWidth: this.props.strokeWidth\r\n                })\r\n                .data('text', this.props.label)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            pmgr.install('dragger', block, {ghost: true, cls: Graph.styles.SHAPE_DRAG});\r\n            pmgr.install('resizer', block);\r\n            pmgr.install('editor',  block);\r\n            pmgr.install('network', block, {wiring: 'h:v'});\r\n            pmgr.install('snapper', block);\r\n            pmgr.install('rotator', block);\r\n\r\n            block.on('edit.shape', _.bind(this.onLabelEdit, this));\r\n            block.on('beforedrag.shape', _.bind(this.onBeforeDrag, this));\r\n            block.on('afterdrag.shape', _.bind(this.onAfterDrag, this));\r\n            block.on('afterresize.shape', _.bind(this.onAfterResize, this));\r\n            block.on('beforedestroy.shape', _.bind(this.onBeforeDestroy, this));\r\n            block.on('afterdestroy.shape', _.bind(this.onAfterDestroy, this));\r\n            block.on('select.shape', _.bind(this.onSelect, this));\r\n            block.on('deselect.shape', _.bind(this.onDeselect, this));\r\n            block.on('connect.shape', _.bind(this.onConnect, this));\r\n            block.on('afterrotate.shape', _.bind(this.onAfterRotate, this));\r\n\r\n            label = (new Graph.svg.Text(cx, cy, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n\r\n            if (this.props.rotate) {\r\n                this.rotate(this.props.rotate);\r\n            }\r\n\r\n            shape = block = label = null;\r\n        },\r\n        \r\n        refresh: function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n            \r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                label = this.component('label');\r\n\r\n            var bound, matrix;\r\n\r\n            bound = block.bbox().toJson();\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            block.attr({\r\n                x: 0,\r\n                y: 0\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            label.attr({\r\n                x: bound.width  / 2,\r\n                y: bound.height / 2\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n            // update props\r\n\r\n\r\n            matrix = shape.matrix();\r\n            \r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        onAfterResize: function() {\r\n            this.refresh();\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Action';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.shape.activity.Fork = Graph.extend(Graph.shape.Shape, {\r\n        props: {\r\n            width: 300,\r\n            height: 15,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            type: 'activity.fork',\r\n            style: 'graph-shape-activity-fork'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, label;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Rect(0, 0, this.props.width, this.props.height, 0))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            pmgr.install('dragger', block, {ghost: true, cls: Graph.styles.SHAPE_DRAG});\r\n            pmgr.install('resizer', block);\r\n            pmgr.install('snapper', block);\r\n            pmgr.install('network', block, {\r\n                wiring: 'v:v', \r\n                tuning: false,\r\n                limitIncoming: 1,\r\n                limitOutgoing: 0\r\n            });\r\n\r\n            block.on('beforedrag.shape', _.bind(this.onBeforeDrag, this));\r\n            block.on('afterdrag.shape',   _.bind(this.onAfterDrag, this));\r\n            block.on('afterresize.shape',    _.bind(this.onAfterResize, this));\r\n            block.on('beforedestroy.shape',    _.bind(this.onBeforeDestroy, this));\r\n            block.on('afterdestroy.shape',    _.bind(this.onAfterDestroy, this));\r\n            block.on('select.shape',    _.bind(this.onSelect, this));\r\n            block.on('deselect.shape',  _.bind(this.onDeselect, this));\r\n            block.on('connect.shape', _.bind(this.onConnect, this));\r\n            \r\n            label = (new Graph.svg.Text(0, 0, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n        },\r\n\r\n        refresh: function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n            \r\n            var block = this.component('block'),\r\n                shape = this.component('shape');\r\n\r\n            var bound, matrix;\r\n\r\n            bound = block.bbox().toJson();\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            block.attr({\r\n                x: 0,\r\n                y: 0\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            matrix = shape.matrix();\r\n\r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Join';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.shape.activity.Join = Graph.extend(Graph.shape.Shape, {\r\n        props: {\r\n            width: 300,\r\n            height: 15,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            type: 'activity.join',\r\n            style: 'graph-shape-activity-join'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, label;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Rect(0, 0, this.props.width, this.props.height, 0))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            pmgr.install('dragger', block, {ghost: true, cls: Graph.styles.SHAPE_DRAG});\r\n            pmgr.install('resizer', block);\r\n            pmgr.install('snapper', block);\r\n            pmgr.install('network', block, {\r\n                wiring: 'v:v', \r\n                tuning: false,\r\n                limitIncoming: 0,\r\n                limitOutgoing: 1\r\n            });\r\n\r\n            block.on('beforedrag.shape', _.bind(this.onBeforeDrag, this));\r\n            block.on('afterdrag.shape',   _.bind(this.onAfterDrag, this));\r\n            block.on('afterresize.shape',    _.bind(this.onAfterResize, this));\r\n            block.on('beforedestroy.shape',    _.bind(this.onBeforeDestroy, this));\r\n            block.on('afterdestroy.shape',    _.bind(this.onAfterDestroy, this));\r\n            block.on('select.shape',    _.bind(this.onSelect, this));\r\n            block.on('deselect.shape',  _.bind(this.onDeselect, this));\r\n            block.on('connect.shape', _.bind(this.onConnect, this));\r\n            \r\n            label = (new Graph.svg.Text(0, 0, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n        },\r\n\r\n        refresh: function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n            \r\n            var block = this.component('block'),\r\n                shape = this.component('shape');\r\n\r\n            var bound, matrix;\r\n\r\n            bound = block.bbox().toJson();\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            block.attr({\r\n                x: 0,\r\n                y: 0\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            matrix = shape.matrix();\r\n\r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Join';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var TRANSFER_RECEIVE = 'receive',\r\n        TRANSFER_DISPOSE = 'dispose';\r\n\r\n    Graph.shape.activity.Lane = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'Participant Role',\r\n            width: 1000,\r\n            height: 200,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        components: {\r\n            header: null\r\n        },\r\n\r\n        tree: {\r\n            pool: null\r\n        },\r\n\r\n        transfer: null,\r\n\r\n        resizing: null,\r\n\r\n        metadata: {\r\n            type: 'activity.lane',\r\n            icon: Graph.icons.SHAPE_LANE,\r\n            style: 'graph-shape-activity-lane'\r\n        },\r\n\r\n        constructor: function(options) {\r\n            this.superclass.prototype.constructor.call(this, options);\r\n        },\r\n\r\n        initMetadata: function() {\r\n            this.metadata.tools = [\r\n                {\r\n                    name: 'config',\r\n                    icon: Graph.icons.CONFIG,\r\n                    title: Graph._('Click to config shape'),\r\n                    enabled: true\r\n                },\r\n                {\r\n                    name: 'above',\r\n                    icon: Graph.icons.LANE_ABOVE,\r\n                    title: Graph._('Add shape above'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onAboveToolClick, this)\r\n                },\r\n                {\r\n                    name: 'below',\r\n                    icon: Graph.icons.LANE_BELOW,\r\n                    title: Graph._('Add shape below'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBelowToolClick, this)\r\n                },\r\n                {\r\n                    name: 'moveup',\r\n                    icon: Graph.icons.MOVE_UP,\r\n                    title: Graph._('Move up'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onUpToolClick, this)\r\n                },\r\n                {\r\n                    name: 'movedown',\r\n                    icon: Graph.icons.MOVE_DOWN,\r\n                    title: Graph._('Move down'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onDownToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtofront',\r\n                    icon: Graph.icons.SEND_TO_FRONT,\r\n                    title: Graph._('Send to front'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onFrontToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtoback',\r\n                    icon: Graph.icons.SEND_TO_BACK,\r\n                    title: Graph._('Send to back'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBackToolClick, this)\r\n                },\r\n                {\r\n                    name: 'trash',\r\n                    icon: Graph.icons.TRASH,\r\n                    title: Graph._('Click to remove shape'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onTrashToolClick, this)\r\n                }\r\n            ];\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, header, label, child;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Rect(0, 0, this.props.width, this.props.height, 0))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            pmgr.install('resizer', block, {restriction: { width: 200, height: 100 }});\r\n            pmgr.install('dragger', block, {ghost: true, batchSync: false, cls: Graph.styles.SHAPE_DRAG});\r\n\r\n            block.on('beforedrag.shape', _.bind(this.onBeforeDrag, this));\r\n            block.on('afterdrag.shape',   _.bind(this.onAfterDrag, this));\r\n            block.on('beforeresize.shape', _.bind(this.onBeforeResize, this));\r\n            block.on('afterresize.shape',    _.bind(this.onAfterResize, this));\r\n            block.on('beforedestroy.shape',    _.bind(this.onBeforeDestroy, this));\r\n            block.on('afterdestroy.shape',    _.bind(this.onAfterDestroy, this));\r\n            block.on('select.shape',    _.bind(this.onSelect, this));\r\n            block.on('deselect.shape',  _.bind(this.onDeselect, this));\r\n\r\n            header = (new Graph.svg.Rect(0, 0, 30, this.props.height, 0))\r\n                .addClass(Graph.styles.SHAPE_HEADER)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            header.data('text', this.props.label);\r\n\r\n            pmgr.install('editor', header, {\r\n                width: 200, \r\n                height: 100,\r\n                offset: 'pointer'\r\n            });\r\n\r\n            header.on('edit.shape', _.bind(this.onLabelEdit, this));\r\n\r\n            var tx = 15,\r\n                ty = this.props.height / 2;\r\n\r\n            label = (new Graph.svg.Text(tx, ty, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(shape);\r\n\r\n            label.rotate(270, tx, ty).commit();\r\n\r\n            child = (new Graph.svg.Group())\r\n                .addClass(Graph.styles.SHAPE_CHILD)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            child.translate(50, 0).commit();\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.header = header.guid();\r\n            comp.label = label.guid();\r\n            comp.child = child.guid();\r\n\r\n            // set virtual pool\r\n            this.tree.pool = new Graph.shape.activity.Pool();\r\n            this.tree.pool.insert(this);\r\n\r\n            shape = block = header = label = null;\r\n        },\r\n\r\n        initDropzone: function() {\r\n            var me = this,\r\n                comp = me.component(),\r\n                block = me.component('block'),\r\n                children = me.children();\r\n\r\n            block.interactable().dropzone({\r\n                accept: '.shape-draggable',\r\n                overlap: .2\r\n            })\r\n            .on('dragenter', function laneDragEnter(e){\r\n                var poolGuid = me.pool().guid,\r\n                    laneGuid = me.guid();\r\n\r\n                var vector, shape, batch;\r\n\r\n                if ( ! me.transfer) {\r\n                    vector = Graph.registry.vector.get(e.relatedTarget);\r\n\r\n                    if (vector) {\r\n\r\n                        shape = Graph.registry.shape.get(vector);\r\n\r\n                        if (shape) {\r\n\r\n                            if (\r\n                                (shape.guid() == laneGuid) || \r\n                                (shape.is('activity.lane') && shape.pool().guid == poolGuid)\r\n                            ) {\r\n                                return;\r\n                            }\r\n\r\n                            me.transfer = {\r\n                                shape: shape,\r\n                                batch: []\r\n                            };\r\n\r\n                            me.transfer.shape.on('afterdrag', onTransferEnd);\r\n                            me.transfer.batch = [shape];\r\n\r\n                            var collector = vector.collector();\r\n\r\n                            if (collector) {\r\n                                batch = collector.collection.toArray().slice();\r\n                                \r\n                                _.forEach(batch, function(v){\r\n                                    var s = Graph.registry.shape.get(v);\r\n                                    if (s && s.guid() != shape.guid()) {\r\n                                        me.transfer.batch.push(s);\r\n                                    }\r\n                                });\r\n\r\n                                batch = null;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (me.transfer) {\r\n                    comp.addClass('receiving');\r\n                }\r\n            })\r\n            .on('dragleave', function laneDragLeave(e){\r\n                comp.removeClass('receiving');\r\n            })\r\n            .on('drop', function laneDrop(e){\r\n                if (me.transfer) {\r\n                    var delay;\r\n\r\n                    delay = _.delay(function(){\r\n                        clearTimeout(delay);\r\n                        delay = null;\r\n\r\n                        // takeout lane from batch\r\n                        var appended = [],\r\n                            lanes = [],\r\n                            poolGuid = me.pool().guid,\r\n                            laneGuid = me.guid();\r\n\r\n                        _.forEach(me.transfer.batch, function(shape){\r\n                            if (shape.is('activity.lane')) {\r\n                                if (shape.guid() != laneGuid && shape.pool().guid != poolGuid) {\r\n                                    lanes.push(shape);\r\n                                }\r\n                            } else {\r\n                                appended.push(shape);\r\n                            }\r\n                        });\r\n\r\n                        if (appended.length) {\r\n                            me.addChild(appended);\r\n                        }\r\n\r\n                        if (lanes.length) {\r\n                            me.addSiblingBellow(lanes);\r\n                        }\r\n\r\n                    }, 0);\r\n\r\n                }\r\n\r\n                comp.removeClass('receiving');\r\n            });\r\n\r\n            block = null;\r\n\r\n            /////////\r\n\r\n            function onTransferEnd() {\r\n                var delay;\r\n\r\n                delay = _.delay(function(){\r\n\r\n                    clearTimeout(delay);\r\n                    delay = null;\r\n\r\n                    me.transfer.shape.off('afterdrag', onTransferEnd);\r\n                    me.transfer = null;\r\n\r\n                }, 0);\r\n            }\r\n        },\r\n\r\n        pool: function() {\r\n            return this.tree.pool;\r\n        },\r\n\r\n        // @Override\r\n        render: function(paper, method, sibling) {\r\n            var component = this.component();\r\n\r\n            method = _.defaultTo(method, 'prepend');\r\n\r\n            component.render(paper, method, sibling);\r\n\r\n            // save\r\n            this.tree.paper = paper.guid();\r\n            Graph.registry.shape.setContext(this.guid(), paper.guid());\r\n\r\n            this.initDropzone();\r\n        },\r\n\r\n        sendToBack: function() {\r\n            var paper = this.paper();\r\n        },\r\n\r\n        sendToFront: function() {\r\n            this.pool().bringToFront(this);\r\n        },\r\n\r\n        refresh: function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                child = this.component('child'),\r\n                header = this.component('header'),\r\n                label = this.component('label');\r\n\r\n            var matrix, bound;\r\n\r\n            bound  = block.bbox().toJson();\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n            shape.dirty(true);\r\n            child.dirty(true);\r\n\r\n            block.attr({\r\n                x: 0,\r\n                y: 0\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            header.attr({\r\n                x: 0,\r\n                y: 0,\r\n                height: bound.height\r\n            });\r\n\r\n            header.dirty(true);\r\n\r\n            var tx = 15,\r\n                ty = bound.height / 2;\r\n\r\n            label.graph.matrix = Graph.matrix();\r\n            label.attr('transform', '');\r\n\r\n            label.attr({\r\n                x: tx,\r\n                y: ty\r\n            });\r\n\r\n            label.wrap(bound.height - 10);\r\n            label.rotate(270, tx, ty).commit();\r\n\r\n            // update props\r\n\r\n            matrix = shape.matrix();\r\n\r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            var result = this.superclass.prototype.attr.call(this, name, value),\r\n                maps = {\r\n                    width: 'width',\r\n                    height: 'height',\r\n                    left: 'x',\r\n                    top: 'y'\r\n                };\r\n\r\n            var block, key, val;\r\n\r\n            if (_.isPlainObject(name)) {\r\n\r\n                block = this.component('block');\r\n\r\n                for (key in name) {\r\n                    if (maps[key]) {\r\n                        val = name[key];\r\n                        block.attr(maps[key], val);\r\n                    }\r\n                }\r\n\r\n                this.refresh();\r\n\r\n            } else if (value !== undefined) {\r\n                block = this.component('block');\r\n\r\n                if (maps[name]) {\r\n                    block.attr(maps[name], value);\r\n                }\r\n\r\n                this.refresh();\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        height: function(value) {\r\n            if (value !== undefined) {\r\n                var childBox = this.component('child').bbox().toJson();\r\n                value = Math.max(value, (childBox.y + childBox.height + 20));    \r\n            }\r\n\r\n            return this.superclass.prototype.height.call(this, value);\r\n        },\r\n\r\n        width: function(value) {\r\n            if (value !== undefined) {\r\n                var childBox = this.component('child').bbox().toJson();\r\n                value = Math.max(value, (childBox.x + childBox.width + 20));\r\n            }\r\n\r\n            return this.superclass.prototype.width.call(this, value);\r\n        },\r\n\r\n        stroke: function(value) {\r\n            var result = this.superclass.prototype.stroke.call(this, value);\r\n            if (value !== undefined) {\r\n                this.component('header').elem.css('stroke', this.props.stroke);\r\n            }\r\n            return result;\r\n        },\r\n\r\n        addChild: function(child, redraw) {\r\n            this.superclass.prototype.addChild.call(this, child, redraw);\r\n            this.pool().invalidate();\r\n        },\r\n\r\n        removeChild: function(child) {\r\n            this.superclass.prototype.removeChild.call(this, child);\r\n            this.pool().invalidate();\r\n        },\r\n\r\n        addSiblingBellow: function(lanes) {\r\n            if ( ! _.isArray(lanes)) {\r\n                lanes = [lanes];\r\n            }\r\n\r\n            var pool = this.pool(),\r\n                height = _.reduce(\r\n                    _.map(lanes, function(lane){\r\n                        return lane.height();\r\n                    }),\r\n                    function(result, curr) {\r\n                        return result + curr;\r\n                    },\r\n                    0\r\n                ),\r\n                offsetWidth = this.width(),\r\n                offsetLeft = this.left(),\r\n                offsetTop = (this.top() + this.height());\r\n\r\n            pool.createSpaceBellow(this, height);\r\n\r\n            _.forEach(lanes, function(lane){\r\n\r\n                var boxBefore = lane.component().bboxView().clone().toJson();\r\n                var boxAfter, dx, dy;\r\n\r\n                lane.component().reset();\r\n\r\n                lane.attr({\r\n                    width: offsetWidth,\r\n                    left: offsetLeft,\r\n                    top: offsetTop\r\n                });\r\n\r\n                height = lane.height();\r\n                offsetTop += height;\r\n                \r\n                lane.tree.pool = pool;\r\n                pool.insert(lane);\r\n\r\n                lane.children().each(function(c){\r\n                    var netcom = c.connectable().component();\r\n                    netcom && (netcom.dirty(true));\r\n                });\r\n\r\n                boxAfter = lane.component().bboxView().toJson();\r\n\r\n                dx = boxAfter.x - boxBefore.x;\r\n                dy = boxAfter.y - boxBefore.y;\r\n\r\n                pool.relocateLinks(dx, dy, lane);\r\n                \r\n            });\r\n\r\n            pool.invalidate();\r\n            this.refreshSnapper();\r\n            \r\n        },\r\n\r\n        createSiblingAbove: function(options) {\r\n            var sibling = new Graph.shape.activity.Lane(options),\r\n                paper = this.paper(),\r\n                pool = this.pool();\r\n\r\n            // create space above\r\n            pool.createSpaceAbove(this, sibling.height());\r\n\r\n            // sync position 'above'\r\n            var top = (this.top() - sibling.height());\r\n\r\n            sibling.attr({\r\n                width: this.props.width,\r\n                left: this.props.left,\r\n                top: top\r\n            });\r\n\r\n            // sync pool\r\n            sibling.tree.pool = pool;\r\n\r\n            var result = pool.insert(sibling);\r\n\r\n            if (result !== undefined) {\r\n                sibling.render(paper, 'before', this.component());\r\n                pool.invalidate();\r\n                this.refreshSnapper();\r\n            }\r\n\r\n            return sibling;\r\n        },\r\n\r\n        createSiblingBellow: function(options) {\r\n            var sibling = new Graph.shape.activity.Lane(options),\r\n                paper = this.paper(),\r\n                pool = this.pool();\r\n\r\n            // create space\r\n            pool.createSpaceBellow(this, sibling.height());\r\n\r\n            // sync position 'bellow'\r\n            var bottom = (this.top() + this.height());\r\n\r\n            sibling.attr({\r\n                width: this.props.width,\r\n                left: this.props.left,\r\n                top: bottom\r\n            });\r\n\r\n            // sync pool\r\n            sibling.tree.pool = pool;\r\n\r\n            var result = pool.insert(sibling);\r\n\r\n            if (result !== undefined) {\r\n                sibling.render(paper, 'after', this.component());\r\n                pool.invalidate();\r\n                this.refreshSnapper();\r\n            }\r\n\r\n            return sibling;\r\n        },\r\n\r\n        refreshSnapper: function() {\r\n            this.paper().snapper().refresh();\r\n        },\r\n\r\n        autoResize: function() {\r\n\r\n            var shapeComponent = this.component(),\r\n                blockComponent = this.component('block');\r\n\r\n            if (blockComponent.isSelected()) {\r\n                blockComponent.deselect();\r\n            }\r\n\r\n            var bbox = this.bbox().toJson(),\r\n                actualBBox = shapeComponent.bbox().toJson(),\r\n                blockComponent = this.component('block'),\r\n                padding = {\r\n                    top: 20,\r\n                    bottom: 20,\r\n                    left: 40,\r\n                    right: 20\r\n                };\r\n\r\n            var bounds = _.extend({}, bbox);\r\n            \r\n            if (actualBBox.y + padding.top - bbox.y < padding.top) {\r\n                bounds.y = actualBBox.y - padding.top;\r\n            }\r\n\r\n            if (actualBBox.x + padding.left - bbox.x < padding.left) {\r\n                bounds.x = actualBBox.x - padding.left;\r\n            }\r\n\r\n            if (bbox.x2 - actualBBox.x2 + padding.right < padding.right) {\r\n                bounds.x2 = actualBBox.x2 + padding.right;\r\n            }\r\n\r\n            if (bbox.y2 - actualBBox.y2 + padding.bottom < padding.bottom) {\r\n                bounds.y2 = actualBBox.y2 + padding.bottom;\r\n            }\r\n\r\n            var dx = bounds.x - bbox.x,\r\n                dy = bounds.y - bbox.y;\r\n\r\n            var width = bounds.x2 - bounds.x,\r\n                height = bounds.y2 - bounds.y;\r\n\r\n            var pool = this.pool(),\r\n                curr = this.guid(),\r\n                lanes = pool.populateChildren(),\r\n                childOffsets = {};\r\n\r\n            lanes.each(function(lane){\r\n                var childBox = lane.component('child').bboxView().toJson();\r\n                childOffsets[lane.guid()] = {\r\n                    x: childBox.x,\r\n                    y: childBox.y\r\n                };\r\n            });\r\n\r\n            this.translate(dx, dy);\r\n\r\n            this.attr({\r\n                width: width,\r\n                height: height\r\n            });\r\n\r\n            pool.resizeBy(this);\r\n\r\n            lanes.each(function(lane){\r\n                var child = lane.component('child'),\r\n                    childBox = child.bboxView().toJson(),\r\n                    offset = childOffsets[lane.guid()]\r\n\r\n                if (offset) {\r\n                    var dx = offset.x - childBox.x,\r\n                        dy = offset.y - childBox.y;\r\n\r\n                    child.translate(dx, dy).commit();\r\n                }\r\n\r\n            });\r\n\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Lane';\r\n        },\r\n\r\n        toJson: function() {\r\n            var result = this.superclass.prototype.toJson.call(this);\r\n            result.props.pool = this.pool().guid;\r\n            return result;\r\n        },\r\n\r\n        onAfterDestroy: function() {\r\n            var me = this, guid = this.guid();\r\n\r\n            me.cascade(function(shape){\r\n                if (shape.guid() != guid) {\r\n                    shape.remove();\r\n                }\r\n            });\r\n\r\n            this.pool().remove(this);\r\n\r\n            // remove child\r\n            this.component('child').remove();\r\n\r\n            // remove label\r\n            this.component('label').remove();\r\n\r\n            // remove header\r\n            this.component('header').remove();\r\n\r\n            // remove shape\r\n            this.component('shape').remove();\r\n\r\n            for (var name in this.components) {\r\n                this.components[name] = null;\r\n            }\r\n\r\n            Graph.registry.shape.unregister(this);\r\n            this.fire('afterdestroy');\r\n        },\r\n\r\n        onChildConnect: function(e) {\r\n            var sourceParent = e.source.parent(),\r\n                targetParent = e.target.parent();\r\n\r\n            if (sourceParent && targetParent) {\r\n                var sourcePool = sourceParent.pool(),\r\n                    targetPool = targetParent.pool();\r\n\r\n                if (sourcePool.guid != targetPool.guid) {\r\n                    e.link.type('message');\r\n                }\r\n            }\r\n        },\r\n\r\n        onChildBeforeDestroy: function(e) {\r\n            this.superclass.prototype.onChildBeforeDestroy.call(this, e);\r\n            this.pool().invalidate();\r\n        },\r\n\r\n        onSelect: function(e) {\r\n            var me = this, guid = me.guid();\r\n\r\n            var delay = _.delay(function(){\r\n\r\n                clearTimeout(delay);\r\n                delay = null;\r\n\r\n                me.cascade(function(curr){\r\n                    if (curr.guid() != guid) {\r\n                        var vector, network;\r\n\r\n                        // deselect shape\r\n                        vector = curr.draggable().component();\r\n\r\n                        if (vector) {\r\n                            vector.deselect();\r\n                        }\r\n\r\n                        // deselect links\r\n                        network = curr.connectable().plugin();\r\n\r\n                        if (network) {\r\n                            var connections = network.connections();\r\n                            _.forEach(connections, function(conn){\r\n                                conn.link.deselect();\r\n                            });\r\n                        }\r\n                        \r\n                    }\r\n                });\r\n\r\n                me.component('shape').addClass('shape-selected');\r\n                Graph.topic.publish('shape:select', {shape: me});\r\n\r\n            }, 0);\r\n        },\r\n\r\n        onBeforeDrag: function(e) {\r\n            if (e.master) {\r\n\r\n                this.fire(e);\r\n                this.paper().diagram().capture();\r\n\r\n                var links = this.pool().populateLinks();\r\n                var link, key;\r\n\r\n                for (key in links.isolated) {\r\n                    link = links.isolated[key].link;\r\n                    link.deselect();\r\n                }\r\n\r\n                for (key in links.separated) {\r\n                    link = links.separated[key].link;\r\n                    link.deselect();\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        onAfterDrag: function(e) {\r\n            if (e.master) {\r\n                var blockComponent = this.component('block'),\r\n                    shapeComponent = this.component('shape'),\r\n                    childComponent = this.component('child'),\r\n                    blockMatrix = blockComponent.matrix(),\r\n                    pool = this.pool();\r\n\r\n                var shapeMatrix;\r\n\r\n                blockComponent.reset();\r\n\r\n                shapeComponent.matrix().multiply(blockMatrix);\r\n                shapeComponent.attr('transform', shapeComponent.matrix().toValue());\r\n                shapeComponent.dirty(true);\r\n                childComponent.dirty(true);\r\n\r\n                // update props\r\n                shapeMatrix = shapeComponent.matrix();\r\n\r\n                this.data({\r\n                    left: shapeMatrix.props.e,\r\n                    top: shapeMatrix.props.f\r\n                });\r\n\r\n                // forward\r\n                this.fire(e);\r\n\r\n                // sync other\r\n                pool.relocateSiblings(this, e.dx, e.dy);\r\n                pool.refreshContents();\r\n\r\n                // sync links\r\n                pool.relocateLinks(e.dx, e.dy);\r\n                pool.refreshChildren();\r\n\r\n                this.refreshSnapper();\r\n            }\r\n\r\n        },\r\n\r\n        onBeforeResize: function(e){\r\n            this.resizing = {\r\n                childOffsets: {}\r\n            };\r\n\r\n            // set resize restriction\r\n            // calculate max children bound for all lanes\r\n            var bounds = this.component('child').bboxView().toJson(),\r\n                lanes = this.pool().populateChildren(),\r\n                resizing = this.resizing;\r\n\r\n            lanes.each(function(lane){\r\n                var laneChildComponent = lane.component('child'),\r\n                    laneChildBox = laneChildComponent.bboxView().toJson();\r\n\r\n                resizing.childOffsets[lane.guid()] = {\r\n                    x: laneChildBox.x,\r\n                    y: laneChildBox.y\r\n                };\r\n\r\n                if (laneChildBox.x < bounds.x) {\r\n                    bounds.x = laneChildBox.x;\r\n                }\r\n\r\n                if (bounds.x2 < laneChildBox.x2) {\r\n                    bounds.x2 = laneChildBox.x2;\r\n                }\r\n\r\n            });\r\n\r\n            var resizer = e.resizer,\r\n                direction = e.direction,\r\n                origin = {\r\n                    x: bounds.x, \r\n                    y: bounds.y\r\n                },\r\n                padding = {\r\n                    top: 10,\r\n                    left: 40,\r\n                    right: 10,\r\n                    bottom: 10\r\n                };\r\n\r\n            switch(direction) {\r\n                case 'n':\r\n                    origin.x = (bounds.x + bounds.x2) / 2;\r\n                    origin.y = bounds.y2 - padding.bottom;\r\n                    break;\r\n                case 'e':\r\n                    origin.x = bounds.x + padding.right;\r\n                    origin.y = (bounds.y + bounds.y2) / 2;\r\n                    break;\r\n                case 's':\r\n                    origin.x = (bounds.x + bounds.x2) / 2;\r\n                    origin.y = bounds.y + padding.top;\r\n                    break;\r\n                case 'w':\r\n                    origin.x = bounds.x2 - padding.left;\r\n                    origin.y = (bounds.y + bounds.y2) / 2;\r\n                    break;\r\n                case 'ne':\r\n                    origin.x = bounds.x + padding.right;\r\n                    origin.y = bounds.y2 - padding.bottom;\r\n                    break;\r\n                case 'se':\r\n                    origin.x = bounds.x + padding.right;\r\n                    origin.y = bounds.y + padding.top;\r\n                    break;\r\n                case 'sw':\r\n                    origin.x = bounds.x2 - padding.left;\r\n                    origin.y = bounds.y + padding.top;\r\n                    break;\r\n                case 'nw':\r\n                    origin.x = bounds.x2 - padding.left;\r\n                    origin.y = bounds.y2 - padding.bottom;\r\n                    break;\r\n            }\r\n\r\n            var width = bounds.x2 - bounds.x,\r\n                height = bounds.y2 - bounds.y;\r\n\r\n            if (width <= 0) {\r\n                width = 200;\r\n            }\r\n\r\n            if (height <= 0) {\r\n                height = 100;\r\n            }\r\n\r\n            resizer.restrict({\r\n                width: width,\r\n                height: height,\r\n                origin: origin\r\n            });\r\n\r\n        },\r\n\r\n        onAfterResize: function(e) {\r\n            this.superclass.prototype.onAfterResize.call(this, e);\r\n\r\n            var pool = this.pool();\r\n            pool.resizeBy(this);\r\n\r\n            if (this.resizing) {\r\n                var lanes = pool.populateChildren(),\r\n                    resizing = this.resizing;\r\n\r\n                lanes.each(function(lane){\r\n                    var child = lane.component('child'),\r\n                        childBox = child.bboxView().toJson(),\r\n                        offset = resizing.childOffsets[lane.guid()];\r\n\r\n                    if (offset) {\r\n                        var dx = offset.x - childBox.x,\r\n                            dy = offset.y - childBox.y;\r\n\r\n                        child.translate(dx, dy).commit();\r\n                    }\r\n\r\n                });\r\n\r\n                this.resizing = resizing = null;\r\n            }\r\n\r\n        },\r\n\r\n        onAboveToolClick: function(e) {\r\n            this.createSiblingAbove();\r\n        },\r\n\r\n        onBelowToolClick: function(e) {\r\n            this.createSiblingBellow();\r\n        },\r\n\r\n        onUpToolClick: function(e) {\r\n            this.pool().moveUp(this);\r\n            this.refreshSnapper();\r\n        },\r\n\r\n        onDownToolClick: function(e) {\r\n            this.pool().moveDown(this);\r\n            this.refreshSnapper();\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    /**\r\n     * Virtual pool for lanes\r\n     */\r\n\r\n    var Pool = Graph.shape.activity.Pool = function() {\r\n        this.guid = 'pool-' + (++Pool.guid);\r\n\r\n        // tree nodes\r\n        this.lanes = (new Graph.collection.Tree([]))\r\n            .keygen(function(lane){\r\n                return lane.bbox.y;\r\n                // return (lane.bbox.y + (1e-9 * lane.bbox.x));\r\n            });\r\n\r\n        this.cached = {\r\n            nodes: {},\r\n            contents: null\r\n        };\r\n    };\r\n\r\n    Pool.prototype.invalidate = function() {\r\n        this.cached.contents = null;\r\n    };\r\n\r\n    Pool.prototype.populateChildren = function() {\r\n        var children = [];\r\n\r\n        _.forEach(this.lanes.toArray(), function(node){\r\n            var lane = Graph.registry.shape.get(node.lane);\r\n            children.push(lane);\r\n        });\r\n\r\n        return new Graph.collection.Shape(children);\r\n    };\r\n\r\n    Pool.prototype.bbox = function() {\r\n        var nodes = this.lanes.toArray(),\r\n             x = [],\r\n             y = [],\r\n            x2 = [],\r\n            y2 = [];\r\n\r\n        var bbox;\r\n\r\n        for (var i = nodes.length - 1; i >= 0; i--) {\r\n            bbox = nodes[i].bbox;\r\n\r\n            x.push(bbox.x);\r\n            y.push(bbox.y);\r\n\r\n            x2.push(bbox.x + bbox.width);\r\n            y2.push(bbox.y + bbox.height);\r\n        }\r\n\r\n         x = _.min(x);\r\n         y = _.min(y);\r\n        x2 = _.max(x2);\r\n        y2 = _.max(y2);\r\n\r\n        nodes = null;\r\n\r\n        return Graph.bbox({\r\n            x: x,\r\n            y: y,\r\n            x2: x2,\r\n            y2: y2,\r\n            width: x2 - x,\r\n            height: y2 - y\r\n        });\r\n    };\r\n\r\n    Pool.prototype.get = function(index) {\r\n        var data = this.lanes.get(index);\r\n        if (data) {\r\n            return Graph.registry.shape.get(data.lane);\r\n        }\r\n        return null;\r\n    };\r\n\r\n    Pool.prototype.prev = function(lane) {\r\n        var index = this.index(lane),\r\n            prev = this.lanes.get(index - 1);\r\n\r\n        if (prev) {\r\n            return Graph.registry.shape.get(prev.lane);\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    Pool.prototype.last = function() {\r\n        var index = this.size() - 1,\r\n            last = this.lanes.get(index);\r\n\r\n        if (last) {\r\n            return Graph.registry.shape.get(last.lane);\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Create new space\r\n     */\r\n    Pool.prototype.createSpaceAbove = function(lane, height) {\r\n        var laneIndex = this.index(lane),\r\n            prev = this.lanes.get(laneIndex - 1),\r\n            me = this;\r\n\r\n        if (prev) {\r\n            this.lanes.bubble(prev, function(curr){\r\n                var shape = Graph.registry.shape.get(curr.lane);\r\n                if (shape) {\r\n                    shape.translate(0, -height);\r\n                    curr.bbox = shape.bbox().toJson();\r\n\r\n                    shape.children().each(function(c){\r\n                        var comnet = c.connectable().component();\r\n                        comnet && (comnet.dirty(true));\r\n                    });\r\n\r\n                    me.relocateLinks(0, -height, shape);\r\n                }\r\n            });\r\n            this.lanes.order();\r\n        }\r\n    };\r\n\r\n    Pool.prototype.createSpaceBellow = function(lane, height) {\r\n        var laneIndex = this.index(lane),\r\n            next = this.lanes.get(laneIndex + 1),\r\n            me = this;\r\n\r\n        if (next) {\r\n            this.lanes.cascade(next, function(curr){\r\n                var shape = Graph.registry.shape.get(curr.lane);\r\n                if (shape) {\r\n                    shape.translate(0, height);\r\n                    curr.bbox = shape.bbox().toJson();\r\n\r\n                    shape.children().each(function(c){\r\n                        var comnet = c.connectable().component();\r\n                        comnet && (comnet.dirty(true));\r\n                    });\r\n\r\n                    me.relocateLinks(0, height, shape);\r\n                }\r\n            });\r\n            this.lanes.order();\r\n        }\r\n    };\r\n\r\n    Pool.prototype.relocateSiblings = function(lane, dx, dy) {\r\n        var root = this.lanes.root(),\r\n            guid = lane.guid();\r\n\r\n        if (root) {\r\n            this.lanes.cascade(root, function(curr){\r\n                if (curr.lane == guid) {\r\n                    curr.bbox = lane.bbox().toJson();\r\n                } else {\r\n                    var shape = Graph.registry.shape.get(curr.lane);\r\n                    if (shape) {\r\n                        shape.translate(dx, dy);\r\n                        curr.bbox = shape.bbox().toJson();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    Pool.prototype.resizeBy = function(lane) {\r\n        var guid = lane.guid(),\r\n            bbox = lane.bbox().toJson(),\r\n            root = this.lanes.root(),\r\n            index = this.index(lane);\r\n\r\n        if (root) {\r\n\r\n            // sample\r\n            var prev, next, dx1, dx2, dy1, dy2;\r\n\r\n            prev = this.lanes.get(index - 1);\r\n            next = this.lanes.get(index + 1);\r\n\r\n            dx1 = 0;\r\n            dy1 = 0;\r\n\r\n            dx2 = 0\r\n            dy2 = 0;\r\n\r\n            if (prev) {\r\n                dx1 = bbox.x - prev.bbox.x;\r\n                dy1 = bbox.y - (prev.bbox.y + prev.bbox.height);\r\n            }\r\n\r\n            if (next) {\r\n                dx2 = bbox.x - next.bbox.x;\r\n                dy2 = (bbox.y + bbox.height) - next.bbox.y;\r\n            }\r\n\r\n            this.lanes.cascade(root, function(curr, i){\r\n                if (curr.lane == guid) {\r\n                    curr.bbox = bbox;\r\n                } else {\r\n                    var shape = Graph.registry.shape.get(curr.lane);\r\n                    if (shape) {\r\n\r\n                        var group = shape.component(),\r\n                            block = shape.component('block');\r\n\r\n                        // up\r\n                        if (index > i) {\r\n                            shape.translate(dx1, dy1);\r\n                        }\r\n                        // down\r\n                        else if (index < i) {\r\n                            shape.translate(dx2, dy2);\r\n                        }\r\n\r\n                        block.attr({\r\n                            width: bbox.width\r\n                        });\r\n\r\n                        block.dirty(true);\r\n                        shape.refresh();\r\n\r\n                        curr.bbox = shape.bbox().toJson();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        bbox = null;\r\n    };\r\n\r\n    Pool.prototype.bringToFront = function(lane) {\r\n        var sets = Graph.$('[data-pool=\"' + this.guid + '\"]'),\r\n            last = sets.last();\r\n\r\n        if (last.length()) {\r\n            if (last.node() != lane.component().node()) {\r\n                last.after(lane.component().elem);\r\n            }\r\n        }\r\n    };\r\n\r\n    Pool.prototype.moveUp = function(lane) {\r\n        var index = this.index(lane),\r\n            prev  = this.get(index - 1),\r\n            laneNode = this.lanes.get(index),\r\n            prevNode = this.lanes.get(index - 1);\r\n\r\n        if (prev) {\r\n            var laneBox = lane.bbox().toJson(),\r\n                prevBox = prev.bbox().toJson();\r\n\r\n            var dx1 = 0,\r\n                dy1 = prevBox.y - laneBox.y,\r\n                dx2 = 0,\r\n                dy2 = laneBox.height;\r\n\r\n            laneNode.bbox.y  += dy1;\r\n            laneNode.bbox.y2 += dy1;\r\n\r\n            prevNode.bbox.y  += dy2;\r\n            prevNode.bbox.y2 += dy2;\r\n\r\n            lane.translate(dx1, dy1);\r\n            prev.translate(dx2, dy2);\r\n\r\n            this.lanes.order();\r\n\r\n            lane.children().each(function(c){\r\n                var comnet = c.connectable().component();\r\n                comnet && (comnet.dirty(true));\r\n            });\r\n\r\n            prev.children().each(function(c){\r\n                var comnet = c.connectable().component();\r\n                comnet && (comnet.dirty(true));\r\n            });\r\n\r\n            this.relocateLinks(dx1, dy1, lane);\r\n            this.relocateLinks(dx2, dy2, prev);\r\n        }\r\n    };\r\n\r\n    Pool.prototype.moveDown = function(lane) {\r\n        var index = this.index(lane),\r\n            next  = this.get(index + 1),\r\n            laneNode = this.lanes.get(index),\r\n            nextNode = this.lanes.get(index + 1);\r\n\r\n        if (next) {\r\n            var laneBox = lane.bbox().toJson(),\r\n                nextBox = next.bbox().toJson();\r\n\r\n            var dx1 = 0,\r\n                dy1 = nextBox.height,\r\n                dx2 = 0,\r\n                dy2 = laneBox.y - nextBox.y;\r\n\r\n            laneNode.bbox.y  += dy1;\r\n            laneNode.bbox.y2 += dy1;\r\n\r\n            nextNode.bbox.y  += dy2;\r\n            nextNode.bbox.y2 += dy2;\r\n\r\n            lane.translate(dx1, dy1);\r\n            next.translate(dx2, dy2);\r\n\r\n            this.lanes.order();\r\n\r\n            lane.children().each(function(c){\r\n                var comnet = c.connectable().component();\r\n                comnet && (comnet.dirty(true));\r\n            });\r\n\r\n            next.children().each(function(c){\r\n                var comnet = c.connectable().component();\r\n                comnet && (comnet.dirty(true));\r\n            });\r\n\r\n            this.relocateLinks(dx1, dy1, lane);\r\n            this.relocateLinks(dx2, dy2, next);\r\n        }\r\n    };\r\n\r\n    Pool.prototype.refreshChildren = function() {\r\n        var children = this.populateChildren();\r\n\r\n        children.each(function(lane){\r\n            lane.component('child').dirty(true);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Populate lanes children\r\n     */\r\n    Pool.prototype.populateContents = function(lane) {\r\n        var contents;\r\n        if (lane !== undefined) {\r\n            contents = new Graph.collection.Shape(lane.children().toArray());\r\n        } else {\r\n            contents = this.cached.contents;\r\n            if ( ! contents) {\r\n                contents = [];\r\n                _.forEach(this.lanes.toArray(), function(node){\r\n                    var lane = Graph.registry.shape.get(node.lane);\r\n                    if (lane) {\r\n                        contents = _.concat(contents, lane.children().toArray());\r\n                    }\r\n                });\r\n\r\n                contents = new Graph.collection.Shape(contents);\r\n                this.cached.contents = contents;\r\n            }    \r\n        }\r\n\r\n        return contents;\r\n    };\r\n\r\n    Pool.prototype.refreshContents = function() {\r\n        var contents = this.populateContents();\r\n\r\n        contents.each(function(shape){\r\n            var connectableBlock = shape.connectable().component();\r\n            if (connectableBlock) {\r\n                connectableBlock.dirty(true);\r\n            }\r\n        });\r\n    };\r\n\r\n    Pool.prototype.populateLinks = function(lane) {\r\n        var me = this, \r\n            contents = me.populateContents(lane),\r\n            contentKeys = contents.keys(),\r\n            result = {\r\n                isolated: {},\r\n                separated: {}\r\n            };\r\n\r\n        contents.each(function(shape){\r\n            var network = shape.connectable().plugin(),\r\n                connections = (network && network.connections()) || [];\r\n\r\n            var pairVector, pairShape;\r\n\r\n            _.forEach(connections, function(conn){\r\n                pairVector = Graph.registry.vector.get((conn.type == 'incoming' ? conn.source : conn.target));\r\n                if (pairVector) {\r\n                    pairShape = Graph.registry.shape.get(pairVector);\r\n                    if (pairShape) {\r\n                        if (_.indexOf(contentKeys, pairShape.guid()) > -1) {\r\n                            if ( ! result.isolated[conn.guid]) {\r\n                                result.isolated[conn.guid] = conn;\r\n                            }\r\n                        } else {\r\n                            if ( ! result.separated[conn.guid]) {\r\n                                result.separated[conn.guid] = conn;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n    Pool.prototype.relocateLinks = function(dx, dy, lane) {\r\n        var links = this.populateLinks(lane);\r\n        var key, conn, router;\r\n        \r\n        for (key in links.isolated) {\r\n            conn = links.isolated[key];\r\n            conn.link.invalidate('convex');\r\n            conn.link.relocate(dx, dy);\r\n        }\r\n        \r\n        for (key in links.separated) {\r\n            conn = links.separated[key];\r\n            conn.link.invalidate('convex');\r\n            \r\n            if (conn.type == 'incoming') {\r\n                conn.link.relocateHead(dx, dy);\r\n            } else {\r\n                conn.link.invalidate('convex');\r\n                conn.link.relocateTail(dx, dy);\r\n            }\r\n        }\r\n        \r\n        links = null;\r\n    };\r\n\r\n\r\n    Pool.prototype.size = function() {\r\n        return this.lanes.size();\r\n    };\r\n\r\n    Pool.prototype.insert = function(lane) {\r\n        var guid = lane.guid();\r\n        var node, index;\r\n\r\n        node = {\r\n            lane: guid,\r\n            bbox: lane.bbox().toJson()\r\n        };\r\n\r\n        index = this.lanes.insert(node);\r\n\r\n        if (index !== undefined) {\r\n            this.cached.nodes[guid] = node;\r\n            lane.component().elem.attr('data-pool', this.guid);\r\n        }\r\n\r\n        node = null;\r\n        return index;\r\n    };\r\n\r\n    Pool.prototype.remove = function(lane) {\r\n        var guid = lane.guid(),\r\n            node = this.cached.nodes[guid];\r\n\r\n        var index = this.lanes.remove(node);\r\n        \r\n        if (index !== undefined) {\r\n            // shrink pool (direction: up)\r\n            var prev = this.lanes.get(index - 1),\r\n                next = this.lanes.get(index),\r\n                me = this;\r\n            \r\n            if (next) {\r\n                var dx = 0,\r\n                    dy = -node.bbox.height;\r\n\r\n                this.lanes.cascade(next, function(node){\r\n                    var lane = Graph.registry.shape.get(node.lane);\r\n                    if (lane) {\r\n                        lane.translate(dx, dy);\r\n                        node.bbox = lane.bbox().toJson();\r\n\r\n                        lane.children().each(function(c){\r\n                            var comnet = c.connectable().component();\r\n                            comnet && (comnet.dirty(true));\r\n                        });\r\n\r\n                        me.relocateLinks(dx, dy, lane);\r\n                    }\r\n                });\r\n\r\n                this.lanes.order();\r\n            }\r\n\r\n            delete this.cached.nodes[guid];\r\n        }\r\n\r\n        node = null;\r\n\r\n        return index;\r\n    };\r\n\r\n    Pool.prototype.index = function(lane) {\r\n        var guid = lane.guid(),\r\n            node = this.cached.nodes[guid];\r\n\r\n        var index = this.lanes.index(node);\r\n\r\n        node = null;\r\n\r\n        return index;\r\n    };\r\n\r\n    ///////// STATIC /////////\r\n\r\n    Pool.guid = 0;\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.shape.common.Label = Graph.extend(Graph.shape.Shape, {\r\n        props: {\r\n            label: 'untitled',\r\n            align: 'left',\r\n            fontSize: 16,\r\n            lineHeight: 1.1\r\n        },\r\n        metadata: {\r\n            type: 'common.label',\r\n            icon: 'ion-android-create'\r\n        },\r\n        initComponent: function() {\r\n            var pmgr = this.plugins.manager;\r\n            var shape, block, label;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Rect(0, 0, 0, 0, 0))\r\n                .data('text', this.props.label)\r\n                .render(shape);\r\n\r\n            block.style({\r\n                fill: 'rgba(255,255,255,0)',\r\n                'stroke-width': 0\r\n            });\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            pmgr.install('dragger', block, {cls: Graph.styles.SHAPE_DRAG});\r\n            pmgr.install('editor',  block, {width: 300, height: 75, align: 'left', offset: 'pointer'});\r\n\r\n            block.on('edit.shape', _.bind(this.onLabelEdit, this));\r\n            block.on('afterdrag.shape', _.bind(this.onAfterDrag, this));\r\n            block.on('select.shape', _.bind(this.onSelect, this));\r\n            block.on('deselect.shape', _.bind(this.onDeselect, this));\r\n            block.on('beforedestroy.shape',    _.bind(this.onBeforeDestroy, this));\r\n            block.on('afterdestroy.shape',    _.bind(this.onAfterDestroy, this));\r\n\r\n            label = (new Graph.svg.Text(0, (this.props.lineHeight * this.props.fontSize) , this.props.label))\r\n                .attr('font-size', this.props.fontSize)\r\n                .attr('text-anchor', this.props.align)\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            label.on('render.shape', _.bind(this.onLabelRender, this));\r\n\r\n            _.assign(this.components, {\r\n                shape: shape.guid(),\r\n                block: block.guid(),\r\n                label: label.guid()\r\n            });\r\n        },\r\n\r\n        initMetadata: function() {\r\n            this.metadata.tools = [\r\n                {\r\n                    name: 'sendtofront',\r\n                    icon: Graph.icons.SEND_TO_FRONT,\r\n                    title: Graph._('Send to front'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onFrontToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtoback',\r\n                    icon: Graph.icons.SEND_TO_BACK,\r\n                    title: Graph._('Send to back'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBackToolClick, this)\r\n                },\r\n                {\r\n                    name: 'trash',\r\n                    icon: Graph.icons.TRASH,\r\n                    title: Graph._('Click to remove shape'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onTrashToolClick, this)\r\n                }\r\n            ];\r\n        },\r\n\r\n        refresh: _.debounce(function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n\r\n            var label = this.component('label'),\r\n                block = this.component('block');\r\n\r\n            label.write(this.props.label);\r\n            label.dirty(true);\r\n            \r\n            var labelBox = label.bbox().toJson();\r\n\r\n            block.attr({\r\n                width: labelBox.width\r\n            });\r\n\r\n            block.dirty(true);\r\n            \r\n        }, 1),\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.common.Label';\r\n        },\r\n\r\n        onLabelRender: function() {\r\n\r\n            var label = this.component('label'),\r\n                block = this.component('block'),\r\n                labelBox = label.bbox().toJson();\r\n\r\n            block.attr({\r\n                width: labelBox.width,\r\n                height: labelBox.height\r\n            });\r\n        },\r\n\r\n        onLabelEdit: function(e) {\r\n            var text = e.text;\r\n\r\n            if (text) {\r\n                this.component('label').props.text = text;\r\n                this.props.label = text;\r\n                this.refresh();    \r\n            } else {\r\n                this.remove();\r\n            }\r\n        },\r\n\r\n        onAfterDrag: function(e) {\r\n            var blockComponent = this.component('block'),\r\n                shapeComponent = this.component('shape'),\r\n                blockMatrix = blockComponent.matrix();\r\n\r\n            var shapeMatrix;\r\n\r\n            blockComponent.reset();\r\n\r\n            shapeComponent.matrix().multiply(blockMatrix);\r\n            shapeComponent.attr('transform', shapeComponent.matrix().toValue());\r\n            shapeComponent.dirty(true);\r\n\r\n            shapeMatrix = shapeComponent.matrix();\r\n\r\n            this.data({\r\n                left: shapeMatrix.props.e,\r\n                top: shapeMatrix.props.f\r\n            });\r\n\r\n            this.fire(e);\r\n        },\r\n\r\n        onSelect: function(e) {\r\n            this.component().addClass('label-selected');\r\n            if (e.initial) {\r\n                Graph.topic.publish('shape:select', {shape: this});\r\n            }\r\n        },\r\n\r\n        onDeselect: function(e) {\r\n            this.component().removeClass('label-selected');\r\n            if (e.initial) {\r\n                Graph.topic.publish('shape:deselect', {shape: this});\r\n            }\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n    \r\n    var XMLDOC = '<?xml version=\"1.0\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\" [<!ENTITY nbsp \"&#160;\">]>';\r\n    \r\n    var Exporter = Graph.data.Exporter = function(vector, options){\r\n        \r\n        this.options = _.extend({}, Exporter.defaults, options || {});\r\n        this.element = vector.node();\r\n        \r\n        var bounds, width, height, scale;\r\n        \r\n        if (vector.isPaper()) {\r\n            bounds = vector.viewport().bbox().toJson();\r\n            height = Math.max((bounds.y + bounds.height + 100), vector.elem.height());\r\n            width  = Math.max((bounds.x + bounds.width), vector.elem.width());\r\n            scale  = vector.layout().scale();\r\n        } else {\r\n            bounds = vector.bbox().toJson();\r\n            width  = bounds.width;\r\n            height = bounds.height;\r\n            scale  = vector.matrixCurrent().scale();\r\n        }\r\n        \r\n        _.assign(this.options, {\r\n            width: width,\r\n            height: height,\r\n            scaleX: scale.x,\r\n            scaleY: scale.y\r\n        });\r\n    };\r\n    \r\n    Exporter.defaults = {\r\n        width: 0,\r\n        height: 0,\r\n        \r\n        scaleX: 1,\r\n        scaleY: 1\r\n    };\r\n\r\n    Exporter.prototype.exportDataURI = function() {\r\n        \r\n    };\r\n    \r\n    Exporter.prototype.exportSVG = function(filename, compression) {\r\n        var options = _.extend({}, this.options);\r\n        \r\n        options.encoder = 'application/svg+xml';\r\n        options.compression = 1;\r\n        options.background = '#ffffff';\r\n\r\n        var uri = createDataURI(this.element, options);\r\n        var link = document.createElement('a');\r\n        var click;\r\n\r\n        link.setAttribute('download', filename);\r\n        link.setAttribute('href', uri);\r\n\r\n        if (document.createEvent) {\r\n            click = document.createEvent('MouseEvents');\r\n            click.initEvent('click', true, false);\r\n            link.dispatchEvent(click);\r\n        } else if (document.createEventObject) {\r\n            link.fireEvent('onclick');\r\n        }\r\n\r\n        link = click = null;\r\n    };\r\n\r\n    Exporter.prototype.exportJPEG = function(filename, compression) {\r\n        var options = _.extend({}, this.options);\r\n        \r\n        options.encoder = 'image/jpeg';\r\n        options.compression = compression || 1;\r\n        options.background = '#ffffff';\r\n        \r\n        filename = _.defaultTo(filename, 'download.jpg');\r\n        \r\n        exportImage(this.element, options, function(result){\r\n            if (result) {\r\n                download(filename, result);\r\n            }\r\n        });\r\n    };\r\n\r\n    Exporter.prototype.exportPNG = function(filename, compression) {\r\n        var options = _.extend({}, this.options);\r\n        \r\n        filename = _.defaultTo(filename, 'download.png');\r\n        \r\n        options.encoder = 'image/png';\r\n        options.compression = compression || 0.8;\r\n        \r\n        exportImage(this.element, options, function(result){\r\n            if (result) {\r\n                download(filename, result);\r\n            }\r\n        });\r\n    };\r\n\r\n    Exporter.prototype.exportFile = function(callback) {\r\n        var options = _.extend({}, this.options);\r\n        \r\n        options.encoder = 'image/jpeg';\r\n        options.compression = 1;\r\n        options.background = '#ffffff';\r\n\r\n        exportImage(this.element, options, function(result){\r\n            if (result) {\r\n                var blob = createBlob(result);\r\n                callback && callback(blob);\r\n            } else {\r\n                callback && callback(false);\r\n            }\r\n        });\r\n    };\r\n\r\n    Exporter.prototype.exportBlob = function(callback) {\r\n        var options = _.extend({}, this.options);\r\n        \r\n        options.encoder = 'image/jpeg';\r\n        options.compression = 1;\r\n        options.background = '#ffffff';\r\n\r\n        exportImage(this.element, options, function(result){\r\n            if (result) {\r\n                var blob = createBlob(result);\r\n                callback && callback(blob);\r\n            } else {\r\n                callback && callback(false);\r\n            }\r\n        });\r\n    };\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function repair(data) {\r\n        var encoded = encodeURIComponent(data);\r\n        \r\n        encoded = encoded.replace(/%([0-9A-F]{2})/g, function(match, p1) {\r\n            var c = String.fromCharCode('0x'+p1);\r\n            return c === '%' ? '%25' : c;\r\n        });\r\n        \r\n        return decodeURIComponent(encoded);\r\n    }\r\n    \r\n    function download(name, uri) {\r\n        if (navigator.msSaveOrOpenBlob) {\r\n            var blob = createBlob(uri);\r\n            navigator.msSaveOrOpenBlob(blob, name);\r\n            blob = null;\r\n        } else {\r\n            var link = Graph.dom('<a/>');\r\n            \r\n            if ('download' in link) {\r\n                link.download = name;\r\n                link.href = uri;\r\n                link.style.display = 'none';\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                document.body.removeChild(link);\r\n            } else {\r\n                window.open(uri, '_download', 'menubar=no,toolbar=no,status=no');\r\n            }\r\n            \r\n            link = null;\r\n        }\r\n    }\r\n    \r\n    function createBlob(uri) {\r\n        var byteString = window.atob(uri.split(',')[1]),\r\n            mimeString = uri.split(',')[0].split(':')[1].split(';')[0],\r\n            buffer = new ArrayBuffer(byteString.length),\r\n            intArray = new Uint8Array(buffer);\r\n        \r\n        for (var i = 0, ii = byteString.length; i < ii; i++) {\r\n            intArray[i] = byteString.charCodeAt(i);\r\n        }\r\n        \r\n        return new Blob([buffer], {type: mimeString});\r\n    }\r\n    \r\n    function exportImage(element, options, callback) {\r\n        var data = createDataURI(element, options),\r\n            image = new Image();\r\n        \r\n        image.onload = function() {\r\n            var canvas, context, result;\r\n            \r\n            canvas = document.createElement('canvas');\r\n            canvas.width  = image.width;\r\n            canvas.height = image.height;\r\n            \r\n            context = canvas.getContext('2d');\r\n\r\n            if (options.background) {\r\n                context.fillStyle = options.background;\r\n                context.fillRect(0, 0, canvas.width, canvas.height);\r\n            }\r\n\r\n            context.drawImage(image, 0, 0);\r\n            \r\n            try {\r\n                result = canvas.toDataURL(options.encoder, options.compression);\r\n            } catch(e) {\r\n                result = false;\r\n            }\r\n            \r\n            canvas = context = null;\r\n            callback(result);\r\n        };\r\n        \r\n        image.onerror = function() {\r\n            callback(false);\r\n        };\r\n        \r\n        image.src = data; // DOMURL.createObjectURL(blob);\r\n    }\r\n\r\n    function createData(element, options) {\r\n        var holder = Graph.dom('<div/>'),\r\n            cloned = element.cloneNode(true);\r\n        \r\n        var css, sty, svg, xml, uri;\r\n            \r\n        if (cloned.tagName == 'svg') {\r\n            cloned.setAttribute('width',  options.width);\r\n            cloned.setAttribute('height', options.height);\r\n        } else {\r\n            svg = Graph.dom('<svg/>');\r\n            \r\n            svg.setAttribute('xmlns', Graph.config.xmlns.svg);\r\n            svg.setAttribute('xmlns:xlink', Graph.config.xmlns.xlink);\r\n            svg.setAttribute('version', Graph.config.svg.version);\r\n            svg.setAttribute('width',  options.width);\r\n            svg.setAttribute('height', options.height);\r\n            \r\n            svg.appendChild(cloned);\r\n            cloned = svg;\r\n        }\r\n        \r\n        holder.appendChild(cloned);\r\n        \r\n        css = getElementStyles(element);\r\n        sty = Graph.dom('<style/>');\r\n        sty.setAttribute('type', 'text/css');\r\n        sty.innerHTML = \"<![CDATA[\\n\" + css + \"\\n]]>\";\r\n        \r\n        var first = cloned.childNodes[0];\r\n        \r\n        if (first) {\r\n            cloned.insertBefore(sty, first);\r\n        } else {\r\n            cloned.appendChild(sty);\r\n        }\r\n        \r\n        xml = XMLDOC + holder.innerHTML;\r\n        holder = cloned = null;\r\n        return xml;\r\n    }\r\n    \r\n    function createDataURI(element, options) {\r\n        var xml = createData(element, options),\r\n            uri = 'data:image/svg+xml;base64,' + window.btoa(repair(xml));\r\n\r\n        return uri;\r\n    }\r\n    \r\n    function getElementStyles(element) {\r\n        var styles = document.styleSheets,\r\n            result = '';\r\n            \r\n        var rules, rule, found;\r\n\r\n        if (Graph.config.dom == 'shadow') {\r\n            var parent = element.parentNode,\r\n                counter = 0;\r\n            \r\n            while(parent) {\r\n                if (parent == element.ownerDocument) {\r\n                    break;\r\n                }\r\n                if (parent.styleSheets !== undefined) {\r\n                    styles = parent.styleSheets;\r\n                    break;\r\n                }\r\n                parent = parent.parentNode;\r\n            }    \r\n        }\r\n\r\n        for (var i = 0, ii = styles.length; i < ii; i++) {\r\n            rules = styles[i].cssRules;\r\n            \r\n            if (rules != null) {\r\n                \r\n                for (var j = 0, jj = rules.length; j < jj; j++, found = null) {\r\n                    \r\n                    rule = rules[j];\r\n                    \r\n                    if (rule.style !== undefined) {\r\n                        if (rule.selectorText) {\r\n\r\n                            // BUG: https://github.com/exupero/saveSvgAsPng/issues/11\r\n                            \r\n                            try {\r\n                                found = element.querySelector(rule.selectorText);\r\n\r\n                                if (found) {\r\n                                    result += rule.selectorText + \" { \" + rule.style.cssText + \" }\\n\";\r\n                                } else if(rule.cssText.match(/^@font-face/)) {\r\n                                    result += rule.cssText + '\\n';\r\n                                }\r\n                            } catch(e) {\r\n                                \r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n}());","\r\n(function(){\r\n    var Parser = Graph.diagram.Parser = function(data) {\r\n        data = data || {};\r\n\r\n        this._props  = data.props || {};\r\n        this._shapes = data.shapes || [];\r\n        this._links  = data.links || [];\r\n        this._tree   = {};\r\n\r\n        this.parse();\r\n    };\r\n\r\n    Parser.prototype.constructor = Parser;\r\n\r\n    Parser.prototype.parse = function() {\r\n        var shapes = this._shapes,\r\n            tree = {},\r\n            nodes = {},\r\n            total = shapes.length;\r\n\r\n        _.forEach(shapes, function(shape, idx){\r\n            nodes[shape.props.id] = {\r\n                id: shape.props.id,\r\n                parent_id: shape.props.parent_id,\r\n                index: idx,\r\n                total: total\r\n            };\r\n        });\r\n\r\n        var key, node;\r\n\r\n        for (key in nodes) {\r\n            node = nodes[key];\r\n            if ( ! node.parent_id) {\r\n                tree[key] = node;\r\n            } else {\r\n                if (nodes[node.parent_id].children === undefined) {\r\n                    nodes[node.parent_id].children = {};\r\n                }\r\n                nodes[node.parent_id].children[node.id] = node;\r\n            }\r\n        }\r\n\r\n        this._tree = tree;\r\n    };\r\n\r\n    Parser.prototype.shapes = function() {\r\n        var shapes = this._shapes,\r\n            tree = this._tree;\r\n\r\n        return {\r\n            total: shapes.length,\r\n            each: function(callback) {\r\n                traverse(tree, shapes, callback);\r\n            }\r\n        };\r\n    };\r\n\r\n    Parser.prototype.links = function() {\r\n        var links = this._links;\r\n        return {\r\n            total: links.length,\r\n            each: function(callback) {\r\n                _.forEach(links, callback);\r\n            }\r\n        }\r\n    };\r\n\r\n    Parser.prototype.props = function() {\r\n        var props = this._props;\r\n        return {\r\n            each: function(callback) {\r\n                _.forOwn(props, callback);\r\n            }\r\n        }\r\n    };\r\n\r\n    Parser.prototype.destroy = function() {\r\n        this._shapes = null;\r\n        this._links = null;\r\n        this._tree = null;\r\n        this._props = null;\r\n    };\r\n\r\n    function traverse(nodes, shapes, callback) {\r\n        var key, node;\r\n        for (key in nodes) {\r\n            node = nodes[key];\r\n            callback(shapes[node.index], node.index, node.total);\r\n            if (node.children !== undefined) {\r\n                traverse(node.children, shapes, callback);\r\n            }\r\n        }\r\n    }\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var Pallet = Graph.diagram.pallet.Activity = Graph.extend({\r\n        \r\n        props: {\r\n            guid: null,\r\n            rendered: false,\r\n            template: null\r\n        },\r\n        \r\n        components: {\r\n            pallet: null\r\n        },\r\n        \r\n        cached: {\r\n            \r\n        },\r\n\r\n        picking: {\r\n            enabled: false,\r\n            target: null,\r\n            matrix: null,\r\n            shape: null,\r\n            begin: false,\r\n            start: null\r\n        },\r\n        \r\n        constructor: function(options) {\r\n            _.assign(this.props, options || {});\r\n            this.props.guid = 'pallet-' + (++Pallet);\r\n            this.initComponent();\r\n\r\n            Graph.registry.pallet.register(this);\r\n        },\r\n\r\n        guid: function() {\r\n            return this.props.guid;\r\n        },\r\n\r\n        initComponent: function() {\r\n            var template, contents, pallet;\r\n\r\n            contents = this.props.template;\r\n\r\n            if ( ! contents) {\r\n                contents = '' + \r\n                    '<defs>' + \r\n                        '<marker id=\"marker-arrow-pallet\" refX=\"11\" refY=\"10\" viewBox=\"0 0 20 20\" markerWidth=\"10\" markerHeight=\"10\" orient=\"auto\">' + \r\n                            '<path d=\"M 1 5 L 11 10 L 1 15 Z\" fill=\"#30D0C6\" stroke-linecap=\"round\" stroke-dasharray=\"10000, 1\"/>' + \r\n                        '</marker>' + \r\n                    '</defs>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"Graph.shape.activity.Start\" transform=\"matrix(1,0,0,1,40,0)\">' + \r\n                        '<circle cx=\"32\" cy=\"32\" r=\"30\"/>' +\r\n                        '<text x=\"32\" y=\"36\">Start</text>' + \r\n                    '</g>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"Graph.shape.activity.Final\" transform=\"matrix(1,0,0,1,40,80)\">' + \r\n                        '<circle cx=\"32\" cy=\"32\" r=\"30\"/>' + \r\n                        '<circle cx=\"32\" cy=\"32\" r=\"24\" class=\"full\"/>' + \r\n                        '<text x=\"32\" y=\"36\">End</text>' + \r\n                    '</g>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"Graph.shape.activity.Action\" transform=\"matrix(1,0,0,1,40,160)\">' + \r\n                        '<rect x=\"2\" y=\"2\" width=\"60\" height=\"60\" rx=\"7\" ry=\"7\"/>' + \r\n                        '<text x=\"32\" y=\"34\">Action</text>' + \r\n                    '</g>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"Graph.shape.activity.Router\" transform=\"matrix(1,0,0,1,40,250)\">' + \r\n                        '<rect x=\"4\" y=\"4\" width=\"54\" height=\"54\" transform=\"rotate(45,32,32)\"/>' + \r\n                        '<text x=\"30\" y=\"34\">Route</text>' + \r\n                    '</g>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"Graph.shape.activity.Join\" transform=\"matrix(1,0,0,1,40,340)\">' + \r\n                        '<rect x=\"2\" width=\"60\" height=\"58\" rx=\"0\" ry=\"0\" style=\"fill: rgba(255,255,255,0); stroke-width: 0\" />' + \r\n                        '<rect x=\"2\" y=\"28\" width=\"60\" height=\"6\" rx=\"0\" ry=\"0\" pointer-events=\"none\" class=\"full\"/>' + \r\n                        '<path d=\"M 10  0 L 10 28\" pointer-events=\"none\" ></path>' + \r\n                        '<path d=\"M 54  0 L 54 28\" pointer-events=\"none\" ></path>' + \r\n                        '<path d=\"M 32 34 L 32 60\" marker-end=\"url(#marker-arrow-pallet)\" pointer-events=\"none\" ></path>' + \r\n                        '<text x=\"32\" y=\"20\">Join</text>' + \r\n                    '</g>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"Graph.shape.activity.Fork\" transform=\"matrix(1,0,0,1,40,420)\">' + \r\n                        '<rect x=\"2\" width=\"60\" height=\"58\" rx=\"0\" ry=\"0\" pointer-events=\"none\" style=\"fill: rgba(255,255,255,0); stroke-width: 0\" />' + \r\n                        '<rect x=\"2\" y=\"28\" width=\"60\" height=\"6\" rx=\"0\" ry=\"0\" class=\"full\"/>' + \r\n                        '<path d=\"M 10 34 L 10 60\" marker-end=\"url(#marker-arrow-pallet)\" pointer-events=\"none\" ></path>' + \r\n                        '<path d=\"M 54 34 L 54 60\" marker-end=\"url(#marker-arrow-pallet)\" pointer-events=\"none\" ></path>' + \r\n                        '<path d=\"M 32  0 L 32 28\" pointer-events=\"none\" ></path>' + \r\n                        '<text x=\"32\" y=\"50\">Fork</text>' + \r\n                    '</g>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"Graph.shape.activity.Lane\" transform=\"matrix(1,0,0,1,40,510)\">' + \r\n                        '<rect x=\"2\" y=\"2\" width=\"60\" height=\"60\" rx=\"0\" ry=\"0\"/>' + \r\n                        '<rect x=\"2\" y=\"2\" width=\"10\" height=\"60\" rx=\"0\" ry=\"0\"/>' + \r\n                        '<text x=\"32\" y=\"34\">Role</text>' + \r\n                    '</g>';\r\n            }\r\n\r\n            template = _.format(\r\n                '<svg class=\"graph-pallet\" xmlns=\"{0}\" xmlns:xlink=\"{1}\" version=\"{2}\" style=\"width: 100%; height: 100%\">' + \r\n                    contents + \r\n                '</svg>',\r\n                Graph.config.xmlns.svg,\r\n                Graph.config.xmlns.xlink,\r\n                Graph.config.svg.version\r\n            );\r\n\r\n            pallet = Graph.$(template);\r\n            this.components.pallet = pallet;\r\n        },\r\n\r\n        stopPicking: function() {\r\n            if (this.picking.enabled) {\r\n                this.picking.target.remove();\r\n                _.assign(this.picking, {\r\n                    target: null,\r\n                    matrix: null,\r\n                    offset: null,\r\n                    enabled: false,\r\n                    shape: null,\r\n                    start: false\r\n                });\r\n            }\r\n        },\r\n\r\n        render: function(container) {\r\n            if (this.props.rendered) {\r\n                return;\r\n            }\r\n\r\n            var me = this, \r\n                pallet = this.components.pallet;\r\n\r\n            this.props.rendered = true;\r\n\r\n            container = Graph.$(container);\r\n            container.prepend(pallet);\r\n            container = null;\r\n\r\n            interact('.graph-pallet-item')\r\n                .on('down', function(e){\r\n                    dragStart(e);\r\n                })\r\n                .on('move', function(e){\r\n                    dragMove(e);\r\n                })\r\n                .on('up', function(e){\r\n                    dragStop(e);\r\n                });\r\n\r\n            /////////\r\n            \r\n            pallet.on('mouseleave', function(e){\r\n                dragStop(e);\r\n            });\r\n\r\n            function dragStart(e) {\r\n                var target = Graph.$(e.currentTarget);\r\n\r\n                if (me.picking.enabled) {\r\n                    dragStop(e);\r\n                }\r\n\r\n                if (target.data('shape') !== undefined) {\r\n                    var transform = Graph.util.transform2segments(target.attr('transform'));\r\n                    transform = transform[0].slice(1);\r\n\r\n                    me.picking.enabled = true;\r\n                    me.picking.matrix = Graph.factory(Graph.lang.Matrix, transform);\r\n                    me.picking.target = Graph.$(e.currentTarget.cloneNode(true));\r\n                    me.picking.target.addClass('grabbing');\r\n                    me.picking.shape = target.data('shape');\r\n\r\n                    pallet.append(me.picking.target);\r\n\r\n                    me.fire('pick', {\r\n                        shape: me.picking.shape,\r\n                        origin: {\r\n                            x: e.clientX,\r\n                            y: e.clientY\r\n                        }\r\n                    });\r\n\r\n                    transform = null;\r\n\r\n                }\r\n            }\r\n\r\n            function dragMove(e) {\r\n                var i = e.interaction;\r\n\r\n                if (i.pointerIsDown && me.picking.target) {\r\n                    e.preventDefault();\r\n                    \r\n                    var current = {\r\n                        x: e.clientX,\r\n                        y: e.clientY\r\n                    };\r\n\r\n                    if ( ! me.picking.offset) {\r\n                        me.picking.offset = current;\r\n                    }\r\n\r\n                    var dx = current.x - me.picking.offset.x,\r\n                        dy = current.y - me.picking.offset.y;\r\n\r\n                    me.picking.matrix.translate(dx, dy);\r\n                    me.picking.target.attr('transform', me.picking.matrix.toValue());\r\n\r\n                    me.fire('drag', {\r\n                        dx: dx,\r\n                        dy: dy\r\n                    }); \r\n\r\n                    me.picking.offset = current;\r\n                }\r\n            }\r\n\r\n            function dragStop(e) {\r\n                if (me.picking.enabled) {\r\n                    me.fire('drop', {\r\n                        clientX: e.clientX,\r\n                        clientY: e.clientY\r\n                    });\r\n                }\r\n                me.stopPicking();\r\n            }\r\n\r\n            return this;\r\n        },\r\n        \r\n        toString: function() {\r\n            return 'Graph.diagram.pallet.Activity';\r\n        }\r\n\r\n    });\r\n\r\n    Pallet.guid = 0;\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.diagram.type.Diagram = Graph.extend({\r\n        props: {\r\n            id: null,\r\n            paper: null,\r\n            dirty: false\r\n        },\r\n\r\n        drawing: {\r\n            enabled: false\r\n        },\r\n\r\n        metadata: {\r\n            type: 'diagram.diagram'\r\n        },\r\n\r\n        constructor: function(paper, options) {\r\n            options = options || {};\r\n            _.assign(this.props, options);\r\n\r\n            this.props.paper = paper.guid();\r\n            this.empty();\r\n        },\r\n\r\n        /**\r\n         * update properties\r\n         */\r\n        update: function(data) {\r\n            var me = this,\r\n                parser = new Graph.diagram.Parser(data),\r\n                paper = me.paper();\r\n            \r\n            parser.props().each(function(v, k){\r\n                if (k != 'type') {\r\n                    me.props[k] = v;    \r\n                }\r\n            });\r\n\r\n            parser.shapes().each(function(item){\r\n                var shape;\r\n\r\n                if (item.props.id) {\r\n                    shape = me.getShapeBy(function(shape){ \r\n                        return shape.props.id == item.props.id; \r\n                    });\r\n                } else {\r\n                    shape = me.getShapeBy(function(shape){\r\n                        return shape.props.guid == item.props.client_id;\r\n                    });\r\n                }\r\n\r\n                if (shape) {\r\n                    shape.update(item);\r\n                }\r\n            });\r\n\r\n            parser.links().each(function(item){\r\n                var link;\r\n                if (item.props.id) {\r\n                    link = me.getLinkBy(function(link){\r\n                        return link.props.id == item.props.id;\r\n                    });\r\n                } else {\r\n                    link = me.getLinkBy(function(link){\r\n                        return link.props.guid == item.props.client_id;\r\n                    });\r\n                }\r\n\r\n                if (link) {\r\n                    // link.update(item);\r\n                }\r\n            });\r\n\r\n            parser.destroy();\r\n            parser = null;\r\n        },\r\n\r\n        commit: function() {\r\n            this.props.dirty = false;\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Render data and update properties\r\n         */\r\n        render: function(data) {\r\n\r\n        },\r\n\r\n        paper: function() {\r\n            return Graph.registry.vector.get(this.props.paper);\r\n        },\r\n\r\n        empty: function() {\r\n            var shapes = this.getShapes();\r\n            \r\n            this.paper().snapper().invalidate();\r\n\r\n            shapes.each(function(shape){\r\n                if ( ! shape.tree.parent) {\r\n                    shape.remove();\r\n                }\r\n            });\r\n\r\n            shapes = null;\r\n            return this;\r\n        },\r\n\r\n        getShapes: function() {\r\n            var context = this.paper().guid(),\r\n                shapes = Graph.registry.shape.collect(context);\r\n            \r\n            return new Graph.collection.Shape(shapes);\r\n        },\r\n\r\n        getLinks: function() {\r\n            var shapes = this.getShapes().toArray(),  \r\n                indexes = {},\r\n                links = [];\r\n\r\n            var network, connections, i, ii, j, jj;\r\n\r\n            for(i = 0, ii = shapes.length; i < ii; i++) {\r\n                network = shapes[i].connectable().plugin();\r\n                if (network) {\r\n                    connections = network.connections();\r\n                    for (j = 0, jj = connections.length; j < jj; j++) {\r\n                        if (indexes[connections[j].guid] === undefined) {\r\n                            links.push(connections[j].link);\r\n                            indexes[connections[j].guid] = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            indexes = null;\r\n            return new Graph.collection.Link(links);\r\n        },\r\n        \r\n        drawShape: function(namespace, options) {\r\n\r\n        },\r\n\r\n        findShapeBy: function(identity) {\r\n            var shapes = this.getShapes().toArray();\r\n            return _.filter(shapes, identity);\r\n        },\r\n\r\n        getShapeBy: function(identity) {\r\n            var shapes = this.getShapes().toArray();\r\n            return _.find(shapes, identity);\r\n        },\r\n\r\n        getLinkBy: function(identity) {\r\n            var links = this.getLinks().toArray();\r\n            return _.find(links, identity);\r\n        },\r\n\r\n        remove: function() {\r\n            this.empty();\r\n            this.fire('afterdestroy');\r\n        },\r\n\r\n        toJson: function() {\r\n            var json = {};\r\n            return json;\r\n        }\r\n\r\n    });\r\n\r\n}());","(function(){\r\n\r\n    var Diagram = Graph.diagram.type.Activity = Graph.extend(Graph.diagram.type.Diagram, {\r\n\r\n        props: {\r\n            name: 'Activity Diagram',\r\n            description: 'No diagram description',\r\n            cover: null\r\n        },\r\n\r\n        rendering: {\r\n            active: false\r\n        },\r\n\r\n        metadata: {\r\n            type: 'diagram.activity'\r\n        },\r\n\r\n        drawShape: function(namespace, options) {\r\n            var paper = this.paper();\r\n\r\n            // already drawing\r\n            if (this.drawing.dragging) {\r\n                this.drawing.dragging = false;\r\n\r\n                this.drawing.shape.off('beforedrag', this.drawing.beforeDrag);\r\n                this.drawing.shape.off('aferdrag', this.drawing.afterDrag);\r\n\r\n                this.drawing.beforeDrag = null;\r\n                this.drawing.afterDrag = null;\r\n\r\n                // mark as invalid\r\n                this.drawing.shape.remove();\r\n                this.drawing.shape = null;\r\n            }\r\n\r\n            var clazz, shape, movable;\r\n\r\n            options = options || {};\r\n            movable = true;\r\n\r\n            if (namespace == 'Graph.shape.activity.Lane') {\r\n                var shapes = this.getShapes();\r\n                if (shapes.size() && ! this.hasLane()) {\r\n                    var bbox = shapes.bbox().toJson();\r\n                    \r\n                    options.left = bbox.x - 40;\r\n                    options.top = bbox.y - 20;\r\n\r\n                    movable = false;\r\n                    bbox = null;\r\n                }\r\n                shapes = null;\r\n            } else if (namespace == 'Graph.shape.common.Label') {\r\n                movable = false;\r\n            }\r\n\r\n            clazz = Graph.ns(namespace);\r\n            shape = Graph.factory(clazz, [options]);\r\n\r\n            // check again...\r\n            if (movable) {\r\n                movable = !!shape.draggable().plugin();\r\n            }\r\n\r\n            var me = this;\r\n\r\n            this.drawing.beforeDrag = function(e) {\r\n                shape.component().addClass('picking');\r\n            };\r\n\r\n            this.drawing.afterDrag = function() {\r\n                var timer;\r\n\r\n                timer = _.delay(function(shape){\r\n                    var valid = false;\r\n\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n\r\n                    if (shape.is('activity.lane')) {\r\n                        valid = true;\r\n                    } else {\r\n                        if (me.hasLane()) {\r\n                            var parent = shape.parent();\r\n                            valid = parent && parent.is('activity.lane');\r\n                        } else {\r\n                            valid = true;\r\n                        }\r\n                    }\r\n\r\n                    if ( ! valid) {\r\n                        Graph.message(\"Can't drop shape outside lane or pool\", 'warning');\r\n                        shape.remove();\r\n                        shape = null;\r\n                    }\r\n                }, 0, me.drawing.shape);\r\n\r\n                shape.component().removeClass('picking');\r\n\r\n                me.drawing.beforeDrag = null;\r\n                me.drawing.afterDrag = null;\r\n                me.drawing.dragging = false;\r\n                me.drawing.shape = null;\r\n\r\n            };\r\n\r\n            if (movable) {\r\n                this.drawing.dragging = true;\r\n                this.drawing.shape = shape;\r\n\r\n                shape.render(paper);\r\n\r\n                var draggable = shape.draggable().plugin(),\r\n                    snappcomp = shape.snappable().component();\r\n\r\n                draggable.start();\r\n\r\n                if (options.left !== undefined && options.top !== undefined) {\r\n                    var center = shape.center(),\r\n                        dx = options.left - center.x,\r\n                        dy = options.top - center.y;\r\n                    shape.translate(dx, dy);    \r\n\r\n                    if (snappcomp) {\r\n                        snappcomp.dirty(true);\r\n                    }\r\n                }\r\n\r\n                shape.one('beforedrag', this.drawing.beforeDrag);\r\n                shape.one('afterdrag', this.drawing.afterDrag);\r\n\r\n            } else {\r\n\r\n                me.drawing.dragging = false;\r\n                me.drawing.shape = null;\r\n                me.drawing.beforeDrag = null;\r\n                me.drawing.afterDrag = null;\r\n                \r\n                if (shape.is('activity.lane')) {\r\n                    var children = me.getShapes().toArray();\r\n\r\n                    shape.render(paper);\r\n                    shape.addChild(children);\r\n                    children = null;\r\n\r\n                } else if (shape.is('common.label')) {\r\n\r\n                    var lanes = me.findShapeBy(function(shape){ return shape.is('activity.lane'); }),\r\n                        coord = {x: shape.props.left, y: shape.props.top},\r\n                        found = false;\r\n\r\n                    shape.render(paper);\r\n\r\n                    /*if (lanes.length) {\r\n                        var box, i, j;\r\n\r\n                        for (i = 0, j = lanes.length; i < j; i++) {\r\n                            box = lanes[i].bbox().toJson();\r\n                            \r\n                            if (Graph.util.isBoxContainsPoint(box, coord)) {\r\n                                found = lanes[i];\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if (found) {\r\n                            found.addChild(shape);\r\n                        } else {\r\n                            Graph.message(\"Can't drop shape outside lane or pool\", 'warning');\r\n                            shape.remove();\r\n                            shape = null;\r\n                        }\r\n\r\n                    }*/\r\n                }\r\n            }\r\n\r\n            return {\r\n                movable: movable,\r\n                shape: shape\r\n            };\r\n        },\r\n\r\n        hasLane: function() {\r\n            return this.findShapeBy(function(shape){ return shape.is('activity.lane'); }).length !== 0;\r\n        },\r\n\r\n        render: function(data) {\r\n            var me = this,\r\n                paper = this.paper(),\r\n                parser = new Graph.diagram.Parser(data);\r\n\r\n            if (this.rendering.active) {\r\n                return;\r\n            }\r\n\r\n            this.rendering.active = true;\r\n            this.empty();\r\n\r\n            parser.props().each(function(v, k){\r\n                me.props[k] = v;\r\n            });\r\n\r\n            render(parser).then(function(rendered){\r\n                parser.links().each(function(item){\r\n                    var props = item.props,\r\n                        params = JSON.parse(item.params),\r\n                        sourceShape = rendered[props.source_id],\r\n                        targetShape = rendered[props.target_id];\r\n\r\n                    if (sourceShape && targetShape) {\r\n                        var sourceNetwork = sourceShape.connectable().plugin(),\r\n                            targetNetwork = targetShape.connectable().plugin();\r\n\r\n                        if (sourceNetwork && targetNetwork) {\r\n                            var link = sourceNetwork.connect(targetNetwork, null, null, item.props);\r\n                            link.params = params;\r\n                        }\r\n                    }\r\n                })\r\n                \r\n                me.rendering.active = false;\r\n\r\n                parser.destroy();\r\n                parser = null;\r\n\r\n                me.paper().snapper().refresh();\r\n            }); \r\n\r\n            ///////// RENDERER /////////\r\n            \r\n            function render(parser) {\r\n                var def = Graph.defer(),\r\n                    rendered = {},\r\n                    pools = {},\r\n                    count = 0,\r\n                    tick = 0;\r\n\r\n                parser.shapes().each(function(item, index, total){\r\n                    var props = item.props,\r\n                        params = JSON.parse(item.params),\r\n                        clazz = Graph.ns(props.type);\r\n\r\n                    var shape, delay;\r\n\r\n                    delay = _.delay(function(clazz, props, params){\r\n                        clearTimeout(delay);\r\n                        delay = null;\r\n\r\n                        shape = Graph.factory(clazz, [props]);\r\n                        shape.params = params;\r\n                        shape.render(paper);\r\n\r\n                        if (props.client_pool) {\r\n                            if (pools[props.client_pool] === undefined) {\r\n                                pools[props.client_pool] = [];\r\n                            }\r\n                            pools[props.client_pool].push(shape);\r\n                        }\r\n\r\n                        if (rendered[props.parent_id] !== undefined) {\r\n                            rendered[props.parent_id].addChild(shape, false);\r\n                            \r\n                            var netcom = shape.connectable().component();\r\n\r\n                            if (netcom) {\r\n                                netcom.dirty(true);\r\n                            }\r\n                        }\r\n\r\n                        rendered[props.id] = shape;\r\n                        count++;\r\n                        \r\n                        if (count === total) {\r\n                            \r\n                            var lanes, key, pool;\r\n\r\n                            for (key in pools) {\r\n                                lanes = pools[key];\r\n                                pool  = null;\r\n\r\n                                if (lanes.length > 1) {\r\n                                    _.forEach(lanes, function(lane, idx){\r\n                                        if ( ! pool) {\r\n                                            pool = lane.pool();\r\n                                        } else {\r\n                                            lane.tree.pool = pool;\r\n                                            pool.insert(lane);\r\n                                        }\r\n                                    });\r\n                                }\r\n\r\n                                if (pool) {\r\n                                    pool.invalidate();\r\n                                }\r\n                            }\r\n\r\n                            def.resolve(rendered);\r\n                        }\r\n\r\n                    }, (tick * 100), clazz, props, params);\r\n\r\n                    tick++;\r\n                });\r\n\r\n                return def.promise();\r\n            };  \r\n        },  \r\n\r\n        toString: function() {\r\n            return 'Graph.diagram.type.Activity';\r\n        },\r\n\r\n        toJson: function() {\r\n            var diagram = {\r\n                props: {\r\n                    id: this.props.id,\r\n                    name: this.props.name,\r\n                    type: this.toString(),\r\n                    description: this.props.description,\r\n                    cover: this.props.cover\r\n                },\r\n                shapes: [],\r\n                links: []\r\n            };\r\n\r\n            var shapes = this.getShapes(),\r\n                links = this.getLinks();\r\n\r\n            shapes.each(function(shape){\r\n                var data = shape.toJson();\r\n                diagram.shapes.push({\r\n                    props: data.props,\r\n                    params: data.params\r\n                });\r\n            });\r\n\r\n            links.each(function(link){\r\n                var data = link.toJson();\r\n                diagram.links.push({\r\n                    props: data.props,\r\n                    params: data.params\r\n                });\r\n            });\r\n\r\n            shapes = links = null;\r\n            return diagram;\r\n        }\r\n    });\r\n    \r\n}());\r\n\r\n","\r\n(function(){\r\n\r\n    Graph.popup.Dialog = Graph.extend({\r\n\r\n        props: {\r\n            opened: false\r\n        },\r\n\r\n        components: {\r\n            element: null,\r\n            backdrop: null\r\n        },\r\n\r\n        handlers: {\r\n            backdrop_click: null\r\n        },\r\n\r\n        constructor: function(element, options) {\r\n            var me = this, \r\n                comp = me.components,\r\n                handlers = me.handlers;\r\n\r\n            comp.element = Graph.$(element);\r\n\r\n            if (options.buttons) {\r\n                _.forEach(options.buttons, function(button, index){\r\n                    var element = Graph.$(button.element, comp.element);\r\n                    if (element.length()) {\r\n                        var name = 'button' + index,\r\n                            func = name + '_click';\r\n\r\n                        comp[name] = element;\r\n\r\n                        if (_.isFunction(button.onclick)) {\r\n                            handlers[func] = _.bind(function(e){\r\n                                button.onclick.call(me, e);\r\n                            }, me);\r\n                            element.on('click', handlers[func]);\r\n                        }\r\n                        name = func = null;\r\n                    }\r\n                    element = null;\r\n                });\r\n            }\r\n        },\r\n\r\n        element: function() {\r\n            return this.components.element;\r\n        },\r\n\r\n        open: function() {\r\n            if (this.props.opened) {\r\n                return;\r\n            }\r\n\r\n            this.element().addClass('open');\r\n            this.props.opened = true;\r\n\r\n            this.center();\r\n            this.backdrop();\r\n        },\r\n\r\n        close: function() {\r\n            var me = this,\r\n                comp = this.components,\r\n                handlers = this.handlers,\r\n                backdrop = comp.backdrop;\r\n\r\n            this.element().removeClass('open');\r\n            this.props.opened = false;\r\n\r\n            if (handlers.backdrop_click) {\r\n                backdrop.off('click', handlers.backdrop_click);\r\n                handlers.backdrop_click = null;\r\n\r\n                var backdropUser = +backdrop.data('user');\r\n\r\n                backdropUser--;\r\n\r\n                if (backdropUser <= 0) {\r\n                    backdropUser = 0;\r\n                    backdrop.detach();\r\n                }\r\n\r\n                backdrop.data('user', backdropUser);\r\n            }\r\n\r\n            _.forOwn(handlers, function(handler, name){\r\n                var tmp = _.split(name, '_'),\r\n                    key = tmp[0],\r\n                    evt = tmp[1];\r\n\r\n                if (handler && comp[key] && evt) {\r\n                    comp[key].off(evt, handler);\r\n                    handlers[name] = null;\r\n                }\r\n                \r\n                tmp = key = evt = null;\r\n            });\r\n\r\n            this.fire('close');\r\n        },\r\n\r\n        center: _.debounce(function() {\r\n            var element = this.element(),\r\n                width = element.width(),\r\n                height = element.height();\r\n\r\n            element.css({\r\n                'top': '50%',\r\n                'left': '50%',\r\n                'margin-top': -height / 2,\r\n                'margin-left': -width / 2\r\n            });\r\n        }, 0),\r\n\r\n        backdrop: function() {\r\n            var me = this,\r\n                backdrop = Graph.$('.graph-dialog-backdrop');\r\n\r\n            if ( ! backdrop.length()) {\r\n                backdrop = Graph.$('<div class=\"graph-dialog-backdrop\"/>');\r\n                backdrop.data('user', 0);\r\n                backdrop.on('click', function(e){\r\n                    e.stopPropagation();\r\n                });\r\n            }\r\n\r\n            me.handlers.backdrop_click = function() {\r\n                me.close();\r\n            };\r\n\r\n            backdrop.on('click', me.handlers.backdrop_click);\r\n\r\n            var backdropUser = +backdrop.data('user');\r\n\r\n            backdropUser++;\r\n            backdrop.data('user', backdropUser);\r\n\r\n            me.components.element.before(backdrop);\r\n            me.components.backdrop = backdrop;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.popup.Dialog';\r\n        },\r\n\r\n        destroy: function() {\r\n            this.components.element = null;\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n    ///////// SHORTCUT /////////\r\n    \r\n    Graph.dialog = function(element, options){\r\n        return new Graph.popup.Dialog(element, options);\r\n    };\r\n\r\n}());","(function(){\r\n    var DOCUMENT  = document;\r\n\r\n    ///////////////////////// HOOK DOCUMENT CLICK /////////////////////////\r\n    \r\n    Graph(function(){\r\n        var doc = DOCUMENT,\r\n            on = function(target, type, handler) {\r\n                if (target.addEventListener) {\r\n                    target.addEventListener(type, handler, false);\r\n                } else {\r\n                    target.attachEvent('on' + type, handler);\r\n                }\r\n            };\r\n\r\n        on(doc, 'mousedown', function(e){\r\n            var target, vector, paper;\r\n\r\n            target = Graph.$(Graph.event.target(e));\r\n            vector = target.data(Graph.string.ID_VECTOR);\r\n\r\n            if (vector) {\r\n                vector = Graph.registry.vector.get(vector);\r\n                paper = vector.paper();\r\n                Graph.cached.paper = paper ? paper.guid() : null;\r\n            }\r\n\r\n            vector = paper = null;\r\n        });\r\n\r\n        on(doc, 'keydown', function(e){\r\n            var paper;\r\n\r\n            if (Graph.event.isNavigation(e)) {\r\n                paper = Graph.cached.paper;\r\n                \r\n                if (paper) {\r\n                    paper = Graph.registry.vector.get(paper);\r\n                    e.originalType = 'keynavdown';\r\n                    paper.fire(e);\r\n                }\r\n            } else if (e.ctrlKey || e.cmdKey) {\r\n                paper = Graph.cached.paper;\r\n                \r\n                if (paper) {\r\n                    paper = Graph.registry.vector.get(paper);\r\n                    if (e.keyCode === Graph.event.C) {\r\n                        e.originalType = 'keycopy';\r\n                        paper.fire(e);\r\n                    } else if (e.keyCode === Graph.event.V) {\r\n                        e.originalType = 'keypaste';\r\n                        paper.fire(e);\r\n                    }\r\n                }   \r\n            }\r\n        });\r\n\r\n        on(doc, 'keyup', function(e){\r\n            if (Graph.event.isNavigation(e)) {\r\n                var paper = Graph.cached.paper;\r\n                if (paper) {\r\n                    paper = Graph.registry.vector.get(paper);\r\n                    e.originalType = 'keynavup';\r\n                    paper.fire(e);\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n    ///////////////////////// LISTEN DOCUMENT READY ////////////////////////\r\n    \r\n    (function(doc){\r\n        var timer;\r\n\r\n        var execute = function() {\r\n            _.forEach(Graph.BOOTSTRAPS, function(f){\r\n                f();\r\n            });\r\n        };\r\n\r\n        var ready = function() {\r\n            doc.removeEventListener('DOMContentLoaded', ready, false);\r\n            doc.readyState = 'complete';\r\n        };\r\n\r\n        var inspect = function() {\r\n            if (doc.readyState != 'complete') {\r\n                timer = _.delay(function(){\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                    inspect();\r\n                }, 10);\r\n            } else {\r\n                execute();\r\n            }\r\n        };\r\n\r\n        if (doc.readyState == null && doc.addEventListener) {\r\n            doc.addEventListener('DOMContentLoaded', ready, false);\r\n            doc.readyState = 'loading';\r\n        }\r\n\r\n        inspect();\r\n        \r\n    }(DOCUMENT));\r\n\r\n    ///////////////////////////////////////////////////////////////////////\r\n\r\n}());"]}