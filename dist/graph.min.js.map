{"version":3,"sources":["poly.js","core.js","util.js","class.js","error.js","event.js","point.js","line.js","curve.js","bbox.js","path.js","matrix.js","vector.js","shape.js","tree.js","element.js","ellipse.js","circle.js","rect.js","polyline.js","polygon.js","group.js","text.js","image.js","paper.js","link.js","pallet.js","layout.js","router.js","directed.js","orthogonal.js","sweeplink.js","plugin.js","manager.js","definer.js","reactor.js","transformer.js","animator.js","resizer.js","collector.js","dragger.js","dropper.js","network.js","history.js","panzoom.js","linker.js","toolmanager.js","pencil.js","editor.js","snapper.js","toolpad.js","start.js","final.js","action.js","fork.js","join.js","lane.js","pool.js","exporter.js","activity.js","diagram.js","dialog.js"],"names":["ascending","a","b","NaN","bisector","compare","left","x","lo","hi","arguments","length","mid","right","_","float","parseFloat","gcd","array","t","i","r","len","lcm","format","params","toArray","shift","replace","match","number","insert","index","Array","prototype","splice","apply","concat","move","from","to","size","k","push","undefined","permute","permuter","isFunction","reduce","result","value","key","isArray","f","d","ascendingKey","isIE","na","global","navigator","ua","userAgent","toLowerCase","ie","indexOf","parseInt","substring","GLOBAL","window","Math","self","Function","DOCUMENT","document","NAVIGATOR","location","CACHE_SIZE","MEMO_SIZE","readyFn","Graph","ready","VERSION","AUTHOR","cached","config","base","locale","svg","version","xmlns","xlink","html","font","family","line","setup","name","isPlainObject","extend","string","ID_VECTOR","ID_SHAPE","ID_LINK","ID_PORT","styles","VECTOR","PAPER","VIEWPORT","SHAPE","SHAPE_BLOCK","SHAPE_LABEL","SHAPE_HEADER","SHAPE_CHILD","SHAPE_DRAG","LINK_HEAD","LINK_TAIL","icons","ZOOM_IN","ZOOM_OUT","ZOOM_RESET","SHAPE_LANE","SHAPE_LINK","SHAPE_ACTION","SHAPE_ROUTER","LANE_ABOVE","LANE_BELOW","CONFIG","LINK","TRASH","SEND_TO_BACK","SEND_TO_FRONT","MOVE_UP","MOVE_DOWN","doc","isHTML","obj","HTMLElement","isSVG","SVGElement","isElement","dom","Element","isMac","test","platform","ns","namespace","lookup","clazz","current","parts","split","parent","uuid","c","random","v","toString","hash","str","chr","charCodeAt","create","superclass","props","factory","args","bind","expand","target","source","scope","tproto","constructor","sproto","defaultTo","forOwn","isUndefined","lang","Class","mixin","this","group","token","credit","join","remove","debounce","memoize","func","memo","param","cache","saved","ii","defer","$","Deferred","when","paper","width","height","options","Paper","type","capitalize","shape","names","chunk","lastIndexOf","substr","layout","router","link","plugin","proto","diagram","console","log","pallet","topic","subscribers","publish","message","subs","lsnr","forEach","handler","call","subscribe","unsub","h","s","sub","unsubscribe","find","u","graphConfig","on","e","vector","data","registry","get","guid","evt","timer","removeEventListener","readyState","loaded","inspect","delay","clearTimeout","addEventListener","REGEX_PATH_STR","REGEX_PATH_VAL","REGEX_PATH_CMD","REGEX_POLY_STR","REGEX_TRAN_STR","REGEX_TRAN_SUB","CONVEX_RADIUS","SMOOTH_RADIUS","LEGENDRE_N","LEGENDRE_T","LEGENDRE_C","util","deg","rad","round","PI","angle","dx","dy","y","atan2","theta","toFixed","taxicab","hypo","va","vb","sqrt","sign","num","quadrant","gradient","Infinity","snapValue","snaps","range","abs","rem","pointbox","padding","x1","y1","x2","y2","pointAlign","treshold","pointDistance","isPointEquals","isPointOnLine","p","det","dis","polar2point","distance","radian","origin","point","cos","sin","isBoxContainsPoint","box","isBoxIntersect","fn","boxOrientation","box1","box2","top","rgt","btm","lft","ver","hor","midpoint","movepoint","tr","lineBendpoints","dir","xm","ym","points","lineIntersection","x3","y3","x4","y4","max","min","nx","ny","denominator","px","py","px2","py2","perpendicular","m1","m2","tt","hp","atan","mx","my","iy","points2path","segments","map","cmd","segments2path","path2points","command","path2segments","sizes","l","m","q","z","cloneDeep","val","polygon2dots","$0","polygon2path","dots","transform2segments","valid","matrix","translate","rotate","scale","skewX","skewY","transform","matches","curvebox","x0","y0","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","j","jlen","curveLength","sum","ct","xb","curvePolynom","yb","co","n1","n2","n3","n4","curveInterval","step","pointAtInterval","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","t13","pow","t12","t3","ax","ay","cx","cy","alpha","n","start","end","curveIntersection","count","bon1","bon2","nres","ares","l1","l2","dots1","dots2","xy","di","di1","dj","dj1","ci","cj","is","convexSegment","prev","next","radius","d1","d2","cp","c1","c2","dr","smoothSegment","context","eventType","once","priority","eventNames","eventRoot","listeners","original","unbind","eventRegex","cachedRegex","rgex","RegExp","escapeRegExp","_super","_proto","_constructor","_definition","_class","_classopt","Object","__initialized__","_superopt","_superclass","merge","one","off","batch","fire","eventObject","onces","isString","Event","originalData","originalType","publisher","slice","Err","Error","err","stack","error","isError","Evt","cancelBubble","defaultPrevented","propagationStopped","immediatePropagationStopped","init","assign","stopPropagation","stopImmediatePropagation","preventDefault","event","isEvent","ESC","ENTER","DELETE","SHIFT","fix","originalEvent","position","clientX","clientY","relative","clone","invert","isPrimaryButton","button","hasPrimaryModifier","metaKey","ctrlKey","hasSecondaryModifier","shiftKey","jQuery","snap","Point","tmp","trim","toNumber","manhattan","toJson","triangle","difference","alignment","bbox","bearing","Line","bear","dec","equals","rd","si","rx","ry","polar","adhereToBox","contains","stringify","sep","toValue","isPoint","lat1","lat2","lon1","lon2","deltaLon","intersect","intersection","isLine","Curve","unshift","pointAt","json","curve","intersectnum","isCurve","BBox","prop","Path","simple","center","corner","dot","contain","isVector","vertices","isBBox","dw","dh","tbox","me","bdat","tdat","sideNearestPoint","tx","ty","tw","th","distToLeft","distToRight","distToTop","distToBottom","closest","side","pointNearestPoint","fixsegment","segment","attr","tq","T","Q","qx","qy","X","Y","arc2curve","bx","by","quad2curve","line2curve","cat2bezier","def","_13","_23","large_arc_flag","sweep_flag","recursive","_120","res","f1","f2","rx2","ry2","asin","df","f2old","x2old","y2old","s1","s2","tan","hx","hy","m3","m4","path1","path2","x1m","y1m","x2m","y2m","bz1","bz2","cv1","cv2","sj","inter","ss1","ln1","ss2","ln2","kk","segment1","segment2","bezier1","bezier2","isPath","absolute","seg","itm","toUpperCase","toUpper","jj","pop","ll","head","tail","toLower","fixarc","pi","com","curve2curve","fixarc2","com1","com2","p1","p2","fixmove2","segments1","segments2","a1","a2","attrs2","pcom","fixArc2","xmin","ymin","xmax","ymax","lengthAt","ps","segmentAt","total","sp","path","vs","addVertext","vertext","isSimple","vx","vy","nearest","best","bestlen","currpoint","currdist","tolerance","bestdist","prevlen","nextlen","prevdist","nextdist","moveTo","lineTo","append","maxs","Matrix","multiply","isMatrix","delta","sx","sy","determinant","radSkewX","cosSkewX","sinSkewX","scaleX","scaleY","toFilter","Collection","collection","items","item","first","last","clear","modify","each","iteratee","Vector","vectors","has","id","not","filter","o","offset","pull","reverse","methods","method","Shape","shapes","component","Tree","nodes","node","bisect","keygen","order","sort","root","cascade","bubble","domParser","REGEX_SVG_BUILDER","selector","query","fragment","element","DOMParser","parseFromString","documentElement","childNodes","deep","cloneNode","E","pseudo","belong","setAttributeNS","setAttribute","outerHeight","margin","show","hide","css","addClass","classes","values","chain","className","baseVal","uniq","removeClass","hasClass","prepend","appendTo","prependTo","before","after","detach","types","trigger","text","focus","contextmenu","state","empty","scrollTop","scrollLeft","child","children","curr","parentNode","nodeName","getBoundingClientRect","tree","container","traversable","selectable","focusable","snappable","selected","rendered","attrs","style","class","plugins","transformer","collector","definer","animator","resizer","reactor","dragger","dropper","network","history","panzoom","toolmgr","toolpad","snapper","editor","graph","bboxView","bboxPristine","matrixCurrent","matrixView","shapeView","elem","createElementNS","Transformer","onTransformTranslate","onTransformRotate","onTransformScale","isPaper","ToolManager","onActivateTool","onDeactivateTool","register","viewport","viewportGuid","native","getCTM","refresh","reset","removeAttr","dirty","invalidate","interactable","Reactor","animable","Animator","animstart","animating","animend","resizable","Resizer","resize","onResizerResize","draggable","Dragger","dragstart","onDraggerStart","dragmove","onDraggerMove","dragend","onDraggerEnd","zoomable","Panzoom","droppable","Dropper","dropenter","onDropperEnter","dropleave","onDropperLeave","connectable","Network","clickable","editable","Editor","beforeedit","edit","getDefaultInstance","isBoolean","enabled","removeAttribute","cursor","predicate","added","removed","removal","pullAll","shapeRelative","parentMatrix","ma","pa","dt","dimension","getBBox","clientLeft","clientTop","clientWidth","clientHeight","bottom","nbox","pbox","elems","render","sibling","isViewport","setContext","attach","isContainer","isRendered","isTraversable","relocate","resetMatrix","targetMatrix","applyMatrix","ancestors","descendants","lasso","decollect","destroy","unregister","select","resume","deselect","suspend","animate","duration","easing","callback","label","sendToFront","sendToBack","isGroup","isSelectable","isDraggable","isResizable","isConnectable","isSnappable","isSelected","tool","master","syncDragStart","syncDragMove","syncDragEnd","Ellipse","gx","gy","commit","bb","magnify","Circle","ar","Rect","origpath","w","ms","mr","ro","ox","oy","Polyline","Polygon","Group","stroke","stroke-width","fill","Text","text-anchor","lineHeight","fontSize","rows","font-size","write","onTextRender","addSpan","span","arrange","wrap","word","words","lines","lineNo","getComputedTextLength","textBox","targetBox","Image","preserveAspectRatio","src","xlink:href","align","aspect","showOrigin","components","drawing","pallets","xmlns:link","overflow","initLayout","Collector","linker","Linker","pencil","Pencil","Definer","Snapper","Toolpad","onPointerDown","onKeynavDown","onKeynavUp","listenLinkUpdate","listenLinkRemove","listenShapeDraw","defaultInstance","vp","flush","activate","selections","removeSelection","connect","isShape","createRouter","createLink","addPallet","drawstart","drawend","removePallet","parse","links","save","alert","keyCode","saveAsImage","filename","exporter","Exporter","exportPNG","saveAsBlob","exportBlob","arrangeLinks","arrangeShapes","ellipse","circle","rect","polyline","polygon","image","arg","storage","Registry","keys","tagName","collect","wipe","pid","hasOwnProperty","Layout","fit","view","smooth","smootness","grabVector","grabLink","grabLocation","dragSnapping","mode","convex","idx","sweeper","Sweeplink","findConvex","updateConvex","removeConvex","Router","domain","waypoints","bendpoints","bending","route","repair","port","initTrans","updateTrans","trans","connecting","stopTrans","portCentering","axis","porting","routes","cable","sortIntersection","isRepairable","getSegmentIndex","sortBy","floor","getClosestIntersect","repairBendpoint","bend","oldport","newport","repairRoutes","bound1","bound2","clonedRoutes","tidyRoutes","Directed","space","sourceNetwork","sourceBBox","sourceBox","targetNetwork","targetBBox","orient","orientation","direct","direction","tuneup","sdot","edot","maxlen","sourcePath","targetPath","rangeStart","rangeEnd","segmentStart","segmentEnd","oldSource","oldTarget","align1","align2","cropBinding","srcport","tarport","cropped","cropConnect","changed","Orthogonal","bends","repaired","ranges","snapH","snapV","sourceBound","targetBound","segmentAlign","q1","q2","newStart","newEnd","sourceOrient","targetOrient","dotlen","newRangeStart","cropBending","getHandler","resource","Link","labelDistance","labelX","labelY","connected","block","coat","controls","handlers","metadata","icon","initComponent","initMetadata","bindResource","onRouterRoute","onRouterReroute","comp","ghost","manual","batchSync","onCoatClick","onCoatSelect","onCoatDeselect","onCoatDragStart","onCoatDragEnd","onCoatEdit","onCoatBeforeEdit","onCoatRemove","onLabelRender","onLabelDragend","labelVendor","vendor","onLabelDoubletap","tools","title","onFrontToolClick","onBackToolClick","onTrashToolClick","unbindResource","existing","bindSource","bindTarget","unbindSource","unbindTarget","addLink","disconnect","update","silent","redraw","bound","isNull","resumeControl","suspendControl","renderControl","removeLink","near","startEdit","onSourceRotate","onSourceDragstart","onSourceDragmove","onSourceDragend","onSourceResize","onTargetRotate","onTargetDragstart","onTargetDragmove","onTargetDragend","onTargetResize","linkid","control","onControlStart","onControlMove","onControlEnd","snaphor","snapver","conseg","ss","drag","createTree","findIndex","swap","KEY_TRESHOLD","SLOPE_TRESHOLD","queue","found","process","extract","indexA","indexB","minIndex","intercept","validate","lineA","lineB","alignA","alignB","ix","isOverlap","isIntersection","Plugin","activator","enable","disable","Manager","installed","install","getPluginHandler","uninstall","maps","definitions","holder","defineArrowMarker","marker","vendors","navigationKeys","CTRL","interact","currentTarget","isNavigation","dropzone","gesturable","unset","actions","simulate","events","mat","act","inv","equalizeTransform","tt1","tt2","maxlength","emptyTransform","equal","stacks","keyframes","Animation","scenes","animation","100","frame","pause","stop","status","asize","scene","time","playing","applied","ssize","at","initstatus","Date","inverse","able","defaults","eq","semantic","timestamp","player","play","prog","anim","tick","paused","ease","played","repeat","g","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","frames","pickBy","times","linier","easeIn","easeOut","easeInOut","backIn","backOut","elastic","math","bounce","suspended","handleImage","handleSize","minWidth","minHeight","helper","handle","ow","oh","cw","ch","snapping","onHolderRender","ne","se","sw","nw","onHandleMoveStart","onHandleMove","onHandleMoveEnd","hs","hw","hh","rmatrix","setupRestriction","oldcen","newcen","vdx","vdy","rubber","collecting","styleCursor","manualStart","onstart","onmove","onend","single","clearCollection","interaction","pointerIsDown","interacting","action","prepared","setEventXY","startCoords","pointers","except","syncdrag","tdx","tdy","inertia","grid","dragClass","rotation","scaling","onVectorRender","onDragStart","onDragMove","onDragEnd","onPointerMove","vbox","hbox","fixsnap","createSnapGrid","setOptions","targets","endOnly","resetSnap","restrict","setPerAction","restriction","edata","axs","edx","edy","pageX","pageY","ex","ey","overlap","accept","checker","onDropValidate","ondropactivate","onDropActivate","ondropdeactivate","onDropDeactivate","ondragenter","onDragEnter","ondragleave","onDragLeave","ondrop","onDrop","edrop","edrag","dropped","dropel","dragel","CLS_CONNECT_VALID","CLS_CONNECT_INVALID","CLS_CONNECT_RESET","CLS_CONNECT_CLEAR","CLS_CONNECT_HOVER","wiring","linking","pole","cables","pairs","invalidateTrans","relatedTarget","canConnect","isSource","isTarget","pair","conn","repairLinks","hasConnection","getConnection","connections","conns","opts","History","limit","lim","drop","go","back","zoomRange","panEnabled","zoomEnabled","showToolbox","caching","scrolling","steps","zooming","zoom","toolbox","panning","moveHandler","stopHandler","onMouseWheel","revalidate","zoomReset","zoomIn","zoomOut","currentZoom","zoomType","factor","currentScale","matrixScale","onBeforeZoom","onZoom","scroll","onBeforeScroll","onScroll","vscroll","hscroll","deltaMode","deltaX","deltaY","altKey","onPointerStop","leading","trailing","pointer","visits","anchor","build","sbox","cropping","spath","scrop","tpath","tcrop","coord","crop","utils","deactivateAll","deactivate","toggle","draw","coords","MIN_BOX_WIDTH","MIN_BOX_HEIGHT","OFFSET_TRESHOLD","editing","commitHandler","onDoubleTap","snapped","clients","stubx","stuby","client","clientId","dragStartHandler","dragEndHandler","removeHandler","osnaps","onClientDragStart","onClientDragEnd","onClientRemove","getClientCenter","repairClient","showStub","hideStub","stub","diffx","diffy","snapx","snapy","pt","pad","onShapeSelect","onShapeDeselect","onLinkSelect","onLinkDeselect","onToolClick","meta","body","manager","onConfigToolClick","onLinkToolClick","addChild","removeChild","onLabelEdit","shapeMatrix","blockComponent","shapeComponent","blockMatrix","onSelect","onDeselect","onResize","onRemove","activity","Start","pmgr","Final","inner","Action","Fork","Join","Lane","header","pool","transfer","initDropzone","onAboveToolClick","onBelowToolClick","onUpToolClick","onDownToolClick","Pool","onTransferEnd","placeTarget","autoResize","bringToFront","addSiblingAbove","createSpaceAbove","addSiblingBellow","createSpaceBellow","actualBBox","childComponent","resizeBy","redrawChildren","lanes","lane","laneChild","translateBy","moveUp","moveDown","laneIndex","dx1","dx2","dy1","dy2","sets","laneNode","prevNode","laneBox","prevBox","nextNode","nextBox","encoded","encodeURIComponent","String","fromCharCode","decodeURIComponent","download","uri","msSaveOrOpenBlob","blob","createBlob","href","display","appendChild","click","open","byteString","atob","mimeString","buffer","ArrayBuffer","intArray","Uint8Array","Blob","exportImage","createDataURI","onload","canvas","createElement","getContext","background","fillStyle","fillRect","drawImage","toDataURL","encoder","compression","onerror","sty","xml","cloned","getElementStyles","innerHTML","insertBefore","XMLDOC","btoa","rules","rule","styleSheets","cssRules","selectorText","querySelector","cssText","exportDataURI","exportSVG","exportJPEG","Activity","template","Diagram","desc","popup","Dialog","opened","backdrop","backdrop_click","buttons","onclick","close","backdropUser","margin-top","margin-left","dialog"],"mappings":"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","file":"graph.min.js","sourcesContent":["\r\n(function(){\r\n\r\n    /**\r\n     * Lodash polyfill\r\n     */\r\n\r\n    _.float = parseFloat;\r\n\r\n    _.gcd = function(array) {\r\n        if (array.length === 2) {\r\n            var a = array[0], b = array[1], t;\r\n\r\n            while (b > 0) {\r\n                t = b;\r\n                b = a % b;\r\n                a = t;\r\n            }\r\n\r\n            return a;\r\n        } else {\r\n            var r = array[0], len = array.length, i;\r\n            for (i = 1; i < len; i++) {\r\n                r = _.gcd([r, array[i]]);\r\n            }\r\n            return r;\r\n        }\r\n    };\r\n\r\n    _.lcm = function(array) {\r\n        if (array.length === 2) {\r\n            var a = array[0], b = array[1];\r\n            return a * (b / _.gcd([a, b]));\r\n        } else {\r\n            var r = array[0], len = array.length, i;\r\n            for (i = 1; i < len; i++) {\r\n                r = _.lcm([r, array[i]]);\r\n            }\r\n            return r;\r\n        }\r\n    };\r\n\r\n    _.format = function() {\r\n        var params = _.toArray(arguments),\r\n            format = params.shift();\r\n        return format.replace(/{(\\d+)}/g, function(match, number) {\r\n            return typeof params[number] != 'undefined'\r\n                ? params[number]\r\n                : match;\r\n        });\r\n    }\r\n\r\n    _.insert = function(array, index, insert) {\r\n        Array.prototype.splice.apply(array, [index, 0].concat(insert));\r\n        return array;\r\n    };\r\n\r\n    /**\r\n     * Array move (swap)\r\n     * http://stackoverflow.com/questions/5306680/move-an-array-element-from-one-array-position-to-another/5306832#5306832\r\n     */\r\n    _.move = function(array, from, to) {\r\n        var size = array.length;\r\n        \r\n        while(from < 0) {\r\n            from += size;\r\n        }\r\n        \r\n        while(to < 0) {\r\n            to += size;\r\n        }\r\n\r\n        if (to >= size) {\r\n            var k = to - size;\r\n            while((k--) + 1) {\r\n                array.push(undefined);\r\n            }\r\n        }\r\n\r\n        array.splice(to, 0, array.splice(from, 1)[0]);\r\n        return array;\r\n    };\r\n\r\n    /**\r\n     * Array permutation\r\n     * https://github.com/lodash/lodash/issues/1701\r\n     */\r\n    _.permute = function(array, permuter) {\r\n        if(_.isFunction(permuter)) {\r\n            return _.reduce(array, function(result, value, key){\r\n                result[permuter(key, value)] = value;\r\n                return result;\r\n            }, []);\r\n        } else if (_.isArray(permuter)) {\r\n            return _.reduce(permuter, function(result, value, key){\r\n                result[key] = array[permuter[key]];\r\n                return result;\r\n            }, []);\r\n        }\r\n        return array;\r\n    };  \r\n    \r\n    /**\r\n     *  Bisector\r\n     *  https://github.com/d3/d3-array/blob/master/src/bisector.js\r\n     */\r\n    function ascending(a, b) {\r\n        return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\r\n    }\r\n\r\n    function descending(a, b) {\r\n        return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\r\n    }\r\n\r\n    function bisector(compare) {\r\n        return {\r\n            left: function(a, x, lo, hi) {\r\n                if (arguments.length < 3) lo = 0;\r\n                if (arguments.length < 4) hi = a.length;\r\n                while (lo < hi) {\r\n                    var mid = lo + hi >>> 1;\r\n                    if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\r\n                }\r\n                return lo;\r\n            },\r\n            right: function(a, x, lo, hi) {\r\n                if (arguments.length < 3) lo = 0;\r\n                if (arguments.length < 4) hi = a.length;\r\n                while (lo < hi) {\r\n                    var mid = lo + hi >>> 1;\r\n                    if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\r\n                }\r\n                return lo;\r\n            }\r\n        };\r\n    }\r\n\r\n    _.bisector = function(f) {\r\n        return bisector(f.length === 1 ? function(d, x){\r\n            return ascending(f(d), x);\r\n        } : f);\r\n    };\r\n    \r\n    /** \r\n     *  Sorter\r\n     *  https://github.com/gka/d3-jetpack/blob/master/d3-jetpack.js\r\n     */\r\n    _.ascendingKey = function(key) {\r\n        return typeof key == 'function' ? function (a, b) {\r\n            return key(a) < key(b) ? -1 : key(a) > key(b) ? 1 : key(a) >= key(b) ? 0 : NaN;\r\n        } : function (a, b) {\r\n            return a[key] < b[key] ? -1 : a[key] > b[key] ? 1 : a[key] >= b[key] ? 0 : NaN;\r\n        };\r\n    };\r\n\r\n    _.isIE = function() {\r\n        var na = global.navigator,\r\n            ua = (na && na.userAgent || '').toLowerCase(),\r\n            ie = ua.indexOf('MSIE ');\r\n\r\n        if (ie > 0 || !!ua.match(/Trident.*rv\\:11\\./)) {\r\n            return parseInt(ua.substring(ie + 5, ua.indexOf('.', ie)));\r\n        }\r\n        return false;\r\n    };\r\n\r\n}());","\r\n//////////////////////////////////////////////////////////////////\r\n/*\r\n * Graph - SVG Library\r\n * Documentation visit: https://github.com/londomloto/graph\r\n *\r\n * @author londomloto <roso.sasongko@gmail.com>\r\n * @author londomloto <roso@kct.co.id>\r\n */\r\n//////////////////////////////////////////////////////////////////\r\n\r\n(function(){\r\n\r\n    var GLOBAL = typeof window != 'undefined' && \r\n                 window.Math == Math \r\n                    ? window \r\n                    : (typeof self != 'undefined' && self.Math == Math \r\n                        ? self \r\n                        : Function('return this')());\r\n\r\n    var DOCUMENT  = document;\r\n    var LOCATION  = location;\r\n    var NAVIGATOR = navigator;\r\n\r\n    /**\r\n     * Size for cached result\r\n     */\r\n    var CACHE_SIZE = 100;\r\n\r\n    /**\r\n     * Size for memoize function\r\n     */\r\n    var MEMO_SIZE = 1000;\r\n\r\n    //--------------------------------------------------------------------//\r\n    \r\n    var readyFn = [];\r\n\r\n    /**\r\n     * Banner\r\n     */\r\n    GLOBAL.Graph = function(ready) {\r\n        readyFn.push(ready);\r\n    };\r\n\r\n    Graph.VERSION = '1.0.0';\r\n    \r\n    Graph.AUTHOR = 'Kreasindo Cipta Teknologi';\r\n    \r\n    /**\r\n     * Config\r\n     */\r\n    Graph.cached = {};\r\n\r\n    Graph.config = {\r\n        base: '../',\r\n        locale: 'id',\r\n        svg: {\r\n            version: '1.1'\r\n        },\r\n        xmlns: {\r\n            svg: 'http://www.w3.org/2000/svg',\r\n            xlink: 'http://www.w3.org/1999/xlink',\r\n            html: 'http://www.w3.org/1999/xhtml'\r\n        },\r\n        font: {\r\n            family: 'Segoe UI',\r\n            size: '12px',\r\n            line: 1\r\n        }\r\n    };\r\n\r\n    Graph.setup = function(name, value) {\r\n        if (_.isPlainObject(name)) {\r\n            _.extend(Graph.config, name);\r\n        } else {\r\n            Graph.config[name] = value;\r\n        }\r\n    };\r\n\r\n    // Graph.toString = function() {\r\n    //     return 'SVG Library presented by ' + Graph.AUTHOR;\r\n    // }\r\n    \r\n\r\n    /**\r\n     * String params\r\n     */\r\n    Graph.string = {\r\n        ID_VECTOR: 'graph-vector-id',\r\n        ID_SHAPE: 'graph-shape-id',\r\n        ID_LINK: 'graph-link-id',\r\n        ID_PORT: 'graph-port-id'\r\n    };\r\n\r\n    /**\r\n     * Style params\r\n     */\r\n    Graph.styles = {\r\n        VECTOR: 'graph-elem',\r\n        PAPER: 'graph-paper',\r\n        VIEWPORT: 'graph-viewport',\r\n\r\n        SHAPE: 'graph-shape',\r\n        SHAPE_BLOCK: 'comp-block',\r\n        SHAPE_LABEL: 'comp-label',\r\n        SHAPE_HEADER: 'comp-header',\r\n        SHAPE_CHILD: 'comp-child',\r\n        SHAPE_DRAG: 'shape-draggable',\r\n\r\n        LINK_HEAD: 'graph-link-head',\r\n        LINK_TAIL: 'graph-link-tail'\r\n    };\r\n\r\n    /**\r\n     * Icon params\r\n     */\r\n    Graph.icons = {\r\n        ZOOM_IN: 'ion-android-add',\r\n        ZOOM_OUT: 'ion-android-remove',\r\n        ZOOM_RESET: 'ion-pinpoint',\r\n\r\n        SHAPE: 'bpmn-icon-start-event-none',\r\n        SHAPE_LANE: 'bpmn-icon-participant',\r\n        SHAPE_LINK: 'ion-ios-shuffle-strong',\r\n        SHAPE_ACTION: 'bpmn-icon-task',\r\n        SHAPE_ROUTER: 'bpmn-icon-gateway-none',\r\n\r\n        LANE_ABOVE: 'bpmn-icon-lane-insert-above',\r\n        LANE_BELOW: 'bpmn-icon-lane-insert-below',\r\n\r\n        CONFIG: 'bpmn-icon-screw-wrench',\r\n        LINK: 'bpmn-icon-connection-multi',\r\n        TRASH: 'bpmn-icon-trash',\r\n\r\n        SEND_TO_BACK: 'font-icon-send-back',\r\n        SEND_TO_FRONT: 'font-icon-bring-front',\r\n\r\n        MOVE_UP: 'ion-android-arrow-up',\r\n        MOVE_DOWN: 'ion-android-arrow-down'\r\n    };\r\n\r\n    Graph.doc = function() {\r\n        \r\n    };\r\n\r\n    Graph.global = function() {\r\n        \r\n    };  \r\n\r\n    /**\r\n     * Language & Core helper\r\n     */\r\n    \r\n    Graph.isHTML = function(obj) {\r\n        return obj instanceof HTMLElement;\r\n    };\r\n\r\n    Graph.isSVG = function(obj) {\r\n        return obj instanceof SVGElement;\r\n    };\r\n\r\n    Graph.isElement = function(obj) {\r\n        return obj instanceof Graph.dom.Element;\r\n    };\r\n\r\n    Graph.isMac = function() {\r\n        return (/mac/i).test(NAVIGATOR.platform);    \r\n    };\r\n\r\n    Graph.ns = function(namespace) {\r\n        var cached = Graph.lookup('Graph', 'ns', namespace);\r\n\r\n        if (cached.clazz) {\r\n            return cached.clazz;\r\n        }\r\n\r\n        var parts = _.split(namespace, '.'),\r\n            parent = GLOBAL,\r\n            len = parts.length,\r\n            current,\r\n            i;\r\n\r\n        for (i = 0; i < len; i++) {\r\n            current = parts[i];\r\n            parent[current] = parent[current] || {};\r\n            parent = parent[current];\r\n        }\r\n\r\n        if (_.isFunction(parent)) {\r\n            cached.clazz = parent;\r\n        }\r\n\r\n        return parent;\r\n    };\r\n\r\n    Graph.uuid = function() {\r\n        // credit: http://stackoverflow.com/posts/2117523/revisions\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n            var r = Math.random() * 16|0;\r\n            var v = c == 'x' ? r : (r&0x3|0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Simple hashing\r\n     */\r\n    Graph.hash = function(str) {\r\n        var hash = 0, chr, len, i;\r\n        \r\n        if ( ! str.length) {\r\n            return hash;\r\n        }\r\n\r\n        for (i = 0, len = str.length; i < len; i++) {\r\n            chr   = str.charCodeAt(i);\r\n            hash  = ((hash << 5) - hash) + chr;\r\n            hash |= 0;\r\n        }\r\n\r\n        return hash;\r\n    };\r\n\r\n    // prepare for prototypal factory\r\n    Graph.create = function(superclass, props) {\r\n        \r\n    };\r\n\r\n    Graph.factory = function(clazz, args) {\r\n        args = [clazz].concat(args);\r\n        return new (Function.prototype.bind.apply(clazz, args));\r\n    };\r\n\r\n    Graph.expand = function(target, source, scope) {\r\n        var tproto = target.constructor.prototype,\r\n            sproto = source.constructor.prototype;\r\n\r\n        scope = _.defaultTo(source);\r\n\r\n        _.forOwn(sproto, function(value, key){\r\n            if (_.isFunction(value) && _.isUndefined(tproto[key])) {\r\n                (function(key, value){\r\n                    tproto[key] = _.bind(value, scope);\r\n                }(key, value));    \r\n            }\r\n        });\r\n    };\r\n\r\n    Graph.extend = function(clazz, props) {\r\n        if (_.isPlainObject(clazz)) {\r\n            props = clazz;\r\n            clazz = Graph.lang.Class;\r\n        }\r\n        return clazz.extend(props);\r\n    };\r\n\r\n    Graph.mixin = function(target, source) {\r\n        this.extend(target, source, target);\r\n    };\r\n\r\n    Graph.lookup = function(group, token) {\r\n        var args = _.toArray(arguments), cached, credit;\r\n\r\n        group  = args.shift();\r\n        token  = _.join(args, '|');\r\n        cached = Graph.cached[group] = Graph.cached[group] || {};\r\n        credit = group == 'Regex.event' ? null : CACHE_SIZE;\r\n\r\n        if (cached[token]) {\r\n            cached[token].credit = credit;\r\n        } else {\r\n            cached[token] = {\r\n                credit: credit,\r\n                remove: (function(group, token){\r\n                    return function() {\r\n                        delete Graph.cached[group][token];    \r\n                    };\r\n                }(group, token))\r\n            }\r\n        }\r\n\r\n        _.debounce(function(t){\r\n            _.forOwn(cached, function(v, k){\r\n                if (k != t) {\r\n                    if (cached[k].credit !== null) {\r\n                        cached[k].credit--;\r\n                        if (cached[k].credit <= 0) {\r\n                            delete cached[k];\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        })(token);\r\n\r\n        return cached[token];\r\n    };\r\n\r\n    Graph.memoize = function(func) {\r\n        return function memo() {\r\n            var param = _.toArray(arguments),\r\n                token = _.join(param, \"\\u2400\"),\r\n                cache = memo.cache = memo.cache || {},\r\n                saved = memo.saved = memo.saved || [];\r\n\r\n            if ( ! _.isUndefined(cache[token])) {\r\n                for (var i = 0, ii = saved.length; i < ii; i++) {\r\n                    if (saved[i] == token) {\r\n                        saved.push(saved.splice(i, 1)[0]);\r\n                        break;\r\n                    }\r\n                }\r\n                return cache[token];\r\n            }\r\n\r\n            if (saved.length >= MEMO_SIZE) {\r\n                delete cache[saved.shift()];\r\n            }\r\n\r\n            saved.push(token);\r\n            cache[token] = func.apply(this, param);\r\n\r\n            return cache[token];\r\n        }\r\n    };\r\n\r\n    Graph.defer = function() {\r\n        return $.Deferred();\r\n    };\r\n\r\n    Graph.when = $.when;\r\n\r\n    /**\r\n     * Vector\r\n     */\r\n    Graph.paper = function(width, height, options) {\r\n        return Graph.factory(Graph.svg.Paper, [width, height, options]);\r\n    };\r\n\r\n    Graph.svg = function(type) {\r\n        var args = _.toArray(arguments), svg;\r\n\r\n        type = args.shift();\r\n        svg = Graph.factory(Graph.svg[_.capitalize(type)], args);\r\n        args = null;\r\n        \r\n        return svg;\r\n    };\r\n\r\n    Graph.shape = function(names, options) {\r\n        var clazz, shape, chunk;\r\n\r\n        chunk = names.lastIndexOf('.');\r\n        names = names.substr(0, chunk) + '.' + _.capitalize(names.substr(chunk + 1));\r\n        clazz = Graph.ns('Graph.shape.' + names);\r\n        shape = Graph.factory(clazz, options);\r\n\r\n        chunk = names = clazz = null;\r\n        return shape;\r\n    };\r\n\r\n    /**\r\n     * Layout\r\n     */\r\n    Graph.layout = function(type) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Router\r\n     */\r\n    Graph.router = function(type) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Link / Connector\r\n     */\r\n    Graph.link = function(type) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Plugin\r\n     */\r\n    Graph.plugin = function(proto) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Diagram\r\n     */\r\n    Graph.diagram = function(name, options) {\r\n        var clazz, diagram;\r\n        clazz = Graph.diagram[_.capitalize(name)];\r\n        diagram = Graph.factory(clazz, [options]);\r\n        console.log(diagram);\r\n    };\r\n\r\n    /**\r\n     * Pallet\r\n     */\r\n    Graph.pallet = function(type, options) {\r\n        var clazz;\r\n        clazz = Graph.pallet[_.capitalize(type)];\r\n        return Graph.factory(clazz, [options]);\r\n    };\r\n    \r\n    /**\r\n     * Topic\r\n     */\r\n    Graph.topic = {\r\n        subscribers: {\r\n\r\n        },\r\n        publish: function(topic, message, scope) {\r\n            var subs = Graph.topic.subscribers,\r\n                lsnr = subs[topic] || [];\r\n\r\n            _.forEach(lsnr, function(handler){\r\n                (function(){\r\n                    handler.call(null, message, scope);\r\n                }(handler));\r\n            });\r\n        },\r\n\r\n        subscribe: function(topic, handler) {\r\n\r\n            if (_.isPlainObject(topic)) {\r\n                var unsub = [];\r\n\r\n                _.forOwn(topic, function(h, t){\r\n                    (function(t, h){\r\n                        var s = Graph.topic.subscribe(t, h);\r\n                        unsub.push({topic: t, sub: s});\r\n                    }(t, h));\r\n                });\r\n\r\n                return {\r\n                    unsubscribe: (function(unsub){\r\n                        return function(topic) {\r\n                            if (topic) {\r\n                                var f = _.find(unsub, function(u){\r\n                                    return u.topic == topic;\r\n                                });\r\n                                f && f.sub.unsubscribe();\r\n                            } else {\r\n                                _.forEach(unsub, function(u){\r\n                                    u.sub.unsubscribe();\r\n                                });\r\n                            }\r\n                        };\r\n                    }(unsub))\r\n                };\r\n            }\r\n\r\n            var subs = Graph.topic.subscribers, data;\r\n\r\n            subs[topic] = subs[topic] || [];\r\n            subs[topic].push(handler);\r\n\r\n            return {\r\n                unsubscribe: (function(topic, handler){\r\n                    return function() {\r\n                        Graph.topic.unsubscribe(topic, handler);\r\n                    };\r\n                }(topic, handler))\r\n            };\r\n        },\r\n\r\n        unsubscribe: function(topic, handler) {\r\n            var subs = Graph.topic.subscribers, \r\n                lsnr = subs[topic] || [];\r\n\r\n            for (var i = lsnr.length - 1; i >= 0; i--) {\r\n                if (lsnr[i] === handler) {\r\n                    lsnr.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ///////////////////////////// LOAD CONFIG /////////////////////////////\r\n    \r\n    if (GLOBAL.graphConfig) {\r\n        Graph.setup(GLOBAL.graphConfig);\r\n    }\r\n\r\n    ///////////////////////////// I18N /////////////////////////////\r\n    \r\n    Graph._ = function(message) {\r\n        return message;\r\n    };\r\n\r\n    /////////////////////////// CORE NAMESPACES ////////////////////////////\r\n    \r\n    Graph.ns('Graph.lang');\r\n    Graph.ns('Graph.collection');\r\n    Graph.ns('Graph.registry');\r\n    Graph.ns('Graph.data');\r\n    Graph.ns('Graph.popup');\r\n    Graph.ns('Graph.shape.activity');\r\n\r\n    ///////////////////////// HOOK DOCUMENT CLICK /////////////////////////\r\n    \r\n    Graph(function(){\r\n        var doc = $(DOCUMENT);\r\n\r\n        doc.on('mousedown', function(e){\r\n            var target = $(e.target),\r\n                vector = target.data(Graph.string.ID_VECTOR);\r\n\r\n            var paper;\r\n\r\n            if (vector) {\r\n                vector = Graph.registry.vector.get(vector);\r\n                paper = vector.paper();\r\n                Graph.cached.paper = paper ? paper.guid() : null;\r\n            } else {\r\n                Graph.cached.paper = null;\r\n            }\r\n\r\n            vector = paper = null;\r\n        });\r\n\r\n        doc = null;\r\n    });\r\n\r\n    ///////////////////////// LISTEN DOCUMENT READY ////////////////////////\r\n    \r\n    (function(doc, evt){\r\n        var timer;\r\n\r\n        var handler = function() {\r\n            doc.removeEventListener(evt, handler, false);\r\n            doc.readyState = 'complete';\r\n        };\r\n\r\n        var loaded = function() {\r\n            _.forEach(readyFn, function(f){\r\n                f();\r\n            });\r\n        };\r\n\r\n        var inspect = function() {\r\n            if (doc.readyState != 'complete') {\r\n                timer = _.delay(function(){\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n\r\n                    inspect();\r\n                }, 10);\r\n            } else {\r\n                loaded();\r\n            }\r\n        };\r\n\r\n        if (doc.readyState == null && doc.addEventListener) {\r\n            doc.addEventListener(evt, handler, false);\r\n            doc.readyState = 'loading';\r\n        }\r\n\r\n        inspect();\r\n        \r\n    }(DOCUMENT, 'DOMContentLoaded'));\r\n\r\n    ///////////////////////////////////////////////////////////////////////\r\n    \r\n}());","\r\n(function(){\r\n\r\n    var REGEX_PATH_STR = /([achlmrqstvz])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig;\r\n    var REGEX_PATH_VAL = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/ig;\r\n    var REGEX_PATH_CMD = /,?([achlmqrstvxz]),?/gi;\r\n    var REGEX_POLY_STR = /(\\-?[0-9.]+)\\s*,\\s*(\\-?[0-9.]+)/g;\r\n    var REGEX_TRAN_STR = /((matrix|translate|rotate|scale|skewX|skewY)*\\((\\-?\\d+\\.?\\d*e?\\-?\\d*[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+\\))+/g;\r\n    var REGEX_TRAN_SUB = /[\\w\\.\\-]+/g;\r\n    var REGEX_POLY_STR = /(\\-?[0-9.]+)\\s*,\\s*(\\-?[0-9.]+)/g;\r\n    \r\n    var CONVEX_RADIUS  = 10;\r\n    var SMOOTH_RADIUS  = 6;\r\n\r\n    /**\r\n     * Legendre Gauss (Quadratic Curve)\r\n     * https://pomax.github.io/bezierinfo/legendre-gauss.html\r\n     */\r\n    \r\n    var LEGENDRE_N = 12;\r\n    var LEGENDRE_T = [-0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873, -0.7699, 0.7699, -0.9041, 0.9041, -0.9816, 0.9816];\r\n    var LEGENDRE_C = [ 0.2491, 0.2491,  0.2335, 0.2335,  0.2032, 0.2032,  0.1601, 0.1601,  0.1069, 0.1069,  0.0472, 0.0472];\r\n    \r\n    Graph.util = {\r\n        \r\n        // --------MATH-------- //\r\n        \r\n        deg: function(rad) {\r\n            return Math.round ((rad * 180 / Math.PI % 360) * 1000) / 1000;\r\n        },  \r\n        \r\n        rad: function(deg) {\r\n            return deg % 360 * Math.PI / 180;\r\n        },\r\n        \r\n        angle: function(a, b) {\r\n            var dx = a.x - b.x,\r\n                dy = a.y - b.y;\r\n\r\n            if ( ! dx && ! dy) {\r\n                return 0;\r\n            }\r\n\r\n            return (180 + Math.atan2(-dy, -dx) * 180 / Math.PI + 360) % 360;\r\n        },\r\n\r\n        theta: function(a, b) {\r\n            var dy = -(b.y - a.y),\r\n                dx =   b.x - a.x;\r\n\r\n            var rad, deg;\r\n\r\n            if (dy.toFixed(10) == 0 && dx.toFixed(10) == 0) {\r\n                rad = 0;\r\n            } else {\r\n                rad = Math.atan2(dy, dx);\r\n            }\r\n\r\n            if (rad < 0) {\r\n                rad = 2 * Math.PI + rad;\r\n            }\r\n\r\n            deg = 180 * rad / Math.PI;\r\n            deg = (deg % 360) + (deg < 0 ? 360 : 0);\r\n\r\n            return deg;\r\n        },\r\n\r\n        taxicab: function(a, b) {\r\n            var dx = a.x - b.x,\r\n                dy = a.y - b.y;\r\n            return dx * dx + dy * dy;\r\n        },\r\n\r\n        /**\r\n         * Get vector hypotenuse (magnitude)\r\n         */\r\n        hypo: function(va, vb) {\r\n            return Math.sqrt(va * va + vb * vb);\r\n        },\r\n        \r\n        /**\r\n         * Get sign of number\r\n         */\r\n        sign: function(num) {\r\n            return num < 0 ? -1 : 1;\r\n        },\r\n            \r\n        quadrant: function(x, y) {\r\n            return x >= 0 && y >= 0 ? 1 : (x >= 0 && y < 0 ? 4 : (x < 0 && y < 0 ? 3 : 2));\r\n        },\r\n        \r\n        // slope\r\n        gradient: function(a, b) {\r\n            // parallel\r\n            if (b.x == a.x) {\r\n                return b.y > a.y ? Infinity : -Infinity\r\n            } else if (b.y == a.y) {\r\n                return b.x > a.x ? 0 : -0;\r\n            } else {\r\n                return (b.y - a.y) / (b.x - a.x);\r\n            }\r\n        },\r\n        \r\n        snapValue: function (value, snaps, range) {\r\n            range = _.defaultTo(range, 10);\r\n            \r\n            if (_.isArray(snaps)) {\r\n                var i = snaps.length;\r\n                while(i--) {\r\n                    if (Math.abs(snaps[i] - value) <= range) {\r\n                        return snaps[i];\r\n                    }\r\n                }\r\n            } else {\r\n                snaps = +snaps;\r\n                \r\n                var rem = value % snaps;\r\n                \r\n                if (rem < range) {\r\n                    return value - rem;\r\n                }\r\n                \r\n                if (rem > value - range) {\r\n                    return value - rem + snaps;\r\n                }\r\n            }\r\n            return value;\r\n        },\r\n        \r\n        // --------POINT-------- //\r\n        \r\n        pointbox: function(x, y, padding) {\r\n            if (_.isPlainObject(x)) {\r\n                padding = y;\r\n                y = x.y;\r\n                x = x.x;\r\n            }\r\n            \r\n            padding = padding || 0;\r\n            \r\n            var x1 = x - padding,\r\n                y1 = y - padding,\r\n                x2 = x + padding,\r\n                y2 = y + padding,\r\n                width = x2 - x1,\r\n                height = y2 - y1;\r\n            \r\n            return {\r\n                x: x1,\r\n                y: y1,\r\n                x2: x2,\r\n                y2: y2,\r\n                width: width,\r\n                height: height\r\n            };\r\n        },\r\n\r\n        pointAlign: function(a, b, treshold) {\r\n            if ( ! a || ! b) {\r\n                return false;\r\n            }\r\n            \r\n            treshold = treshold || 2;\r\n            \r\n            if (Math.abs(a.x - b.x) <= treshold) {\r\n                return 'h';\r\n            };\r\n\r\n            if (Math.abs(a.y - b.y) <= treshold) {\r\n                return 'v';\r\n            }\r\n\r\n            return false;\r\n        },\r\n        \r\n        pointDistance: function (a, b) {\r\n            if ( ! a || ! b) {\r\n                return -1;\r\n            }\r\n            return Graph.util.hypo((a.x - b.x), (a.y - b.y));\r\n        },\r\n        \r\n        isPointEquals: function (a, b) {\r\n            return a.x == b.x && a.y == b.y;\r\n        },\r\n        \r\n        // http://stackoverflow.com/a/907491/412190\r\n        isPointOnLine: function(a, b, p) {\r\n            if ( ! a || ! b || ! p) {\r\n                return false;\r\n            }\r\n            \r\n            var det = (b.x - a.x) * (p.y - a.y) - (b.y - a.y) * (p.x - a.x),\r\n                dis = Graph.util.pointDistance(a, b);\r\n            \r\n            return Math.abs(det / dis) < 2;\r\n        },\r\n        \r\n        polar2point: function(distance, radian, origin) {\r\n            var x, y, d;\r\n\r\n            if (_.isUndefined(origin)) {\r\n                origin = Graph.point(0, 0);\r\n            }\r\n\r\n            x = Math.abs(distance * Math.cos(radian));\r\n            y = Math.abs(distance * Math.sin(radian));\r\n            d = Graph.util.deg(radian);\r\n\r\n            if (d < 90) {\r\n                y = -y;\r\n            } else if (d < 180) {\r\n                x = -x;\r\n                y = -y;\r\n            } else if (d < 270) {\r\n                x = -x;\r\n            }\r\n\r\n            return Graph.point(origin.props.x + x, origin.props.y + y);\r\n        },\r\n        \r\n        // --------BOUNDING-------- //\r\n\r\n        isBoxContainsPoint: function(box, p) {\r\n            return p.x >= box.x && p.x <= box.x2 && p.y >= box.y && p.y <= box.y2;\r\n        },\r\n\r\n        isBoxIntersect: function(a, b) {\r\n            var fn = Graph.util.isBoxContainsPoint;\r\n\r\n            return fn(b, {x: a.x,  y: a.y})  ||\r\n                   fn(b, {x: a.x2, y: a.y})  || \r\n                   fn(b, {x: a.x,  y: a.y2}) || \r\n                   fn(b, {x: a.x2, y: a.y2}) || \r\n                   fn(a, {x: b.x,  y: b.y})  ||\r\n                   fn(a, {x: b.x2, y: b.y})  || \r\n                   fn(a, {x: b.x,  y: b.y2}) || \r\n                   fn(a, {x: b.x2, y: b.y2}) || \r\n                   (a.x < b.x2 && a.x > b.x  ||  b.x < a.x2 && b.x > a.x) && \r\n                   (a.y < b.y2 && a.y > b.y  ||  b.y < a.y2 && b.y > a.y);\r\n        },\r\n\r\n        boxOrientation: function(box1, box2, dx, dy) {\r\n            // treshold\r\n            dx = _.defaultTo(dx, 0);\r\n            dy = _.defaultTo(dy, dx);\r\n            \r\n            var top = box1.y2 + dy <= box2.y,\r\n                rgt = box1.x  - dx >= box2.x2,\r\n                btm = box1.y  - dy >= box2.y2,\r\n                lft = box1.x2 + dx <= box2.x;\r\n\r\n            var ver = top ? 'top' : (btm ? 'bottom' : null),\r\n                hor = lft ? 'left' : (rgt ? 'right' : null);\r\n\r\n            if (hor && ver) {\r\n                return ver + '-' + hor;\r\n            } else {\r\n                return hor || ver || 'intersect';\r\n            }\r\n        },\r\n        \r\n        // -------LINE------ //\r\n        \r\n        midpoint: function(a, b) {\r\n            return {\r\n                x: (a.x + b.x) / 2,\r\n                y: (a.y + b.y) / 2\r\n            };\r\n        },\r\n        \r\n        /** \r\n         * Move point `a` to `b` as far as distance \r\n         */\r\n        movepoint: function(a, b, distance) {\r\n            var tr =  Graph.util.rad(Graph.util.theta(b, a)),\r\n                dx =  Math.cos(tr) * distance,\r\n                dy = -Math.sin(tr) * distance;\r\n            \r\n            a.x += dx;\r\n            a.y += dy;\r\n            \r\n            return a;\r\n        },\r\n        \r\n        lineBendpoints: function(a, b, dir) {\r\n            var points = [],\r\n                x1 = a.x,\r\n                y1 = a.y,\r\n                x2 = b.x,\r\n                y2 = b.y;\r\n               \r\n            var xm, ym;\r\n            \r\n            dir = dir || 'h:h';\r\n            \r\n            if (dir == 'h:v') {\r\n                points = [\r\n                    { x: x2, y: y1 }\r\n                ];\r\n            } else if (dir == 'v:h') {\r\n                points = [\r\n                    { x: x1, y: y2 }\r\n                ];\r\n            } else if (dir == 'h:h') {\r\n                xm = Math.round((x2 - x1) / 2 + x1);\r\n                points = [\r\n                    { x: xm, y: y1 },\r\n                    { x: xm, y: y2 }\r\n                ];\r\n            } else if (dir == 'v:v') {\r\n                ym = Math.round((y2 - y1) / 2 + y1);\r\n                points = [\r\n                    { x: x1, y: ym },\r\n                    { x: x2, y: ym }\r\n                ];\r\n            } else {\r\n                points = [];\r\n            }\r\n            \r\n            return points;\r\n        },\r\n        \r\n        lineIntersection: function (x1, y1, x2, y2, x3, y3, x4, y4) {\r\n            if (\r\n                Math.max(x1, x2) < Math.min(x3, x4) ||\r\n                Math.min(x1, x2) > Math.max(x3, x4) ||\r\n                Math.max(y1, y2) < Math.min(y3, y4) ||\r\n                Math.min(y1, y2) > Math.max(y3, y4)\r\n            ) {\r\n                return null;\r\n            }\r\n\r\n            var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\r\n                ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\r\n                denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\r\n\r\n            if ( ! denominator) {\r\n                return null;\r\n            }\r\n\r\n            var px = nx / denominator,\r\n                py = ny / denominator,\r\n                px2 = +px.toFixed(2),\r\n                py2 = +py.toFixed(2);\r\n\r\n            if (\r\n                px2 < +Math.min(x1, x2).toFixed(2) ||\r\n                px2 > +Math.max(x1, x2).toFixed(2) ||\r\n                px2 < +Math.min(x3, x4).toFixed(2) ||\r\n                px2 > +Math.max(x3, x4).toFixed(2) ||\r\n                py2 < +Math.min(y1, y2).toFixed(2) ||\r\n                py2 > +Math.max(y1, y2).toFixed(2) ||\r\n                py2 < +Math.min(y3, y4).toFixed(2) ||\r\n                py2 > +Math.max(y3, y4).toFixed(2)\r\n            ) {\r\n                return null;\r\n            }\r\n\r\n            return {\r\n                x: px, \r\n                y: py\r\n            };\r\n        },\r\n        \r\n        perpendicular: function(a, b, h) {\r\n            var m1, m2, tt, hp;\r\n\r\n            m1 = Graph.util.gradient(a, b);\r\n            m2 = m1 === 0 ? 0 : ( -1 / m1 );\r\n            tt = Math.atan(m2);\r\n            // si = Math.sin(tt),\r\n            // co = Math.cos(tt);\r\n\r\n            var hp = h * Math.cos(tt);\r\n            // var hy = h * si;\r\n\r\n            // find `middle point`\r\n            var mx = (a.x + b.x) / 2,\r\n                my = (a.y + b.y) / 2;\r\n\r\n            // find `y` intercept\r\n            var iy = my - (mx * m2)\r\n\r\n            var x3 = mx + hp,\r\n                y3 = m2 * x3 + iy;\r\n\r\n            return {\r\n                from: {\r\n                    x: mx,\r\n                    y: my\r\n                },\r\n                to: {\r\n                    x: x3,\r\n                    y: y3\r\n                }\r\n            };\r\n        },\r\n        \r\n        // -------SHAPE/PATH------ //\r\n        \r\n        points2path: function (points) {\r\n            var segments = _.map(points, function(p, i){\r\n                var cmd = i === 0 ? 'M' : 'L';\r\n                return [cmd, p.x, p.y];\r\n            });\r\n            return Graph.util.segments2path(segments);\r\n        },\r\n        \r\n        path2points: function(command) {\r\n            var segments = Graph.util.path2segments(command);\r\n            return _.map(segments, function(s, i){\r\n                if (s[0] == 'M' || s[0] == 'L') {\r\n                    return {x: s[1], y: s[2]};\r\n                } else {\r\n                    return {x: s[5], y: s[6]};\r\n                }\r\n            });\r\n        },\r\n\r\n        segments2path: function(segments) {\r\n            return _.join(segments || [], ',').replace(REGEX_PATH_CMD, '$1');\r\n        },\r\n\r\n        path2segments: function(command) {\r\n            if ( ! command) {\r\n                return [];\r\n            }\r\n\r\n            var cached = Graph.lookup('Graph.util', 'path2segments', command),\r\n                sizes = {a: 7, c: 6, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, z: 0},\r\n                segments = [];\r\n            \r\n            if (cached.segments) {\r\n                return _.cloneDeep(cached.segments);\r\n            }\r\n\r\n            command.replace(REGEX_PATH_STR, function(match, cmd, val){\r\n                var \r\n                    params = [],\r\n                    name = cmd.toLowerCase();\r\n\r\n                val.replace(REGEX_PATH_VAL, function(match, v){\r\n                    if (v) {\r\n                        params.push(+v);\r\n                    }\r\n                });\r\n\r\n                if (name == 'm' && params.length > 2) {\r\n                    segments.push(_.concat([cmd], params.splice(0, 2)));\r\n                    name = 'l';\r\n                    cmd = cmd == 'm' ? 'l' : 'L';\r\n                }\r\n\r\n                if (name == 'r') {\r\n                    segments.push(_.concat([cmd], params));\r\n                } else while (params.length >= sizes[name]) {\r\n                    segments.push(_.concat([cmd], params.splice(0, sizes[name])));\r\n                    if ( ! sizes[name]) {\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n            \r\n            cached.segments = _.cloneDeep(segments);\r\n            return segments;\r\n        },\r\n\r\n        polygon2dots: function(command) {\r\n            var array = [];\r\n            command.replace(REGEX_POLY_STR, function($0, x, y){\r\n                array.push([_.float(x), _.float(y)]);\r\n            });\r\n            return array;\r\n        },\r\n\r\n        polygon2path: function(command) {\r\n            var dots = Graph.util.polygon2dots(command);\r\n\r\n            if ( ! dots.length) {\r\n                return 'M0,0';\r\n            }\r\n            \r\n            var command = 'M' + dots[0][0] + ',' + dots[0][1];\r\n\r\n            for (var i = 1, ii = dots.length; i < ii; i++) {\r\n                command += 'L' + dots[i][0] + ',' + dots[i][1] + ',';\r\n            }\r\n            \r\n            command  = command.substring(0, command.length - 1);\r\n            command += 'Z';\r\n\r\n            return command;\r\n        },\r\n\r\n        transform2segments: Graph.memoize(function(command) {\r\n            var valid = {\r\n                matrix: true,\r\n                translate: true,\r\n                rotate: true,\r\n                scale: true,\r\n                skewX: true,\r\n                skewY: true\r\n            };\r\n\r\n            command += '';\r\n\r\n            var transform = [], matches = command.match(REGEX_TRAN_STR);\r\n\r\n            if (matches) {\r\n                _.forEach(matches, function(sub){\r\n                    var args = sub.match(REGEX_TRAN_SUB),\r\n                        name = args.shift();\r\n                    if (valid[name]) {\r\n                        args = _.map(args, function(v){ return +v; })\r\n                        transform.push([name].concat(args));    \r\n                    }\r\n                });  \r\n            }\r\n\r\n            return transform;\r\n        }),\r\n        \r\n        // --------CURVE-------- //\r\n        \r\n        curvebox: Graph.memoize(function(x0, y0, x1, y1, x2, y2, x3, y3) {\r\n            var token = _.join(arguments, '_'),\r\n                cached = Graph.lookup('Graph.util', 'curvebox', token);\r\n\r\n            token = null;\r\n\r\n            if (cached.curvebox) {\r\n                return cached.curvebox;\r\n            }\r\n\r\n            var tvalues = [],\r\n                bounds  = [[], []];\r\n\r\n            var a, b, c, t, t1, t2, b2ac, sqrtb2ac;\r\n\r\n            for (var i = 0; i < 2; ++i) {\r\n                if (i == 0) {\r\n                    b =  6 * x0 - 12 * x1 + 6 * x2;\r\n                    a = -3 * x0 +  9 * x1 - 9 * x2 + 3 * x3;\r\n                    c =  3 * x1 -  3 * x0;\r\n                } else {\r\n                    b =  6 * y0 - 12 * y1 + 6 * y2;\r\n                    a = -3 * y0 +  9 * y1 - 9 * y2 + 3 * y3;\r\n                    c =  3 * y1 -  3 * y0;\r\n                }\r\n\r\n                if (Math.abs(a) < 1e-12) {\r\n                    if (Math.abs(b) < 1e-12) {\r\n                        continue;\r\n                    }\r\n                    t = -c / b;\r\n                    if (0 < t && t < 1) {\r\n                        tvalues.push(t);\r\n                    }\r\n                    continue;\r\n                }\r\n\r\n                b2ac = b * b - 4 * c * a;\r\n                sqrtb2ac = Math.sqrt(b2ac);\r\n                \r\n                if (b2ac < 0) {\r\n                    continue;\r\n                }\r\n                \r\n                t1 = (-b + sqrtb2ac) / (2 * a);\r\n                \r\n                if (0 < t1 && t1 < 1) {\r\n                    tvalues.push(t1);\r\n                }\r\n\r\n                t2 = (-b - sqrtb2ac) / (2 * a);\r\n                \r\n                if (0 < t2 && t2 < 1) {\r\n                    tvalues.push(t2);\r\n                }\r\n            }\r\n\r\n            var x, y, j = tvalues.length,\r\n                jlen = j,\r\n                mt;\r\n\r\n            while (j--) {\r\n                t = tvalues[j];\r\n                mt = 1 - t;\r\n                bounds[0][j] = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\r\n                bounds[1][j] = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\r\n            }\r\n\r\n            bounds[0][jlen] = x0;\r\n            bounds[1][jlen] = y0;\r\n            bounds[0][jlen + 1] = x3;\r\n            bounds[1][jlen + 1] = y3;\r\n            bounds[0].length = bounds[1].length = jlen + 2;\r\n\r\n            cached.curvebox = {\r\n                min: {x: Math.min.apply(0, bounds[0]), y: Math.min.apply(0, bounds[1])},\r\n                max: {x: Math.max.apply(0, bounds[0]), y: Math.max.apply(0, bounds[1])}\r\n            };\r\n\r\n            return cached.curvebox;\r\n        }),\r\n        \r\n        curveLength: function(x1, y1, x2, y2, x3, y3, x4, y4, t) {\r\n            t = _.defaultTo(t, 1);\r\n            t = t > 1 ? 1 : t < 0 ? 0 : t;\r\n\r\n            var h = t / 2,\r\n                sum = 0;\r\n\r\n            for (var i = 0; i < LEGENDRE_N; i++) {\r\n                var ct = h * LEGENDRE_T[i] + h,\r\n\r\n                    xb = Graph.util.curvePolynom(ct, x1, x2, x3, x4),\r\n                    yb = Graph.util.curvePolynom(ct, y1, y2, y3, y4),\r\n                    co = xb * xb + yb * yb;\r\n\r\n                sum += LEGENDRE_C[i] * Math.sqrt(co);\r\n            }\r\n\r\n            return h * sum;\r\n        },\r\n\r\n        curvePolynom: function(t, n1, n2, n3, n4) {\r\n            var t1 = -3 * n1 + 9 * n2 -  9 * n3 + 3 * n4,\r\n                t2 =  t * t1 + 6 * n1 - 12 * n2 + 6 * n3;\r\n            return t * t2 - 3 * n1 + 3 * n2;\r\n        },\r\n        \r\n        curveInterval: function(x1, y1, x2, y2, x3, y3, x4, y4, length) {\r\n            if (length < 0 || Graph.util.curveLength(x1, y1, x2, y2, x3, y3, x4, y4) < length) {\r\n                return;\r\n            }\r\n\r\n            var t = 1,\r\n                step = t / 2,\r\n                t2 = t - step,\r\n                l,\r\n                e = .01;\r\n\r\n            l = Graph.util.curveLength(x1, y1, x2, y2, x3, y3, x4, y4, t2);\r\n\r\n            while (Math.abs(l - length) > e) {\r\n                step /= 2;\r\n                t2 += (l < length ? 1 : -1) * step;\r\n                l = Graph.util.curveLength(x1, y1, x2, y2, x3, y3, x4, y4, t2);\r\n            }\r\n\r\n            return t2;\r\n        },\r\n\r\n        pointAtInterval: function(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\r\n            var t1 = 1 - t,\r\n                t13 = Math.pow(t1, 3),\r\n                t12 = Math.pow(t1, 2),\r\n                t2 = t * t,\r\n                t3 = t2 * t,\r\n                x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\r\n                y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\r\n                mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\r\n                my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\r\n                nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\r\n                ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\r\n                ax = t1 * p1x + t * c1x,\r\n                ay = t1 * p1y + t * c1y,\r\n                cx = t1 * c2x + t * p2x,\r\n                cy = t1 * c2y + t * p2y,\r\n                alpha = (90 - Math.atan2(mx - nx, my - ny) * 180 / Math.PI);\r\n            \r\n            alpha = (90 - Math.atan2(nx - mx, ny - my) * 180 / Math.PI);\r\n\r\n            // (mx > nx || my < ny) && (alpha += 180);\r\n\r\n            // if (isNaN(x) || isNaN(y)) {\r\n            //     return null;\r\n            // }\r\n\r\n            return {\r\n                x: x,\r\n                y: y,\r\n                m: {x: mx, y: my},\r\n                n: {x: nx, y: ny},\r\n                start: {x: ax, y: ay},\r\n                end:   {x: cx, y: cy},\r\n                alpha: alpha\r\n            };\r\n        },\r\n\r\n        curveIntersection: function(a, b, count) {\r\n            var bon1 = Graph.util.curvebox.apply(null, a),\r\n                bon2 = Graph.util.curvebox.apply(null, b),\r\n                nres = 0,\r\n                ares = [];\r\n\r\n            var box1 = {x: bon1.min.x, y: bon1.min.y, x2: bon1.max.x, y2: bon1.max.y},\r\n                box2 = {x: bon2.min.x, y: bon2.min.y, x2: bon2.max.x, y2: bon2.max.y};\r\n\r\n            if ( ! Graph.util.isBoxIntersect(box1, box2)) {\r\n                return count ? 0 : [];\r\n            }\r\n\r\n            var l1 = Graph.util.curveLength.apply(null, a),\r\n                l2 = Graph.util.curveLength.apply(null, b);\r\n            \r\n            var // n1 = ~~(l1 / 8),\r\n                // n2 = ~~(l2 / 8),\r\n                n1 = ~~(l1 / 10),\r\n                n2 = ~~(l2 / 10),\r\n                dots1 = [],\r\n                dots2 = [],\r\n                xy = {};\r\n\r\n            var i, j, t, p;\r\n\r\n            for (i = 0; i < n1 + 1; i++) {\r\n                t = i / n1;\r\n                p = Graph.util.pointAtInterval.apply(null, a.concat([t]));\r\n                dots1.push({x: p.x, y: p.y, t: t});\r\n            }\r\n\r\n            for (i = 0; i < n2 + 1; i++) {\r\n                t = i / n2;\r\n                p = Graph.util.pointAtInterval.apply(null, b.concat([t]));\r\n                dots2.push({x: p.x, y: p.y, t: t});\r\n            }\r\n\r\n            for (i = 0; i < n1; i++) {\r\n                for (j = 0; j < n2; j++) {\r\n\r\n                    var di  = dots1[i],\r\n                        di1 = dots1[i + 1],\r\n                        dj  = dots2[j],\r\n                        dj1 = dots2[j + 1],\r\n                        ci  = Math.abs(di1.x - di.x) < .001 ? 'y' : 'x',\r\n                        cj  = Math.abs(dj1.x - dj.x) < .001 ? 'y' : 'x',\r\n                        is  = Graph.util.lineIntersection(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\r\n                    \r\n                    if (is) {\r\n                        \r\n                        if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\r\n                            continue;\r\n                        }\r\n\r\n                        xy[is.x.toFixed(4)] = is.y.toFixed(4);\r\n                        \r\n                        var t1 = di.t + Math.abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\r\n                            t2 = dj.t + Math.abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\r\n                        \r\n                        if (t1 >= 0 && t1 <= 1.001 && t2 >= 0 && t2 <= 1.001) {\r\n                            nres++;\r\n                            // ares.push(is);\r\n                            ares.push({\r\n                                x: is.x,\r\n                                y: is.y,\r\n                                t1: t1,\r\n                                t2: t2\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            return count ? nres : ares;\r\n        },\r\n        \r\n        convexSegment: function(point, prev, next, radius) {\r\n            if ( ! prev || ! next || ! point) {\r\n                return null;\r\n            }\r\n            \r\n            var d1 = Graph.util.pointDistance(point, prev),\r\n                d2 = Graph.util.pointDistance(point, next);\r\n                \r\n            radius = radius || CONVEX_RADIUS;\r\n            \r\n            if (d1 > radius && d2 > radius) {\r\n                \r\n                var c1 = Graph.util.movepoint({x: point.x, y: point.y}, prev, -radius / 2),\r\n                    c2 = Graph.util.movepoint({x: point.x, y: point.y}, next, -radius / 2),\r\n                    dr = Graph.util.pointAlign(prev, next, radius / 2);\r\n                \r\n                var cp;\r\n                \r\n                if (dr == 'h') {\r\n                    cp = {\r\n                        x: point.x - radius, \r\n                        y: point.y\r\n                    };\r\n                } else {\r\n                    c1.y = prev.y;\r\n                    c2.y = next.y;\r\n                    cp = {\r\n                        x: point.x, \r\n                        y: point.y - radius\r\n                    };\r\n                }\r\n                \r\n                return [\r\n                    ['L', c1.x, c1.y],\r\n                    ['Q', cp.x, cp.y, c2.x, c2.y]\r\n                ];\r\n            }\r\n            \r\n            return null;\r\n        },\r\n        \r\n        smoothSegment: function(point, prev, next, radius) {\r\n            if ( ! prev || ! next || ! point) {\r\n                return null;\r\n            }\r\n            \r\n            var d1 = Graph.util.pointDistance(point, prev),\r\n                d2 = Graph.util.pointDistance(point, next);\r\n                \r\n            radius = radius || SMOOTH_RADIUS;\r\n            \r\n            if (d1 > radius && d2 > radius) {\r\n                var c1 = Graph.util.movepoint({x: point.x, y: point.y}, prev, -radius),\r\n                    c2 = Graph.util.movepoint({x: point.x, y: point.y}, next, -radius);\r\n                    \r\n                return [\r\n                    ['L', c1.x, c1.y],\r\n                    ['Q', point.x, point.y, c2.x, c2.y]\r\n                ]\r\n            }\r\n            \r\n            return null;\r\n        }\r\n        \r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Class = Graph.lang.Class = function() {};\r\n\r\n    Class.options = {};\r\n\r\n    Class.prototype.constructor = Class;\r\n    Class.prototype.toString = function() { return 'Graph.lang.Class'; };\r\n\r\n    Class.extend = function(config) {\r\n        var _super, _proto, _constructor, _definition, _class, _classopt;\r\n\r\n        _super = this.prototype;\r\n        _proto = Object.create(_super);\r\n\r\n        _classopt = {};\r\n\r\n        _.forOwn(config, function(v, k){\r\n\r\n            if (_.isFunction(v)) {\r\n                _proto[k] = v;\r\n                if (k == 'constructor') {\r\n                    _constructor = v;\r\n                }\r\n            } else {\r\n                _classopt[k] = v;\r\n            }\r\n        });\r\n\r\n        if ( ! _constructor) {\r\n            _constructor = _super.constructor;\r\n        }\r\n\r\n        _class = function() {\r\n\r\n            if ( ! this.__initialized__) {\r\n                this.__initialized__ = true;\r\n\r\n                this.listeners = {};\r\n\r\n                var _superclass = this.superclass;\r\n                var _superopt, key, val;\r\n\r\n                for (key in _classopt) {\r\n                    this[key] = _.cloneDeep(_classopt[key]);\r\n                }\r\n\r\n                while(_superclass) {\r\n                    _superopt = _superclass.options;\r\n\r\n                    if (_superopt) {\r\n                        for (key in _superopt) {\r\n                            if (this[key] !== undefined) {\r\n                                this[key] = _.merge(_.cloneDeep(_superopt[key]), this[key]);\r\n                            } else {\r\n                                this[key] = _.cloneDeep(_superopt[key]);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    _superclass = _superclass.prototype.superclass;\r\n                }\r\n            }\r\n\r\n            if (_constructor) {\r\n                _constructor.apply(this, arguments);\r\n            }\r\n        }\r\n\r\n        _definition = _constructor.toString().match(/(function)?([^\\{=]+)/);\r\n        _definition = 'function' + _definition[2];\r\n\r\n        _class.toString = function() {\r\n            return _definition;\r\n        };\r\n\r\n        _class.extend = _super.constructor.extend;\r\n        _class.options = _classopt;\r\n\r\n        _class.prototype = _proto;\r\n        _class.prototype.constructor = _class;\r\n        _class.prototype.superclass = _super.constructor;\r\n\r\n        _class.prototype.on = function(eventType, handler, once, priority) {\r\n            if (_.isPlainObject(eventType)) {\r\n                var key, val;\r\n                for (key in eventType) {\r\n                    val = eventType[key];\r\n                    if (_.isFunction(val)) {\r\n                        bind(this, key, val);\r\n                    } else {\r\n                        bind(this, key, val['handler'], val['once'], val['priority']);\r\n                    }\r\n                }\r\n            } else {\r\n                bind(this, eventType, handler, once, priority);\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        _class.prototype.one = function(eventType, handler) {\r\n            if (_.isPlainObject(eventType)) {\r\n                var key, val;\r\n                for (key in eventType) {\r\n                    val = eventType[key];\r\n                    if (_.isFunction(val)) {\r\n                        bind(this, key, val, true);\r\n                    } else {\r\n                        bind(this, key, val['handler'], true, val['priority']);\r\n                    }\r\n                }\r\n            } else {\r\n                bind(this, eventType, handler, true);\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        _class.prototype.off = function(eventType, handler) {\r\n            var batch = eventType.split(/\\s/);\r\n\r\n            if (batch.length > 1) {\r\n                for (var i = 0, ii = batch.length; i < ii; i++) {\r\n                    unbind(this, batch[i]);\r\n                }\r\n            } else {\r\n                unbind(this, eventType, handler);\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        _class.prototype.fire = function(eventType, data) {\r\n            var args = [], onces = [];\r\n            var eventObject, eventNames, eventRoot, listeners,\r\n                eventRegex, cachedRegex, ii, i;\r\n\r\n            data = data || {};\r\n\r\n            if (_.isString(eventType)) {\r\n                eventObject = new Graph.lang.Event(eventType, data);\r\n            } else {\r\n                eventObject = eventType;\r\n                eventObject.originalData = data;\r\n                eventType = eventObject.originalType || eventObject.type;\r\n            }\r\n\r\n            eventObject.publisher = this;\r\n            args.push(eventObject);\r\n\r\n            eventNames = eventType.split(/\\./);\r\n            eventRoot = eventNames.shift();\r\n            listeners = (this.listeners[eventRoot] || []).slice();\r\n\r\n            var cachedRegex = Graph.lookup('Regex.event', eventType);\r\n\r\n            if (cachedRegex.rgex) {\r\n                eventRegex = cachedRegex.rgex;\r\n            } else {\r\n                eventRegex = new RegExp(_.escapeRegExp(eventType), 'i');\r\n                cachedRegex.rgex = eventRegex;\r\n            }\r\n\r\n            if (listeners.length) {\r\n                for (i = 0, ii = listeners.length; i < ii; i++) {\r\n                    if (eventRoot == listeners[i].eventType) {\r\n                        if (listeners[i].once) {\r\n                            onces.push(listeners[i]);\r\n                        }\r\n                        listeners[i].handler.apply(listeners[i].handler, args);\r\n                    } else if (eventRegex.test(listeners[i].eventType)) {\r\n                        if (listeners[i].once) {\r\n                            onces.push(listeners[i]);\r\n                        }\r\n                        listeners[i].handler.apply(listeners[i].handler, args);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (onces.length) {\r\n                for (i = 0, ii = onces.length; i < ii; i++) {\r\n                    this.off(onces[i].eventType, onces[i].original);\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n        return _class;\r\n    };\r\n\r\n    /////////\r\n\r\n    function bind(context, eventType, handler, once, priority) {\r\n        var eventNames = eventType.split(/\\./),\r\n            eventRoot = eventNames.shift();\r\n\r\n        once = _.defaultTo(once, false);\r\n        priority = _.defaultTo(priority, 1500);\r\n\r\n        context.listeners[eventRoot] = context.listeners[eventRoot] || [];\r\n\r\n        context.listeners[eventRoot].push({\r\n            eventType: eventType,\r\n            priority: priority,\r\n            original: handler,\r\n            handler: _.bind(handler, context),\r\n            once: once\r\n        });\r\n    }\r\n\r\n    function unbind(context, eventType, handler) {\r\n        var eventNames = eventType.split(/\\./),\r\n            eventRoot = eventNames.shift(),\r\n            listeners = context.listeners[eventRoot] || [];\r\n\r\n        var eventRegex, cachedRegex;\r\n\r\n        cachedRegex = Graph.lookup('Regex.event', eventType);\r\n\r\n        if (cachedRegex.rgex) {\r\n            eventRegex = cachedRegex.rgex;\r\n        } else {\r\n            eventRegex = new RegExp(_.escapeRegExp(eventType), 'i');\r\n            cachedRegex.rgex = eventRegex;\r\n        }\r\n\r\n        for (i = listeners.length - 1; i >= 0; i--) {\r\n            if (eventRegex.test(listeners[i].eventType)) {\r\n                if (handler) {\r\n                    if (handler === listeners[i].original) {\r\n                        listeners.splice(i, 1);\r\n                    }\r\n                } else {\r\n                    listeners.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n\r\n        if ( ! listeners.length) {\r\n            delete context.listeners[eventRoot];\r\n        }\r\n    }\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var Err = Graph.lang.Error = function(message) {\r\n        this.message = message;\r\n\r\n        var err = new Error();\r\n        this.stack = err.stack;\r\n\r\n        err = null;\r\n    };\r\n\r\n    Err.options = {\r\n        message: ''\r\n    };\r\n    Err.extend = Graph.lang.Class.extend;\r\n\r\n    Err.prototype = Object.create(Error.prototype);\r\n    Err.prototype.constructor = Err;\r\n    Err.prototype.name = \"Graph.lang.Error\";\r\n    Err.prototype.message = \"\";\r\n\r\n    ///////// SHORTCUT /////////\r\n\r\n    Graph.error = function(message) {\r\n        return new Graph.lang.Error(message);\r\n    };\r\n\r\n    Graph.isError = function(obj) {\r\n        return obj instanceof Graph.lang.Error;\r\n    };\r\n\r\n}());\r\n","\r\n(function(_, $){\r\n\r\n    var Evt = Graph.lang.Event = function(type, data){\r\n        this.type = type;\r\n        this.originalData = null;\r\n        this.cancelBubble = false;\r\n        this.defaultPrevented = false;\r\n        this.propagationStopped = false;\r\n        this.immediatePropagationStopped = false;\r\n\r\n        this.init(data);\r\n    };\r\n\r\n    Evt.options = {\r\n        type: null,\r\n        originalData: null,\r\n        cancelBubble: false,\r\n        defaultPrevented: false,\r\n        propagationStopped: false,\r\n        immediatePropagationStopped: false\r\n    };\r\n\r\n    Evt.extend = Graph.lang.Class.extend;\r\n\r\n    Evt.prototype.constructor = Evt;\r\n\r\n    Evt.prototype.init = function(data) {\r\n        if (data) {\r\n            this.originalData = data;\r\n            _.assign(this, data || {});\r\n        }\r\n    };\r\n\r\n    Evt.prototype.stopPropagation = function() {\r\n        this.cancelBubble = this.propagationStopped = true;\r\n    };\r\n\r\n    Evt.prototype.stopImmediatePropagation = function() {\r\n        this.immediatePropagationStopped = this.propagationStopped = true;\r\n    };\r\n\r\n    Evt.prototype.preventDefault = function() {\r\n        this.defaultPrevented = true;\r\n    };\r\n\r\n    Evt.prototype.toString = function() {\r\n        return 'Graph.lang.Event';\r\n    };\r\n\r\n    ///////// SHORTCUT /////////\r\n\r\n    Graph.event = function(type, data) {\r\n        return new Graph.lang.Event(type, data);\r\n    };\r\n\r\n    Graph.isEvent = function(obj) {\r\n        return obj instanceof Graph.lang.Event;\r\n    };\r\n\r\n    ///////// STATIC /////////\r\n\r\n    Graph.event.ESC = 27;\r\n    Graph.event.ENTER = 13;\r\n    Graph.event.DELETE = 46;\r\n    Graph.event.SHIFT = 16;\r\n\r\n    Graph.event.fix = function(event) {\r\n        return $.event.fix(event);\r\n    };\r\n\r\n    Graph.event.original = function(event) {\r\n        return event.originalEvent || event;\r\n    };\r\n\r\n    Graph.event.position = function(event) {\r\n        return {\r\n            x: event.clientX,\r\n            y: event.clientY\r\n        };\r\n    };\r\n\r\n    Graph.event.relative = function(event, vector) {\r\n        var position = Graph.event.position(event),\r\n            matrix = vector.matrix().clone().invert(),\r\n            relative = {\r\n                x: matrix.x(position.x, position.y),\r\n                y: matrix.y(position.x, position.y)\r\n            };\r\n\r\n        matrix = null;\r\n\r\n        return relative;\r\n    };\r\n\r\n    Graph.event.isPrimaryButton = function(event) {\r\n        var original = Graph.event.original(event);\r\n        return ! original.button;\r\n    };\r\n\r\n    Graph.event.hasPrimaryModifier = function(event) {\r\n        if ( ! Graph.event.isPrimaryButton(event)) {\r\n            return false;\r\n        }\r\n        var original = Graph.event.original(event);\r\n        return Graph.isMac() ? original.metaKey : original.ctrlKey;\r\n    };\r\n\r\n    Graph.event.hasSecondaryModifier = function(event) {\r\n        var original = Graph.event.original(event);\r\n        return Graph.event.isPrimaryButton(event) && original.shiftKey;\r\n    };\r\n\r\n}(_, jQuery));\r\n","\r\n(function(){\r\n\r\n    var Collection = Graph.collection.Point = function(points) {\r\n        this.items = points || [];\r\n    };\r\n\r\n    Collection.prototype.constructor = Collection;\r\n    Collection.prototype.items = [];\r\n\r\n    Collection.prototype.get = function(index) {\r\n        return this.items[index];\r\n    };\r\n\r\n    Collection.prototype.push = function(item) {\r\n        this.items.push(item);\r\n        return item;\r\n    };\r\n\r\n    Collection.prototype.pop = function() {\r\n        var item = this.items.pop();\r\n        return item;\r\n    };\r\n\r\n    Collection.prototype.shift = function() {\r\n        var item = this.items.shift();\r\n        return item;\r\n    };\r\n\r\n    Collection.prototype.first = function() {\r\n        return _.head(this.items);\r\n    };\r\n\r\n    Collection.prototype.last = function() {\r\n        return _.last(this.items);\r\n    };\r\n\r\n    Collection.prototype.clear = function() {\r\n        this.items = [];\r\n        return this;\r\n    },\r\n\r\n    Collection.prototype.modify = function(index, x, y) {\r\n        var item = this.items[index];\r\n        item.props.x = x;\r\n        item.props.y = y;\r\n        return item;\r\n    };\r\n\r\n    Collection.prototype.each = function(iteratee) {\r\n        _.forEach(this.items, iteratee);\r\n    };\r\n\r\n    Collection.prototype.toArray = function() {\r\n        return this.items;\r\n    };\r\n\r\n    Collection.prototype.toJson = function() {\r\n        return _.map(this.items, function(item){\r\n            return item.toJson();\r\n        });\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Line = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(x1, y1, x2, y2) {\r\n            var args = _.toArray(arguments);\r\n\r\n            if (args.length === 1) {\r\n                var start = args[0].start().toJson(),\r\n                    end = args[0].end().toJson();\r\n\r\n                x1 = start.x;\r\n                y1 = start.y;\r\n                x2 = end.x;\r\n                y2 = end.y;\r\n            } else if (args.length === 2) {\r\n                if (Graph.isPoint(args[0])) {\r\n                    x1 = args[0].props.x;\r\n                    y1 = args[0].props.y;\r\n                    x2 = args[1].props.x;\r\n                    y2 = args[1].props.y;\r\n                } else {\r\n                    x1 = args[0].x;\r\n                    y1 = args[0].y;\r\n                    x2 = args[1].x;\r\n                    y2 = args[1].y;\r\n                }\r\n                \r\n            }\r\n\r\n            // this.$super('line', {\r\n            //     x1: _.defaultTo(x1, 0),\r\n            //     y1: _.defaultTo(y1, 0),\r\n            //     x2: _.defaultTo(x2, 0),\r\n            //     y2: _.defaultTo(y2, 0)\r\n            // });\r\n            \r\n            this.superclass.prototype.constructor.call(this, 'line', {\r\n                x1: _.defaultTo(x1, 0),\r\n                y1: _.defaultTo(y1, 0),\r\n                x2: _.defaultTo(x2, 0),\r\n                y2: _.defaultTo(y2, 0)\r\n            });\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Line';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n}());","\r\n(function(){\r\n\r\n    var Curve = Graph.lang.Curve = function(command) {\r\n        this.segments = _.isString(command) ? Graph.util.path2segments(command) : _.cloneDeep(command);\r\n\r\n        if (this.segments[0][0] != 'M') {\r\n            this.segments.unshift(\r\n                ['M', this.segments[0][1], this.segments[0][2]]\r\n            );\r\n        }\r\n\r\n        if (this.segments.length === 1 && this.segments[0][0] === 'M') {\r\n            var x = this.segments[0][1],\r\n                y = this.segments[0][2];\r\n            this.segments.push(['C', x, y, x, y, x, y]);\r\n        }\r\n    };\r\n\r\n    Curve.options = {\r\n        segments: []\r\n    };\r\n\r\n    Curve.extend = Graph.lang.Class.extend;\r\n\r\n    Curve.prototype.constructor = Curve;\r\n\r\n    Curve.prototype.segments = [];\r\n\r\n    Curve.prototype.x = function() {\r\n        return this.segments[1][5];\r\n    };\r\n\r\n    Curve.prototype.y = function() {\r\n        return this.segments[1][6];\r\n    };\r\n\r\n    Curve.prototype.length = function(t) {\r\n        var params = this.segments[0].slice(1).concat(this.segments[1].slice(1)).concat([t]);\r\n        return Graph.util.curveLength.apply(null, params);\r\n    };\r\n\r\n    Curve.prototype.t = function(length) {\r\n        var params = this.segments[0].slice(1).concat(this.segments[1].slice(1)).concat([length]);\r\n        return Graph.util.curveInterval.apply(null, params);\r\n    };\r\n\r\n    Curve.prototype.pointAt = function(t, json) {\r\n        var params = this.segments[0].slice(1).concat(this.segments[1].slice(1)).concat([t]),\r\n            result = Graph.util.pointAtInterval.apply(null, params);\r\n\r\n        if (json) {\r\n            return result;\r\n        } else {\r\n            var point = Graph.point(result.x, result.y);\r\n            result.x = result.y = undefined;\r\n            return _.extend(point, result);\r\n        }\r\n    };\r\n\r\n    Curve.prototype.intersection = function(curve, json) {\r\n        var a = this.segments[0].slice(1).concat(this.segments[1].slice(1)),\r\n            b = curve.segments[0].slice(1).concat(curve.segments[1].slice(1)),\r\n            i = Graph.util.curveIntersection(a, b);\r\n\r\n        if (json) {\r\n            return i;\r\n        } else {\r\n            var points = _.map(i, function(p){ return Graph.point(p.x, p.y); });\r\n            return points;\r\n        }\r\n    };\r\n\r\n    Curve.prototype.intersectnum = function(curve) {\r\n        var a = this.segments[0].slice(1).concat(this.segments[1].slice(1)),\r\n            b = curve.segments[0].slice(1).concat(curve.segments[1].slice(1));\r\n\r\n        return Graph.util.curveIntersection(a, b, true);\r\n    };\r\n\r\n    Curve.prototype.bbox = function() {\r\n        var args = [this.segments[0][1], this.segments[0][2]].concat(this.segments[1].slice(1)),\r\n            bbox = Graph.util.curvebox.apply(null, args);\r\n        return Graph.bbox({\r\n            x: bbox.min.x,\r\n            y: bbox.min.y,\r\n            x2: bbox.max.x,\r\n            y2: bbox.max.y,\r\n            width: bbox.max.x - bbox.min.x,\r\n            height: bbox.max.y - bbox.min.y\r\n        });\r\n    };\r\n\r\n    Curve.prototype.clone = function() {\r\n        var segments = _.cloneDeep(this.segments);\r\n        return new Graph.lang.Curve(segments);\r\n    };\r\n\r\n    Curve.prototype.toValue = function() {\r\n        return Graph.util.segments2path(this.segments);\r\n    };\r\n\r\n    Curve.prototype.toString = function() {\r\n        return 'Graph.lang.Curve';\r\n    };\r\n\r\n    ///////// SHORTCUT /////////\r\n\r\n    Graph.curve = function(command) {\r\n        return new Graph.lang.Curve(command);\r\n    };\r\n\r\n    Graph.isCurve = function(obj) {\r\n        return obj instanceof Graph.lang.Curve;\r\n    };\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var BBox = Graph.lang.BBox = function(bounds) {\r\n        this.props = _.extend({\r\n            x: 0,\r\n            y: 0,\r\n            x2: 0,\r\n            y2: 0,\r\n            width: 0,\r\n            height: 0\r\n        }, bounds || {});\r\n    };\r\n\r\n    BBox.options = {\r\n        props: {\r\n            x: 0,\r\n            y: 0,\r\n            x2: 0,\r\n            y2: 0,\r\n            width: 0,\r\n            height: 0\r\n        }\r\n    };\r\n\r\n    BBox.extend = Graph.lang.Class.extend;\r\n\r\n    BBox.prototype = Object.create(Graph.lang.Class.prototype);\r\n    BBox.prototype.constructor = BBox;\r\n    BBox.prototype.superclass = Graph.lang.Class;\r\n\r\n    BBox.prototype.shape = function() {\r\n        var prop = this.props;\r\n\r\n        return new Graph.lang.Path([\r\n            ['M', prop.x, prop.y],\r\n            ['l', prop.width, 0],\r\n            ['l', 0, prop.height],\r\n            ['l', -prop.width, 0],\r\n            ['z']\r\n        ]);\r\n    };\r\n\r\n    BBox.prototype.origin = function(simple) {\r\n        simple = _.defaultTo(simple, false);\r\n\r\n        var x = this.props.x,\r\n            y = this.props.y;\r\n\r\n        return simple ? {x: x, y: y} : Graph.point(x, y);\r\n    };\r\n\r\n    BBox.prototype.center = function(simple) {\r\n        simple = _.defaultTo(simple, false);\r\n\r\n        var x = this.props.x + this.props.width  / 2,\r\n            y = this.props.y + this.props.height / 2;\r\n\r\n        return simple ? {x: x, y: y} : Graph.point(x, y);\r\n    };\r\n\r\n    BBox.prototype.corner = function(simple) {\r\n        simple = _.defaultTo(simple, false);\r\n\r\n        var x = this.props.x + this.props.width,\r\n            y = this.props.y + this.props.height;\r\n\r\n        return simple ? {x: x, y: y} : Graph.point(x, y);\r\n    };\r\n\r\n    BBox.prototype.width = function() {\r\n        return this.props.width;\r\n    };\r\n\r\n    BBox.prototype.height = function() {\r\n        return this.props.height;\r\n    };\r\n\r\n    BBox.prototype.clone = function() {\r\n        var props = _.extend({}, this.props);\r\n        return new BBox(props);\r\n    };\r\n\r\n    BBox.prototype.contains = function(obj) {\r\n        var contain = true,\r\n            bbox = this.props,\r\n            dots = [];\r\n\r\n        var vbox, papa, mat, dot;\r\n\r\n        if (Graph.isPoint(obj)) {\r\n            dots = [\r\n                [obj.props.x, obj.props.y]\r\n            ];\r\n        } else if (Graph.isVector(obj)) {\r\n            dots = obj.vertices(true);\r\n        } else if (Graph.isBBox(obj)) {\r\n            dots = [\r\n                [obj.props.x, obj.props.y],\r\n                [obj.props.x2, obj.props.y2]\r\n            ];\r\n        } else {\r\n            var args = _.toArray(arguments);\r\n            if (args.length === 2) {\r\n                dots = [args];\r\n            }\r\n        }\r\n\r\n        if (dots.length) {\r\n            var l = dots.length;\r\n            while(l--) {\r\n                dot = dots[l];\r\n                contain = dot[0] >= bbox.x  &&\r\n                          dot[0] <= bbox.x2 &&\r\n                          dot[1] >= bbox.y  &&\r\n                          dot[1] <= bbox.y2;\r\n                if ( ! contain) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return contain;\r\n    };\r\n\r\n    BBox.prototype.expand = function(dx, dy, dw, dh) {\r\n        var ax, ay;\r\n        if (_.isUndefined(dy)) {\r\n            ax = Math.abs(dx);\r\n\r\n            dx = -ax;\r\n            dy = -ax;\r\n            dw = 2 * ax;\r\n            dh = 2 * ax;\r\n        } else {\r\n            ax = Math.abs(dx);\r\n            ay = Math.abs(dy);\r\n\r\n            dx = -ax;\r\n            dy = -ay;\r\n            dw = 2 * ax;\r\n            dh = 2 * ay;\r\n        }\r\n\r\n        this.props.x += dx;\r\n        this.props.y += dy;\r\n        this.props.width  += dw;\r\n        this.props.height += dh;\r\n\r\n        return this;\r\n    };\r\n\r\n    BBox.prototype.translate = function(dx, dy) {\r\n        this.props.x  += dx;\r\n        this.props.y  += dy;\r\n        this.props.x2 += dx;\r\n        this.props.y2 += dy;\r\n\r\n        return this;\r\n    };\r\n\r\n    BBox.prototype.transform = function(matrix) {\r\n        var x = this.props.x,\r\n            y = this.props.y;\r\n\r\n        this.props.x = matrix.x(x, y);\r\n        this.props.y = matrix.y(x, y);\r\n\r\n        x = this.props.x2;\r\n        y = this.props.y2;\r\n\r\n        this.props.x2 = matrix.x(x, y);\r\n        this.props.y2 = matrix.y(x, y);\r\n\r\n        this.props.width  = this.props.x2 - this.props.x;\r\n        this.props.height = this.props.y2 - this.props.y;\r\n\r\n        return this;\r\n    };\r\n\r\n    BBox.prototype.intersect = function(tbox) {\r\n        var me = this,\r\n            bdat = me.props,\r\n            tdat = tbox.toJson();\r\n\r\n        return tbox.contains(bdat.x, bdat.y)\r\n            || tbox.contains(bdat.x2, bdat.y)\r\n            || tbox.contains(bdat.x, bdat.y2)\r\n            || tbox.contains(bdat.x2, bdat.y2)\r\n            || me.contains(tdat.x, tdat.y)\r\n            || me.contains(tdat.x2, tdat.y)\r\n            || me.contains(tdat.x, tdat.y2)\r\n            || me.contains(tdat.x2, tdat.y2)\r\n            || (bdat.x < tdat.x2 && bdat.x > tdat.x || tdat.x < bdat.x2 && tdat.x > bdat.x)\r\n            && (bdat.y < tdat.y2 && bdat.y > tdat.y || tdat.y < bdat.y2 && tdat.y > bdat.y);\r\n    };\r\n\r\n    BBox.prototype.sideNearestPoint = function(point) {\r\n        var px = point.props.x,\r\n            py = point.props.y,\r\n            tx = this.props.x,\r\n            ty = this.props.y,\r\n            tw = this.props.width,\r\n            th = this.props.height;\r\n\r\n        var distToLeft = px - tx;\r\n        var distToRight = (tx + tw) - px;\r\n        var distToTop = py - ty;\r\n        var distToBottom = (ty + th) - py;\r\n        var closest = distToLeft;\r\n        var side = 'left';\r\n\r\n        if (distToRight < closest) {\r\n            closest = distToRight;\r\n            side = 'right';\r\n        }\r\n\r\n        if (distToTop < closest) {\r\n            closest = distToTop;\r\n            side = 'top';\r\n        }\r\n        if (distToBottom < closest) {\r\n            closest = distToBottom;\r\n            side = 'bottom';\r\n        }\r\n\r\n        return side;\r\n    };\r\n\r\n    BBox.prototype.pointNearestPoint = function(point) {\r\n        if (this.contains(point)) {\r\n            var side = this.sideNearestPoint(point);\r\n            switch (side){\r\n                case 'right': return Graph.point(this.props.x + this.props.width, point.props.y);\r\n                case 'left': return Graph.point(this.props.x, point.props.y);\r\n                case 'bottom': return Graph.point(point.props.x, this.props.y + this.props.height);\r\n                case 'top': return Graph.point(point.props.x, this.props.y);\r\n            }\r\n        }\r\n        return point.clone().adhereToBox(this);\r\n    };\r\n\r\n    BBox.prototype.toJson = function() {\r\n        return _.clone(this.props);\r\n    };\r\n\r\n    BBox.prototype.toString = function() {\r\n        return 'Graph.lang.BBox';\r\n    };\r\n\r\n    BBox.prototype.toValue = function() {\r\n        var p = this.props;\r\n        return _.format(\r\n            '{0},{1} {2},{3} {4},{5} {6},{7}',\r\n            p.x, p.y,\r\n            p.x + p.width, p.y,\r\n            p.x + p.width, p.y + p.height,\r\n            p.x, p.y + p.height\r\n        );\r\n    };\r\n\r\n    ///////// EXTENSION /////////\r\n\r\n    Graph.isBBox = function(obj) {\r\n        return obj instanceof Graph.lang.BBox;\r\n    };\r\n\r\n    Graph.bbox = function(bounds) {\r\n        return new Graph.lang.BBox(bounds);\r\n    };\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.svg.Path = Graph.extend(Graph.svg.Vector, {\r\n\r\n        constructor: function(d) {\r\n            if ( ! d) {\r\n                d = [['M', 0, 0]];\r\n            }\r\n\r\n            if (_.isArray(d)) {\r\n                d = Graph.path(Graph.util.segments2path(d)).absolute().toValue();\r\n            } else if (d instanceof Graph.lang.Path) {\r\n                d = d.toValue();\r\n            } else {\r\n                d = Graph.path(d).absolute().toValue();\r\n            }\r\n\r\n            this.superclass.prototype.constructor.call(this, 'path', {\r\n                d: d\r\n            });\r\n        },\r\n\r\n        shape: function() {\r\n            return Graph.path(this.attrs.d)\r\n        },\r\n\r\n        segments: function() {\r\n            return this.shape().segments;\r\n        },\r\n\r\n        intersection: function(path, dots) {\r\n            return this.shape().intersection(path.shape(), dots);\r\n        },\r\n\r\n        intersectnum: function(path) {\r\n            return this.shape().intersectnum(path.shape());\r\n        },\r\n\r\n        angle: function() {\r\n            var segments = _.clone(this.segments()),\r\n                max = segments.length - 1;\r\n\r\n            if (segments[max][0] == 'Z') {\r\n                max--;\r\n                segments.pop();\r\n            }\r\n\r\n            if (segments.length === 1) {\r\n                max++;\r\n                segments.push(['L', segments[0][1], segments[0][2]]);\r\n            }\r\n\r\n            var dx = segments[max][1] - segments[max - 1][1],\r\n                dy = segments[max][2] - segments[max - 1][2];\r\n\r\n            return (180 + Math.atan2(-dy, -dx) * 180 / Math.PI + 360) % 360;\r\n        },\r\n\r\n        slice: function(from, to) {\r\n            return this.shape().slice(from, to);\r\n        },\r\n\r\n        pointAt: function(length) {\r\n            return this.shape().pointAt(length);\r\n        },\r\n\r\n        length: function() {\r\n            return this.shape().length();\r\n        },\r\n\r\n        addVertext: function(vertext) {\r\n            var path = this.shape();\r\n\r\n            path.addVertext(vertext);\r\n            this.attr('d', path.command());\r\n\r\n            return this;\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var ms = this.matrix().clone(),\r\n                mr = matrix.rotate(),\r\n                ro = mr.deg,\r\n                rd = mr.rad,\r\n                si = Math.sin(rd),\r\n                co = Math.cos(rd),\r\n                pa = this.shape(),\r\n                ps = pa.segments,\r\n                rx = ps[0][1],\r\n                ry = ps[0][2];\r\n\r\n            if (ro) {\r\n                ms.rotate(-ro, rx, ry);    \r\n            }\r\n            \r\n            rx = ms.x(ps[0][1], ps[0][2]);\r\n            ry = ms.y(ps[0][1], ps[0][2]);\r\n\r\n            ms.scale(sx, sy, cx, cy);\r\n\r\n            _.forEach(ps, function(seg){\r\n                var ox, oy, nx, ny;\r\n                if (seg[0] != 'Z') {\r\n                    ox = seg[seg.length - 2];\r\n                    oy = seg[seg.length - 1];\r\n\r\n                    nx = ms.x(ox, oy);\r\n                    ny = ms.y(ox, oy);\r\n                    \r\n                    seg[seg.length - 2] = nx;\r\n                    seg[seg.length - 1] = ny;\r\n                }\r\n            });\r\n\r\n            this.reset();\r\n            this.attr('d', pa.command());\r\n\r\n            if (ro) {\r\n                this.rotate(ro, rx, ry).commit(true);    \r\n            }\r\n\r\n            return {\r\n                matrix: ms,\r\n                x: rx,\r\n                y: ry\r\n            };\r\n        },\r\n\r\n        moveTo: function(x, y) {\r\n            var path = this.shape();\r\n            \r\n            path.moveTo(x, y);\r\n            this.attr('d', path.command());\r\n\r\n            return this;\r\n        },\r\n\r\n        lineTo: function(x, y, append) {\r\n            var path = this.shape();\r\n            \r\n            path.lineTo(x, y, append);\r\n            this.attr('d', path.command());\r\n\r\n            return this;\r\n        },\r\n\r\n        tail: function() {\r\n            var segments = this.segments();\r\n            if (segments.length) {\r\n                return Graph.point(segments[0][1], segments[0][2]);\r\n            }\r\n            return null;\r\n        },\r\n\r\n        head: function() {\r\n            var segments = this.segments(), maxs;\r\n            if (segments.length) {\r\n                maxs = segments.length - 1;\r\n                return Graph.point(segments[maxs][1], segments[maxs][2]);\r\n            }\r\n            return null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Path';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Matrix = Graph.lang.Matrix = function(a, b, c, d, e, f) {\r\n        this.props = {};\r\n\r\n        this.props.a = _.defaultTo(a, 1);\r\n        this.props.b = _.defaultTo(b, 0);\r\n        this.props.c = _.defaultTo(c, 0);\r\n        this.props.d = _.defaultTo(d, 1);\r\n        this.props.e = _.defaultTo(e, 0);\r\n        this.props.f = _.defaultTo(f, 0);\r\n    };\r\n\r\n    Matrix.options = {\r\n        props: {\r\n            a: 1,\r\n            b: 0,\r\n            c: 0,\r\n            d: 1,\r\n            e: 0,\r\n            f: 0\r\n        }\r\n    };\r\n\r\n    Matrix.extend = Graph.lang.Class.extend;\r\n\r\n    Matrix.prototype.constructor = Matrix;\r\n\r\n    Matrix.prototype.x = function(x, y) {\r\n        return x * this.props.a + y * this.props.c + this.props.e;\r\n    };\r\n\r\n    Matrix.prototype.y = function(x, y) {\r\n        return x * this.props.b + y * this.props.d + this.props.f;\r\n    };\r\n\r\n    Matrix.prototype.get = function(chr) {\r\n        return +this.props[chr].toFixed(4);\r\n    };\r\n\r\n    Matrix.prototype.multiply = function(a, b, c, d, e, f) {\r\n        var\r\n            result = [[], [], []],\r\n            source = [\r\n                [this.props.a, this.props.c, this.props.e],\r\n                [this.props.b, this.props.d, this.props.f],\r\n                [0, 0, 1]\r\n            ],\r\n            matrix = [\r\n                [a, c, e],\r\n                [b, d, f],\r\n                [0, 0, 1]\r\n            ];\r\n\r\n        var x, y, z, tmp;\r\n\r\n        if (Graph.isMatrix(a)) {\r\n            matrix = [\r\n                [a.props.a, a.props.c, a.props.e],\r\n                [a.props.b, a.props.d, a.props.f],\r\n                [0, 0, 1]\r\n            ];\r\n        }\r\n\r\n        for (x = 0; x < 3; x++) {\r\n            for (y = 0; y < 3; y++) {\r\n                tmp = 0;\r\n                for (z = 0; z < 3; z++) {\r\n                    tmp += source[x][z] * matrix[z][y];\r\n                }\r\n                result[x][y] = tmp;\r\n            }\r\n        }\r\n\r\n        this.props.a = result[0][0];\r\n        this.props.b = result[1][0];\r\n        this.props.c = result[0][1];\r\n        this.props.d = result[1][1];\r\n        this.props.e = result[0][2];\r\n        this.props.f = result[1][2];\r\n\r\n        return this;\r\n    };\r\n\r\n    Matrix.prototype.invert = function(clone) {\r\n        var x = this.props.a * this.props.d - this.props.b * this.props.c;\r\n        var a, b, c, d, e, f;\r\n\r\n        clone = _.defaultTo(clone, false);\r\n\r\n        a =  this.props.d / x;\r\n        b = -this.props.b / x;\r\n        c = -this.props.c / x;\r\n        d =  this.props.a / x;\r\n        e = (this.props.c * this.props.f - this.props.d * this.props.e) / x;\r\n        f = (this.props.b * this.props.e - this.props.a * this.props.f) / x;\r\n\r\n        if (clone) {\r\n            return new Graph.matrix(a, b, c, d, e, f);\r\n        } else {\r\n            this.props.a = a;\r\n            this.props.b = b;\r\n            this.props.c = c;\r\n            this.props.d = d;\r\n            this.props.e = e;\r\n            this.props.f = f;\r\n\r\n            return this;\r\n        }\r\n    };\r\n\r\n    Matrix.prototype.translate = function(x, y) {\r\n        x = _.defaultTo(x, 0);\r\n        y = _.defaultTo(y, 0);\r\n        this.multiply(1, 0, 0, 1, x, y);\r\n\r\n        return this;\r\n    };\r\n\r\n    Matrix.prototype.rotate = function(angle, cx, cy) {\r\n        if (angle === undefined) {\r\n\r\n            var px = this.delta(0, 1),\r\n                py = this.delta(1, 0),\r\n                deg = 180 / Math.PI * Math.atan2(px.y, px.x) - 90,\r\n                rad = Graph.util.rad(deg);\r\n\r\n            return {\r\n                deg: deg,\r\n                rad: rad\r\n            };\r\n        }\r\n\r\n        angle = Graph.util.rad(angle);\r\n        cx = _.defaultTo(cx, 0);\r\n        cy = _.defaultTo(cy, 0);\r\n\r\n        var cos = +Math.cos(angle).toFixed(9),\r\n            sin = +Math.sin(angle).toFixed(9);\r\n\r\n        this.multiply(cos, sin, -sin, cos, cx, cy);\r\n        this.multiply(1, 0, 0, 1, -cx, -cy);\r\n\r\n        return this;\r\n    };\r\n\r\n    Matrix.prototype.scale = function(sx, sy, cx, cy) {\r\n        if (sx === undefined) {\r\n            var prop = this.props,\r\n                sx = Graph.util.hypo(prop.a, prop.b),\r\n                sy = Graph.util.hypo(prop.c, prop.d);\r\n\r\n            if (this.determinant() < 0) {\r\n                sx = -sx;\r\n            }\r\n\r\n            return {\r\n                x: sx,\r\n                y: sy\r\n            };\r\n        }\r\n\r\n        sy = _.defaultTo(sy, sx);\r\n\r\n        if (cx || cy) {\r\n            cx = _.defaultTo(cx, 0);\r\n            cy = _.defaultTo(cy, 0);\r\n        }\r\n\r\n        (cx || cy) && this.multiply(1, 0, 0, 1, cx, cy);\r\n        this.multiply(sx, 0, 0, sy, 0, 0);\r\n        (cx || cy) && this.multiply(1, 0, 0, 1, -cx, -cy);\r\n\r\n        return this;\r\n    };\r\n\r\n    Matrix.prototype.determinant = function() {\r\n        return this.props.a * this.props.d - this.props.b * this.props.c;\r\n    };\r\n\r\n    Matrix.prototype.delta = function(x, y) {\r\n        return {\r\n            x: x * this.props.a + y * this.props.c + 0,\r\n            y: x * this.props.b + y * this.props.d + 0\r\n        };\r\n    };\r\n\r\n    Matrix.prototype.data = function() {\r\n        var px = this.delta(0, 1),\r\n            py = this.delta(1, 0),\r\n            skewX = 180 / Math.PI * Math.atan2(px.y, px.x) - 90,\r\n            radSkewX = Graph.util.rad(skewX),\r\n            cosSkewX = Math.cos(radSkewX),\r\n            sinSkewX = Math.sin(radSkewX),\r\n            scaleX = Graph.util.hypo(this.props.a, this.props.b),\r\n            scaleY = Graph.util.hypo(this.props.c, this.props.d),\r\n            radian = Graph.util.rad(skewX);\r\n\r\n        if (this.determinant() < 0) {\r\n            scaleX = -scaleX;\r\n        }\r\n\r\n        return {\r\n            x: this.props.e,\r\n            y: this.props.f,\r\n            dx: (this.props.e * cosSkewX + this.props.f *  sinSkewX) / scaleX,\r\n            dy: (this.props.f * cosSkewX + this.props.e * -sinSkewX) / scaleY,\r\n            skewX: -skewX,\r\n            skewY: 180 / Math.PI * Math.atan2(py.y, py.x),\r\n            scaleX: scaleX,\r\n            scaleY: scaleY,\r\n            rotate: skewX,\r\n            rad: radian,\r\n            sin: Math.sin(radian),\r\n            cos: Math.cos(radian),\r\n            a: this.props.a,\r\n            b: this.props.b,\r\n            c: this.props.c,\r\n            d: this.props.d,\r\n            e: this.props.e,\r\n            f: this.props.f\r\n        };\r\n    };\r\n\r\n    Matrix.prototype.toFilter = function() {\r\n        return \"progid:DXImageTransform.Microsoft.Matrix(\" +\r\n           \"M11=\" + this.get('a') + \", \" +\r\n           \"M12=\" + this.get('c') + \", \" +\r\n           \"M21=\" + this.get('b') + \", \" +\r\n           \"M22=\" + this.get('d') + \", \" +\r\n           \"Dx=\"  + this.get('e') + \", \" +\r\n           \"Dy=\"  + this.get('f') + \", \" +\r\n           \"sizingmethod='auto expand'\"  +\r\n        \")\";\r\n    };\r\n\r\n    Matrix.prototype.toArray = function() {\r\n        return [\r\n            [this.get('a'), this.get('c'), this.get('e')],\r\n            [this.get('b'), this.get('d'), this.get('f')],\r\n            [0, 0, 1]\r\n        ];\r\n    };\r\n\r\n    Matrix.prototype.toValue = function() {\r\n        return _.format(\r\n            'matrix({0},{1},{2},{3},{4},{5})',\r\n            this.get('a'),\r\n            this.get('b'),\r\n            this.get('c'),\r\n            this.get('d'),\r\n            this.get('e'),\r\n            this.get('f')\r\n        );\r\n    };\r\n\r\n    Matrix.prototype.toString = function() {\r\n        return 'Graph.lang.Matrix';\r\n    };\r\n\r\n    Matrix.prototype.clone = function() {\r\n        return new Matrix(\r\n            this.props.a,\r\n            this.props.b,\r\n            this.props.c,\r\n            this.props.d,\r\n            this.props.e,\r\n            this.props.f\r\n        );\r\n    };\r\n\r\n    ///////// EXTENSION /////////\r\n\r\n    Graph.isMatrix = function(obj) {\r\n        return obj instanceof Graph.lang.Matrix;\r\n    };\r\n\r\n    Graph.matrix = function(a, b, c, d, e, f) {\r\n        return new Graph.lang.Matrix(a, b, c, d, e, f);\r\n    };\r\n\r\n}());\r\n","\r\n(function(){\r\n    \r\n    var storage = {},\r\n        context = {};\r\n\r\n    var Registry = function() {\r\n\r\n    };\r\n\r\n    Registry.prototype.constructor = Registry;\r\n\r\n    Registry.prototype.register = function(vector) {\r\n        var id = vector.guid(), found = this.get(id);\r\n        \r\n        if (found !== vector) {\r\n            // vector.on('resize', function(){\r\n            //     if (vector.isConnectable()) {\r\n            //         var delay = _.delay(function(){\r\n            //             clearTimeout(delay);\r\n            //             Graph.registry.link.synchronize(vector);\r\n            //         }, 1);\r\n            //     }\r\n            // });\r\n\r\n            // vector.on('translate', function(){\r\n            //     if (vector.isConnectable()) {\r\n            //         var delay = _.delay(function(){\r\n            //             clearTimeout(delay);\r\n            //             Graph.registry.link.synchronize(vector);\r\n            //         }, 1);\r\n            //     }\r\n            // });\r\n        }\r\n\r\n        storage[id] = vector;\r\n    };\r\n\r\n    Registry.prototype.unregister = function(vector) {\r\n        var id = vector.guid();\r\n        if (storage[id]) {\r\n            delete storage[id];\r\n        }\r\n\r\n        if (context[id]) {\r\n            delete context[id];\r\n        }\r\n    };\r\n\r\n    Registry.prototype.setContext = function(id, scope) {\r\n        if (storage[id]) {\r\n            context[id] = scope;\r\n        }\r\n    };\r\n\r\n    Registry.prototype.count = function() {\r\n        return _.keys(storage).length;\r\n    };\r\n\r\n    Registry.prototype.toArray = function() {\r\n        var keys = _.keys(storage);\r\n        return _.map(keys, function(k){\r\n            return storage[k];\r\n        });\r\n    };\r\n\r\n    Registry.prototype.get = function(key) {\r\n\r\n        if (_.isUndefined(key)) {\r\n            return this.toArray();\r\n        }\r\n\r\n        if (key instanceof SVGElement) {\r\n            if (key.tagName == 'tspan') {\r\n                // we only interest to text\r\n                key = key.parentNode;\r\n            }\r\n            key = Graph.$(key).data(Graph.string.ID_VECTOR);\r\n        } else if (key instanceof Graph.dom.Element) {\r\n            key = key.data(Graph.string.ID_VECTOR);\r\n        }\r\n        return storage[key];\r\n    };\r\n\r\n    Registry.prototype.collect = function(scope) {\r\n        var vectors = [];\r\n        for (var id in context) {\r\n            if (context[id] == scope && storage[id]) {\r\n                vectors.push(storage[id]);\r\n            }\r\n        }\r\n        return vectors;\r\n    };\r\n\r\n    Registry.prototype.wipe = function(paper) {\r\n        var pid = paper.guid();\r\n\r\n        for (var id in storage) {\r\n            if (storage.hasOwnProperty(id)) {\r\n                if (storage[id].tree.paper == pid) {\r\n                    delete storage[id];\r\n                }\r\n            }\r\n        }\r\n\r\n        if (storage[pid]) {\r\n            delete storage[pid];\r\n        }\r\n    };\r\n\r\n    Registry.prototype.toString = function() {\r\n        return 'Graph.registry.Vector';\r\n    };\r\n    \r\n    Graph.registry.vector = new Registry();\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Shape = Graph.shape.Shape = Graph.extend({\r\n\r\n        props: {\r\n            id: null,\r\n            guid: null,\r\n            width: 0,\r\n            height: 0,\r\n            label: ''\r\n        },\r\n\r\n        components: {\r\n            shape: null,\r\n            block: null,\r\n            label: null,\r\n            child: null\r\n        },\r\n\r\n        tree: {\r\n            paper: null,\r\n            parent: null,\r\n            children: null\r\n        },\r\n\r\n        metadata: {\r\n            name: null,\r\n            icon: Graph.icons.SHAPE,\r\n            style: 'graph-shape',\r\n            tools: null\r\n        },\r\n\r\n        cached: {\r\n\r\n        },\r\n\r\n        plugins: {\r\n            manager: null\r\n        },\r\n\r\n        constructor: function(options) {\r\n            var guid;\r\n\r\n            _.assign(this.props, options || {});\r\n\r\n            guid = 'graph-shape-' + (++Shape.guid);\r\n\r\n            this.props.guid = guid;\r\n            this.tree.children = new Graph.collection.Shape();\r\n            this.plugins.manager = new Graph.plugin.Manager();\r\n\r\n            this.initComponent();\r\n            this.initMetadata();\r\n\r\n            if (this.components.shape) {\r\n                var style = Graph.styles.SHAPE;\r\n\r\n                if (this.metadata.style) {\r\n                    style += ' ' + this.metadata.style;\r\n                }\r\n\r\n                this.component().addClass(style);\r\n                style = null;\r\n            }\r\n\r\n            Graph.registry.shape.register(this);\r\n\r\n            guid = null;\r\n        },\r\n\r\n        initMetadata: function() {\r\n            this.metadata.tools = [\r\n                {\r\n                    name: 'config',\r\n                    icon: Graph.icons.CONFIG,\r\n                    title: Graph._('Click to config shape'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onConfigToolClick, this)\r\n                },\r\n                {\r\n                    name: 'link',\r\n                    icon: Graph.icons.LINK,\r\n                    title: Graph._('Click to start shape linking'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onLinkToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtofront',\r\n                    icon: Graph.icons.SEND_TO_FRONT,\r\n                    title: Graph._('Send to front'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onFrontToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtoback',\r\n                    icon: Graph.icons.SEND_TO_BACK,\r\n                    title: Graph._('Send to back'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBackToolClick, this)\r\n                },\r\n                {\r\n                    name: 'trash',\r\n                    icon: Graph.icons.TRASH,\r\n                    title: Graph._('Click to remove shape'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onTrashToolClick, this)\r\n                }\r\n            ];\r\n        },\r\n\r\n        initComponent: function() {\r\n            var shape = (new Graph.svg.Group());\r\n            this.components.shape = shape.guid();\r\n            shape = null;\r\n        },\r\n\r\n        component: function(name) {\r\n            var manager = Graph.registry.vector;\r\n            if (name === undefined) {\r\n                return manager.get(this.components.shape);\r\n            }\r\n            return manager.get(this.components[name]);\r\n        },\r\n\r\n        invalidate: function() {\r\n\r\n        },\r\n        \r\n        connectable: function() {\r\n            return this.plugins.manager.get('network');\r\n        },\r\n\r\n        resizable: function() {\r\n            return this.plugins.manager.get('resizer');\r\n        },\r\n\r\n        draggable: function() {\r\n            return this.plugins.manager.get('dragger');\r\n        },\r\n\r\n        snappable: function() {\r\n            return this.plugins.manager.get('snapper');\r\n        },\r\n\r\n        paper: function() {\r\n            return Graph.registry.vector.get(this.tree.paper);\r\n        },\r\n\r\n        parent: function() {\r\n            return Graph.registry.shape.get(this.tree.parent);\r\n        },\r\n\r\n        children: function() {\r\n            return this.tree.children;\r\n        },\r\n\r\n        addChild: function(child) {\r\n            var children = this.children(),\r\n                parent = child.parent();\r\n\r\n            if (parent && parent.guid() != this.guid()) {\r\n                parent.removeChild(child);\r\n            }\r\n\r\n            if ( ! children.has(child)) {\r\n                children.push(child);\r\n                child.tree.parent = this.guid();\r\n            }\r\n        },\r\n\r\n        removeChild: function(child) {\r\n            var children = this.children();\r\n\r\n            if (children.has(child)) {\r\n                children.pull(child);\r\n                child.tree.parent = null;\r\n            }\r\n        },\r\n\r\n        guid: function() {\r\n            return this.props.guid;\r\n        },\r\n\r\n        data: function(name, value) {\r\n            var me = this;\r\n\r\n            if (_.isPlainObject(name)) {\r\n                _.forOwn(name, function(v, k){\r\n                    me.data(k, v);\r\n                });\r\n                return me;\r\n            }\r\n\r\n            if (value === undefined) {\r\n                return me.props[name];\r\n            }\r\n\r\n            me.props[name] = value;\r\n            return me;\r\n        },\r\n\r\n        matrix: function() {\r\n            return this.component().matrix();\r\n        },\r\n\r\n        bbox: function() {\r\n            return Graph.bbox({\r\n                 x: this.props.left,\r\n                 y: this.props.top,\r\n                x2: this.props.left + this.props.width,\r\n                y2: this.props.top + this.props.height,\r\n                width: this.props.width,\r\n                height: this.props.height\r\n            });\r\n        },\r\n\r\n        render: function(paper) {\r\n            var component = this.component();\r\n            component && component.render(paper);\r\n\r\n            // save\r\n            this.tree.paper = paper.guid();\r\n        },\r\n\r\n        remove: function() {\r\n            // just fire block removal\r\n            this.component('block').remove();\r\n        },\r\n\r\n        redraw: _.debounce(function() {\r\n            var label = this.component('label'),\r\n                block = this.component('block'),\r\n                bound = block.bbox().toJson();\r\n\r\n            label.attr({\r\n                x: bound.x + bound.width  / 2,\r\n                y: bound.x + bound.height / 2\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n        }, 1),\r\n\r\n        translate: function(dx, dy) {\r\n            var component = this.component();\r\n            component.translate(dx, dy).commit();\r\n\r\n            // update props\r\n            var matrix = component.matrix(),\r\n                left = matrix.props.e,\r\n                top = matrix.props.f;\r\n\r\n            this.data({\r\n                left: left,\r\n                top: top\r\n            });\r\n\r\n        },\r\n\r\n        cascade: function(handler) {\r\n            cascade(this, handler);\r\n        },\r\n\r\n        sendToBack: function() {\r\n            var paper = this.paper();\r\n        },\r\n\r\n        sendToFront: function() {\r\n            var paper = this.paper();\r\n            paper.viewport().elem.append(this.component().elem);\r\n        },\r\n\r\n        /**\r\n         *  Use this method only for updating `width`, `height`, `left`, `top`\r\n         *  otherwise use data()\r\n         */\r\n        attr: function(name, value) {\r\n            var me = this;\r\n\r\n            if (_.isPlainObject(name)) {\r\n                _.forOwn(name, function(v, k){\r\n                    me.props[k] = v;\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (value === undefined) {\r\n                return this.props[name];\r\n            }\r\n\r\n            this.props[name] = value;\r\n            return this;\r\n        },\r\n\r\n        height: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.height;\r\n            }\r\n\r\n            return this.attr('height', value);\r\n        },\r\n\r\n        width: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.width;\r\n            }\r\n            return this.attr('width', value);\r\n        },\r\n\r\n        left: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.left;\r\n            }\r\n\r\n            return this.attr('left', value);\r\n        },\r\n\r\n        top: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.top;\r\n            }\r\n\r\n            return this.attr('top', value);\r\n        },\r\n\r\n        onLabelEdit: function(e) {\r\n            var text = e.text;\r\n            this.component('label').props.text = text;\r\n            this.redraw();\r\n        },\r\n\r\n        onDragStart: function(e) {\r\n            this.component().addClass('shape-dragging');\r\n        },\r\n\r\n        onDragEnd: function(e) {\r\n            var blockComponent = this.component('block'),\r\n                shapeComponent = this.component('shape'),\r\n                blockMatrix = blockComponent.matrix();\r\n\r\n            var shapeMatrix;\r\n\r\n            blockComponent.reset();\r\n\r\n            shapeComponent.matrix().multiply(blockMatrix);\r\n            shapeComponent.attr('transform', shapeComponent.matrix().toValue());\r\n            shapeComponent.dirty(true);\r\n\r\n            // update props\r\n            shapeMatrix = shapeComponent.matrix();\r\n\r\n            this.data({\r\n                left: shapeMatrix.props.e,\r\n                top: shapeMatrix.props.f\r\n            });\r\n\r\n            // forward\r\n            this.fire(e);\r\n            shapeComponent.removeClass('shape-dragging');\r\n        },\r\n\r\n        onSelect: function() {\r\n            this.component('shape').addClass('shape-selected');\r\n            Graph.topic.publish('shape/select', {shape: this});\r\n        },\r\n\r\n        onDeselect: function() {\r\n            this.component('shape').removeClass('shape-selected');\r\n            Graph.topic.publish('shape/deselect', {shape: this});\r\n        },\r\n\r\n        onResize: function() {\r\n            this.redraw();\r\n        },\r\n\r\n        onRemove: function() {\r\n            // remove label\r\n            this.component('label').remove();\r\n\r\n            // remove shape\r\n            this.component('shape').remove();\r\n\r\n            for (var name in this.components) {\r\n                this.components[name] = null;\r\n            }\r\n\r\n            Graph.registry.shape.unregister(this);\r\n        },\r\n\r\n        onConfigToolClick: function(e) {\r\n\r\n        },\r\n\r\n        onTrashToolClick: function(e) {\r\n            this.remove();\r\n        },\r\n\r\n        onLinkToolClick: function(e) {\r\n            var paper = this.paper();\r\n\r\n            if (paper) {\r\n                var layout = paper.layout(),\r\n                    linker = paper.plugins.linker,\r\n                    coord  = layout.grabLocation(e);\r\n\r\n                paper.tool().activate('linker');\r\n                linker.start(this.connectable().component(), coord);\r\n            }\r\n        },\r\n\r\n        onFrontToolClick: function(e) {\r\n            this.sendToFront();\r\n        },\r\n\r\n        onBackToolClick: function(e) {\r\n            this.sendToBack();\r\n        }\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n    Shape.guid = 0;\r\n\r\n    ///////// EXTENSION /////////\r\n\r\n    Graph.isShape = function(obj) {\r\n        return obj instanceof Graph.shape.Shape;\r\n    };\r\n\r\n    ///////// HELPERS /////////\r\n\r\n    function cascade(shape, handler) {\r\n        var child = shape.children().toArray();\r\n        var result;\r\n\r\n        result = handler.call(shape, shape);\r\n        result = _.defaultTo(result, true);\r\n\r\n        if (result && child.length) {\r\n            _.forEach(child, function(curr){\r\n                cascade(curr, handler);\r\n            });\r\n        }\r\n    }\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var Tree = Graph.collection.Tree = function(nodes) {\r\n        var me = this;\r\n\r\n        me.nodes = nodes;\r\n        \r\n        me.key = function(node){ return node; };\r\n\r\n        me.bisect = _.bisector(function(node){ \r\n            return me.key(node); \r\n        }).left;\r\n    };\r\n\r\n    Tree.prototype.get = function(index) {\r\n        return this.nodes[index];\r\n    };\r\n\r\n    Tree.prototype.count = function() {\r\n        return this.nodes.length;\r\n    };\r\n\r\n    Tree.prototype.insert = function(node) {\r\n        var index = this.index(node),\r\n            value = this.key(node);\r\n\r\n        if (this.nodes[index] && value == this.key(this.nodes[index])) {\r\n            return;\r\n        }\r\n\r\n        this.nodes.splice(index, 0, node);\r\n\r\n        return index;\r\n    };\r\n\r\n    Tree.prototype.remove = function(node) {\r\n        var index = this.index(node);\r\n        this.nodes.splice(index, 1);\r\n        \r\n        return index;\r\n    };\r\n\r\n    Tree.prototype.keygen = function(keygen) {\r\n        this.key = keygen;\r\n        return this;\r\n    };\r\n\r\n    Tree.prototype.index = function(node) {\r\n        return this.bisect(this.nodes, this.key(node));\r\n    };\r\n\r\n    Tree.prototype.order = function() {\r\n        this.nodes.sort(_.ascendingKey(this.key));\r\n        return this;\r\n    };\r\n    \r\n    Tree.prototype.root = function() {\r\n        return this.nodes[0];\r\n    };\r\n    \r\n    Tree.prototype.cascade = function(node, iteratee) {\r\n        var index = this.index(node),\r\n            nodes = this.nodes,\r\n            count = this.nodes.length;\r\n        \r\n        var start = 0;\r\n        \r\n        for (var n = index; n < count; n++) {\r\n            iteratee(nodes[n], start);\r\n            start++;\r\n        }\r\n    };\r\n\r\n    Tree.prototype.bubble = function(node, iteratee) {\r\n        var index = this.index(node),\r\n            nodes = this.nodes;\r\n\r\n        var start = 0;\r\n\r\n        for (var n = index; n >= 0; n--) {\r\n            iteratee(nodes[n], start);\r\n            start++;\r\n        }\r\n    };\r\n\r\n    Tree.prototype.toArray = function() {\r\n        return this.nodes.slice();\r\n    };\r\n\r\n}());","\r\n(function(_, $){\r\n    \r\n    var REGEX_SVG_BUILDER = /^<(svg|g|rect|text|path|line|tspan|circle|polygon|defs|marker)/i;\r\n\r\n    var domParser;\r\n\r\n    ///////// BUILDER /////////\r\n    \r\n    Graph.dom = function(selector, context, query) {\r\n        var fragment, element;\r\n\r\n        if (domParser === undefined) {\r\n            try {\r\n                domParser = new DOMParser();\r\n            } catch(e){\r\n                domParser = null;\r\n            }\r\n        }\r\n\r\n        query = _.defaultTo(query, false);\r\n\r\n        if (context !== undefined) {\r\n            if (Graph.isElement(context)) {\r\n                context = context.node();\r\n            }\r\n        }\r\n\r\n\r\n        if (_.isString(selector)) {\r\n            if (REGEX_SVG_BUILDER.test(selector)) {\r\n                if (domParser) {\r\n                    fragment = '<g xmlns=\"'+ Graph.config.xmlns.svg +'\">' + selector + '</g>';\r\n                    element  = domParser.parseFromString(fragment, 'text/xml').documentElement.childNodes[0];\r\n                    fragment = null;\r\n                    element  = query ? $(element) : element;\r\n                }\r\n            } else {\r\n                element = query ? $(selector, context) : $(selector, context)[0];\r\n            }\r\n        } else {\r\n            if (Graph.isHTML(selector) || Graph.isSVG(selector)) {\r\n                element = query ? $(selector) : selector;\r\n            } else if (Graph.isElement(selector)) {\r\n                element = query ? selector.query : selector.query[0];\r\n            } else {\r\n                // document, window, ...etc\r\n                element = query ? $(selector, context) : selector;\r\n            }\r\n        }\r\n\r\n        context = null;\r\n        return element;\r\n    };  \r\n\r\n    Graph.dom.clone = function(node, deep) {\r\n        return node.cloneNode(deep);\r\n    };\r\n\r\n    ///////// ELEMENT /////////\r\n\r\n    var E = Graph.dom.Element = function(node) {\r\n        this.query = $(node);\r\n    };\r\n\r\n    E.prototype.is = function(pseudo) {\r\n        return this.query.is(pseudo);\r\n    };  \r\n\r\n    E.prototype.node = function() {\r\n        return this.query[0];\r\n    };\r\n\r\n    E.prototype.length = function() {\r\n        return this.query.length;\r\n    };\r\n\r\n    E.prototype.group = function(name) {\r\n        if (name === undefined) {\r\n            return this.query.data('component-group');\r\n        }\r\n        this.query.data('component-group', name);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.belong = function(group) {\r\n        return this.group() == group;\r\n    };\r\n\r\n    E.prototype.attr = function(name, value) {\r\n        if (value === undefined) {\r\n            return this.query.attr(name);\r\n        }\r\n        \r\n        var me = this, node = this.query[0];\r\n\r\n        if (Graph.isHTML(node)) {\r\n            this.query.attr(name, value);\r\n        } else if (Graph.isSVG(node)) {\r\n\r\n            if (_.isPlainObject(name)) {\r\n                _.forOwn(name, function(v, k){\r\n                    me.attr(k, v);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (name.substring(0, 6) == 'xlink:') {\r\n                node.setAttributeNS(Graph.config.xmlns.xlink, name.substring(6), _.toString(value));\r\n            } else {\r\n                node.setAttribute(name, _.toString(value));\r\n            }\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    E.prototype.width = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.width();\r\n        }\r\n        this.query.width(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.outerHeight = function(margin) {\r\n        return this.query.outerHeight(margin);\r\n    };\r\n\r\n    E.prototype.height = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.height();\r\n        }\r\n        this.query.height(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.show = function() {\r\n        this.query.show();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.hide = function() {\r\n        this.query.hide();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.offset = function() {\r\n        return this.query.offset();\r\n    };\r\n\r\n    E.prototype.position = function() {\r\n        return this.query.position();\r\n    };\r\n\r\n    E.prototype.css = function(name, value) {\r\n        if (value === undefined) {\r\n            return this.query.css(name);\r\n        }\r\n        this.query.css(name, value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.addClass = function(classes) {\r\n        var node = this.query[0];\r\n        if (Graph.isHTML(node)) {\r\n            this.query.addClass(classes);\r\n        } else if (Graph.isSVG(node)) {\r\n            var values = _.chain([])\r\n                .concat(_.split(node.className.baseVal || '', ' '))\r\n                .concat(_.split(classes, ' '))\r\n                .uniq()\r\n                .join(' ')\r\n                .trim()\r\n                .value();\r\n            node.className.baseVal = values;\r\n        }\r\n        return this;\r\n    };\r\n\r\n    E.prototype.removeClass = function(classes) {\r\n        var node = this.query[0];\r\n        if (Graph.isHTML(node)) {\r\n            this.query.removeClass(classes);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    E.prototype.hasClass = function(clazz) {\r\n        var node = this.query[0];\r\n\r\n        if (Graph.isHTML(node)) {\r\n            return this.query.hasClass(clazz); \r\n        } else if (Graph.isSVG(node)) {\r\n            var classes = _.split(node.className.baseVal, ' ');\r\n            return classes.indexOf(clazz) > -1;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    E.prototype.find = function(selector) {\r\n        return new Graph.dom.Element(this.query.find(selector));\r\n    };\r\n\r\n    E.prototype.parent = function() {\r\n        return new Graph.dom.Element(this.query.parent());\r\n    };\r\n\r\n    E.prototype.closest = function(element) {\r\n        return new Graph.dom.Element(this.query.closest(element));\r\n    };\r\n\r\n    E.prototype.append = function(element) {\r\n        if (element.query === undefined) {\r\n            this.query.append(element);\r\n        } else {\r\n            this.query.append(element.query);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    E.prototype.prepend = function(element) {\r\n        this.query.prepend(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.appendTo = function(element) {\r\n        this.query.appendTo(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.prependTo = function(element) {\r\n        this.query.prependTo(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.before = function(element) {\r\n        this.query.before(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.after = function(element) {\r\n        this.query.after(element.query);\r\n        return this;\r\n    };\r\n    \r\n    E.prototype.last = function() {\r\n        return new Graph.dom.Element(this.query.last());\r\n    };\r\n\r\n    E.prototype.remove = function() {\r\n        this.query.remove();\r\n        this.query = null;\r\n        return this;\r\n    };\r\n\r\n    E.prototype.detach = function() {\r\n        this.query = this.query.detach();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.on = function(types, selector, data, fn, /*INTERNAL*/ one) {\r\n        this.query.on.call(this.query, types, selector, data, fn, one);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.off = function(types, selector, fn) {\r\n        this.query.off.call(this.query, types, selector, fn);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.trigger = function(type, data) {\r\n        this.query.trigger(type, data);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.val = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.val();\r\n        }\r\n        this.query.val(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.text = function(text) {\r\n        if (text === undefined) {\r\n            return this.query.text();\r\n        }\r\n        this.query.text(text);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.html = function(html) {\r\n        if (html === undefined) {\r\n            return this.query.html();\r\n        }\r\n        this.query.html(html);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.focus = function() {\r\n        this.query.focus();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.contextmenu = function(state) {\r\n        state = _.defaultTo(state, true);\r\n        if ( ! state) {\r\n            this.query.on('contextmenu', function(e){\r\n                return false;\r\n            });\r\n        }\r\n    };\r\n\r\n    E.prototype.each = function(iteratee) {\r\n        this.query.each(iteratee);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.empty = function() {\r\n        this.query.empty();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.data = function(key, value) {\r\n        if (value === undefined) {\r\n            return this.query.data(key);\r\n        }\r\n        this.query.data(key, value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.prop = function(name, value) {\r\n        if (value === undefined) {\r\n            return this.query.data(name);\r\n        }\r\n        this.query.prop(name, value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.scrollTop = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.scrollTop();\r\n        }\r\n        this.query.scrollTop(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.scrollLeft = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.scrollLeft();\r\n        }\r\n        this.query.scrollLeft(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.toString = function() {\r\n        return 'Graph.dom.Element';\r\n    };\r\n\r\n    /// STATICS ///\r\n    \r\n    E.guid = 0;\r\n    \r\n    /// HELPERS ///\r\n\r\n    Graph.$ = function(selector, context) {\r\n        var query = Graph.dom(selector, context, true);\r\n        return new Graph.dom.Element(query);\r\n    };\r\n\r\n}(_, jQuery));","\r\n(function(){\r\n\r\n    Graph.svg.Ellipse = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(cx, cy, rx, ry) {\r\n            \r\n            // this.$super('ellipse', {\r\n            //     cx: cx,\r\n            //     cy: cy,\r\n            //     rx: rx,\r\n            //     ry: ry\r\n            // });\r\n\r\n            this.superclass.prototype.constructor.call(this, 'ellipse', {\r\n                cx: cx,\r\n                cy: cy,\r\n                rx: rx,\r\n                ry: ry\r\n            });\r\n        },\r\n\r\n        shape: function() {\r\n            var a = this.attrs;\r\n\r\n            return Graph.path([\r\n                ['M', a.cx, a.cy],\r\n                ['m', 0, -a.ry],\r\n                ['a', a.rx, a.ry, 0, 1, 1, 0,  2 * a.ry],\r\n                ['a', a.rx, a.ry, 0, 1, 1, 0, -2 * a.ry],\r\n                ['z']\r\n            ]);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.graph.matrix.clone().scale(sx, sy, cx, cy),\r\n                rotate = this.props.rotate;\r\n\r\n            var mx = matrix.x(this.attrs.cx, this.attrs.cy),\r\n                my = matrix.y(this.attrs.cx, this.attrs.cy),\r\n                rx = this.attrs.rx * sx,\r\n                ry = this.attrs.ry * sy;\r\n\r\n            var gx, gy;\r\n\r\n            this.reset();\r\n\r\n            this.attr({\r\n                cx: mx,\r\n                cy: my,\r\n                rx: rx,\r\n                ry: ry\r\n            });\r\n\r\n            if (rotate) {\r\n                this.rotate(rotate, mx, my).commit();    \r\n            }\r\n\r\n            var bb = this.bbox().toJson();\r\n\r\n            gx = mx - rx - dx;\r\n            gy = my - ry - dy;\r\n\r\n            gx = bb.x;\r\n            gy = bb.y;\r\n\r\n            return  {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: mx,\r\n                    cy: my\r\n                },\r\n                magnify: {\r\n                    cx: gx,\r\n                    cy: gy\r\n                }\r\n            };\r\n        },\r\n        toString: function() {\r\n            return 'Graph.svg.Ellipse';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Circle = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(cx, cy, r) {\r\n            var me = this;\r\n            \r\n            if (Graph.isPoint(cx)) {\r\n                r  = cy;\r\n                cy = cx.props.y;\r\n                cx = cx.props.x;\r\n            }\r\n\r\n            // me.$super('circle', {\r\n            //     cx: cx,\r\n            //     cy: cy,\r\n            //     r: r\r\n            // });\r\n\r\n            me.superclass.prototype.constructor.call(me, 'circle', {\r\n                cx: cx,\r\n                cy: cy,\r\n                r: r\r\n            });\r\n            \r\n        },\r\n\r\n        shape: function() {\r\n            var a = this.attrs;\r\n            \r\n            return Graph.path([\r\n                ['M', a.cx, a.cy],\r\n                ['m', 0, -a.r],\r\n                ['a', a.r, a.r, 0, 1, 1, 0,  2 * a.r],\r\n                ['a', a.r, a.r, 0, 1, 1, 0, -2 * a.r],\r\n                ['z']\r\n            ]);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.graph.matrix.clone(),\r\n                rotate = this.props.rotate,\r\n                ax = this.attrs.cx,\r\n                ay = this.attrs.cy,\r\n                ar = this.attrs.r;\r\n\r\n            var x, y, r;\r\n            \r\n            if (sy === 1) {\r\n                r  = ar * sx;\r\n                sy = sx;\r\n            } else if (sx === 1) {\r\n                r  = ar * sy;\r\n                sx = sy;\r\n            } else if (sx < sy) {\r\n                r = ar * sy;\r\n                sx = sy;\r\n            } else if (sx > sy) {\r\n                r  = ar * sx;\r\n                sy = sx;\r\n            }\r\n\r\n            matrix.scale(sx, sy, cx, cy);\r\n\r\n            x = matrix.x(ax, ay);\r\n            y = matrix.y(ax, ay);\r\n\r\n            this.reset();\r\n\r\n            this.attr({\r\n                cx: x,\r\n                cy: y,\r\n                 r: r\r\n            });\r\n            \r\n            if (rotate) {\r\n                this.rotate(rotate, x, y).commit();    \r\n            }\r\n\r\n            return {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: x,\r\n                    cy: y\r\n                }\r\n            };\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Circle';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Rect = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(x, y, width, height, r) {\r\n            var me = this;\r\n            r = _.defaultTo(r, 6);\r\n\r\n            // me.$super('rect', {\r\n            //     x: _.defaultTo(x, 0),\r\n            //     y: _.defaultTo(y, 0),\r\n            //     rx: r,\r\n            //     ry: r,\r\n            //     width: _.defaultTo(width, 0),\r\n            //     height: _.defaultTo(height, 0)\r\n            // });\r\n\r\n            me.superclass.prototype.constructor.call(me, 'rect', {\r\n                x: _.defaultTo(x, 0),\r\n                y: _.defaultTo(y, 0),\r\n                rx: r,\r\n                ry: r,\r\n                width: _.defaultTo(width, 0),\r\n                height: _.defaultTo(height, 0)\r\n            });\r\n            \r\n            me.origpath = me.shape();\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            var result = this.superclass.prototype.attr.apply(this, [name, value]);\r\n\r\n            if (name == 'rx' && value !== undefined) {\r\n                this.attrs.r = this.attrs.rx;    \r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        shape: function() {\r\n            var a = this.attrs, p;\r\n\r\n            if (a.r) {\r\n                p = Graph.path([\r\n                    ['M', a.x + a.r, a.y], \r\n                    ['l', a.width - a.r * 2, 0], \r\n                    ['a', a.r, a.r, 0, 0, 1, a.r, a.r], \r\n                    ['l', 0, a.height - a.r * 2], \r\n                    ['a', a.r, a.r, 0, 0, 1, -a.r, a.r], \r\n                    ['l', a.r * 2 - a.width, 0], \r\n                    ['a', a.r, a.r, 0, 0, 1, -a.r, -a.r], \r\n                    ['l', 0, a.r * 2 - a.height], \r\n                    ['a', a.r, a.r, 0, 0, 1, a.r, -a.r], \r\n                    ['z']\r\n                ]);\r\n            } else {\r\n                p = Graph.path([\r\n                    ['M', a.x, a.y], \r\n                    ['l', a.width, 0], \r\n                    ['l', 0, a.height], \r\n                    ['l', -a.width, 0], \r\n                    ['z']\r\n                ]);\r\n            }\r\n\r\n            return p;\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.matrix().clone(),\r\n                rotate = matrix.rotate().deg;\r\n\r\n            var x, y, w, h;\r\n\r\n            matrix.scale(sx, sy, cx, cy);\r\n\r\n            this.reset();\r\n\r\n            x = matrix.x(this.attrs.x, this.attrs.y);\r\n            y = matrix.y(this.attrs.x, this.attrs.y);\r\n            w = this.attrs.width  * sx;\r\n            h = this.attrs.height * sy;\r\n\r\n            this.attr({\r\n                x: x,\r\n                y: y,\r\n                width: w,\r\n                height: h\r\n            });\r\n\r\n            if (rotate) {\r\n                this.rotate(rotate, x, y).commit();    \r\n            }\r\n            \r\n            return {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: x,\r\n                    cy: y\r\n                }\r\n            };\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Rect';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","(function(){\r\n\r\n    Graph.svg.Polyline = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(points) {\r\n            points = _.defaultTo(points, '');\r\n\r\n            if (_.isArray(points)) {\r\n                if (points.length) {\r\n                    if (_.isPlainObject(points[0])) { \r\n                        points = _.map(points, function(p){ return p.x + ',' + p.y; });\r\n                    }\r\n                    points = _.join(points, ',');\r\n                } else {\r\n                    points = '';\r\n                }\r\n            }\r\n            \r\n            this.superclass.prototype.constructor.call(this, 'polyline', {\r\n                points: points\r\n            });\r\n        },\r\n\r\n        shape: function() {\r\n            var command = Graph.util.polygon2path(this.attrs.points);\r\n            command = command.replace(/Z/i, '');\r\n            return Graph.path(command);\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            if (name == 'points' && _.isArray(value)) {\r\n                value = _.join(_.map(value, function(p){\r\n                    return p[0] + ',' + p[1];\r\n                }), ' ');\r\n            }\r\n            \r\n            return this.superclass.prototype.attr.call(this, name, value); // this.$super(name, value);\r\n        },\r\n        toString: function() {\r\n            return 'Graph.svg.Polyline';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Polygon = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(points) {\r\n            points = _.defaultTo(points, '');\r\n            \r\n            if (_.isArray(points)) {\r\n                if (points.length) {\r\n                    if (_.isPlainObject(points[0])) { \r\n                        points = _.map(points, function(p){ return p.x + ',' + p.y; });\r\n                    }\r\n                    points = _.join(points, ',');\r\n                } else {\r\n                    points = '';\r\n                }\r\n            }\r\n\r\n            this.superclass.prototype.constructor.call(this, 'polygon', {\r\n                points: points\r\n            });\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            if (name == 'points' && _.isArray(value)) {\r\n                value = _.join(value, ',');\r\n            }\r\n            \r\n            return this.superclass.prototype.attr.call(this, name, value); // this.$super(name, value);\r\n        },\r\n\r\n        shape: function() {\r\n            var command = Graph.util.polygon2path(this.attrs.points);\r\n            return Graph.path(command);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.graph.matrix.clone(),\r\n                origin = this.graph.matrix.clone(),\r\n                rotate = this.props.rotate,\r\n                ps = this.shape().segments,\r\n                dt = [],\r\n                rx = ps[0][1],\r\n                ry = ps[0][2];\r\n\r\n            if (rotate) {\r\n                origin.rotate(-rotate, ps[0][1], ps[0][2]); \r\n                rx = origin.x(ps[0][1], ps[0][2]);\r\n                ry = origin.y(ps[0][1], ps[0][2]);\r\n            }\r\n\r\n            origin.scale(sx, sy, cx, cy);\r\n            matrix.scale(sx, sy, cx, cy);\r\n\r\n            _.forEach(ps, function(seg){\r\n                var ox, oy, x, y;\r\n                if (seg[0] != 'Z') {\r\n                    ox = seg[seg.length - 2];\r\n                    oy = seg[seg.length - 1];\r\n                    x = origin.x(ox, oy);\r\n                    y = origin.y(ox, oy);\r\n                    dt.push(x + ',' + y);\r\n                }\r\n            });\r\n\r\n            dt = _.join(dt, ' ');\r\n\r\n            this.reset();\r\n            this.attr('points', dt);\r\n\r\n            if (rotate) {\r\n                this.rotate(rotate, rx, ry).commit();\r\n            }\r\n            \r\n            return {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: rx,\r\n                    cy: ry\r\n                }\r\n            };\r\n        },\r\n        toString: function() {\r\n            return 'Graph.svg.Polygon';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Group = Graph.extend(Graph.svg.Vector, {\r\n\r\n        attrs: {\r\n            'stroke': null,\r\n            'stroke-width': null,\r\n            'class': null,\r\n            'fill': null,\r\n            'style': null\r\n        },\r\n        \r\n        constructor: function(x, y) {\r\n            // this.$super('g');\r\n            this.superclass.prototype.constructor.call(this, 'g');\r\n\r\n            if (x !== undefined && y !== undefined) {\r\n                this.graph.matrix.translate(x, y);\r\n                this.attr('transform', this.graph.matrix.toValue());\r\n            }\r\n        },\r\n\r\n        shape: function() {\r\n            var size = this.dimension();\r\n            \r\n            return new Graph.lang.Path([\r\n                ['M', size.x, size.y], \r\n                ['l', size.width, 0], \r\n                ['l', 0, size.height], \r\n                ['l', -size.width, 0], \r\n                ['z']\r\n            ]);\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Group';\r\n        }\r\n        \r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Text = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        attrs: {\r\n            'text-anchor': 'middle'\r\n        },  \r\n\r\n        props: {\r\n            id: '',\r\n            guid: '',\r\n            text: '',\r\n            type: 'text',\r\n            rotate: 0,\r\n            lineHeight: 1,\r\n            fontSize: 12,\r\n            traversable: true,\r\n            focusable: false,\r\n            selectable: true,\r\n            selected: false,\r\n            rendered: false\r\n        },\r\n\r\n        rows: [],\r\n\r\n        constructor: function(x, y, text) {\r\n            // this.$super('text', {\r\n            //     x: _.defaultTo(x, 0),\r\n            //     y: _.defaultTo(y, 0)\r\n            // });\r\n\r\n            this.superclass.prototype.constructor.call(this, 'text', {\r\n                x: _.defaultTo(x, 0),\r\n                y: _.defaultTo(y, 0)\r\n            });\r\n\r\n            this.attr({\r\n                'font-size': Graph.config.font.size\r\n            });\r\n\r\n            if (text) {\r\n                this.write(text);\r\n            }\r\n            \r\n            this.on('render', _.bind(this.onTextRender, this));\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            var result = this.superclass.prototype.attr.apply(this, [name, value]);\r\n            \r\n            if (name == 'font-size' && value !== undefined) {\r\n                this.props.fontSize = _.parseInt(value) || 12;\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        write: function(text) {\r\n            var me = this, parts, span;\r\n\r\n            if (text === undefined) {\r\n                return me.props.text;\r\n            }\r\n\r\n            parts = (text || '').split(\"\\n\");\r\n\r\n            me.empty();\r\n            me.rows = [];\r\n            \r\n            _.forEach(parts, function(t, i){\r\n                me.addSpan(t);\r\n            });\r\n\r\n            me.props.text = text;\r\n            me.cached.bbox = null;\r\n        },\r\n\r\n        addSpan: function(text) {\r\n            var me = this, span;\r\n    \r\n            text = _.defaultTo(text, '');\r\n\r\n            span = Graph.$('<tspan/>');\r\n            span.text(text);\r\n\r\n            me.elem.append(span);\r\n            me.rows.push(span);\r\n\r\n            return span;\r\n        },\r\n\r\n        /**\r\n         * Arrange position\r\n         */\r\n        arrange: function() {\r\n            var rows = this.rows,\r\n                size = this.props.fontSize,\r\n                line = this.props.lineHeight,\r\n                bbox = this.bbox().toJson();\r\n            \r\n            if (rows.length) {\r\n                for (var i = 0, ii = rows.length; i < ii; i++) {\r\n                    if (i) {\r\n                        rows[i].attr('x', this.attrs.x);\r\n                        rows[i].attr('dy', size * line);\r\n                    }\r\n                }\r\n\r\n                rows[0].attr('dy', 0);\r\n\r\n                // var box = this.bbox().toJson(),\r\n                //     off = this.attrs.y - (box.y + box.height / 2);\r\n\r\n                // if (off) {\r\n                //     rows[0].setAttribute('dy', off);    \r\n                // }\r\n                \r\n            }\r\n        },\r\n\r\n        wrap: function(width) {\r\n            var text = this.props.text,\r\n                words = text.split(/\\s+/).reverse(),\r\n                lines = [],\r\n                lineNo = 0,\r\n                lineHeight = this.props.lineHeight,\r\n                ax = this.attrs.x,\r\n                ay = this.attrs.y,\r\n                dy = 0;\r\n\r\n            var word, span;\r\n\r\n            this.empty();\r\n            this.rows = [];\r\n\r\n            span = this.addSpan();\r\n            span.attr({\r\n                x: ax, \r\n                y: ay, \r\n                dy: dy + 'em'\r\n            });\r\n\r\n            while((word = words.pop())) {\r\n                lines.push(word);\r\n                span.text(lines.join(' '));\r\n                if (span.node().getComputedTextLength() > width) {\r\n                    lines.pop();\r\n                    span.text(lines.join(' '));\r\n                    lines = [word];\r\n                    span = this.addSpan(word);\r\n                    span.attr({\r\n                        x: ax, \r\n                        y: ay, \r\n                        dy: (++lineNo * lineHeight) + 'em'\r\n                    });\r\n                }\r\n            }\r\n        },\r\n\r\n        center: function(target) {\r\n            if (target) {\r\n                var targetBox = target.bbox().toJson(),\r\n                    rotate = this.matrix().rotate();\r\n\r\n                var textBox, dx, dy, cx, cy;\r\n\r\n                this.reset();\r\n\r\n                textBox = this.bbox().toJson();   \r\n\r\n                dx = targetBox.width / 2;\r\n                dy = targetBox.height / 2;\r\n                cx = textBox.x + textBox.width / 2;\r\n                cy = textBox.y + textBox.height / 2;\r\n\r\n                if (rotate.deg) {\r\n                    this.translate(dx, dy).rotate(rotate.deg).commit();\r\n                } else {\r\n                    this.translate(dx, dy).commit();\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        shape: function() {\r\n            var size = this.dimension();\r\n\r\n            return new Graph.lang.Path([\r\n                ['M', size.x, size.y], \r\n                ['l', size.width, 0], \r\n                ['l', 0, size.height], \r\n                ['l', -size.width, 0], \r\n                ['z']\r\n            ]);\r\n\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Text';\r\n        },\r\n\r\n        onTextRender: function() {\r\n            var me = this;\r\n            me.arrange();\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Image = Graph.extend(Graph.svg.Vector, {\r\n\r\n        attrs: {\r\n            preserveAspectRatio: 'none'\r\n        },\r\n\r\n        constructor: function(src, x, y, width, height) {\r\n            var me = this;\r\n\r\n            // me.$super('image', {\r\n            //     'xlink:href': src,\r\n            //     'x': _.defaultTo(x, 0),\r\n            //     'y': _.defaultTo(y, 0),\r\n            //     'width': _.defaultTo(width, 0),\r\n            //     'height': _.defaultTo(height, 0)\r\n            // });\r\n            \r\n            me.superclass.prototype.constructor.call(me, 'image', {\r\n                'xlink:href': src,\r\n                'x': _.defaultTo(x, 0),\r\n                'y': _.defaultTo(y, 0),\r\n                'width': _.defaultTo(width, 0),\r\n                'height': _.defaultTo(height, 0)\r\n            });\r\n            \r\n        },\r\n\r\n        align: function(value, scale) {\r\n            if (value == 'none') {\r\n                this.attr('preserveAspectRatio', 'none');\r\n\r\n                return this;\r\n            }\r\n\r\n            var aspect = this.attrs.preserveAspectRatio,\r\n                align = '';\r\n\r\n            aspect = /(meet|slice)/.test(aspect) \r\n                ? aspect.replace(/(.*)\\s*(meet|slice)/i, '$2')\r\n                : '';\r\n\r\n            scale = _.defaultTo(scale, aspect);\r\n            value = value.replace(/s+/, ' ').toLowerCase();\r\n\r\n            switch(value) {\r\n                case 'top left':\r\n                case 'left top':\r\n                    align = 'xMinYMin';\r\n                    break;\r\n                case 'top center':\r\n                case 'center top':\r\n                    align = 'xMidYMin';\r\n                    break;\r\n                case 'top right':\r\n                case 'right top':\r\n                    align = 'xMaxYMin';\r\n                    break;\r\n                case 'left':\r\n                    align = 'xMinYMid';\r\n                    break;\r\n                case 'center':\r\n                    align = 'xMidYMid';\r\n                    break;\r\n                case 'right':\r\n                    align = 'xMaxYMid';\r\n                    break;\r\n                case 'bottom left':\r\n                case 'left bottom':\r\n                    align = 'xMinYMax';\r\n                    break;\r\n                case 'bottom center':\r\n                case 'center bottom':\r\n                    align = 'xMidYMax';\r\n                    break;\r\n                case 'bottom right':\r\n                case 'right bottom':\r\n                    align = 'xMaxYMax';\r\n                    break;\r\n            }\r\n\r\n            aspect = align + (scale ? ' ' + scale : '');\r\n            this.attr('preserveAspectRatio', aspect);\r\n\r\n            return this;\r\n        },\r\n\r\n        shape: function() {\r\n            var a = this.attrs;\r\n\r\n            return new Graph.lang.Path([\r\n                ['M', a.x, a.y], \r\n                ['l', a.width, 0], \r\n                ['l', 0, a.height], \r\n                ['l', -a.width, 0], \r\n                ['z']\r\n            ]);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var ms = this.graph.matrix.clone().scale(sx, sy, cx, cy),\r\n                ro = this.graph.matrix.rotate();\r\n\r\n            this.reset();\r\n\r\n            var x = ms.x(this.attrs.x, this.attrs.y),\r\n                y = ms.y(this.attrs.x, this.attrs.y),\r\n                w = +this.attrs.width * sx,\r\n                h = +this.attrs.height * sy;\r\n\r\n            this.attr({\r\n                x: x,\r\n                y: y,\r\n                width: w,\r\n                height: h\r\n            });\r\n            \r\n            this.rotate(ro, x, y).commit();\r\n\r\n            return {\r\n                matrix: ms,\r\n                x: x,\r\n                y: y\r\n            };\r\n        },\r\n        toString: function() {\r\n            return 'Graph.svg.Image';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    /**\r\n     * Paper - root viewport\r\n     */\r\n\r\n    var Paper = Graph.svg.Paper = Graph.extend(Graph.svg.Vector, {\r\n\r\n        attrs: {\r\n            'class': Graph.styles.PAPER\r\n        },\r\n\r\n        props: {\r\n            id: null,\r\n            guid: null,\r\n            type: 'paper',\r\n            text: null,\r\n            rotate: 0,\r\n\r\n            traversable: false,\r\n            selectable: false,\r\n            selected: false,\r\n            focusable: false,\r\n\r\n            rendered: false,\r\n            showOrigin: true,\r\n            zoomable: true\r\n        },\r\n\r\n        components: {\r\n            viewport: null\r\n        },\r\n\r\n        drawing: {\r\n            pallets: null,\r\n            diagram: null\r\n        },\r\n\r\n        constructor: function (width, height, options) {\r\n            var me = this;\r\n\r\n            me.superclass.prototype.constructor.call(me, 'svg', {\r\n                'xmlns': Graph.config.xmlns.svg,\r\n                'xmlns:link': Graph.config.xmlns.xlink,\r\n                'version': Graph.config.svg.version\r\n                // 'width': _.defaultTo(width, 200),\r\n                // 'height': _.defaultTo(height, 200)\r\n            });\r\n\r\n            _.assign(me.props, options || {});\r\n\r\n            me.style({\r\n                overflow: 'hidden',\r\n                position: 'relative'\r\n            });\r\n\r\n            me.interactable();\r\n            me.initLayout();\r\n\r\n            me.plugins.collector = new Graph.plugin.Collector(me);\r\n            me.plugins.toolmgr.register('collector', 'plugin');\r\n\r\n            me.plugins.linker = new Graph.plugin.Linker(me);\r\n            me.plugins.toolmgr.register('linker', 'plugin');\r\n\r\n            me.plugins.pencil = new Graph.plugin.Pencil(me);\r\n            me.plugins.definer = new Graph.plugin.Definer(me);\r\n\r\n            me.plugins.snapper = new Graph.plugin.Snapper(me);\r\n            me.plugins.toolpad = new Graph.plugin.Toolpad(me);\r\n\r\n            me.on('pointerdown', _.bind(me.onPointerDown, me));\r\n            me.on('keynavdown', _.bind(me.onKeynavDown, me));\r\n            me.on('keynavup', _.bind(me.onKeynavUp, me));\r\n\r\n            // subscribe topics\r\n            Graph.topic.subscribe('link/update', _.bind(me.listenLinkUpdate, me));\r\n            Graph.topic.subscribe('link/remove', _.bind(me.listenLinkRemove, me));\r\n            Graph.topic.subscribe('shape/draw',  _.bind(me.listenShapeDraw, me));\r\n\r\n            // drawings\r\n            me.drawing.pallets = [];\r\n\r\n            if ( ! Paper.defaultInstance) {\r\n                Paper.defaultInstance = me.guid();\r\n            }\r\n        },\r\n\r\n        initLayout: function() {\r\n            // create viewport\r\n            var viewport = (new Graph.svg.Group())\r\n                .addClass(Graph.styles.VIEWPORT)\r\n                .selectable(false);\r\n\r\n            viewport.props.viewport = true;\r\n\r\n            this.components.viewport = viewport.guid();\r\n\r\n            if (this.props.showOrigin) {\r\n                var origin = Graph.$(\r\n                    '<g class=\"graph-origin\">' +\r\n                        '<rect class=\"x\" rx=\"1\" ry=\"1\" x=\"-16\" y=\"-1\" height=\"1\" width=\"30\"></rect>' +\r\n                        '<rect class=\"y\" rx=\"1\" ry=\"1\" x=\"-1\" y=\"-16\" height=\"30\" width=\"1\"></rect>' +\r\n                        '<text class=\"t\" x=\"-40\" y=\"-10\">(0, 0)</text>' +\r\n                    '</g>'\r\n                );\r\n\r\n                origin.appendTo(viewport.elem);\r\n                origin = null;\r\n            }\r\n\r\n            // render viewport\r\n            viewport.tree.paper = viewport.tree.parent = this.guid();\r\n            // viewport.translate(0.5, 0.5).commit();\r\n\r\n            this.elem.append(viewport.elem);\r\n            this.children().push(viewport);\r\n\r\n            viewport.on('render', function(){\r\n                viewport.cascade(function(c){\r\n                    if (c !== viewport && ! c.props.rendered) {\r\n                        c.props.rendered = true;\r\n                        c.tree.paper = viewport.tree.paper;\r\n                        c.fire('render');\r\n                    }\r\n                });\r\n            });\r\n\r\n            this.layout('default');\r\n        },\r\n\r\n        layout: function(options) {\r\n            var viewport = this.viewport();\r\n\r\n            if (options === undefined) {\r\n                return viewport.graph.layout;\r\n            }\r\n\r\n            viewport.layout(options);\r\n            return this;\r\n        },\r\n\r\n        shape: function(names, options) {\r\n            var shape = Graph.shape(names, options);\r\n            shape.render(this);\r\n\r\n            return shape;\r\n        },\r\n\r\n        render: function(container) {\r\n            var me = this,\r\n                vp = me.viewport(),\r\n                id = me.guid();\r\n\r\n            if (me.props.rendered) {\r\n                return;\r\n            }\r\n\r\n            container = Graph.$(container);\r\n            container.append(me.elem);\r\n\r\n            me.tree.container = container;\r\n\r\n            me.elem.css({\r\n                width: '100%',\r\n                height: '100%'\r\n            });\r\n\r\n            me.props.rendered = true;\r\n            me.fire('render');\r\n\r\n            vp.props.rendered = true;\r\n            vp.fire('render');\r\n\r\n            if (me.props.zoomable) {\r\n                me.zoomable();\r\n\r\n                var debounce = _.debounce(function(){\r\n                    debounce.flush();\r\n                    debounce = null;\r\n\r\n                    me.tool().activate('panzoom');\r\n                }, 1000);\r\n\r\n                debounce();\r\n            }\r\n\r\n            return me;\r\n        },\r\n\r\n        container: function() {\r\n            return this.tree.container;\r\n        },\r\n\r\n        selections: function() {\r\n            return this.plugins.collector.selections;\r\n        },\r\n\r\n        removeSelection: function() {\r\n            var selections = this.plugins.collector.collection;\r\n\r\n            for (var v, i = selections.length - 1; i >= 0; i--) {\r\n                v = selections[i];\r\n                selections.splice(i, 1);\r\n                v.remove();\r\n            }\r\n        },\r\n\r\n        viewport: function() {\r\n            return Graph.registry.vector.get(this.components.viewport);\r\n        },\r\n\r\n        // @Override\r\n        scale: function(sx, sy, cx, cy) {\r\n            if (sx === undefined) {\r\n                return this.viewport().matrix().scale();\r\n            }\r\n            return this.plugins.transformer.scale(sx, sy, cx, cy);\r\n        },\r\n\r\n        width: function() {\r\n            return this.elem.width();\r\n        },\r\n\r\n        height: function() {\r\n            return this.elem.height();\r\n        },\r\n\r\n        connect: function(source, target, start, end, options) {\r\n            var layout, router, link;\r\n\r\n            if (start) {\r\n                if ( ! Graph.isPoint(start)) {\r\n                    options = start;\r\n                    start = null;\r\n                    end = null;\r\n                }\r\n            }\r\n\r\n            source = Graph.isShape(source) ? source.connectable().component() : source;\r\n            target = Graph.isShape(target) ? target.connectable().component() : target;\r\n\r\n            layout = this.layout();\r\n            router = layout.createRouter(source, target, options);\r\n\r\n            link = layout.createLink(router);\r\n\r\n            link.connect(start, end);\r\n            link.render(this);\r\n\r\n            return link;\r\n        },\r\n\r\n        addPallet: function(pallet) {\r\n            var guid = pallet.guid();\r\n            this.drawing.pallets.push(guid);\r\n\r\n            // bind pallet events\r\n            pallet.on({\r\n                drawstart: function(e) {\r\n                    console.log(e.shape);\r\n                    var shape = e.shape,\r\n                        clazz = Graph.ns(shape);\r\n\r\n                    shape = Graph.factory(clazz);\r\n                    console.log(shape);\r\n                },\r\n                drawend: function() {\r\n                    console.log('y');\r\n                }\r\n            });\r\n        },\r\n\r\n        removePallet: function(pallet) {\r\n            var guid = pallet.guid();\r\n            var index = _.indexOf(this.drawing.pallets, guid);\r\n            if (index > -1) {\r\n                this.drawing.pallets.splice(index, 1);\r\n            }\r\n        },\r\n\r\n        parse: function(json) {\r\n            var paper  = this;\r\n            var shapes = {};\r\n\r\n            _.forEach(json.shapes, function(o){\r\n                (function(o){\r\n                    var s = Graph.shape(o.type, o.data);\r\n                    s.render(paper);\r\n                    shapes[o.data.id] = s;\r\n                }(o));\r\n            });\r\n\r\n            _.forEach(json.links, function(o){\r\n                (function(o){\r\n                    paper.connect(shapes[o.source], shapes[o.target]);\r\n                }(o))\r\n            });\r\n\r\n        },\r\n\r\n        save: function() {\r\n            alert('save');\r\n        },\r\n\r\n        diagram: function(type, options) {\r\n            var clazz = Graph.diagram[_.capitalize(type)];\r\n            var diagram = Graph.factory(clazz, options || {});\r\n\r\n            this.drawing.diagram = diagram;\r\n            return diagram;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Paper';\r\n        },\r\n\r\n        ///////// OBSERVERS /////////\r\n\r\n        onPointerDown: function(e) {\r\n\r\n        },\r\n\r\n        onKeynavDown: function(e) {\r\n            var me = this, key = e.keyCode;\r\n\r\n            switch(key) {\r\n                case Graph.event.DELETE:\r\n                    me.removeSelection();\r\n                    e.preventDefault();\r\n                    break;\r\n\r\n                case Graph.event.SHIFT:\r\n\r\n                    break;\r\n\r\n                case Graph.event.ESC:\r\n\r\n                    break;\r\n            }\r\n\r\n        },\r\n\r\n        onKeynavUp: function(e) {\r\n            var me = this, key = e.keyCode;\r\n\r\n            switch(key) {\r\n                case Graph.event.SHIFT:\r\n\r\n                    break;\r\n            }\r\n        },\r\n\r\n        saveAsImage: function(filename) {\r\n            var exporter = new Graph.data.Exporter(this);\r\n            exporter.exportPNG(filename);\r\n            exporter = null;\r\n        },\r\n\r\n        saveAsBlob: function(callback) {\r\n            var exporter = new Graph.data.Exporter(this);\r\n            return exporter.exportBlob(callback);\r\n        },\r\n\r\n        /**\r\n         * save workspace\r\n         */\r\n        save: function() {\r\n\r\n        },\r\n\r\n        ///////// TOPIC LISTENERS /////////\r\n\r\n        listenLinkUpdate: _.debounce(function() {\r\n            this.layout().arrangeLinks();\r\n        }, 300),\r\n\r\n        listenLinkRemove: _.debounce(function(){\r\n            this.layout().arrangeLinks();\r\n        }, 10),\r\n\r\n        listenShapeDraw: _.debounce(function() {\r\n            this.layout().arrangeShapes();\r\n        }, 1)\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n    Paper.defaultInstance = null;\r\n    \r\n    Paper.getDefaultInstance = function() {\r\n        return Graph.registry.vector.get(Paper.defaultInstance);\r\n    };\r\n\r\n    ///////// EXTENSIONS /////////\r\n\r\n    var vectors = {\r\n        ellipse: 'Ellipse',\r\n        circle: 'Circle',\r\n        rect: 'Rect',\r\n        path: 'Path',\r\n        polyline: 'Polyline',\r\n        polygon: 'Polygon',\r\n        group: 'Group',\r\n        text: 'Text',\r\n        image: 'Image',\r\n        line: 'Line'\r\n    };\r\n\r\n    _.forOwn(vectors, function(name, method){\r\n        (function(name, method){\r\n            Paper.prototype[method] = function() {\r\n                var arg = [name].concat(_.toArray(arguments)),\r\n                    svg = Graph.svg.apply(null, arg);\r\n\r\n                svg.tree.paper = this.guid();\r\n                svg.render(this);\r\n\r\n                arg = null;\r\n                return svg;\r\n            };\r\n        }(name, method));\r\n    });\r\n\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var Link = Graph.link.Link = Graph.extend({\r\n\r\n        props: {\r\n            id: null,\r\n            guid: null,\r\n            rendered: false,\r\n            selected: false,\r\n            label: '',\r\n            labelDistance: null,\r\n            labelX: null,\r\n            labelY: null,\r\n            source: null,\r\n            target: null,\r\n            connected: false\r\n        },\r\n\r\n        components: {\r\n            block: null,\r\n            coat: null,\r\n            path: null,\r\n            label: null,\r\n            editor: null\r\n        },\r\n\r\n        cached: {\r\n            bendpoints: null,\r\n            controls: null,\r\n            convex: null\r\n        },\r\n\r\n        handlers: {\r\n            source: null,\r\n            target: null\r\n        },\r\n\r\n        router: null,\r\n\r\n        metadata: {\r\n            icon: Graph.icons.SHAPE_LINK\r\n        },\r\n\r\n        constructor: function(router, options) {\r\n            options = _.extend({\r\n                id: 'graph-link-' + (++Link.guid)\r\n            }, options || {});\r\n\r\n            _.assign(this.props, options);\r\n\r\n            this.props.guid = this.props.id; // Graph.uuid();\r\n            this.router = router;\r\n\r\n            this.initComponent();\r\n            this.initMetadata();\r\n\r\n            this.bindResource('source', router.source());\r\n            this.bindResource('target', router.target());\r\n\r\n            this.router.on('route', _.bind(this.onRouterRoute, this));\r\n            this.router.on('reroute', _.bind(this.onRouterReroute, this));\r\n\r\n            Graph.registry.link.register(this);\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components;\r\n            var block, coat, path, editor, label;\r\n\r\n            block = (new Graph.svg.Group())\r\n                .addClass('graph-link')\r\n                .selectable(false);\r\n\r\n            block.elem.data(Graph.string.ID_LINK, this.props.guid);\r\n\r\n            coat = (new Graph.svg.Path())\r\n                .addClass('graph-link-coat')\r\n                .render(block);\r\n\r\n            coat.data('text', this.props.label);\r\n            coat.elem.data(Graph.string.ID_LINK, this.props.guid);\r\n\r\n            coat.draggable({\r\n                ghost: true,\r\n                manual: true,\r\n                batchSync: false\r\n            });\r\n\r\n            coat.editable({\r\n                width: 150,\r\n                height: 80,\r\n                offset: 'pointer'\r\n            });\r\n\r\n            coat.on('pointerdown.link', _.bind(this.onCoatClick, this));\r\n            coat.on('select.link', _.bind(this.onCoatSelect, this));\r\n            coat.on('deselect.link', _.bind(this.onCoatDeselect, this));\r\n            coat.on('dragstart.link', _.bind(this.onCoatDragStart, this));\r\n            coat.on('dragend.link', _.bind(this.onCoatDragEnd, this));\r\n            coat.on('edit.link', _.bind(this.onCoatEdit, this));\r\n            coat.on('beforeedit.link', _.bind(this.onCoatBeforeEdit, this));\r\n            coat.on('remove.link', _.bind(this.onCoatRemove, this));\r\n\r\n            path = (new Graph.svg.Path())\r\n                .addClass('graph-link-path')\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .attr('marker-end', 'url(#marker-arrow)')\r\n                .render(block);\r\n\r\n            path.elem.data(Graph.string.ID_LINK, this.props.guid);\r\n\r\n            label = (new Graph.svg.Text(0, 0, ''))\r\n                .addClass('graph-link-label')\r\n                .selectable(false)\r\n                .render(block);\r\n\r\n            label.draggable({ghost: true});\r\n\r\n            label.on('render.link', _.bind(this.onLabelRender, this));\r\n            label.on('dragend.link', _.bind(this.onLabelDragend, this));\r\n\r\n            // enable label doubletap\r\n            var labelVendor = label.interactable().vendor();\r\n            labelVendor.on('doubletap', _.bind(this.onLabelDoubletap, this));\r\n\r\n            editor = (new Graph.svg.Group())\r\n                .selectable(false)\r\n                .render(block);\r\n\r\n            comp.block = block.guid();\r\n            comp.coat = coat.guid();\r\n            comp.path = path.guid();\r\n            comp.label = label.guid();\r\n            comp.editor = editor.guid();\r\n        },\r\n\r\n        initMetadata: function() {\r\n            this.metadata.tools = [\r\n                {\r\n                    name: 'sendtofront',\r\n                    icon: Graph.icons.SEND_TO_FRONT,\r\n                    title: Graph._('Send to front'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onFrontToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtoback',\r\n                    icon: Graph.icons.SEND_TO_BACK,\r\n                    title: Graph._('Send to back'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBackToolClick, this)\r\n                },\r\n                {\r\n                    name: 'trash',\r\n                    icon: Graph.icons.TRASH,\r\n                    title: Graph._('Click to remove link'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onTrashToolClick, this)\r\n                }\r\n            ];\r\n        },\r\n\r\n        unbindResource: function(type) {\r\n            var existing = this.props[type],\r\n                handlers = this.handlers[type];\r\n\r\n            if (existing && handlers) {\r\n                existing = Graph.registry.vector.get(existing);\r\n                if (existing) {\r\n                    var name, ns;\r\n                    for (name in handlers) {\r\n                        ns = name + '.link';\r\n                        existing.off(ns, handlers[name]);\r\n                        ns = null;\r\n                    }\r\n                }\r\n            }\r\n\r\n            handlers = null;\r\n\r\n            return this;\r\n        },\r\n\r\n        bindResource: function(type, resource) {\r\n            var router = this.router,\r\n                handlers = this.handlers[type];\r\n\r\n            this.unbindResource(type, resource);\r\n\r\n            handlers = {};\r\n\r\n            handlers.resize    = _.bind(getHandler(this, type, 'resize'), this);\r\n            handlers.rotate    = _.bind(getHandler(this, type, 'rotate'), this);\r\n            handlers.dragstart = _.bind(getHandler(this, type, 'dragstart'), this, _, resource);\r\n            handlers.dragmove  = _.bind(getHandler(this, type, 'dragmove'), this);\r\n            handlers.dragend   = _.bind(getHandler(this, type, 'dragend'), this);\r\n\r\n            this.handlers[type] = handlers;\r\n            this.props[type] = resource.guid();\r\n\r\n            resource.on('resize.link', handlers.resize);\r\n            resource.on('rotate.link', handlers.rotate);\r\n\r\n            // VERY EXPENSIVE!!!\r\n            if (resource.isDraggable()) {\r\n                resource.on('dragstart.link', handlers.dragstart);\r\n                if ( ! resource.draggable().ghost()) {\r\n                    resource.on('dragmove.link', handlers.dragmove);\r\n                } else {\r\n                    resource.on('dragend.link', handlers.dragend);\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        bindSource: function(source) {\r\n            return this.bindResource('source', source);\r\n        },\r\n\r\n        bindTarget: function(target) {\r\n            return this.bindResource('target', target);\r\n        },\r\n\r\n        unbindSource: function(source) {\r\n            return this.unbindResource('source');\r\n        },\r\n\r\n        unbindTarget: function(target) {\r\n            return this.unbindResource('target');\r\n        },\r\n\r\n        component: function(name) {\r\n            if (name === undefined) {\r\n                return Graph.registry.vector.get(this.components.block);\r\n            }\r\n            return Graph.registry.vector.get(this.components[name]);\r\n        },\r\n\r\n        invalidate: function() {\r\n            this.cached.bendpoints = null;\r\n        },\r\n\r\n        render: function(container) {\r\n            var paper;\r\n\r\n            this.component().render(container);\r\n            paper = container.paper();\r\n\r\n            if (paper) {\r\n                Graph.registry.link.setContext(this.guid(), paper.guid());\r\n            }\r\n        },\r\n\r\n        id: function() {\r\n            return this.props.id;\r\n        },\r\n\r\n        guid: function() {\r\n            return this.props.guid;\r\n        },\r\n\r\n        connect: function(/*start, end*/) {\r\n            // already connected ?\r\n            if (this.props.connected) {\r\n                return;\r\n            }\r\n\r\n            this.router.route();\r\n\r\n            var source = this.router.source(),\r\n                target = this.router.target();\r\n\r\n            source.connectable().addLink(this, 'outgoing', target);\r\n            target.connectable().addLink(this, 'incoming', source);\r\n\r\n            this.props.connected = true;\r\n        },\r\n\r\n        disconnect: function() {\r\n            // already disconnected ?\r\n            if ( ! this.props.connected) {\r\n                return;\r\n            }\r\n\r\n            // unbind resource\r\n            // this.unbindResource('source');\r\n            // sthis.unbindResource('target');\r\n\r\n            this.props.connected = false;\r\n            this.router.reset();\r\n            this.update(this.router.command());\r\n        },\r\n\r\n        update: function(command, silent) {\r\n\r\n            silent = _.defaultTo(silent, false);\r\n\r\n            this.component('coat').attr('d', command).dirty(true);\r\n            this.component('path').attr('d', command);\r\n            this.invalidate();\r\n\r\n            if ( ! silent) {\r\n                this.redraw();\r\n                this.fire('update');\r\n                Graph.topic.publish('link/update');\r\n            }\r\n        },\r\n\r\n        refresh: function(silent) {\r\n            var command = this.router.command();\r\n            this.update(command, silent);\r\n        },\r\n\r\n        updateConvex: function(convex) {\r\n            this.cached.convex = convex;\r\n        },\r\n\r\n        removeConvex: function() {\r\n            this.cached.convex = null;\r\n        },\r\n\r\n        redraw: function() {\r\n            // TODO: update label position\r\n\r\n            if (this.props.label) {\r\n                var label = this.component('label'),\r\n                    bound = label.bbox().toJson(),\r\n                    distance = this.props.labelDistance || .5,\r\n                    scale = this.router.layout().scale(),\r\n                    path = this.router.path(),\r\n                    dots = path.pointAt(distance * path.length(), true),\r\n                    align = Graph.util.pointAlign(dots.start, dots.end, 10);\r\n\r\n                if (align == 'h') {\r\n                    dots.x += ((10 + bound.width / 2) / scale.x);\r\n                } else {\r\n                    dots.y -= ((10 + bound.height / 2) / scale.y);\r\n                }\r\n\r\n                label.attr({\r\n                    x: dots.x,\r\n                    y: dots.y\r\n                });\r\n\r\n                path = null;\r\n                dots = null;\r\n\r\n                label.dirty(true);\r\n            }\r\n\r\n        },\r\n\r\n        label: function(text, x, y) {\r\n            var path, distance, point, align;\r\n\r\n            if (text === undefined) {\r\n                return this.props.label;\r\n            }\r\n\r\n            this.props.label = text;\r\n\r\n            if (x !== undefined && y !== undefined) {\r\n                path = this.router.path();\r\n                point = path.nearest({x: x, y: y});\r\n                distance = point.distance / path.length();\r\n            } else if (_.isNull(this.props.labelDistance)) {\r\n                path = this.router.path();\r\n                distance = 0.5;\r\n                point = path.pointAt(path.length() / 2, true);\r\n            }\r\n\r\n            if (point) {\r\n                this.props.labelDistance = distance;\r\n                path = point = null;\r\n            }\r\n\r\n            this.component('label').write(text);\r\n            this.component('coat').data('text', text);\r\n\r\n            this.redraw();\r\n            return this;\r\n        },\r\n\r\n        select: function(batch) {\r\n            this.props.selected = true;\r\n            this.component('block').addClass('selected');\r\n\r\n            if ( ! batch) {\r\n                //this.sendToFront();\r\n                this.resumeControl();\r\n\r\n                Graph.topic.publish('link/select', {link: this});\r\n            }\r\n        },\r\n\r\n        deselect: function(batch) {\r\n            this.props.selected = false;\r\n            this.component('block').removeClass('selected');\r\n\r\n            if ( ! batch) {\r\n                this.suspendControl();\r\n                Graph.topic.publish('link/deselect', {link: this});\r\n            }\r\n        },\r\n\r\n        renderControl: function() {\r\n            // TODO: render bends control\r\n        },\r\n\r\n        resumeControl: function() {\r\n            var me = this, editor = me.component('editor');\r\n\r\n            if ( ! me.cached.bendpoints) {\r\n                me.cached.bendpoints = me.router.bendpoints();\r\n                me.renderControl();\r\n            }\r\n\r\n            editor.elem.appendTo(this.component('block').elem);\r\n        },\r\n\r\n        suspendControl: function() {\r\n            this.component('editor').elem.detach();\r\n        },\r\n\r\n        sendToFront: function() {\r\n            var container = this.component().parent();\r\n            this.component().elem.appendTo(container.elem);\r\n        },\r\n\r\n        remove: function() {\r\n            var me = this;\r\n            var prop;\r\n\r\n            // disconnect first\r\n            this.disconnect();\r\n\r\n            // remove from source & target\r\n            var source = this.router.source(),\r\n                target = this.router.target();\r\n\r\n            source.connectable().removeLink(this);\r\n            target.connectable().removeLink(this);\r\n\r\n            // remove label\r\n            me.component('label').remove();\r\n\r\n            // remove vertexs\r\n            if (me.cached.controls) {\r\n                _.forEach(me.cached.controls, function(id){\r\n                    var c = Graph.registry.vector.get(id);\r\n                    c && c.remove();\r\n                });\r\n                me.cached.controls = null;\r\n            }\r\n\r\n            // remove editor\r\n            me.component('editor').remove();\r\n\r\n            // remove path\r\n            me.component('path').remove();\r\n\r\n            // remove block\r\n            me.component('block').remove();\r\n\r\n            for (prop in me.components) {\r\n                me.components[prop] = null;\r\n            }\r\n\r\n            // unbind resource\r\n            this.unbindSource();\r\n            this.unbindTarget();\r\n\r\n            // clear cache\r\n            for (prop in me.cached) {\r\n                me.cached[prop] = null;\r\n            }\r\n\r\n            me.router.destroy();\r\n            me.router = null;\r\n\r\n            // unregister\r\n            Graph.registry.link.unregister(me);\r\n\r\n            // publish\r\n            Graph.topic.publish('link/remove');\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.link.Link';\r\n        },\r\n\r\n        ///////// OBSERVERS /////////\r\n\r\n        onRouterRoute: function(e) {\r\n            var command = e.command;\r\n            this.update(command);\r\n        },\r\n\r\n        onRouterReroute: function(e) {\r\n            var source = e.source,\r\n                target = e.target;\r\n\r\n            this.bindResource('source', source);\r\n            this.bindResource('target', target);\r\n            this.sendToFront();\r\n        },\r\n\r\n        onLabelRender: function(e) {\r\n            if (this.props.label) {\r\n                this.label(this.props.label);\r\n            }\r\n        },\r\n\r\n        onLabelDragend: function(e) {\r\n            var label = this.component('label'),\r\n                matrix = label.matrix(),\r\n                x = label.attrs.x,\r\n                y = label.attrs.y,\r\n                p = {\r\n                    x: matrix.x(x, y),\r\n                    y: matrix.y(x, y)\r\n                }\r\n\r\n            label.attr({\r\n                x: p.x,\r\n                y: p.y\r\n            });\r\n\r\n            // update label distance\r\n            var path = this.router.path(),\r\n                near = path.nearest(p);\r\n\r\n            this.props.labelDistance = near.distance / path.length();\r\n\r\n            label.reset();\r\n\r\n            matrix = path = null;\r\n        },\r\n\r\n        onLabelDoubletap: function(e) {\r\n            var coat = this.component('coat');\r\n            coat.editable().startEdit(e);\r\n        },\r\n\r\n        onCoatBeforeEdit: function(e) {\r\n            this.component('label').hide();\r\n            this.component().addClass('editing');\r\n        },\r\n\r\n        onCoatEdit: function(e) {\r\n            this.component().removeClass('editing');\r\n            this.component('label').show();\r\n            this.label(e.text, e.left, e.top);\r\n        },\r\n\r\n        onCoatClick: function(e) {\r\n            var paper = this.component('coat').paper();\r\n            if (paper.state() == 'linking') {\r\n                paper.tool().activate('panzoom');\r\n            }\r\n        },\r\n\r\n        onCoatSelect: function(e) {\r\n            this.select(e.batch);\r\n        },\r\n\r\n        onCoatDeselect: function(e) {\r\n            this.deselect(e.batch);\r\n        },\r\n\r\n        onCoatDragStart: function(e) {\r\n            this.suspendControl();\r\n        },\r\n\r\n        onCoatDragEnd: function(e) {\r\n            var dx = e.dx,\r\n                dy = e.dy;\r\n            this.router.relocate(dx, dy);\r\n            this.update(this.router.command());\r\n        },\r\n\r\n        onCoatRemove: function(e) {\r\n            this.remove();\r\n        },\r\n\r\n        ///////// OBSERVERS /////////\r\n\r\n        onSourceRotate: function() {\r\n\r\n        },\r\n\r\n        onSourceDragstart: function(e, source) {\r\n            var lasso = this.component('coat').lasso;\r\n\r\n            if ( ! source.lasso) {\r\n                if (lasso) {\r\n                    lasso.decollect(this.component('coat'));\r\n                }\r\n            }\r\n\r\n            // remove convex\r\n            this.cached.convex = null;\r\n        },\r\n\r\n        onSourceDragmove: function() {\r\n            this.router.repair('source');\r\n        },\r\n\r\n        onSourceDragend: function(e) {\r\n            var lasso = this.component('coat').lasso;\r\n            if ( ! lasso) {\r\n                var port = this.router.tail();\r\n                if (port) {\r\n                    port.x += e.dx;\r\n                    port.y += e.dy;\r\n                    this.router.repair(this.router.source(), port);\r\n                }\r\n            }\r\n        },\r\n\r\n        onSourceResize: function(e) {\r\n            var port = this.router.tail();\r\n            if (port) {\r\n                port.x += e.translate.dx;\r\n                port.y += e.translate.dy;\r\n\r\n                this.router.repair(this.router.source(), port);\r\n            }\r\n        },\r\n\r\n        onTargetRotate: function() {\r\n\r\n        },\r\n\r\n        onTargetDragstart: function(e, target) {\r\n            var lasso = this.component('coat').lasso;\r\n\r\n            if ( ! target.lasso) {\r\n                if (lasso) {\r\n                    lasso.decollect(this.component('coat'));\r\n                }\r\n            }\r\n\r\n            // remove convex\r\n            this.cached.convex = null;\r\n        },\r\n\r\n        onTargetDragmove: function() {\r\n            this.router.repair('target');\r\n        },\r\n\r\n        onTargetDragend: function(e) {\r\n            var lasso = this.component('coat').lasso;\r\n            if ( ! lasso) {\r\n                var port = this.router.head();\r\n                if (port) {\r\n                    port.x += e.dx;\r\n                    port.y += e.dy;\r\n\r\n                    this.router.repair(this.router.target(), port);\r\n                }\r\n            }\r\n        },\r\n\r\n        onTargetResize: function(e) {\r\n            var port = this.router.head();\r\n            if (port) {\r\n                port.x += e.translate.dx;\r\n                port.y += e.translate.dy;\r\n\r\n                this.router.repair(this.router.target(), port);\r\n            }\r\n        },\r\n\r\n        onTrashToolClick: function(e) {\r\n            this.component('coat').remove();\r\n        },\r\n\r\n        onFrontToolClick: function(e) {\r\n            this.sendToFront();\r\n        },\r\n\r\n        onBackToolClick: function(e) {\r\n\r\n        },\r\n\r\n        destroy: function() {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n    Link.guid = 0;\r\n\r\n    ///////// HELPERS /////////\r\n\r\n    function getHandler(scope, resource, handler) {\r\n        var name = 'on' + _.capitalize(resource) + _.capitalize(handler),\r\n            func = scope[name];\r\n        name = null;\r\n        return func;\r\n    }\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var storage = {};\r\n\r\n    var Registry = function() {\r\n        \r\n    };\r\n    \r\n    Registry.prototype.constructor = Registry;\r\n\r\n    Registry.prototype.register = function(pallet) {\r\n        var id = pallet.guid();\r\n        storage[id] = pallet;\r\n    };\r\n\r\n    Registry.prototype.unregister = function(pallet) {\r\n        var id = pallet.guid();\r\n        if (storage[id]) {\r\n            delete storage[id];\r\n        }\r\n    };\r\n\r\n    Registry.prototype.get = function(key) {\r\n        if (key === undefined) {\r\n            return this.toArray();\r\n        }\r\n        return storage[key];\r\n    };\r\n\r\n    Registry.prototype.toArray = function() {\r\n        var keys = _.keys(storage);\r\n        return _.map(keys, function(k){\r\n            return storage[k];\r\n        });\r\n    };\r\n\r\n    Registry.prototype.toString = function() {\r\n        return 'Graph.registry.Pallet';\r\n    };\r\n\r\n    Graph.registry.pallet = new Registry();\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.layout.Layout = Graph.extend({\r\n        \r\n        props: {\r\n            // view config\r\n            fit: true,\r\n            view: null,\r\n            width: 0,\r\n            height: 0,\r\n\r\n            // router config\r\n            router: {\r\n                type: 'orthogonal'\r\n            },\r\n\r\n            link: {\r\n                smooth: true,\r\n                smootness: 6\r\n            }\r\n        },\r\n        \r\n        view: null,\r\n\r\n        cached: {\r\n            offset: null\r\n        },\r\n\r\n        constructor: function(view, options) {\r\n            _.assign(this.props, options || {});\r\n            this.props.view = view.guid();\r\n        },\r\n\r\n        view: function() {\r\n            return Graph.registry.vector.get(this.props.view);\r\n        },\r\n\r\n        paper: function() {\r\n            return this.view().paper();\r\n        },\r\n\r\n        offset: function() {\r\n            var offset = this.cached.offset;\r\n            var view, node;\r\n\r\n            if ( ! offset) {\r\n                view = this.view();\r\n                node = view.isViewport() ? view.parent().node() : view.node();\r\n                offset = node.getBoundingClientRect();\r\n                this.cached.offset = offset;\r\n            }\r\n\r\n            return offset;\r\n        },\r\n\r\n        center: function() {\r\n            var center = this.cached.center;\r\n\r\n            if ( ! center) {\r\n                var offset = this.offset();\r\n\r\n                center = {\r\n                    x: offset.width / 2,\r\n                    y: offset.height / 2\r\n                };\r\n\r\n                this.cached.center = _.extend({}, center);\r\n            }\r\n\r\n            return center;\r\n        },\r\n\r\n        scale: function() {\r\n            return this.view().matrix().scale();\r\n        },\r\n\r\n        width: function() {\r\n            var view, bbox, width;\r\n\r\n            view = this.view();\r\n\r\n            if (view.isViewport()) {\r\n                width = this.paper().width();\r\n            } else {\r\n                bbox  = view.bbox();\r\n                width = bbox.width();\r\n            }\r\n\r\n            view = bbox = null;\r\n            return width;\r\n        },\r\n\r\n        height: function() {\r\n            var view, bbox, height;\r\n\r\n            view = this.view();\r\n\r\n            if (view.isViewport()) {\r\n                height = this.paper().height();\r\n            } else {\r\n                bbox   = view.bbox();\r\n                height = bbox.height();\r\n            }\r\n\r\n            view = bbox = null;\r\n            return height;\r\n        },\r\n        \r\n        invalidate: function() {\r\n            this.cached.offset = null;\r\n            this.cached.center = null;\r\n        },\r\n\r\n        grabVector: function(event) {\r\n            return Graph.registry.vector.get(event.target);\r\n        },\r\n\r\n        grabLink: function(event) {\r\n            return Graph.registry.link.get(event.target);\r\n        },\r\n\r\n        grabLocation: function(event) {\r\n            var x = event.clientX,\r\n                y = event.clientY,\r\n                offset = this.offset(),\r\n                matrix = this.view().matrix(),\r\n                invert = matrix.clone().invert(),\r\n                scale  = matrix.scale(),\r\n                location = {\r\n                    x: invert.x(x, y),\r\n                    y: invert.y(x, y)\r\n                };\r\n\r\n            location.x -= offset.left / scale.x;\r\n            location.y -= offset.top / scale.y;\r\n\r\n            matrix = invert = null;\r\n\r\n            return location;\r\n        },\r\n\r\n        dragSnapping: function() {\r\n            return {\r\n                mode: 'anchor',\r\n                x: 1,\r\n                y: 1\r\n            };\r\n        },\r\n        \r\n        createRouter: function(source, target, options) {\r\n            var clazz, router;\r\n\r\n            clazz   = Graph.router[_.capitalize(this.props.router.type)];\r\n            options = _.extend({}, this.props.router, options || {});\r\n            router  = Graph.factory(clazz, [this.view(), source, target, options]);\r\n\r\n            return router;\r\n        },\r\n\r\n        createLink: function(router, options) {\r\n            var clazz, link;\r\n\r\n            clazz   = Graph.link[_.capitalize(this.props.router.type)];\r\n            options = _.extend({}, this.props.link, options || {});\r\n            link    = Graph.factory(clazz, [router, options]);\r\n\r\n            return link;\r\n        },\r\n\r\n        refresh: function(vector) {\r\n            this.fire('refresh');\r\n        },\r\n\r\n        arrangeLinks: function() {\r\n            var scope = this.view().paper().guid(),\r\n                links = Graph.registry.link.collect(scope);\r\n            \r\n            if (links.length) {\r\n                \r\n                var inspect = [];\r\n                \r\n                _.forEach(links, function(link){\r\n                    if (link.cached.convex) {\r\n                        inspect.push(link.guid());\r\n                    }\r\n                });\r\n                \r\n                // TODO: research for sweepline algorithm\r\n                \r\n                var sweeper = new Graph.util.Sweeplink(links),\r\n                    convex = sweeper.findConvex();\r\n                \r\n                var key, link, idx;\r\n                \r\n                for (key in convex) {\r\n                    link = Graph.registry.link.get(key);\r\n                    \r\n                    link.updateConvex(convex[key]);\r\n                    link.refresh(true);\r\n                    \r\n                    idx = _.indexOf(inspect, key);\r\n                    \r\n                    if (idx > -1) {\r\n                        inspect.splice(idx, 1);\r\n                    }\r\n                }\r\n                \r\n                if (inspect.length) {\r\n                    _.forEach(inspect, function(key){\r\n                        var link = Graph.registry.link.get(key);\r\n                        \r\n                        link.removeConvex();\r\n                        link.refresh(true);\r\n                    });\r\n                }\r\n                \r\n                sweeper.destroy();\r\n                sweeper = null;\r\n            }\r\n        },\r\n\r\n        arrangeShapes: function() {\r\n            \r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.layout.Layout';\r\n        }\r\n        \r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.shape.activity.Router = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'Route',\r\n            width: 100,\r\n            height: 100,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            name: 'activity.router',\r\n            icon: Graph.icons.SHAPE_ROUTER,\r\n            style: 'graph-shape-activity-router'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, label;\r\n\r\n            var points = [\r\n                this.props.width / 2, 0,\r\n                this.props.width, this.props.height / 2,\r\n                this.props.width / 2, this.props.height,\r\n                0, this.props.height / 2\r\n            ];\r\n\r\n            var cx = points[0],\r\n                cy = points[3];\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Polygon(points))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .data('text', this.props.label)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n            \r\n            pmgr.install('dragger', block, {ghost: true, dragClass: Graph.styles.SHAPE_DRAG});\r\n            pmgr.install('resizer', block);\r\n            pmgr.install('editor',  block);\r\n            pmgr.install('network', block, {wiring: 'h:v'});\r\n            pmgr.install('snapper', block);\r\n\r\n            block.on('edit.shape',      _.bind(this.onLabelEdit, this));\r\n            block.on('dragstart.shape', _.bind(this.onDragStart, this));\r\n            block.on('dragend.shape',   _.bind(this.onDragEnd, this));\r\n            block.on('resize.shape',    _.bind(this.onResize, this));\r\n            block.on('remove.shape',    _.bind(this.onRemove, this));\r\n            block.on('select.shape',    _.bind(this.onSelect, this));\r\n            block.on('deselect.shape',  _.bind(this.onDeselect, this));\r\n\r\n            label = (new Graph.svg.Text(cx, cy, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n\r\n            shape = block = label = null;\r\n        },\r\n\r\n        redraw: function() {\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                label = this.component('label');\r\n\r\n            var bound, matrix;\r\n\r\n            bound = block.bbox().toJson();\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            var points = [\r\n                bound.width / 2, 0,\r\n                bound.width, bound.height / 2,\r\n                bound.width / 2, bound.height,\r\n                0, bound.height / 2\r\n            ];\r\n\r\n            block.attr({\r\n                points: _.join(points, ',')\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            label.attr({\r\n                x: bound.width  / 2,\r\n                y: bound.height / 2\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n            // update props\r\n\r\n            matrix = shape.matrix();\r\n\r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            matrix = null;\r\n            bound  = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Router';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n    \r\n    var Link = Graph.link.Link;\r\n    \r\n    Graph.link.Directed = Graph.extend(Link, {\r\n        \r\n        renderControl: function() {\r\n            var me = this, editor = me.component('editor');\r\n\r\n            if (me.cached.controls) {\r\n                _.forEach(me.cached.controls, function(c){\r\n                    c = Graph.registry.vector.get(c);\r\n                    c.remove();\r\n                });\r\n                me.cached.controls = null;\r\n            }\r\n\r\n            var points = this.cached.bendpoints,\r\n                maxlen = points.length - 1,\r\n                linkid = me.guid(),\r\n                controls = [];\r\n\r\n            _.forEach(points, function(dot, i){\r\n                \r\n                var control = (new Graph.svg.Image(\r\n                    Graph.config.base + 'img/resize-control.png',\r\n                    dot.x - 17 / 2,\r\n                    dot.y - 17 / 2,\r\n                    17,\r\n                    17\r\n                ));\r\n                \r\n                control.selectable(false);\r\n                control.removeClass(Graph.styles.VECTOR);\r\n                \r\n                if (i === 0) {\r\n                    control.addClass(Graph.styles.LINK_TAIL);\r\n                    control.elem.data('pole', 'tail');\r\n                } else if (i === maxlen) {\r\n                    control.addClass(Graph.styles.LINK_HEAD);\r\n                    control.elem.data('pole', 'head');\r\n                }\r\n                \r\n                control.elem.group('graph-link');\r\n                control.elem.data(Graph.string.ID_LINK, linkid);\r\n                \r\n                var context = {\r\n                    trans: (i === 0 || i === maxlen) ? 'CONNECT' : 'BENDING',\r\n                    index: dot.index,\r\n                    space: dot.space,\r\n                    point: {\r\n                        x: dot.x,\r\n                        y: dot.y\r\n                    },\r\n                    event: {\r\n                        x: dot.x,\r\n                        y: dot.y\r\n                    },\r\n                    range: {\r\n                        start: dot.range[0],\r\n                        end:   dot.range[1]\r\n                    },\r\n                    delta: {\r\n                        x: 0,\r\n                        y: 0\r\n                    },\r\n                    snap: {\r\n                        hor: [],\r\n                        ver: []\r\n                    }\r\n                };\r\n                \r\n                control.draggable();\r\n                control.cursor('default');\r\n                \r\n                control.on('dragstart', _.bind(me.onControlStart, me, _, context, control));\r\n                control.on('dragmove',  _.bind(me.onControlMove,  me, _, context, control));\r\n                control.on('dragend',   _.bind(me.onControlEnd,   me, _, context, control));\r\n                \r\n                control.render(editor);\r\n                controls.push(control.guid());\r\n            });\r\n            \r\n            me.cached.controls = controls;\r\n            controls = null;\r\n        },\r\n        \r\n        onControlStart: function(e, context, control) {\r\n            this.router.initTrans(context);\r\n            \r\n            if (context.trans == 'CONNECT') {\r\n                var paper = this.component().paper();\r\n                if (paper) {\r\n                    paper.addClass('linking');\r\n                }\r\n            }\r\n\r\n            var snaphor = context.snap.hor,\r\n                snapver = context.snap.ver;\r\n            \r\n            control.draggable().snap([\r\n                function(x, y){\r\n                    var sx = Graph.util.snapValue(x, snapver),\r\n                        sy = Graph.util.snapValue(y, snaphor);\r\n                    \r\n                    return {\r\n                        x: sx,\r\n                        y: sy,\r\n                        range: 10\r\n                    };\r\n                }\r\n            ]);\r\n            \r\n            _.forEach(this.cached.controls, function(id){\r\n                var c = Graph.registry.vector.get(id);\r\n                if (c && c !== control) {\r\n                    c.hide();\r\n                }\r\n            });\r\n            \r\n            control.show();\r\n        },\r\n        \r\n        onControlMove: function(e, context, control) {\r\n            var me = this;\r\n            \r\n            context.delta.x += e.dx;\r\n            context.delta.y += e.dy;\r\n            \r\n            var x1, y1, x2, y2;\r\n            \r\n            x1 = context.event.x,\r\n            y1 = context.event.y;\r\n            \r\n            if (context.trans == 'BENDING') {\r\n                me.router.bending(context, function(result){\r\n                    me.update(result.command, true);\r\n                });\r\n            } else {\r\n                me.router.connecting(context, function(result){\r\n                    me.update(result.command, true);\r\n                });\r\n            }\r\n            \r\n            x2 = context.event.x,\r\n            y2 = context.event.y;\r\n            \r\n            // update dragger\r\n            e.originalData.dx = (x2 - x1);\r\n            e.originalData.dy = (y2 - y1);\r\n        },\r\n        \r\n        onControlEnd: function(e, context, control) {\r\n            this.router.stopTrans(context);\r\n\r\n            if (context.trans == 'CONNECT') {\r\n                var paper = this.component().paper();\r\n                if (paper) {\r\n                    paper.removeClass('linking');\r\n                }\r\n            }\r\n\r\n            this.update(this.router.command());\r\n            this.invalidate();\r\n            this.resumeControl();\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.link.Orthogonal = Graph.extend(Graph.link.Link, {\r\n        \r\n        update: function(command, silent) {\r\n            var convex, smooth, radius, routes, maxlen, segments;\r\n            \r\n            silent = _.defaultTo(silent, false);\r\n            \r\n            convex = this.cached.convex;\r\n            smooth = this.props.smooth;\r\n            \r\n            if (convex) {\r\n                var points = this.router.waypoints();\r\n\r\n                if ( ! points) {\r\n                    return;\r\n                }\r\n\r\n                routes = points.slice();\r\n                maxlen = routes.length - 1;\r\n\r\n                segments = [];\r\n                \r\n                _.forEach(routes, function(curr, i){\r\n                    var prev = curr,\r\n                        next = routes[i + 1];\r\n                        \r\n                    var item;\r\n                    \r\n                    if (i === 0) {\r\n                        item = ['M', curr.x, curr.y];\r\n                    } else {\r\n                        item = ['L', curr.x, curr.y];\r\n                    }\r\n                    \r\n                    segments.push(item);\r\n\r\n                    if (convex[i]) {\r\n                        _.forEach(convex[i], function(c){\r\n                            var conseg = Graph.util.convexSegment(c, prev, next);\r\n                            if (conseg) {\r\n                                segments.push(conseg[0], conseg[1]);\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                command = Graph.util.segments2path(segments);\r\n            }\r\n            \r\n            if (smooth) {\r\n                radius = this.props.smootness || 6;\r\n                segments = segments || Graph.util.path2segments(command).slice();\r\n                \r\n                var item, prev, next, curr, i;\r\n                var bend;\r\n                \r\n                for (i = 0; i < segments.length; i++) {\r\n                    item = segments[i];\r\n                    next = segments[i + 1];\r\n                    \r\n                    bend = !!(item[0] == 'L' && next && next[0] != 'Q');\r\n                    \r\n                    if (bend) {\r\n                        curr = {\r\n                            x: item[item.length - 2],\r\n                            y: item[item.length - 1]\r\n                        };\r\n                        \r\n                        prev = segments[i - 1];\r\n                        \r\n                        if (prev && next) {\r\n                            var ss = Graph.util.smoothSegment(\r\n                                curr, \r\n                                { x: prev[prev.length - 2], y: prev[prev.length - 1] },\r\n                                { x: next[next.length - 2], y: next[next.length - 1] },\r\n                                radius\r\n                            );\r\n                            \r\n                            if (ss) {\r\n                                segments.splice(i, 1, ss[0], ss[1]);\r\n                                i++;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                command = Graph.util.segments2path(segments);\r\n                // var p = Graph.path(command);\r\n                // this.router.source().paper().path(p).style('stroke', 'red');\r\n                \r\n            }\r\n\r\n            if (command) {\r\n                this.component('coat').attr('d', command).dirty(true);\r\n                this.component('path').attr('d', command);\r\n                \r\n                this.invalidate();\r\n                \r\n                if ( ! silent) {\r\n                    \r\n                    this.redraw();\r\n                    \r\n                    this.fire('update');\r\n                    Graph.topic.publish('link/update');\r\n                }\r\n            }\r\n        },\r\n        \r\n        renderControl: function() {\r\n            var me = this, editor = me.component('editor');\r\n\r\n            if (me.cached.controls) {\r\n                _.forEach(me.cached.controls, function(c){\r\n                    c = Graph.registry.vector.get(c);\r\n                    c.remove();\r\n                });\r\n                me.cached.controls = null;\r\n            }\r\n\r\n            var points = this.cached.bendpoints,\r\n                linkid = me.guid(),\r\n                maxlen = points.length - 1,\r\n                controls = [];\r\n\r\n            _.forEach(points, function(dot, i){\r\n                var control, cursor, align, axis, drag;\r\n                \r\n                control = (new Graph.svg.Image(\r\n                    Graph.config.base + 'img/resize-control.png',\r\n                    dot.x - 17 / 2,\r\n                    dot.y - 17 / 2,\r\n                    17,\r\n                    17\r\n                ));\r\n                \r\n                control.selectable(false);\r\n                control.removeClass(Graph.styles.VECTOR);\r\n                control.elem.group('graph-link');\r\n                control.elem.data(Graph.string.ID_LINK, linkid);\r\n                \r\n                drag = {};\r\n                axis = null;\r\n                cursor = 'default';\r\n                \r\n                if (i === 0) {\r\n                    control.addClass(Graph.styles.LINK_TAIL);\r\n                    control.elem.data('pole', 'tail');\r\n                } else if (i === maxlen) {\r\n                    control.addClass(Graph.styles.LINK_HEAD);\r\n                    control.elem.data('pole', 'head');\r\n                } else {\r\n                    align  = Graph.util.pointAlign(dot.start, dot.end);\r\n                    axis   = align == 'v' ? 'y' : 'x';\r\n                    cursor = axis  == 'x' ? 'ew-resize' : 'ns-resize';\r\n                    \r\n                    drag = {axis: axis};\r\n                }\r\n                \r\n                var context = {\r\n                    \r\n                    trans: (i === 0 || i === maxlen) ? 'CONNECT' : 'BENDING',\r\n                    index: dot.index,\r\n                    axis: axis,\r\n                    cursor: cursor,\r\n                    point: {\r\n                        x: dot.x,\r\n                        y: dot.y\r\n                    },\r\n                    \r\n                    ranges: {\r\n                        start: dot.range[0],\r\n                        end:   dot.range[1]\r\n                    },\r\n                    \r\n                    event: {\r\n                        x: dot.x,\r\n                        y: dot.y\r\n                    },\r\n                    \r\n                    snap: {\r\n                        hor: [],\r\n                        ver: []\r\n                    },\r\n                    \r\n                    delta: {\r\n                        x: 0,\r\n                        y: 0\r\n                    }\r\n                };\r\n                \r\n                \r\n                control.draggable(drag);\r\n                control.cursor(cursor);\r\n                \r\n                control.on('dragstart', _.bind(me.onControlStart, me, _, context, control));\r\n                control.on('dragmove',  _.bind(me.onControlMove,  me, _, context));\r\n                control.on('dragend',   _.bind(me.onControlEnd,   me, _, context, control));\r\n \r\n                control.render(editor);\r\n                controls.push(control.guid());\r\n            });\r\n            \r\n            me.cached.controls = controls;\r\n            controls = null;\r\n        },\r\n\r\n        onControlStart: function(e, context, control) {\r\n            this.component('coat').cursor(context.cursor);\r\n            this.router.initTrans(context);\r\n            \r\n            if (context.trans == 'CONNECT') {\r\n                var paper = this.component().paper();\r\n                if (paper) {\r\n                    paper.addClass('linking');\r\n                }\r\n            }\r\n\r\n            // snapping\r\n            var snaphor = context.snap.hor,\r\n                snapver = context.snap.ver;\r\n                \r\n            control.draggable().snap([\r\n                function(x, y) {\r\n                    var sx = Graph.util.snapValue(x, snapver),\r\n                        sy = Graph.util.snapValue(y, snaphor);\r\n                    \r\n                    return {\r\n                        x: sx,\r\n                        y: sy,\r\n                        range: 10\r\n                    };\r\n                }\r\n            ]);\r\n            \r\n            _.forEach(this.cached.controls, function(id){\r\n                var c = Graph.registry.vector.get(id);\r\n                if (c && c !== control) {\r\n                    c.hide();\r\n                }\r\n            });\r\n            \r\n            control.show();\r\n            this.removeConvex();\r\n        },\r\n\r\n        onControlMove: function(e, context) {\r\n            var me = this;\r\n            \r\n            context.delta.x += e.dx;\r\n            context.delta.y += e.dy;\r\n            \r\n            var x1, y1, x2, y2, dx, dy;\r\n            \r\n            x1 = context.event.x;\r\n            y1 = context.event.y;\r\n            \r\n            if (context.trans == 'BENDING') {\r\n                me.router.bending(context, function(result){\r\n                    me.update(result.command, true);\r\n                });\r\n            } else {\r\n                me.router.connecting(context, function(result){\r\n                    me.update(result.command, true);\r\n                });\r\n            }\r\n\r\n            x2 = context.event.x;\r\n            y2 = context.event.y;\r\n            \r\n            dx = x2 - x1;\r\n            dy = y2 - y1;\r\n            \r\n            // update dragger\r\n            e.originalData.dx = dx;\r\n            e.originalData.dy = dy;\r\n        },\r\n\r\n        onControlEnd: function(e, context, control) {\r\n            this.component('coat').cursor('pointer');\r\n            this.router.stopTrans(context);\r\n\r\n            if (context.trans == 'CONNECT') {\r\n                var paper = this.component().paper();\r\n                if (paper) {\r\n                    paper.removeClass('linking');\r\n                }\r\n            }\r\n\r\n            this.update(this.router.command());\r\n            this.invalidate();\r\n            this.resumeControl();\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.link.Orthogonal';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n    \r\n}());","\r\n(function(){\r\n\r\n    var KEY_TRESHOLD = 1e-9;\r\n    var SLOPE_TRESHOLD = .1;\r\n    \r\n    var Sweeplink = Graph.util.Sweeplink = function(links) {\r\n        \r\n        var me = this;\r\n        \r\n        me.points = [];\r\n        me.queue = [];\r\n        me.lines = [];\r\n        me.found = [];\r\n        me.process = [];\r\n        \r\n        _.forEach(links, function(link){\r\n            var dots = me.extract(link);\r\n            Array.prototype.push.apply(me.points, dots);\r\n        });\r\n\r\n        _.forEach(me.points, function(p, i){\r\n            if (i % 2) me.lines.push(_.sortBy( [p, me.points[i - 1]], 'y' ));\r\n        });\r\n        \r\n        _.forEach(me.lines, function(d, i){\r\n            if (d[0].x == d[1].x) {\r\n                d[0].x += SLOPE_TRESHOLD;\r\n                d[1].x -= SLOPE_TRESHOLD;\r\n            }\r\n\r\n            if (d[0].y == d[1].y) {\r\n                d[0].y -= SLOPE_TRESHOLD;\r\n                d[1].y += SLOPE_TRESHOLD;\r\n            }\r\n\r\n            d[0].line = d;\r\n            d[1].line = d;\r\n        });\r\n        \r\n    };\r\n\r\n    Sweeplink.prototype.constructor = Sweeplink;\r\n\r\n    Sweeplink.prototype.extract = function(link) {\r\n        var segments = link.router.path().curve().segments, \r\n            dots = [];\r\n\r\n        var x, y;\r\n        \r\n        _.forEach(segments, function(s, i){\r\n            var p = i === 0 ? {x: s[1], y: s[2]} : {x: s[5], y: s[6]};\r\n            var q = segments[i + 1];\r\n            \r\n            if (q) {\r\n                \r\n                q = {x: q[5], y: q[6]};\r\n                \r\n                Graph.util.movepoint(p, q, -20);\r\n                Graph.util.movepoint(q, p, -20);\r\n\r\n                p.x = Math.round(p.x, 3);\r\n                p.y = Math.round(p.y, 3);\r\n\r\n                q.x = Math.round(q.x, 3);\r\n                q.y = Math.round(q.y, 3);\r\n\r\n                p.link = link;\r\n                q.link = link;\r\n\r\n                p.range = i;\r\n                q.range = i + 1;\r\n\r\n                dots.push(p, q);\r\n            }\r\n            \r\n        });\r\n\r\n        return dots;\r\n    };\r\n\r\n    Sweeplink.prototype.findConvex = function() {\r\n        var me = this, linesByY;\r\n        \r\n        me.queue = createTree(me.points.slice())\r\n            .key(function(d){ return d.y + KEY_TRESHOLD * d.x; })\r\n            .order();\r\n        \r\n        me.found = [];\r\n        me.process = createTree([]);\r\n\r\n        for (var i = 0; i < me.queue.length && i < 1000; i++) {\r\n            \r\n            var d = me.queue[i];\r\n            var index, indexA, indexB, minIndex;\r\n            \r\n\r\n            if (d.line && d.line[0] == d) {\r\n                d.type = 'insert';\r\n                index = me.process\r\n                    .key(function(e){ return me.intercept(e, d.y - KEY_TRESHOLD / 1000); })\r\n                    .insert(d.line);\r\n                \r\n                me.validate(d.line, me.process[index + 1]);\r\n                me.validate(d.line, me.process[index - 1]);\r\n                \r\n            } else if (d.line) {\r\n                d.type = 'removal';\r\n                index = me.process.findIndex(d.line);\r\n                me.process.remove(d.line);\r\n                \r\n                me.validate(me.process[index - 1], me.process[index]);\r\n            } else if (d.lineA && d.lineB) {\r\n                me.process.key(function(e){ return me.intercept(e, d.y - KEY_TRESHOLD / 1000); });\r\n                \r\n                indexA = me.process.findIndex(d.lineA);\r\n                indexB = me.process.findIndex(d.lineB);\r\n                  \r\n                if (indexA == indexB) indexA = indexA + 1\r\n                  \r\n                me.process[indexA] = d.lineB;\r\n                me.process[indexB] = d.lineA;\r\n\r\n                minIndex = indexA < indexB ? indexA : indexB\r\n\r\n                me.validate(me.process[minIndex - 1], me.process[minIndex])\r\n                me.validate(me.process[minIndex + 1], me.process[minIndex + 2])\r\n            }\r\n        }\r\n        \r\n        var convex = {};\r\n        \r\n        _.forEach(this.found, function(f){\r\n            \r\n            var routes, rangeStart, rangeEnd, segmentAlign, segmentStart, segmentEnd,\r\n                alignA, alignB, line, link, guid;\r\n            \r\n            alignA = Graph.util.pointAlign(f.lineA[0], f.lineA[1], 10);\r\n            alignB = Graph.util.pointAlign(f.lineB[0], f.lineB[1], 10);\r\n            \r\n            if (alignA != alignB) {\r\n                segmentAlign = alignA == 'v' ? alignA : alignB;\r\n                \r\n                line = alignA == 'v' ? f.lineA : f.lineB;\r\n                link = line[0].link;\r\n                guid = link.guid();\r\n                \r\n                routes = link.router.waypoints();\r\n                \r\n                rangeStart = Math.min(line[0].range, line[1].range),\r\n                rangeEnd   = Math.max(line[0].range, line[1].range);\r\n                \r\n                segmentStart = routes[rangeStart];\r\n                segmentEnd = routes[rangeEnd];\r\n                \r\n                if ( ! convex[guid]) {\r\n                    convex[guid] = {};\r\n                }\r\n                \r\n                if ( ! convex[guid][rangeStart]) {\r\n                    convex[guid][rangeStart] = createTree([])\r\n                        .key(function(c){\r\n                            if (c.segmentAlign == 'v') {\r\n                                if (c.segmentStart.x < c.segmentEnd.x) {\r\n                                    return c.x + c.segmentStart.x;\r\n                                } else {\r\n                                    return c.segmentStart.x - c.x;\r\n                                }\r\n                            } else {\r\n                                if (c.segmentStart.y < c.segmentEnd.y) {\r\n                                    return c.y + c.segmentStart.y;\r\n                                } else {\r\n                                    return c.segmentStart.y - c.y;\r\n                                }\r\n                            }\r\n                        });\r\n                }\r\n                \r\n                convex[guid][rangeStart].insert({\r\n                    x: f.x,\r\n                    y: f.y,\r\n                    link: link.guid(),\r\n                    rangeStart: rangeStart,\r\n                    rangeEnd: rangeEnd,\r\n                    segmentAlign: segmentAlign,\r\n                    segmentStart: segmentStart,\r\n                    segmentEnd: segmentEnd\r\n                });\r\n                \r\n            }\r\n            \r\n        });\r\n        \r\n        return convex;\r\n    };\r\n    \r\n    Sweeplink.prototype.intersect = function(a, b, c, d) {\r\n        var det = (a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x),\r\n            l   = a.x * b.y - a.y * b.x,\r\n            m   = c.x * d.y - c.y * d.x,\r\n            ix  = (l * (c.x - d.x) - m * (a.x - b.x)) / det,\r\n            iy  = (l * (c.y - d.y) - m * (a.y - b.y)) / det,\r\n            i   = {x: ix, y: iy};\r\n\r\n        i.isOverlap = (ix == a.x && iy == a.y) || (ix == b.x && iy == b.y)\r\n        i.isIntersection = ! (a.x < ix ^ ix < b.x) && ! (c.x < ix ^ ix < d.x) && ! i.isOverlap && det\r\n        \r\n        // if (isNaN(i.x)) debugger\r\n\r\n        return i;\r\n    };\r\n    \r\n    Sweeplink.prototype.validate = function(a, b) {\r\n        if ( ! a || ! b ) return;\r\n        var i = this.intersect(a[0], a[1], b[0], b[1]);\r\n        \r\n        i.lineA = a;\r\n        i.lineB = b;\r\n        \r\n        if (i.isIntersection) {\r\n            this.found.push(i) && this.queue.insert(i);\r\n        }\r\n    };\r\n\r\n    Sweeplink.prototype.intercept = function(line, y) {\r\n        var a = line[0], \r\n            b = line[1],\r\n            m = (a.y - b.y) / (a.x - b.x);\r\n\r\n        return (y - a.y + m * a.x) / m;\r\n    }\r\n\r\n    Sweeplink.prototype.destroy = function() {\r\n        this.points = null;\r\n        this.lines = null;\r\n        this.found = null;\r\n        this.queue = null;\r\n        this.process = null;\r\n    };\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function createTree(array) {\r\n        var key = function(d){ return d; };\r\n        var bisect = _.bisector(function(d){ return key(d); }).left;\r\n        \r\n        array.insert = function(d) {\r\n            var i = array.findIndex(d);\r\n            var v = key(d);\r\n            if (array[i] && v == key(array[i])) return;\r\n            array.splice(i, 0, d);\r\n            return i;\r\n        };\r\n\r\n        array.remove = function(d) {\r\n            var i = array.findIndex(d);\r\n            array.splice(i, 1);\r\n            return i;\r\n        };\r\n\r\n        array.findIndex = function(d) {\r\n            return bisect(array, key(d));\r\n        };\r\n\r\n        array.key = function(f) {\r\n            key = f;\r\n            return array;\r\n        };\r\n\r\n        array.swap = function() {\r\n\r\n        };\r\n\r\n        array.order = function() {\r\n            array.sort(_.ascendingKey(key));\r\n            return array;\r\n        };\r\n\r\n        return array;\r\n    }\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Plugin = Graph.extend({\r\n\r\n        props: {\r\n            vector: null,\r\n            activator: 'tool'\r\n        },\r\n\r\n        cached: {\r\n            \r\n        },\r\n\r\n        /**\r\n         * Get/set options\r\n         */\r\n        options: function(options) {\r\n\r\n        },\r\n        \r\n        vector: function() {\r\n            return Graph.registry.vector.get(this.props.vector);\r\n        },\r\n\r\n        invalidate: function() {\r\n            \r\n        },\r\n\r\n        enable: function(activator) {},\r\n\r\n        disable: function() {},\r\n\r\n        destroy: function() {}\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Manager = Graph.plugin.Manager = function() {\r\n        this.installed = {};\r\n    };\r\n\r\n    Manager.prototype.get = function(plugin) {\r\n        var installed = this.installed[plugin];\r\n\r\n        return {\r\n\r\n            plugin: function() {\r\n                if (installed) {\r\n                    var target = Graph.registry.vector.get(installed.target);\r\n                    return target[installed.handler]();\r\n                }\r\n                return null;\r\n            },\r\n\r\n            component: function() {\r\n                if (installed) {\r\n                    return Graph.registry.vector.get(installed.target);\r\n                }\r\n                return null;\r\n            }\r\n        };\r\n    };\r\n\r\n    Manager.prototype.install = function(plugin, target, options) {\r\n        var handler = this.getPluginHandler(plugin);\r\n\r\n        if (handler) {\r\n            options = options || {};\r\n            target[handler](options);\r\n\r\n            this.installed[plugin] = {\r\n                handler: handler,\r\n                target: target.guid()\r\n            };\r\n        }\r\n    };\r\n\r\n    Manager.prototype.uninstall = function(plugin) {\r\n        var installed = this.installed[plugin];\r\n        if (installed) {\r\n            var target = Graph.registry.vector.get(installed.target);\r\n            target[handler]({destroy: true});\r\n            \r\n            delete this.installed[plugin];\r\n        }\r\n    };\r\n\r\n    Manager.prototype.getPluginHandler = function(plugin) {\r\n        var maps = {\r\n            'network': 'connectable',\r\n            'resizer': 'resizable',\r\n            'snapper': 'snappable',\r\n            'dragger': 'draggable',\r\n            'editor': 'editable'\r\n        };\r\n\r\n        return maps[plugin];\r\n    };\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.plugin.Definer = Graph.extend(Graph.plugin.Plugin, {\r\n        props: {\r\n            vector: null\r\n        },\r\n\r\n        definitions: {\r\n\r\n        },\r\n\r\n        components: {\r\n            holder: null\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            this.props.vector = vector.guid();\r\n\r\n            this.components.holder = Graph.$('<defs/>');\r\n            this.components.holder.prependTo(vector.elem);\r\n\r\n            if (vector.isPaper()) {\r\n                this.defineArrowMarker('marker-arrow');\r\n            }\r\n\r\n        },\r\n        \r\n        defineArrowMarker: function(id) {\r\n            if (this.definitions[id]) {\r\n                return this.definitions[id];\r\n            }\r\n\r\n            var marker = Graph.$(_.format(\r\n                '<marker id=\"{0}\" refX=\"{1}\" refY=\"{2}\" viewBox=\"{3}\" markerWidth=\"{4}\" markerHeight=\"{5}\" orient=\"{6}\">' + \r\n                    '<path d=\"{7}\" fill=\"{8}\" stroke-width=\"{9}\" stroke-linecap=\"{10}\" stroke-dasharray=\"{11}\">' + \r\n                    '</path>'+\r\n                '</marker>',\r\n                id, '11', '10', '0 0 20 20', '10', '10', 'auto',\r\n                'M 1 5 L 11 10 L 1 15 Z', '#000000', '1', 'round', '10000, 1'\r\n            ));\r\n\r\n            this.definitions[id] = marker;\r\n            this.components.holder.append(marker);\r\n\r\n            return marker;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Definer';\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n    \r\n    // storages\r\n    var vendors = {};\r\n\r\n    var Reactor = Graph.plugin.Reactor = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null\r\n        },\r\n\r\n        navigationKeys: [\r\n            Graph.event.ENTER,\r\n            Graph.event.DELETE,\r\n            Graph.event.SHIFT,\r\n            Graph.event.CTRL,\r\n            Graph.event.ESC\r\n        ],\r\n\r\n        constructor: function(vector, listeners) {\r\n            var me = this, \r\n                node = vector.node(),\r\n                guid = vector.guid();\r\n\r\n            var vendor;\r\n\r\n            me.props.vector = guid;\r\n            me.listeners = listeners || {};\r\n\r\n            vendor = vendors[guid] = interact(node);\r\n\r\n            vendor.on('down', function reactorDown(e){\r\n                if (e.target === node) {\r\n                    e.originalType = 'pointerdown';\r\n                    vector.fire(e);    \r\n                }\r\n            }, true);\r\n\r\n            vector.elem.on({\r\n                contextmenu: function(e) {\r\n                    if (e.currentTarget === node) {\r\n                        vector.fire(e);\r\n                        // e.preventDefault();\r\n                    }\r\n                }\r\n            });\r\n\r\n            if (vector.isPaper()) {\r\n                var doc = Graph.$(document);\r\n\r\n                doc.on('keydown', function(e){\r\n                    if (me.isNavigation(e) && Graph.cached.paper == guid) {\r\n                        e.originalType = 'keynavdown';\r\n                        vector.fire(e); \r\n                    }\r\n                });\r\n\r\n                doc.on('keyup', function(e){\r\n                    if (me.isNavigation(e) && Graph.cached.paper == guid) {\r\n                        e.originalType = 'keynavup';\r\n                        vector.fire(e);\r\n                    }\r\n                });\r\n\r\n                doc = null;\r\n            }\r\n\r\n            vendor = null;\r\n        },\r\n\r\n        isNavigation: function(e) {\r\n            var key = e.keyCode;\r\n            return _.indexOf(this.navigationKeys, key) > -1;\r\n        },\r\n        \r\n        vendor: function() {\r\n            return vendors[this.props.vector];\r\n        },\r\n\r\n        draggable: function(options) {\r\n            return this.vendor().draggable(options);\r\n        },\r\n\r\n        dropzone: function(options) {\r\n            return this.vendor().dropzone(options);\r\n        },\r\n\r\n        gesturable: function(options) {\r\n            return this.vendor().gesturable(options);\r\n        },\r\n\r\n        destroy: function() {\r\n            var guid = this.props.vector,\r\n                vendor = vendors[guid];\r\n\r\n            if (vendor) {\r\n                vendor.unset();\r\n            }\r\n\r\n            delete vendors[guid];\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Reactor';\r\n        }\r\n    });\r\n\r\n    var on  = Reactor.prototype.on,\r\n        off = Reactor.prototype.off;\r\n\r\n    /**\r\n     * Override\r\n     */\r\n    Reactor.prototype.on = function(event, handler) {\r\n        var vector = this.vector();\r\n        return on.apply(vector, [event, handler]);\r\n    };\r\n\r\n    /**\r\n     * Override\r\n     */\r\n    Reactor.prototype.off = function(event, handler) {\r\n        var vector = this.vector();\r\n        return off.apply(vector, [event, handler]);\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Transformer = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            scale: 1,\r\n            rotate: 0\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            this.actions = [];\r\n            this.props.vector = vector.guid();\r\n        },\r\n\r\n        transform: function(command) {\r\n            var me = this, segments = Graph.util.transform2segments(command);\r\n\r\n            _.forEach(segments, function(args){\r\n                var method = args.shift();\r\n                if (me[method] && _.isFunction(me[method])) {\r\n                    (function(){\r\n                        me[method].apply(me, args);\r\n                    }(method, args));    \r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        queue: function() {\r\n            var args = _.toArray(arguments);\r\n            \r\n            this.actions.push({\r\n                name: args.shift(),\r\n                args: args,\r\n                sort: this.actions.length\r\n            });\r\n\r\n            return this;\r\n        },\r\n        translate: function(dx, dy) {\r\n            dx = _.defaultTo(dx, 0);\r\n            dy = _.defaultTo(dy, 0);\r\n            this.queue('translate', dx, dy);\r\n            return this;\r\n        },\r\n        rotate: function(deg, cx, cy) {\r\n            if ( ! _.isUndefined(cx) && ! _.isUndefined(cy)) {\r\n                this.queue('rotate', deg, cx, cy);    \r\n            } else {\r\n                this.queue('rotate', deg);    \r\n            }\r\n            return this;\r\n        },\r\n        scale: function(sx, sy, cx, cy) {\r\n            sy = _.defaultTo(sy, sx);\r\n\r\n            if ( ! _.isUndefined(cx) && ! _.isUndefined(cy)) {\r\n                this.queue('scale', sx, sy, cx, cy);\r\n            } else {\r\n                this.queue('scale', sx, sy);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        matrix: function(a, b, c, d, e, f) {\r\n            this.queue('matrix', a, b, c, d, e, f);\r\n            return this;\r\n        },\r\n\r\n        commit: function(absolute, simulate) {\r\n            var me = this,\r\n                actions = me.actions,\r\n                vector = me.vector(),\r\n                events = {\r\n                    translate: false,\r\n                    rotate: false,\r\n                    scale: false\r\n                };\r\n\r\n            if ( ! actions.length) {\r\n                return;\r\n            }\r\n            \r\n            absolute = _.defaultTo(absolute, false);\r\n            simulate = _.defaultTo(simulate, false);\r\n            \r\n            var deg = 0, \r\n                dx = 0, \r\n                dy = 0, \r\n                sx = 1, \r\n                sy = 1;\r\n                \r\n            var mat = vector.matrix().clone();\r\n            \r\n            _.forEach(actions, function(act){\r\n                var arg = act.args,\r\n                    cmd = act.name,\r\n                    len = arg.length,\r\n                    inv = false;\r\n\r\n                if (absolute) {\r\n                    inv = mat.invert(true);\r\n                }\r\n                \r\n                var x1, y1, x2, y2, bb;\r\n                \r\n                if (cmd == 'translate' && len === 2) {\r\n                    if (absolute) {\r\n                        x1 = inv.x(0, 0);\r\n                        y1 = inv.y(0, 0);\r\n                        x2 = inv.x(arg[0], arg[1]);\r\n                        y2 = inv.y(arg[0], arg[1]);\r\n                        mat.translate(x2 - x1, y2 - y1);\r\n                    } else {\r\n                        mat.translate(arg[0], arg[1]);\r\n                    }\r\n                    events.translate = true;\r\n                } else if (cmd == 'rotate') {\r\n                    if (len == 1) {\r\n                        bb = bb || vector.bboxPristine().toJson();\r\n                        mat.rotate(arg[0], bb.x + bb.width / 2, bb.y + bb.height / 2);\r\n                        deg += arg[0];\r\n                    } else if (len == 3) {\r\n                        if (absolute) {\r\n                            x2 = inv.x(arg[1], arg[2]);\r\n                            y2 = inv.y(arg[1], arg[2]);\r\n                            mat.rotate(arg[0], x2, y2);\r\n                        } else {\r\n                            mat.rotate(arg[0], arg[1], arg[2]);\r\n                        }\r\n                        deg += arg[0];\r\n                    }\r\n                    events.rotate = true;\r\n                } else if (cmd == 'scale') {\r\n                    if (len === 1 || len === 2) {\r\n                        bb = bb || vector.bboxPristine().toJson();\r\n                        mat.scale(arg[0], arg[len - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\r\n                        sx *= arg[0];\r\n                        sy *= arg[len - 1];\r\n                    } else if (len === 4) {\r\n                        if (absolute) {\r\n                            x2 = inv.x(arg[2], arg[3]);\r\n                            y2 = inv.y(arg[2], arg[3]);\r\n                            mat.scale(arg[0], arg[1], x2, y2);\r\n                        } else {\r\n                            mat.scale(arg[0], arg[1], arg[2], arg[3]);\r\n                        }\r\n                        sx *= arg[0];\r\n                        sy *= arg[1];\r\n                    }\r\n                    events.scale = true;\r\n                } else if (cmd == 'matrix') {\r\n                    mat.multiply(arg[0], arg[1], arg[2], arg[3], arg[4], arg[5]);\r\n                }\r\n            });\r\n\r\n            if (simulate) {\r\n                this.actions = [];\r\n                return mat;\r\n            }\r\n            \r\n            vector.graph.matrix = mat;\r\n            vector.attr('transform', mat.toValue());\r\n\r\n            if (events.translate) {\r\n                events.translate = {\r\n                    dx: mat.e,\r\n                    dy: mat.f\r\n                };\r\n                this.fire('translate', events.translate);\r\n            }\r\n\r\n            if (events.rotate) {\r\n                events.rotate = {\r\n                    deg: deg\r\n                };\r\n                this.fire('rotate', events.rotate);\r\n            }\r\n\r\n            if (events.scale) {\r\n                events.scale = {\r\n                    sx: sx,\r\n                    sy: sy\r\n                };\r\n                this.fire('scale', events.scale);\r\n            }\r\n\r\n            this.actions = [];\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Transformer';\r\n        }\r\n    });\r\n    \r\n}());","\r\n(function(){\r\n    var global = this;\r\n\r\n    var Animator = Graph.plugin.Animator = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n\r\n            // default duration\r\n            duration: 1000,\r\n\r\n            // default easing\r\n            easing: 'linier'\r\n        },\r\n\r\n        stacks: [],\r\n\r\n        constructor: function(vector) {\r\n            this.props.vector = vector.guid();\r\n        },\r\n        \r\n        create: function(keyframes, duration, easing, callback) {\r\n            return new Animation(keyframes, duration, easing, callback);\r\n        },\r\n\r\n        animate: function(params, duration, easing, callback) {\r\n            var vector = this.vector(),\r\n                reset = _.extend({}, vector.attrs);\r\n\r\n            var scenes, animation;\r\n\r\n            if (params instanceof Animation ) {\r\n                animation = params;\r\n            } else {\r\n                duration = _.defaultTo(duration, this.props.duration);\r\n\r\n                if (_.isFunction(easing)) {\r\n                    callback = easing;\r\n                    easing = this.props.easing;\r\n                }\r\n\r\n                if ( ! easing) {\r\n                    easing = this.props.easing;\r\n                }\r\n\r\n                scenes = {\r\n                    100: params\r\n                };\r\n\r\n                animation = new Animation(scenes, duration, easing, callback);\r\n            }\r\n\r\n            if ( ! animation.count()) {\r\n                animation = null;\r\n                return;\r\n            }\r\n\r\n            reset.transform = vector.attrs.transform;\r\n            reset.matrix = vector.matrix().clone();\r\n\r\n            this.start(\r\n                animation, \r\n                animation.frame(0), \r\n                reset, \r\n                null\r\n            );\r\n\r\n            animation = null;\r\n\r\n            return this;\r\n        },\r\n\r\n        resume: function() {\r\n\r\n        },\r\n\r\n        pause: function() {\r\n\r\n        },\r\n\r\n        stop: function() {\r\n\r\n        },\r\n\r\n        start: function(animation, frame, reset, status) {\r\n            var asize = animation.count();\r\n\r\n            if ( ! asize) {\r\n                animation = null;\r\n                return;\r\n            }\r\n\r\n            var vector = this.vector(),\r\n                ssize = this.stacks.length,\r\n                origin = {},\r\n                delta = {},\r\n                from = {},\r\n                to = {};\r\n\r\n            var scene, queue, last, time, playing, applied, p, i;\r\n\r\n            if (status) {\r\n                for (i = 0; i < ssize; i++) {\r\n                    p = this.stacks[i];\r\n                    if (p.animation == animation) {\r\n                        if (p.frame != frame) {\r\n                            this.stacks.splice(i, 1);\r\n                            applied = 1;\r\n                        } else {\r\n                            playing = p;\r\n                        }\r\n                        vector.attr(p.reset);\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                status = +to;\r\n            }\r\n\r\n            queue = {\r\n                animation: animation,\r\n                vector: vector\r\n            };\r\n\r\n            time = animation.duration();\r\n            last = animation.at(asize - 1).frame;\r\n\r\n            for (i = 0; i < asize; i++) {\r\n                scene = animation.at(i);\r\n                if (scene.frame == frame || scene.frame > status * last) {\r\n\r\n                    queue.prev = animation.at(i - 1);\r\n                    queue.prev = queue.prev ? queue.prev.frame : 0;\r\n\r\n                    queue.frame = scene.frame;\r\n                    queue.duration = time / last * (queue.frame - queue.prev);\r\n\r\n                    queue.next = animation.at(i + 1);\r\n                    queue.next = queue.next ? queue.next.frame : undefined;\r\n\r\n                    queue.last = last;\r\n                    break;\r\n                } else if (status) {\r\n                    vector.attr(scene.params);\r\n                }\r\n            }\r\n\r\n            if ( ! playing) {\r\n\r\n                time = queue.duration;\r\n\r\n                _.forOwn(scene.params, function(v, k){\r\n                    \r\n                    var able = Animation.animable[k];\r\n                    var plugin, matrix, inverse, segments;\r\n                    var i, j, ii, jj;\r\n\r\n                    if (able) {\r\n                        from[k] = vector.attrs[k];\r\n                        from[k] = _.defaultTo(from[k], able.defaults);\r\n                        to[k]   = v;\r\n\r\n                        switch(able.type) {\r\n                            case 'number':\r\n                                delta[k] = (to[k] - from[k]) / time;\r\n                                break;\r\n\r\n                            case 'transform':\r\n                                var eq = equalizeTransform(vector.attrs[k], v);\r\n\r\n                                if (eq.equal) {\r\n                                    from[k]  = eq.from;\r\n                                    to[k]    = eq.to;\r\n                                    delta[k] = [];\r\n                                    delta[k].semantic = true;\r\n                                    for (i = 0, ii = from[k].length; i < ii; i++) {\r\n                                        delta[k][i] = [from[k][i][0]];\r\n                                        for (j = 1, jj = from[k][i].length; j < jj; j++) {\r\n                                            delta[k][i][j] = (to[k][i][j] - from[k][i][j]) / time;\r\n                                        }\r\n                                    }\r\n                                } else {\r\n                                    plugin = vector.plugins.transformer;\r\n                                    segments = Graph.util.transform2segments(to[k]);\r\n\r\n                                    matrix = vector.matrix();\r\n\r\n                                    from[k] = matrix.clone();\r\n                                    inverse = matrix.invert(true);\r\n\r\n                                    vector.graph.matrix = matrix.multiply(inverse);\r\n\r\n                                    _.forEach(segments, function(s){\r\n                                        var cmd = s[0], args = s.slice(1);\r\n                                        plugin[cmd].apply(plugin, args);\r\n                                    });\r\n\r\n                                    matrix = plugin.commit(false, true);\r\n                                    to[k] = matrix.clone();\r\n\r\n                                    delta[k] = {\r\n                                        a: (to[k].props.a - from[k].props.a) / time,\r\n                                        b: (to[k].props.b - from[k].props.b) / time,\r\n                                        c: (to[k].props.c - from[k].props.c) / time,\r\n                                        d: (to[k].props.d - from[k].props.d) / time,\r\n                                        e: (to[k].props.e - from[k].props.e) / time,\r\n                                        f: (to[k].props.f - from[k].props.f) / time\r\n                                    };\r\n\r\n                                    segments = null;\r\n                                    plugin = null;\r\n                                    matrix = null;\r\n                                }\r\n\r\n                                break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n                var timestamp = +new Date;\r\n\r\n                _.extend(queue, {\r\n                    scene: scene,\r\n                    timestamp: timestamp,\r\n                    start: timestamp + animation.delay(),\r\n\r\n                    reset: reset,\r\n                    from: from,\r\n                    to: to,\r\n                    delta: delta,\r\n\r\n                    status: 0,\r\n                    initstatus: status || 0,\r\n\r\n                    stop: false\r\n                });\r\n\r\n                this.stacks.push(queue);\r\n\r\n                if (status && ! playing && ! applied) {\r\n                    queue.stop = true;\r\n                    queue.start = new Date - scene.duration * status;\r\n                    if (this.stacks.length === 1) {\r\n                        return this.player();\r\n                    }\r\n                }\r\n\r\n                if (applied) {\r\n                    queue.start = new Date - scene.duration * status;\r\n                }\r\n\r\n                if (this.stacks.length === 1) {\r\n                    Animator.play(_.bind(this.player, this));\r\n                }\r\n            } else {\r\n                playing.initstatus = status;\r\n                playing.start = new Date - playing.duration * status;\r\n            }\r\n\r\n            this.fire('animstart');\r\n\r\n        },\r\n\r\n        player: function() {\r\n            var timestamp = +new Date, tick = 0;\r\n            var vector, curr, from, prog, anim, time, able, value, key, type, scene, matrix;\r\n            var plugin, matrix, method, args;\r\n            var key, to, ii, jj, i, j;\r\n\r\n            for (; tick < this.stacks.length; tick++) {\r\n                curr = this.stacks[tick];\r\n\r\n                if (curr.paused) {\r\n                    continue;\r\n                }\r\n                \r\n                prog   = timestamp - curr.start;\r\n\r\n                time   = curr.duration;\r\n                vector = curr.vector;\r\n                scene  = curr.scene;\r\n                from   = curr.from;\r\n                to     = curr.to;\r\n                delta  = curr.delta;\r\n                anim   = curr.animation;\r\n\r\n                if (curr.initstatus) {\r\n                    prog = (curr.initstatus * curr.last - curr.prev) / (curr.frame - curr.prev) * time;\r\n                    curr.status = curr.initstatus;\r\n                    delete curr.initstatus;\r\n                    curr.stop && this.stacks.splice(tick--, 1);\r\n                } else {\r\n                    curr.status = (curr.prev + (curr.frame - curr.prev) * (prog / time)) / curr.last;\r\n                }\r\n\r\n                if (prog < 0) {\r\n                    continue;\r\n                }\r\n\r\n                if (prog < time) {\r\n\r\n                    ease = scene.easing(prog / time);\r\n\r\n                    for (key in from) {\r\n                        \r\n                        able = Animation.animable[key];\r\n\r\n                        switch(able.type) {\r\n                            case 'number':\r\n\r\n                                value = +from[key] + ease * time * delta[key];\r\n                                vector.attr(name, value);\r\n\r\n                                break;\r\n                            case 'transform':\r\n\r\n                                // semantic `rotate,scale,translate`\r\n                                if (delta[key].semantic) {\r\n                                    plugin = vector.plugins.transformer;\r\n\r\n                                    for (i = 0, ii = from[key].length; i < ii; i++) {\r\n                                        method = from[key][i][0];\r\n                                        args = [];\r\n\r\n                                        for (j = 1, jj = from[key][i].length; j < jj; j++) {\r\n                                            args.push(from[key][i][j] + ease * time * delta[key][i][j]);\r\n                                        }\r\n\r\n                                        plugin[method].apply(plugin, args);\r\n                                    }\r\n\r\n                                    matrix = plugin.commit(false, true);\r\n\r\n                                    vector.attr('transform', matrix.toValue());\r\n\r\n\r\n                                    matrix = null;\r\n                                    plugin = null;\r\n\r\n                                } else {\r\n                                    matrix = Graph.matrix(\r\n                                        from[key].props.a + ease * time * delta[key].a,\r\n                                        from[key].props.b + ease * time * delta[key].b,\r\n                                        from[key].props.c + ease * time * delta[key].c,\r\n                                        from[key].props.d + ease * time * delta[key].d,\r\n                                        from[key].props.e + ease * time * delta[key].e,\r\n                                        from[key].props.f + ease * time * delta[key].f\r\n                                    );\r\n                                    vector.attr('transform', matrix.toValue());\r\n                                    matrix = null;\r\n                                }\r\n\r\n                                break;\r\n                        }\r\n                    }\r\n\r\n                } else {\r\n\r\n                    for (key in to) {\r\n                        \r\n                        able = Animation.animable[key];\r\n\r\n                        switch(able.type) {\r\n\r\n                            case 'transform':\r\n\r\n                                if (delta[key].semantic) {\r\n                                    plugin = vector.plugins.transformer;\r\n\r\n                                    _.forEach(to[key], function(v){\r\n                                        var cmd = v[0], args = v.slice(1);\r\n                                        plugin[cmd].apply(plugin, args);\r\n                                    });\r\n\r\n                                    matrix = plugin.commit(false, true);\r\n\r\n                                    vector.graph.matrix = matrix;\r\n                                    vector.attr('transform', matrix.toValue());\r\n                                    \r\n                                    matrix = null;\r\n                                    plugin = null;\r\n                                } else {\r\n                                    matrix = to[key].clone();\r\n\r\n                                    vector.graph.matrix = matrix;\r\n                                    vector.attr('transform', matrix.toValue());\r\n\r\n                                    matrix = null;\r\n                                }\r\n                                break;\r\n                            \r\n                            default:\r\n                                vector.attr(key, to[key]);\r\n                                break;\r\n                        }\r\n                    }\r\n                    \r\n                    scene.played++;\r\n\r\n                    this.stacks.splice(tick--, 1);\r\n\r\n                    var repeat = anim.repeat(), \r\n                        played = scene.played;\r\n\r\n                    if ((repeat > 1 && played < repeat) && ! curr.next ) {\r\n                        _.forOwn(anim.scenes, function(s, k){\r\n                            for (var key in s.params) {\r\n                                if (key == 'transform') {\r\n                                    vector.graph.matrix = curr.reset.matrix;\r\n                                    vector.attr('transform', curr.reset.transform);\r\n                                } else {\r\n                                    vector.attr(k, curr.reset[k]);    \r\n                                }\r\n                            }\r\n                        });\r\n\r\n                        this.start(\r\n                            anim,\r\n                            anim.frame(0),\r\n                            curr.reset,\r\n                            null\r\n                        );\r\n                    }\r\n\r\n                    if (curr.next && ! curr.stop) {\r\n                        this.start(\r\n                            anim,\r\n                            curr.next,\r\n                            curr.reset,\r\n                            null\r\n                        );\r\n                    }\r\n\r\n                    if (played >= repeat) {\r\n                        // ___DONE___?\r\n                        curr = null;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.stacks.length) {\r\n                Animator.play(_.bind(this.player, this));\r\n            } else {\r\n                // ___DONE___\r\n            }\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Animator';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n    Animator.play = (function(g){\r\n        var func = g.requestAnimationFrame || \r\n                   g.webkitRequestAnimationFrame || \r\n                   g.mozRequestAnimationFrame || \r\n                   g.oRequestAnimationFrame || \r\n                   g.msRequestAnimationFrame || \r\n                   function (callback) { \r\n                        setTimeout(callback, 16); \r\n                   };\r\n\r\n        return _.bind(func, g);\r\n    }(global));\r\n\r\n    ///////// INTERNAL ANIMATION /////////\r\n    \r\n    var Animation = Graph.extend({\r\n\r\n        props: {\r\n            easing: 'linier',\r\n            duration: 1000,\r\n            repeat: 1,\r\n            delay: 0\r\n        },\r\n        \r\n        scenes: {},\r\n        frames: [],\r\n\r\n        constructor: function(keyframes, duration, easing, callback) {\r\n            this.props.guid = 'graph-anim-' + (++Animation.guid);\r\n            this.props.duration = duration = _.defaultTo(duration, 1000);\r\n\r\n            if (_.isFunction(easing)) {\r\n                if (callback) {\r\n                    this.props.easing = 'function';\r\n                } else {\r\n                    callback = easing;\r\n                    easing = this.props.easing;\r\n                }\r\n            }\r\n\r\n            if ( ! easing) {\r\n                easing = this.props.easing;\r\n            }\r\n\r\n            if (keyframes) {\r\n                var easing = _.isString(easing) ? Animation.easing[easing] : easing,\r\n                    repeat = this.props.repeat,\r\n                    scenes = this.scenes,\r\n                    frames = this.frames;\r\n\r\n                _.forOwn(keyframes, function(f, key){\r\n                    var params = {}, frame, scene;\r\n\r\n                    frame = _.toNumber(key);\r\n\r\n                    params = _.pickBy(f, function(v, k){\r\n                        return !!Animation.animable[k];\r\n                    });\r\n\r\n                    scene = {\r\n                        frame: frame,\r\n                        params: params,\r\n                        easing: easing,\r\n                        callback: callback,\r\n                        played: 0\r\n                    };\r\n\r\n                    frames.push(frame);\r\n                    scenes[frame] = scene;\r\n                });\r\n\r\n                frames.sort(function(a, b){ return a - b });\r\n            }\r\n        },\r\n\r\n        guid: function() {\r\n            return this.props.guid;\r\n        },\r\n\r\n        duration: function() {\r\n            return this.props.duration;\r\n        },\r\n\r\n        easing: function() {\r\n            return this.props.easing;\r\n        },\r\n\r\n        delay: function(delay) {\r\n\r\n            if (delay === undefined) {\r\n                return this.props.delay;\r\n            }\r\n\r\n            var anim = new Animation();\r\n\r\n            anim.frames = this.frames;\r\n            anim.scenes = _.cloneDeep(this.scenes);\r\n            anim.props  = _.cloneDeep(this.props);\r\n            anim.props.delay = delay || 0;\r\n            \r\n            return anim;\r\n        },\r\n\r\n        repeat: function(times) {\r\n\r\n            if (times === undefined) {\r\n                return this.props.repeat;\r\n            }\r\n\r\n            var anim = new Animation();\r\n\r\n            anim.frames = this.frames.slice();\r\n            anim.scenes = _.cloneDeep(this.scenes);\r\n            anim.props  = _.cloneDeep(this.props);\r\n            anim.props.repeat = Math.floor(Math.max(times, 0)) || 1;\r\n\r\n            // reset to scenes\r\n            _.forOwn(anim.scenes, function(s, f){\r\n                s.played = 0;\r\n            });\r\n\r\n            return anim;\r\n        },\r\n\r\n        count: function() {\r\n            return this.frames.length;\r\n        },\r\n\r\n        at: function(index) {\r\n            var frame = this.frame(index);\r\n            return this.scene(frame);\r\n        },\r\n\r\n        frame: function(index) {\r\n            return this.frames[index];\r\n        },\r\n\r\n        scene: function(frame) {\r\n            return this.scenes[frame];\r\n        },\r\n\r\n        destroy: function() {\r\n            this.scenes = null;\r\n            this.frames = null;\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n    _.extend(Animation, {\r\n        guid: 0,\r\n\r\n        animable: {\r\n             x: { type: 'number', defaults: 0 },\r\n             y: { type: 'number', defaults: 0 },\r\n            cx: { type: 'number', defaults: 0 },\r\n            cy: { type: 'number', defaults: 0 },\r\n            transform: { type: 'transform', defaults: '' }\r\n        },\r\n\r\n        easing: {\r\n            linier: function(n) {\r\n                return n;\r\n            },\r\n\r\n            easeIn: function(n) {\r\n                return Math.pow(n, 1.7);\r\n            },\r\n\r\n            easeOut: function(n) {\r\n                return Math.pow(n, .48);\r\n            },\r\n\r\n            easeInOut: function(n) {\r\n                var q = .48 - n / 1.04,\r\n                    Q = Math.sqrt(.1734 + q * q),\r\n                    x = Q - q,\r\n                    X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\r\n                    y = -Q - q,\r\n                    Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\r\n                    t = X + Y + .5;\r\n                return (1 - t) * 3 * t * t + t * t * t;\r\n            },\r\n\r\n            backIn: function(n) {\r\n                var s = 1.70158;\r\n                return n * n * ((s + 1) * n - s);\r\n            },\r\n\r\n            backOut: function (n) {\r\n                n = n - 1;\r\n                var s = 1.70158;\r\n                return n * n * ((s + 1) * n + s) + 1;\r\n            },\r\n\r\n            elastic: function (n) {\r\n                if (n == !!n) {\r\n                    return n;\r\n                }\r\n                return pow(2, -10 * n) * math.sin((n - .075) * (2 * PI) / .3) + 1;\r\n            },\r\n\r\n            bounce: function (n) {\r\n                var s = 7.5625,\r\n                    p = 2.75,\r\n                    l;\r\n                if (n < (1 / p)) {\r\n                    l = s * n * n;\r\n                } else {\r\n                    if (n < (2 / p)) {\r\n                        n -= (1.5 / p);\r\n                        l = s * n * n + .75;\r\n                    } else {\r\n                        if (n < (2.5 / p)) {\r\n                            n -= (2.25 / p);\r\n                            l = s * n * n + .9375;\r\n                        } else {\r\n                            n -= (2.625 / p);\r\n                            l = s * n * n + .984375;\r\n                        }\r\n                    }\r\n                }\r\n                return l;\r\n            }\r\n        }\r\n    });\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function equalizeTransform (t1, t2) {\r\n        t2 = _.toString(t2).replace(/\\.{3}|\\u2026/g, t1);\r\n        t1 = Graph.util.transform2segments(t1) || [];\r\n        t2 = Graph.util.transform2segments(t2) || [];\r\n        \r\n        var maxlength = Math.max(t1.length, t2.length),\r\n            from = [],\r\n            to = [],\r\n            i = 0, j, jj,\r\n            tt1, tt2;\r\n\r\n        for (; i < maxlength; i++) {\r\n            tt1 = t1[i] || emptyTransform(t2[i]);\r\n            tt2 = t2[i] || emptyTransform(tt1);\r\n\r\n            if ((tt1[0] != tt2[0]) ||\r\n                (tt1[0].toLowerCase() == \"rotate\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3])) ||\r\n                (tt1[0].toLowerCase() == \"scale\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4]))) {\r\n                return {\r\n                    equal: false,\r\n                    from: tt1,\r\n                    to: tt2\r\n                }\r\n            }\r\n            from[i] = [];\r\n            to[i] = [];\r\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\r\n                j in tt1 && (from[i][j] = tt1[j]);\r\n                j in tt2 && (to[i][j] = tt2[j]);\r\n            }\r\n        }\r\n        return {\r\n            equal: true,\r\n            from: from,\r\n            to: to\r\n        };\r\n    }\r\n\r\n    function emptyTransform(item) {\r\n        var l = item[0];\r\n        switch (l.toLowerCase()) {\r\n            case \"translate\": return [l, 0, 0];\r\n            case \"matrix\": return [l, 1, 0, 0, 1, 0, 0];\r\n            case \"rotate\": if (item.length == 4) {\r\n                return [l, 0, item[2], item[3]];\r\n            } else {\r\n                return [l, 0];\r\n            }\r\n            case \"scale\": if (item.length == 5) {\r\n                return [l, 1, 1, item[3], item[4]];\r\n            } else if (item.length == 3) {\r\n                return [l, 1, 1];\r\n            } else {\r\n                return [l, 1];\r\n            }\r\n        }\r\n    }\r\n\r\n}());","\r\n(function(){\r\n    \r\n    Graph.plugin.Resizer = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            vector: null,\r\n            enabled: true,\r\n            suspended: true,\r\n            handleImage: Graph.config.base + 'img/resize-control.png',\r\n            handleSize: 17,\r\n            rendered: false,\r\n            minWidth: null,\r\n            minHeight: null\r\n        },\r\n\r\n        components: {\r\n            holder: null,\r\n            helper: null,\r\n            handle: null\r\n        },\r\n\r\n        trans: {\r\n            // original offset\r\n            ox: 0,\r\n            oy: 0,\r\n\r\n            // original\r\n            ow: 0,\r\n            oh: 0,\r\n\r\n            // current\r\n            cw: 0,\r\n            ch: 0,\r\n\r\n            // translation\r\n            dx: 0,\r\n            dy: 0\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var me = this, guid = vector.guid();\r\n            \r\n            options = options || {};\r\n\r\n            _.assign(me.props, options);\r\n\r\n            vector.addClass('graph-resizable');\r\n\r\n            me.props.handleImage = Graph.config.base + 'img/resize-control.png';\r\n            me.props.vector = guid;\r\n\r\n            me.cached.snapping = null;\r\n            me.cached.vertices = null;\r\n\r\n            me.initComponent();\r\n        },\r\n        \r\n        holder: function() {\r\n            return Graph.registry.vector.get(this.components.holder);\r\n        },\r\n\r\n        helper: function() {\r\n            return Graph.registry.vector.get(this.components.helper);\r\n        },\r\n\r\n        handle: function(dir) {\r\n            return Graph.registry.vector.get(this.components.handle[dir]);\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = me.components;\r\n            var holder, helper;\r\n\r\n            holder = (new Graph.svg.Group())\r\n                .addClass('graph-resizer')\r\n                .removeClass('graph-elem graph-elem-group');\r\n\r\n            holder.elem.group('graph-resizer');\r\n\r\n            holder.on({\r\n                render: _.bind(me.onHolderRender, me)\r\n            });\r\n            \r\n            helper = (new Graph.svg.Rect(0, 0, 0, 0, 0))\r\n                .addClass('graph-resizer-helper')\r\n                .removeClass('graph-elem graph-elem-rect')\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(holder);\r\n\r\n            helper.elem.group('graph-resizer');\r\n\r\n            comp.handle = {};\r\n\r\n            var handle = {\r\n                ne: {cursor: 'nesw-resize'},\r\n                se: {cursor: 'nwse-resize'},\r\n                sw: {cursor: 'nesw-resize'},\r\n                nw: {cursor: 'nwse-resize'},\r\n                 n: {cursor: 'ns-resize', axis: 'y'},\r\n                 e: {cursor: 'ew-resize', axis: 'x'},\r\n                 s: {cursor: 'ns-resize', axis: 'y'},\r\n                 w: {cursor: 'ew-resize', axis: 'x'}\r\n            };\r\n\r\n            _.forOwn(handle, function(c, dir){\r\n                (function(dir){\r\n                    var h = (new Graph.svg.Image(\r\n                        me.props.handleImage,\r\n                        0,\r\n                        0,\r\n                        me.props.handleSize,\r\n                        me.props.handleSize\r\n                    ))\r\n                    .selectable(false)\r\n                    .removeClass('graph-elem graph-elem-image')\r\n                    .addClass('graph-resizer-handle handle-' + dir);\r\n\r\n                    h.elem.group('graph-resizer');\r\n                    h.props.dir = dir;\r\n                    h.draggable(c);\r\n                    \r\n                    h.on('dragstart', _.bind(me.onHandleMoveStart, me));\r\n                    h.on('dragmove', _.bind(me.onHandleMove, me));\r\n                    h.on('dragend', _.bind(me.onHandleMoveEnd, me));\r\n\r\n                    h.render(holder);\r\n\r\n                    comp.handle[dir] = h.guid();\r\n                    h = null;\r\n                }(dir));\r\n            });\r\n\r\n            comp.holder = holder.guid();\r\n            comp.helper = helper.guid();\r\n\r\n            holder = null;\r\n            helper = null;\r\n            handle = null;\r\n        },\r\n\r\n        invalidate: function()  {\r\n            this.superclass.prototype.invalidate.call(this);\r\n            this.cached.vertices = null;\r\n        },\r\n\r\n        render: function() {\r\n            var me = this;\r\n\r\n            if (me.props.rendered) {\r\n                me.redraw();\r\n                return;\r\n            }\r\n\r\n            me.holder().render(me.vector().parent());\r\n            me.props.rendered = true;\r\n            me.redraw();\r\n        },\r\n\r\n        snap: function(snap) {\r\n            this.cached.snapping = snap;\r\n        },\r\n\r\n        vertices: function() {\r\n            var me = this,\r\n                vector = me.vector(),\r\n                vertices = me.cached.vertices;\r\n\r\n            if ( ! vertices) {\r\n                // get original bounding\r\n                var path = vector.shape(),\r\n                    bbox = path.bbox().toJson(),\r\n                    rotate = vector.matrixCurrent().rotate();\r\n\r\n                var ro, cx, cy, ox, oy, hs, hw, hh;\r\n\r\n                ro = rotate.deg;\r\n                cx = 0;\r\n                cy = 0;\r\n                ox = bbox.x;\r\n                oy = bbox.y;\r\n                hs = me.props.handleSize / 2;\r\n\r\n                if (ro) {\r\n                    var rmatrix = Graph.matrix(),\r\n                        path = vector.shapeRelative();\r\n\r\n                    cx = bbox.x + bbox.width / 2,\r\n                    cy = bbox.y + bbox.height / 2;\r\n\r\n                    rmatrix.rotate(-ro, cx, cy);\r\n\r\n                    path = path.transform(rmatrix);\r\n                    bbox = path.bbox().toJson();\r\n                }\r\n\r\n                hw = bbox.width / 2;\r\n                hh = bbox.height / 2;\r\n\r\n                vertices = {\r\n                    ne: {\r\n                        x: bbox.x + bbox.width - hs,\r\n                        y: bbox.y - hs\r\n                    },\r\n\r\n                    se: {\r\n                        x: bbox.x + bbox.width - hs,\r\n                        y: bbox.y + bbox.height - hs\r\n                    },\r\n\r\n                    sw: {\r\n                        x: bbox.x - hs,\r\n                        y: bbox.y + bbox.height - hs\r\n                    },\r\n\r\n                    nw: {\r\n                        x: bbox.x - hs,\r\n                        y: bbox.y - hs\r\n                    },\r\n\r\n                    n: {\r\n                        x: bbox.x + hw - hs,\r\n                        y: bbox.y - hs\r\n                    },\r\n                    e: {\r\n                        x: bbox.x + bbox.width - hs,\r\n                        y: bbox.y + hh - hs\r\n                    },\r\n                    s: {\r\n                        x: bbox.x + hw - hs,\r\n                        y: bbox.y + bbox.height - hs\r\n                    },\r\n                    w: {\r\n                        x: bbox.x - hs,\r\n                        y: bbox.y + hh - hs\r\n                    },\r\n\r\n                    rotate: {\r\n                        deg: ro,\r\n                        cx: cx,\r\n                        cy: cy\r\n                    },\r\n\r\n                    box: {\r\n                        x: bbox.x,\r\n                        y: bbox.y,\r\n                        width: bbox.width,\r\n                        height: bbox.height\r\n                    },\r\n\r\n                    offset: {\r\n                        x: ox,\r\n                        y: oy\r\n                    }\r\n                };\r\n\r\n                this.cached.vertices = vertices;\r\n            }\r\n\r\n            return vertices;\r\n        },\r\n\r\n        redraw: function() {\r\n            var me = this,\r\n                helper = me.helper(),\r\n                holder = me.holder();\r\n\r\n            var vx;\r\n\r\n            if ( ! holder) {\r\n                return;\r\n            }\r\n\r\n            vx = this.vertices();\r\n\r\n            if ( ! vx) {\r\n                return;\r\n            }\r\n            \r\n            helper.reset();\r\n\r\n            helper.attr({\r\n                x: vx.box.x,\r\n                y: vx.box.y,\r\n                width: vx.box.width,\r\n                height: vx.box.height\r\n            });\r\n            \r\n            helper.rotate(vx.rotate.deg, vx.rotate.cx, vx.rotate.cy).commit();\r\n\r\n            _.forOwn(me.components.handle, function(id, dir){\r\n                (function(id, dir){\r\n                    var h = me.handle(dir);\r\n                    h.show();\r\n                    h.reset();\r\n                    h.attr(vx[dir]);\r\n                    h.rotate(vx.rotate.deg, vx.rotate.cx, vx.rotate.cy).commit();\r\n                }(id, dir));\r\n            });\r\n\r\n            me.trans.ox = vx.offset.x;\r\n            me.trans.oy = vx.offset.y;\r\n            me.trans.ow = this.trans.cw = vx.box.width;\r\n            me.trans.oh = this.trans.ch = vx.box.height;\r\n            me.trans.dx = 0;\r\n            me.trans.dy = 0;\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.holder().elem.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            if ( ! this.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            if (this.props.suspended) {\r\n                this.props.suspended = false;\r\n\r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else { \r\n                    this.vector().parent().elem.append(this.holder().elem);\r\n                    this.redraw();\r\n                }\r\n            }\r\n        },\r\n\r\n        setupRestriction: function(handle) {\r\n            \r\n        },\r\n\r\n        onHolderRender: function(e) {\r\n            \r\n        },\r\n\r\n        onHandleMoveStart: function(e) {\r\n            var me = this, handle = e.publisher;\r\n\r\n            _.forOwn(me.components.handle, function(id, dir){\r\n                var h = me.handle(dir);\r\n                if (h !== handle) {\r\n                    h.hide();\r\n                }\r\n            });\r\n\r\n            var snapping = this.cached.snapping;\r\n\r\n            if (snapping && handle.draggable().snap() !== snapping) {\r\n                handle.draggable().snap(snapping);    \r\n            }\r\n            \r\n            // set restriction\r\n            var minWidth = +me.props.minWidth || 0,\r\n                minHeight = +me.props.minHeight || 0;\r\n\r\n            if (minWidth || minHeight) {\r\n                var dir = handle.props.dir,\r\n                    box = me.vector().bboxView().toJson(),\r\n                    xAxis = null,\r\n                    yAxis = null;\r\n\r\n                switch(dir) {\r\n                    case 'e':\r\n\r\n                        break;\r\n                }\r\n\r\n                // handle.draggable().restrict(function(x, y){\r\n\r\n                // });\r\n            }\r\n\r\n            if ( ! _.isNull(me.props.minWidth) || ! _.isNull(me.props.minHeight)) {\r\n                \r\n                // handle.draggable().restrict(function(x, y){\r\n                //     return {\r\n                //         x: 800, \r\n                //         y: 0,\r\n                //         width: Infinity,\r\n                //         height: Infinity\r\n                //     }\r\n                // });\r\n            }\r\n\r\n            handle.show();\r\n            handle.removeClass('dragging');\r\n        },\r\n\r\n        onHandleMove: function(e) {\r\n            var me = this, \r\n                helper = me.helper(), \r\n                handle = e.publisher;\r\n            \r\n            var tr = this.trans,\r\n                dx = e.dx,\r\n                dy = e.dy;\r\n\r\n            switch(handle.props.dir) {\r\n                case 'ne':\r\n                    tr.cw += dx;\r\n                    tr.ch -= dy;\r\n\r\n                    me.trans.dy += dy;\r\n                    helper.translate(0, dy).commit();\r\n                    break;\r\n\r\n                case 'se':\r\n                    tr.cw += dx;\r\n                    tr.ch += dy;\r\n\r\n                    break;\r\n\r\n                case 'sw':\r\n                    tr.cw -= dx;\r\n                    tr.ch += dy;\r\n\r\n                    me.trans.dx += dx;\r\n                    helper.translate(dx, 0).commit();\r\n                    break;\r\n\r\n                case 'nw':\r\n                    tr.cw -= dx;\r\n                    tr.ch -= dy;\r\n\r\n                    me.trans.dx += dx;\r\n                    me.trans.dy += dy;\r\n                    helper.translate(dx, dy).commit();\r\n                    break;\r\n\r\n                case 'n':\r\n                    tr.cw += 0;\r\n                    tr.ch -= dy;\r\n\r\n                    me.trans.dy += dy;\r\n                    helper.translate(0, dy).commit();\r\n                    break;\r\n\r\n                case 'e':\r\n                    tr.cw += dx;\r\n                    tr.ch += 0;\r\n\r\n                    break;\r\n\r\n                case 's':\r\n                    tr.cw += 0;\r\n                    tr.ch += dy;\r\n                    break;\r\n\r\n                case 'w':\r\n                    tr.cw -= dx;\r\n                    tr.ch += 0;\r\n\r\n                    me.trans.dx += dx;\r\n                    helper.translate(dx, 0).commit();\r\n                    break;\r\n            }\r\n\r\n            helper.attr({\r\n                width:  tr.cw,\r\n                height: tr.ch\r\n            });\r\n\r\n        },\r\n\r\n        onHandleMoveEnd: function(e) {\r\n            var me = this,\r\n                tr = this.trans,\r\n                handle = e.publisher;\r\n\r\n            var sx, sy, cx, cy, dx, dy;\r\n\r\n            sx = tr.ow > 0 ? (tr.cw / tr.ow) : 1;\r\n            sy = tr.oh > 0 ? (tr.ch / tr.oh) : 1;\r\n            dx = tr.dx;\r\n            dy = tr.dy;\r\n\r\n            switch(handle.props.dir) {\r\n                case 'ne':\r\n                    cx = tr.ox;\r\n                    cy = tr.oy + tr.oh;\r\n                    break;\r\n                case 'se':\r\n                    cx = tr.ox;\r\n                    cy = tr.oy;\r\n                    break;\r\n                case 'sw':\r\n                    cx = tr.ox + tr.ow;\r\n                    cy = tr.oy;\r\n                    break;\r\n                case 'nw':\r\n                    cx = tr.ox + tr.ow;\r\n                    cy = tr.oy + tr.oh;\r\n                    break;\r\n                case 'n':\r\n                    cx = tr.ox + tr.ow / 2;\r\n                    cy = tr.oy + tr.oh;\r\n                    break;\r\n                case 'e':\r\n                    cx = tr.ox;\r\n                    cy = tr.oy + tr.oh / 2;\r\n                    break;\r\n                case 's':\r\n                    cx = tr.ox + tr.ow / 2;\r\n                    cy = tr.oy;\r\n                    break;\r\n                case 'w':\r\n                    cx = tr.ox + tr.ow;\r\n                    cy = tr.oy + tr.oh / 2;\r\n                    break;\r\n            }\r\n\r\n            // track translation\r\n            var vector = me.vector(),\r\n                oldcen = vector.bbox().center().toJson(),\r\n                resize = vector.resize(sx, sy, cx, cy, dx, dy),\r\n                newcen = vector.bbox().center().toJson();\r\n\r\n            var vdx = newcen.x - oldcen.x,\r\n                vdy = newcen.y - oldcen.y;\r\n\r\n            resize.translate.dx = vdx;\r\n            resize.translate.dy = vdy;\r\n            \r\n            me.redraw();\r\n            me.fire('resize', resize);\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Resizer';\r\n        },\r\n\r\n        destroy: function() {\r\n            // remove handles\r\n            var me = this\r\n\r\n            _.forOwn(me.components.handle, function(id, dir){\r\n                var h = me.handle(dir);\r\n                h.remove();\r\n            });\r\n\r\n            me.components.handle = null;\r\n\r\n            // remove helper\r\n            me.helper().remove();\r\n            me.components.helper = null;\r\n\r\n            // remove holder\r\n            me.holder().remove();\r\n            me.components.holder = null;\r\n\r\n            // remove listeners\r\n            me.listeners = null;\r\n        }\r\n        \r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Collector = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            enabled: false,\r\n            suspended: true,\r\n            rendered: false,\r\n            activator: 'tool',\r\n            ready: false\r\n        },\r\n\r\n        paper: null,\r\n\r\n        collection: [],\r\n\r\n        components: {\r\n            rubber: null\r\n        },\r\n\r\n        collecting: {\r\n\r\n        },\r\n\r\n        constructor: function(paper) {\r\n            var me = this;\r\n\r\n            if ( ! paper.isPaper()) {\r\n                throw Graph.error('Lasso tool only available for paper !');\r\n            }\r\n\r\n            me.paper = paper;\r\n            me.components.rubber = Graph.$('<div class=\"graph-rubberband\">');\r\n\r\n            paper.on('keynavdown', _.bind(me.onKeynavDown, me));\r\n            paper.on('keynavup', _.bind(me.onKeynavUp, me));\r\n\r\n            if (me.paper.props.rendered) {\r\n                me.setup();\r\n            } else {\r\n                me.paper.on('render', function(){\r\n                    me.setup();\r\n                });\r\n            }\r\n        },\r\n\r\n        enable: function(activator) {\r\n            this.props.enabled = true;\r\n            this.props.activator = activator;\r\n\r\n            this.paper.cursor('crosshair');\r\n            this.paper.state('collecting');\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.enabled = false;\r\n            this.paper.cursor('default');\r\n        },\r\n\r\n        setup: function() {\r\n            var me = this;\r\n\r\n            if (me.props.ready) {\r\n                return;\r\n            }\r\n\r\n            me.props.ready = true;\r\n\r\n            var collecting = me.collecting,\r\n                paper = me.paper,\r\n                layout = paper.layout(),\r\n                offset = layout.offset(),\r\n                rubber = me.components.rubber,\r\n                vendor = paper.interactable().vendor();\r\n\r\n            vendor.styleCursor(false);\r\n\r\n            vendor.draggable({\r\n\r\n                manualStart: true,\r\n\r\n                onstart: function(e) {\r\n\r\n                    _.assign(collecting, {\r\n                        start: {\r\n                            x: e.clientX,\r\n                            y: e.clientY,\r\n                        },\r\n                        end: {\r\n                            x: e.clientX,\r\n                            y: e.clientY,\r\n                        },\r\n                        bounds: {}\r\n                    });\r\n\r\n                    rubber.query.css({\r\n                        width: 0,\r\n                        height: 0,\r\n                        transform: 'translate(' + (collecting.start.x - offset.left) + 'px, ' + (collecting.start.y - offset.top) + 'px)'\r\n                    });\r\n                },\r\n\r\n                onmove: function(e) {\r\n                    var start = collecting.start,\r\n                        end = {\r\n                            x: e.clientX,\r\n                            y: e.clientY\r\n                        };\r\n\r\n                    var bounds;\r\n\r\n                    if ((start.x <= end.x && start.y < end.y) || (start.x < end.x && start.y <= end.y)) {\r\n                        bounds = {\r\n                            x: start.x,\r\n                            y: start.y,\r\n                            width:  end.x - start.x,\r\n                            height: end.y - start.y\r\n                        };\r\n                    } else if ((start.x >= end.x && start.y < end.y) || (start.x > end.x && start.y <= end.y)) {\r\n                        bounds = {\r\n                            x: end.x,\r\n                            y: start.y,\r\n                            width:  start.x - end.x,\r\n                            height: end.y - start.y\r\n                        };\r\n                    } else if ((start.x <= end.x && start.y > end.y) || (start.x < end.x && start.y >= end.y)) {\r\n                        bounds = {\r\n                            x: start.x,\r\n                            y: end.y,\r\n                            width:  end.x - start.x,\r\n                            height: start.y - end.y\r\n                        };\r\n                    } else if ((start.x >= end.x && start.y > end.y) || (start.x > end.x && start.y >= end.y)) {\r\n                        bounds = {\r\n                            x: end.x,\r\n                            y: end.y,\r\n                            width:  start.x - end.x,\r\n                            height: start.y - end.y\r\n                        };\r\n                    } else {\r\n                        bounds = {\r\n                            x: end.x,\r\n                            y: end.y,\r\n                            width:  0,\r\n                            height: 0\r\n                        };\r\n                    }\r\n\r\n                    collecting.bounds = bounds;\r\n\r\n                    rubber.query.css({\r\n                        width:  bounds.width,\r\n                        height: bounds.height,\r\n                        transform: 'translate(' + (bounds.x - offset.left) + 'px,' + (bounds.y - offset.top) + 'px)'\r\n                    });\r\n                },\r\n\r\n                onend: function() {\r\n                    var context = paper.guid(),\r\n                        vectors = Graph.registry.vector.collect(context),\r\n                        bounds = collecting.bounds,\r\n                        scale = layout.scale();\r\n\r\n                    var start = layout.grabLocation({\r\n                        clientX: bounds.x,\r\n                        clientY: bounds.y\r\n                    });\r\n\r\n                    var end = layout.grabLocation({\r\n                        clientX: bounds.x + bounds.width,\r\n                        clientY: bounds.y + bounds.height\r\n                    });\r\n\r\n                    var bbox = new Graph.lang.BBox({\r\n                        x: start.x,\r\n                        y: start.y,\r\n                        x2: end.x,\r\n                        y2: end.y,\r\n                        width: end.x - start.x,\r\n                        height: end.y - start.y\r\n                    });\r\n\r\n                    bbox.transform(paper.viewport().matrix());\r\n\r\n                    _.forEach(vectors, function(v){\r\n                        if (v.guid() != context && v.isSelectable() && ! v.isGroup()) {\r\n                            if (bbox.contains(v)) {\r\n                                me.collect(v, true);\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    if (me.props.activator == 'tool') {\r\n                        paper.tool().activate('panzoom');\r\n                    }\r\n\r\n                    bbox = null;\r\n                    me.suspend();\r\n                }\r\n            })\r\n            .on('down', function(e){\r\n                var single = ! (e.ctrlKey || e.shiftKey),\r\n                    vector = Graph.registry.vector.get(e.target);\r\n\r\n                if (vector) {\r\n                    if ( ! vector.isSelectable()) {\r\n                        if ( ! vector.elem.belong('graph-resizer') && ! vector.elem.belong('graph-link')) {\r\n                            if (single) {\r\n                                me.clearCollection();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            .on('tap', function(e){\r\n                var vector = Graph.registry.vector.get(e.target),\r\n                    single = ! (e.ctrlKey || e.shiftKey);\r\n\r\n                if (vector && vector.isSelectable()) {\r\n                    if (vector.paper().state() == 'linking') {\r\n                        me.clearCollection();\r\n                        return;\r\n                    }\r\n\r\n                    if (single) {\r\n                        me.clearCollection();\r\n                    }\r\n\r\n                    me.collect(vector, ! single);\r\n                }\r\n\r\n            }, true)\r\n            .on('move', function(e){\r\n                var i = e.interaction;\r\n\r\n                if (me.props.enabled) {\r\n                    if (i.pointerIsDown && ! i.interacting()) {\r\n\r\n                        var action = {name: 'drag'};\r\n\r\n                        // -- workaround for a bug in v1.2.6 of interact.js\r\n                        i.prepared.name = action.name;\r\n                        i.setEventXY(i.startCoords, i.pointers);\r\n\r\n                        if (e.currentTarget === paper.node()) {\r\n                            if (me.props.suspended) {\r\n                                me.resume();\r\n                            }\r\n                            i.start(action, e.interactable, rubber.node());\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        render: function() {\r\n            var me = this;\r\n\r\n            if (me.props.rendered) {\r\n                return;\r\n            }\r\n\r\n            me.paper.container().append(me.components.rubber);\r\n            me.props.rendered = true;\r\n        },\r\n\r\n        collect: function(vector, batch) {\r\n            var me = this, offset;\r\n\r\n            vector.lasso = this;\r\n            vector.batch = batch;\r\n\r\n            vector.select(batch);\r\n\r\n            offset = _.indexOf(this.collection, vector);\r\n\r\n            if (offset === -1) {\r\n                this.collection.push(vector);\r\n            }\r\n\r\n            Graph.cached.paper = me.paper.guid();\r\n        },\r\n\r\n        decollect: function(vector) {\r\n            var batch, offset;\r\n\r\n            batch = vector.batch;\r\n\r\n            delete vector.lasso;\r\n            delete vector.batch;\r\n\r\n            vector.deselect(batch);\r\n            offset = _.indexOf(this.collection, vector);\r\n\r\n            if (offset > -1) {\r\n                this.collection.splice(offset, 1);\r\n            }\r\n        },\r\n\r\n        clearCollection: function(except) {\r\n            var me = this,\r\n                collection = me.collection.slice();\r\n\r\n            _.forEach(collection, function(v){\r\n                if (v !== except) {\r\n                    me.decollect(v);\r\n                }\r\n            });\r\n\r\n            collection = null;\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.components.rubber.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            if (this.props.suspended) {\r\n                this.props.suspended = false;\r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else {\r\n                    this.paper.container().append(this.components.rubber);\r\n                }\r\n            }\r\n        },\r\n\r\n        syncDragStart: function(master, e) {\r\n            var me = this;\r\n\r\n            _.forEach(me.collection, function(v){\r\n                if (v.plugins.dragger && v.plugins.dragger.props.enabled && v !== master) {\r\n                    (function(){\r\n                        var mat = v.graph.matrix.data(),\r\n                            sin = mat.sin,\r\n                            cos = mat.cos;\r\n\r\n                        if (v.plugins.resizer && ! v.plugins.resizer.suspended) {\r\n                            v.plugins.resizer.suspend();\r\n                        }\r\n\r\n                        if (v.plugins.dragger.props.ghost) {\r\n                            v.plugins.dragger.resume();\r\n                        }\r\n\r\n                        v.syncdrag = {\r\n                            sin: sin,\r\n                            cos: cos,\r\n                            tdx: 0,\r\n                            tdy: 0\r\n                        };\r\n\r\n                        v.addClass('dragging');\r\n\r\n                        v.fire('dragstart', {\r\n                            dx: e.dx *  cos + e.dy * sin,\r\n                            dy: e.dx * -sin + e.dy * cos,\r\n                            master: false\r\n                        });\r\n\r\n                    }());\r\n                }\r\n            });\r\n\r\n            me.fire('beforedrag');\r\n        },\r\n\r\n        syncDragMove: function(master, e) {\r\n            var me = this, dx, dy;\r\n\r\n            _.forEach(me.collection, function(v){\r\n                if (v.plugins.dragger && v.plugins.dragger.props.enabled && v !== master) {\r\n                    (function(v, e){\r\n                        var dx = e.ox *  v.syncdrag.cos + e.oy * v.syncdrag.sin,\r\n                            dy = e.ox * -v.syncdrag.sin + e.oy * v.syncdrag.cos;\r\n\r\n                        if (v.plugins.dragger.props.ghost) {\r\n                            v.plugins.dragger.helper().translate(e.ox, e.oy).commit();\r\n                        } else {\r\n                            v.translate(dx, dy).commit();\r\n                        }\r\n\r\n                        v.syncdrag.tdx += dx;\r\n                        v.syncdrag.tdy += dy;\r\n\r\n                        v.fire('dragmove', {\r\n                            dx: dx,\r\n                            dy: dy,\r\n                            master: false\r\n                        });\r\n\r\n                    }(v, e));\r\n                }\r\n            });\r\n\r\n        },\r\n\r\n        syncDragEnd: function(master, e) {\r\n            var me = this;\r\n\r\n            _.forEach(me.collection, function(v, i){\r\n                if (v.plugins.dragger && v.plugins.dragger.props.enabled && v !== master) {\r\n                    (function(v, e){\r\n                        var batchSync = v.plugins.dragger.props.batchSync,\r\n                            ghost = v.plugins.dragger.props.ghost;\r\n\r\n                        if (ghost) {\r\n                            if (batchSync) {\r\n                                v.translate(v.syncdrag.tdx, v.syncdrag.tdy).commit();\r\n                            }\r\n                            v.plugins.dragger.suspend();\r\n                        }\r\n\r\n                        if ( ! batchSync) {\r\n                            v.dirty(true);\r\n                        }\r\n\r\n                        v.fire('dragend', {\r\n                            dx: v.syncdrag.tdx,\r\n                            dy: v.syncdrag.tdy,\r\n                            master: false\r\n                        });\r\n\r\n                        v.removeClass('dragging');\r\n\r\n                        delete v.syncdrag;\r\n\r\n                    }(v, e));\r\n                }\r\n            });\r\n\r\n            e.type = 'afterdrag';\r\n            me.fire(e);\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Collector';\r\n        },\r\n\r\n        onKeynavDown: function(e) {\r\n            if (e.keyCode == Graph.event.SHIFT && this.props.activator != 'key') {\r\n                var tool = this.paper.tool(),\r\n                    curr = tool.current();\r\n\r\n                if (curr != 'collector') {\r\n                    tool.activate('collector', 'key');\r\n                }\r\n            }\r\n        },\r\n\r\n        onKeynavUp: function(e) {\r\n            if (e.keyCode == Graph.event.SHIFT) {\r\n                var tool = this.paper.tool(),\r\n                    curr = tool.current();\r\n\r\n                if (curr == 'collector') {\r\n                    this.props.activator = 'tool';\r\n                    tool.activate('panzoom');\r\n                }\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.plugin.Dragger = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            ready: false,\r\n            manual: false,\r\n\r\n            ghost: false,\r\n            vector: null,\r\n            enabled: true,\r\n            rendered: false,\r\n            suspended: true,\r\n            inertia: false,\r\n            bound: false,\r\n            grid: null,\r\n            axis: false,\r\n            cursor: 'move',\r\n\r\n            dragClass: '',\r\n\r\n            // batching operation\r\n            batchSync: true\r\n        },\r\n\r\n        rotation: {\r\n            deg: 0,\r\n            rad: 0,\r\n            sin: 0,\r\n            cos: 1\r\n        },\r\n\r\n        scaling: {\r\n            x: 1,\r\n            y: 1\r\n        },\r\n\r\n        trans: {\r\n            vector: null,\r\n            paper: null,\r\n            helper: null,\r\n            dx: 0,\r\n            dy: 0\r\n        },\r\n\r\n        components: {\r\n            holder: null,\r\n            helper: null\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var me = this;\r\n\r\n            vector.addClass('graph-draggable');\r\n            me.props.vector = vector.guid();\r\n\r\n            options = _.extend({\r\n                inertia: false\r\n            }, options || {});\r\n\r\n            _.forEach(['axis', 'grid', 'bbox', 'ghost'], function(name){\r\n                if (options[name] !== undefined) {\r\n                    me.props[name] = options[name];\r\n                }\r\n            });\r\n\r\n            _.assign(me.props, options);\r\n\r\n            me.cached.snapping = null;\r\n            me.cached.origin = null;\r\n\r\n            me.initComponent();\r\n\r\n            vector.on('render.dragger', _.bind(me.onVectorRender, me));\r\n\r\n            if (vector.props.rendered) {\r\n                me.setup();\r\n            }\r\n        },\r\n\r\n        holder: function() {\r\n            return Graph.registry.vector.get(this.components.holder);\r\n        },\r\n\r\n        helper: function() {\r\n            return Graph.registry.vector.get(this.components.helper);\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = me.components;\r\n            var holder, helper;\r\n\r\n            if (me.props.ghost) {\r\n                holder = (new Graph.svg.Group())\r\n                    .addClass('graph-dragger')\r\n                    .removeClass('graph-elem graph-elem-group')\r\n                    .traversable(false)\r\n                    .selectable(false);\r\n\r\n                var style = 'graph-dragger-helper' + (me.props.dragClass ? ' ' + me.props.dragClass : '');\r\n\r\n                helper = (new Graph.svg.Rect(0, 0, 0, 0, 0))\r\n                    .addClass(style)\r\n                    .removeClass('graph-elem graph-elem-rect')\r\n                    .traversable(false)\r\n                    .selectable(false)\r\n                    .clickable(false)\r\n                    .render(holder);\r\n\r\n                style = null;\r\n\r\n                helper.elem.data(Graph.string.ID_VECTOR, this.vector().guid());\r\n\r\n                comp.holder = holder.guid();\r\n                comp.helper = helper.guid();\r\n\r\n                holder = null;\r\n                helper = null;\r\n            }\r\n        },\r\n\r\n        setup: function() {\r\n            var me, vector, vendor, paper, options;\r\n\r\n            if (this.props.ready) {\r\n                return;\r\n            }\r\n\r\n            me = this;\r\n            vector = me.vector();\r\n            paper = vector.paper();\r\n            options = {};\r\n\r\n            _.extend(options, {\r\n                manualStart: true,\r\n                onstart: _.bind(me.onDragStart, me),\r\n                onmove: _.bind(me.onDragMove, me),\r\n                onend: _.bind(me.onDragEnd, me)\r\n            });\r\n\r\n            vendor = vector.interactable().vendor();\r\n            vendor.draggable(options);\r\n            vendor.styleCursor(false);\r\n\r\n            me.cached.origin = vendor.origin();\r\n            me.cached.snapping = [];\r\n\r\n            vendor.on('down', function draggerDown(e){\r\n                e.preventDefault();\r\n                // e.stopPropagation();\r\n            });\r\n\r\n            if ( ! me.props.manual) {\r\n                vendor.on('move', _.bind(me.onPointerMove, me, _, vector));\r\n            }\r\n\r\n            var matrix = vector.matrixCurrent(),\r\n                rotate = matrix.rotate(),\r\n                scale  = matrix.scale();\r\n\r\n            me.rotate(rotate.deg);\r\n            me.scale(scale.x, scale.y);\r\n\r\n            if (me.props.grid) {\r\n                me.snap({\r\n                    mode: 'grid',\r\n                    x: me.props.grid[0],\r\n                    y: me.props.grid[1]\r\n                });\r\n            }\r\n\r\n            me.props.ready = true;\r\n        },\r\n\r\n        enable: function() {\r\n            this.props.enabled = true;\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.enabled = false;\r\n        },\r\n\r\n        ghost: function(ghost) {\r\n            if (ghost === undefined) {\r\n                return this.props.ghost;\r\n            }\r\n            this.props.ghost = ghost;\r\n            return this;\r\n        },\r\n\r\n        render: function() {\r\n            var me = this, vector = me.vector();\r\n\r\n            if ( ! me.props.rendered) {\r\n                me.props.rendered = true;\r\n                me.holder().render(vector.parent());\r\n            }\r\n\r\n            if (me.props.ghost) {\r\n                me.redraw();\r\n            }\r\n\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.holder().elem.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            this.props.suspended = false;\r\n\r\n            if ( ! this.props.rendered) {\r\n                this.render();\r\n            } else {\r\n                this.vector().parent().elem.append(this.holder().elem);\r\n                this.redraw();\r\n            }\r\n        },\r\n\r\n        redraw: function() {\r\n            var vector = this.vector(),\r\n                helper = this.helper();\r\n\r\n            if (helper) {\r\n                var vbox = vector.bbox().toJson(),\r\n                    hbox = helper.bbox().toJson();\r\n\r\n                var dx = vbox.x - hbox.x,\r\n                    dy = vbox.y - hbox.y;\r\n\r\n                helper.translate(dx, dy).commit();\r\n\r\n                helper.attr({\r\n                    width: vbox.width,\r\n                    height: vbox.height\r\n                });\r\n            }\r\n        },\r\n\r\n        rotate: function(deg) {\r\n            var rad = Graph.util.rad(deg);\r\n            this.rotation.deg = deg;\r\n            this.rotation.rad = rad;\r\n            this.rotation.sin = Math.sin(rad);\r\n            this.rotation.cos = Math.cos(rad);\r\n        },\r\n\r\n        scale: function(sx, sy) {\r\n            sy = _.defaultTo(sy, sx);\r\n            this.scaling.x = sx;\r\n            this.scaling.y = sy;\r\n        },\r\n\r\n        origin: function(origin) {\r\n            if (origin === undefined) {\r\n                return this.cached.origin;\r\n            }\r\n\r\n            this.cached.origin = origin;\r\n\r\n            var vendor = this.vector().interactable().vendor();\r\n\r\n            if (vendor) {\r\n                vendor.origin(origin);\r\n            }\r\n        },\r\n\r\n        snap: function(snap, end) {\r\n\r\n            if (snap === undefined) {\r\n                return this.cached.snapping;\r\n            }\r\n\r\n            if (end === undefined) {\r\n                end = false;\r\n            }\r\n\r\n            var me = this, snaps = [];\r\n\r\n            // save original request\r\n            this.cached.snapping = snap;\r\n\r\n            if (_.isArray(snap)) {\r\n                _.forEach(snap, function(s){\r\n                    snaps.push(fixsnap(s));\r\n                });\r\n            } else {\r\n                snaps.push(fixsnap(snap));\r\n            }\r\n\r\n            var vendor = this.vector().interactable().vendor();\r\n\r\n            if (vendor) {\r\n                vendor.setOptions('snap', {\r\n                    targets: snaps,\r\n                    endOnly: end\r\n                });\r\n            }\r\n\r\n            /////////\r\n\r\n            function fixsnap(snap) {\r\n\r\n                if (_.isFunction(snap)) {\r\n                    return snap;\r\n                }\r\n\r\n                snap.mode = _.defaultTo(snap.mode, 'anchor');\r\n\r\n                if (snap.mode == 'grid') {\r\n                    if (me.props.axis == 'x') {\r\n                        snap.y = 0;\r\n                    } else if (me.props.axis == 'y') {\r\n                        snap.x = 0;\r\n                    }\r\n                    snap = interact.createSnapGrid({x: snap.x, y: snap.y});\r\n                } else {\r\n                    snap.range = _.defaultTo(snap.range, 20);\r\n                }\r\n                return snap;\r\n            }\r\n        },\r\n\r\n        resetSnap: function() {\r\n            this.snaps = [];\r\n\r\n            this.snap({\r\n                mode: 'grid',\r\n                x: this.props.grid[0],\r\n                y: this.props.grid[1]\r\n            });\r\n        },\r\n\r\n        restrict: function(options) {\r\n            var vendor = this.vector().interactable().vendor();\r\n\r\n            if (vendor) {\r\n                options = options || {};\r\n                vendor.setPerAction('drag', {\r\n                    restrict: {\r\n                        restriction: options\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        onVectorRender: function() {\r\n            this.setup();\r\n        },\r\n\r\n        onPointerMove: function draggerMove(e, vector) {\r\n            var i = e.interaction;\r\n\r\n            if (this.props.enabled) {\r\n                if (i.pointerIsDown && ! i.interacting()) {\r\n                    var paper = vector.paper(),\r\n                        node = vector.node(),\r\n                        action = {name: 'drag'};\r\n\r\n                    // -- workaround for a bug in v1.2.6 of interact.js\r\n                    i.prepared.name = action.name;\r\n                    i.setEventXY(i.startCoords, i.pointers);\r\n\r\n                    if (e.currentTarget === node) {\r\n                        if (paper) {\r\n                            var state = paper.state();\r\n\r\n                            if (state == 'collecting') {\r\n                                if (vector.elem.belong('graph-resizer')) {\r\n                                    paper.tool().activate('panzoom');\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            } else if (state == 'linking') {\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        if (this.props.ghost) {\r\n                            if (this.props.suspended) {\r\n                                this.resume();\r\n                            }\r\n                            i.start(action, e.interactable, this.helper().node());\r\n                        } else {\r\n                            i.start(action, e.interactable, node);\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n            e.preventDefault();\r\n\r\n        },\r\n\r\n        onDragStart: function(e) {\r\n            var vector = this.vector(),\r\n                paper = vector.paper(),\r\n                helper = this.helper();\r\n\r\n            vector.addClass('dragging');\r\n            paper.cursor(this.props.cursor);\r\n\r\n            this.trans.vector = vector;\r\n            this.trans.paper = paper;\r\n            this.trans.helper = helper;\r\n\r\n            this.trans.dx = 0;\r\n            this.trans.dy = 0;\r\n            this.trans.hx = 0;\r\n            this.trans.hy = 0;\r\n\r\n            var edata = {\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n                dx: 0,\r\n                dy: 0,\r\n                ghost: this.props.ghost\r\n            };\r\n\r\n            this.fire('dragstart', edata);\r\n        },\r\n\r\n        onDragMove: function(e) {\r\n\r\n            var trans = this.trans,\r\n                paper = trans.paper,\r\n                vector = trans.vector,\r\n                helper = trans.helper,\r\n                axs = this.props.axis,\r\n                deg = this.rotation.deg,\r\n                sin = this.rotation.sin,\r\n                cos = this.rotation.cos,\r\n                scaleX = this.scaling.x,\r\n                scaleY = this.scaling.y;\r\n\r\n            // check current scaling\r\n            var scaling = vector.matrixCurrent().scale();\r\n\r\n            if (scaling.x !== scaleX || scaling.y !== scaleY) {\r\n                this.scale(scaling.x, scaling.y);\r\n                scaleX = scaling.x;\r\n                scaleY = scaling.y;\r\n            }\r\n\r\n            var edx = _.defaultTo(e.dx, 0),\r\n                edy = _.defaultTo(e.dy, 0);\r\n\r\n            var dx, dy, hx, hy, tx, ty;\r\n\r\n            dx = dy = hx = hy = tx = ty = 0;\r\n\r\n            edx /= scaleX;\r\n            edy /= scaleY;\r\n\r\n            if (axs == 'x') {\r\n                dx = hx = edx;\r\n                dy = hy = 0;\r\n\r\n                tx = edx *  cos + 0 * sin;\r\n                ty = edx * -sin + 0 * cos;\r\n            } else if (axs == 'y') {\r\n                dx = hx = 0;\r\n                dy = hy = edy;\r\n\r\n                tx = 0 *  cos + edy * sin;\r\n                ty = 0 * -sin + edy * cos;\r\n            } else {\r\n                hx = edx;\r\n                hy = edy;\r\n\r\n                dx = tx = edx *  cos + edy * sin;\r\n                dy = ty = edx * -sin + edy * cos;\r\n            }\r\n\r\n            this.trans.dx += tx;\r\n            this.trans.dy += ty;\r\n\r\n            this.trans.hx += hx;\r\n            this.trans.hy += hy;\r\n\r\n            var pageX = _.defaultTo(e.pageX, e.x0),\r\n                pageX = _.defaultTo(e.pageY, e.y0);\r\n\r\n            pageX /= scaleX;\r\n            pageX /= scaleY;\r\n\r\n            var event = {\r\n                pageX: pageX,\r\n                pageY: pageX,\r\n\r\n                ex: edx,\r\n                ey: edy,\r\n\r\n                dx: dx,\r\n                dy: dy,\r\n\r\n                hx: hx,\r\n                hy: hy,\r\n\r\n                ox: hx,\r\n                oy: hy,\r\n\r\n                ghost: this.props.ghost\r\n            };\r\n\r\n            this.fire('dragmove', event);\r\n\r\n            if (helper) {\r\n                helper.translate(event.hx, event.hy).commit();\r\n            } else {\r\n                vector.translate(event.dx, event.dy).commit();\r\n            }\r\n        },\r\n\r\n        onDragEnd: function(e) {\r\n            var trans = this.trans,\r\n                paper = trans.paper,\r\n                vector = trans.vector,\r\n                helper = trans.helper,\r\n                dx = trans.dx,\r\n                dy = trans.dy,\r\n                hx = trans.hx,\r\n                hy = trans.hy;\r\n\r\n            if (helper) {\r\n                vector.translate(dx, dy).commit();\r\n                this.redraw();\r\n                this.suspend();\r\n            }\r\n\r\n            vector.removeClass('dragging');\r\n            paper.cursor('default');\r\n\r\n            var edata = {\r\n                dx: dx,\r\n                dy: dy,\r\n                ghost: this.props.ghost\r\n            };\r\n\r\n            this.fire('dragend', edata);\r\n\r\n            this.trans.vector = null;\r\n            this.trans.paper = null;\r\n            this.trans.helper = null;\r\n\r\n            this.trans.dx = 0;\r\n            this.trans.dy = 0;\r\n            this.trans.hx = 0;\r\n            this.trans.hy = 0;\r\n\r\n        },\r\n\r\n        destroy: function() {\r\n            var me = this;\r\n\r\n            if (me.components.helper) {\r\n                me.helper().remove();\r\n            }\r\n\r\n            me.components.helper = null;\r\n\r\n            if (me.components.holder) {\r\n                me.holder().remove();\r\n            }\r\n\r\n            me.components.holder = null;\r\n            me.listeners = {};\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Dragger';\r\n        }\r\n    });\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.plugin.Dropper = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            overlap: 'center',\r\n            accept: '.graph-draggable'\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var me = this;\r\n\r\n            _.assign(me.props, options || {});\r\n            vector.addClass('graph-dropzone').removeClass('graph-draggable');\r\n\r\n            me.props.vector = vector.guid();    \r\n            \r\n            vector.on({\r\n                render: _.bind(me.onVectorRender, me)\r\n            });\r\n\r\n            if (vector.props.rendered) {\r\n                me.setup();\r\n            }\r\n        },\r\n\r\n        setup: function() {\r\n            var me = this;\r\n\r\n            if (me.plugin) {\r\n                return;\r\n            }\r\n\r\n            var config = _.extend({}, me.props, {\r\n                checker: _.bind(me.onDropValidate, me),\r\n\r\n                ondropactivate: _.bind(me.onDropActivate, me),\r\n                ondropdeactivate: _.bind(me.onDropDeactivate, me),\r\n                ondragenter: _.bind(me.onDragEnter, me),\r\n                ondragleave: _.bind(me.onDragLeave, me),\r\n                ondrop: _.bind(me.onDrop, me)\r\n            });\r\n\r\n            me.plugin = me.vector.interactable().dropzone(config);\r\n        },\r\n\r\n        onDropValidate: function( edrop, edrag, dropped, dropzone, dropel, draggable, dragel ) {\r\n            return dropped;\r\n            /*if (dropped) {\r\n                if (this.config.validate) {\r\n                    var args = _.toArray(arguments);\r\n                    dropped = this.config.validate.apply(this, args);\r\n                }    \r\n            }\r\n            \r\n            return dropped;*/\r\n        },\r\n\r\n        onVectorRender: function() {\r\n            this.setup();\r\n        },\r\n\r\n        onDropActivate: function(e) {\r\n            this.vector().addClass('drop-activate');\r\n        },\r\n\r\n        onDropDeactivate: function(e) {\r\n            this.vector().removeClass('drop-activate');\r\n        },\r\n\r\n        onDragEnter: function(e) {\r\n            this.vector().removeClass('drop-activate').addClass('drop-enter');\r\n            e.type = 'dropenter';\r\n            this.fire(e);\r\n        },\r\n\r\n        onDragLeave: function(e) {\r\n            this.vector().removeClass('drop-enter').addClass('drop-activate');\r\n            e.type = 'dropleave';\r\n            this.fire(e);\r\n        },\r\n\r\n        onDrop: function(e) {\r\n            this.vector().removeClass('drop-activate drop-enter');\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n    \r\n    var CLS_CONNECT_VALID = 'connect-valid',\r\n        CLS_CONNECT_INVALID = 'connect-invalid',\r\n        CLS_CONNECT_RESET = 'connect-valid connect-invalid',\r\n        CLS_CONNECT_CLEAR = 'connect-valid connect-invalid connect-hover',\r\n        CLS_CONNECT_HOVER = 'connect-hover';\r\n    \r\n    Graph.plugin.Network = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n            wiring: 'h:h'\r\n        },\r\n\r\n        linking: {\r\n            valid: false,\r\n            router: null,\r\n            source: null,\r\n            target: null,\r\n            link: null,\r\n            pole: null\r\n        },\r\n        \r\n        constructor: function(vector, options) {\r\n            var me = this, guid = vector.guid();\r\n            \r\n            options = options || {};\r\n\r\n            _.assign(me.props, options);\r\n\r\n            me.props.vector = guid;\r\n\r\n            me.cached.cables = {};\r\n            me.cached.pairs = {};\r\n\r\n            vector.addClass('graph-connectable');\r\n            \r\n            // setup link droppable\r\n            \r\n            var vendor = vector.interactable().vendor();\r\n            \r\n            vendor.dropzone({\r\n                accept: _.format('.{0}, .{1}', Graph.styles.LINK_HEAD, Graph.styles.LINK_TAIL),\r\n                overlap: .2\r\n            })\r\n            .on('dropdeactivate', function(e){\r\n                var v = Graph.registry.vector.get(e.target);\r\n                if (v) {\r\n                    v.removeClass(CLS_CONNECT_CLEAR);\r\n                }\r\n                me.invalidateTrans();\r\n            })\r\n            .on('dropactivate', function(e){\r\n                var v = Graph.registry.vector.get(e.target);\r\n                \r\n                if (v) {\r\n                    v.addClass(CLS_CONNECT_HOVER);\r\n                }\r\n                \r\n                me.invalidateTrans();\r\n            })\r\n            .on('dragenter', function(e){\r\n                var link = Graph.registry.link.get(e.relatedTarget);\r\n\r\n                if (link) {\r\n                    var pole = Graph.$(e.relatedTarget).data('pole');\r\n                    var valid, source, target;\r\n\r\n                    if (pole == 'head') {\r\n                        source = link.router.source();\r\n                        target = vector;\r\n                    } else {\r\n                        source = vector;\r\n                        target = link.router.target();\r\n                    }\r\n                    \r\n                    valid  = source.connectable().canConnect(target.connectable(), link);\r\n                    \r\n                    if (valid) {\r\n                        vector.removeClass(CLS_CONNECT_INVALID);\r\n                        vector.addClass(CLS_CONNECT_VALID);\r\n                    } else {\r\n                        vector.removeClass(CLS_CONNECT_VALID);\r\n                        vector.addClass(CLS_CONNECT_INVALID);\r\n                    }\r\n                    \r\n                    _.assign(me.linking, {\r\n                        valid: valid,\r\n                        router: link.router,\r\n                        source: source,\r\n                        target: target,\r\n                        pole: pole\r\n                    });\r\n\r\n                    link.router.updateTrans('CONNECT', {\r\n                        valid: valid,\r\n                        source: source,\r\n                        target: target\r\n                    });\r\n                }\r\n            })\r\n            .on('dragleave', function(e){\r\n                var v = Graph.registry.vector.get(e.target);\r\n                if (v) {\r\n                    v.removeClass(CLS_CONNECT_RESET);\r\n                }\r\n                \r\n                me.linking.valid = false;\r\n                \r\n                if (me.linking.pole == 'head') {\r\n                    me.linking.router.updateTrans('CONNECT', {\r\n                        valid: false,\r\n                        target: null\r\n                    });    \r\n                } else {\r\n                    me.linking.router.updateTrans('CONNECT', {\r\n                        valid: false,\r\n                        source: null\r\n                    });\r\n                }\r\n                \r\n            })\r\n            .on('drop', function(e){\r\n                if (me.linking.valid) {\r\n                    if (me.linking.pole == 'head') {\r\n                        me.linking.router.updateTrans('CONNECT', {\r\n                            target: vector\r\n                        });\r\n                    } else {\r\n                        me.linking.router.updateTrans('CONNECT', {\r\n                            source: vector\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        \r\n        invalidateTrans: function() {\r\n            for (var name in this.linking) {\r\n                this.linking[name] = null;\r\n            }\r\n        },  \r\n        \r\n        wiring: function() {\r\n            return this.props.wiring;\r\n        },\r\n\r\n        treshold: function() {\r\n            var wiring = this.props.wiring;\r\n\r\n            switch(wiring) {\r\n                case 'h:h':\r\n                case 'v:v':\r\n                    return 20;\r\n                case 'h:v':\r\n                case 'v:h':\r\n                    return -10;\r\n            }\r\n\r\n            return 0;\r\n        },\r\n        \r\n        direction: function (network) {\r\n            var orient = this.orientation(network);\r\n            \r\n            switch(orient) {\r\n                case 'intersect':\r\n                    return null;\r\n                case 'top':\r\n                case 'bottom':\r\n                    return 'v:v';\r\n                case 'left':\r\n                case 'right':\r\n                    return 'h:h';\r\n                default:\r\n                    return this.props.wiring;\r\n            }\r\n        },\r\n        \r\n        orientation: function(network) {\r\n            var sourceBox = this.vector().bboxView().toJson(),\r\n                targetBox = network.vector().bboxView().toJson(),\r\n                orientation = Graph.util.boxOrientation(sourceBox, targetBox, this.treshold());\r\n\r\n            sourceBox = targetBox = null;\r\n            return orientation;\r\n        },\r\n        \r\n        isSource: function(link) {\r\n            return link.source().guid() == this.vector().guid();\r\n        },\r\n        \r\n        isTarget: function(link) {\r\n            return link.target().guid() == this.vector().guid();\r\n        },\r\n        \r\n        addLink: function(link, type, pair) {\r\n            var guid = link.guid(),\r\n                cables = this.cached.cables,\r\n                pairs = this.cached.pairs;\r\n\r\n            pair  = pair.guid();\r\n            pairs = pairs || {};\r\n            \r\n            pairs[pair] = pairs[pair] || [];\r\n\r\n            if (_.indexOf(pairs[pair], guid) === -1) {\r\n                pairs[pair].push(guid);\r\n            }\r\n            \r\n            cables[guid] = {\r\n                type: type,\r\n                pair: pair\r\n            };\r\n        },\r\n\r\n        removeLink: function(link) {\r\n            var guid, pair;\r\n\r\n            if (_.isString(link)) {\r\n                guid = link;\r\n            } else {\r\n                guid = link.guid();\r\n            }\r\n            \r\n            var conn = this.cached.cables[guid];\r\n\r\n            if (conn) {\r\n                if (this.cached.pairs[conn.pair]) {\r\n                    var index = _.indexOf(this.cached.pairs[conn.pair], guid);\r\n                \r\n                    if (index > -1) {\r\n                        this.cached.pairs[conn.pair].splice(index, 1);\r\n                    }\r\n\r\n                    if ( ! this.cached.pairs[conn.pair].length) {\r\n                        delete this.cached.pairs[conn.pair];\r\n                    }\r\n                }\r\n            }\r\n\r\n            delete this.cached.cables[guid];\r\n            conn = null;\r\n        },\r\n\r\n        repairLinks: function() {\r\n            console.log('called');\r\n        },\r\n        \r\n        hasConnection: function(network) {\r\n            var conn = this.getConnection();\r\n            return conn.length ? conn : false;\r\n        },\r\n        \r\n        connections: function(network) {\r\n            var me = this, \r\n                registry = Graph.registry.link,\r\n                current = this.props.vector,\r\n                conns = [];\r\n            \r\n            if (network !== undefined) {\r\n                \r\n                var pair = network.vector().guid();\r\n                \r\n                if (this.cached.pairs[pair]) {\r\n                    _.forEach(me.cached.pairs[pair], function(guid){\r\n                        var link = registry.get(guid),\r\n                            opts = me.cached.cables[guid];\r\n                        if (link && opts) {\r\n                            conns.push({\r\n                                link: link,\r\n                                type: opts.type,\r\n                                source: opts.type == 'outgoing' ? current : pair,\r\n                                target: opts.type == 'outgoing' ? pair : current\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n                \r\n                return conns;\r\n            }\r\n            \r\n            var cables = me.cached.cables;\r\n            \r\n            _.forOwn(cables, function(opts, guid){\r\n                var link = registry.get(guid);\r\n                if (link) {\r\n                    conns.push({\r\n                        link: link,\r\n                        type: opts.type,\r\n                        source: opts.type == 'outgoing' ? current : opts.pair,\r\n                        target: opts.type == 'outgoing' ? opts.pair : current\r\n                    });\r\n                }\r\n            });\r\n            \r\n            return conns;\r\n        },\r\n\r\n        ///////// RULES /////////\r\n        \r\n        /**\r\n         * Can connect to target network\r\n         */\r\n        canConnect: function(network, link) {\r\n            var a = this.vector().guid(),\r\n                b = network.vector().guid();\r\n            \r\n            if (a != b) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        destroy: function() {\r\n            var me = this, conns = this.connections();\r\n\r\n            _.forEach(conns, function(conn){\r\n                conn.link.remove(); \r\n            });\r\n            \r\n            // collect garbage\r\n            this.cached.cables = null;\r\n            this.cached.pairs  = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Network';\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.History = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            limit: 1,\r\n            index: 0\r\n        },\r\n\r\n        items: {},\r\n\r\n        constructor: function(vector) {\r\n            this.props.vector = vector.guid();\r\n        },\r\n\r\n        save: function(prop, data) {\r\n            var lim = this.props.limit, len;\r\n\r\n            if (len > lim) {\r\n                _.drop(this.items, len - lim);\r\n            }\r\n\r\n            this.items[prop] = this.items[prop] || [];\r\n\r\n            if ((len = this.items[prop].length) > lim - 1) {\r\n                this.items[prop].splice(0, len - lim);\r\n            }\r\n\r\n            this.items[prop].push(data);\r\n        },\r\n\r\n        last: function(prop) {\r\n\r\n        },\r\n\r\n        go: function() {\r\n\r\n        },\r\n\r\n        back: function() {\r\n\r\n        },\r\n\r\n        next: function() {\r\n\r\n        },\r\n\r\n        clear: function() {\r\n\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Panzoom = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            panEnabled: false,\r\n            zoomEnabled: true,\r\n            showToolbox: true,\r\n            vector: null\r\n        },\r\n\r\n        caching: {\r\n            offset: {x: 0, y: 0}\r\n        },\r\n\r\n        scrolling: {\r\n            steps: 10\r\n        },\r\n\r\n        zooming: {\r\n            scale: 1,\r\n            zoom: 1,\r\n            origin: null,\r\n            range: {min: 0.2, max: 4.0}\r\n        },\r\n\r\n        components: {\r\n            toolbox: null\r\n        },\r\n\r\n        panning: {\r\n            start: {x: 0, y: 0},\r\n            moveHandler: null,\r\n            stopHandler: null\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            var me = this, vendor, viewport, scale, bound;\r\n\r\n            // validate vector\r\n            if ( ! vector.isPaper()) {\r\n                throw Graph.error('Panzoom only available for paper !');\r\n            }\r\n\r\n            viewport = vector.viewport();\r\n            scale    = Math.round(viewport.matrix().scale().x, 1000);\r\n            vendor   = vector.interactable().vendor();\r\n\r\n            _.assign(me.props, {\r\n                vector: vector.guid()\r\n            });\r\n\r\n            _.assign(me.zooming, {\r\n                scale: scale,\r\n                zoom: scale\r\n            });\r\n\r\n            me.initComponent(vector);\r\n\r\n            // use native engine\r\n            vendor.on('wheel', _.bind(me.onMouseWheel, me, _, vector, viewport));\r\n            vendor.on('down', _.bind(me.onPointerDown, me, _, vector, viewport));\r\n\r\n            if (vector.props.rendered) {\r\n                me.revalidate(vector);\r\n\r\n                if (me.props.showToolbox) {\r\n                    me.components.toolbox.appendTo(vector.container());\r\n                }\r\n            } else {\r\n                vector.on('render', function(){\r\n                    me.revalidate(vector);\r\n\r\n                    if (me.props.showToolbox) {\r\n                        me.components.toolbox.appendTo(vector.container());\r\n                    }\r\n                });\r\n            }\r\n\r\n            vendor = null;\r\n            vector = null;\r\n        },\r\n\r\n        initComponent: function(vector) {\r\n            var me = this;\r\n            var container, toolbox;\r\n\r\n            if (me.props.showToolbox) {\r\n                container = vector.container();\r\n\r\n                toolbox = me.components.toolbox = Graph.$('<div class=\"graph-zoom-toolbox\">');\r\n                toolbox.html(\r\n                    '<div>' +\r\n                        '<a data-tool=\"zoom-reset\" href=\"javascript:void(0)\" title=\"' + Graph._('Reset zoom') + '\">' +\r\n                            '<i class=\"'+ Graph.icons.ZOOM_RESET +'\"></i>' +\r\n                        '</a>'+\r\n                        '<div class=\"splitter\"></div>'+\r\n                        '<a data-tool=\"zoom-in\" href=\"javascript:void(0)\" title=\"' + Graph._('Zoom in') + '\">' +\r\n                            '<i class=\"'+ Graph.icons.ZOOM_IN +'\"></i>' +\r\n                        '</a>'+\r\n                        '<div class=\"splitter\"></div>'+\r\n                        '<a data-tool=\"zoom-out\" href=\"javascript:void(0)\" title=\"' + Graph._('Zoom out') + '\">' +\r\n                            '<i class=\"'+ Graph.icons.ZOOM_OUT +'\"></i>' +\r\n                        '</a>'+\r\n                    '</div>'\r\n                );\r\n\r\n                toolbox.on('click', '[data-tool]', function(e){\r\n                    e.preventDefault();\r\n                    var tool = Graph.$(this).data('tool');\r\n                    switch(tool) {\r\n                        case 'zoom-reset':\r\n                            me.zoomReset();\r\n                            break;\r\n                        case 'zoom-in':\r\n                            me.zoomIn();\r\n                            break;\r\n                        case 'zoom-out':\r\n                            me.zoomOut();\r\n                            break;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        revalidate: function(vector) {\r\n            var bound = vector.node().getBoundingClientRect();\r\n\r\n            this.caching.offset = {\r\n                x: bound.left,\r\n                y: bound.top\r\n            };\r\n        },\r\n\r\n        enable: function() {\r\n            var vector = this.vector();\r\n\r\n            this.props.panEnabled = true;\r\n            this.props.zoomEnabled = true;\r\n\r\n            vector.cursor('default');\r\n            vector.state('panning');\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.panEnabled = false;\r\n        },\r\n\r\n        zoomReset: function() {\r\n            var viewport = this.vector().viewport();\r\n            var matrix;\r\n\r\n            this.zooming.zoom = 1;\r\n            this.zooming.scale = 1;\r\n\r\n            viewport.reset();\r\n\r\n            matrix = Graph.matrix();\r\n            // matrix.translate(.5, .5);\r\n\r\n            viewport.attr('transform', matrix.toValue());\r\n            viewport.graph.matrix = matrix;\r\n        },\r\n\r\n        zoomIn: function() {\r\n            var paper = this.vector().paper(),\r\n                viewport = paper.viewport(),\r\n                origin = paper.layout().center(),\r\n                direction = 0.1875;\r\n\r\n            this.zoom(paper, viewport, direction, origin);\r\n        },\r\n\r\n        zoomOut: function() {\r\n            var paper = this.vector().paper(),\r\n                viewport = paper.viewport(),\r\n                origin = paper.layout().center(),\r\n                direction = -0.1875;\r\n\r\n            this.zoom(paper, viewport, direction, origin);\r\n        },\r\n\r\n        zoom: function(paper, viewport, direction, origin) {\r\n            var range = this.zooming.range,\r\n                currentZoom = this.zooming.zoom,\r\n                zoomType = direction > 0 ? 'in' : 'out',\r\n                factor = Math.pow(1 + Math.abs(direction), zoomType == 'in' ? 1 : -1),\r\n                zoom = (zoomRange(range, currentZoom * factor)),\r\n                matrix = viewport.matrix(),\r\n                currentScale = matrix.props.a,\r\n                scale = 1 / currentScale * zoom,\r\n                matrixScale = matrix.clone();\r\n\r\n            this.onBeforeZoom(paper);\r\n\r\n            matrixScale.scale(scale, scale, origin.x, origin.y);\r\n\r\n            viewport.attr('transform', matrixScale.toValue());\r\n            viewport.graph.matrix = matrixScale;\r\n\r\n            this.zooming.zoom  = zoom;\r\n            this.zooming.scale = matrixScale.props.a;\r\n\r\n            if (paper.state() == 'panning') {\r\n                paper.cursor(zoomType == 'in' ? 'zoom-in' : 'zoom-out');\r\n            }\r\n\r\n            this.onZoom(paper);\r\n        },\r\n\r\n        scroll: function(paper, viewport, dx, dy) {\r\n            var matrix = viewport.matrix().clone(),\r\n                scale = this.zooming.scale;\r\n\r\n            this.onBeforeScroll(paper);\r\n\r\n            dx /= scale;\r\n            dy /= scale;\r\n\r\n            matrix.translate(dx, dy);\r\n\r\n            viewport.attr('transform', matrix.toValue());\r\n            viewport.graph.matrix = matrix;\r\n\r\n            if (this.zooming.origin) {\r\n                this.zooming.origin.x += dx;\r\n                this.zooming.origin.y += dy;\r\n            }\r\n\r\n            this.onScroll();\r\n        },\r\n\r\n        onMouseWheel: function(e, paper, viewport) {\r\n\r\n            e = Graph.event.fix(e);\r\n            e.preventDefault();\r\n\r\n            var vscroll = Graph.event.hasPrimaryModifier(e),\r\n                hscroll = Graph.event.hasSecondaryModifier(e),\r\n                event   = Graph.event.original(e);\r\n\r\n            var factor, delta, origin, offset, box;\r\n\r\n            if (vscroll || hscroll) {\r\n\r\n                if (Graph.isMac()) {\r\n                    factor = event.deltaMode === 0 ? 1.25 : 50;\r\n                } else {\r\n                    // factor = event.deltaMode === 0 ? 1/40 : 1/2;\r\n                    factor = event.deltaMode === 0 ? 1 : 20;\r\n                }\r\n\r\n                delta = {};\r\n\r\n                if (hscroll) {\r\n                    delta.dx = (factor * (event.deltaX || event.deltaY));\r\n                    delta.dy = 0;\r\n                } else {\r\n                    delta.dx = 0;\r\n                    delta.dy = (factor * event.deltaY);\r\n                }\r\n\r\n                this.scroll(paper, viewport, delta.dx, delta.dy);\r\n\r\n            } else {\r\n                factor = (event.deltaMode === 0 ? 1/40 : 1/2);\r\n                offset = this.caching.offset;\r\n\r\n                origin = {\r\n                    x: event.clientX - offset.x,\r\n                    y: event.clientY - offset.y\r\n                };\r\n\r\n                this.zooming.origin = origin;\r\n\r\n                // console.log(event.deltaY, factor, event.deltaY * factor / (-15));\r\n\r\n                this.zoom(\r\n                    paper,\r\n                    viewport,\r\n                    // event.deltaY * factor / (-5),\r\n                    event.deltaY * factor / (-8),\r\n                    origin\r\n                );\r\n            }\r\n        },\r\n\r\n        onPointerDown: function(e, paper, viewport, vendor) {\r\n            var target = Graph.$(e.target),\r\n                vector = Graph.registry.vector.get(target),\r\n                vendor = paper.interactable().vendor(),\r\n                tool   = paper.tool().current();\r\n\r\n            var offset;\r\n\r\n            if (this.panning.moveHandler) {\r\n                vendor.off('move', this.panning.moveHandler);\r\n                this.panning.moveHandler = null;\r\n            }\r\n\r\n            if (this.panning.stopHandler) {\r\n                vendor.off('up', this.panning.stopHandler);\r\n                this.panning.stopHandler = null;\r\n            }\r\n\r\n            if (tool == 'collector') {\r\n                return;\r\n            }\r\n\r\n            if (vector) {\r\n                // already has drag feature\r\n                if (vector.isDraggable()) {\r\n                    return;\r\n                }\r\n\r\n                // reject non primary button\r\n                if (e.button || e.ctrlKey || e.shiftKey || e.altKey) {\r\n                    return;\r\n                }\r\n\r\n                this.revalidate(paper);\r\n\r\n                offset = this.caching.offset;\r\n\r\n                this.panning.start = {\r\n                    x: e.clientX - offset.x,\r\n                    y: e.clientY - offset.y\r\n                };\r\n\r\n                // install temporary events handler\r\n                this.panning.moveHandler = _.bind(this.onPointerMove, this, _, paper, viewport);\r\n                this.panning.stopHandler = _.bind(this.onPointerStop, this, _, paper, viewport);\r\n\r\n                vendor.on('move', this.panning.moveHandler);\r\n                vendor.on('up', this.panning.stopHandler);\r\n            }\r\n        },\r\n\r\n        onPointerMove: function(e, paper, viewport) {\r\n\r\n            var offset = this.caching.offset,\r\n                start = this.panning.start,\r\n                current = {\r\n                    x: e.clientX - offset.x,\r\n                    y: e.clientY - offset.y\r\n                },\r\n                dx = current.x - start.x,\r\n                dy = current.y - start.y,\r\n                mg = Graph.util.hypo(dx, dy);\r\n\r\n            this.scroll(paper, viewport, dx, dy);\r\n\r\n            this.panning.start = {\r\n                x: e.clientX - offset.x,\r\n                y: e.clientY - offset.y\r\n            };\r\n\r\n            paper.cursor('move');\r\n\r\n            // prevent select\r\n            e.preventDefault();\r\n        },\r\n\r\n        onPointerStop: function(e, paper) {\r\n            var me = this, vendor = paper.interactable().vendor();\r\n            var delay;\r\n\r\n            // wait interact to fire last posible event...\r\n            delay = _.delay(function(){\r\n                clearTimeout(delay);\r\n                delay = null;\r\n\r\n                vendor.off('move', me.panning.moveHandler);\r\n                vendor.off('up', me.panning.stopHandler);\r\n\r\n                me.panning.moveHandler = null;\r\n                me.panning.stopHandler = null;\r\n            }, 0);\r\n\r\n            paper.cursor('default');\r\n        },\r\n\r\n        onBeforeZoom: _.debounce(function(paper){\r\n\r\n            Graph.topic.publish('paper/beforezoom', null, paper);\r\n\r\n        }, 300, {leading: true, trailing: false}),\r\n\r\n        onZoom: _.debounce(function(paper) {\r\n            var state = paper.state();\r\n\r\n            if (state == 'panning') {\r\n                paper.cursor('default');\r\n            }\r\n\r\n        }, 300),\r\n\r\n        onBeforeScroll: _.debounce(function(paper){\r\n\r\n            Graph.topic.publish('paper/beforescroll', null, paper);\r\n\r\n        }, 300, {leading: true, trailing: false}),\r\n\r\n        onScroll: _.debounce(function() {\r\n\r\n        }, 300),\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Panzoom';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// HELPERS /////////\r\n\r\n    function logarithm(num, base) {\r\n        base = base || 10;\r\n        return Math.log(num) / Math.log(base);\r\n    }\r\n\r\n    function stepRange(range, steps) {\r\n        var min = logarithm(range.min),\r\n            max = logarithm(range.max),\r\n            abs = Math.abs(min) + Math.abs(max);\r\n\r\n        return abs / steps;\r\n    }\r\n\r\n    function zoomRange(range, scale) {\r\n        return Math.max(range.min, Math.min(range.max, scale));\r\n    }\r\n\r\n    function pointerLocation(event, paper) {\r\n        var offset = paper.node().getBoundingClientRect(),\r\n            x = event.clientX - offset.left,\r\n            y = event.clientY - offset.top;\r\n\r\n        return {\r\n            x: x,\r\n            y: y\r\n        };\r\n    }\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var CLS_CONNECT_VALID = 'connect-valid',\r\n        CLS_CONNECT_INVALID = 'connect-invalid',\r\n        CLS_CONNECT_RESET = 'connect-valid connect-invalid';\r\n\r\n    Graph.plugin.Linker = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n            enabled: false,\r\n            suspended: true,\r\n            rendered: false\r\n        },\r\n\r\n        components: {\r\n            block: null,\r\n            pointer: null,\r\n            path: null\r\n        },\r\n\r\n        linking: {\r\n            treshold: 10,\r\n            enabled: false,\r\n            moveHandler: null,\r\n            stopHandler: null,\r\n            source: null,\r\n            start: null,\r\n            target: null,\r\n            end: null,\r\n            visits: []\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            var me = this, vendor;\r\n\r\n            if ( ! vector.isPaper()) {\r\n                throw Graph.error('Linker plugin is only available for paper !');\r\n            }\r\n\r\n            vendor = vector.interactable().vendor();\r\n            vendor.on('down', _.bind(me.onPointerDown, me, _, vector));\r\n\r\n            vector.on('keynavdown', function(e){\r\n                if (e.keyCode === Graph.event.ESC) {\r\n                    me.invalidate();\r\n                    vector.tool().activate('panzoom');\r\n                }\r\n            });\r\n\r\n            me.props.vector = vector.guid();\r\n            me.initComponent();\r\n        },\r\n        \r\n        initComponent: function() {\r\n            var me = this, \r\n                comp = me.components;\r\n\r\n            var block, pointer, path;\r\n\r\n            block = (new Graph.svg.Group())\r\n                .addClass('graph-linker-path')\r\n                .selectable(false);\r\n\r\n            pointer = (new Graph.svg.Circle())\r\n                .addClass('graph-linker-pointer')\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .selectable(false)\r\n                .render(block);\r\n\r\n            path = (new Graph.svg.Path())\r\n                .addClass('graph-linker-path')\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .selectable(false)\r\n                .render(block)\r\n                .attr('marker-end', 'url(#marker-arrow)');\r\n\r\n            comp.block = block.guid();\r\n            comp.pointer = pointer.guid();\r\n            comp.path = path.guid();\r\n        },\r\n\r\n        component: function(name) {\r\n            if (name === undefined) {\r\n                return Graph.registry.vector.get(this.components.block);\r\n            }\r\n            return Graph.registry.vector.get(this.components[name]);\r\n        },\r\n\r\n        render: function() {\r\n            var paper;\r\n\r\n            if (this.props.rendered) {\r\n                return;\r\n            }\r\n\r\n            paper = this.vector();\r\n            this.component().render(paper);\r\n\r\n            this.props.rendered = true;\r\n        },\r\n\r\n        invalidate: function() {\r\n            var vector, vendor;\r\n\r\n            if (this.linking.enabled) {\r\n                vector = this.vector();\r\n                vendor = vector.interactable().vendor();\r\n                \r\n                if (this.linking.moveHandler) {\r\n                    vendor.off('move', this.linking.moveHandler);\r\n                    this.linking.moveHandler = null;\r\n                }\r\n\r\n                if (this.linking.source) {\r\n                    this.linking.source.removeClass('disallowed');\r\n                }\r\n\r\n                if (this.linking.target) {\r\n                    this.linking.target.removeClass('allowed');\r\n                }\r\n\r\n                _.assign(this.linking, {\r\n                    enabled: false,\r\n                    moveHandler: null,\r\n                    stopHandler: null,\r\n                    source: null,\r\n                    start: null,\r\n                    target: null,\r\n                    end: null\r\n                });\r\n                \r\n                if (this.linking.visits) {\r\n                    _.forEach(this.linking.visits, function(v){\r\n                        v.removeClass('connect-valid connect-invalid');\r\n                    });\r\n                }\r\n                \r\n                this.linking.visits = null;\r\n            }\r\n        },\r\n\r\n        enable: function() {\r\n            var paper = this.vector();\r\n            this.props.enabled = true;\r\n\r\n            paper.state('linking');\r\n            paper.addClass('linking');\r\n        },\r\n\r\n        disable: function() {\r\n            var paper = this.vector();\r\n\r\n            this.props.enabled = false;\r\n            this.invalidate();\r\n            this.suspend();\r\n\r\n            paper.removeClass('linking');\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.component().elem.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            var paper;\r\n\r\n            if ( ! this.props.suspended) {\r\n                return;\r\n            }\r\n\r\n            paper = this.vector();\r\n\r\n            this.props.suspended = false;\r\n            \r\n            if ( ! this.props.rendered) {\r\n                this.render();\r\n            } else {\r\n                this.component().elem.appendTo(paper.viewport().elem);\r\n            }\r\n        },\r\n        \r\n        /**\r\n         *  Start manual linking\r\n         */\r\n        start: function(source, anchor) {\r\n            var paper = this.vector(),\r\n                layout = paper.layout(),\r\n                offset = layout.offset();\r\n                \r\n            if (paper.tool().current() != 'linker') {\r\n                return;\r\n            }\r\n            \r\n            if (this.linking.enabled) {\r\n                if (this.linking.source && this.linking.target) {\r\n                    this.build();\r\n                } else {\r\n                    this.invalidate();\r\n                    this.suspend();\r\n                }\r\n                return;\r\n            }\r\n            \r\n            this.linking.visits = [];\r\n            \r\n            var vendor, sbox, port;\r\n\r\n            if (source.isConnectable()) {\r\n\r\n                if (this.props.suspended) {\r\n                    this.resume();    \r\n                }\r\n\r\n                var path = this.component('path');\r\n\r\n                this.linking.moveHandler = _.bind(this.onPointerMove, this, _, paper, path);    \r\n                \r\n                vendor = paper.interactable().vendor();\r\n                vendor.on('move', this.linking.moveHandler);\r\n\r\n                this.linking.visits.push(source);    \r\n\r\n                if (source.isConnectable()) {\r\n                    \r\n                    if ( ! this.linking.source) {\r\n                        sbox = source.bboxView();\r\n                        port = sbox.center(true);\r\n\r\n                        this.linking.source = source;\r\n                        this.linking.start  = port;\r\n                        \r\n                        if (anchor) {\r\n                            path.moveTo(port.x, port.y).lineTo(anchor.x, anchor.y, false);\r\n                        } else {\r\n                            path.moveTo(port.x, port.y).lineTo(port.x, port.y, false);\r\n                        }   \r\n\r\n                        sbox = port = null;\r\n                    }\r\n\r\n                }\r\n\r\n                this.linking.enabled = true;\r\n            }\r\n        },\r\n        \r\n        cropping: function(start, end) {\r\n            var source = this.linking.source,\r\n                target = this.linking.target,\r\n                cable = new Graph.lang.Path([['M', start.x, start.y], ['L', end.x, end.y]]);\r\n\r\n            var spath, scrop, tpath, tcrop;\r\n\r\n            if (source) {\r\n                spath = source.shapeView();\r\n                scrop = spath.intersection(cable, true);\r\n            }\r\n\r\n            if (target) {\r\n                tpath = target.shapeView();\r\n                tcrop = tpath.intersection(cable, true);\r\n            }\r\n\r\n            cable = spath = tpath = null;\r\n\r\n            return {\r\n                start: scrop ? scrop[0] : null,\r\n                end:   tcrop ? tcrop[0] : null\r\n            };\r\n        },\r\n\r\n        build: function() {\r\n            var path = this.component('path'),\r\n                tail = path.tail(),\r\n                head = path.head();\r\n\r\n            if (tail && head) {\r\n                var paper = this.vector();\r\n                paper.connect(\r\n                    this.linking.source, \r\n                    this.linking.target,\r\n                    tail,\r\n                    head\r\n                );\r\n            }\r\n\r\n            this.invalidate();\r\n            this.suspend();\r\n        },\r\n\r\n        onPointerDown: function(e, paper) {\r\n            var layout = paper.layout(),\r\n                source = layout.grabVector(e);\r\n            \r\n            if (source) {\r\n                this.start(source);\r\n            }\r\n            \r\n            layout = source = null;\r\n        },\r\n\r\n        onPointerMove: function(e, paper, path) {\r\n\r\n            if (this.linking.enabled) {\r\n\r\n                var layout = paper.layout(),\r\n                    target = layout.grabVector(e);\r\n\r\n                if ( ! target) {\r\n                    return;\r\n                }\r\n\r\n                var source = this.linking.source,\r\n                    valid = false;\r\n\r\n                if (source) {\r\n\r\n                    // track visit\r\n                    if (this.linking.visits.indexOf(target.guid()) === -1) {\r\n                        this.linking.visits.push(target);\r\n                    }\r\n                    \r\n                    var start = this.linking.start,\r\n                        coord = layout.grabLocation(e),\r\n                        x = coord.x,\r\n                        y = coord.y,\r\n                        rad = Graph.util.rad(Graph.util.theta(start, {x: x, y: y})),\r\n                        sin = Math.sin(rad),\r\n                        cos = Math.cos(rad),\r\n                        tdx = this.linking.treshold * -cos,\r\n                        tdy = this.linking.treshold *  sin;\r\n\r\n                    x += tdx;\r\n                    y += tdy;\r\n\r\n                    if (target.isConnectable()) {\r\n                        \r\n                        var crop, tbox, port;\r\n\r\n                        if (source.connectable().canConnect(target.connectable())) {\r\n                            valid  = true;\r\n                            \r\n                            target.removeClass(CLS_CONNECT_INVALID);\r\n                            target.addClass(CLS_CONNECT_VALID);\r\n                            \r\n                            tbox = target.bboxView();\r\n                            port = tbox.center(true);\r\n\r\n                            this.linking.target = target;\r\n                            this.linking.end    = port;\r\n\r\n                            crop = this.cropping(start, port);\r\n\r\n                            if (crop.start) {\r\n                                path.moveTo(crop.start.x, crop.start.y);\r\n                            }\r\n\r\n                            if (crop.end) {\r\n                                path.lineTo(crop.end.x, crop.end.y, false);\r\n                            } else {\r\n                                path.lineTo(x, y, false);\r\n                            }\r\n\r\n                            tbox = port = null;\r\n                        } else {\r\n                            target.removeClass(CLS_CONNECT_VALID);\r\n                            target.addClass(CLS_CONNECT_INVALID);\r\n                        }\r\n\r\n                    } else {\r\n                        target.addClass(CLS_CONNECT_INVALID);\r\n                    }\r\n\r\n                    if ( ! valid) {\r\n\r\n                        if (this.linking.target) {\r\n                            this.linking.target.removeClass(CLS_CONNECT_RESET);\r\n                        }\r\n\r\n                        this.linking.target = null;\r\n                        this.linking.end    = null; \r\n\r\n                        crop = this.cropping(start, {x: x, y: y});\r\n\r\n                        if (crop.start) {\r\n                            path.moveTo(crop.start.x, crop.start.y);\r\n                        }\r\n\r\n                        if (crop.end) {\r\n                            path.lineTo(crop.end.x, crop.end.y, false);\r\n                        } else {\r\n                            path.lineTo(x, y, false);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            e.preventDefault();\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Linker';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// HELPER /////////\r\n    \r\n\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.ToolManager = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n            current: null\r\n        },\r\n\r\n        tools: {\r\n\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            var me = this;\r\n\r\n            me.props.vector = vector.guid();\r\n\r\n        },\r\n        \r\n        has: function(tool) {\r\n            return !!this.tools[tool];\r\n        },\r\n\r\n        get: function(name) {\r\n            var data = this.tools[name],\r\n                vector = this.vector();\r\n\r\n            if (data) {\r\n                switch(data.type) {\r\n                    case 'plugin':\r\n                        return vector.plugins[name];\r\n                    case 'util':\r\n                        return vector.utils[name];\r\n                }\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        current: function() {\r\n            return this.props.current;\r\n        },\r\n\r\n        register: function(name, type) {\r\n            type = _.defaultTo(type, 'plugin');\r\n\r\n            this.tools[name] = {\r\n                name: name,\r\n                type: type,\r\n                enabled: false\r\n            };\r\n        },\r\n\r\n        unregister: function(name) {\r\n            if (this.tools[name]) {\r\n                delete this.tools[name];\r\n            }\r\n        },\r\n\r\n        activate: function(name, activator) {\r\n            if (this.props.current != name) {\r\n\r\n                var tool = this.get(name), data;\r\n                \r\n                if (tool) {\r\n                    this.deactivateAll(name);\r\n                    this.props.current = name;\r\n\r\n                    data = this.tools[name];\r\n                    data.enabled = true;\r\n\r\n                    activator = _.defaultTo(activator, 'tool');\r\n                    tool.enable(activator);\r\n\r\n                    this.fire('activate', {\r\n                        name: data.name,\r\n                        enabled: data.enabled\r\n                    });\r\n                }\r\n            }\r\n            \r\n        },\r\n\r\n        deactivate: function(name) {\r\n            var tool = this.get(name), data;\r\n\r\n            if (tool) {\r\n                data = this.tools[name];\r\n                data.enabled = false;\r\n                this.props.current = null;\r\n\r\n                tool.disable();\r\n\r\n                this.fire('deactivate', {\r\n                    name: data.name,\r\n                    enabled: data.enabled\r\n                });\r\n            }\r\n        },\r\n\r\n        deactivateAll: function(except) {\r\n            var vector = this.vector();\r\n\r\n            for(var name in this.tools) {\r\n                if (name != except) {\r\n                    this.deactivate(name);\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        toggle: function(tool) {\r\n            var data = this.tools[tool];\r\n            if (data) {\r\n                if (data.enabled) {\r\n                    this.deactivate(tool);\r\n                } else {\r\n                    this.activate(tool);\r\n                }\r\n            }\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.ToolManager';\r\n        }\r\n\r\n\r\n    });\r\n\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Pencil = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        paper: null,\r\n\r\n        drawing: {\r\n            offset: {\r\n                x: 0, \r\n                y: 0\r\n            },\r\n            moveHandler: null,\r\n            stopHandler: null\r\n        },\r\n\r\n        constructor: function(paper) {\r\n            this.paper = paper;\r\n        },\r\n        \r\n        draw: function() {\r\n            var paper, shape, vendor;\r\n            \r\n            // activate panzoom\r\n            this.paper.tool().activate('panzoom');\r\n\r\n            shape = Graph.shape.apply(null, arguments);\r\n\r\n            if (shape) {\r\n\r\n                shape.render(this.paper);\r\n                shape.move(-500, -500);\r\n                \r\n                this.refresh(shape);\r\n                this.paper.state('drawing');\r\n\r\n                vendor = this.paper.interactable().vendor();\r\n\r\n                this.drawing.offset = this.paper.layout().offset();\r\n                this.drawing.moveHandler = _.bind(this.onPointerMove, this, _, shape);\r\n                this.drawing.stopHandler = _.bind(this.onPointerStop, this, _, shape);\r\n\r\n                vendor.on('move', this.drawing.moveHandler);\r\n                vendor.on('up', this.drawing.stopHandler);    \r\n            }\r\n\r\n            return shape;\r\n        },\r\n\r\n        refresh: function(shape) {\r\n            var snapping = this.paper.layout().dragSnapping();\r\n\r\n            shape.component().cascade(function(comp){\r\n                if (comp.isDraggable()) {\r\n                    comp.draggable().snap(snapping);\r\n                }\r\n\r\n                if (comp.isResizable()) {\r\n                    comp.resizable().snap(snapping);\r\n                }\r\n            });\r\n\r\n        },\r\n\r\n        onPointerMove: function(e, shape) {\r\n            var offset = this.drawing.offset,   \r\n                viewport = this.paper.viewport(),\r\n                coords = Graph.event.relative(e, viewport),\r\n                scale = viewport.scale();\r\n\r\n            var x = coords.x - (offset.left / scale.x),\r\n                y = coords.y - (offset.top / scale.y);\r\n\r\n            shape.move(x, y);\r\n        },\r\n\r\n        onPointerStop: function(e, shape) {\r\n            var vendor = this.paper.interactable().vendor();\r\n            var delay;\r\n\r\n            delay = _.delay(_.bind(function(){\r\n                if (this.drawing.moveHandler) {\r\n                    vendor.off('move', this.drawing.moveHandler);    \r\n                    this.drawing.moveHandler = null;\r\n                }\r\n\r\n                if (this.drawing.stopHandler) {\r\n                    vendor.off('up', this.drawing.stopHandler);    \r\n                    this.drawing.stopHandler = null;\r\n                }\r\n            }, this), 0);\r\n            \r\n        },\r\n        toString: function() {\r\n            return 'Graph.plugin.Pencil';\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    var MIN_BOX_WIDTH  = 150,\r\n        MIN_BOX_HEIGHT = 50,\r\n        OFFSET_TRESHOLD = 10;\r\n\r\n    Graph.plugin.Editor = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n            rendered: false,\r\n            suspended: true,\r\n            width: 'auto',\r\n            height: 'auto',\r\n            offset: 'auto'\r\n        },\r\n\r\n        editing: {\r\n            commitHandler: null\r\n        },\r\n\r\n        components: {\r\n            editor: null\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var vendor;\r\n\r\n            _.assign(this.props, options || {});\r\n\r\n            this.props.vector = vector.guid();\r\n\r\n            _.assign(this.cached, {\r\n                left: 0,\r\n                top: 0,\r\n                width: 0,\r\n                height: 0\r\n            });\r\n\r\n            vendor = vector.interactable().vendor();\r\n            vendor.on('doubletap', _.bind(this.onDoubleTap, this));\r\n\r\n            this.initComponent();\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = this.components;\r\n            comp.editor = Graph.$('<div class=\"graph-editor\" contenteditable=\"true\"></div>');\r\n            comp.editor.on('keypress', function(e){\r\n                if (e.keyCode === Graph.event.ENTER) {\r\n                    me.commit();\r\n                }\r\n            });\r\n        },\r\n        \r\n        commit: function() {\r\n            var text = this.components.editor.text();\r\n            this.suspend();\r\n            this.vector().props.text = text;\r\n\r\n            this.fire('edit', {\r\n                text: text,\r\n                left: this.cached.left,\r\n                top: this.cached.top\r\n            });\r\n        },\r\n\r\n        render: function() {\r\n            if (this.props.rendered) {\r\n                this.redraw();\r\n                return;\r\n            }\r\n\r\n            this.vector().paper().container().append(this.components.editor);\r\n            this.props.rendered = true;\r\n            this.redraw();\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.components.editor.detach();\r\n\r\n            if (this.editing.commitHandler) {\r\n                Graph.topic.unsubscribe('paper/beforezoom', this.editing.commitHandler);\r\n                Graph.topic.unsubscribe('paper/beforescroll', this.editing.commitHandler);\r\n                this.vector().paper().off('pointerdown', this.editing.commitHandler);\r\n                this.editing.commitHandler = null;\r\n            }\r\n        },\r\n\r\n        resume: function() {\r\n            var container;\r\n\r\n            if ( ! this.props.rendered) {\r\n                this.render();\r\n            } else {\r\n                if (this.props.suspended) {\r\n                    this.props.suspended = false;\r\n                    container = this.vector().paper().container();\r\n                    container.append(this.components.editor);\r\n                }\r\n                this.redraw();\r\n            }\r\n\r\n        },\r\n\r\n        redraw: function() {\r\n            var editor = this.components.editor,\r\n                vector = this.vector(),\r\n                matrix = vector.matrixCurrent(),\r\n                scale  = matrix.scale();\r\n\r\n            var vbox = vector.bbox().clone().transform(matrix).toJson();\r\n            var left, top, width, height;\r\n            \r\n            width  = vbox.width;\r\n            height = vbox.height;\r\n            left = vbox.x;\r\n            top  = vbox.y;\r\n\r\n            if (this.props.width != 'auto') {\r\n                width = Math.max(Math.min(this.props.width, width), MIN_BOX_WIDTH);\r\n                left = vbox.x + (vbox.width - width) / 2;\r\n            }\r\n\r\n            if (this.props.height != 'auto') {\r\n                height = Math.max((Math.min(this.props.height, height)), MIN_BOX_HEIGHT);\r\n                top = vbox.y + (vbox.height - height) / 2;\r\n            }\r\n\r\n            left = left + 4 * scale.x;\r\n            top = top + 4 * scale.y;\r\n            width = width - 8 * scale.x;\r\n            height = height - 8 * scale.y;\r\n\r\n            editor.css({\r\n                left: left,\r\n                top:  top,\r\n                width: width,\r\n                height: height\r\n            });\r\n\r\n            _.assign(this.cached, {\r\n                left: left,\r\n                top: top,\r\n                width: width,\r\n                height: height\r\n            });\r\n\r\n            editor.text((vector.props.text || ''));\r\n            editor.focus();\r\n\r\n            vbox = null;\r\n        },\r\n\r\n        startEdit: function(e) {\r\n            var me = this, vector = me.vector();\r\n\r\n            if (vector.lasso) {\r\n                vector.lasso.decollect(vector);\r\n            }\r\n\r\n            if (vector.paper().tool().current() == 'linker') {\r\n                vector.paper().tool().activate('panzoom');\r\n            }\r\n\r\n            me.fire('beforeedit');\r\n            me.resume();\r\n\r\n            if (e && this.props.offset == 'pointer') {\r\n                var editor = me.components.editor,\r\n                    paper = vector.paper(),\r\n                    scale = paper.layout().scale();\r\n\r\n                var offset, coords, left, top;\r\n\r\n                if (paper) {\r\n                    offset = paper.offset();\r\n                    coords = paper.layout().grabLocation(e);\r\n\r\n                    left = e.clientX - offset.left + (OFFSET_TRESHOLD * scale.x);\r\n                    top = e.clientY - offset.top + (OFFSET_TRESHOLD * scale.y);\r\n\r\n                    editor.css({\r\n                        left: left,\r\n                        top: top\r\n                    });\r\n\r\n                    me.cached.left = coords.x;\r\n                    me.cached.top = coords.y;\r\n                }\r\n            }\r\n\r\n            me.editing.commitHandler = function() {\r\n                me.commit();\r\n            };\r\n\r\n            Graph.topic.subscribe('paper/beforezoom', me.editing.commitHandler);\r\n            Graph.topic.subscribe('paper/beforescroll', me.editing.commitHandler);\r\n\r\n            vector.paper().on('pointerdown', me.editing.commitHandler);\r\n            vector = null;\r\n        },\r\n\r\n        onDoubleTap: function(e) {\r\n            this.startEdit(e);\r\n            e.preventDefault();\r\n        },\r\n\r\n        destroy: function() {\r\n\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Editor';\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Snapper = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            enabled: false,\r\n            suspended: true,\r\n            rendered: false,\r\n            vector: null\r\n        },\r\n\r\n        clients: {\r\n\r\n        },\r\n\r\n        components: {\r\n            block: null,\r\n            stubx: null,\r\n            stuby: null\r\n        },\r\n\r\n        // trans\r\n        snapping: {\r\n            coords: null,\r\n            vector: null,\r\n            offset: null,\r\n            stubx: null,\r\n            stuby: null\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            options = options || {};\r\n\r\n            if ( ! vector.isPaper()) {\r\n                throw Graph.error(\"Snapper plugin only available for paper\");\r\n            }\r\n\r\n            _.assign(this.props, options);\r\n\r\n            this.props.vector  = vector.guid();\r\n\r\n            this.initComponent(vector);\r\n            this.snapping.coords = {};\r\n        },\r\n\r\n        initComponent: function(vector) {\r\n            var block, stubx, stuby;\r\n\r\n            block = (new Graph.svg.Group())\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .addClass('graph-snapper');\r\n\r\n            stubx = (new Graph.svg.Path('M 0 0 L 0 0'))\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(block);\r\n\r\n            stuby = (new Graph.svg.Path('M 0 0 L 0 0'))\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(block);\r\n\r\n            this.components.block = block.guid();\r\n            this.components.stuby = stuby.guid();\r\n            this.components.stubx = stubx.guid();\r\n\r\n        },\r\n\r\n        component: function(name) {\r\n            if (name === undefined) {\r\n                return Graph.registry.vector.get(this.components.block);\r\n            }\r\n            return Graph.registry.vector.get(this.components[name]);\r\n        },\r\n\r\n        render: function() {\r\n            if (this.props.rendered) {\r\n                return;\r\n            }\r\n            this.component().render(this.vector());\r\n            this.props.rendered = true;\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.component().elem.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            if (this.props.suspended) {\r\n                this.props.suspended = false;\r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else {\r\n                    var block = this.component(),\r\n                        viewport = this.vector().viewport();\r\n                    block.elem.appendTo(viewport.elem);\r\n                }\r\n            }\r\n        },\r\n\r\n        setup: function(client, options) {\r\n\r\n            if ( ! this.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            var me = this,\r\n                clientId = client.guid();\r\n\r\n            var key;\r\n\r\n            if (me.clients[clientId]) {\r\n                client.off('dragstart', me.clients[clientId].dragStartHandler);\r\n                client.off('dragend',  me.clients[clientId].dragEndHandler);\r\n                client.off('remove',  me.clients[clientId].removeHandler);\r\n\r\n                if (me.clients[clientId].coords) {\r\n                    delete me.snapping.coords[me.clients[clientId].coords];\r\n                }\r\n\r\n                delete me.clients[clientId];\r\n            }\r\n\r\n            if (options.enabled) {\r\n\r\n                var dragger = client.draggable();\r\n\r\n                me.clients[clientId] = {\r\n                    coords: null,\r\n                    osnaps: dragger.snap(),\r\n                    dragStartHandler: _.bind(me.onClientDragStart, me, _, client),\r\n                    dragEndHandler: _.bind(me.onClientDragEnd, me, _, client),\r\n                    removeHandler: _.bind(me.onClientRemove, me, _, client)\r\n                };\r\n\r\n                client.on('dragstart', me.clients[clientId].dragStartHandler);\r\n                client.on('dragend', me.clients[clientId].dragEndHandler);\r\n                client.on('remove',  me.clients[clientId].removeHandler);\r\n\r\n                var center = me.getClientCenter(client),\r\n                    coords = this.snapping.coords;\r\n\r\n                key = center.x + '_' + center.y;\r\n\r\n                if ( ! coords[key]) {\r\n                    coords[key] = center;\r\n                    me.clients[clientId].coords = key;\r\n                }\r\n\r\n                key = null;\r\n            }\r\n        },\r\n\r\n        repairClient: function(client) {\r\n            console.log(client);\r\n        },\r\n\r\n        getClientCenter: function(client) {\r\n            var bbox = client.bboxView(),\r\n                center = bbox.center(true);\r\n\r\n            return center;\r\n        },\r\n\r\n        showStub: function(axis, value) {\r\n            var snapping = this.snapping;\r\n            var command;\r\n\r\n            if (axis == 'x') {\r\n                command = 'M ' + value + ' -100000 L ' + value + ' 100000';\r\n\r\n                snapping.stubx.attr('d', command);\r\n                snapping.stubx.addClass('visible');\r\n            }\r\n\r\n            if (axis == 'y') {\r\n                command = 'M -100000 ' + value + ' L 100000 ' + value;\r\n\r\n                snapping.stuby.attr('d', command);\r\n                snapping.stuby.addClass('visible');\r\n            }\r\n\r\n            command = null;\r\n        },\r\n\r\n        hideStub: function(axis) {\r\n            var stub = axis == 'x' ? 'stubx' : 'stuby';\r\n            this.snapping[stub].removeClass('visible');\r\n        },\r\n\r\n        onClientDragStart: function(e, client) {\r\n            var me = this,\r\n                paper = me.vector(),\r\n                viewport = paper.viewport(),\r\n                layout = paper.layout(),\r\n                offset = layout.offset(),\r\n                center = me.getClientCenter(client);\r\n\r\n            var snapping = this.snapping,\r\n                coords = snapping.coords;\r\n\r\n            snapping.stubx = this.component('stubx');\r\n            snapping.stuby = this.component('stuby');\r\n\r\n            var left = offset.left,\r\n                top = offset.top,\r\n                ma = viewport.matrix(),\r\n                dx = ma.props.e,\r\n                dy = ma.props.f,\r\n                point = layout.grabLocation({clientX: e.x, clientY: e.y}),\r\n                diffx = center.x - point.x,\r\n                diffy = center.y - point.y,\r\n                snapx = [],\r\n                snapy = [];\r\n\r\n            _.forOwn(coords, function(c){\r\n                var mx, my, vx, vy;\r\n\r\n                mx = ma.x(c.x - diffx, c.y - diffy);\r\n                my = ma.y(c.x - diffx, c.y - diffy);\r\n\r\n                vx = mx + left;\r\n\r\n                if (_.indexOf(snapx, vx) === -1) {\r\n                    snapx.push(vx);\r\n                }\r\n\r\n                vy = my + top;\r\n\r\n                if (_.indexOf(snapy, vy) === -1) {\r\n                    snapy.push(vy);\r\n                }\r\n\r\n            });\r\n\r\n            client.draggable().snap([\r\n                function(x, y) {\r\n                    var rx, ry, x1, y1, pt;\r\n\r\n                    rx = snapValue(x, snapx);\r\n                    ry = snapValue(y, snapy);\r\n\r\n                    x1 = rx.value;\r\n                    y1 = ry.value;\r\n\r\n                    pt = layout.grabLocation({\r\n                        clientX: x1,\r\n                        clientY: y1\r\n                    });\r\n\r\n                    if (rx.snapped) {\r\n                        me.showStub('x', pt.x + diffx);\r\n                    } else {\r\n                        me.hideStub('x');\r\n                    }\r\n\r\n                    if (ry.snapped) {\r\n                        me.showStub('y', pt.y + diffy);\r\n                    } else {\r\n                        me.hideStub('y');\r\n                    }\r\n\r\n                    return {\r\n                        x: x1,\r\n                        y: y1\r\n                    };\r\n                }\r\n            ]);\r\n\r\n            me.resume();\r\n        },\r\n\r\n        onClientDragEnd: function(e, client) {\r\n            var snapping = this.snapping,\r\n                options = this.clients[client.guid()];\r\n\r\n            if (options) {\r\n                var dragger = client.draggable();\r\n\r\n                if (options.osnaps) {\r\n                    dragger.snap(options.osnaps);\r\n                }\r\n\r\n                var key, center;\r\n\r\n                if (options.coords) {\r\n                    delete snapping.coords[options.coords];\r\n                }\r\n\r\n                center = this.getClientCenter(client);\r\n                key = center.x + '_' + center.y;\r\n\r\n                if ( ! snapping.coords[key]) {\r\n                    snapping.coords[key] = center;\r\n                    options.coords = key;\r\n                }\r\n\r\n                key = null;\r\n                center = null;\r\n            }\r\n\r\n            this.suspend();\r\n\r\n            _.assign(this.snapping, {\r\n                stubx: null,\r\n                stuby: null\r\n            });\r\n        },\r\n\r\n        onClientRemove: function(e, client) {\r\n            var guid = client.guid(),\r\n                options = this.clients[guid],\r\n                snapping = this.snapping;\r\n\r\n            if (options) {\r\n                if (options.coords) {\r\n                    if (snapping.coords[options.coords]) {\r\n                        delete snapping.coords[options.coords];\r\n                    }\r\n                }\r\n                delete this.clients[guid];\r\n            }\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Snapper';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// HELPERS /////////\r\n\r\n    function snapValue(value, snaps, range) {\r\n        range = _.defaultTo(range, 10);\r\n\r\n        var i = snaps.length, v;\r\n\r\n        while(i--) {\r\n            v = Math.abs(snaps[i] - value);\r\n            if (v <= range) {\r\n                return {\r\n                    snapped: true,\r\n                    value: snaps[i]\r\n                };\r\n            }\r\n        }\r\n\r\n        return {\r\n            snapped: false,\r\n            value: value\r\n        };\r\n    }\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.plugin.Toolpad = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            vector: null,\r\n            rendered: false,\r\n            suspended: true\r\n        },\r\n        \r\n        components: {\r\n            pad: null\r\n        },  \r\n    \r\n        constructor: function(paper) {\r\n            \r\n            this.props.vector = paper.guid();\r\n            this.initComponent(paper);\r\n\r\n            this.cached.tools = null;\r\n            \r\n            Graph.topic.subscribe('shape/select', _.bind(this.onShapeSelect, this));\r\n            Graph.topic.subscribe('shape/deselect', _.bind(this.onShapeDeselect, this));\r\n            \r\n            Graph.topic.subscribe('link/select', _.bind(this.onLinkSelect, this));\r\n            Graph.topic.subscribe('link/deselect', _.bind(this.onLinkDeselect, this));\r\n        },\r\n        \r\n        initComponent: function(paper) {\r\n            \r\n            var pad = '<div class=\"graph-toolpad\">' + \r\n                            '<div class=\"pad-header\"></div>' + \r\n                            '<div class=\"pad-splitter\"></div>' + \r\n                            '<div class=\"pad-body\">x</div>'+\r\n                      '</div>';\r\n\r\n            pad = Graph.$(pad);\r\n\r\n            pad.on('click', '[data-shape-tool]', _.bind(this.onToolClick, this));\r\n            \r\n            this.components.pad = pad;\r\n        },\r\n        \r\n        render: function() {\r\n            if (this.props.rendered) {\r\n                return;\r\n            }\r\n            \r\n            this.components.pad.appendTo(this.vector().container());\r\n            this.props.rendered = true;\r\n        },\r\n        \r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.components.pad.detach();\r\n        },\r\n        \r\n        resume: function() {\r\n            if (this.props.suspended) {\r\n                \r\n                this.props.suspended = false;\r\n                \r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else {\r\n                    this.components.pad.appendTo(this.vector().container());\r\n                }\r\n            }\r\n        },\r\n        \r\n        onShapeSelect: function(e) {\r\n            var shape = e.shape,\r\n                meta = shape.metadata,\r\n                pad = this.components.pad;\r\n\r\n            pad.find('.pad-header').html('<a><i class=\"' + meta.icon + '\"></i></a>');\r\n            \r\n            var body = '';\r\n            \r\n            _.forEach(meta.tools, function(tool){\r\n                if (tool.enabled) {\r\n                    body += '<div class=\"splitter\"></div>';\r\n                    body += '<a data-shape-tool=\"' + tool.name + '\" href=\"javascript:void(0)\" title=\"' + tool.title + '\"><i class=\"' + tool.icon + '\"></i></a>';\r\n                }\r\n            });\r\n            \r\n            pad.find('.pad-body').html(body);\r\n            \r\n            this.cached.tools = meta.tools;\r\n            this.resume();\r\n        },\r\n        \r\n        onShapeDeselect: function(e) {\r\n            this.suspend();\r\n        },\r\n        \r\n\r\n        onLinkSelect: function(e) {\r\n            var link = e.link,\r\n                meta = link.metadata,\r\n                pad = this.components.pad;\r\n            \r\n            pad.find('.pad-header').html('<a><i class=\"' + meta.icon + '\"></i></a>');\r\n            \r\n            var body = '';\r\n            \r\n            _.forEach(meta.tools, function(tool){\r\n                if (tool.enabled) {\r\n                    body += '<div class=\"splitter\"></div>';\r\n                    body += '<a data-shape-tool=\"' + tool.name + '\" href=\"#\" title=\"' + tool.title + '\"><i class=\"' + tool.icon + '\"></i></a>';\r\n                }\r\n            });\r\n            \r\n            pad.find('.pad-body').html(body);\r\n            \r\n            this.cached.tools = meta.tools;\r\n            this.resume();\r\n        },\r\n\r\n        onLinkDeselect: function(e) {\r\n            this.suspend();\r\n        },\r\n        \r\n        onToolClick: function(e) {\r\n            var target = Graph.$(e.currentTarget),\r\n                name = target.data('shapeTool');\r\n            \r\n            var tool = _.find(this.cached.tools, function(t){\r\n                return t.name == name;\r\n            });\r\n            \r\n            if (tool && tool.handler) {\r\n                tool.handler(e);\r\n            }\r\n            \r\n            e.preventDefault();\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Toolpad';\r\n        }\r\n        \r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.ns('Graph.shape.activity');\r\n\r\n    Graph.shape.activity.Start = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'START',\r\n            width: 60,\r\n            height: 60,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            name: 'activity.start',\r\n            style: 'graph-shape-activity-start'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, label;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            var cx = this.props.width / 2,\r\n                cy = this.props.height / 2;\r\n\r\n            block = (new Graph.svg.Ellipse(cx, cy, cx, cy))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .data('text', this.props.label)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            pmgr.install('dragger', block, {ghost: true, dragClass: Graph.styles.SHAPE_DRAG});\r\n            pmgr.install('network', block, {wiring: 'h:v'});\r\n            pmgr.install('resizer', block);\r\n            pmgr.install('editor',  block);\r\n            pmgr.install('snapper', block);\r\n\r\n            block.on('edit.shape',      _.bind(this.onLabelEdit, this));\r\n            block.on('dragstart.shape', _.bind(this.onDragStart, this));\r\n            block.on('dragend.shape',   _.bind(this.onDragEnd, this));\r\n            block.on('resize.shape',    _.bind(this.onResize, this));\r\n            block.on('remove.shape',    _.bind(this.onRemove, this));\r\n            block.on('select.shape',    _.bind(this.onSelect, this));\r\n            block.on('deselect.shape',  _.bind(this.onDeselect, this));\r\n\r\n            label = (new Graph.svg.Text(cx, cy, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n\r\n            shape = block = label = null;\r\n        },\r\n\r\n        redraw: function() {\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                label = this.component('label');\r\n\r\n            var matrix, bound, cx, cy;\r\n\r\n            bound  = block.bbox().toJson(),\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            cx = bound.width  / 2;\r\n            cy = bound.height / 2;\r\n\r\n            block.attr({\r\n                cx: cx,\r\n                cy: cy\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            label.attr({\r\n                x: cx,\r\n                y: cy\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n            // update props\r\n\r\n            matrix = shape.matrix();\r\n\r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Start';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.shape.activity.Final = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'STOP',\r\n            width: 60,\r\n            height: 60,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            name: 'activity.final',\r\n            style: 'graph-shape-activity-final'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, inner, label;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            var cx = this.props.width / 2,\r\n                cy = this.props.height / 2;\r\n\r\n            block = (new Graph.svg.Ellipse(cx, cy, cx, cy))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .data('text', this.props.label)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            pmgr.install('dragger', block, {ghost: true, dragClass: Graph.styles.SHAPE_DRAG});\r\n            pmgr.install('network', block, {wiring: 'h:v'});\r\n            pmgr.install('resizer', block);\r\n            pmgr.install('editor',  block);\r\n            pmgr.install('snapper', block);\r\n\r\n            block.on('edit.shape',      _.bind(this.onLabelEdit, this));\r\n            block.on('dragstart.shape', _.bind(this.onDragStart, this));\r\n            block.on('dragend.shape',   _.bind(this.onDragEnd, this));\r\n            block.on('resize.shape',    _.bind(this.onResize, this));\r\n            block.on('remove.shape',    _.bind(this.onRemove, this));\r\n            block.on('select.shape',    _.bind(this.onSelect, this));\r\n            block.on('deselect.shape',  _.bind(this.onDeselect, this));\r\n\r\n            inner = (new Graph.svg.Ellipse(cx, cy, cx - 6, cy - 6))\r\n                .addClass('comp-inner')\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            label = (new Graph.svg.Text(cx, cy, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .addClass('comp-label')\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n            comp.inner = inner.guid();\r\n\r\n            shape = block = label = inner = null;\r\n        },\r\n\r\n        redraw: function() {\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                inner = this.component('inner'),\r\n                label = this.component('label');\r\n\r\n            var matrix, bound, cx, cy;\r\n\r\n            bound  = block.bbox().toJson(),\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            cx = bound.width / 2,\r\n            cy = bound.height / 2;\r\n\r\n            block.attr({\r\n                cx: cx,\r\n                cy: cy\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            label.attr({\r\n                x: cx,\r\n                y: cy\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n            inner.attr({\r\n                cx: cx,\r\n                cy: cy,\r\n                rx: cx - 6,\r\n                ry: cy - 6\r\n            });\r\n\r\n            // update props\r\n            matrix = shape.matrix();\r\n\r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Final';\r\n        },\r\n\r\n        onRemove: function() {\r\n            // remove label\r\n            this.component('label').remove();\r\n\r\n            // remove inner\r\n            this.component('inner').remove();\r\n\r\n            // remove shape\r\n            this.component('shape').remove();\r\n\r\n            for (var name in this.components) {\r\n                this.components[name] = null;\r\n            }\r\n\r\n            Graph.registry.shape.unregister(this);\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.shape.activity.Action = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'Action',\r\n            width: 140,\r\n            height: 60,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            name: 'activity.action',\r\n            icon: Graph.icons.SHAPE_ACTION,\r\n            style: 'graph-shape-activity-action'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, label;\r\n\r\n            var cx = this.props.width / 2,\r\n                cy = this.props.height / 2;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Rect(0, 0, this.props.width, this.props.height))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .data('text', this.props.label)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            pmgr.install('dragger', block, {ghost: true, dragClass: Graph.styles.SHAPE_DRAG});\r\n            pmgr.install('resizer', block);\r\n            pmgr.install('editor',  block);\r\n            pmgr.install('network', block, {wiring: 'h:v'});\r\n            pmgr.install('snapper', block);\r\n\r\n            block.on('edit.shape',      _.bind(this.onLabelEdit, this));\r\n            block.on('dragstart.shape', _.bind(this.onDragStart, this));\r\n            block.on('dragend.shape',   _.bind(this.onDragEnd, this));\r\n            block.on('resize.shape',    _.bind(this.onResize, this));\r\n            block.on('remove.shape',    _.bind(this.onRemove, this));\r\n            block.on('select.shape',    _.bind(this.onSelect, this));\r\n            block.on('deselect.shape',  _.bind(this.onDeselect, this));\r\n\r\n            label = (new Graph.svg.Text(cx, cy, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n\r\n            shape = block = label = null;\r\n        },\r\n\r\n        redraw: function() {\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                label = this.component('label');\r\n\r\n            var bound, matrix;\r\n\r\n            bound = block.bbox().toJson();\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            block.attr({\r\n                x: 0,\r\n                y: 0\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            label.attr({\r\n                x: bound.width  / 2,\r\n                y: bound.height / 2\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n            // update props\r\n\r\n            matrix = shape.matrix();\r\n\r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        onResize: function() {\r\n            this.redraw();\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Action';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.shape.activity.Fork = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            width: 100,\r\n            height: 50,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            name: 'activity.fork',\r\n            style: 'graph-shape-activity-fork'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = this.components;\r\n            var shape, block, label;\r\n\r\n            shape = (new Graph.svg.Group(me.props.left, me.props.top))\r\n                .selectable(false);\r\n\r\n            comp.shape = shape.guid();\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Fork';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.shape.activity.Join = Graph.extend(Graph.shape.Shape, {\r\n        props: {\r\n            width: 140,\r\n            height: 12,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            name: 'activity.join',\r\n            style: 'graph-shape-activity-join'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, beam, label;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Rect(0, 0, this.props.width, this.props.height, 0))\r\n                .addClass('block')\r\n                .render(shape);\r\n\r\n            pmgr.install('dragger', block, {ghost: true});\r\n            pmgr.install('network', block);\r\n\r\n            block.on('dragend', _.bind(this.onDragEnd, this));\r\n            \r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Join';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var TRANSFER_RECEIVE = 'receive',\r\n        TRANSFER_DISPOSE = 'dispose';\r\n\r\n    Graph.shape.activity.Lane = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'Participant Role',\r\n            width: 1000,\r\n            height: 200,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        components: {\r\n            header: null\r\n        },\r\n\r\n        tree: {\r\n            pool: null\r\n        },\r\n\r\n        transfer: null,\r\n\r\n        metadata: {\r\n            name: 'activity.lane',\r\n            icon: Graph.icons.SHAPE_LANE,\r\n            style: 'graph-shape-activity-lane'\r\n        },\r\n\r\n        constructor: function(options) {\r\n            this.superclass.prototype.constructor.call(this, options);\r\n            this.initDropzone();\r\n        },\r\n\r\n        initMetadata: function() {\r\n            this.metadata.tools = [\r\n                {\r\n                    name: 'config',\r\n                    icon: Graph.icons.CONFIG,\r\n                    title: Graph._('Click to config shape'),\r\n                    enabled: true\r\n                },\r\n                {\r\n                    name: 'above',\r\n                    icon: Graph.icons.LANE_ABOVE,\r\n                    title: Graph._('Add shape above'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onAboveToolClick, this)\r\n                },\r\n                {\r\n                    name: 'below',\r\n                    icon: Graph.icons.LANE_BELOW,\r\n                    title: Graph._('Add shape below'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBelowToolClick, this)\r\n                },\r\n                {\r\n                    name: 'moveup',\r\n                    icon: Graph.icons.MOVE_UP,\r\n                    title: Graph._('Move up'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onUpToolClick, this)\r\n                },\r\n                {\r\n                    name: 'movedown',\r\n                    icon: Graph.icons.MOVE_DOWN,\r\n                    title: Graph._('Move down'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onDownToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtofront',\r\n                    icon: Graph.icons.SEND_TO_FRONT,\r\n                    title: Graph._('Send to front'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onFrontToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtoback',\r\n                    icon: Graph.icons.SEND_TO_BACK,\r\n                    title: Graph._('Send to back'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBackToolClick, this)\r\n                },\r\n                {\r\n                    name: 'trash',\r\n                    icon: Graph.icons.TRASH,\r\n                    title: Graph._('Click to remove shape'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onTrashToolClick, this)\r\n                }\r\n            ];\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, header, label, child;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Rect(0, 0, this.props.width, this.props.height, 0))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .render(shape);\r\n\r\n            pmgr.install('resizer', block, {minWidth: 200, minHeight: 100});\r\n            pmgr.install('dragger', block, {ghost: true, batchSync: false});\r\n\r\n            block.on('dragstart.shape', _.bind(this.onDragStart, this));\r\n            block.on('dragend.shape',   _.bind(this.onDragEnd, this));\r\n            block.on('resize.shape',    _.bind(this.onResize, this));\r\n            block.on('remove.shape',    _.bind(this.onRemove, this));\r\n            block.on('select.shape',    _.bind(this.onSelect, this));\r\n            block.on('deselect.shape',  _.bind(this.onDeselect, this));\r\n\r\n            header = (new Graph.svg.Rect(0, 0, 30, this.props.height, 0))\r\n                .addClass(Graph.styles.SHAPE_HEADER)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            header.data('text', this.props.label);\r\n\r\n            pmgr.install('editor', header, {width: 200, height: 100});\r\n\r\n            header.on('edit.shape', _.bind(this.onLabelEdit, this));\r\n\r\n            var tx = 15,\r\n                ty = this.props.height / 2;\r\n\r\n            label = (new Graph.svg.Text(tx, ty, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(shape);\r\n\r\n            label.rotate(270, tx, ty).commit();\r\n\r\n            child = (new Graph.svg.Group())\r\n                .addClass(Graph.styles.SHAPE_CHILD)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            child.translate(50, 0).commit();\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.header = header.guid();\r\n            comp.label = label.guid();\r\n            comp.child = child.guid();\r\n\r\n            // set virtual pool\r\n            this.tree.pool = new Graph.shape.activity.Pool();\r\n            this.tree.pool.insert(this);\r\n\r\n            shape = block = header = label = null;\r\n        },\r\n\r\n        initDropzone: function() {\r\n            var me = this,\r\n                comp = me.component(),\r\n                block = me.component('block'),\r\n                children = me.children();\r\n\r\n            block.interactable().dropzone({\r\n                accept: '.shape-draggable',\r\n                overlap: .2\r\n            })\r\n            .on('dragenter', function laneDragEnter(e){\r\n                var vector, shape, batch;\r\n\r\n                comp.addClass('receiving');\r\n\r\n                if ( ! me.transfer) {\r\n                    vector = Graph.registry.vector.get(e.relatedTarget);\r\n\r\n                    if (vector) {\r\n\r\n                        shape = Graph.registry.shape.get(vector);\r\n\r\n                        if (shape) {\r\n                            me.transfer = {\r\n                                shape: shape,\r\n                                batch: []\r\n                            };\r\n\r\n                            me.transfer.shape.on('dragend', onTransferEnd);\r\n                            me.transfer.batch = [shape];\r\n\r\n                            if (vector.lasso) {\r\n                                batch = vector.lasso.collection.slice();\r\n\r\n                                _.forEach(batch, function(v){\r\n                                    var s = Graph.registry.shape.get(v);\r\n                                    if (s && s.guid() != shape.guid()) {\r\n                                        me.transfer.batch.push(s);\r\n                                    }\r\n                                });\r\n\r\n                                batch = null;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            .on('dragleave', function laneDragLeave(e){\r\n                comp.removeClass('receiving');\r\n            })\r\n            .on('drop', function laneDrop(e){\r\n                if (me.transfer) {\r\n                    var delay;\r\n\r\n                    delay = _.delay(function(){\r\n                        clearTimeout(delay);\r\n                        delay = null;\r\n\r\n                        var placeTarget = me.component('child');\r\n\r\n                        _.forEach(me.transfer.batch, function(shape){\r\n                            var shapeComponent = shape.component();\r\n\r\n                            shapeComponent.relocate(placeTarget);\r\n                            me.addChild(shape);\r\n                        });\r\n\r\n                        me.autoResize();\r\n                    }, 0);\r\n\r\n                }\r\n\r\n                comp.removeClass('receiving');\r\n            });\r\n\r\n            block = null;\r\n\r\n            /////////\r\n\r\n            function onTransferEnd() {\r\n                var delay;\r\n\r\n                delay = _.delay(function(){\r\n\r\n                    clearTimeout(delay);\r\n                    delay = null;\r\n\r\n                    me.transfer.shape.off('dragend', onTransferEnd);\r\n                    me.transfer = null;\r\n\r\n                }, 0);\r\n            }\r\n        },\r\n\r\n        pool: function() {\r\n            return this.tree.pool;\r\n        },\r\n\r\n        // @Override\r\n        render: function(paper, method, sibling) {\r\n            var component = this.component();\r\n\r\n            method = _.defaultTo(method, 'prepend');\r\n\r\n            component.render(paper, method, sibling);\r\n\r\n            // save\r\n            this.tree.paper = paper.guid();\r\n        },\r\n\r\n        sendToBack: function() {\r\n            var paper = this.paper();\r\n        },\r\n\r\n        sendToFront: function() {\r\n            this.pool().bringToFront(this);\r\n        },\r\n\r\n        redraw: function() {\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                header = this.component('header'),\r\n                label = this.component('label');\r\n\r\n            var matrix, bound;\r\n\r\n            bound  = block.bbox().toJson();\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n            shape.dirty(true);\r\n\r\n            block.attr({\r\n                x: 0,\r\n                y: 0\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            header.attr({\r\n                x: 0,\r\n                y: 0,\r\n                height: bound.height\r\n            });\r\n\r\n            header.dirty(true);\r\n\r\n            var tx = 15,\r\n                ty = bound.height / 2;\r\n\r\n            label.graph.matrix = Graph.matrix();\r\n            label.attr('transform', '');\r\n\r\n            label.attr({\r\n                x: tx,\r\n                y: ty\r\n            });\r\n\r\n            label.wrap(bound.height - 10);\r\n            label.rotate(270, tx, ty).commit();\r\n\r\n            // update props\r\n\r\n            matrix = shape.matrix();\r\n\r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            var result = this.superclass.prototype.attr.call(this, name, value),\r\n                maps = {\r\n                    width: 'width',\r\n                    height: 'height',\r\n                    left: 'x',\r\n                    top: 'y'\r\n                };\r\n\r\n            var block, key, val;\r\n\r\n            if (_.isPlainObject(name)) {\r\n\r\n                block = this.component('block');\r\n\r\n                for (key in name) {\r\n                    if (maps[key]) {\r\n                        val = name[key];\r\n                        block.attr(maps[key], val);\r\n                    }\r\n                }\r\n\r\n                this.redraw();\r\n\r\n            } else if (value !== undefined) {\r\n                block = this.component('block');\r\n\r\n                if (maps[name]) {\r\n                    block.attr(maps[name], value);\r\n                }\r\n\r\n                this.redraw();\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        addSiblingAbove: function() {\r\n            var sibling = new Graph.shape.activity.Lane(),\r\n                paper = this.paper(),\r\n                pool = this.pool();\r\n\r\n            // create space above\r\n            pool.createSpaceAbove(this, sibling.height());\r\n\r\n            // sync position 'above'\r\n            var top = (this.top() - sibling.height());\r\n\r\n            sibling.attr({\r\n                width: this.props.width,\r\n                left: this.props.left,\r\n                top: top\r\n            });\r\n\r\n            // sync pool\r\n            sibling.tree.pool = pool;\r\n\r\n            var result = pool.insert(sibling);\r\n\r\n            if (result !== undefined) {\r\n                sibling.render(paper, 'before', this.component());\r\n            }\r\n\r\n            return sibling;\r\n        },\r\n\r\n        addSiblingBellow: function() {\r\n            var sibling = new Graph.shape.activity.Lane(),\r\n                paper = this.paper(),\r\n                pool = this.pool();\r\n\r\n            // create space\r\n            pool.createSpaceBellow(this, sibling.height());\r\n\r\n            // sync position 'bellow'\r\n            var bottom = (this.top() + this.height());\r\n\r\n            sibling.attr({\r\n                width: this.props.width,\r\n                left: this.props.left,\r\n                top: bottom\r\n            });\r\n\r\n            // sync pool\r\n            sibling.tree.pool = pool;\r\n\r\n            var result = pool.insert(sibling);\r\n\r\n            if (result !== undefined) {\r\n                sibling.render(paper, 'after', this.component());\r\n            }\r\n\r\n            return sibling;\r\n        },\r\n\r\n        autoResize: function() {\r\n\r\n            var shapeComponent = this.component(),\r\n                blockComponent = this.component('block');\r\n\r\n            if (blockComponent.isSelected()) {\r\n                blockComponent.deselect();\r\n            }\r\n\r\n            var bbox = this.bbox().toJson(),\r\n                actualBBox = shapeComponent.bbox().toJson(),\r\n                blockComponent = this.component('block'),\r\n                childComponent = this.component('child'),\r\n\r\n                offset = {\r\n                    top: 20,\r\n                    bottom: 20,\r\n                    left: 40,\r\n                    right: 20\r\n                },\r\n\r\n                padding = {\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    left: 0,\r\n                    right: 0\r\n                };\r\n\r\n            var bounds = _.extend({}, bbox);\r\n\r\n            if (actualBBox.y - bbox.y < padding.top) {\r\n                bounds.y = actualBBox.y - offset.top;\r\n            }\r\n\r\n            if (actualBBox.x - bbox.x < padding.left) {\r\n                bounds.x = actualBBox.x - offset.left;\r\n            }\r\n\r\n            if ((bbox.x + bbox.width) - (actualBBox.x + actualBBox.width) < padding.right) {\r\n                bounds.x2 = (actualBBox.x + actualBBox.width) + offset.right;\r\n            }\r\n\r\n            if ((bbox.y + bbox.height) - (actualBBox.y + actualBBox.height) < padding.bottom) {\r\n                bounds.y2 = (actualBBox.y + actualBBox.height) + offset.bottom;\r\n            }\r\n\r\n            var dx = bounds.x - bbox.x,\r\n                dy = bounds.y - bbox.y;\r\n\r\n            var width = bounds.x2 - bounds.x,\r\n                height = bounds.y2 - bounds.y;\r\n\r\n            // preserver child component\r\n            childComponent.translate(Math.abs(dx), Math.abs(dy)).commit();\r\n\r\n            this.translate(dx, dy);\r\n            // this.pool().translateBy(this, dx, dy);\r\n\r\n            this.attr({\r\n                width: width,\r\n                height: height\r\n            });\r\n\r\n            this.pool().resizeBy(this);\r\n        },\r\n\r\n        redrawChildren: function() {\r\n            var pool = this.pool(),\r\n                lanes = pool.children().toArray(),\r\n                children = [];\r\n\r\n            _.forEach(lanes, function(lane){\r\n                var laneChild = lane.children().toArray();\r\n                // repair links\r\n                _.forEach(laneChild, function(shape){\r\n                    var connectable = shape.connectable(),\r\n                        snappable = shape.snappable();\r\n\r\n                    connectable.plugin().repairLinks();\r\n                    snappable.plugin().repairClient(snappable.component());\r\n                });\r\n                // children = _.concat(children, laneChild);\r\n            });\r\n\r\n            // TODO: redraw links if any\r\n\r\n\r\n            // TODO: redraw snapper if exists\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Lane';\r\n        },\r\n\r\n        onRemove: function() {\r\n            // remove label\r\n            this.component('label').remove();\r\n\r\n            // remove header\r\n            this.component('header').remove();\r\n\r\n            // remove shape\r\n            this.component('shape').remove();\r\n\r\n            for (var name in this.components) {\r\n                this.components[name] = null;\r\n            }\r\n\r\n            Graph.registry.shape.unregister(this);\r\n        },\r\n\r\n        onSelect: function() {\r\n            this.superclass.prototype.onSelect.call(this, arguments);\r\n\r\n            var me = this,\r\n                guid = me.guid();\r\n\r\n            var delay = _.delay(function(){\r\n\r\n                clearTimeout(delay);\r\n                delay = null;\r\n\r\n                me.cascade(function(curr){\r\n                    if (curr.guid() != guid) {\r\n                        var vector = curr.draggable().component();\r\n                        if (vector && vector.lasso) {\r\n                            vector.lasso.decollect(vector);\r\n                        }\r\n                    }\r\n                });\r\n\r\n            }, 0)\r\n\r\n        },\r\n\r\n        onDragEnd: function(e) {\r\n            if (e.master) {\r\n                var blockComponent = this.component('block'),\r\n                    shapeComponent = this.component('shape'),\r\n                    blockMatrix = blockComponent.matrix(),\r\n                    pool = this.pool();\r\n\r\n                var shapeMatrix;\r\n\r\n                blockComponent.reset();\r\n\r\n                shapeComponent.matrix().multiply(blockMatrix);\r\n                shapeComponent.attr('transform', shapeComponent.matrix().toValue());\r\n                shapeComponent.dirty(true);\r\n\r\n                // update props\r\n                shapeMatrix = shapeComponent.matrix();\r\n\r\n                this.data({\r\n                    left: shapeMatrix.props.e,\r\n                    top: shapeMatrix.props.f\r\n                });\r\n\r\n                // forward\r\n                this.fire(e);\r\n                shapeComponent.removeClass('shape-dragging');\r\n\r\n                // sync other\r\n                pool.translateBy(this, e.dx, e.dy);\r\n\r\n                this.redrawChildren();\r\n            }\r\n\r\n        },\r\n\r\n        onResize: function(e) {\r\n            this.superclass.prototype.onResize.call(this, e);\r\n            this.pool().resizeBy(this);\r\n        },\r\n\r\n        onAboveToolClick: function(e) {\r\n            this.addSiblingAbove();\r\n        },\r\n\r\n        onBelowToolClick: function(e) {\r\n            this.addSiblingBellow();\r\n        },\r\n\r\n        onUpToolClick: function(e) {\r\n            this.pool().moveUp(this);\r\n        },\r\n\r\n        onDownToolClick: function(e) {\r\n            this.pool().moveDown(this);\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    /**\r\n     * Virtual pool for lanes\r\n     */\r\n\r\n    var Pool = Graph.shape.activity.Pool = function() {\r\n        this.guid = 'pool-' + (++Pool.guid);\r\n        \r\n        // tree nodes\r\n        this.lanes = (new Graph.collection.Tree([]))\r\n            .keygen(function(lane){ \r\n                return lane.bbox.y;\r\n                // return (lane.bbox.y + (1e-9 * lane.bbox.x));\r\n            });\r\n        \r\n        // raw nodes\r\n        this.cached = {};\r\n    };\r\n\r\n    Pool.prototype.children = function() {\r\n        var children = [];\r\n        \r\n        _.forEach(this.lanes.toArray(), function(node){\r\n            var lane = Graph.registry.shape.get(node.lane);\r\n            children.push(lane);\r\n        });\r\n\r\n        return new Graph.collection.Shape(children);\r\n    };\r\n\r\n    Pool.prototype.bbox = function() {\r\n        var nodes = this.lanes.toArray(),\r\n             x = [], \r\n             y = [], \r\n            x2 = [], \r\n            y2 = [];\r\n\r\n        var bbox;\r\n\r\n        for (var i = nodes.length - 1; i >= 0; i--) {\r\n            bbox = nodes[i].bbox;\r\n\r\n            x.push(bbox.x);\r\n            y.push(bbox.y);\r\n\r\n            x2.push(bbox.x + bbox.width);\r\n            y2.push(bbox.y + bbox.height);\r\n        }\r\n\r\n         x = _.min(x);\r\n         y = _.min(y);\r\n        x2 = _.max(x2);\r\n        y2 = _.max(y2);\r\n\r\n        nodes = null;\r\n\r\n        return Graph.bbox({\r\n            x: x,\r\n            y: y,\r\n            x2: x2,\r\n            y2: y2,\r\n            width: x2 - x,\r\n            height: y2 - y\r\n        });\r\n    };\r\n    \r\n    Pool.prototype.get = function(index) {\r\n        var data = this.lanes.get(index);\r\n        if (data) {\r\n            return Graph.registry.shape.get(data.lane);\r\n        }\r\n        return null;\r\n    };\r\n\r\n    Pool.prototype.prev = function(lane) {\r\n        var index = this.index(lane),\r\n            prev = this.lanes.get(index - 1);\r\n            \r\n        if (prev) {\r\n            return Graph.registry.shape.get(prev.lane);\r\n        }\r\n        \r\n        return null;\r\n    };\r\n    \r\n    Pool.prototype.last = function() {\r\n        var index = this.count() - 1,\r\n            last = this.lanes.get(index);\r\n            \r\n        if (last) {\r\n            return Graph.registry.shape.get(last.lane);\r\n        }\r\n        \r\n        return null;\r\n    };\r\n\r\n    Pool.prototype.refresh = function(lane) {\r\n        console.log(lane);\r\n    };\r\n    \r\n    /**\r\n     * Create new space\r\n     */\r\n    Pool.prototype.createSpaceAbove = function(lane, height) {\r\n        var laneIndex = this.index(lane),\r\n            prev = this.lanes.get(laneIndex - 1);\r\n\r\n        if (prev) {\r\n            this.lanes.bubble(prev, function(curr){\r\n                var shape = Graph.registry.shape.get(curr.lane);\r\n                if (shape) {\r\n                    shape.translate(0, -height);\r\n                    curr.bbox = shape.bbox().toJson();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    \r\n    Pool.prototype.createSpaceBellow = function(lane, height) {\r\n        var laneIndex = this.index(lane),\r\n            next = this.lanes.get(laneIndex + 1);\r\n\r\n        if (next) {\r\n            this.lanes.cascade(next, function(curr){\r\n                var shape = Graph.registry.shape.get(curr.lane);\r\n                if (shape) {\r\n                    shape.translate(0, height);\r\n                    curr.bbox = shape.bbox().toJson();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    \r\n    Pool.prototype.translateBy = function(lane, dx, dy) {\r\n        var root = this.lanes.root(),\r\n            guid = lane.guid();\r\n        \r\n        if (root) {\r\n            this.lanes.cascade(root, function(curr){\r\n                if (curr.lane == guid) {\r\n                    curr.bbox = lane.bbox().toJson();\r\n                } else {\r\n                    var shape = Graph.registry.shape.get(curr.lane);\r\n                    if (shape) {\r\n                        shape.translate(dx, dy);\r\n                        curr.bbox = shape.bbox().toJson();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    Pool.prototype.resizeBy = function(lane) {\r\n        var guid = lane.guid(),\r\n            bbox = lane.bbox().toJson(),\r\n            root = this.lanes.root(),\r\n            index = this.index(lane);\r\n            \r\n        if (root) {\r\n\r\n            // sample\r\n            var prev, next, dx1, dx2, dy1, dy2;\r\n\r\n            prev = this.lanes.get(index - 1);\r\n            next = this.lanes.get(index + 1);\r\n\r\n            dx1 = 0;\r\n            dy1 = 0;\r\n\r\n            dx2 = 0\r\n            dy2 = 0;\r\n\r\n            if (prev) {\r\n                dx1 = bbox.x - prev.bbox.x;\r\n                dy1 = bbox.y - (prev.bbox.y + prev.bbox.height);\r\n            }\r\n\r\n            if (next) {\r\n                dx2 = bbox.x - next.bbox.x;\r\n                dy2 = (bbox.y + bbox.height) - next.bbox.y;\r\n            }\r\n\r\n            this.lanes.cascade(root, function(curr, i){\r\n                if (curr.lane == guid) {\r\n                    curr.bbox = bbox;\r\n                } else {\r\n                    var shape = Graph.registry.shape.get(curr.lane);\r\n                    if (shape) {\r\n                        \r\n                        var group = shape.component(),\r\n                            block = shape.component('block');\r\n                        \r\n                        // up\r\n                        if (index > i) {\r\n                            shape.translate(dx1, dy1);\r\n                        } \r\n                        // down\r\n                        else if (index < i) {\r\n                            shape.translate(dx2, dy2);\r\n                        }\r\n\r\n                        block.attr({\r\n                            width: bbox.width\r\n                        });\r\n\r\n                        block.dirty(true);\r\n\r\n                        shape.redraw();\r\n\r\n                        curr.bbox = shape.bbox().toJson();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        bbox = null;\r\n    };\r\n\r\n    Pool.prototype.bringToFront = function(lane) {\r\n        var sets = Graph.$('[data-pool=\"' + this.guid + '\"]'),\r\n            last = sets.last();\r\n        \r\n        if (last.length()) {\r\n            if (last.node() != lane.component().node()) {\r\n                last.after(lane.component().elem);\r\n            }\r\n        }\r\n    };\r\n\r\n    Pool.prototype.moveUp = function(lane) {\r\n        var index = this.index(lane),\r\n            prev  = this.get(index - 1),\r\n            laneNode = this.lanes.get(index),\r\n            prevNode = this.lanes.get(index - 1);\r\n\r\n        if (prev) {\r\n            var laneBox = lane.bbox().toJson(),\r\n                prevBox = prev.bbox().toJson();\r\n\r\n            var dx1 = 0,\r\n                dy1 = prevBox.y - laneBox.y,\r\n                dx2 = 0,\r\n                dy2 = laneBox.height;\r\n            \r\n            laneNode.bbox.y  += dy1;\r\n            laneNode.bbox.y2 += dy1;\r\n\r\n            prevNode.bbox.y  += dy2;\r\n            prevNode.bbox.y2 += dy2;\r\n\r\n            lane.translate(dx1, dy1);\r\n            prev.translate(dx2, dy2);\r\n\r\n            this.lanes.order();\r\n        }\r\n    };\r\n\r\n    Pool.prototype.moveDown = function(lane) {\r\n        var index = this.index(lane),\r\n            next  = this.get(index + 1),\r\n            laneNode = this.lanes.get(index),\r\n            nextNode = this.lanes.get(index + 1);\r\n\r\n        if (next) {\r\n            var laneBox = lane.bbox().toJson(),\r\n                nextBox = next.bbox().toJson();\r\n\r\n            var dx1 = 0,\r\n                dy1 = nextBox.height,\r\n                dx2 = 0,\r\n                dy2 = laneBox.y - nextBox.y;\r\n            \r\n            laneNode.bbox.y  += dy1;\r\n            laneNode.bbox.y2 += dy1;\r\n\r\n            nextNode.bbox.y  += dy2;\r\n            nextNode.bbox.y2 += dy2;\r\n\r\n            lane.translate(dx1, dy1);\r\n            next.translate(dx2, dy2);\r\n\r\n            this.lanes.order();\r\n        }\r\n    };\r\n\r\n    Pool.prototype.count = function() {\r\n        return this.lanes.count();\r\n    };\r\n    \r\n    Pool.prototype.insert = function(lane) {\r\n        var guid = lane.guid();\r\n        var node, index;\r\n        \r\n        node = {\r\n            lane: guid,\r\n            bbox: lane.bbox().toJson()\r\n        };\r\n        \r\n        index = this.lanes.insert(node);\r\n        \r\n        if (index !== undefined) {\r\n            this.cached[guid] = node;\r\n            lane.component().elem.attr('data-pool', this.guid);\r\n        }\r\n        \r\n        node = null;\r\n        return index;\r\n    };\r\n\r\n    Pool.prototype.remove = function(lane) {\r\n        var guid = lane.guid(),\r\n            node = this.cached[guid];\r\n        \r\n        var index = this.lanes.remove(node);\r\n        \r\n        if (index !== undefined) {\r\n            delete this.cached[guid];\r\n        }\r\n        \r\n        node = null;\r\n        \r\n        return index;\r\n    };\r\n\r\n    Pool.prototype.index = function(lane) {\r\n        var guid = lane.guid(),\r\n            node = this.cached[guid];\r\n        \r\n        var index = this.lanes.index(node);\r\n        \r\n        node = null;\r\n        \r\n        return index;\r\n    };\r\n    \r\n    ///////// STATIC /////////\r\n    \r\n    Pool.guid = 0;\r\n    \r\n}());","\r\n(function(){\r\n    \r\n    var XMLDOC = '<?xml version=\"1.0\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\" [<!ENTITY nbsp \"&#160;\">]>';\r\n    \r\n    var Exporter = Graph.data.Exporter = function(vector, options){\r\n        \r\n        this.options = _.extend({}, Exporter.defaults, options || {});\r\n        this.element = vector.node();\r\n        \r\n        var width, height, scale;\r\n        \r\n        if (vector.isPaper()) {\r\n            width  = vector.elem.width();\r\n            height = vector.elem.height();\r\n            scale  = vector.layout().scale();\r\n        } else {\r\n            var bounds = vector.bbox().toJson();\r\n            \r\n            width  = bounds.width;\r\n            height = bounds.height;\r\n            scale  = vector.matrixCurrent().scale();\r\n        }\r\n        \r\n        _.assign(this.options, {\r\n            width: width,\r\n            height: height,\r\n            scaleX: scale.x,\r\n            scaleY: scale.y\r\n        });\r\n    };\r\n    \r\n    Exporter.defaults = {\r\n        width: 0,\r\n        height: 0,\r\n        \r\n        scaleX: 1,\r\n        scaleY: 1\r\n    };\r\n\r\n    Exporter.prototype.exportDataURI = function() {\r\n        \r\n    };\r\n    \r\n    Exporter.prototype.exportSVG = function() {\r\n        \r\n    };\r\n\r\n    Exporter.prototype.exportJPEG = function(filename, compression) {\r\n        var options = _.extend({}, this.options);\r\n        \r\n        options.encoder = 'image/jpeg';\r\n        options.compression = compression || 0.8;\r\n        \r\n        filename = _.defaultTo(filename, 'download.jpg');\r\n        \r\n        exportImage(this.element, options, function(result){\r\n            if (result) {\r\n                document(filename, result);\r\n            }\r\n        });\r\n    };\r\n\r\n    Exporter.prototype.exportPNG = function(filename, compression) {\r\n        var options = _.extend({}, this.options);\r\n        \r\n        filename = _.defaultTo(filename, 'download.png');\r\n        \r\n        options.encoder = 'image/png';\r\n        options.compression = compression || 0.8;\r\n        \r\n        exportImage(this.element, options, function(result){\r\n            if (result) {\r\n                download(filename, result);\r\n            }\r\n        });\r\n    };\r\n\r\n    Exporter.prototype.exportBlob = function(callback) {\r\n        var options = _.extend({}, this.options);\r\n        \r\n        options.encoder = 'image/jpeg';\r\n        options.compression = 1;\r\n        options.background = '#ffffff';\r\n\r\n        exportImage(this.element, options, function(result){\r\n            if (result) {\r\n                var blob = createBlob(result);\r\n                callback && callback(blob);\r\n            } else {\r\n                callback && callback(false);\r\n            }\r\n        });\r\n    };\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function repair(data) {\r\n        var encoded = encodeURIComponent(data);\r\n        \r\n        encoded = encoded.replace(/%([0-9A-F]{2})/g, function(match, p1) {\r\n            var c = String.fromCharCode('0x'+p1);\r\n            return c === '%' ? '%25' : c;\r\n        });\r\n        \r\n        return decodeURIComponent(encoded);\r\n    }\r\n    \r\n    function download(name, uri) {\r\n        if (navigator.msSaveOrOpenBlob) {\r\n            var blob = createBlob(uri);\r\n            navigator.msSaveOrOpenBlob(blob, name);\r\n            blob = null;\r\n        } else {\r\n            var link = Graph.dom('<a/>');\r\n            \r\n            if ('download' in link) {\r\n                link.download = name;\r\n                link.href = uri;\r\n                link.style.display = 'none';\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                document.body.removeChild(link);\r\n            } else {\r\n                window.open(uri, '_download', 'menubar=no,toolbar=no,status=no');\r\n            }\r\n            \r\n            link = null;\r\n        }\r\n    }\r\n    \r\n    function createBlob(uri) {\r\n        var byteString = window.atob(uri.split(',')[1]),\r\n            mimeString = uri.split(',')[0].split(':')[1].split(';')[0],\r\n            buffer = new ArrayBuffer(byteString.length),\r\n            intArray = new Uint8Array(buffer);\r\n        \r\n        for (var i = 0, ii = byteString.length; i < ii; i++) {\r\n            intArray[i] = byteString.charCodeAt(i);\r\n        }\r\n        \r\n        return new Blob([buffer], {type: mimeString});\r\n    }\r\n    \r\n    function exportImage(element, options, callback) {\r\n        var data = createDataURI(element, options),\r\n            image = new Image();\r\n        \r\n        image.onload = function() {\r\n            var canvas, context, result;\r\n            \r\n            canvas = document.createElement('canvas');\r\n            canvas.width  = image.width;\r\n            canvas.height = image.height;\r\n            \r\n            context = canvas.getContext('2d');\r\n\r\n            if (options.background) {\r\n                context.fillStyle = options.background;\r\n                context.fillRect(0, 0, canvas.width, canvas.height);\r\n            }\r\n\r\n            context.drawImage(image, 0, 0);\r\n            \r\n            try {\r\n                result = canvas.toDataURL(options.encoder, options.compression);\r\n            } catch(e) {\r\n                result = false;\r\n            }\r\n            \r\n            canvas = context = null;\r\n            callback(result);\r\n        };\r\n        \r\n        image.onerror = function() {\r\n            callback(false);\r\n        };\r\n        \r\n        image.src = data; // DOMURL.createObjectURL(blob);\r\n    }\r\n    \r\n    function createDataURI(element, options) {\r\n        var holder = Graph.dom('<div/>'),\r\n            cloned = element.cloneNode(true);\r\n        \r\n        var css, sty, svg, xml, uri;\r\n            \r\n        if (cloned.tagName == 'svg') {\r\n            cloned.setAttribute('width',  options.width);\r\n            cloned.setAttribute('height', options.height);\r\n        } else {\r\n            svg = Graph.dom('<svg/>');\r\n            \r\n            svg.setAttribute('xmlns', Graph.config.xmlns.svg);\r\n            svg.setAttribute('xmlns:xlink', Graph.config.xmlns.xlink);\r\n            svg.setAttribute('version', Graph.config.svg.version);\r\n            svg.setAttribute('width',  options.width);\r\n            svg.setAttribute('height', options.height);\r\n            \r\n            svg.appendChild(cloned);\r\n            cloned = svg;\r\n        }\r\n        \r\n        holder.appendChild(cloned);\r\n        \r\n        css = getElementStyles(element);\r\n        sty = Graph.dom('<style/>');\r\n        sty.setAttribute('type', 'text/css');\r\n        sty.innerHTML = \"<![CDATA[\\n\" + css + \"\\n]]>\";\r\n        \r\n        var first = cloned.childNodes[0];\r\n        \r\n        if (first) {\r\n            cloned.insertBefore(sty, first);\r\n        } else {\r\n            cloned.appendChild(sty);\r\n        }\r\n        \r\n        xml = XMLDOC + holder.innerHTML;\r\n        uri = 'data:image/svg+xml;base64,' + window.btoa(repair(xml));\r\n        \r\n        cloned = holder = null;\r\n        return uri;\r\n    }\r\n    \r\n    function getElementStyles(element) {\r\n        var styles = document.styleSheets,\r\n            result = '';\r\n            \r\n        var rules, rule, found;\r\n        \r\n        for (var i = 0, ii = styles.length; i < ii; i++) {\r\n            \r\n            rules = styles[i].cssRules;\r\n            \r\n            if (rules != null) {\r\n                \r\n                for (var j = 0, jj = rules.length; j < jj; j++, found = null) {\r\n                    \r\n                    rule = rules[j];\r\n                    \r\n                    if (rule.style !== undefined) {\r\n                        if (rule.selectorText) {\r\n                            \r\n                            found = element.querySelector(rule.selectorText);\r\n                            \r\n                            if (found) {\r\n                                result += rule.selectorText + \" { \" + rule.style.cssText + \" }\\n\";\r\n                            } else if(rule.cssText.match(/^@font-face/)) {\r\n                                result += rule.cssText + '\\n';\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.diagram.Activity = Graph.extend(Graph.diagram.Diagram, {\r\n        \r\n        toString: function() {\r\n            return 'Graph.diagram.Activity';\r\n        }\r\n        \r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.diagram.Diagram = Graph.extend({\r\n        \r\n        props: {\r\n            type: '',\r\n            name: '',\r\n            desc: ''\r\n        },\r\n\r\n        constructor: function(options) {\r\n            options = options || {};\r\n            _.assign(this.props, options);\r\n        },\r\n        \r\n        toString: function() {\r\n            return 'Graph.diagram.Diagram';\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.popup.Dialog = Graph.extend({\r\n\r\n        props: {\r\n            opened: false\r\n        },\r\n\r\n        components: {\r\n            element: null,\r\n            backdrop: null\r\n        },\r\n\r\n        handlers: {\r\n            backdrop_click: null\r\n        },\r\n\r\n        constructor: function(element, options) {\r\n            var me = this, \r\n                comp = me.components,\r\n                handlers = me.handlers;\r\n\r\n            comp.element = Graph.$(element);\r\n\r\n            if (options.buttons) {\r\n                _.forEach(options.buttons, function(button, index){\r\n                    var element = Graph.$(button.element, comp.element);\r\n                    if (element.length()) {\r\n                        var name = 'button' + index,\r\n                            func = name + '_click';\r\n\r\n                        comp[name] = element;\r\n\r\n                        if (_.isFunction(button.onclick)) {\r\n                            handlers[func] = _.bind(function(e){\r\n                                button.onclick.call(me, e);\r\n                            }, me);\r\n                            element.on('click', handlers[func]);\r\n                        }\r\n                        name = func = null;\r\n                    }\r\n                    element = null;\r\n                });\r\n            }\r\n        },\r\n\r\n        element: function() {\r\n            return this.components.element;\r\n        },\r\n\r\n        open: function() {\r\n            if (this.props.opened) {\r\n                return;\r\n            }\r\n\r\n            this.element().addClass('open');\r\n            this.props.opened = true;\r\n\r\n            this.center();\r\n            this.backdrop();\r\n        },\r\n\r\n        close: function() {\r\n            var me = this,\r\n                comp = this.components,\r\n                handlers = this.handlers,\r\n                backdrop = comp.backdrop;\r\n\r\n            this.element().removeClass('open');\r\n            this.props.opened = false;\r\n\r\n            if (handlers.backdrop_click) {\r\n                backdrop.off('click', handlers.backdrop_click);\r\n                handlers.backdrop_click = null;\r\n\r\n                var backdropUser = +backdrop.data('user');\r\n\r\n                backdropUser--;\r\n\r\n                if (backdropUser <= 0) {\r\n                    backdropUser = 0;\r\n                    backdrop.detach();\r\n                }\r\n\r\n                backdrop.data('user', backdropUser);\r\n            }\r\n\r\n            _.forOwn(handlers, function(handler, name){\r\n                var tmp = _.split(name, '_'),\r\n                    key = tmp[0],\r\n                    evt = tmp[1];\r\n\r\n                if (handler && comp[key] && evt) {\r\n                    comp[key].off(evt, handler);\r\n                    handlers[name] = null;\r\n                }\r\n                \r\n                tmp = key = evt = null;\r\n            });\r\n\r\n            this.fire('close');\r\n        },\r\n\r\n        center: _.debounce(function() {\r\n            var element = this.element(),\r\n                width = element.width(),\r\n                height = element.height();\r\n\r\n            element.css({\r\n                'top': '50%',\r\n                'left': '50%',\r\n                'margin-top': -height / 2,\r\n                'margin-left': -width / 2\r\n            });\r\n        }, 0),\r\n\r\n        backdrop: function() {\r\n            var me = this,\r\n                backdrop = Graph.$('.graph-dialog-backdrop');\r\n\r\n            if ( ! backdrop.length()) {\r\n                backdrop = Graph.$('<div class=\"graph-dialog-backdrop\"/>');\r\n                backdrop.data('user', 0);\r\n                backdrop.on('click', function(e){\r\n                    e.stopPropagation();\r\n                });\r\n            }\r\n\r\n            me.handlers.backdrop_click = function() {\r\n                me.close();\r\n            };\r\n\r\n            backdrop.on('click', me.handlers.backdrop_click);\r\n\r\n            var backdropUser = +backdrop.data('user');\r\n\r\n            backdropUser++;\r\n            backdrop.data('user', backdropUser);\r\n\r\n            me.components.element.before(backdrop);\r\n            me.components.backdrop = backdrop;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.popup.Dialog';\r\n        },\r\n\r\n        destroy: function() {\r\n            this.components.element = null;\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n    ///////// SHORTCUT /////////\r\n    \r\n    Graph.dialog = function(element, options){\r\n        return new Graph.popup.Dialog(element, options);\r\n    };\r\n\r\n}());"],"sourceRoot":"/source/"}