{"version":3,"sources":["poly.js","core.js","util.js","class.js","error.js","event.js","point.js","line.js","curve.js","bbox.js","path.js","matrix.js","vector.js","shape.js","tree.js","link.js","element.js","ellipse.js","circle.js","rect.js","polyline.js","polygon.js","group.js","text.js","image.js","paper.js","pallet.js","layout.js","router.js","directed.js","orthogonal.js","sweeplink.js","plugin.js","manager.js","definer.js","reactor.js","transformer.js","animator.js","resizer.js","collector.js","dragger.js","dropper.js","network.js","history.js","panzoom.js","linker.js","toolmanager.js","pencil.js","editor.js","snapper.js","toolpad.js","start.js","final.js","action.js","fork.js","join.js","lane.js","pool.js","label.js","exporter.js","parser.js","activity.js","Diagram.js","Activity.js","dialog.js"],"names":["ascending","a","b","NaN","bisector","compare","left","x","lo","hi","arguments","length","mid","right","_","float","parseFloat","gcd","array","t","i","r","len","lcm","format","params","toArray","shift","replace","match","number","insert","index","Array","prototype","splice","apply","concat","move","from","to","size","k","push","undefined","permute","permuter","isFunction","reduce","result","value","key","isArray","f","d","ascendingKey","isIE","na","global","navigator","ua","userAgent","toLowerCase","ie","indexOf","parseInt","substring","GLOBAL","window","Math","self","Function","DOCUMENT","document","NAVIGATOR","location","CACHE_SIZE","MEMO_SIZE","readyFn","Graph","ready","VERSION","AUTHOR","cached","config","base","locale","svg","version","xmlns","xlink","html","font","family","line","resizer","image","setup","name","isPlainObject","extend","string","ID_VECTOR","ID_SHAPE","ID_LINK","ID_PORT","styles","VECTOR","PAPER","VIEWPORT","SHAPE","SHAPE_BLOCK","SHAPE_LABEL","SHAPE_HEADER","SHAPE_CHILD","SHAPE_DRAG","LINK_HEAD","LINK_TAIL","icons","ZOOM_IN","ZOOM_OUT","ZOOM_RESET","SHAPE_LANE","SHAPE_LINK","SHAPE_ACTION","SHAPE_ROUTER","LANE_ABOVE","LANE_BELOW","CONFIG","LINK","TRASH","SEND_TO_BACK","SEND_TO_FRONT","MOVE_UP","MOVE_DOWN","doc","isHTML","obj","HTMLElement","isSVG","SVGElement","isElement","dom","Element","isMac","test","platform","ns","namespace","lookup","clazz","current","parts","split","parent","uuid","c","random","v","toString","hash","str","l","hval","charCodeAt","substr","create","superclass","props","factory","args","bind","expand","target","source","scope","tproto","constructor","sproto","defaultTo","forOwn","isUndefined","lang","Class","mixin","this","group","token","credit","join","remove","debounce","memoize","func","memo","param","cache","saved","ii","defer","$","Deferred","when","paper","width","height","options","Paper","type","capitalize","shape","names","chunk","lastIndexOf","layout","router","link","plugin","proto","diagram","util","pallet","topic","subscribers","publish","message","subs","lsnr","forEach","handler","call","subscribe","unsub","h","s","sub","unsubscribe","find","u","graphConfig","on","e","vector","data","registry","get","guid","evt","timer","removeEventListener","readyState","loaded","inspect","delay","clearTimeout","addEventListener","REGEX_PATH_STR","REGEX_PATH_VAL","REGEX_PATH_CMD","REGEX_POLY_STR","REGEX_TRAN_STR","REGEX_TRAN_SUB","CONVEX_RADIUS","SMOOTH_RADIUS","LEGENDRE_N","LEGENDRE_T","LEGENDRE_C","deg","rad","round","PI","angle","dx","dy","y","atan2","theta","toFixed","taxicab","hypo","va","vb","sqrt","sign","num","quadrant","gradient","Infinity","snapValue","snaps","range","abs","rem","pointbox","padding","x1","y1","x2","y2","pointAlign","treshold","pointDistance","isPointEquals","isPointOnLine","p","det","dis","polar2point","distance","radian","origin","point","cos","sin","isBoxContainsPoint","box","isBoxIntersect","fn","boxOrientation","box1","box2","top","rgt","btm","lft","ver","hor","expandBox","groupBox","boxes","min","max","midpoint","movepoint","tr","lineBendpoints","dir","xm","ym","points","lineIntersection","x3","y3","x4","y4","nx","ny","denominator","px","py","px2","py2","perpendicular","m1","m2","tt","hp","atan","mx","my","iy","points2path","segments","map","cmd","segments2path","path2points","command","path2segments","sizes","m","q","z","cloneDeep","val","polygon2dots","$0","polygon2path","dots","transform2segments","valid","matrix","translate","rotate","scale","skewX","skewY","transform","matches","curvebox","x0","y0","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","j","jlen","curveLength","sum","ct","xb","curvePolynom","yb","co","n1","n2","n3","n4","curveInterval","step","pointAtInterval","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","t13","pow","t12","t3","ax","ay","cx","cy","alpha","n","start","end","curveIntersection","count","bon1","bon2","nres","ares","l1","l2","dots1","dots2","xy","di","di1","dj","dj1","ci","cj","is","convexSegment","prev","next","radius","d1","d2","cp","c1","c2","dr","smoothSegment","context","eventType","once","priority","eventNames","eventRoot","listeners","original","unbind","eventRegex","cachedRegex","rgex","RegExp","escapeRegExp","_super","_proto","_constructor","_definition","_class","_classopt","Object","__initialized__","_superopt","_superclass","merge","one","off","batch","fire","eventObject","onces","isString","Event","originalData","originalType","publisher","slice","Err","Error","err","stack","error","isError","Evt","cancelBubble","defaultPrevented","propagationStopped","immediatePropagationStopped","init","assign","stopPropagation","stopImmediatePropagation","preventDefault","event","isEvent","ESC","ENTER","DELETE","SHIFT","fix","originalEvent","position","clientX","clientY","relative","clone","invert","isPrimaryButton","button","hasPrimaryModifier","metaKey","ctrlKey","hasSecondaryModifier","shiftKey","jQuery","snap","Point","tmp","trim","toNumber","manhattan","toJson","triangle","difference","alignment","bbox","bearing","Line","bear","dec","equals","rd","si","rx","ry","polar","adhereToBox","contains","stringify","sep","toValue","isPoint","lat1","lat2","lon1","lon2","deltaLon","intersect","intersection","isLine","Curve","unshift","pointAt","json","curve","intersectnum","isCurve","BBox","prop","Path","simple","center","corner","dot","contain","isVector","vertices","isBBox","dw","dh","tbox","me","bdat","tdat","sideNearestPoint","tx","ty","tw","th","distToLeft","distToRight","distToTop","distToBottom","closest","side","pointNearestPoint","fixsegment","segment","attr","tq","T","Q","qx","qy","X","Y","arc2curve","bx","by","quad2curve","line2curve","cat2bezier","def","_13","_23","large_arc_flag","sweep_flag","recursive","_120","res","f1","f2","rx2","ry2","asin","df","f2old","x2old","y2old","s1","s2","tan","hx","hy","m3","m4","path1","path2","x1m","y1m","x2m","y2m","bz1","bz2","cv1","cv2","sj","inter","ss1","ln1","ss2","ln2","kk","segment1","segment2","bezier1","bezier2","isPath","absolute","seg","itm","toUpperCase","toUpper","jj","pop","ll","head","tail","toLower","fixarc","pi","com","curve2curve","fixarc2","com1","com2","p1","p2","fixmove2","segments1","segments2","a1","a2","attrs2","pcom","fixArc2","xmin","ymin","xmax","ymax","lengthAt","ps","segmentAt","total","sp","path","vs","addVertext","vertext","isSimple","vx","vy","nearest","best","bestlen","currpoint","currdist","tolerance","bestdist","prevlen","nextlen","prevdist","nextdist","moveTo","lineTo","append","maxs","Matrix","chr","multiply","isMatrix","delta","sx","sy","determinant","radSkewX","cosSkewX","sinSkewX","scaleX","scaleY","toFilter","Collection","collection","items","item","first","last","clear","modify","each","iteratee","Vector","vectors","has","id","not","filter","o","offset","pull","reverse","methods","method","Shape","shapes","keys","identity","component","Tree","nodes","node","bisect","keygen","order","sort","root","cascade","bubble","Link","links","domParser","REGEX_SVG_BUILDER","selector","query","fragment","element","DOMParser","parseFromString","documentElement","childNodes","deep","cloneNode","E","pseudo","belong","setAttributeNS","setAttribute","outerHeight","margin","show","hide","getBoundingClientRect","css","addClass","classes","values","chain","className","baseVal","uniq","removeClass","hasClass","prepend","appendTo","prependTo","before","after","detach","types","trigger","text","focus","select","createRange","getSelection","selectNodeContents","selection","removeAllRanges","addRange","contextmenu","state","empty","scrollTop","scrollLeft","child","children","curr","parentNode","nodeName","tree","container","traversable","selectable","focusable","snappable","selected","rendered","attrs","style","class","plugins","transformer","collector","definer","animator","reactor","dragger","dropper","network","history","panzoom","toolmgr","toolpad","snapper","editor","graph","bboxView","bboxPristine","matrixCurrent","matrixView","shapeView","elem","createElementNS","Transformer","onTransformTranslate","onTransformRotate","onTransformScale","isPaper","ToolManager","onActivateTool","onDeactivateTool","register","viewport","viewportGuid","native","getCTM","refresh","reset","removeAttr","dirty","invalidate","interactable","Reactor","animable","Animator","animstart","animating","animend","resizable","Resizer","beforeresize","onResizerBeforeResize","afterresize","onResizerAfterResize","draggable","Dragger","beforedrag","onDraggerStart","drag","onDraggerMove","afterdrag","onDraggerEnd","zoomable","Panzoom","droppable","Dropper","dropenter","onDropperEnter","dropleave","onDropperLeave","connectable","Network","clickable","editable","Editor","beforeedit","edit","isBoolean","enabled","getDefaultInstance","removeAttribute","cursor","predicate","added","removed","removal","pullAll","shapeRelative","parentMatrix","ma","pa","dt","dimension","getBBox","clientLeft","clientTop","clientWidth","clientHeight","bottom","nbox","pbox","elems","render","sibling","isViewport","setContext","attach","isContainer","isRendered","isTraversable","relocate","resetMatrix","targetMatrix","applyMatrix","ancestors","descendants","deselect","destroy","unregister","initial","add","isResizable","resume","suspend","_collector","animate","duration","easing","callback","label","sendToFront","sendToBack","resize","isGroup","isSelectable","isDraggable","isConnectable","isSnappable","isSelected","tool","master","syncBeforeDrag","syncDrag","syncAfterDrag","Ellipse","gx","gy","commit","bb","magnify","Circle","ar","Rect","origpath","w","ms","mr","ro","ox","oy","Polyline","Polygon","Group","stroke","stroke-width","fill","Text","text-anchor","lineHeight","fontSize","rows","font-size","write","onTextRender","addSpan","span","arrange","wrap","word","words","lines","lineNo","getComputedTextLength","textBox","targetBox","Image","preserveAspectRatio","src","xlink:href","align","aspect","showOrigin","components","manager","xmlns:link","overflow","initLayout","Collector","linker","Linker","pencil","Pencil","Definer","Snapper","Toolpad","Manager","listenLinkChange","listenLinkAfterDestroy","defaultInstance","vp","flush","activate","locateLink","locateShape","arrangeLinks","ellipse","circle","rect","polyline","polygon","arg","storage","Registry","tagName","collect","wipe","pid","hasOwnProperty","Layout","fit","view","smooth","smoothness","grabVector","grabLink","pointerLocation","pointer","screenLocation","coord","screen","getScreenCTM","dragSnapping","mode","routerType","createRouter","createLink","convex","idx","sweeper","Sweeplink","findConvex","reloadConvex","removeConvex","arrangeShapes","Router","domain","waypoints","bendpoints","bending","connect","execute","route","repair","port","initTrans","updateTrans","trans","connecting","stopTrans","portCentering","axis","porting","routes","cable","sortIntersection","isRepairable","getSegmentIndex","sortBy","floor","getClosestIntersect","repairBendpoint","bend","oldport","newport","repairRoutes","bound1","bound2","clonedRoutes","tidyRoutes","Directed","space","sourceNetwork","sourceBBox","sourceBox","targetNetwork","targetBBox","orient","orientation","direct","direction","tuneup","sdot","edot","maxlen","sourcePath","targetPath","rangeStart","rangeEnd","segmentStart","segmentEnd","oldSource","oldTarget","align1","align2","cropBinding","srcport","tarport","cropped","cropConnect","changed","Orthogonal","croping","bends","repaired","ranges","snapH","snapV","sourceBound","targetBound","segmentAlign","q1","q2","newStart","newEnd","sourceOrient","targetOrient","dotlen","newRangeStart","cropBending","getHandler","resource","labelDistance","connected","block","coat","controls","handlers","metadata","icon","initComponent","initMetadata","bindResource","onRouterRoute","onRouterReroute","excludes","client_id","client_source","client_target","router_type","diagram_id","source_id","target_id","maps","label_distance","comp","ghost","manual","batchSync","onCoatClick","onCoatSelect","onCoatDeselect","onCoatBeforeDrag","onCoatAfterDrag","onCoatEdit","onCoatBeforeEdit","onCoatAfterDestroy","onLabelRender","onLabelAfterDrag","labelVendor","vendor","onLabelDoubletap","tools","title","onConfigToolClick","onFrontToolClick","onBackToolClick","onTrashToolClick","unbindResource","existing","beforedestroy","bindSource","bindTarget","unbindSource","unbindTarget","connectByCommand","disconnect","reload","redraw","silent","bound","componentLabel","componentCoat","single","clearCollection","renderControl","resumeControl","suspendControl","relocateHead","relocateTail","isConnected","sourceShape","targetShape","sourceType","targetType","near","startEdit","showControl","onSourceRotate","onSourceSelect","onSourceBeforeDrag","onSourceDrag","console","warn","onSourceAfterDrag","onSourceAfterResize","onSourceBeforeDestroy","onTargetRotate","onTargetSelect","onTargetBeforeDrag","onTargetDrag","onTargetAfterDrag","onTargetAfterResize","onTargetBeforeDestroy","linkid","controlImage","controlSize","control","onControlStart","onControlMove","onControlEnd","snaphor","snapver","conseg","ss","createTree","findIndex","swap","KEY_TRESHOLD","SLOPE_TRESHOLD","queue","found","process","extract","indexA","indexB","minIndex","intercept","validate","lineA","lineB","alignA","alignB","ix","isOverlap","isIntersection","Plugin","activator","enable","disable","installed","install","getPluginHandler","uninstall","definitions","holder","defineArrowMarker","defineCircleMarker","marker","vendors","navigationKeys","CTRL","interact","currentTarget","isNavigation","keyCode","dropzone","gesturable","unset","actions","simulate","events","mat","act","inv","equalizeTransform","tt1","tt2","maxlength","emptyTransform","equal","stacks","keyframes","Animation","scenes","animation","100","frame","pause","stop","status","asize","scene","time","playing","applied","ssize","at","initstatus","Date","inverse","able","defaults","eq","semantic","timestamp","player","play","prog","anim","tick","paused","ease","played","repeat","g","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","frames","pickBy","times","linier","easeIn","easeOut","easeInOut","backIn","backOut","elastic","math","bounce","getRestrictOrigin","handle","suspended","restriction","handleImage","handleSize","helper","ow","oh","cw","ch","snapping","onHolderRender","ne","se","sw","nw","onHandleBeforeDrag","onHandleDrag","onHandleAfterDrag","hs","hw","hh","rmatrix","restrict","setupRestriction","MAX_VALUE","Number","MAX_SAFE_INTEGER","oldcen","newcen","vdx","vdy","rubber","collecting","onKeynavDown","onKeynavUp","styleCursor","manualStart","onstart","onmove","onend","interaction","pointerIsDown","interacting","action","prepared","setEventXY","startCoords","pointers","decollect","syncdrag","tdx","tdy","inertia","grid","dragClass","rotation","scaling","dragging","onVectorRender","onDragStart","onDragMove","onDragEnd","onPointerDown","vbox","hbox","fixsnap","createSnapGrid","setOptions","targets","endOnly","resetSnap","moveHandler","onPointerMove","edata","axs","edx","edy","pageX","pageY","ex","ey","overlap","accept","checker","onDropValidate","ondropactivate","onDropActivate","ondropdeactivate","onDropDeactivate","ondragenter","onDragEnter","ondragleave","onDragLeave","ondrop","onDrop","edrop","edrag","dropped","dropel","dragel","CLS_CONNECT_VALID","CLS_CONNECT_INVALID","CLS_CONNECT_RESET","CLS_CONNECT_CLEAR","CLS_CONNECT_HOVER","CONNECT_OUTGOING","CONNECT_INCOMING","wiring","tuning","limitIncoming","limitOutgoing","linking","pole","cables","pairs","invalidateTrans","relatedTarget","canConnect","removeLink","isSource","isTarget","sourceVector","targetVector","paperLayout","beforeDestroyHandler","onLinkBeforeDestroy","addLink","connectByLinker","connections","connectionsLength","disconnected","linkIds","conn","pair","repairLinks","log","hasConnection","conns","opts","outgoing","incoming","History","limit","save","lim","drop","go","back","zoomRange","panEnabled","zoomEnabled","showToolbox","caching","scrolling","steps","zooming","zoom","toolbox","panning","stopHandler","onMouseWheel","revalidate","zoomReset","zoomIn","zoomOut","currentZoom","zoomType","factor","currentScale","matrixScale","onBeforeZoom","onZoom","scroll","onBeforeScroll","onScroll","vscroll","hscroll","deltaMode","deltaX","deltaY","altKey","onPointerStop","leading","trailing","visits","anchor","build","sbox","cropping","spath","scrop","tpath","tcrop","crop","utils","deactivateAll","deactivate","except","toggle","writing","startHandler","drawShape","MIN_BOX_WIDTH","MIN_BOX_HEIGHT","editing","commitHandler","onDoubleTap","coords","snapped","clients","stubx","stuby","client","clientId","beforeDragHandler","afterDragHandler","afterDestroyHandler","osnaps","onClientBeforeDrag","onClientAfterDrag","onClientAfterDestroy","getClientCenter","repairClient","showStub","hideStub","stub","diffx","diffy","snapx","snapy","pt","pad","onShapeSelect","onShapeDeselect","onLinkSelect","onLinkDeselect","onShapeToolClick","onLinkToolClick","meta","body","alias","strokeWidth","client_parent","client_pool","parent_id","stroke_width","update","suspendLayout","resumeLayout","hasChild","addChild","placeTarget","onChildBeforeDestroy","removeChild","shapeComponent","onChildAfterDrag","connectHandler","onChildConnect","autoResize","paperGuid","blockComponent","childComponent","labelComponent","linkData","onLabelEdit","onBeforeDrag","capture","onAfterDrag","shapeMatrix","blockMatrix","onSelect","onDeselect","onConnect","onAfterResize","onBeforeDestroy","onAfterDestroy","isShape","activity","Start","pmgr","Final","inner","Action","Fork","Join","Lane","header","pool","transfer","resizing","initDropzone","onAboveToolClick","onBelowToolClick","onUpToolClick","onDownToolClick","onBeforeResize","Pool","onTransferEnd","poolGuid","laneGuid","appended","lanes","addSiblingBellow","bringToFront","childBox","lane","offsetWidth","offsetLeft","offsetTop","createSpaceBellow","boxAfter","boxBefore","netcom","relocateLinks","createSiblingAbove","createSpaceAbove","createSiblingBellow","actualBBox","populateChildren","childOffsets","resizeBy","sourceParent","targetParent","sourcePool","targetPool","populateLinks","isolated","separated","relocateSiblings","refreshContents","refreshChildren","laneChildComponent","laneChildBox","moveUp","moveDown","contents","laneIndex","comnet","dx1","dx2","dy1","dy2","sets","laneNode","prevNode","laneBox","prevBox","nextNode","nextBox","populateContents","connectableBlock","contentKeys","pairVector","pairShape","common","Label","labelBox","encoded","encodeURIComponent","String","fromCharCode","decodeURIComponent","download","uri","msSaveOrOpenBlob","blob","createBlob","href","display","appendChild","click","open","byteString","atob","mimeString","buffer","ArrayBuffer","intArray","Uint8Array","Blob","exportImage","createDataURI","onload","canvas","createElement","getContext","background","fillStyle","fillRect","drawImage","toDataURL","encoder","compression","onerror","createData","sty","xml","cloned","getElementStyles","innerHTML","insertBefore","XMLDOC","btoa","rules","rule","styleSheets","cssRules","selectorText","querySelector","cssText","Exporter","exportDataURI","exportSVG","filename","createEvent","initEvent","dispatchEvent","createEventObject","fireEvent","exportJPEG","exportPNG","exportBlob","defaultType","pallets","snapshoot","deselectAll","removeSelection","undo","redo","addPallet","drawing","pick","movable","stopPicking","saveAs","exporter","saveAsBlob","traverse","Parser","_props","_shapes","_links","_tree","parse","Pallet","Activity","picking","template","dragStart","dragStop","dragMove","Diagram","parser","getShapeBy","getLinkBy","getShapes","getLinks","indexes","findShapeBy","description","rendering","active","dropHandler","hasLane","counter","resolve","promise","then","popup","Dialog","opened","backdrop","backdrop_click","buttons","onclick","close","backdropUser","margin-top","margin-left","dialog"],"mappings":"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","file":"graph.min.js","sourcesContent":["\r\n(function(){\r\n\r\n    /**\r\n     * Lodash polyfill\r\n     */\r\n\r\n    _.float = parseFloat;\r\n\r\n    _.gcd = function(array) {\r\n        if (array.length === 2) {\r\n            var a = array[0], b = array[1], t;\r\n\r\n            while (b > 0) {\r\n                t = b;\r\n                b = a % b;\r\n                a = t;\r\n            }\r\n\r\n            return a;\r\n        } else {\r\n            var r = array[0], len = array.length, i;\r\n            for (i = 1; i < len; i++) {\r\n                r = _.gcd([r, array[i]]);\r\n            }\r\n            return r;\r\n        }\r\n    };\r\n\r\n    _.lcm = function(array) {\r\n        if (array.length === 2) {\r\n            var a = array[0], b = array[1];\r\n            return a * (b / _.gcd([a, b]));\r\n        } else {\r\n            var r = array[0], len = array.length, i;\r\n            for (i = 1; i < len; i++) {\r\n                r = _.lcm([r, array[i]]);\r\n            }\r\n            return r;\r\n        }\r\n    };\r\n\r\n    _.format = function() {\r\n        var params = _.toArray(arguments),\r\n            format = params.shift();\r\n        return format.replace(/{(\\d+)}/g, function(match, number) {\r\n            return typeof params[number] != 'undefined'\r\n                ? params[number]\r\n                : match;\r\n        });\r\n    }\r\n\r\n    _.insert = function(array, index, insert) {\r\n        Array.prototype.splice.apply(array, [index, 0].concat(insert));\r\n        return array;\r\n    };\r\n\r\n    /**\r\n     * Array move (swap)\r\n     * http://stackoverflow.com/questions/5306680/move-an-array-element-from-one-array-position-to-another/5306832#5306832\r\n     */\r\n    _.move = function(array, from, to) {\r\n        var size = array.length;\r\n        \r\n        while(from < 0) {\r\n            from += size;\r\n        }\r\n        \r\n        while(to < 0) {\r\n            to += size;\r\n        }\r\n\r\n        if (to >= size) {\r\n            var k = to - size;\r\n            while((k--) + 1) {\r\n                array.push(undefined);\r\n            }\r\n        }\r\n\r\n        array.splice(to, 0, array.splice(from, 1)[0]);\r\n        return array;\r\n    };\r\n\r\n    /**\r\n     * Array permutation\r\n     * https://github.com/lodash/lodash/issues/1701\r\n     */\r\n    _.permute = function(array, permuter) {\r\n        if(_.isFunction(permuter)) {\r\n            return _.reduce(array, function(result, value, key){\r\n                result[permuter(key, value)] = value;\r\n                return result;\r\n            }, []);\r\n        } else if (_.isArray(permuter)) {\r\n            return _.reduce(permuter, function(result, value, key){\r\n                result[key] = array[permuter[key]];\r\n                return result;\r\n            }, []);\r\n        }\r\n        return array;\r\n    };  \r\n    \r\n    /**\r\n     *  Bisector\r\n     *  https://github.com/d3/d3-array/blob/master/src/bisector.js\r\n     */\r\n    function ascending(a, b) {\r\n        return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\r\n    }\r\n\r\n    function descending(a, b) {\r\n        return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\r\n    }\r\n\r\n    function bisector(compare) {\r\n        return {\r\n            left: function(a, x, lo, hi) {\r\n                if (arguments.length < 3) lo = 0;\r\n                if (arguments.length < 4) hi = a.length;\r\n                while (lo < hi) {\r\n                    var mid = lo + hi >>> 1;\r\n                    if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\r\n                }\r\n                return lo;\r\n            },\r\n            right: function(a, x, lo, hi) {\r\n                if (arguments.length < 3) lo = 0;\r\n                if (arguments.length < 4) hi = a.length;\r\n                while (lo < hi) {\r\n                    var mid = lo + hi >>> 1;\r\n                    if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\r\n                }\r\n                return lo;\r\n            }\r\n        };\r\n    }\r\n\r\n    _.bisector = function(f) {\r\n        return bisector(f.length === 1 ? function(d, x){\r\n            return ascending(f(d), x);\r\n        } : f);\r\n    };\r\n    \r\n    /** \r\n     *  Sorter\r\n     *  https://github.com/gka/d3-jetpack/blob/master/d3-jetpack.js\r\n     */\r\n    _.ascendingKey = function(key) {\r\n        return typeof key == 'function' ? function (a, b) {\r\n            return key(a) < key(b) ? -1 : key(a) > key(b) ? 1 : key(a) >= key(b) ? 0 : NaN;\r\n        } : function (a, b) {\r\n            return a[key] < b[key] ? -1 : a[key] > b[key] ? 1 : a[key] >= b[key] ? 0 : NaN;\r\n        };\r\n    };\r\n\r\n    _.isIE = function() {\r\n        var na = global.navigator,\r\n            ua = (na && na.userAgent || '').toLowerCase(),\r\n            ie = ua.indexOf('MSIE ');\r\n\r\n        if (ie > 0 || !!ua.match(/Trident.*rv\\:11\\./)) {\r\n            return parseInt(ua.substring(ie + 5, ua.indexOf('.', ie)));\r\n        }\r\n        return false;\r\n    };\r\n\r\n}());","\r\n//////////////////////////////////////////////////////////////////\r\n/*\r\n * Graph - SVG Library\r\n * Documentation visit: https://github.com/londomloto/graph\r\n *\r\n * @author londomloto <roso.sasongko@gmail.com>\r\n * @author londomloto <roso@kct.co.id>\r\n */\r\n//////////////////////////////////////////////////////////////////\r\n\r\n(function(){\r\n\r\n    var GLOBAL = typeof window != 'undefined' && \r\n                 window.Math == Math \r\n                    ? window \r\n                    : (typeof self != 'undefined' && self.Math == Math \r\n                        ? self \r\n                        : Function('return this')());\r\n\r\n    var DOCUMENT  = document;\r\n    var LOCATION  = location;\r\n    var NAVIGATOR = navigator;\r\n\r\n    /**\r\n     * Size for cached result\r\n     */\r\n    var CACHE_SIZE = 100;\r\n\r\n    /**\r\n     * Size for memoize function\r\n     */\r\n    var MEMO_SIZE = 1000;\r\n\r\n    //--------------------------------------------------------------------//\r\n    \r\n    var readyFn = [];\r\n\r\n    /**\r\n     * Banner\r\n     */\r\n    GLOBAL.Graph = function(ready) {\r\n        readyFn.push(ready);\r\n    };\r\n\r\n    Graph.VERSION = '1.0.0';\r\n    \r\n    Graph.AUTHOR = 'Kreasindo Cipta Teknologi';\r\n    \r\n    /**\r\n     * Config\r\n     */\r\n    Graph.cached = {};\r\n\r\n    Graph.config = {\r\n        base: '../',\r\n        locale: 'id',\r\n        svg: {\r\n            version: '1.1'\r\n        },\r\n        xmlns: {\r\n            svg: 'http://www.w3.org/2000/svg',\r\n            xlink: 'http://www.w3.org/1999/xlink',\r\n            html: 'http://www.w3.org/1999/xhtml'\r\n        },\r\n        font: {\r\n            family: 'Segoe UI',\r\n            size: '12px',\r\n            line: 1\r\n        },\r\n        resizer: {\r\n            image: 'resize-control.png',\r\n            size: 17\r\n        }\r\n    };\r\n\r\n    Graph.setup = function(name, value) {\r\n        if (_.isPlainObject(name)) {\r\n            _.extend(Graph.config, name);\r\n        } else {\r\n            Graph.config[name] = value;\r\n        }\r\n    };\r\n\r\n    // Graph.toString = function() {\r\n    //     return 'SVG Library presented by ' + Graph.AUTHOR;\r\n    // }\r\n    \r\n\r\n    /**\r\n     * String params\r\n     */\r\n    Graph.string = {\r\n        ID_VECTOR: 'graph-vector-id',\r\n        ID_SHAPE: 'graph-shape-id',\r\n        ID_LINK: 'graph-link-id',\r\n        ID_PORT: 'graph-port-id'\r\n    };\r\n\r\n    /**\r\n     * Style params\r\n     */\r\n    Graph.styles = {\r\n        VECTOR: 'graph-elem',\r\n        PAPER: 'graph-paper',\r\n        VIEWPORT: 'graph-viewport',\r\n\r\n        SHAPE: 'graph-shape',\r\n        SHAPE_BLOCK: 'comp-block',\r\n        SHAPE_LABEL: 'comp-label',\r\n        SHAPE_HEADER: 'comp-header',\r\n        SHAPE_CHILD: 'comp-child',\r\n        SHAPE_DRAG: 'shape-draggable',\r\n\r\n        LINK_HEAD: 'graph-link-head',\r\n        LINK_TAIL: 'graph-link-tail'\r\n    };\r\n\r\n    /**\r\n     * Icon params\r\n     */\r\n    Graph.icons = {\r\n        ZOOM_IN: 'ion-android-add',\r\n        ZOOM_OUT: 'ion-android-remove',\r\n        ZOOM_RESET: 'ion-pinpoint',\r\n\r\n        SHAPE: 'bpmn-icon-start-event-none',\r\n        SHAPE_LANE: 'bpmn-icon-participant',\r\n        SHAPE_LINK: 'ion-ios-shuffle-strong',\r\n        SHAPE_ACTION: 'bpmn-icon-task',\r\n        SHAPE_ROUTER: 'bpmn-icon-gateway-none',\r\n\r\n        LANE_ABOVE: 'bpmn-icon-lane-insert-above',\r\n        LANE_BELOW: 'bpmn-icon-lane-insert-below',\r\n\r\n        CONFIG: 'bpmn-icon-screw-wrench',\r\n        LINK: 'bpmn-icon-connection-multi',\r\n        TRASH: 'bpmn-icon-trash',\r\n\r\n        SEND_TO_BACK: 'font-icon-send-back',\r\n        SEND_TO_FRONT: 'font-icon-bring-front',\r\n\r\n        MOVE_UP: 'ion-android-arrow-up',\r\n        MOVE_DOWN: 'ion-android-arrow-down'\r\n    };\r\n\r\n    Graph.doc = function() {\r\n        \r\n    };\r\n\r\n    Graph.global = function() {\r\n        \r\n    };  \r\n\r\n    /**\r\n     * Language & Core helper\r\n     */\r\n    \r\n    Graph.isHTML = function(obj) {\r\n        return obj instanceof HTMLElement;\r\n    };\r\n\r\n    Graph.isSVG = function(obj) {\r\n        return obj instanceof SVGElement;\r\n    };\r\n\r\n    Graph.isElement = function(obj) {\r\n        return obj instanceof Graph.dom.Element;\r\n    };\r\n\r\n    Graph.isMac = function() {\r\n        return (/mac/i).test(NAVIGATOR.platform);    \r\n    };\r\n\r\n    Graph.ns = function(namespace) {\r\n        var cached = Graph.lookup('Graph', 'ns', namespace);\r\n\r\n        if (cached.clazz) {\r\n            return cached.clazz;\r\n        }\r\n\r\n        var parts = _.split(namespace, '.'),\r\n            parent = GLOBAL,\r\n            len = parts.length,\r\n            current,\r\n            i;\r\n\r\n        for (i = 0; i < len; i++) {\r\n            current = parts[i];\r\n            parent[current] = parent[current] || {};\r\n            parent = parent[current];\r\n        }\r\n\r\n        if (_.isFunction(parent)) {\r\n            cached.clazz = parent;\r\n        }\r\n\r\n        return parent;\r\n    };\r\n\r\n    Graph.uuid = function() {\r\n        // credit: http://stackoverflow.com/posts/2117523/revisions\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n            var r = Math.random() * 16|0;\r\n            var v = c == 'x' ? r : (r&0x3|0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Simple hashing\r\n     * http://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript-jquery\r\n     */\r\n    Graph.hash = function(str) {\r\n        var hval = 0x811c9dc5, i, l;\r\n        \r\n        for (i = 0, l = str.length; i < l; i++) {\r\n            hval ^= str.charCodeAt(i);\r\n            hval += (hval << 1) + (hval << 4) + (hval << 7) + (hval << 8) + (hval << 24);\r\n        }\r\n\r\n        return ('0000000' + (hval >>> 0).toString(16)).substr(-8);\r\n\r\n        // var hash = 0, chr, len, i;\r\n        \r\n        // if ( ! str.length) {\r\n        //     return hash;\r\n        // }\r\n\r\n        // for (i = 0, len = str.length; i < len; i++) {\r\n        //     chr   = str.charCodeAt(i);\r\n        //     hash  = ((hash << 5) - hash) + chr;\r\n        //     hash |= 0;\r\n        // }\r\n\r\n        // return hash;\r\n    };\r\n\r\n    // prepare for prototypal factory\r\n    Graph.create = function(superclass, props) {\r\n        \r\n    };\r\n\r\n    Graph.factory = function(clazz, args) {\r\n        args = [clazz].concat(args);\r\n        return new (Function.prototype.bind.apply(clazz, args));\r\n    };\r\n\r\n    Graph.expand = function(target, source, scope) {\r\n        var tproto = target.constructor.prototype,\r\n            sproto = source.constructor.prototype;\r\n\r\n        scope = _.defaultTo(source);\r\n\r\n        _.forOwn(sproto, function(value, key){\r\n            if (_.isFunction(value) && _.isUndefined(tproto[key])) {\r\n                (function(key, value){\r\n                    tproto[key] = _.bind(value, scope);\r\n                }(key, value));    \r\n            }\r\n        });\r\n    };\r\n\r\n    Graph.extend = function(clazz, props) {\r\n        if (_.isPlainObject(clazz)) {\r\n            props = clazz;\r\n            clazz = Graph.lang.Class;\r\n        }\r\n        return clazz.extend(props);\r\n    };\r\n\r\n    Graph.mixin = function(target, source) {\r\n        this.extend(target, source, target);\r\n    };\r\n\r\n    Graph.lookup = function(group, token) {\r\n        var args = _.toArray(arguments), cached, credit;\r\n\r\n        group  = args.shift();\r\n        token  = _.join(args, '|');\r\n        cached = Graph.cached[group] = Graph.cached[group] || {};\r\n        credit = group == 'Regex.event' ? null : CACHE_SIZE;\r\n\r\n        if (cached[token]) {\r\n            cached[token].credit = credit;\r\n        } else {\r\n            cached[token] = {\r\n                credit: credit,\r\n                remove: (function(group, token){\r\n                    return function() {\r\n                        delete Graph.cached[group][token];    \r\n                    };\r\n                }(group, token))\r\n            }\r\n        }\r\n\r\n        _.debounce(function(t){\r\n            _.forOwn(cached, function(v, k){\r\n                if (k != t) {\r\n                    if (cached[k].credit !== null) {\r\n                        cached[k].credit--;\r\n                        if (cached[k].credit <= 0) {\r\n                            delete cached[k];\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        })(token);\r\n\r\n        return cached[token];\r\n    };\r\n\r\n    Graph.memoize = function(func) {\r\n        return function memo() {\r\n            var param = _.toArray(arguments),\r\n                token = _.join(param, \"\\u2400\"),\r\n                cache = memo.cache = memo.cache || {},\r\n                saved = memo.saved = memo.saved || [];\r\n\r\n            if ( ! _.isUndefined(cache[token])) {\r\n                for (var i = 0, ii = saved.length; i < ii; i++) {\r\n                    if (saved[i] == token) {\r\n                        saved.push(saved.splice(i, 1)[0]);\r\n                        break;\r\n                    }\r\n                }\r\n                return cache[token];\r\n            }\r\n\r\n            if (saved.length >= MEMO_SIZE) {\r\n                delete cache[saved.shift()];\r\n            }\r\n\r\n            saved.push(token);\r\n            cache[token] = func.apply(this, param);\r\n\r\n            return cache[token];\r\n        }\r\n    };\r\n\r\n    Graph.defer = function() {\r\n        return $.Deferred();\r\n    };\r\n\r\n    Graph.when = $.when;\r\n\r\n    /**\r\n     * Vector\r\n     */\r\n    Graph.paper = function(width, height, options) {\r\n        return Graph.factory(Graph.svg.Paper, [width, height, options]);\r\n    };\r\n\r\n    Graph.svg = function(type) {\r\n        var args = _.toArray(arguments), svg;\r\n\r\n        type = args.shift();\r\n        svg = Graph.factory(Graph.svg[_.capitalize(type)], args);\r\n        args = null;\r\n        \r\n        return svg;\r\n    };\r\n\r\n    Graph.shape = function(names, options) {\r\n        var clazz, shape, chunk;\r\n\r\n        chunk = names.lastIndexOf('.');\r\n        names = names.substr(0, chunk) + '.' + _.capitalize(names.substr(chunk + 1));\r\n        clazz = Graph.ns('Graph.shape.' + names);\r\n        shape = Graph.factory(clazz, options);\r\n\r\n        chunk = names = clazz = null;\r\n        return shape;\r\n    };\r\n\r\n    /**\r\n     * Layout\r\n     */\r\n    Graph.layout = function(type) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Router\r\n     */\r\n    Graph.router = function(type) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Link / Connector\r\n     */\r\n    Graph.link = function(type) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Plugin\r\n     */\r\n    Graph.plugin = function(proto) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Diagram\r\n     */\r\n    Graph.diagram = function(name, options) {\r\n        var clazz, diagram;\r\n        clazz = Graph.diagram.type[_.capitalize(name)];\r\n        return Graph.factory(clazz, [options]);\r\n    };\r\n\r\n    Graph.diagram.type = {};\r\n    Graph.diagram.util = {};\r\n    Graph.diagram.pallet = {};\r\n\r\n    /**\r\n     * Pallet\r\n     */\r\n    Graph.pallet = function(type, options) {\r\n        var clazz;\r\n        clazz = Graph.diagram.pallet[_.capitalize(type)];\r\n        return Graph.factory(clazz, [options]);\r\n    };\r\n    \r\n    /**\r\n     * Topic\r\n     */\r\n    Graph.topic = {\r\n        subscribers: {\r\n\r\n        },\r\n        publish: function(topic, message, scope) {\r\n            var subs = Graph.topic.subscribers,\r\n                lsnr = subs[topic] || [];\r\n\r\n            _.forEach(lsnr, function(handler){\r\n                if (handler) {\r\n                    handler.call(null, message, scope);  \r\n                }\r\n            });\r\n        },\r\n\r\n        subscribe: function(topic, handler) {\r\n\r\n            if (_.isPlainObject(topic)) {\r\n                var unsub = [];\r\n\r\n                _.forOwn(topic, function(h, t){\r\n                    (function(t, h){\r\n                        var s = Graph.topic.subscribe(t, h);\r\n                        unsub.push({topic: t, sub: s});\r\n                    }(t, h));\r\n                });\r\n\r\n                return {\r\n                    unsubscribe: (function(unsub){\r\n                        return function(topic) {\r\n                            if (topic) {\r\n                                var f = _.find(unsub, function(u){\r\n                                    return u.topic == topic;\r\n                                });\r\n                                f && f.sub.unsubscribe();\r\n                            } else {\r\n                                _.forEach(unsub, function(u){\r\n                                    u.sub.unsubscribe();\r\n                                });\r\n                            }\r\n                        };\r\n                    }(unsub))\r\n                };\r\n            }\r\n\r\n            var subs = Graph.topic.subscribers, data;\r\n\r\n            subs[topic] = subs[topic] || [];\r\n            subs[topic].push(handler);\r\n\r\n            return {\r\n                unsubscribe: (function(topic, handler){\r\n                    return function() {\r\n                        Graph.topic.unsubscribe(topic, handler);\r\n                    };\r\n                }(topic, handler))\r\n            };\r\n        },\r\n\r\n        unsubscribe: function(topic, handler) {\r\n            var subs = Graph.topic.subscribers, \r\n                lsnr = subs[topic] || [];\r\n\r\n            for (var i = lsnr.length - 1; i >= 0; i--) {\r\n                if (lsnr[i] === handler) {\r\n                    lsnr.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    Graph.message = function(message, type) {\r\n        type = _.defaultTo(type, 'info');\r\n        \r\n        Graph.topic.publish('graph:message', {\r\n            type: type,\r\n            message: message\r\n        });\r\n    };\r\n\r\n    ///////////////////////////// LOAD CONFIG /////////////////////////////\r\n    \r\n    if (GLOBAL.graphConfig) {\r\n        Graph.setup(GLOBAL.graphConfig);\r\n    }\r\n\r\n    ///////////////////////////// I18N /////////////////////////////\r\n    \r\n    Graph._ = function(message) {\r\n        return message;\r\n    };\r\n\r\n    /////////////////////////// CORE NAMESPACES ////////////////////////////\r\n    \r\n    Graph.ns('Graph.lang');\r\n    Graph.ns('Graph.collection');\r\n    Graph.ns('Graph.registry');\r\n    Graph.ns('Graph.data');\r\n    Graph.ns('Graph.popup');\r\n    Graph.ns('Graph.shape.activity');\r\n    Graph.ns('Graph.shape.common');\r\n\r\n    ///////////////////////// HOOK DOCUMENT CLICK /////////////////////////\r\n    \r\n    Graph(function(){\r\n        var doc = $(DOCUMENT);\r\n\r\n        doc.on('mousedown', function(e){\r\n            var target = $(e.target),\r\n                vector = target.data(Graph.string.ID_VECTOR);\r\n\r\n            var paper;\r\n\r\n            if (vector) {\r\n                vector = Graph.registry.vector.get(vector);\r\n                paper = vector.paper();\r\n                Graph.cached.paper = paper ? paper.guid() : null;\r\n            } else {\r\n                Graph.cached.paper = null;\r\n            }\r\n\r\n            vector = paper = null;\r\n        });\r\n\r\n        doc = null;\r\n    });\r\n\r\n    ///////////////////////// LISTEN DOCUMENT READY ////////////////////////\r\n    \r\n    (function(doc, evt){\r\n        var timer;\r\n\r\n        var handler = function() {\r\n            doc.removeEventListener(evt, handler, false);\r\n            doc.readyState = 'complete';\r\n        };\r\n\r\n        var loaded = function() {\r\n            _.forEach(readyFn, function(f){\r\n                f();\r\n            });\r\n        };\r\n\r\n        var inspect = function() {\r\n            if (doc.readyState != 'complete') {\r\n                timer = _.delay(function(){\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n\r\n                    inspect();\r\n                }, 10);\r\n            } else {\r\n                loaded();\r\n            }\r\n        };\r\n\r\n        if (doc.readyState == null && doc.addEventListener) {\r\n            doc.addEventListener(evt, handler, false);\r\n            doc.readyState = 'loading';\r\n        }\r\n\r\n        inspect();\r\n        \r\n    }(DOCUMENT, 'DOMContentLoaded'));\r\n\r\n    ///////////////////////////////////////////////////////////////////////\r\n    \r\n}());","\r\n(function(){\r\n\r\n    var REGEX_PATH_STR = /([achlmrqstvz])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig;\r\n    var REGEX_PATH_VAL = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/ig;\r\n    var REGEX_PATH_CMD = /,?([achlmqrstvxz]),?/gi;\r\n    var REGEX_POLY_STR = /(\\-?[0-9.]+)\\s*,\\s*(\\-?[0-9.]+)/g;\r\n    var REGEX_TRAN_STR = /((matrix|translate|rotate|scale|skewX|skewY)*\\((\\-?\\d+\\.?\\d*e?\\-?\\d*[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+\\))+/g;\r\n    var REGEX_TRAN_SUB = /[\\w\\.\\-]+/g;\r\n    var REGEX_POLY_STR = /(\\-?[0-9.]+)\\s*,\\s*(\\-?[0-9.]+)/g;\r\n    \r\n    var CONVEX_RADIUS  = 10;\r\n    var SMOOTH_RADIUS  = 6;\r\n\r\n    /**\r\n     * Legendre Gauss (Quadratic Curve)\r\n     * https://pomax.github.io/bezierinfo/legendre-gauss.html\r\n     */\r\n    \r\n    var LEGENDRE_N = 12;\r\n    var LEGENDRE_T = [-0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873, -0.7699, 0.7699, -0.9041, 0.9041, -0.9816, 0.9816];\r\n    var LEGENDRE_C = [ 0.2491, 0.2491,  0.2335, 0.2335,  0.2032, 0.2032,  0.1601, 0.1601,  0.1069, 0.1069,  0.0472, 0.0472];\r\n    \r\n    Graph.util = {\r\n        \r\n        // --------MATH-------- //\r\n        \r\n        deg: function(rad) {\r\n            return Math.round ((rad * 180 / Math.PI % 360) * 1000) / 1000;\r\n        },  \r\n        \r\n        rad: function(deg) {\r\n            return deg % 360 * Math.PI / 180;\r\n        },\r\n        \r\n        angle: function(a, b) {\r\n            var dx = a.x - b.x,\r\n                dy = a.y - b.y;\r\n\r\n            if ( ! dx && ! dy) {\r\n                return 0;\r\n            }\r\n\r\n            return (180 + Math.atan2(-dy, -dx) * 180 / Math.PI + 360) % 360;\r\n        },\r\n\r\n        theta: function(a, b) {\r\n            var dy = -(b.y - a.y),\r\n                dx =   b.x - a.x;\r\n\r\n            var rad, deg;\r\n\r\n            if (dy.toFixed(10) == 0 && dx.toFixed(10) == 0) {\r\n                rad = 0;\r\n            } else {\r\n                rad = Math.atan2(dy, dx);\r\n            }\r\n\r\n            if (rad < 0) {\r\n                rad = 2 * Math.PI + rad;\r\n            }\r\n\r\n            deg = 180 * rad / Math.PI;\r\n            deg = (deg % 360) + (deg < 0 ? 360 : 0);\r\n\r\n            return deg;\r\n        },\r\n\r\n        taxicab: function(a, b) {\r\n            var dx = a.x - b.x,\r\n                dy = a.y - b.y;\r\n            return dx * dx + dy * dy;\r\n        },\r\n\r\n        /**\r\n         * Get vector hypotenuse (magnitude)\r\n         */\r\n        hypo: function(va, vb) {\r\n            return Math.sqrt(va * va + vb * vb);\r\n        },\r\n        \r\n        /**\r\n         * Get sign of number\r\n         */\r\n        sign: function(num) {\r\n            return num < 0 ? -1 : 1;\r\n        },\r\n            \r\n        quadrant: function(x, y) {\r\n            return x >= 0 && y >= 0 ? 1 : (x >= 0 && y < 0 ? 4 : (x < 0 && y < 0 ? 3 : 2));\r\n        },\r\n        \r\n        // slope\r\n        gradient: function(a, b) {\r\n            // parallel\r\n            if (b.x == a.x) {\r\n                return b.y > a.y ? Infinity : -Infinity\r\n            } else if (b.y == a.y) {\r\n                return b.x > a.x ? 0 : -0;\r\n            } else {\r\n                return (b.y - a.y) / (b.x - a.x);\r\n            }\r\n        },\r\n        \r\n        snapValue: function (value, snaps, range) {\r\n            range = _.defaultTo(range, 10);\r\n            \r\n            if (_.isArray(snaps)) {\r\n                var i = snaps.length;\r\n                while(i--) {\r\n                    if (Math.abs(snaps[i] - value) <= range) {\r\n                        return snaps[i];\r\n                    }\r\n                }\r\n            } else {\r\n                snaps = +snaps;\r\n                \r\n                var rem = value % snaps;\r\n                \r\n                if (rem < range) {\r\n                    return value - rem;\r\n                }\r\n                \r\n                if (rem > value - range) {\r\n                    return value - rem + snaps;\r\n                }\r\n            }\r\n            return value;\r\n        },\r\n        \r\n        // --------POINT-------- //\r\n        \r\n        pointbox: function(x, y, padding) {\r\n            if (_.isPlainObject(x)) {\r\n                padding = y;\r\n                y = x.y;\r\n                x = x.x;\r\n            }\r\n            \r\n            padding = padding || 0;\r\n            \r\n            var x1 = x - padding,\r\n                y1 = y - padding,\r\n                x2 = x + padding,\r\n                y2 = y + padding,\r\n                width = x2 - x1,\r\n                height = y2 - y1;\r\n            \r\n            return {\r\n                x: x1,\r\n                y: y1,\r\n                x2: x2,\r\n                y2: y2,\r\n                width: width,\r\n                height: height\r\n            };\r\n        },\r\n\r\n        pointAlign: function(a, b, treshold) {\r\n            if ( ! a || ! b) {\r\n                return false;\r\n            }\r\n            \r\n            treshold = treshold || 2;\r\n            \r\n            if (Math.abs(a.x - b.x) <= treshold) {\r\n                return 'h';\r\n            };\r\n\r\n            if (Math.abs(a.y - b.y) <= treshold) {\r\n                return 'v';\r\n            }\r\n\r\n            return false;\r\n        },\r\n        \r\n        pointDistance: function (a, b) {\r\n            if ( ! a || ! b) {\r\n                return -1;\r\n            }\r\n            return Graph.util.hypo((a.x - b.x), (a.y - b.y));\r\n        },\r\n        \r\n        isPointEquals: function (a, b) {\r\n            return a.x == b.x && a.y == b.y;\r\n        },\r\n        \r\n        // http://stackoverflow.com/a/907491/412190\r\n        isPointOnLine: function(a, b, p) {\r\n            if ( ! a || ! b || ! p) {\r\n                return false;\r\n            }\r\n            \r\n            var det = (b.x - a.x) * (p.y - a.y) - (b.y - a.y) * (p.x - a.x),\r\n                dis = Graph.util.pointDistance(a, b);\r\n            \r\n            return Math.abs(det / dis) < 2;\r\n        },\r\n        \r\n        polar2point: function(distance, radian, origin) {\r\n            var x, y, d;\r\n\r\n            if (_.isUndefined(origin)) {\r\n                origin = Graph.point(0, 0);\r\n            }\r\n\r\n            x = Math.abs(distance * Math.cos(radian));\r\n            y = Math.abs(distance * Math.sin(radian));\r\n            d = Graph.util.deg(radian);\r\n\r\n            if (d < 90) {\r\n                y = -y;\r\n            } else if (d < 180) {\r\n                x = -x;\r\n                y = -y;\r\n            } else if (d < 270) {\r\n                x = -x;\r\n            }\r\n\r\n            return Graph.point(origin.props.x + x, origin.props.y + y);\r\n        },\r\n        \r\n        // --------BOUNDING-------- //\r\n\r\n        isBoxContainsPoint: function(box, p) {\r\n            return p.x >= box.x && p.x <= box.x2 && p.y >= box.y && p.y <= box.y2;\r\n        },\r\n\r\n        isBoxIntersect: function(a, b) {\r\n            var fn = Graph.util.isBoxContainsPoint;\r\n\r\n            return fn(b, {x: a.x,  y: a.y})  ||\r\n                   fn(b, {x: a.x2, y: a.y})  || \r\n                   fn(b, {x: a.x,  y: a.y2}) || \r\n                   fn(b, {x: a.x2, y: a.y2}) || \r\n                   fn(a, {x: b.x,  y: b.y})  ||\r\n                   fn(a, {x: b.x2, y: b.y})  || \r\n                   fn(a, {x: b.x,  y: b.y2}) || \r\n                   fn(a, {x: b.x2, y: b.y2}) || \r\n                   (a.x < b.x2 && a.x > b.x  ||  b.x < a.x2 && b.x > a.x) && \r\n                   (a.y < b.y2 && a.y > b.y  ||  b.y < a.y2 && b.y > a.y);\r\n        },\r\n\r\n        boxOrientation: function(box1, box2, dx, dy) {\r\n            // treshold\r\n            dx = _.defaultTo(dx, 0);\r\n            dy = _.defaultTo(dy, dx);\r\n            \r\n            var top = box1.y2 + dy <= box2.y,\r\n                rgt = box1.x  - dx >= box2.x2,\r\n                btm = box1.y  - dy >= box2.y2,\r\n                lft = box1.x2 + dx <= box2.x;\r\n\r\n            var ver = top ? 'top' : (btm ? 'bottom' : null),\r\n                hor = lft ? 'left' : (rgt ? 'right' : null);\r\n\r\n            if (hor && ver) {\r\n                return ver + '-' + hor;\r\n            } else {\r\n                return hor || ver || 'intersect';\r\n            }\r\n        },\r\n\r\n        expandBox: function(box, dx, dy) {\r\n            dx = _.defaultTo(dx, 0);\r\n            dy = _.defaultTo(dy, 0);\r\n\r\n            box.x  -= dx;\r\n            box.x2 += dx;\r\n            box.y  -= dy;\r\n            box.y2 += dy;\r\n            box.width = box.x2 - box.x;\r\n            box.height = box.y2 - box.y;\r\n\r\n            return box;\r\n        },\r\n\r\n        groupBox: function(boxes) {\r\n            var x  = [], \r\n                y  = [], \r\n                x2 = [], \r\n                y2 = [];\r\n\r\n            if (boxes.length) {\r\n                _.forEach(boxes, function(box){\r\n                    x.push(box.x);\r\n                    y.push(box.y);\r\n                    x2.push(box.x + box.width);\r\n                    y2.push(box.y + box.height);\r\n                });\r\n\r\n                x  = _.min(x);\r\n                y  = _.min(y);\r\n                x2 = _.max(x2);\r\n                y2 = _.max(y2);\r\n\r\n                return {\r\n                    x: x,\r\n                    y: y,\r\n                    x2: x2,\r\n                    y2: y2,\r\n                    width: (x2 - x),\r\n                    height: (y2 - y)\r\n                };\r\n            } else {\r\n                return {\r\n                    x: 0,\r\n                    y: 0,\r\n                    x2: 0,\r\n                    y2: 0,\r\n                    width: 0,\r\n                    height: 0\r\n                }\r\n            }\r\n        },\r\n        \r\n        // -------LINE------ //\r\n        \r\n        midpoint: function(a, b) {\r\n            return {\r\n                x: (a.x + b.x) / 2,\r\n                y: (a.y + b.y) / 2\r\n            };\r\n        },\r\n        \r\n        /** \r\n         * Move point `a` to `b` as far as distance \r\n         */\r\n        movepoint: function(a, b, distance) {\r\n            var tr =  Graph.util.rad(Graph.util.theta(b, a)),\r\n                dx =  Math.cos(tr) * distance,\r\n                dy = -Math.sin(tr) * distance;\r\n            \r\n            a.x += dx;\r\n            a.y += dy;\r\n            \r\n            return a;\r\n        },\r\n        \r\n        lineBendpoints: function(a, b, dir) {\r\n            var points = [],\r\n                x1 = a.x,\r\n                y1 = a.y,\r\n                x2 = b.x,\r\n                y2 = b.y;\r\n               \r\n            var xm, ym;\r\n            \r\n            dir = dir || 'h:h';\r\n            \r\n            if (dir == 'h:v') {\r\n                points = [\r\n                    { x: x2, y: y1 }\r\n                ];\r\n            } else if (dir == 'v:h') {\r\n                points = [\r\n                    { x: x1, y: y2 }\r\n                ];\r\n            } else if (dir == 'h:h') {\r\n                xm = Math.round((x2 - x1) / 2 + x1);\r\n                points = [\r\n                    { x: xm, y: y1 },\r\n                    { x: xm, y: y2 }\r\n                ];\r\n            } else if (dir == 'v:v') {\r\n                ym = Math.round((y2 - y1) / 2 + y1);\r\n                points = [\r\n                    { x: x1, y: ym },\r\n                    { x: x2, y: ym }\r\n                ];\r\n            } else {\r\n                points = [];\r\n            }\r\n            \r\n            return points;\r\n        },\r\n        \r\n        lineIntersection: function (x1, y1, x2, y2, x3, y3, x4, y4) {\r\n            if (\r\n                Math.max(x1, x2) < Math.min(x3, x4) ||\r\n                Math.min(x1, x2) > Math.max(x3, x4) ||\r\n                Math.max(y1, y2) < Math.min(y3, y4) ||\r\n                Math.min(y1, y2) > Math.max(y3, y4)\r\n            ) {\r\n                return null;\r\n            }\r\n\r\n            var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\r\n                ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\r\n                denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\r\n\r\n            if ( ! denominator) {\r\n                return null;\r\n            }\r\n\r\n            var px = nx / denominator,\r\n                py = ny / denominator,\r\n                px2 = +px.toFixed(2),\r\n                py2 = +py.toFixed(2);\r\n\r\n            if (\r\n                px2 < +Math.min(x1, x2).toFixed(2) ||\r\n                px2 > +Math.max(x1, x2).toFixed(2) ||\r\n                px2 < +Math.min(x3, x4).toFixed(2) ||\r\n                px2 > +Math.max(x3, x4).toFixed(2) ||\r\n                py2 < +Math.min(y1, y2).toFixed(2) ||\r\n                py2 > +Math.max(y1, y2).toFixed(2) ||\r\n                py2 < +Math.min(y3, y4).toFixed(2) ||\r\n                py2 > +Math.max(y3, y4).toFixed(2)\r\n            ) {\r\n                return null;\r\n            }\r\n\r\n            return {\r\n                x: px, \r\n                y: py\r\n            };\r\n        },\r\n        \r\n        perpendicular: function(a, b, h) {\r\n            var m1, m2, tt, hp;\r\n\r\n            m1 = Graph.util.gradient(a, b);\r\n            m2 = m1 === 0 ? 0 : ( -1 / m1 );\r\n            tt = Math.atan(m2);\r\n            // si = Math.sin(tt),\r\n            // co = Math.cos(tt);\r\n\r\n            var hp = h * Math.cos(tt);\r\n            // var hy = h * si;\r\n\r\n            // find `middle point`\r\n            var mx = (a.x + b.x) / 2,\r\n                my = (a.y + b.y) / 2;\r\n\r\n            // find `y` intercept\r\n            var iy = my - (mx * m2)\r\n\r\n            var x3 = mx + hp,\r\n                y3 = m2 * x3 + iy;\r\n\r\n            return {\r\n                from: {\r\n                    x: mx,\r\n                    y: my\r\n                },\r\n                to: {\r\n                    x: x3,\r\n                    y: y3\r\n                }\r\n            };\r\n        },\r\n        \r\n        // -------SHAPE/PATH------ //\r\n        \r\n        points2path: function (points) {\r\n            var segments = _.map(points, function(p, i){\r\n                var cmd = i === 0 ? 'M' : 'L';\r\n                return [cmd, p.x, p.y];\r\n            });\r\n            return Graph.util.segments2path(segments);\r\n        },\r\n        \r\n        path2points: function(command) {\r\n            var segments = Graph.util.path2segments(command);\r\n            return _.map(segments, function(s, i){\r\n                if (s[0] == 'M' || s[0] == 'L') {\r\n                    return {x: s[1], y: s[2]};\r\n                } else {\r\n                    return {x: s[5], y: s[6]};\r\n                }\r\n            });\r\n        },\r\n\r\n        segments2path: function(segments) {\r\n            return _.join(segments || [], ',').replace(REGEX_PATH_CMD, '$1');\r\n        },\r\n\r\n        path2segments: function(command) {\r\n            if ( ! command) {\r\n                return [];\r\n            }\r\n\r\n            var cached = Graph.lookup('Graph.util', 'path2segments', command),\r\n                sizes = {a: 7, c: 6, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, z: 0},\r\n                segments = [];\r\n            \r\n            if (cached.segments) {\r\n                return _.cloneDeep(cached.segments);\r\n            }\r\n\r\n            command.replace(REGEX_PATH_STR, function(match, cmd, val){\r\n                var \r\n                    params = [],\r\n                    name = cmd.toLowerCase();\r\n\r\n                val.replace(REGEX_PATH_VAL, function(match, v){\r\n                    if (v) {\r\n                        params.push(+v);\r\n                    }\r\n                });\r\n\r\n                if (name == 'm' && params.length > 2) {\r\n                    segments.push(_.concat([cmd], params.splice(0, 2)));\r\n                    name = 'l';\r\n                    cmd = cmd == 'm' ? 'l' : 'L';\r\n                }\r\n\r\n                if (name == 'r') {\r\n                    segments.push(_.concat([cmd], params));\r\n                } else while (params.length >= sizes[name]) {\r\n                    segments.push(_.concat([cmd], params.splice(0, sizes[name])));\r\n                    if ( ! sizes[name]) {\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n            \r\n            cached.segments = _.cloneDeep(segments);\r\n            return segments;\r\n        },\r\n\r\n        polygon2dots: function(command) {\r\n            var array = [];\r\n            command.replace(REGEX_POLY_STR, function($0, x, y){\r\n                array.push([_.float(x), _.float(y)]);\r\n            });\r\n            return array;\r\n        },\r\n\r\n        polygon2path: function(command) {\r\n            var dots = Graph.util.polygon2dots(command);\r\n\r\n            if ( ! dots.length) {\r\n                return 'M0,0';\r\n            }\r\n            \r\n            var command = 'M' + dots[0][0] + ',' + dots[0][1];\r\n\r\n            for (var i = 1, ii = dots.length; i < ii; i++) {\r\n                command += 'L' + dots[i][0] + ',' + dots[i][1] + ',';\r\n            }\r\n            \r\n            command  = command.substring(0, command.length - 1);\r\n            command += 'Z';\r\n\r\n            return command;\r\n        },\r\n\r\n        transform2segments: Graph.memoize(function(command) {\r\n            var valid = {\r\n                matrix: true,\r\n                translate: true,\r\n                rotate: true,\r\n                scale: true,\r\n                skewX: true,\r\n                skewY: true\r\n            };\r\n\r\n            command += '';\r\n\r\n            var transform = [], matches = command.match(REGEX_TRAN_STR);\r\n\r\n            if (matches) {\r\n                _.forEach(matches, function(sub){\r\n                    var args = sub.match(REGEX_TRAN_SUB),\r\n                        name = args.shift();\r\n                    if (valid[name]) {\r\n                        args = _.map(args, function(v){ return +v; })\r\n                        transform.push([name].concat(args));    \r\n                    }\r\n                });  \r\n            }\r\n\r\n            return transform;\r\n        }),\r\n        \r\n        // --------CURVE-------- //\r\n        \r\n        curvebox: Graph.memoize(function(x0, y0, x1, y1, x2, y2, x3, y3) {\r\n            var token = _.join(arguments, '_'),\r\n                cached = Graph.lookup('Graph.util', 'curvebox', token);\r\n\r\n            token = null;\r\n\r\n            if (cached.curvebox) {\r\n                return cached.curvebox;\r\n            }\r\n\r\n            var tvalues = [],\r\n                bounds  = [[], []];\r\n\r\n            var a, b, c, t, t1, t2, b2ac, sqrtb2ac;\r\n\r\n            for (var i = 0; i < 2; ++i) {\r\n                if (i == 0) {\r\n                    b =  6 * x0 - 12 * x1 + 6 * x2;\r\n                    a = -3 * x0 +  9 * x1 - 9 * x2 + 3 * x3;\r\n                    c =  3 * x1 -  3 * x0;\r\n                } else {\r\n                    b =  6 * y0 - 12 * y1 + 6 * y2;\r\n                    a = -3 * y0 +  9 * y1 - 9 * y2 + 3 * y3;\r\n                    c =  3 * y1 -  3 * y0;\r\n                }\r\n\r\n                if (Math.abs(a) < 1e-12) {\r\n                    if (Math.abs(b) < 1e-12) {\r\n                        continue;\r\n                    }\r\n                    t = -c / b;\r\n                    if (0 < t && t < 1) {\r\n                        tvalues.push(t);\r\n                    }\r\n                    continue;\r\n                }\r\n\r\n                b2ac = b * b - 4 * c * a;\r\n                sqrtb2ac = Math.sqrt(b2ac);\r\n                \r\n                if (b2ac < 0) {\r\n                    continue;\r\n                }\r\n                \r\n                t1 = (-b + sqrtb2ac) / (2 * a);\r\n                \r\n                if (0 < t1 && t1 < 1) {\r\n                    tvalues.push(t1);\r\n                }\r\n\r\n                t2 = (-b - sqrtb2ac) / (2 * a);\r\n                \r\n                if (0 < t2 && t2 < 1) {\r\n                    tvalues.push(t2);\r\n                }\r\n            }\r\n\r\n            var x, y, j = tvalues.length,\r\n                jlen = j,\r\n                mt;\r\n\r\n            while (j--) {\r\n                t = tvalues[j];\r\n                mt = 1 - t;\r\n                bounds[0][j] = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\r\n                bounds[1][j] = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\r\n            }\r\n\r\n            bounds[0][jlen] = x0;\r\n            bounds[1][jlen] = y0;\r\n            bounds[0][jlen + 1] = x3;\r\n            bounds[1][jlen + 1] = y3;\r\n            bounds[0].length = bounds[1].length = jlen + 2;\r\n\r\n            cached.curvebox = {\r\n                min: {x: Math.min.apply(0, bounds[0]), y: Math.min.apply(0, bounds[1])},\r\n                max: {x: Math.max.apply(0, bounds[0]), y: Math.max.apply(0, bounds[1])}\r\n            };\r\n\r\n            return cached.curvebox;\r\n        }),\r\n        \r\n        curveLength: function(x1, y1, x2, y2, x3, y3, x4, y4, t) {\r\n            t = _.defaultTo(t, 1);\r\n            t = t > 1 ? 1 : t < 0 ? 0 : t;\r\n\r\n            var h = t / 2,\r\n                sum = 0;\r\n\r\n            for (var i = 0; i < LEGENDRE_N; i++) {\r\n                var ct = h * LEGENDRE_T[i] + h,\r\n\r\n                    xb = Graph.util.curvePolynom(ct, x1, x2, x3, x4),\r\n                    yb = Graph.util.curvePolynom(ct, y1, y2, y3, y4),\r\n                    co = xb * xb + yb * yb;\r\n\r\n                sum += LEGENDRE_C[i] * Math.sqrt(co);\r\n            }\r\n\r\n            return h * sum;\r\n        },\r\n\r\n        curvePolynom: function(t, n1, n2, n3, n4) {\r\n            var t1 = -3 * n1 + 9 * n2 -  9 * n3 + 3 * n4,\r\n                t2 =  t * t1 + 6 * n1 - 12 * n2 + 6 * n3;\r\n            return t * t2 - 3 * n1 + 3 * n2;\r\n        },\r\n        \r\n        curveInterval: function(x1, y1, x2, y2, x3, y3, x4, y4, length) {\r\n            if (length < 0 || Graph.util.curveLength(x1, y1, x2, y2, x3, y3, x4, y4) < length) {\r\n                return;\r\n            }\r\n\r\n            var t = 1,\r\n                step = t / 2,\r\n                t2 = t - step,\r\n                l,\r\n                e = .01;\r\n\r\n            l = Graph.util.curveLength(x1, y1, x2, y2, x3, y3, x4, y4, t2);\r\n\r\n            while (Math.abs(l - length) > e) {\r\n                step /= 2;\r\n                t2 += (l < length ? 1 : -1) * step;\r\n                l = Graph.util.curveLength(x1, y1, x2, y2, x3, y3, x4, y4, t2);\r\n            }\r\n\r\n            return t2;\r\n        },\r\n\r\n        pointAtInterval: function(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\r\n            var t1 = 1 - t,\r\n                t13 = Math.pow(t1, 3),\r\n                t12 = Math.pow(t1, 2),\r\n                t2 = t * t,\r\n                t3 = t2 * t,\r\n                x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\r\n                y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\r\n                mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\r\n                my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\r\n                nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\r\n                ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\r\n                ax = t1 * p1x + t * c1x,\r\n                ay = t1 * p1y + t * c1y,\r\n                cx = t1 * c2x + t * p2x,\r\n                cy = t1 * c2y + t * p2y,\r\n                alpha = (90 - Math.atan2(mx - nx, my - ny) * 180 / Math.PI);\r\n            \r\n            alpha = (90 - Math.atan2(nx - mx, ny - my) * 180 / Math.PI);\r\n\r\n            // (mx > nx || my < ny) && (alpha += 180);\r\n\r\n            // if (isNaN(x) || isNaN(y)) {\r\n            //     return null;\r\n            // }\r\n\r\n            return {\r\n                x: x,\r\n                y: y,\r\n                m: {x: mx, y: my},\r\n                n: {x: nx, y: ny},\r\n                start: {x: ax, y: ay},\r\n                end:   {x: cx, y: cy},\r\n                alpha: alpha\r\n            };\r\n        },\r\n\r\n        curveIntersection: function(a, b, count) {\r\n            var bon1 = Graph.util.curvebox.apply(null, a),\r\n                bon2 = Graph.util.curvebox.apply(null, b),\r\n                nres = 0,\r\n                ares = [];\r\n\r\n            var box1 = {x: bon1.min.x, y: bon1.min.y, x2: bon1.max.x, y2: bon1.max.y},\r\n                box2 = {x: bon2.min.x, y: bon2.min.y, x2: bon2.max.x, y2: bon2.max.y};\r\n\r\n            if ( ! Graph.util.isBoxIntersect(box1, box2)) {\r\n                return count ? 0 : [];\r\n            }\r\n\r\n            var l1 = Graph.util.curveLength.apply(null, a),\r\n                l2 = Graph.util.curveLength.apply(null, b);\r\n            \r\n            var // n1 = ~~(l1 / 8),\r\n                // n2 = ~~(l2 / 8),\r\n                n1 = ~~(l1 / 10),\r\n                n2 = ~~(l2 / 10),\r\n                dots1 = [],\r\n                dots2 = [],\r\n                xy = {};\r\n\r\n            var i, j, t, p;\r\n\r\n            for (i = 0; i < n1 + 1; i++) {\r\n                t = i / n1;\r\n                p = Graph.util.pointAtInterval.apply(null, a.concat([t]));\r\n                dots1.push({x: p.x, y: p.y, t: t});\r\n            }\r\n\r\n            for (i = 0; i < n2 + 1; i++) {\r\n                t = i / n2;\r\n                p = Graph.util.pointAtInterval.apply(null, b.concat([t]));\r\n                dots2.push({x: p.x, y: p.y, t: t});\r\n            }\r\n\r\n            for (i = 0; i < n1; i++) {\r\n                for (j = 0; j < n2; j++) {\r\n\r\n                    var di  = dots1[i],\r\n                        di1 = dots1[i + 1],\r\n                        dj  = dots2[j],\r\n                        dj1 = dots2[j + 1],\r\n                        ci  = Math.abs(di1.x - di.x) < .001 ? 'y' : 'x',\r\n                        cj  = Math.abs(dj1.x - dj.x) < .001 ? 'y' : 'x',\r\n                        is  = Graph.util.lineIntersection(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\r\n                    \r\n                    if (is) {\r\n                        \r\n                        if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\r\n                            continue;\r\n                        }\r\n\r\n                        xy[is.x.toFixed(4)] = is.y.toFixed(4);\r\n                        \r\n                        var t1 = di.t + Math.abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\r\n                            t2 = dj.t + Math.abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\r\n                        \r\n                        if (t1 >= 0 && t1 <= 1.001 && t2 >= 0 && t2 <= 1.001) {\r\n                            nres++;\r\n                            // ares.push(is);\r\n                            ares.push({\r\n                                x: is.x,\r\n                                y: is.y,\r\n                                t1: t1,\r\n                                t2: t2\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            return count ? nres : ares;\r\n        },\r\n        \r\n        convexSegment: function(point, prev, next, radius) {\r\n            if ( ! prev || ! next || ! point) {\r\n                return null;\r\n            }\r\n            \r\n            var d1 = Graph.util.pointDistance(point, prev),\r\n                d2 = Graph.util.pointDistance(point, next);\r\n                \r\n            radius = radius || CONVEX_RADIUS;\r\n            \r\n            if (d1 > radius && d2 > radius) {\r\n                \r\n                var c1 = Graph.util.movepoint({x: point.x, y: point.y}, prev, -radius / 2),\r\n                    c2 = Graph.util.movepoint({x: point.x, y: point.y}, next, -radius / 2),\r\n                    dr = Graph.util.pointAlign(prev, next, radius / 2);\r\n                \r\n                var cp;\r\n                \r\n                if (dr == 'h') {\r\n                    cp = {\r\n                        x: point.x - radius, \r\n                        y: point.y\r\n                    };\r\n                } else {\r\n                    c1.y = prev.y;\r\n                    c2.y = next.y;\r\n                    cp = {\r\n                        x: point.x, \r\n                        y: point.y - radius\r\n                    };\r\n                }\r\n                \r\n                return [\r\n                    ['L', c1.x, c1.y],\r\n                    ['Q', cp.x, cp.y, c2.x, c2.y]\r\n                ];\r\n            }\r\n            \r\n            return null;\r\n        },\r\n        \r\n        smoothSegment: function(point, prev, next, radius) {\r\n            if ( ! prev || ! next || ! point) {\r\n                return null;\r\n            }\r\n            \r\n            var d1 = Graph.util.pointDistance(point, prev),\r\n                d2 = Graph.util.pointDistance(point, next);\r\n                \r\n            radius = radius || SMOOTH_RADIUS;\r\n            \r\n            if (d1 > radius && d2 > radius) {\r\n                var c1 = Graph.util.movepoint({x: point.x, y: point.y}, prev, -radius),\r\n                    c2 = Graph.util.movepoint({x: point.x, y: point.y}, next, -radius);\r\n                    \r\n                return [\r\n                    ['L', c1.x, c1.y],\r\n                    ['Q', point.x, point.y, c2.x, c2.y]\r\n                ]\r\n            }\r\n            \r\n            return null;\r\n        }\r\n        \r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Class = Graph.lang.Class = function() {};\r\n\r\n    Class.options = {};\r\n\r\n    Class.prototype.constructor = Class;\r\n    Class.prototype.toString = function() { return 'Graph.lang.Class'; };\r\n\r\n    Class.extend = function(config) {\r\n        var _super, _proto, _constructor, _definition, _class, _classopt;\r\n\r\n        _super = this.prototype;\r\n        _proto = Object.create(_super);\r\n\r\n        _classopt = {};\r\n\r\n        _.forOwn(config, function(v, k){\r\n\r\n            if (_.isFunction(v)) {\r\n                _proto[k] = v;\r\n                if (k == 'constructor') {\r\n                    _constructor = v;\r\n                }\r\n            } else {\r\n                _classopt[k] = v;\r\n            }\r\n        });\r\n\r\n        if ( ! _constructor) {\r\n            _constructor = _super.constructor;\r\n        }\r\n\r\n        _class = function() {\r\n\r\n            if ( ! this.__initialized__) {\r\n                this.__initialized__ = true;\r\n\r\n                this.listeners = {};\r\n\r\n                var _superclass = this.superclass;\r\n                var _superopt, key, val;\r\n\r\n                for (key in _classopt) {\r\n                    this[key] = _.cloneDeep(_classopt[key]);\r\n                }\r\n\r\n                while(_superclass) {\r\n                    _superopt = _superclass.options;\r\n\r\n                    if (_superopt) {\r\n                        for (key in _superopt) {\r\n                            if (this[key] !== undefined) {\r\n                                this[key] = _.merge(_.cloneDeep(_superopt[key]), this[key]);\r\n                            } else {\r\n                                this[key] = _.cloneDeep(_superopt[key]);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    _superclass = _superclass.prototype.superclass;\r\n                }\r\n            }\r\n\r\n            if (_constructor) {\r\n                _constructor.apply(this, arguments);\r\n            }\r\n        }\r\n\r\n        _definition = _constructor.toString().match(/(function)?([^\\{=]+)/);\r\n        _definition = 'function' + _definition[2];\r\n\r\n        _class.toString = function() {\r\n            return _definition;\r\n        };\r\n\r\n        _class.extend = _super.constructor.extend;\r\n        _class.options = _classopt;\r\n\r\n        _class.prototype = _proto;\r\n        _class.prototype.constructor = _class;\r\n        _class.prototype.superclass = _super.constructor;\r\n\r\n        _class.prototype.on = function(eventType, handler, once, priority) {\r\n            if (_.isPlainObject(eventType)) {\r\n                var key, val;\r\n                for (key in eventType) {\r\n                    val = eventType[key];\r\n                    if (_.isFunction(val)) {\r\n                        bind(this, key, val);\r\n                    } else {\r\n                        bind(this, key, val['handler'], val['once'], val['priority']);\r\n                    }\r\n                }\r\n            } else {\r\n                bind(this, eventType, handler, once, priority);\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        _class.prototype.one = function(eventType, handler) {\r\n            if (_.isPlainObject(eventType)) {\r\n                var key, val;\r\n                for (key in eventType) {\r\n                    val = eventType[key];\r\n                    if (_.isFunction(val)) {\r\n                        bind(this, key, val, true);\r\n                    } else {\r\n                        bind(this, key, val['handler'], true, val['priority']);\r\n                    }\r\n                }\r\n            } else {\r\n                bind(this, eventType, handler, true);\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        _class.prototype.off = function(eventType, handler) {\r\n            var batch = eventType.split(/\\s/);\r\n\r\n            if (batch.length > 1) {\r\n                for (var i = 0, ii = batch.length; i < ii; i++) {\r\n                    unbind(this, batch[i]);\r\n                }\r\n            } else {\r\n                unbind(this, eventType, handler);\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        _class.prototype.fire = function(eventType, data) {\r\n            var args = [], onces = [];\r\n            var eventObject, eventNames, eventRoot, listeners,\r\n                eventRegex, cachedRegex, ii, i;\r\n\r\n            data = data || {};\r\n\r\n            if (_.isString(eventType)) {\r\n                eventObject = new Graph.lang.Event(eventType, data);\r\n            } else {\r\n                eventObject = eventType;\r\n                eventObject.originalData = data;\r\n                eventType = eventObject.originalType || eventObject.type;\r\n            }\r\n\r\n            eventObject.publisher = this;\r\n            args.push(eventObject);\r\n\r\n            eventNames = eventType.split(/\\./);\r\n            eventRoot = eventNames.shift();\r\n            listeners = (this.listeners[eventRoot] || []).slice();\r\n\r\n            var cachedRegex = Graph.lookup('Regex.event', eventType);\r\n\r\n            if (cachedRegex.rgex) {\r\n                eventRegex = cachedRegex.rgex;\r\n            } else {\r\n                eventRegex = new RegExp(_.escapeRegExp(eventType), 'i');\r\n                cachedRegex.rgex = eventRegex;\r\n            }\r\n\r\n            if (listeners.length) {\r\n                for (i = 0, ii = listeners.length; i < ii; i++) {\r\n                    if (eventRoot == listeners[i].eventType) {\r\n                        if (listeners[i].once) {\r\n                            onces.push(listeners[i]);\r\n                        }\r\n                        listeners[i].handler.apply(listeners[i].handler, args);\r\n                    } else if (eventRegex.test(listeners[i].eventType)) {\r\n                        if (listeners[i].once) {\r\n                            onces.push(listeners[i]);\r\n                        }\r\n                        listeners[i].handler.apply(listeners[i].handler, args);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (onces.length) {\r\n                for (i = 0, ii = onces.length; i < ii; i++) {\r\n                    this.off(onces[i].eventType, onces[i].original);\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n        return _class;\r\n    };\r\n\r\n    /////////\r\n\r\n    function bind(context, eventType, handler, once, priority) {\r\n        var eventNames = eventType.split(/\\./),\r\n            eventRoot = eventNames.shift();\r\n\r\n        once = _.defaultTo(once, false);\r\n        priority = _.defaultTo(priority, 1500);\r\n\r\n        context.listeners[eventRoot] = context.listeners[eventRoot] || [];\r\n\r\n        context.listeners[eventRoot].push({\r\n            eventType: eventType,\r\n            priority: priority,\r\n            original: handler,\r\n            handler: _.bind(handler, context),\r\n            once: once\r\n        });\r\n    }\r\n\r\n    function unbind(context, eventType, handler) {\r\n        var eventNames = eventType.split(/\\./),\r\n            eventRoot = eventNames.shift(),\r\n            listeners = context.listeners[eventRoot] || [];\r\n\r\n        var eventRegex, cachedRegex;\r\n\r\n        cachedRegex = Graph.lookup('Regex.event', eventType);\r\n\r\n        if (cachedRegex.rgex) {\r\n            eventRegex = cachedRegex.rgex;\r\n        } else {\r\n            eventRegex = new RegExp(_.escapeRegExp(eventType), 'i');\r\n            cachedRegex.rgex = eventRegex;\r\n        }\r\n\r\n        for (var i = listeners.length - 1; i >= 0; i--) {\r\n            if (eventRegex.test(listeners[i].eventType)) {\r\n                if (handler) {\r\n                    if (handler === listeners[i].original) {\r\n                        listeners.splice(i, 1);\r\n                    }\r\n                } else {\r\n                    listeners.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n\r\n        if ( ! listeners.length) {\r\n            delete context.listeners[eventRoot];\r\n        }\r\n    }\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var Err = Graph.lang.Error = function(message) {\r\n        this.message = message;\r\n\r\n        var err = new Error();\r\n        this.stack = err.stack;\r\n\r\n        err = null;\r\n    };\r\n\r\n    Err.options = {\r\n        message: ''\r\n    };\r\n    Err.extend = Graph.lang.Class.extend;\r\n\r\n    Err.prototype = Object.create(Error.prototype);\r\n    Err.prototype.constructor = Err;\r\n    Err.prototype.name = \"Graph.lang.Error\";\r\n    Err.prototype.message = \"\";\r\n\r\n    ///////// SHORTCUT /////////\r\n\r\n    Graph.error = function(message) {\r\n        return new Graph.lang.Error(message);\r\n    };\r\n\r\n    Graph.isError = function(obj) {\r\n        return obj instanceof Graph.lang.Error;\r\n    };\r\n\r\n}());\r\n","\r\n(function(_, $){\r\n\r\n    var Evt = Graph.lang.Event = function(type, data){\r\n        this.type = type;\r\n        this.originalData = null;\r\n        this.cancelBubble = false;\r\n        this.defaultPrevented = false;\r\n        this.propagationStopped = false;\r\n        this.immediatePropagationStopped = false;\r\n\r\n        this.init(data);\r\n    };\r\n\r\n    Evt.options = {\r\n        type: null,\r\n        originalData: null,\r\n        cancelBubble: false,\r\n        defaultPrevented: false,\r\n        propagationStopped: false,\r\n        immediatePropagationStopped: false\r\n    };\r\n\r\n    Evt.extend = Graph.lang.Class.extend;\r\n\r\n    Evt.prototype.constructor = Evt;\r\n\r\n    Evt.prototype.init = function(data) {\r\n        if (data) {\r\n            this.originalData = data;\r\n            _.assign(this, data || {});\r\n        }\r\n    };\r\n\r\n    Evt.prototype.stopPropagation = function() {\r\n        this.cancelBubble = this.propagationStopped = true;\r\n    };\r\n\r\n    Evt.prototype.stopImmediatePropagation = function() {\r\n        this.immediatePropagationStopped = this.propagationStopped = true;\r\n    };\r\n\r\n    Evt.prototype.preventDefault = function() {\r\n        this.defaultPrevented = true;\r\n    };\r\n\r\n    Evt.prototype.toString = function() {\r\n        return 'Graph.lang.Event';\r\n    };\r\n\r\n    ///////// SHORTCUT /////////\r\n\r\n    Graph.event = function(type, data) {\r\n        return new Graph.lang.Event(type, data);\r\n    };\r\n\r\n    Graph.isEvent = function(obj) {\r\n        return obj instanceof Graph.lang.Event;\r\n    };\r\n\r\n    ///////// STATIC /////////\r\n\r\n    Graph.event.ESC = 27;\r\n    Graph.event.ENTER = 13;\r\n    Graph.event.DELETE = 46;\r\n    Graph.event.SHIFT = 16;\r\n\r\n    Graph.event.fix = function(event) {\r\n        return $.event.fix(event);\r\n    };\r\n\r\n    Graph.event.original = function(event) {\r\n        return event.originalEvent || event;\r\n    };\r\n\r\n    Graph.event.position = function(event) {\r\n        return {\r\n            x: event.clientX,\r\n            y: event.clientY\r\n        };\r\n    };\r\n\r\n    Graph.event.relative = function(event, vector) {\r\n        var position = Graph.event.position(event),\r\n            matrix = vector.matrix().clone().invert(),\r\n            relative = {\r\n                x: matrix.x(position.x, position.y),\r\n                y: matrix.y(position.x, position.y)\r\n            };\r\n\r\n        matrix = null;\r\n\r\n        return relative;\r\n    };\r\n\r\n    Graph.event.isPrimaryButton = function(event) {\r\n        var original = Graph.event.original(event);\r\n        return ! original.button;\r\n    };\r\n\r\n    Graph.event.hasPrimaryModifier = function(event) {\r\n        if ( ! Graph.event.isPrimaryButton(event)) {\r\n            return false;\r\n        }\r\n        var original = Graph.event.original(event);\r\n        return Graph.isMac() ? original.metaKey : original.ctrlKey;\r\n    };\r\n\r\n    Graph.event.hasSecondaryModifier = function(event) {\r\n        var original = Graph.event.original(event);\r\n        return Graph.event.isPrimaryButton(event) && original.shiftKey;\r\n    };\r\n\r\n}(_, jQuery));\r\n","\r\n(function(){\r\n\r\n    var Collection = Graph.collection.Point = function(points) {\r\n        this.items = points || [];\r\n    };\r\n\r\n    Collection.prototype.constructor = Collection;\r\n    Collection.prototype.items = [];\r\n\r\n    Collection.prototype.get = function(index) {\r\n        return this.items[index];\r\n    };\r\n\r\n    Collection.prototype.push = function(item) {\r\n        this.items.push(item);\r\n        return item;\r\n    };\r\n\r\n    Collection.prototype.pop = function() {\r\n        var item = this.items.pop();\r\n        return item;\r\n    };\r\n\r\n    Collection.prototype.shift = function() {\r\n        var item = this.items.shift();\r\n        return item;\r\n    };\r\n\r\n    Collection.prototype.first = function() {\r\n        return _.head(this.items);\r\n    };\r\n\r\n    Collection.prototype.last = function() {\r\n        return _.last(this.items);\r\n    };\r\n\r\n    Collection.prototype.clear = function() {\r\n        this.items = [];\r\n        return this;\r\n    },\r\n\r\n    Collection.prototype.modify = function(index, x, y) {\r\n        var item = this.items[index];\r\n        item.props.x = x;\r\n        item.props.y = y;\r\n        return item;\r\n    };\r\n\r\n    Collection.prototype.each = function(iteratee) {\r\n        _.forEach(this.items, iteratee);\r\n    };\r\n\r\n    Collection.prototype.toArray = function() {\r\n        return this.items;\r\n    };\r\n\r\n    Collection.prototype.toJson = function() {\r\n        return _.map(this.items, function(item){\r\n            return item.toJson();\r\n        });\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Line = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(x1, y1, x2, y2) {\r\n            var args = _.toArray(arguments);\r\n\r\n            if (args.length === 1) {\r\n                var start = args[0].start().toJson(),\r\n                    end = args[0].end().toJson();\r\n\r\n                x1 = start.x;\r\n                y1 = start.y;\r\n                x2 = end.x;\r\n                y2 = end.y;\r\n            } else if (args.length === 2) {\r\n                if (Graph.isPoint(args[0])) {\r\n                    x1 = args[0].props.x;\r\n                    y1 = args[0].props.y;\r\n                    x2 = args[1].props.x;\r\n                    y2 = args[1].props.y;\r\n                } else {\r\n                    x1 = args[0].x;\r\n                    y1 = args[0].y;\r\n                    x2 = args[1].x;\r\n                    y2 = args[1].y;\r\n                }\r\n                \r\n            }\r\n\r\n            // this.$super('line', {\r\n            //     x1: _.defaultTo(x1, 0),\r\n            //     y1: _.defaultTo(y1, 0),\r\n            //     x2: _.defaultTo(x2, 0),\r\n            //     y2: _.defaultTo(y2, 0)\r\n            // });\r\n            \r\n            this.superclass.prototype.constructor.call(this, 'line', {\r\n                x1: _.defaultTo(x1, 0),\r\n                y1: _.defaultTo(y1, 0),\r\n                x2: _.defaultTo(x2, 0),\r\n                y2: _.defaultTo(y2, 0)\r\n            });\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Line';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n}());","\r\n(function(){\r\n\r\n    var Curve = Graph.lang.Curve = function(command) {\r\n        this.segments = _.isString(command) ? Graph.util.path2segments(command) : _.cloneDeep(command);\r\n\r\n        if (this.segments[0][0] != 'M') {\r\n            this.segments.unshift(\r\n                ['M', this.segments[0][1], this.segments[0][2]]\r\n            );\r\n        }\r\n\r\n        if (this.segments.length === 1 && this.segments[0][0] === 'M') {\r\n            var x = this.segments[0][1],\r\n                y = this.segments[0][2];\r\n            this.segments.push(['C', x, y, x, y, x, y]);\r\n        }\r\n    };\r\n\r\n    Curve.options = {\r\n        segments: []\r\n    };\r\n\r\n    Curve.extend = Graph.lang.Class.extend;\r\n\r\n    Curve.prototype.constructor = Curve;\r\n\r\n    Curve.prototype.segments = [];\r\n\r\n    Curve.prototype.x = function() {\r\n        return this.segments[1][5];\r\n    };\r\n\r\n    Curve.prototype.y = function() {\r\n        return this.segments[1][6];\r\n    };\r\n\r\n    Curve.prototype.length = function(t) {\r\n        var params = this.segments[0].slice(1).concat(this.segments[1].slice(1)).concat([t]);\r\n        return Graph.util.curveLength.apply(null, params);\r\n    };\r\n\r\n    Curve.prototype.t = function(length) {\r\n        var params = this.segments[0].slice(1).concat(this.segments[1].slice(1)).concat([length]);\r\n        return Graph.util.curveInterval.apply(null, params);\r\n    };\r\n\r\n    Curve.prototype.pointAt = function(t, json) {\r\n        var params = this.segments[0].slice(1).concat(this.segments[1].slice(1)).concat([t]),\r\n            result = Graph.util.pointAtInterval.apply(null, params);\r\n\r\n        if (json) {\r\n            return result;\r\n        } else {\r\n            var point = Graph.point(result.x, result.y);\r\n            result.x = result.y = undefined;\r\n            return _.extend(point, result);\r\n        }\r\n    };\r\n\r\n    Curve.prototype.intersection = function(curve, json) {\r\n        var a = this.segments[0].slice(1).concat(this.segments[1].slice(1)),\r\n            b = curve.segments[0].slice(1).concat(curve.segments[1].slice(1)),\r\n            i = Graph.util.curveIntersection(a, b);\r\n\r\n        if (json) {\r\n            return i;\r\n        } else {\r\n            var points = _.map(i, function(p){ return Graph.point(p.x, p.y); });\r\n            return points;\r\n        }\r\n    };\r\n\r\n    Curve.prototype.intersectnum = function(curve) {\r\n        var a = this.segments[0].slice(1).concat(this.segments[1].slice(1)),\r\n            b = curve.segments[0].slice(1).concat(curve.segments[1].slice(1));\r\n\r\n        return Graph.util.curveIntersection(a, b, true);\r\n    };\r\n\r\n    Curve.prototype.bbox = function() {\r\n        var args = [this.segments[0][1], this.segments[0][2]].concat(this.segments[1].slice(1)),\r\n            bbox = Graph.util.curvebox.apply(null, args);\r\n        return Graph.bbox({\r\n            x: bbox.min.x,\r\n            y: bbox.min.y,\r\n            x2: bbox.max.x,\r\n            y2: bbox.max.y,\r\n            width: bbox.max.x - bbox.min.x,\r\n            height: bbox.max.y - bbox.min.y\r\n        });\r\n    };\r\n\r\n    Curve.prototype.clone = function() {\r\n        var segments = _.cloneDeep(this.segments);\r\n        return new Graph.lang.Curve(segments);\r\n    };\r\n\r\n    Curve.prototype.toValue = function() {\r\n        return Graph.util.segments2path(this.segments);\r\n    };\r\n\r\n    Curve.prototype.toString = function() {\r\n        return 'Graph.lang.Curve';\r\n    };\r\n\r\n    ///////// SHORTCUT /////////\r\n\r\n    Graph.curve = function(command) {\r\n        return new Graph.lang.Curve(command);\r\n    };\r\n\r\n    Graph.isCurve = function(obj) {\r\n        return obj instanceof Graph.lang.Curve;\r\n    };\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var BBox = Graph.lang.BBox = function(bounds) {\r\n        this.props = _.extend({\r\n            x: 0,\r\n            y: 0,\r\n            x2: 0,\r\n            y2: 0,\r\n            width: 0,\r\n            height: 0\r\n        }, bounds || {});\r\n    };\r\n\r\n    BBox.options = {\r\n        props: {\r\n            x: 0,\r\n            y: 0,\r\n            x2: 0,\r\n            y2: 0,\r\n            width: 0,\r\n            height: 0\r\n        }\r\n    };\r\n\r\n    BBox.extend = Graph.lang.Class.extend;\r\n\r\n    BBox.prototype = Object.create(Graph.lang.Class.prototype);\r\n    BBox.prototype.constructor = BBox;\r\n    BBox.prototype.superclass = Graph.lang.Class;\r\n\r\n    BBox.prototype.shape = function() {\r\n        var prop = this.props;\r\n\r\n        return new Graph.lang.Path([\r\n            ['M', prop.x, prop.y],\r\n            ['l', prop.width, 0],\r\n            ['l', 0, prop.height],\r\n            ['l', -prop.width, 0],\r\n            ['z']\r\n        ]);\r\n    };\r\n\r\n    BBox.prototype.origin = function(simple) {\r\n        simple = _.defaultTo(simple, false);\r\n\r\n        var x = this.props.x,\r\n            y = this.props.y;\r\n\r\n        return simple ? {x: x, y: y} : Graph.point(x, y);\r\n    };\r\n\r\n    BBox.prototype.center = function(simple) {\r\n        simple = _.defaultTo(simple, false);\r\n\r\n        var x = this.props.x + this.props.width  / 2,\r\n            y = this.props.y + this.props.height / 2;\r\n\r\n        return simple ? {x: x, y: y} : Graph.point(x, y);\r\n    };\r\n\r\n    BBox.prototype.corner = function(simple) {\r\n        simple = _.defaultTo(simple, false);\r\n\r\n        var x = this.props.x + this.props.width,\r\n            y = this.props.y + this.props.height;\r\n\r\n        return simple ? {x: x, y: y} : Graph.point(x, y);\r\n    };\r\n\r\n    BBox.prototype.width = function() {\r\n        return this.props.width;\r\n    };\r\n\r\n    BBox.prototype.height = function() {\r\n        return this.props.height;\r\n    };\r\n\r\n    BBox.prototype.clone = function() {\r\n        var props = _.extend({}, this.props);\r\n        return new BBox(props);\r\n    };\r\n\r\n    BBox.prototype.contains = function(obj) {\r\n        var contain = true,\r\n            bbox = this.props,\r\n            dots = [];\r\n\r\n        var vbox, papa, mat, dot;\r\n\r\n        if (Graph.isPoint(obj)) {\r\n            dots = [\r\n                [obj.props.x, obj.props.y]\r\n            ];\r\n        } else if (Graph.isVector(obj)) {\r\n            dots = obj.vertices(true);\r\n        } else if (Graph.isBBox(obj)) {\r\n            dots = [\r\n                [obj.props.x, obj.props.y],\r\n                [obj.props.x2, obj.props.y2]\r\n            ];\r\n        } else {\r\n            var args = _.toArray(arguments);\r\n            if (args.length === 2) {\r\n                dots = [args];\r\n            }\r\n        }\r\n\r\n        if (dots.length) {\r\n            var l = dots.length;\r\n            while(l--) {\r\n                dot = dots[l];\r\n                contain = dot[0] >= bbox.x  &&\r\n                          dot[0] <= bbox.x2 &&\r\n                          dot[1] >= bbox.y  &&\r\n                          dot[1] <= bbox.y2;\r\n                if ( ! contain) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return contain;\r\n    };\r\n\r\n    BBox.prototype.expand = function(dx, dy, dw, dh) {\r\n        var ax, ay;\r\n        if (_.isUndefined(dy)) {\r\n            ax = Math.abs(dx);\r\n\r\n            dx = -ax;\r\n            dy = -ax;\r\n            dw = 2 * ax;\r\n            dh = 2 * ax;\r\n        } else {\r\n            ax = Math.abs(dx);\r\n            ay = Math.abs(dy);\r\n\r\n            dx = -ax;\r\n            dy = -ay;\r\n            dw = 2 * ax;\r\n            dh = 2 * ay;\r\n        }\r\n\r\n        this.props.x += dx;\r\n        this.props.y += dy;\r\n        this.props.width  += dw;\r\n        this.props.height += dh;\r\n\r\n        return this;\r\n    };\r\n\r\n    BBox.prototype.translate = function(dx, dy) {\r\n        this.props.x  += dx;\r\n        this.props.y  += dy;\r\n        this.props.x2 += dx;\r\n        this.props.y2 += dy;\r\n\r\n        return this;\r\n    };\r\n\r\n    BBox.prototype.transform = function(matrix) {\r\n        var x = this.props.x,\r\n            y = this.props.y;\r\n\r\n        this.props.x = matrix.x(x, y);\r\n        this.props.y = matrix.y(x, y);\r\n\r\n        x = this.props.x2;\r\n        y = this.props.y2;\r\n\r\n        this.props.x2 = matrix.x(x, y);\r\n        this.props.y2 = matrix.y(x, y);\r\n\r\n        this.props.width  = this.props.x2 - this.props.x;\r\n        this.props.height = this.props.y2 - this.props.y;\r\n\r\n        return this;\r\n    };\r\n\r\n    BBox.prototype.intersect = function(tbox) {\r\n        var me = this,\r\n            bdat = me.props,\r\n            tdat = tbox.toJson();\r\n\r\n        return tbox.contains(bdat.x, bdat.y)\r\n            || tbox.contains(bdat.x2, bdat.y)\r\n            || tbox.contains(bdat.x, bdat.y2)\r\n            || tbox.contains(bdat.x2, bdat.y2)\r\n            || me.contains(tdat.x, tdat.y)\r\n            || me.contains(tdat.x2, tdat.y)\r\n            || me.contains(tdat.x, tdat.y2)\r\n            || me.contains(tdat.x2, tdat.y2)\r\n            || (bdat.x < tdat.x2 && bdat.x > tdat.x || tdat.x < bdat.x2 && tdat.x > bdat.x)\r\n            && (bdat.y < tdat.y2 && bdat.y > tdat.y || tdat.y < bdat.y2 && tdat.y > bdat.y);\r\n    };\r\n\r\n    BBox.prototype.sideNearestPoint = function(point) {\r\n        var px = point.props.x,\r\n            py = point.props.y,\r\n            tx = this.props.x,\r\n            ty = this.props.y,\r\n            tw = this.props.width,\r\n            th = this.props.height;\r\n\r\n        var distToLeft = px - tx;\r\n        var distToRight = (tx + tw) - px;\r\n        var distToTop = py - ty;\r\n        var distToBottom = (ty + th) - py;\r\n        var closest = distToLeft;\r\n        var side = 'left';\r\n\r\n        if (distToRight < closest) {\r\n            closest = distToRight;\r\n            side = 'right';\r\n        }\r\n\r\n        if (distToTop < closest) {\r\n            closest = distToTop;\r\n            side = 'top';\r\n        }\r\n        if (distToBottom < closest) {\r\n            closest = distToBottom;\r\n            side = 'bottom';\r\n        }\r\n\r\n        return side;\r\n    };\r\n\r\n    BBox.prototype.pointNearestPoint = function(point) {\r\n        if (this.contains(point)) {\r\n            var side = this.sideNearestPoint(point);\r\n            switch (side){\r\n                case 'right': return Graph.point(this.props.x + this.props.width, point.props.y);\r\n                case 'left': return Graph.point(this.props.x, point.props.y);\r\n                case 'bottom': return Graph.point(point.props.x, this.props.y + this.props.height);\r\n                case 'top': return Graph.point(point.props.x, this.props.y);\r\n            }\r\n        }\r\n        return point.clone().adhereToBox(this);\r\n    };\r\n\r\n    BBox.prototype.toJson = function() {\r\n        return _.clone(this.props);\r\n    };\r\n\r\n    BBox.prototype.toString = function() {\r\n        return 'Graph.lang.BBox';\r\n    };\r\n\r\n    BBox.prototype.toValue = function() {\r\n        var p = this.props;\r\n        return _.format(\r\n            '{0},{1} {2},{3} {4},{5} {6},{7}',\r\n            p.x, p.y,\r\n            p.x + p.width, p.y,\r\n            p.x + p.width, p.y + p.height,\r\n            p.x, p.y + p.height\r\n        );\r\n    };\r\n\r\n    ///////// EXTENSION /////////\r\n\r\n    Graph.isBBox = function(obj) {\r\n        return obj instanceof Graph.lang.BBox;\r\n    };\r\n\r\n    Graph.bbox = function(bounds) {\r\n        return new Graph.lang.BBox(bounds);\r\n    };\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.svg.Path = Graph.extend(Graph.svg.Vector, {\r\n\r\n        constructor: function(d) {\r\n            if ( ! d) {\r\n                d = [['M', 0, 0]];\r\n            }\r\n\r\n            if (_.isArray(d)) {\r\n                d = Graph.path(Graph.util.segments2path(d)).absolute().toValue();\r\n            } else if (d instanceof Graph.lang.Path) {\r\n                d = d.toValue();\r\n            } else {\r\n                d = Graph.path(d).absolute().toValue();\r\n            }\r\n\r\n            this.superclass.prototype.constructor.call(this, 'path', {\r\n                d: d\r\n            });\r\n        },\r\n\r\n        shape: function() {\r\n            return Graph.path(this.attrs.d)\r\n        },\r\n\r\n        segments: function() {\r\n            return this.shape().segments;\r\n        },\r\n\r\n        intersection: function(path, dots) {\r\n            return this.shape().intersection(path.shape(), dots);\r\n        },\r\n\r\n        intersectnum: function(path) {\r\n            return this.shape().intersectnum(path.shape());\r\n        },\r\n\r\n        angle: function() {\r\n            var segments = _.clone(this.segments()),\r\n                max = segments.length - 1;\r\n\r\n            if (segments[max][0] == 'Z') {\r\n                max--;\r\n                segments.pop();\r\n            }\r\n\r\n            if (segments.length === 1) {\r\n                max++;\r\n                segments.push(['L', segments[0][1], segments[0][2]]);\r\n            }\r\n\r\n            var dx = segments[max][1] - segments[max - 1][1],\r\n                dy = segments[max][2] - segments[max - 1][2];\r\n\r\n            return (180 + Math.atan2(-dy, -dx) * 180 / Math.PI + 360) % 360;\r\n        },\r\n\r\n        slice: function(from, to) {\r\n            return this.shape().slice(from, to);\r\n        },\r\n\r\n        pointAt: function(length) {\r\n            return this.shape().pointAt(length);\r\n        },\r\n\r\n        length: function() {\r\n            return this.shape().length();\r\n        },\r\n\r\n        addVertext: function(vertext) {\r\n            var path = this.shape();\r\n\r\n            path.addVertext(vertext);\r\n            this.attr('d', path.command());\r\n\r\n            return this;\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var ms = this.matrix().clone(),\r\n                mr = matrix.rotate(),\r\n                ro = mr.deg,\r\n                rd = mr.rad,\r\n                si = Math.sin(rd),\r\n                co = Math.cos(rd),\r\n                pa = this.shape(),\r\n                ps = pa.segments,\r\n                rx = ps[0][1],\r\n                ry = ps[0][2];\r\n\r\n            if (ro) {\r\n                ms.rotate(-ro, rx, ry);    \r\n            }\r\n            \r\n            rx = ms.x(ps[0][1], ps[0][2]);\r\n            ry = ms.y(ps[0][1], ps[0][2]);\r\n\r\n            ms.scale(sx, sy, cx, cy);\r\n\r\n            _.forEach(ps, function(seg){\r\n                var ox, oy, nx, ny;\r\n                if (seg[0] != 'Z') {\r\n                    ox = seg[seg.length - 2];\r\n                    oy = seg[seg.length - 1];\r\n\r\n                    nx = ms.x(ox, oy);\r\n                    ny = ms.y(ox, oy);\r\n                    \r\n                    seg[seg.length - 2] = nx;\r\n                    seg[seg.length - 1] = ny;\r\n                }\r\n            });\r\n\r\n            this.reset();\r\n            this.attr('d', pa.command());\r\n\r\n            if (ro) {\r\n                this.rotate(ro, rx, ry).commit(true);    \r\n            }\r\n\r\n            return {\r\n                matrix: ms,\r\n                x: rx,\r\n                y: ry\r\n            };\r\n        },\r\n\r\n        moveTo: function(x, y) {\r\n            var path = this.shape();\r\n            \r\n            path.moveTo(x, y);\r\n            this.attr('d', path.command());\r\n\r\n            return this;\r\n        },\r\n\r\n        lineTo: function(x, y, append) {\r\n            var path = this.shape();\r\n            \r\n            path.lineTo(x, y, append);\r\n            this.attr('d', path.command());\r\n\r\n            return this;\r\n        },\r\n\r\n        tail: function() {\r\n            var segments = this.segments();\r\n            if (segments.length) {\r\n                return Graph.point(segments[0][1], segments[0][2]);\r\n            }\r\n            return null;\r\n        },\r\n\r\n        head: function() {\r\n            var segments = this.segments(), maxs;\r\n            if (segments.length) {\r\n                maxs = segments.length - 1;\r\n                return Graph.point(segments[maxs][1], segments[maxs][2]);\r\n            }\r\n            return null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Path';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Matrix = Graph.lang.Matrix = function(a, b, c, d, e, f) {\r\n        this.props = {};\r\n\r\n        this.props.a = _.defaultTo(a, 1);\r\n        this.props.b = _.defaultTo(b, 0);\r\n        this.props.c = _.defaultTo(c, 0);\r\n        this.props.d = _.defaultTo(d, 1);\r\n        this.props.e = _.defaultTo(e, 0);\r\n        this.props.f = _.defaultTo(f, 0);\r\n    };\r\n\r\n    Matrix.options = {\r\n        props: {\r\n            a: 1,\r\n            b: 0,\r\n            c: 0,\r\n            d: 1,\r\n            e: 0,\r\n            f: 0\r\n        }\r\n    };\r\n\r\n    Matrix.extend = Graph.lang.Class.extend;\r\n\r\n    Matrix.prototype.constructor = Matrix;\r\n\r\n    Matrix.prototype.x = function(x, y) {\r\n        return x * this.props.a + y * this.props.c + this.props.e;\r\n    };\r\n\r\n    Matrix.prototype.y = function(x, y) {\r\n        return x * this.props.b + y * this.props.d + this.props.f;\r\n    };\r\n\r\n    Matrix.prototype.get = function(chr) {\r\n        return +this.props[chr].toFixed(4);\r\n    };\r\n\r\n    Matrix.prototype.multiply = function(a, b, c, d, e, f) {\r\n        var\r\n            result = [[], [], []],\r\n            source = [\r\n                [this.props.a, this.props.c, this.props.e],\r\n                [this.props.b, this.props.d, this.props.f],\r\n                [0, 0, 1]\r\n            ],\r\n            matrix = [\r\n                [a, c, e],\r\n                [b, d, f],\r\n                [0, 0, 1]\r\n            ];\r\n\r\n        var x, y, z, tmp;\r\n        \r\n        if (Graph.isMatrix(a)) {\r\n            matrix = [\r\n                [a.props.a, a.props.c, a.props.e],\r\n                [a.props.b, a.props.d, a.props.f],\r\n                [0, 0, 1]\r\n            ];\r\n        }\r\n\r\n        for (x = 0; x < 3; x++) {\r\n            for (y = 0; y < 3; y++) {\r\n                tmp = 0;\r\n                for (z = 0; z < 3; z++) {\r\n                    tmp += source[x][z] * matrix[z][y];\r\n                }\r\n                result[x][y] = tmp;\r\n            }\r\n        }\r\n\r\n        this.props.a = result[0][0];\r\n        this.props.b = result[1][0];\r\n        this.props.c = result[0][1];\r\n        this.props.d = result[1][1];\r\n        this.props.e = result[0][2];\r\n        this.props.f = result[1][2];\r\n\r\n        return this;\r\n    };\r\n\r\n    Matrix.prototype.invert = function(clone) {\r\n        var x = this.props.a * this.props.d - this.props.b * this.props.c;\r\n        var a, b, c, d, e, f;\r\n\r\n        clone = _.defaultTo(clone, false);\r\n\r\n        a =  this.props.d / x;\r\n        b = -this.props.b / x;\r\n        c = -this.props.c / x;\r\n        d =  this.props.a / x;\r\n        e = (this.props.c * this.props.f - this.props.d * this.props.e) / x;\r\n        f = (this.props.b * this.props.e - this.props.a * this.props.f) / x;\r\n\r\n        if (clone) {\r\n            return new Graph.matrix(a, b, c, d, e, f);\r\n        } else {\r\n            this.props.a = a;\r\n            this.props.b = b;\r\n            this.props.c = c;\r\n            this.props.d = d;\r\n            this.props.e = e;\r\n            this.props.f = f;\r\n\r\n            return this;\r\n        }\r\n    };\r\n\r\n    Matrix.prototype.translate = function(x, y) {\r\n        x = _.defaultTo(x, 0);\r\n        y = _.defaultTo(y, 0);\r\n        this.multiply(1, 0, 0, 1, x, y);\r\n\r\n        return this;\r\n    };\r\n\r\n    Matrix.prototype.rotate = function(angle, cx, cy) {\r\n        if (angle === undefined) {\r\n\r\n            var px = this.delta(0, 1),\r\n                py = this.delta(1, 0),\r\n                deg = 180 / Math.PI * Math.atan2(px.y, px.x) - 90,\r\n                rad = Graph.util.rad(deg);\r\n\r\n            return {\r\n                deg: deg,\r\n                rad: rad\r\n            };\r\n        }\r\n\r\n        angle = Graph.util.rad(angle);\r\n        cx = _.defaultTo(cx, 0);\r\n        cy = _.defaultTo(cy, 0);\r\n\r\n        var cos = +Math.cos(angle).toFixed(9),\r\n            sin = +Math.sin(angle).toFixed(9);\r\n\r\n        this.multiply(cos, sin, -sin, cos, cx, cy);\r\n        this.multiply(1, 0, 0, 1, -cx, -cy);\r\n\r\n        return this;\r\n    };\r\n\r\n    Matrix.prototype.scale = function(sx, sy, cx, cy) {\r\n        if (sx === undefined) {\r\n            var prop = this.props,\r\n                sx = Graph.util.hypo(prop.a, prop.b),\r\n                sy = Graph.util.hypo(prop.c, prop.d);\r\n\r\n            if (this.determinant() < 0) {\r\n                sx = -sx;\r\n            }\r\n\r\n            return {\r\n                x: sx,\r\n                y: sy\r\n            };\r\n        }\r\n\r\n        sy = _.defaultTo(sy, sx);\r\n\r\n        if (cx || cy) {\r\n            cx = _.defaultTo(cx, 0);\r\n            cy = _.defaultTo(cy, 0);\r\n        }\r\n\r\n        (cx || cy) && this.multiply(1, 0, 0, 1, cx, cy);\r\n        this.multiply(sx, 0, 0, sy, 0, 0);\r\n        (cx || cy) && this.multiply(1, 0, 0, 1, -cx, -cy);\r\n\r\n        return this;\r\n    };\r\n\r\n    Matrix.prototype.determinant = function() {\r\n        return this.props.a * this.props.d - this.props.b * this.props.c;\r\n    };\r\n\r\n    Matrix.prototype.delta = function(x, y) {\r\n        return {\r\n            x: x * this.props.a + y * this.props.c + 0,\r\n            y: x * this.props.b + y * this.props.d + 0\r\n        };\r\n    };\r\n\r\n    Matrix.prototype.data = function() {\r\n        var px = this.delta(0, 1),\r\n            py = this.delta(1, 0),\r\n            skewX = 180 / Math.PI * Math.atan2(px.y, px.x) - 90,\r\n            radSkewX = Graph.util.rad(skewX),\r\n            cosSkewX = Math.cos(radSkewX),\r\n            sinSkewX = Math.sin(radSkewX),\r\n            scaleX = Graph.util.hypo(this.props.a, this.props.b),\r\n            scaleY = Graph.util.hypo(this.props.c, this.props.d),\r\n            radian = Graph.util.rad(skewX);\r\n\r\n        if (this.determinant() < 0) {\r\n            scaleX = -scaleX;\r\n        }\r\n\r\n        return {\r\n            x: this.props.e,\r\n            y: this.props.f,\r\n            dx: (this.props.e * cosSkewX + this.props.f *  sinSkewX) / scaleX,\r\n            dy: (this.props.f * cosSkewX + this.props.e * -sinSkewX) / scaleY,\r\n            skewX: -skewX,\r\n            skewY: 180 / Math.PI * Math.atan2(py.y, py.x),\r\n            scaleX: scaleX,\r\n            scaleY: scaleY,\r\n            rotate: skewX,\r\n            rad: radian,\r\n            sin: Math.sin(radian),\r\n            cos: Math.cos(radian),\r\n            a: this.props.a,\r\n            b: this.props.b,\r\n            c: this.props.c,\r\n            d: this.props.d,\r\n            e: this.props.e,\r\n            f: this.props.f\r\n        };\r\n    };\r\n\r\n    Matrix.prototype.toFilter = function() {\r\n        return \"progid:DXImageTransform.Microsoft.Matrix(\" +\r\n           \"M11=\" + this.get('a') + \", \" +\r\n           \"M12=\" + this.get('c') + \", \" +\r\n           \"M21=\" + this.get('b') + \", \" +\r\n           \"M22=\" + this.get('d') + \", \" +\r\n           \"Dx=\"  + this.get('e') + \", \" +\r\n           \"Dy=\"  + this.get('f') + \", \" +\r\n           \"sizingmethod='auto expand'\"  +\r\n        \")\";\r\n    };\r\n\r\n    Matrix.prototype.toArray = function() {\r\n        return [\r\n            [this.get('a'), this.get('c'), this.get('e')],\r\n            [this.get('b'), this.get('d'), this.get('f')],\r\n            [0, 0, 1]\r\n        ];\r\n    };\r\n\r\n    Matrix.prototype.toValue = function() {\r\n        return _.format(\r\n            'matrix({0},{1},{2},{3},{4},{5})',\r\n            this.get('a'),\r\n            this.get('b'),\r\n            this.get('c'),\r\n            this.get('d'),\r\n            this.get('e'),\r\n            this.get('f')\r\n        );\r\n    };\r\n\r\n    Matrix.prototype.toString = function() {\r\n        return 'Graph.lang.Matrix';\r\n    };\r\n\r\n    Matrix.prototype.clone = function() {\r\n        return new Matrix(\r\n            this.props.a,\r\n            this.props.b,\r\n            this.props.c,\r\n            this.props.d,\r\n            this.props.e,\r\n            this.props.f\r\n        );\r\n    };\r\n\r\n    ///////// EXTENSION /////////\r\n\r\n    Graph.isMatrix = function(obj) {\r\n        return obj instanceof Graph.lang.Matrix;\r\n    };\r\n\r\n    Graph.matrix = function(a, b, c, d, e, f) {\r\n        return new Graph.lang.Matrix(a, b, c, d, e, f);\r\n    };\r\n\r\n}());\r\n","\r\n(function(){\r\n    \r\n    var storage = {},\r\n        context = {};\r\n\r\n    var Registry = function() {\r\n\r\n    };\r\n\r\n    Registry.prototype.constructor = Registry;\r\n\r\n    Registry.prototype.register = function(vector) {\r\n        var id = vector.guid(), found = this.get(id);\r\n        \r\n        if (found !== vector) {\r\n            // vector.on('afterresize', function(){\r\n            //     if (vector.isConnectable()) {\r\n            //         var delay = _.delay(function(){\r\n            //             clearTimeout(delay);\r\n            //             Graph.registry.link.synchronize(vector);\r\n            //         }, 1);\r\n            //     }\r\n            // });\r\n\r\n            // vector.on('translate', function(){\r\n            //     if (vector.isConnectable()) {\r\n            //         var delay = _.delay(function(){\r\n            //             clearTimeout(delay);\r\n            //             Graph.registry.link.synchronize(vector);\r\n            //         }, 1);\r\n            //     }\r\n            // });\r\n        }\r\n\r\n        storage[id] = vector;\r\n    };\r\n\r\n    Registry.prototype.unregister = function(vector) {\r\n        var id = vector.guid();\r\n        if (storage[id]) {\r\n            delete storage[id];\r\n        }\r\n\r\n        if (context[id]) {\r\n            delete context[id];\r\n        }\r\n    };\r\n\r\n    Registry.prototype.setContext = function(id, scope) {\r\n        if (storage[id]) {\r\n            context[id] = scope;\r\n        }\r\n    };\r\n\r\n    Registry.prototype.size = function() {\r\n        return _.keys(storage).length;\r\n    };\r\n\r\n    Registry.prototype.toArray = function() {\r\n        var keys = _.keys(storage);\r\n        return _.map(keys, function(k){\r\n            return storage[k];\r\n        });\r\n    };\r\n\r\n    Registry.prototype.get = function(key) {\r\n\r\n        if (_.isUndefined(key)) {\r\n            return this.toArray();\r\n        }\r\n\r\n        if (key instanceof SVGElement) {\r\n            if (key.tagName == 'tspan') {\r\n                // we only interest to text\r\n                key = key.parentNode;\r\n            }\r\n            key = Graph.$(key).data(Graph.string.ID_VECTOR);\r\n        } else if (key instanceof Graph.dom.Element) {\r\n            key = key.data(Graph.string.ID_VECTOR);\r\n        }\r\n        return storage[key];\r\n    };\r\n\r\n    Registry.prototype.collect = function(scope) {\r\n        var vectors = [];\r\n        for (var id in context) {\r\n            if (context[id] == scope && storage[id]) {\r\n                vectors.push(storage[id]);\r\n            }\r\n        }\r\n        return vectors;\r\n    };\r\n\r\n    Registry.prototype.wipe = function(paper) {\r\n        var pid = paper.guid();\r\n\r\n        for (var id in storage) {\r\n            if (storage.hasOwnProperty(id)) {\r\n                if (storage[id].tree.paper == pid) {\r\n                    delete storage[id];\r\n                }\r\n            }\r\n        }\r\n\r\n        if (storage[pid]) {\r\n            delete storage[pid];\r\n        }\r\n    };\r\n\r\n    Registry.prototype.toString = function() {\r\n        return 'Graph.registry.Vector';\r\n    };\r\n    \r\n    Graph.registry.vector = new Registry();\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Shape = Graph.shape.Shape = Graph.extend({\r\n\r\n        props: {\r\n            id: null,\r\n            guid: null,\r\n            width: 0,\r\n            height: 0,\r\n            label: '',\r\n            alias: '',\r\n            fill: 'rgb(255, 255, 255)',\r\n            stroke: 'rgb(0, 0, 0)',\r\n            strokeWidth: 2\r\n        },\r\n\r\n        components: {\r\n            shape: null,\r\n            block: null,\r\n            label: null,\r\n            child: null\r\n        },\r\n\r\n        layout: {\r\n            suspended: false\r\n        },\r\n\r\n        tree: {\r\n            paper: null,\r\n            parent: null,\r\n            children: null\r\n        },\r\n\r\n        metadata: {\r\n            type: null,\r\n            icon: Graph.icons.SHAPE,\r\n            style: 'graph-shape',\r\n            tools: null\r\n        },\r\n\r\n        cached: {\r\n\r\n        },\r\n\r\n        plugins: {\r\n            manager: null\r\n        },\r\n\r\n        constructor: function(options) {\r\n            var guid;\r\n\r\n            this.data(options || {});\r\n\r\n            guid = 'graph-shape-' + (++Shape.guid);\r\n\r\n            this.props.guid = guid;\r\n            this.tree.children = new Graph.collection.Shape();\r\n            this.plugins.manager = new Graph.plugin.Manager();\r\n\r\n            this.initComponent();\r\n            this.initMetadata();\r\n\r\n            if (this.components.shape) {\r\n                var style = Graph.styles.SHAPE,\r\n                    shape = this.component();\r\n\r\n                if (this.metadata.style) {\r\n                    style += ' ' + this.metadata.style;\r\n                }\r\n\r\n                shape.addClass(style);\r\n                shape.attr('data-shape', guid);\r\n\r\n                style = null;\r\n            }\r\n\r\n            Graph.registry.shape.register(this);\r\n\r\n            guid = null;\r\n        },\r\n\r\n        data: function(name, value) {\r\n            if (name === undefined && value === undefined) {\r\n                return this.props;\r\n            }\r\n\r\n            var excludes = {\r\n                type: true,\r\n                client_id: true,\r\n                client_parent: true,\r\n                client_pool: true,\r\n                diagram_id: true,\r\n                parent_id: true,\r\n                params: true\r\n            };\r\n\r\n            var maps = {\r\n                stroke_width: 'strokeWidth'\r\n            };\r\n\r\n            var map, key;\r\n\r\n            if (_.isPlainObject(name)) {\r\n                for (key in name) {\r\n                    if ( ! excludes[key]) {\r\n                        map = maps[key] || key;\r\n                        this.props[map] = name[key];    \r\n                    }\r\n                }\r\n                return this;\r\n            }\r\n\r\n            if (value === undefined) {\r\n                return this.props[name];\r\n            }\r\n\r\n            if ( ! excludes[name]) {\r\n                map = maps[name] || name;\r\n                this.props[map] = value;    \r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        update: function(data) {\r\n            data = data || {};\r\n\r\n            if (data.props) {\r\n                this.data(data.props);\r\n            }\r\n        },\r\n\r\n        redraw: function(props) {\r\n            var key;\r\n            \r\n            props = props || {};\r\n\r\n            this.suspendLayout();\r\n\r\n            for (key in props) {\r\n                if (this[key] !== undefined && _.isFunction(this[key])) {\r\n                    this[key](props[key]);\r\n                }\r\n            }\r\n\r\n            this.resumeLayout();\r\n            this.refresh();\r\n        },\r\n\r\n        is: function(type) {\r\n            return this.metadata.type == type;\r\n        },\r\n\r\n        initMetadata: function() {\r\n            this.metadata.tools = [\r\n                {\r\n                    name: 'config',\r\n                    icon: Graph.icons.CONFIG,\r\n                    title: Graph._('Click to config shape'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onConfigToolClick, this)\r\n                },\r\n                {\r\n                    name: 'link',\r\n                    icon: Graph.icons.LINK,\r\n                    title: Graph._('Click to start shape linking'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onLinkToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtofront',\r\n                    icon: Graph.icons.SEND_TO_FRONT,\r\n                    title: Graph._('Send to front'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onFrontToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtoback',\r\n                    icon: Graph.icons.SEND_TO_BACK,\r\n                    title: Graph._('Send to back'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBackToolClick, this)\r\n                },\r\n                {\r\n                    name: 'trash',\r\n                    icon: Graph.icons.TRASH,\r\n                    title: Graph._('Click to remove shape'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onTrashToolClick, this)\r\n                }\r\n            ];\r\n        },\r\n\r\n        initComponent: function() {\r\n            var shape = (new Graph.svg.Group());\r\n            this.components.shape = shape.guid();\r\n            shape = null;\r\n        },\r\n\r\n        component: function(name) {\r\n            var manager = Graph.registry.vector;\r\n            if (name === undefined) {\r\n                return manager.get(this.components.shape);\r\n            }\r\n            return manager.get(this.components[name]);\r\n        },\r\n\r\n        invalidate: function() {\r\n            for (var key in this.cached) {\r\n                this.cached[key] = null;\r\n            }\r\n        },\r\n\r\n        connectable: function() {\r\n            return this.plugins.manager.get('network');\r\n        },\r\n\r\n        resizable: function() {\r\n            return this.plugins.manager.get('resizer');\r\n        },\r\n\r\n        draggable: function() {\r\n            return this.plugins.manager.get('dragger');\r\n        },\r\n\r\n        snappable: function() {\r\n            return this.plugins.manager.get('snapper');\r\n        },\r\n\r\n        editable: function() {\r\n            return this.plugins.manager.get('editor');  \r\n        },\r\n\r\n        paper: function() {\r\n            return Graph.registry.vector.get(this.tree.paper);\r\n        },\r\n\r\n        parent: function() {\r\n            return Graph.registry.shape.get(this.tree.parent);\r\n        },\r\n\r\n        children: function() {\r\n            return this.tree.children;\r\n        },\r\n\r\n        hasChild: function(child) {\r\n            return this.children().has(child);\r\n        },\r\n\r\n        addChild: function(child, relocate) {\r\n            var children = this.children(),\r\n                placeTarget = this.component('child'),\r\n                guid = this.guid(),\r\n                me = this;\r\n\r\n            relocate = _.defaultTo(relocate, true);\r\n\r\n            if ( ! _.isArray(child)) {\r\n                child = [child];\r\n            }\r\n\r\n            var beforeDestroyHandler = _.bind(this.onChildBeforeDestroy, this);\r\n\r\n            _.forEach(child, function(shape){\r\n                var parent = shape.parent();\r\n\r\n                if (parent && parent.guid() != guid) {\r\n                    parent.removeChild(shape);\r\n                }\r\n\r\n                if ( ! children.has(shape)) {\r\n                    var shapeComponent = shape.component();\r\n\r\n                    if (relocate) {\r\n                        shapeComponent.relocate(placeTarget);    \r\n                    } else {\r\n                        placeTarget.append(shapeComponent);\r\n                    }\r\n                    \r\n                    shape.cached.beforeDestroyHandler = _.bind(me.onChildBeforeDestroy, me);\r\n                    shape.cached.afterDragHandler = _.bind(me.onChildAfterDrag, me);\r\n                    shape.cached.connectHandler = _.bind(me.onChildConnect, me);\r\n\r\n                    shape.on('beforedestroy', shape.cached.beforeDestroyHandler);\r\n                    shape.on('afterdrag', shape.cached.afterDragHandler);\r\n                    shape.on('connect', shape.cached.connectHandler);\r\n\r\n                    children.push(shape);\r\n                    shape.tree.parent = guid;\r\n\r\n                    // update shape props\r\n                    var matrix = shapeComponent.matrix();\r\n\r\n                    shape.data({\r\n                        left: matrix.props.e,\r\n                        top: matrix.props.f\r\n                    });\r\n                }\r\n            });\r\n\r\n            if (relocate) {\r\n                this.autoResize();    \r\n            }\r\n        },\r\n\r\n        removeChild: function(child) {\r\n            var children = this.children();\r\n\r\n            if (children.has(child)) {\r\n                children.pull(child);\r\n                child.tree.parent = null;\r\n            }\r\n        },\r\n\r\n        guid: function() {\r\n            return this.props.guid;\r\n        },\r\n\r\n        matrix: function() {\r\n            return this.component().matrix();\r\n        },\r\n\r\n        bbox: function() {\r\n            return Graph.bbox({\r\n                 x: this.props.left,\r\n                 y: this.props.top,\r\n                x2: this.props.left + this.props.width,\r\n                y2: this.props.top + this.props.height,\r\n                width: this.props.width,\r\n                height: this.props.height\r\n            });\r\n        },\r\n\r\n        render: function(paper) {\r\n            var guid = this.guid(),\r\n                paperGuid = paper.guid();\r\n\r\n            var component = this.component();\r\n            component && component.render(paper);\r\n\r\n            // save\r\n            this.tree.paper = paperGuid;\r\n            Graph.registry.shape.setContext(guid, paperGuid);\r\n        },\r\n\r\n        select: function(single) {\r\n            var blockComponent = this.component('block'),\r\n                paper = this.paper();\r\n\r\n            single = _.defaultTo(single, false);\r\n\r\n            if (single && paper) {\r\n                paper.collector().clearCollection();\r\n            }\r\n\r\n            if (blockComponent) {\r\n                blockComponent.select();\r\n            }\r\n        },\r\n\r\n        deselect: function() {\r\n            var blockComponent = this.component('block');\r\n            if (blockComponent) {\r\n                blockComponent.deselect();\r\n            }\r\n        },\r\n\r\n        remove: function() {\r\n            // just fire block removal\r\n            this.component('block').remove();\r\n        },\r\n\r\n        refresh: _.debounce(function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n\r\n            var label = this.component('label'),\r\n                block = this.component('block'),\r\n                bound = block.bbox().toJson();\r\n\r\n            label.attr({\r\n                x: bound.x + bound.width  / 2,\r\n                y: bound.x + bound.height / 2\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n        }, 1),\r\n\r\n        autoResize: function() {\r\n\r\n        },\r\n\r\n        center: function() {\r\n            var bbox = this.bbox().toJson();\r\n            return {\r\n                x: (bbox.x + bbox.x2) / 2,\r\n                y: (bbox.y + bbox.y2) / 2\r\n            };\r\n        },\r\n\r\n        translate: function(dx, dy) {\r\n            var component = this.component();\r\n            component.translate(dx, dy).commit();\r\n\r\n            // update props\r\n            var matrix = component.matrix(),\r\n                left = matrix.props.e,\r\n                top = matrix.props.f;\r\n\r\n            this.data({\r\n                left: left,\r\n                top: top\r\n            });\r\n\r\n            var childComponent = this.component('child');\r\n\r\n            if (childComponent) {\r\n                childComponent.dirty(true);\r\n            }\r\n\r\n        },\r\n\r\n        cascade: function(handler) {\r\n            cascade(this, handler);\r\n        },\r\n\r\n        sendToBack: function() {\r\n            var paper = this.paper();\r\n        },\r\n\r\n        sendToFront: function() {\r\n            var paper = this.paper();\r\n            paper.viewport().elem.append(this.component().elem);\r\n        },\r\n\r\n        suspendLayout: function() {\r\n            this.layout.suspended = true;\r\n        },\r\n\r\n        resumeLayout: function() {\r\n            this.layout.suspended = false;\r\n        },\r\n\r\n        /**\r\n         *  Use this method only for updating `width`, `height`, `left`, `top`\r\n         *  otherwise use data()\r\n         */\r\n        attr: function(name, value) {\r\n            var me = this;\r\n\r\n            if (_.isPlainObject(name)) {\r\n                _.forOwn(name, function(v, k){\r\n                    me.props[k] = v;\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (value === undefined) {\r\n                return this.props[name];\r\n            }\r\n\r\n            this.props[name] = value;\r\n            return this;\r\n        },\r\n\r\n        height: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.height;\r\n            }\r\n\r\n            var block = this.component('block'),\r\n                box = block.bbox().toJson(),\r\n                sx = 1,\r\n                sy = value / this.props.height,\r\n                cx = (box.x + box.x2) / 2,\r\n                cy = box.y,\r\n                dx = 0,\r\n                dy = 0;\r\n\r\n            var resize = block.resize(sx, sy, cx, cy, dx, dy);\r\n            block.fire('afterresize', resize);\r\n            \r\n            this.props.height = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        width: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.width;\r\n            }\r\n\r\n            var block = this.component('block'),\r\n                box = block.bbox().toJson(),\r\n                sx = value / this.props.width,\r\n                sy = 1,\r\n                cx = box.x,\r\n                cy = (box.y + box.y2) / 2,\r\n                dx = 0,\r\n                dy = 0;\r\n\r\n            var resize = block.resize(sx, sy, cx, cy, dx, dy);\r\n            block.fire('afterresize', resize);\r\n\r\n            this.props.width = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        left: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.left;\r\n            }\r\n\r\n            var shape = this.component(),\r\n                matrix = shape.matrix(),\r\n                dx = value - matrix.props.e,\r\n                dy = 0;\r\n\r\n            shape.translate(dx, dy).commit();\r\n            this.props.left = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        top: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.top;\r\n            }\r\n\r\n            var shape = this.component(),\r\n                matrix = shape.matrix(),\r\n                dx = 0,\r\n                dy = value - matrix.props.f;\r\n\r\n            shape.translate(dx, dy).commit();\r\n            this.props.top = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        label: function(label) {\r\n            if (label === undefined) {\r\n                return this.props.label;\r\n            }\r\n\r\n            var blockComponent = this.component('block'),\r\n                labelComponent = this.component('label');\r\n\r\n            labelComponent.props.text = label;\r\n            blockComponent.data('text', label);\r\n\r\n            this.props.label = label;\r\n            this.refresh();\r\n        },\r\n\r\n        fill: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.fill;\r\n            }\r\n            \r\n            this.props.fill = value;\r\n            this.component('block').elem.css('fill', value);\r\n        },\r\n\r\n        stroke: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.stroke;\r\n            }\r\n            \r\n            this.props.stroke = value;\r\n            this.component('block').elem.css('stroke', value);\r\n        },\r\n\r\n        strokeWidth: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.strokeWidth;\r\n            }\r\n\r\n            this.props.strokeWidth = value;\r\n            this.component('block').elem.css('stroke-width', value);\r\n        },\r\n\r\n        connect: function(target, start, end, options){\r\n            var sourceNetwork = this.connectable().plugin(),\r\n                targetNetwork = target.connectable().plugin();\r\n\r\n            if (sourceNetwork && targetNetwork) {\r\n                return sourceNetwork.connect(targetNetwork, start, end, options);\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        disconnect: function(target, link) {\r\n            var sourceNetwork = this.connectable().plugin(),\r\n                targetNetwork = target.connectable().plugin();\r\n\r\n            if (sourceNetwork && targetNetwork) {\r\n                return sourceNetwork.disconnect(targetNetwork, link);\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        toJson: function() {\r\n            var blockComponent = this.component('block'),\r\n                paper = this.paper();\r\n\r\n            var shape = {\r\n                metadata: {\r\n\r\n                },\r\n                props: {\r\n                    id: this.props.id,\r\n                    type: this.toString(),\r\n                    guid: this.props.guid,\r\n                    parent: this.tree.parent,\r\n                    label: this.props.label,\r\n                    left: this.props.left,\r\n                    top: this.props.top,\r\n                    width: this.props.width,\r\n                    height: this.props.height,\r\n                    fill: this.props.fill,\r\n                    strokeWidth: this.props.strokeWidth,\r\n                    stroke: this.props.stroke\r\n                },\r\n                params: [\r\n                    {key: 'Source', value: 'db.employee'}\r\n                ],\r\n                links: [\r\n\r\n                ]\r\n            };\r\n\r\n            var network = this.connectable().plugin();\r\n\r\n            if (network) {\r\n                var connections = network.connections();\r\n\r\n                _.forEach(connections, function(conn){\r\n                    var linkData = conn.link.toJson();\r\n\r\n                    shape.links.push({\r\n                        guid: conn.guid,\r\n                        mode: conn.type,\r\n                        pair: conn.type == 'outgoing' ? linkData.props.target : linkData.props.source\r\n                    });\r\n                });\r\n            }\r\n\r\n            return shape;\r\n        },\r\n\r\n        onLabelEdit: function(e) {\r\n            this.label(e.text);\r\n        },\r\n\r\n        onBeforeDrag: function(e) {\r\n            this.paper().diagram().capture();\r\n            this.component().addClass('shape-dragging');\r\n        },\r\n\r\n        onAfterDrag: function(e) {\r\n            var blockComponent = this.component('block'),\r\n                shapeComponent = this.component('shape'),\r\n                childComponent = this.component('child'),\r\n                blockMatrix = blockComponent.matrix();\r\n\r\n            var shapeMatrix;\r\n\r\n            blockComponent.reset();\r\n\r\n            shapeComponent.matrix().multiply(blockMatrix);\r\n            shapeComponent.attr('transform', shapeComponent.matrix().toValue());\r\n            shapeComponent.dirty(true);\r\n\r\n            if (childComponent) {\r\n                childComponent.dirty(true);\r\n            }\r\n\r\n            // update props\r\n            shapeMatrix = shapeComponent.matrix();\r\n\r\n            this.data({\r\n                left: shapeMatrix.props.e,\r\n                top: shapeMatrix.props.f\r\n            });\r\n\r\n            // forward\r\n            this.fire(e);\r\n            shapeComponent.removeClass('shape-dragging');\r\n        },\r\n\r\n        onSelect: function(e) {\r\n            this.component('shape').addClass('shape-selected');\r\n            if (e.initial) {\r\n                Graph.topic.publish('shape:select', {shape: this});    \r\n            }\r\n        },\r\n\r\n        onDeselect: function(e) {\r\n            this.component('shape').removeClass('shape-selected');\r\n            if (e.initial) {\r\n                Graph.topic.publish('shape:deselect', {shape: this});\r\n            }\r\n        },\r\n\r\n        onConnect: function(e) {\r\n            var link = e.link,\r\n                sourceVector = link.router.source(),\r\n                targetVector = link.router.target();\r\n\r\n            if (sourceVector && targetVector) {\r\n                var sourceShape = Graph.registry.shape.get(sourceVector),\r\n                    targetShape = Graph.registry.shape.get(targetVector);\r\n\r\n                if (sourceShape && targetShape) {\r\n                    this.fire('connect', {\r\n                        link: link,\r\n                        source: sourceShape,\r\n                        target: targetShape\r\n                    });\r\n                }\r\n            }\r\n        },\r\n\r\n        onAfterResize: function() {\r\n            this.refresh();\r\n        },\r\n\r\n        onBeforeDestroy: function() {\r\n            this.fire('beforedestroy', {shape: this});\r\n        },\r\n\r\n        onAfterDestroy: function() {\r\n            // remove label\r\n            this.component('label').remove();\r\n\r\n            // remove shape\r\n            this.component('shape').remove();\r\n\r\n            for (var name in this.components) {\r\n                this.components[name] = null;\r\n            }\r\n\r\n            this.fire('afterdestroy', {shape: this});\r\n            Graph.registry.shape.unregister(this);\r\n        },\r\n\r\n        onChildConnect: function(e) {\r\n\r\n        },\r\n\r\n        onChildAfterDrag: function(e) {\r\n            var childComponent;\r\n\r\n            if (e.batch) {\r\n                if (e.master) {\r\n                    childComponent = this.component('child');\r\n                    if (childComponent) {\r\n                        childComponent.dirty(true);\r\n                    }\r\n                }\r\n            } else {\r\n                childComponent = this.component('child');\r\n                if (childComponent) {\r\n                    childComponent.dirty(true);\r\n                }\r\n            }\r\n        },\r\n\r\n        onChildBeforeDestroy: function(e) {\r\n            var shape = e.shape;\r\n\r\n            this.children().pull(shape);\r\n\r\n            shape.off('beforedestroy', shape.cached.beforeDestroyHandler);\r\n            shape.off('afterdrag', shape.cached.afterDragHandler);\r\n            shape.off('connect', shape.cached.connectHandler);\r\n\r\n            shape.cached.beforeDestroyHandler = null;\r\n            shape.cached.afterDragHandler = null;\r\n            shape.cached.connectHandler = null;\r\n\r\n            var childComponent = shape.component('child');\r\n\r\n            if (childComponent) {\r\n                childComponent.dirty(true);\r\n            }\r\n        },\r\n\r\n        onConfigToolClick: function(e) {\r\n\r\n        },\r\n\r\n        onTrashToolClick: function(e) {\r\n            this.paper().diagram().capture();\r\n            this.remove();\r\n        },\r\n\r\n        onLinkToolClick: function(e) {\r\n            var paper = this.paper();\r\n\r\n            if (paper) {\r\n                var layout = paper.layout(),\r\n                    linker = paper.plugins.linker,\r\n                    coord  = layout.pointerLocation(e);\r\n\r\n                paper.tool().activate('linker');\r\n                linker.start(this.connectable().component(), coord);\r\n            }\r\n        },\r\n\r\n        onFrontToolClick: function(e) {\r\n            this.sendToFront();\r\n        },\r\n\r\n        onBackToolClick: function(e) {\r\n            this.sendToBack();\r\n        }\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n    Shape.guid = 0;\r\n\r\n    ///////// EXTENSION /////////\r\n\r\n    Graph.isShape = function(obj) {\r\n        return obj instanceof Graph.shape.Shape;\r\n    };\r\n\r\n    ///////// HELPERS /////////\r\n\r\n    function cascade(shape, handler) {\r\n        var child = shape.children().toArray();\r\n        var result;\r\n\r\n        result = handler.call(shape, shape);\r\n        result = _.defaultTo(result, true);\r\n\r\n        if (result && child.length) {\r\n            _.forEach(child, function(curr){\r\n                cascade(curr, handler);\r\n            });\r\n        }\r\n    }\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var Tree = Graph.collection.Tree = function(nodes) {\r\n        var me = this;\r\n\r\n        me.nodes = nodes;\r\n        \r\n        me.key = function(node){ return node; };\r\n\r\n        me.bisect = _.bisector(function(node){ \r\n            return me.key(node); \r\n        }).left;\r\n    };\r\n\r\n    Tree.prototype.get = function(index) {\r\n        return this.nodes[index];\r\n    };\r\n\r\n    Tree.prototype.size = function() {\r\n        return this.nodes.length;\r\n    };\r\n\r\n    Tree.prototype.insert = function(node) {\r\n        var index = this.index(node),\r\n            value = this.key(node);\r\n\r\n        if (this.nodes[index] && value == this.key(this.nodes[index])) {\r\n            return;\r\n        }\r\n\r\n        this.nodes.splice(index, 0, node);\r\n\r\n        return index;\r\n    };\r\n\r\n    Tree.prototype.remove = function(node) {\r\n        var index = this.index(node);\r\n        this.nodes.splice(index, 1);\r\n        \r\n        return index;\r\n    };\r\n\r\n    Tree.prototype.keygen = function(keygen) {\r\n        this.key = keygen;\r\n        return this;\r\n    };\r\n\r\n    Tree.prototype.index = function(node) {\r\n        return this.bisect(this.nodes, this.key(node));\r\n    };\r\n\r\n    Tree.prototype.order = function() {\r\n        this.nodes.sort(_.ascendingKey(this.key));\r\n        return this;\r\n    };\r\n    \r\n    Tree.prototype.root = function() {\r\n        return this.nodes[0];\r\n    };\r\n    \r\n    Tree.prototype.cascade = function(node, iteratee) {\r\n        var index = this.index(node),\r\n            nodes = this.nodes,\r\n            count = this.nodes.length;\r\n        \r\n        var start = 0;\r\n        \r\n        for (var n = index; n < count; n++) {\r\n            iteratee(nodes[n], start);\r\n            start++;\r\n        }\r\n    };\r\n\r\n    Tree.prototype.bubble = function(node, iteratee) {\r\n        var index = this.index(node),\r\n            nodes = this.nodes;\r\n\r\n        var start = 0;\r\n\r\n        for (var n = index; n >= 0; n--) {\r\n            iteratee(nodes[n], start);\r\n            start++;\r\n        }\r\n    };\r\n\r\n    Tree.prototype.toArray = function() {\r\n        return this.nodes.slice();\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Link = Graph.link.Link = Graph.extend({\r\n\r\n        props: {\r\n            id: null,\r\n            guid: null,\r\n            type: 'normal',\r\n            rendered: false,\r\n            selected: false,\r\n            label: '',\r\n            labelDistance: .5,\r\n            source: null,\r\n            target: null,\r\n            connected: false,\r\n            removed: false\r\n        },\r\n\r\n        components: {\r\n            block: null,\r\n            coat: null,\r\n            path: null,\r\n            label: null,\r\n            editor: null\r\n        },\r\n\r\n        cached: {\r\n            bendpoints: null,\r\n            controls: null,\r\n            convex: null\r\n        },\r\n\r\n        handlers: {\r\n            source: null,\r\n            target: null\r\n        },\r\n\r\n        router: null,\r\n\r\n        metadata: {\r\n            icon: Graph.icons.SHAPE_LINK\r\n        },\r\n\r\n        constructor: function(router, options) {\r\n            var guid;\r\n            this.data(options || {});\r\n\r\n            guid = 'graph-link-' + (++Link.guid);\r\n\r\n            this.props.guid = guid;\r\n            this.router = router;\r\n\r\n            this.initComponent();\r\n            this.initMetadata();\r\n\r\n            this.bindResource('source', router.source());\r\n            this.bindResource('target', router.target());\r\n\r\n            this.router.on('route', _.bind(this.onRouterRoute, this));\r\n            this.router.on('reroute', _.bind(this.onRouterReroute, this));\r\n\r\n            Graph.registry.link.register(this);\r\n        },\r\n\r\n        data: function(name, value) {\r\n            if (name === undefined && value === undefined) {\r\n                return this.props;\r\n            }\r\n\r\n            var excludes = {\r\n                type: true,\r\n                client_id: true,\r\n                client_source: true,\r\n                client_target: true,\r\n                router_type: true,\r\n                diagram_id: true,\r\n                source_id: true,\r\n                target_id: true,\r\n                command: true,\r\n                params: true\r\n            };\r\n\r\n            var maps = {\r\n                label_distance: 'labelDistance'\r\n            };\r\n\r\n            var key, map;\r\n\r\n            if (_.isPlainObject(name)) {\r\n                for (var key in name) {\r\n                    if ( ! excludes[key]) { \r\n                        map = maps[key] || key;\r\n                        this.props[map] = name[key];    \r\n                    }\r\n                }\r\n                return this;\r\n            }\r\n\r\n            if (value === undefined) {\r\n                return this.props[name];\r\n            }\r\n\r\n            if ( ! excludes[name]) {\r\n                map = maps[name] || name;\r\n                this.props[map] = value;    \r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components;\r\n            var block, coat, path, editor, label;\r\n\r\n            block = (new Graph.svg.Group())\r\n                .addClass('graph-link')\r\n                .selectable(false);\r\n\r\n            block.elem.data(Graph.string.ID_LINK, this.props.guid);\r\n            block.addClass('link-' + this.props.type);\r\n\r\n            coat = (new Graph.svg.Path())\r\n                .addClass('graph-link-coat')\r\n                .render(block);\r\n\r\n            coat.data('text', this.props.label);\r\n            coat.elem.data(Graph.string.ID_LINK, this.props.guid);\r\n\r\n            coat.draggable({\r\n                ghost: true,\r\n                manual: true,\r\n                batchSync: false\r\n            });\r\n\r\n            coat.editable({\r\n                width: 150,\r\n                height: 80,\r\n                offset: 'pointer'\r\n            });\r\n\r\n            coat.on('pointerdown.link', _.bind(this.onCoatClick, this));\r\n            coat.on('select.link', _.bind(this.onCoatSelect, this));\r\n            coat.on('deselect.link', _.bind(this.onCoatDeselect, this));\r\n            coat.on('beforedrag.link', _.bind(this.onCoatBeforeDrag, this));\r\n            coat.on('afterdrag.link', _.bind(this.onCoatAfterDrag, this));\r\n            coat.on('edit.link', _.bind(this.onCoatEdit, this));\r\n            coat.on('beforeedit.link', _.bind(this.onCoatBeforeEdit, this));\r\n            coat.on('afterdestroy.link', _.bind(this.onCoatAfterDestroy, this));\r\n\r\n            path = (new Graph.svg.Path())\r\n                .addClass('graph-link-path')\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .attr('marker-end', 'url(#marker-link-end)')\r\n                .render(block);\r\n\r\n            if (this.props.type == 'message') {\r\n                path.attr('marker-start', 'url(#marker-link-start-circle)');\r\n            }\r\n\r\n            path.elem.data(Graph.string.ID_LINK, this.props.guid);\r\n\r\n            label = (new Graph.svg.Text(0, 0, ''))\r\n                .addClass('graph-link-label')\r\n                .selectable(false)\r\n                .render(block);\r\n\r\n            label.draggable({ghost: true});\r\n\r\n            label.on('render.link', _.bind(this.onLabelRender, this));\r\n            label.on('afterdrag.link', _.bind(this.onLabelAfterDrag, this));\r\n\r\n            // enable label doubletap\r\n            var labelVendor = label.interactable().vendor();\r\n            labelVendor.on('doubletap', _.bind(this.onLabelDoubletap, this));\r\n\r\n            editor = (new Graph.svg.Group())\r\n                .selectable(false)\r\n                .render(block);\r\n\r\n            comp.block = block.guid();\r\n            comp.coat = coat.guid();\r\n            comp.path = path.guid();\r\n            comp.label = label.guid();\r\n            comp.editor = editor.guid();\r\n        },\r\n\r\n        initMetadata: function() {\r\n            this.metadata.tools = [\r\n                {\r\n                    name: 'config',\r\n                    icon: Graph.icons.CONFIG,\r\n                    title: Graph._('Click to config link'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onConfigToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtofront',\r\n                    icon: Graph.icons.SEND_TO_FRONT,\r\n                    title: Graph._('Send to front'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onFrontToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtoback',\r\n                    icon: Graph.icons.SEND_TO_BACK,\r\n                    title: Graph._('Send to back'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBackToolClick, this)\r\n                },\r\n                {\r\n                    name: 'trash',\r\n                    icon: Graph.icons.TRASH,\r\n                    title: Graph._('Click to remove link'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onTrashToolClick, this)\r\n                }\r\n            ];\r\n        },\r\n\r\n        unbindResource: function(type) {\r\n            var existing = this.props[type],\r\n                handlers = this.handlers[type];\r\n\r\n            if (existing) {\r\n                var vector = Graph.registry.vector.get(existing);\r\n                if (vector) {\r\n                    if (handlers) {\r\n                        var name, ns;\r\n                        for (name in handlers) {\r\n                            ns = name + '.link';\r\n                            vector.off(ns, handlers[name]);\r\n                            ns = null;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            handlers = null;\r\n\r\n            return this;\r\n        },\r\n\r\n        bindResource: function(type, resource) {\r\n            var router = this.router,\r\n                handlers = this.handlers[type];\r\n\r\n            this.unbindResource(type, resource);\r\n\r\n            handlers = {};\r\n\r\n            handlers.afterresize = _.bind(getHandler(this, type, 'AfterResize'), this);\r\n            handlers.select = _.bind(getHandler(this, type, 'Select'), this);\r\n            handlers.rotate = _.bind(getHandler(this, type, 'Rotate'), this);\r\n            handlers.beforedrag = _.bind(getHandler(this, type, 'BeforeDrag'), this, _, resource);\r\n            handlers.drag = _.bind(getHandler(this, type, 'Drag'), this);\r\n            handlers.afterdrag = _.bind(getHandler(this, type, 'AfterDrag'), this);\r\n            handlers.beforedestroy = _.bind(getHandler(this, type, 'BeforeDestroy'), this);\r\n            \r\n            this.handlers[type] = handlers;\r\n            this.props[type] = resource.guid();\r\n\r\n            resource.on('afterresize.link', handlers.afterresize);\r\n            resource.on('rotate.link', handlers.rotate);\r\n            resource.on('select.link', handlers.select);\r\n            resource.on('beforedestroy', handlers.beforedestroy);\r\n\r\n            // VERY EXPENSIVE!!!\r\n            if (resource.isDraggable()) {\r\n                resource.on('beforedrag.link', handlers.beforedrag);\r\n                if ( ! resource.draggable().ghost()) {\r\n                    resource.on('drag.link', handlers.drag);\r\n                } else {\r\n                    resource.on('afterdrag.link', handlers.afterdrag);\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        bindSource: function(source) {\r\n            return this.bindResource('source', source);\r\n        },\r\n\r\n        bindTarget: function(target) {\r\n            return this.bindResource('target', target);\r\n        },\r\n\r\n        unbindSource: function(source) {\r\n            return this.unbindResource('source');\r\n        },\r\n\r\n        unbindTarget: function(target) {\r\n            return this.unbindResource('target');\r\n        },\r\n\r\n        component: function(name) {\r\n            if (name === undefined) {\r\n                return Graph.registry.vector.get(this.components.block);\r\n            }\r\n            return Graph.registry.vector.get(this.components[name]);\r\n        },\r\n\r\n        invalidate: function(cache) {\r\n            if (cache !== undefined) {\r\n                this.cached[cache] = null;\r\n            } else {\r\n                this.cached.bendpoints = null;\r\n            }\r\n        },\r\n\r\n        render: function(container) {\r\n            var paper;\r\n\r\n            this.component().render(container);\r\n            paper = container.paper();\r\n\r\n            if (paper) {\r\n                Graph.registry.link.setContext(this.guid(), paper.guid());\r\n            }\r\n        },\r\n\r\n        id: function() {\r\n            return this.props.id;\r\n        },\r\n\r\n        guid: function() {\r\n            return this.props.guid;\r\n        },\r\n\r\n        type: function(type) {\r\n            if (type === undefined) {\r\n                return this.props.type;\r\n            }\r\n\r\n            this.props.type = type;\r\n\r\n            var component = this.component();\r\n\r\n            if (type == 'message') {\r\n                this.component('path').attr('marker-start', 'url(#marker-link-start-circle)');\r\n            } else {\r\n                this.component('path').attr('marker-start', '');\r\n            }\r\n\r\n            component.removeClass('link-normal link-message');\r\n            component.addClass('link-' + type);\r\n        },\r\n\r\n        connect: function(start, end) {\r\n            // already connected ?\r\n            if (this.props.connected) {\r\n                return;\r\n            }\r\n\r\n            this.router.route(start, end);\r\n            this.props.connected = true;\r\n        },\r\n\r\n        connectByCommand: function(command) {\r\n            if (this.props.connected) {\r\n                return;\r\n            }\r\n\r\n            this.router.execute(command);\r\n            this.props.connected = true;\r\n        },\r\n\r\n        disconnect: function(reload) {\r\n            // already disconnected ?\r\n            if ( ! this.props.connected) {\r\n                return;\r\n            }\r\n\r\n            reload = _.defaultTo(reload, true);\r\n\r\n            this.props.connected = false;\r\n\r\n            if (reload) {\r\n                this.router.reset();\r\n                this.reload(this.router.command());    \r\n            }\r\n        },\r\n\r\n        redraw: function(props) {\r\n\r\n        },\r\n\r\n        reload: function(command, silent) {\r\n            silent = _.defaultTo(silent, false);\r\n\r\n            command = command || '';\r\n\r\n            this.component('coat').attr('d', command).dirty(true);\r\n            this.component('path').attr('d', command);\r\n            this.invalidate();\r\n\r\n            if ( ! silent) {\r\n                this.refresh();\r\n                this.fire('change');\r\n                Graph.topic.publish('link:change');\r\n            }\r\n        },\r\n\r\n        reloadConvex: function(convex) {\r\n            this.cached.convex = convex;\r\n        },\r\n\r\n        removeConvex: function() {\r\n            this.cached.convex = null;\r\n        },\r\n\r\n        reset: function(silent) {\r\n            var command = this.router.command();\r\n            this.reload(command, silent);\r\n        },\r\n\r\n        refresh: function() {\r\n\r\n            // TODO: update label position\r\n            if (this.props.label) {\r\n                var label = this.component('label');\r\n\r\n                if (label.props.rendered) {\r\n                    var path = this.router.path();\r\n\r\n                    if (path.segments.length) {\r\n                        var bound = label.bbox().toJson(),\r\n                            distance = this.props.labelDistance || .5,\r\n                            scale = this.router.layout().scale(),\r\n                            path = this.router.path(),\r\n                            dots = path.pointAt(distance * path.length(), true),\r\n                            align = Graph.util.pointAlign(dots.start, dots.end, 10);\r\n\r\n                        if (align == 'h') {\r\n                            dots.x += (bound.width / 2 + (10 / scale.x));\r\n                        } else {\r\n                            dots.y -= (bound.height - (5 / scale.y));\r\n                        }\r\n\r\n                        label.attr({\r\n                            x: dots.x,\r\n                            y: dots.y\r\n                        });\r\n\r\n                        label.arrange();\r\n\r\n                        path = null;\r\n                        dots = null;\r\n\r\n                        label.dirty(true);\r\n                    } else {\r\n                        label.hide();\r\n                    }\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        label: function(text) {\r\n            var path, distance, point, align;\r\n\r\n            if (text === undefined) {\r\n                return this.props.label;\r\n            }\r\n\r\n            this.props.label = text;\r\n            \r\n            var componentLabel = this.component('label'),\r\n                componentCoat = this.component('coat');\r\n\r\n            componentLabel.write(text);\r\n            componentLabel.arrange();\r\n\r\n            componentCoat.data('text', text);\r\n            \r\n            if (componentLabel.props.rendered) {\r\n                this.refresh();\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        select: function(single) {\r\n            var paper = this.router.source().paper();\r\n            single = _.defaultTo(single, false);\r\n            if (single && paper) {\r\n                paper.collector().clearCollection();\r\n            }\r\n\r\n            this.component('coat').select();\r\n        },\r\n\r\n        deselect: function() {\r\n            this.component('coat').deselect();\r\n        },\r\n\r\n        renderControl: function() {\r\n            // TODO: render bends control\r\n        },\r\n\r\n        resumeControl: function() {\r\n            var me = this, editor = me.component('editor');\r\n\r\n            if ( ! me.cached.bendpoints) {\r\n                me.cached.bendpoints = me.router.bendpoints();\r\n                me.renderControl();\r\n            }\r\n\r\n            editor.elem.appendTo(this.component('block').elem);\r\n        },\r\n\r\n        suspendControl: function() {\r\n            this.component('editor').elem.detach();\r\n        },\r\n\r\n        sendToFront: function() {\r\n            var container = this.component().parent();\r\n            this.component().elem.appendTo(container.elem);\r\n        },\r\n\r\n        relocate: function(dx, dy) {\r\n            this.router.relocate(dx, dy);\r\n            this.reload(this.router.command());\r\n        },\r\n\r\n        relocateHead: function(dx, dy) {\r\n            var port = this.router.head();\r\n            if (port) {\r\n                port.x += dx;\r\n                port.y += dy;\r\n                this.router.repair(this.router.target(), port);\r\n            }\r\n        },\r\n\r\n        relocateTail: function(dx, dy) {\r\n            var port = this.router.tail();\r\n            if (port) {\r\n                port.x += dx;\r\n                port.y += dy;\r\n                this.router.repair(this.router.source(), port);\r\n            }\r\n        },\r\n\r\n        remove: function() {\r\n            var me = this;\r\n            var prop;\r\n\r\n            if (this.props.removed) {\r\n                return;\r\n            }\r\n\r\n            // flag\r\n            this.props.removed = true;\r\n\r\n            // disconnect first\r\n            this.disconnect(false);\r\n            \r\n            // unbind resource\r\n            this.unbindSource();\r\n            this.unbindTarget();\r\n\r\n            this.fire('beforedestroy', {link: this});\r\n\r\n            // remove label\r\n            me.component('label').remove();\r\n\r\n            // remove vertexs\r\n            if (me.cached.controls) {\r\n                _.forEach(me.cached.controls, function(id){\r\n                    var c = Graph.registry.vector.get(id);\r\n                    c && c.remove();\r\n                });\r\n                me.cached.controls = null;\r\n            }\r\n\r\n            // remove editor\r\n            me.component('editor').remove();\r\n\r\n            // remove path\r\n            me.component('path').remove();\r\n\r\n            // remove block\r\n            me.component('block').remove();\r\n\r\n            for (prop in me.components) {\r\n                me.components[prop] = null;\r\n            }\r\n\r\n            // clear cache\r\n            for (prop in me.cached) {\r\n                me.cached[prop] = null;\r\n            }\r\n\r\n            me.router.destroy();\r\n            me.router = null;\r\n\r\n            me.fire('afterdestroy');\r\n\r\n            // unregister\r\n            Graph.registry.link.unregister(me);\r\n\r\n            // publish\r\n            Graph.topic.publish('link:afterdestroy');\r\n        },\r\n        isSelected: function() {\r\n            return this.props.selected;\r\n        },\r\n        isConnected: function() {\r\n            return this.props.connected;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.link.Link';\r\n        },\r\n\r\n        toJson: function() {\r\n            var source = this.router.source(),\r\n                target = this.router.target();\r\n\r\n            var sourceShape = Graph.registry.shape.get(source),\r\n                targetShape = Graph.registry.shape.get(target);\r\n\r\n            var link = {\r\n                metadata: {\r\n\r\n                },\r\n                props: {\r\n                    id: this.props.id,\r\n                    guid: this.guid(),\r\n                    type: this.toString(),\r\n                    routerType: this.router.type(),\r\n                    command: this.router.command(),\r\n                    label: this.props.label,\r\n                    labelDistance: this.props.labelDistance,\r\n                    source: sourceShape ? sourceShape.guid() : source.guid(),\r\n                    sourceType: sourceShape ? 'shape' : 'vector',\r\n                    target: targetShape ? targetShape.guid() : target.guid(),\r\n                    targetType: targetShape ? 'shape' : 'vector',\r\n                    convex: true,\r\n                    smooth: true,\r\n                    smoothness: this.props.smoothness\r\n                },\r\n\r\n                params: [\r\n                    {key: 'Data source', value: 'db.example'}\r\n                ]\r\n            };\r\n\r\n            return link;\r\n        },\r\n\r\n        ///////// OBSERVERS /////////\r\n\r\n        onRouterRoute: function(e) {\r\n            var command = e.command;\r\n            this.reload(command);\r\n        },\r\n\r\n        onRouterReroute: function(e) {\r\n            var source = e.source,\r\n                target = e.target;\r\n\r\n            this.bindResource('source', source);\r\n            this.bindResource('target', target);\r\n\r\n            this.sendToFront();\r\n        },\r\n\r\n        onLabelRender: function(e) {\r\n            if (this.props.label) {\r\n                this.label(this.props.label);\r\n            }\r\n        },\r\n\r\n        onLabelAfterDrag: function(e) {\r\n            var label = this.component('label'),\r\n                matrix = label.matrix(),\r\n                x = label.attrs.x,\r\n                y = label.attrs.y,\r\n                p = {\r\n                    x: matrix.x(x, y),\r\n                    y: matrix.y(x, y)\r\n                }\r\n\r\n            label.attr({\r\n                x: p.x,\r\n                y: p.y\r\n            });\r\n\r\n            label.arrange();\r\n\r\n            // update label distance\r\n            var path = this.router.path(),\r\n                near = path.nearest(p);\r\n\r\n            this.props.labelDistance = near.distance / path.length();\r\n\r\n            label.reset();\r\n            matrix = path = null;\r\n        },\r\n\r\n        onLabelDoubletap: function(e) {\r\n            var coat = this.component('coat');\r\n            coat.editable().startEdit(e);\r\n        },\r\n\r\n        onCoatBeforeEdit: function(e) {\r\n            this.component('label').hide();\r\n            this.component().addClass('editing');\r\n        },\r\n\r\n        onCoatEdit: function(e) {\r\n            this.component().removeClass('editing');\r\n            this.component('label').show();\r\n            this.label(e.text, e.left, e.top);\r\n        },\r\n\r\n        onCoatClick: function(e) {\r\n            var paper = this.component('coat').paper();\r\n            if (paper.state() == 'linking') {\r\n                paper.tool().activate('panzoom');\r\n            }\r\n        },\r\n\r\n        onCoatSelect: function(e) {\r\n            var coat = this.component('coat'),\r\n                showControl = false;\r\n\r\n            if (e.initial) {\r\n                showControl = true;\r\n            }\r\n\r\n            this.props.selected = true;\r\n            this.component().addClass('selected');\r\n\r\n            if (showControl) {\r\n                this.resumeControl();\r\n                Graph.topic.publish('link:select', {link: this});\r\n            }\r\n        },\r\n\r\n        onCoatDeselect: function(e) {\r\n            if (this.props.removed) return;\r\n\r\n            this.props.selected = false;\r\n            this.component().removeClass('selected');\r\n            this.suspendControl();\r\n\r\n            if (e.initial) {\r\n                Graph.topic.publish('link:deselect', {link: this});    \r\n            }\r\n        },\r\n\r\n        onCoatBeforeDrag: function(e) {\r\n            this.suspendControl();\r\n        },\r\n\r\n        onCoatAfterDrag: function(e) {\r\n            this.relocate(e.dx, e.dy);\r\n        },\r\n\r\n        onCoatAfterDestroy: function(e) {\r\n            this.remove();\r\n        },\r\n\r\n        ///////// OBSERVERS /////////\r\n\r\n        onSourceRotate: function() {\r\n\r\n        },\r\n\r\n        onSourceSelect: function(e) {\r\n            var target = this.router.target();\r\n            if (this.isSelected()) {\r\n                if ( ! target.isSelected()) {\r\n                    this.deselect();\r\n                }\r\n            } else {\r\n                if (target.isSelected()) {\r\n                    this.select();\r\n                }\r\n            }\r\n        },\r\n\r\n        onSourceBeforeDrag: function(e, source) {\r\n            var target = this.router.target();\r\n            if ( ! source.isSelected() || ! target.isSelected()) {\r\n                this.deselect();\r\n            }\r\n            this.cached.convex = null;\r\n        },\r\n\r\n        onSourceDrag: function(e) {\r\n            console.warn('Not yet implemented');\r\n        },\r\n\r\n        onSourceAfterDrag: function(e) {\r\n            var source = this.router.source(),\r\n                target = this.router.target();\r\n\r\n            if (source.isSelected()) {\r\n                if ( ! target.isSelected()) {\r\n                    this.relocateTail(e.dx, e.dy);\r\n                }\r\n            } else {\r\n                this.relocateTail(e.dx, e.dy);\r\n            }\r\n        },\r\n\r\n        onSourceAfterResize: function(e) {\r\n            this.relocateTail(e.translate.dx, e.translate.dy);\r\n        },\r\n\r\n        onSourceBeforeDestroy: function() {\r\n            this.remove();\r\n        },\r\n\r\n        onTargetRotate: function() {\r\n\r\n        },\r\n\r\n        onTargetSelect: function(e) {\r\n            var source = this.router.source();\r\n            if (this.isSelected()) {\r\n                if ( ! source.isSelected()) {\r\n                    this.deselect();\r\n                }\r\n            } else {\r\n                if (source.isSelected()) {\r\n                    this.select();\r\n                }\r\n            }\r\n        },\r\n\r\n        onTargetBeforeDrag: function(e, target) {\r\n            var source = this.router.source();\r\n            if ( ! source.isSelected() || ! target.isSelected()) {\r\n                this.deselect();\r\n            }\r\n            this.cached.convex = null;\r\n        },\r\n\r\n        onTargetDrag: function(e) {\r\n            console.warn('Not yet implemented');\r\n        },\r\n\r\n        onTargetAfterDrag: function(e) {\r\n            var target = this.router.target(),\r\n                source = this.router.source();\r\n\r\n            if (target.isSelected()) {\r\n                if ( ! source.isSelected()) {\r\n                    this.relocateHead(e.dx, e.dy);\r\n                }\r\n            } else {\r\n                this.relocateHead(e.dx, e.dy);\r\n            }\r\n        },\r\n\r\n        onTargetAfterResize: function(e) {\r\n            this.relocateHead(e.translate.dx, e.translate.dy);\r\n        },\r\n\r\n        onTargetBeforeDestroy: function() {\r\n            this.remove();    \r\n        },  \r\n\r\n        onTrashToolClick: function(e) {\r\n            this.component('coat').remove();\r\n        },\r\n\r\n        onConfigToolClick: function(e) {\r\n\r\n        },\r\n\r\n        onFrontToolClick: function(e) {\r\n            this.sendToFront();\r\n        },\r\n\r\n        onBackToolClick: function(e) {\r\n\r\n        },\r\n\r\n        destroy: function() {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n    Link.guid = 0;\r\n\r\n    ///////// HELPERS /////////\r\n\r\n    function getHandler(scope, resource, handler) {\r\n        var name = 'on' + _.capitalize(resource) + handler,\r\n            func = scope[name];\r\n\r\n        name = null;\r\n        return func;\r\n    }\r\n\r\n}());\r\n","\r\n(function(_, $){\r\n    \r\n    var REGEX_SVG_BUILDER = /^<(svg|g|rect|text|path|line|tspan|circle|polygon|defs|marker)/i;\r\n\r\n    var domParser;\r\n\r\n    ///////// BUILDER /////////\r\n    \r\n    Graph.dom = function(selector, context, query) {\r\n        var fragment, element;\r\n\r\n        if (domParser === undefined) {\r\n            try {\r\n                domParser = new DOMParser();\r\n            } catch(e){\r\n                domParser = null;\r\n            }\r\n        }\r\n\r\n        query = _.defaultTo(query, false);\r\n\r\n        if (context !== undefined) {\r\n            if (Graph.isElement(context)) {\r\n                context = context.node();\r\n            }\r\n        }\r\n\r\n\r\n        if (_.isString(selector)) {\r\n            if (REGEX_SVG_BUILDER.test(selector)) {\r\n                if (domParser) {\r\n                    fragment = '<g xmlns=\"'+ Graph.config.xmlns.svg +'\">' + selector + '</g>';\r\n                    element  = domParser.parseFromString(fragment, 'text/xml').documentElement.childNodes[0];\r\n                    fragment = null;\r\n                    element  = query ? $(element) : element;\r\n                }\r\n            } else {\r\n                element = query ? $(selector, context) : $(selector, context)[0];\r\n            }\r\n        } else {\r\n            if (Graph.isHTML(selector) || Graph.isSVG(selector)) {\r\n                element = query ? $(selector) : selector;\r\n            } else if (Graph.isElement(selector)) {\r\n                element = query ? selector.query : selector.query[0];\r\n            } else {\r\n                // document, window, ...etc\r\n                element = query ? $(selector, context) : selector;\r\n            }\r\n        }\r\n\r\n        context = null;\r\n        return element;\r\n    };  \r\n\r\n    Graph.dom.clone = function(node, deep) {\r\n        return node.cloneNode(deep);\r\n    };\r\n\r\n    ///////// ELEMENT /////////\r\n\r\n    var E = Graph.dom.Element = function(node) {\r\n        this.query = $(node);\r\n    };\r\n\r\n    E.prototype.is = function(pseudo) {\r\n        return this.query.is(pseudo);\r\n    };  \r\n\r\n    E.prototype.node = function() {\r\n        return this.query[0];\r\n    };\r\n\r\n    E.prototype.length = function() {\r\n        return this.query.length;\r\n    };\r\n\r\n    E.prototype.group = function(name) {\r\n        if (name === undefined) {\r\n            return this.query.data('component-group');\r\n        }\r\n        this.query.data('component-group', name);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.belong = function(group) {\r\n        return this.group() == group;\r\n    };\r\n\r\n    E.prototype.attr = function(name, value) {\r\n        if (value === undefined) {\r\n            return this.query.attr(name);\r\n        }\r\n        \r\n        var me = this, node = this.query[0];\r\n\r\n        if (Graph.isHTML(node)) {\r\n            this.query.attr(name, value);\r\n        } else if (Graph.isSVG(node)) {\r\n\r\n            if (_.isPlainObject(name)) {\r\n                _.forOwn(name, function(v, k){\r\n                    me.attr(k, v);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (name.substring(0, 6) == 'xlink:') {\r\n                node.setAttributeNS(Graph.config.xmlns.xlink, name.substring(6), _.toString(value));\r\n            } else {\r\n                node.setAttribute(name, _.toString(value));\r\n            }\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    E.prototype.width = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.width();\r\n        }\r\n        this.query.width(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.outerHeight = function(margin) {\r\n        return this.query.outerHeight(margin);\r\n    };\r\n\r\n    E.prototype.height = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.height();\r\n        }\r\n        this.query.height(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.show = function() {\r\n        this.query.show();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.hide = function() {\r\n        this.query.hide();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.offset = function() {\r\n        var node = this.query[0];\r\n        if (Graph.isSVG(node)) {\r\n            var offset = node.getBoundingClientRect();\r\n            return {\r\n                left: offset.left,\r\n                top: offset.top,\r\n                width: offset.width,\r\n                height: offset.height\r\n            };\r\n        } else {\r\n           return this.query.offset(); \r\n        }\r\n    };\r\n\r\n    E.prototype.position = function() {\r\n        return this.query.position();\r\n    };\r\n\r\n    E.prototype.css = function(name, value) {\r\n        if (value === undefined) {\r\n            return this.query.css(name);\r\n        }\r\n        this.query.css(name, value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.addClass = function(classes) {\r\n        var node = this.query[0];\r\n        if (Graph.isHTML(node)) {\r\n            this.query.addClass(classes);\r\n        } else if (Graph.isSVG(node)) {\r\n            var values = _.chain([])\r\n                .concat(_.split(node.className.baseVal || '', ' '))\r\n                .concat(_.split(classes, ' '))\r\n                .uniq()\r\n                .join(' ')\r\n                .trim()\r\n                .value();\r\n            node.className.baseVal = values;\r\n        }\r\n        return this;\r\n    };\r\n\r\n    E.prototype.removeClass = function(classes) {\r\n        var node = this.query[0];\r\n        if (Graph.isHTML(node)) {\r\n            this.query.removeClass(classes);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    E.prototype.hasClass = function(clazz) {\r\n        var node = this.query[0];\r\n\r\n        if (Graph.isHTML(node)) {\r\n            return this.query.hasClass(clazz); \r\n        } else if (Graph.isSVG(node)) {\r\n            var classes = _.split(node.className.baseVal, ' ');\r\n            return classes.indexOf(clazz) > -1;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    E.prototype.find = function(selector) {\r\n        return new Graph.dom.Element(this.query.find(selector));\r\n    };\r\n\r\n    E.prototype.parent = function() {\r\n        return new Graph.dom.Element(this.query.parent());\r\n    };\r\n\r\n    E.prototype.closest = function(element) {\r\n        return new Graph.dom.Element(this.query.closest(element));\r\n    };\r\n\r\n    E.prototype.append = function(element) {\r\n        if (element.query === undefined) {\r\n            this.query.append(element);\r\n        } else {\r\n            this.query.append(element.query);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    E.prototype.prepend = function(element) {\r\n        this.query.prepend(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.appendTo = function(element) {\r\n        this.query.appendTo(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.prependTo = function(element) {\r\n        this.query.prependTo(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.before = function(element) {\r\n        this.query.before(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.after = function(element) {\r\n        this.query.after(element.query);\r\n        return this;\r\n    };\r\n    \r\n    E.prototype.last = function() {\r\n        return new Graph.dom.Element(this.query.last());\r\n    };\r\n\r\n    E.prototype.remove = function() {\r\n        this.query.remove();\r\n        this.query = null;\r\n        return this;\r\n    };\r\n\r\n    E.prototype.detach = function() {\r\n        this.query = this.query.detach();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.on = function(types, selector, data, fn, /*INTERNAL*/ one) {\r\n        this.query.on.call(this.query, types, selector, data, fn, one);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.off = function(types, selector, fn) {\r\n        this.query.off.call(this.query, types, selector, fn);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.trigger = function(type, data) {\r\n        this.query.trigger(type, data);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.val = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.val();\r\n        }\r\n        this.query.val(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.text = function(text) {\r\n        if (text === undefined) {\r\n            return this.query.text();\r\n        }\r\n        this.query.text(text);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.html = function(html) {\r\n        if (html === undefined) {\r\n            return this.query.html();\r\n        }\r\n        this.query.html(html);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.focus = function(select, delay) {\r\n        var query = this.query, timer;\r\n\r\n        delay = _.defaultTo(delay, 0);\r\n\r\n        if (this.query.attr('contenteditable') !== undefined) {\r\n            timer = _.delay(function(){\r\n                clearTimeout(timer);\r\n                timer = null;\r\n\r\n                query[0].focus();\r\n\r\n                if (document.createRange && window.getSelection) {\r\n                    var range = document.createRange();\r\n                    range.selectNodeContents(query[0]);\r\n                    var selection = window.getSelection();\r\n                    selection.removeAllRanges();\r\n                    selection.addRange(range);\r\n                }\r\n\r\n            }, delay);\r\n            \r\n        } else {\r\n            timer = _.delay(function(){\r\n                clearTimeout(timer);\r\n                timer = null;\r\n\r\n                query.focus();\r\n\r\n                if (select) {\r\n                    query.select();\r\n                }\r\n            }, delay);\r\n        }\r\n        \r\n        return this;\r\n    };\r\n\r\n    E.prototype.contextmenu = function(state) {\r\n        state = _.defaultTo(state, true);\r\n        if ( ! state) {\r\n            this.query.on('contextmenu', function(e){\r\n                return false;\r\n            });\r\n        }\r\n    };\r\n\r\n    E.prototype.each = function(iteratee) {\r\n        this.query.each(iteratee);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.empty = function() {\r\n        this.query.empty();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.data = function(key, value) {\r\n        if (value === undefined) {\r\n            return this.query.data(key);\r\n        }\r\n        this.query.data(key, value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.prop = function(name, value) {\r\n        if (value === undefined) {\r\n            return this.query.data(name);\r\n        }\r\n        this.query.prop(name, value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.scrollTop = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.scrollTop();\r\n        }\r\n        this.query.scrollTop(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.scrollLeft = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.scrollLeft();\r\n        }\r\n        this.query.scrollLeft(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.toString = function() {\r\n        return 'Graph.dom.Element';\r\n    };\r\n\r\n    /// STATICS ///\r\n    \r\n    E.guid = 0;\r\n    \r\n    /// HELPERS ///\r\n\r\n    Graph.$ = function(selector, context) {\r\n        var query = Graph.dom(selector, context, true);\r\n        return new Graph.dom.Element(query);\r\n    };\r\n\r\n}(_, jQuery));","\r\n(function(){\r\n\r\n    Graph.svg.Ellipse = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(cx, cy, rx, ry) {\r\n            \r\n            // this.$super('ellipse', {\r\n            //     cx: cx,\r\n            //     cy: cy,\r\n            //     rx: rx,\r\n            //     ry: ry\r\n            // });\r\n\r\n            this.superclass.prototype.constructor.call(this, 'ellipse', {\r\n                cx: cx,\r\n                cy: cy,\r\n                rx: rx,\r\n                ry: ry\r\n            });\r\n        },\r\n\r\n        shape: function() {\r\n            var a = this.attrs;\r\n\r\n            return Graph.path([\r\n                ['M', a.cx, a.cy],\r\n                ['m', 0, -a.ry],\r\n                ['a', a.rx, a.ry, 0, 1, 1, 0,  2 * a.ry],\r\n                ['a', a.rx, a.ry, 0, 1, 1, 0, -2 * a.ry],\r\n                ['z']\r\n            ]);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.graph.matrix.clone().scale(sx, sy, cx, cy),\r\n                rotate = this.props.rotate;\r\n\r\n            var mx = matrix.x(this.attrs.cx, this.attrs.cy),\r\n                my = matrix.y(this.attrs.cx, this.attrs.cy),\r\n                rx = this.attrs.rx * sx,\r\n                ry = this.attrs.ry * sy;\r\n\r\n            var gx, gy;\r\n\r\n            this.reset();\r\n\r\n            this.attr({\r\n                cx: mx,\r\n                cy: my,\r\n                rx: rx,\r\n                ry: ry\r\n            });\r\n\r\n            if (rotate) {\r\n                this.rotate(rotate, mx, my).commit();    \r\n            }\r\n\r\n            var bb = this.bbox().toJson();\r\n\r\n            gx = mx - rx - dx;\r\n            gy = my - ry - dy;\r\n\r\n            gx = bb.x;\r\n            gy = bb.y;\r\n\r\n            return  {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: mx,\r\n                    cy: my\r\n                },\r\n                magnify: {\r\n                    cx: gx,\r\n                    cy: gy\r\n                }\r\n            };\r\n        },\r\n        toString: function() {\r\n            return 'Graph.svg.Ellipse';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Circle = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(cx, cy, r) {\r\n            var me = this;\r\n            \r\n            if (Graph.isPoint(cx)) {\r\n                r  = cy;\r\n                cy = cx.props.y;\r\n                cx = cx.props.x;\r\n            }\r\n\r\n            // me.$super('circle', {\r\n            //     cx: cx,\r\n            //     cy: cy,\r\n            //     r: r\r\n            // });\r\n\r\n            me.superclass.prototype.constructor.call(me, 'circle', {\r\n                cx: cx,\r\n                cy: cy,\r\n                r: r\r\n            });\r\n            \r\n        },\r\n\r\n        shape: function() {\r\n            var a = this.attrs;\r\n            \r\n            return Graph.path([\r\n                ['M', a.cx, a.cy],\r\n                ['m', 0, -a.r],\r\n                ['a', a.r, a.r, 0, 1, 1, 0,  2 * a.r],\r\n                ['a', a.r, a.r, 0, 1, 1, 0, -2 * a.r],\r\n                ['z']\r\n            ]);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.graph.matrix.clone(),\r\n                rotate = this.props.rotate,\r\n                ax = this.attrs.cx,\r\n                ay = this.attrs.cy,\r\n                ar = this.attrs.r;\r\n\r\n            var x, y, r;\r\n            \r\n            if (sy === 1) {\r\n                r  = ar * sx;\r\n                sy = sx;\r\n            } else if (sx === 1) {\r\n                r  = ar * sy;\r\n                sx = sy;\r\n            } else if (sx < sy) {\r\n                r = ar * sy;\r\n                sx = sy;\r\n            } else if (sx > sy) {\r\n                r  = ar * sx;\r\n                sy = sx;\r\n            }\r\n\r\n            matrix.scale(sx, sy, cx, cy);\r\n\r\n            x = matrix.x(ax, ay);\r\n            y = matrix.y(ax, ay);\r\n\r\n            this.reset();\r\n\r\n            this.attr({\r\n                cx: x,\r\n                cy: y,\r\n                 r: r\r\n            });\r\n            \r\n            if (rotate) {\r\n                this.rotate(rotate, x, y).commit();    \r\n            }\r\n\r\n            return {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: x,\r\n                    cy: y\r\n                }\r\n            };\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Circle';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Rect = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(x, y, width, height, r) {\r\n            var me = this;\r\n            r = _.defaultTo(r, 6);\r\n\r\n            // me.$super('rect', {\r\n            //     x: _.defaultTo(x, 0),\r\n            //     y: _.defaultTo(y, 0),\r\n            //     rx: r,\r\n            //     ry: r,\r\n            //     width: _.defaultTo(width, 0),\r\n            //     height: _.defaultTo(height, 0)\r\n            // });\r\n\r\n            me.superclass.prototype.constructor.call(me, 'rect', {\r\n                x: _.defaultTo(x, 0),\r\n                y: _.defaultTo(y, 0),\r\n                rx: r,\r\n                ry: r,\r\n                width: _.defaultTo(width, 0),\r\n                height: _.defaultTo(height, 0)\r\n            });\r\n            \r\n            me.origpath = me.shape();\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            var result = this.superclass.prototype.attr.apply(this, [name, value]);\r\n\r\n            if (name == 'rx' && value !== undefined) {\r\n                this.attrs.r = this.attrs.rx;    \r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        shape: function() {\r\n            var a = this.attrs, p;\r\n\r\n            if (a.r) {\r\n                p = Graph.path([\r\n                    ['M', a.x + a.r, a.y], \r\n                    ['l', a.width - a.r * 2, 0], \r\n                    ['a', a.r, a.r, 0, 0, 1, a.r, a.r], \r\n                    ['l', 0, a.height - a.r * 2], \r\n                    ['a', a.r, a.r, 0, 0, 1, -a.r, a.r], \r\n                    ['l', a.r * 2 - a.width, 0], \r\n                    ['a', a.r, a.r, 0, 0, 1, -a.r, -a.r], \r\n                    ['l', 0, a.r * 2 - a.height], \r\n                    ['a', a.r, a.r, 0, 0, 1, a.r, -a.r], \r\n                    ['z']\r\n                ]);\r\n            } else {\r\n                p = Graph.path([\r\n                    ['M', a.x, a.y], \r\n                    ['l', a.width, 0], \r\n                    ['l', 0, a.height], \r\n                    ['l', -a.width, 0], \r\n                    ['z']\r\n                ]);\r\n            }\r\n\r\n            return p;\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.matrix().clone(),\r\n                rotate = matrix.rotate().deg;\r\n\r\n            var x, y, w, h;\r\n\r\n            matrix.scale(sx, sy, cx, cy);\r\n\r\n            this.reset();\r\n\r\n            x = matrix.x(this.attrs.x, this.attrs.y);\r\n            y = matrix.y(this.attrs.x, this.attrs.y);\r\n            w = this.attrs.width  * sx;\r\n            h = this.attrs.height * sy;\r\n\r\n            this.attr({\r\n                x: x,\r\n                y: y,\r\n                width: w,\r\n                height: h\r\n            });\r\n\r\n            if (rotate) {\r\n                this.rotate(rotate, x, y).commit();    \r\n            }\r\n            \r\n            return {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: x,\r\n                    cy: y\r\n                }\r\n            };\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Rect';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","(function(){\r\n\r\n    Graph.svg.Polyline = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(points) {\r\n            points = _.defaultTo(points, '');\r\n\r\n            if (_.isArray(points)) {\r\n                if (points.length) {\r\n                    if (_.isPlainObject(points[0])) { \r\n                        points = _.map(points, function(p){ return p.x + ',' + p.y; });\r\n                    }\r\n                    points = _.join(points, ',');\r\n                } else {\r\n                    points = '';\r\n                }\r\n            }\r\n            \r\n            this.superclass.prototype.constructor.call(this, 'polyline', {\r\n                points: points\r\n            });\r\n        },\r\n\r\n        shape: function() {\r\n            var command = Graph.util.polygon2path(this.attrs.points);\r\n            command = command.replace(/Z/i, '');\r\n            return Graph.path(command);\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            if (name == 'points' && _.isArray(value)) {\r\n                value = _.join(_.map(value, function(p){\r\n                    return p[0] + ',' + p[1];\r\n                }), ' ');\r\n            }\r\n            \r\n            return this.superclass.prototype.attr.call(this, name, value); // this.$super(name, value);\r\n        },\r\n        toString: function() {\r\n            return 'Graph.svg.Polyline';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Polygon = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(points) {\r\n            points = _.defaultTo(points, '');\r\n            \r\n            if (_.isArray(points)) {\r\n                if (points.length) {\r\n                    if (_.isPlainObject(points[0])) { \r\n                        points = _.map(points, function(p){ return p.x + ',' + p.y; });\r\n                    }\r\n                    points = _.join(points, ',');\r\n                } else {\r\n                    points = '';\r\n                }\r\n            }\r\n\r\n            this.superclass.prototype.constructor.call(this, 'polygon', {\r\n                points: points\r\n            });\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            if (name == 'points' && _.isArray(value)) {\r\n                value = _.join(value, ',');\r\n            }\r\n            \r\n            return this.superclass.prototype.attr.call(this, name, value); // this.$super(name, value);\r\n        },\r\n\r\n        shape: function() {\r\n            var command = Graph.util.polygon2path(this.attrs.points);\r\n            return Graph.path(command);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.graph.matrix.clone(),\r\n                origin = this.graph.matrix.clone(),\r\n                rotate = this.props.rotate,\r\n                ps = this.shape().segments,\r\n                dt = [],\r\n                rx = ps[0][1],\r\n                ry = ps[0][2];\r\n\r\n            if (rotate) {\r\n                origin.rotate(-rotate, ps[0][1], ps[0][2]); \r\n                rx = origin.x(ps[0][1], ps[0][2]);\r\n                ry = origin.y(ps[0][1], ps[0][2]);\r\n            }\r\n\r\n            origin.scale(sx, sy, cx, cy);\r\n            matrix.scale(sx, sy, cx, cy);\r\n\r\n            _.forEach(ps, function(seg){\r\n                var ox, oy, x, y;\r\n                if (seg[0] != 'Z') {\r\n                    ox = seg[seg.length - 2];\r\n                    oy = seg[seg.length - 1];\r\n                    x = origin.x(ox, oy);\r\n                    y = origin.y(ox, oy);\r\n                    dt.push(x + ',' + y);\r\n                }\r\n            });\r\n\r\n            dt = _.join(dt, ' ');\r\n\r\n            this.reset();\r\n            this.attr('points', dt);\r\n\r\n            if (rotate) {\r\n                this.rotate(rotate, rx, ry).commit();\r\n            }\r\n            \r\n            return {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: rx,\r\n                    cy: ry\r\n                }\r\n            };\r\n        },\r\n        toString: function() {\r\n            return 'Graph.svg.Polygon';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Group = Graph.extend(Graph.svg.Vector, {\r\n\r\n        attrs: {\r\n            'stroke': null,\r\n            'stroke-width': null,\r\n            'class': null,\r\n            'fill': null,\r\n            'style': null\r\n        },\r\n        \r\n        constructor: function(x, y) {\r\n            // this.$super('g');\r\n            this.superclass.prototype.constructor.call(this, 'g');\r\n\r\n            if (x !== undefined && y !== undefined) {\r\n                this.graph.matrix.translate(x, y);\r\n                this.attr('transform', this.graph.matrix.toValue());\r\n            }\r\n        },\r\n\r\n        shape: function() {\r\n            var size = this.dimension();\r\n            \r\n            return new Graph.lang.Path([\r\n                ['M', size.x, size.y], \r\n                ['l', size.width, 0], \r\n                ['l', 0, size.height], \r\n                ['l', -size.width, 0], \r\n                ['z']\r\n            ]);\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Group';\r\n        }\r\n        \r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Text = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        attrs: {\r\n            'text-anchor': 'middle'\r\n        },  \r\n\r\n        props: {\r\n            id: '',\r\n            guid: '',\r\n            text: '',\r\n            type: 'text',\r\n            rotate: 0,\r\n            lineHeight: 1.1,\r\n            fontSize: 12,\r\n            traversable: true,\r\n            focusable: false,\r\n            selectable: true,\r\n            selected: false,\r\n            rendered: false\r\n        },\r\n\r\n        rows: [],\r\n\r\n        constructor: function(x, y, text) {\r\n            // this.$super('text', {\r\n            //     x: _.defaultTo(x, 0),\r\n            //     y: _.defaultTo(y, 0)\r\n            // });\r\n\r\n            this.superclass.prototype.constructor.call(this, 'text', {\r\n                x: _.defaultTo(x, 0),\r\n                y: _.defaultTo(y, 0)\r\n            });\r\n\r\n            this.attr({\r\n                'font-size': Graph.config.font.size\r\n            });\r\n\r\n            if (text) {\r\n                this.write(text);\r\n            }\r\n            \r\n            this.on('render', _.bind(this.onTextRender, this));\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            var result = this.superclass.prototype.attr.apply(this, [name, value]);\r\n            \r\n            if (name == 'font-size' && value !== undefined) {\r\n                this.props.fontSize = _.parseInt(value) || 12;\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        write: function(text) {\r\n            var me = this, parts, span;\r\n\r\n            if (text === undefined) {\r\n                return me.props.text;\r\n            }\r\n\r\n            parts = (text || '').split(\"\\n\");\r\n\r\n            me.empty();\r\n            me.rows = [];\r\n            \r\n            _.forEach(parts, function(t, i){\r\n                me.addSpan(t);\r\n            });\r\n\r\n            me.props.text = text;\r\n            me.cached.bbox = null;\r\n        },\r\n\r\n        addSpan: function(text) {\r\n            var me = this, span;\r\n    \r\n            text = _.defaultTo(text, '');\r\n\r\n            span = Graph.$('<tspan/>');\r\n            span.text(text);\r\n\r\n            me.elem.append(span);\r\n            me.rows.push(span);\r\n\r\n            return span;\r\n        },\r\n\r\n        /**\r\n         * Arrange position\r\n         */\r\n        arrange: function() {\r\n            var rows = this.rows,\r\n                size = this.props.fontSize,\r\n                line = this.props.lineHeight,\r\n                bbox = this.bbox().toJson();\r\n            \r\n            if (rows.length) {\r\n                for (var i = 0, ii = rows.length; i < ii; i++) {\r\n                    if (i) {\r\n                        rows[i].attr('x', this.attrs.x);\r\n                        rows[i].attr('dy', size * line);\r\n                    }\r\n                }\r\n                rows[0].attr('dy', 0);\r\n                this.dirty(true);\r\n            }\r\n        },\r\n\r\n        wrap: function(width) {\r\n            var text = this.props.text,\r\n                words = text.split(/\\s+/).reverse(),\r\n                lines = [],\r\n                lineNo = 0,\r\n                lineHeight = this.props.lineHeight,\r\n                ax = this.attrs.x,\r\n                ay = this.attrs.y,\r\n                dy = 0;\r\n\r\n            var word, span;\r\n\r\n            this.empty();\r\n            this.rows = [];\r\n\r\n            span = this.addSpan();\r\n            span.attr({\r\n                x: ax, \r\n                y: ay, \r\n                dy: dy + 'em'\r\n            });\r\n\r\n            while((word = words.pop())) {\r\n                lines.push(word);\r\n                span.text(lines.join(' '));\r\n                if (span.node().getComputedTextLength() > width) {\r\n                    lines.pop();\r\n                    span.text(lines.join(' '));\r\n                    lines = [word];\r\n                    span = this.addSpan(word);\r\n                    span.attr({\r\n                        x: ax, \r\n                        y: ay, \r\n                        dy: (++lineNo * lineHeight) + 'em'\r\n                    });\r\n                }\r\n            }\r\n        },\r\n\r\n        center: function(target) {\r\n            if (target) {\r\n                var targetBox = target.bbox().toJson(),\r\n                    rotate = this.matrix().rotate();\r\n\r\n                var textBox, dx, dy, cx, cy;\r\n\r\n                this.reset();\r\n\r\n                textBox = this.bbox().toJson();   \r\n\r\n                dx = targetBox.width / 2;\r\n                dy = targetBox.height / 2;\r\n                cx = textBox.x + textBox.width / 2;\r\n                cy = textBox.y + textBox.height / 2;\r\n\r\n                if (rotate.deg) {\r\n                    this.translate(dx, dy).rotate(rotate.deg).commit();\r\n                } else {\r\n                    this.translate(dx, dy).commit();\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        shape: function() {\r\n            var size = this.dimension();\r\n\r\n            return new Graph.lang.Path([\r\n                ['M', size.x, size.y], \r\n                ['l', size.width, 0], \r\n                ['l', 0, size.height], \r\n                ['l', -size.width, 0], \r\n                ['z']\r\n            ]);\r\n\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Text';\r\n        },\r\n\r\n        onTextRender: function() {\r\n            var me = this;\r\n            me.arrange();\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Image = Graph.extend(Graph.svg.Vector, {\r\n\r\n        attrs: {\r\n            preserveAspectRatio: 'none'\r\n        },\r\n\r\n        constructor: function(src, x, y, width, height) {\r\n            var me = this;\r\n\r\n            // me.$super('image', {\r\n            //     'xlink:href': src,\r\n            //     'x': _.defaultTo(x, 0),\r\n            //     'y': _.defaultTo(y, 0),\r\n            //     'width': _.defaultTo(width, 0),\r\n            //     'height': _.defaultTo(height, 0)\r\n            // });\r\n            \r\n            me.superclass.prototype.constructor.call(me, 'image', {\r\n                'xlink:href': src,\r\n                'x': _.defaultTo(x, 0),\r\n                'y': _.defaultTo(y, 0),\r\n                'width': _.defaultTo(width, 0),\r\n                'height': _.defaultTo(height, 0)\r\n            });\r\n            \r\n        },\r\n\r\n        align: function(value, scale) {\r\n            if (value == 'none') {\r\n                this.attr('preserveAspectRatio', 'none');\r\n\r\n                return this;\r\n            }\r\n\r\n            var aspect = this.attrs.preserveAspectRatio,\r\n                align = '';\r\n\r\n            aspect = /(meet|slice)/.test(aspect) \r\n                ? aspect.replace(/(.*)\\s*(meet|slice)/i, '$2')\r\n                : '';\r\n\r\n            scale = _.defaultTo(scale, aspect);\r\n            value = value.replace(/s+/, ' ').toLowerCase();\r\n\r\n            switch(value) {\r\n                case 'top left':\r\n                case 'left top':\r\n                    align = 'xMinYMin';\r\n                    break;\r\n                case 'top center':\r\n                case 'center top':\r\n                    align = 'xMidYMin';\r\n                    break;\r\n                case 'top right':\r\n                case 'right top':\r\n                    align = 'xMaxYMin';\r\n                    break;\r\n                case 'left':\r\n                    align = 'xMinYMid';\r\n                    break;\r\n                case 'center':\r\n                    align = 'xMidYMid';\r\n                    break;\r\n                case 'right':\r\n                    align = 'xMaxYMid';\r\n                    break;\r\n                case 'bottom left':\r\n                case 'left bottom':\r\n                    align = 'xMinYMax';\r\n                    break;\r\n                case 'bottom center':\r\n                case 'center bottom':\r\n                    align = 'xMidYMax';\r\n                    break;\r\n                case 'bottom right':\r\n                case 'right bottom':\r\n                    align = 'xMaxYMax';\r\n                    break;\r\n            }\r\n\r\n            aspect = align + (scale ? ' ' + scale : '');\r\n            this.attr('preserveAspectRatio', aspect);\r\n\r\n            return this;\r\n        },\r\n\r\n        shape: function() {\r\n            var a = this.attrs;\r\n\r\n            return new Graph.lang.Path([\r\n                ['M', a.x, a.y], \r\n                ['l', a.width, 0], \r\n                ['l', 0, a.height], \r\n                ['l', -a.width, 0], \r\n                ['z']\r\n            ]);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var ms = this.graph.matrix.clone().scale(sx, sy, cx, cy),\r\n                ro = this.graph.matrix.rotate();\r\n\r\n            this.reset();\r\n\r\n            var x = ms.x(this.attrs.x, this.attrs.y),\r\n                y = ms.y(this.attrs.x, this.attrs.y),\r\n                w = +this.attrs.width * sx,\r\n                h = +this.attrs.height * sy;\r\n\r\n            this.attr({\r\n                x: x,\r\n                y: y,\r\n                width: w,\r\n                height: h\r\n            });\r\n            \r\n            this.rotate(ro, x, y).commit();\r\n\r\n            return {\r\n                matrix: ms,\r\n                x: x,\r\n                y: y\r\n            };\r\n        },\r\n        toString: function() {\r\n            return 'Graph.svg.Image';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    /**\r\n     * Paper - root viewport\r\n     */\r\n\r\n    var Paper = Graph.svg.Paper = Graph.extend(Graph.svg.Vector, {\r\n\r\n        attrs: {\r\n            'class': Graph.styles.PAPER\r\n        },\r\n\r\n        props: {\r\n            id: null,\r\n            guid: null,\r\n            type: 'paper',\r\n            text: null,\r\n            rotate: 0,\r\n\r\n            traversable: false,\r\n            selectable: false,\r\n            selected: false,\r\n            focusable: false,\r\n\r\n            rendered: false,\r\n            showOrigin: true,\r\n            zoomable: true\r\n        },\r\n\r\n        components: {\r\n            viewport: null\r\n        },\r\n\r\n        diagram: {\r\n            enabled: true,\r\n            manager: null\r\n        },\r\n\r\n        constructor: function (width, height, options) {\r\n            var me = this;\r\n\r\n            me.superclass.prototype.constructor.call(me, 'svg', {\r\n                'xmlns': Graph.config.xmlns.svg,\r\n                'xmlns:link': Graph.config.xmlns.xlink,\r\n                'version': Graph.config.svg.version\r\n                // 'width': _.defaultTo(width, 200),\r\n                // 'height': _.defaultTo(height, 200)\r\n            });\r\n\r\n            _.assign(me.props, options || {});\r\n\r\n            me.style({\r\n                overflow: 'hidden',\r\n                position: 'relative'\r\n            });\r\n\r\n            me.interactable();\r\n            me.initLayout();\r\n\r\n            me.plugins.collector = new Graph.plugin.Collector(me);\r\n            me.plugins.toolmgr.register('collector', 'plugin');\r\n\r\n            me.plugins.linker = new Graph.plugin.Linker(me);\r\n            me.plugins.toolmgr.register('linker', 'plugin');\r\n\r\n            me.plugins.pencil = new Graph.plugin.Pencil(me);\r\n            me.plugins.toolmgr.register('pencil', 'plugin');\r\n\r\n            me.plugins.definer = new Graph.plugin.Definer(me);\r\n\r\n            me.plugins.snapper = new Graph.plugin.Snapper(me);\r\n            me.plugins.toolpad = new Graph.plugin.Toolpad(me);\r\n\r\n            // diagram feature\r\n            me.diagram.enabled = true;\r\n            me.diagram.manager = new Graph.diagram.Manager(me);\r\n\r\n            // subscribe topics\r\n            Graph.topic.subscribe('link:reload', _.bind(me.listenLinkChange, me));\r\n            Graph.topic.subscribe('link:afterdestroy', _.bind(me.listenLinkAfterDestroy, me));\r\n\r\n            if ( ! Paper.defaultInstance) {\r\n                Paper.defaultInstance = me.guid();\r\n            }\r\n        },\r\n\r\n        initLayout: function() {\r\n            // create viewport\r\n            var viewport = (new Graph.svg.Group())\r\n                .addClass(Graph.styles.VIEWPORT)\r\n                .selectable(false);\r\n\r\n            viewport.props.viewport = true;\r\n\r\n            this.components.viewport = viewport.guid();\r\n\r\n            if (this.props.showOrigin) {\r\n                var origin = Graph.$(\r\n                    '<g class=\"graph-elem graph-origin\">' +\r\n                        '<rect class=\"x\" rx=\"1\" ry=\"1\" x=\"-16\" y=\"-1\" height=\"1\" width=\"30\"></rect>' +\r\n                        '<rect class=\"y\" rx=\"1\" ry=\"1\" x=\"-1\" y=\"-16\" height=\"30\" width=\"1\"></rect>' +\r\n                        '<text class=\"t\" x=\"-40\" y=\"-10\">(0, 0)</text>' +\r\n                    '</g>'\r\n                );\r\n\r\n                origin.appendTo(viewport.elem);\r\n                origin = null;\r\n            }\r\n\r\n            // render viewport\r\n            viewport.tree.paper = viewport.tree.parent = this.guid();\r\n            // viewport.translate(0.5, 0.5).commit();\r\n\r\n            this.elem.append(viewport.elem);\r\n            this.children().push(viewport);\r\n\r\n            viewport.on('render', function(){\r\n                viewport.cascade(function(c){\r\n                    if (c !== viewport && ! c.props.rendered) {\r\n                        c.props.rendered = true;\r\n                        c.tree.paper = viewport.tree.paper;\r\n                        c.fire('render');\r\n                    }\r\n                });\r\n            });\r\n\r\n            this.layout('default');\r\n        },\r\n\r\n        layout: function(options) {\r\n            var viewport = this.viewport();\r\n\r\n            if (options === undefined) {\r\n                return viewport.graph.layout;\r\n            }\r\n\r\n            viewport.layout(options);\r\n            return this;\r\n        },\r\n\r\n        shape: function(names, options) {\r\n            var shape = Graph.shape(names, options);\r\n            shape.render(this);\r\n\r\n            return shape;\r\n        },\r\n\r\n        render: function(container) {\r\n            var me = this,\r\n                vp = me.viewport(),\r\n                id = me.guid();\r\n\r\n            if (me.props.rendered) {\r\n                return;\r\n            }\r\n\r\n            container = Graph.$(container);\r\n            container.append(me.elem);\r\n\r\n            me.tree.container = container;\r\n\r\n            me.elem.css({\r\n                width: '100%',\r\n                height: '100%'\r\n            });\r\n\r\n            me.props.rendered = true;\r\n            me.fire('render');\r\n\r\n            vp.props.rendered = true;\r\n            vp.fire('render');\r\n\r\n            if (me.props.zoomable) {\r\n                me.zoomable();\r\n\r\n                var debounce = _.debounce(function(){\r\n                    debounce.flush();\r\n                    debounce = null;\r\n\r\n                    me.tool().activate('panzoom');\r\n                }, 1000);\r\n\r\n                debounce();\r\n            }\r\n\r\n            return me;\r\n        },\r\n\r\n        container: function() {\r\n            return this.tree.container;\r\n        },\r\n\r\n        collector: function() {\r\n            return this.plugins.collector;\r\n        },\r\n\r\n        viewport: function() {\r\n            return Graph.registry.vector.get(this.components.viewport);\r\n        },\r\n\r\n        diagram: function() {\r\n            return this.diagram.manager;\r\n        },\r\n\r\n        // @Override\r\n        scale: function(sx, sy, cx, cy) {\r\n            if (sx === undefined) {\r\n                return this.viewport().matrix().scale();\r\n            }\r\n            return this.plugins.transformer.scale(sx, sy, cx, cy);\r\n        },\r\n\r\n        width: function() {\r\n            return this.elem.width();\r\n        },\r\n\r\n        height: function() {\r\n            return this.elem.height();\r\n        },\r\n        \r\n        locateLink: function(guid) {\r\n            var link = Graph.registry.link.get(guid);\r\n            if (link) {\r\n                link.select(false);\r\n            }\r\n        },\r\n\r\n        locateShape: function(guid) {\r\n            var shape = Graph.registry.shape.get(guid);\r\n            if (shape) {\r\n                shape.select(false);\r\n            }\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Paper';\r\n        },\r\n\r\n        ///////// OBSERVERS /////////\r\n        \r\n        ///////// TOPIC LISTENERS /////////\r\n\r\n        listenLinkChange: _.debounce(function() {\r\n            this.layout().arrangeLinks();\r\n        }, 300),\r\n\r\n        listenLinkAfterDestroy: _.debounce(function(){\r\n            this.layout().arrangeLinks();\r\n        }, 10)\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n    Paper.defaultInstance = null;\r\n    \r\n    Paper.getDefaultInstance = function() {\r\n        return Graph.registry.vector.get(Paper.defaultInstance);\r\n    };\r\n\r\n    ///////// EXTENSIONS /////////\r\n\r\n    var vectors = {\r\n        ellipse: 'Ellipse',\r\n        circle: 'Circle',\r\n        rect: 'Rect',\r\n        path: 'Path',\r\n        polyline: 'Polyline',\r\n        polygon: 'Polygon',\r\n        group: 'Group',\r\n        text: 'Text',\r\n        image: 'Image',\r\n        line: 'Line'\r\n    };\r\n\r\n    _.forOwn(vectors, function(name, method){\r\n        (function(name, method){\r\n            Paper.prototype[method] = function() {\r\n                var arg = [name].concat(_.toArray(arguments)),\r\n                    svg = Graph.svg.apply(null, arg);\r\n\r\n                svg.tree.paper = this.guid();\r\n                svg.render(this);\r\n\r\n                arg = null;\r\n                return svg;\r\n            };\r\n        }(name, method));\r\n    });\r\n\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var storage = {};\r\n\r\n    var Registry = function() {\r\n        \r\n    };\r\n    \r\n    Registry.prototype.constructor = Registry;\r\n\r\n    Registry.prototype.register = function(pallet) {\r\n        var id = pallet.guid();\r\n        storage[id] = pallet;\r\n    };\r\n\r\n    Registry.prototype.unregister = function(pallet) {\r\n        var id = pallet.guid();\r\n        if (storage[id]) {\r\n            delete storage[id];\r\n        }\r\n    };\r\n\r\n    Registry.prototype.get = function(key) {\r\n        if (key === undefined) {\r\n            return this.toArray();\r\n        }\r\n        return storage[key];\r\n    };\r\n\r\n    Registry.prototype.toArray = function() {\r\n        var keys = _.keys(storage);\r\n        return _.map(keys, function(k){\r\n            return storage[k];\r\n        });\r\n    };\r\n\r\n    Registry.prototype.toString = function() {\r\n        return 'Graph.registry.Pallet';\r\n    };\r\n\r\n    Graph.registry.pallet = new Registry();\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.layout.Layout = Graph.extend({\r\n        \r\n        props: {\r\n            // view config\r\n            fit: true,\r\n            view: null,\r\n            width: 0,\r\n            height: 0,\r\n\r\n            // router config\r\n            router: {\r\n                type: 'orthogonal'\r\n            },\r\n\r\n            link: {\r\n                smooth: true,\r\n                smoothness: 6\r\n            }\r\n        },\r\n        \r\n        view: null,\r\n\r\n        cached: {\r\n            offset: null,\r\n            position: null\r\n        },\r\n\r\n        constructor: function(view, options) {\r\n            _.assign(this.props, options || {});\r\n            this.props.view = view.guid();\r\n        },\r\n\r\n        view: function() {\r\n            return Graph.registry.vector.get(this.props.view);\r\n        },\r\n\r\n        paper: function() {\r\n            return this.view().paper();\r\n        },\r\n\r\n        invalidate: function() {\r\n            \r\n        },\r\n\r\n        offset: function() {\r\n            // TODO: please fix...\r\n            return this.position();\r\n        },\r\n\r\n        position: function() {\r\n            var position = this.cached.position;\r\n            var view, node;\r\n            \r\n            if ( ! position) {\r\n                view = this.view();\r\n                node = view.isViewport() ? view.parent().node() : view.node();\r\n                position = node.getBoundingClientRect();\r\n                this.cached.position = position;\r\n            }\r\n\r\n            return position;\r\n        },\r\n\r\n        center: function() {\r\n            var center = this.cached.center;\r\n\r\n            if ( ! center) {\r\n                var position = this.position();\r\n\r\n                center = {\r\n                    x: position.width / 2,\r\n                    y: position.height / 2\r\n                };\r\n\r\n                this.cached.center = _.extend({}, center);\r\n            }\r\n            \r\n            return center;\r\n        },\r\n\r\n        scale: function() {\r\n            return this.view().matrix().scale();\r\n        },\r\n\r\n        width: function() {\r\n            var view, bbox, width;\r\n\r\n            view = this.view();\r\n\r\n            if (view.isViewport()) {\r\n                width = this.paper().width();\r\n            } else {\r\n                bbox  = view.bbox();\r\n                width = bbox.width();\r\n            }\r\n\r\n            view = bbox = null;\r\n            return width;\r\n        },\r\n\r\n        height: function() {\r\n            var view, bbox, height;\r\n\r\n            view = this.view();\r\n\r\n            if (view.isViewport()) {\r\n                height = this.paper().height();\r\n            } else {\r\n                bbox   = view.bbox();\r\n                height = bbox.height();\r\n            }\r\n\r\n            view = bbox = null;\r\n            return height;\r\n        },\r\n        \r\n        invalidate: function() {\r\n            this.cached.offset = null;\r\n            this.cached.center = null;\r\n        },\r\n\r\n        grabVector: function(event) {\r\n            return Graph.registry.vector.get(event.target);\r\n        },\r\n\r\n        grabLink: function(event) {\r\n            return Graph.registry.link.get(event.target);\r\n        },\r\n\r\n        pointerLocation: function(pointer) {\r\n            var x = pointer.clientX,\r\n                y = pointer.clientY,\r\n                position = this.position(),\r\n                matrix = this.view().matrix(),\r\n                invert = matrix.clone().invert(),\r\n                scale  = matrix.scale(),\r\n                location = {\r\n                    x: invert.x(x, y),\r\n                    y: invert.y(x, y)\r\n                };\r\n\r\n            location.x -= position.left / scale.x;\r\n            location.y -= position.top / scale.y;\r\n\r\n            matrix = invert = null;\r\n\r\n            return location;\r\n        },\r\n\r\n        screenLocation: function(coord) {\r\n            var screen = this.view().node().getScreenCTM();\r\n                matrix = Graph.matrix(\r\n                    screen.a,\r\n                    screen.b,\r\n                    screen.c,\r\n                    screen.d,\r\n                    screen.e,\r\n                    screen.f\r\n                );\r\n\r\n            var x = matrix.x(coord.x, coord.y),\r\n                y = matrix.y(coord.x, coord.y);\r\n\r\n            coord.x = x;\r\n            coord.y = y;\r\n            \r\n            return coord;\r\n        },\r\n\r\n        dragSnapping: function() {\r\n            return {\r\n                mode: 'anchor',\r\n                x: 1,\r\n                y: 1\r\n            };\r\n        },\r\n\r\n        routerType: function() {\r\n            return this.props.router.type;\r\n        },\r\n        \r\n        createRouter: function(source, target, options) {\r\n            var clazz, router;\r\n\r\n            clazz   = Graph.router[_.capitalize(this.props.router.type)];\r\n            options = _.extend({}, this.props.router, options || {});\r\n            router  = Graph.factory(clazz, [this.view(), source, target, options]);\r\n\r\n            return router;\r\n        },\r\n        \r\n        createLink: function(router, options) {\r\n            var clazz, link;\r\n\r\n            clazz   = Graph.link[_.capitalize(this.props.router.type)];\r\n            options = _.extend({}, this.props.link, options || {});\r\n            link    = Graph.factory(clazz, [router, options]);\r\n\r\n            return link;\r\n        },\r\n\r\n        refresh: function(vector) {\r\n            this.fire('refresh');\r\n        },\r\n\r\n        arrangeLinks: function() {\r\n            var scope = this.view().paper().guid(),\r\n                links = Graph.registry.link.collect(scope);\r\n            \r\n            if (links.length) {\r\n                \r\n                var inspect = [];\r\n                \r\n                _.forEach(links, function(link){\r\n                    if (link.cached.convex) {\r\n                        inspect.push(link.guid());\r\n                    }\r\n                });\r\n                \r\n                // TODO: research for sweepline algorithm\r\n                \r\n                var sweeper = new Graph.util.Sweeplink(links),\r\n                    convex = sweeper.findConvex();\r\n                \r\n                var key, link, idx;\r\n                \r\n                for (key in convex) {\r\n                    link = Graph.registry.link.get(key);\r\n                    \r\n                    link.reloadConvex(convex[key]);\r\n                    link.reset(true);\r\n                    \r\n                    idx = _.indexOf(inspect, key);\r\n                    \r\n                    if (idx > -1) {\r\n                        inspect.splice(idx, 1);\r\n                    }\r\n                }\r\n                \r\n                if (inspect.length) {\r\n                    _.forEach(inspect, function(key){\r\n                        var link = Graph.registry.link.get(key);\r\n                        \r\n                        link.removeConvex();\r\n                        link.reset(true);\r\n                    });\r\n                }\r\n                \r\n                sweeper.destroy();\r\n                sweeper = null;\r\n            }\r\n        },\r\n\r\n        arrangeShapes: function() {\r\n            \r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.layout.Layout';\r\n        }\r\n        \r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.shape.activity.Router = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'Route',\r\n            width: 100,\r\n            height: 100,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            type: 'activity.router',\r\n            icon: Graph.icons.SHAPE_ROUTER,\r\n            style: 'graph-shape-activity-router'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, label;\r\n\r\n            var points = [\r\n                this.props.width / 2, 0,\r\n                this.props.width, this.props.height / 2,\r\n                this.props.width / 2, this.props.height,\r\n                0, this.props.height / 2\r\n            ];\r\n\r\n            var cx = points[0],\r\n                cy = points[3];\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Polygon(points))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .data('text', this.props.label)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n            \r\n            pmgr.install('dragger', block, {ghost: true, dragClass: Graph.styles.SHAPE_DRAG});\r\n            pmgr.install('resizer', block);\r\n            pmgr.install('editor',  block);\r\n            pmgr.install('network', block, {wiring: 'h:v'});\r\n            pmgr.install('snapper', block);\r\n\r\n            block.on('edit.shape',      _.bind(this.onLabelEdit, this));\r\n            block.on('beforedrag.shape', _.bind(this.onBeforeDrag, this));\r\n            block.on('afterdrag.shape',   _.bind(this.onAfterDrag, this));\r\n            block.on('afterresize.shape',    _.bind(this.onAfterResize, this));\r\n            block.on('beforedestroy.shape',    _.bind(this.onBeforeDestroy, this));\r\n            block.on('afterdestroy.shape',    _.bind(this.onAfterDestroy, this));\r\n            block.on('select.shape',    _.bind(this.onSelect, this));\r\n            block.on('deselect.shape',  _.bind(this.onDeselect, this));\r\n            block.on('connect.shape', _.bind(this.onConnect, this));\r\n\r\n            label = (new Graph.svg.Text(cx, cy, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n\r\n            shape = block = label = null;\r\n        },\r\n\r\n        width: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.width;\r\n            }\r\n\r\n            var box = this.component('block').bbox().toJson(),\r\n                sx = value / this.props.width,\r\n                sy = 1,\r\n                cx = box.x,\r\n                cy = (box.y + box.y2) / 2,\r\n                dx = 0,\r\n                dy = 0;\r\n\r\n            this.component('block').resize(sx, sy, cx, cy, dx, dy);\r\n            this.component().dirty(true);\r\n\r\n            this.props.width = value;\r\n            return this;\r\n        },\r\n\r\n        height: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.height;\r\n            }\r\n\r\n            var block = this.component('block'),\r\n                box = block.bbox().toJson(),\r\n                sx = 1,\r\n                sy = value / this.props.height,\r\n                cx = (box.x + box.x2) / 2,\r\n                cy = box.y,\r\n                dx = 0,\r\n                dy = 0;\r\n\r\n            var resize = block.resize(sx, sy, cx, cy, dx, dy);\r\n            block.fire('afterresize', resize);\r\n\r\n            this.props.height = value;\r\n            return this;\r\n        },\r\n\r\n        refresh: function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                label = this.component('label');\r\n\r\n            var bound, matrix;\r\n\r\n            bound = block.bbox().toJson();\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            var points = [\r\n                bound.width / 2, 0,\r\n                bound.width, bound.height / 2,\r\n                bound.width / 2, bound.height,\r\n                0, bound.height / 2\r\n            ];\r\n\r\n            block.attr({\r\n                points: _.join(points, ',')\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            label.attr({\r\n                x: bound.width  / 2,\r\n                y: bound.height / 2\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n            // update props\r\n\r\n            matrix = shape.matrix();\r\n\r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            matrix = null;\r\n            bound  = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Router';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n    \r\n    var Link = Graph.link.Link;\r\n    \r\n    Graph.link.Directed = Graph.extend(Link, {\r\n        \r\n        renderControl: function() {\r\n            var me = this, editor = me.component('editor');\r\n\r\n            if (me.cached.controls) {\r\n                _.forEach(me.cached.controls, function(c){\r\n                    c = Graph.registry.vector.get(c);\r\n                    c.remove();\r\n                });\r\n                me.cached.controls = null;\r\n            }\r\n\r\n            var points = this.cached.bendpoints,\r\n                maxlen = points.length - 1,\r\n                linkid = me.guid(),\r\n                controls = [],\r\n                controlImage = Graph.config.base + 'img/' + Graph.config.resizer.image,\r\n                controlSize = Graph.config.resizer.size;\r\n\r\n            _.forEach(points, function(dot, i){\r\n                \r\n                var control = (new Graph.svg.Image(\r\n                    controlImage,\r\n                    dot.x - controlSize / 2,\r\n                    dot.y - controlSize / 2,\r\n                    controlSize,\r\n                    controlSize\r\n                ));\r\n                \r\n                control.selectable(false);\r\n                control.removeClass(Graph.styles.VECTOR);\r\n                \r\n                if (i === 0) {\r\n                    control.addClass(Graph.styles.LINK_TAIL);\r\n                    control.elem.data('pole', 'tail');\r\n                } else if (i === maxlen) {\r\n                    control.addClass(Graph.styles.LINK_HEAD);\r\n                    control.elem.data('pole', 'head');\r\n                }\r\n                \r\n                control.elem.group('graph-link');\r\n                control.elem.data(Graph.string.ID_LINK, linkid);\r\n                \r\n                var context = {\r\n                    trans: (i === 0 || i === maxlen) ? 'CONNECT' : 'BENDING',\r\n                    index: dot.index,\r\n                    space: dot.space,\r\n                    point: {\r\n                        x: dot.x,\r\n                        y: dot.y\r\n                    },\r\n                    event: {\r\n                        x: dot.x,\r\n                        y: dot.y\r\n                    },\r\n                    range: {\r\n                        start: dot.range[0],\r\n                        end:   dot.range[1]\r\n                    },\r\n                    delta: {\r\n                        x: 0,\r\n                        y: 0\r\n                    },\r\n                    snap: {\r\n                        hor: [],\r\n                        ver: []\r\n                    }\r\n                };\r\n                \r\n                control.draggable({ghost: false});\r\n                control.cursor('default');\r\n                \r\n                control.on('beforedrag', _.bind(me.onControlStart, me, _, context, control));\r\n                control.on('drag',  _.bind(me.onControlMove,  me, _, context, control));\r\n                control.on('afterdrag',   _.bind(me.onControlEnd,   me, _, context, control));\r\n                \r\n                control.render(editor);\r\n                controls.push(control.guid());\r\n            });\r\n            \r\n            me.cached.controls = controls;\r\n            controls = null;\r\n        },\r\n        \r\n        onControlStart: function(e, context, control) {\r\n            this.router.initTrans(context);\r\n            \r\n            if (context.trans == 'CONNECT') {\r\n                var paper = this.component().paper();\r\n                if (paper) {\r\n                    paper.addClass('linking');\r\n                }\r\n            }\r\n\r\n            var snaphor = context.snap.hor,\r\n                snapver = context.snap.ver;\r\n            \r\n            control.draggable().snap([\r\n                function(x, y){\r\n                    var sx = Graph.util.snapValue(x, snapver),\r\n                        sy = Graph.util.snapValue(y, snaphor);\r\n                    \r\n                    return {\r\n                        x: sx,\r\n                        y: sy,\r\n                        range: 10\r\n                    };\r\n                }\r\n            ]);\r\n            \r\n            _.forEach(this.cached.controls, function(id){\r\n                var c = Graph.registry.vector.get(id);\r\n                if (c && c !== control) {\r\n                    c.hide();\r\n                }\r\n            });\r\n            \r\n            control.show();\r\n        },\r\n        \r\n        onControlMove: function(e, context, control) {\r\n            var me = this;\r\n            \r\n            context.delta.x += e.dx;\r\n            context.delta.y += e.dy;\r\n            \r\n            var x1, y1, x2, y2;\r\n            \r\n            x1 = context.event.x,\r\n            y1 = context.event.y;\r\n            \r\n            if (context.trans == 'BENDING') {\r\n                me.router.bending(context, function(result){\r\n                    me.reload(result.command, true);\r\n                });\r\n            } else {\r\n                me.router.connecting(context, function(result){\r\n                    me.reload(result.command, true);\r\n                });\r\n            }\r\n            \r\n            x2 = context.event.x,\r\n            y2 = context.event.y;\r\n            \r\n            // update dragger\r\n            e.originalData.dx = (x2 - x1);\r\n            e.originalData.dy = (y2 - y1);\r\n        },\r\n        \r\n        onControlEnd: function(e, context, control) {\r\n            this.router.stopTrans(context);\r\n\r\n            if (context.trans == 'CONNECT') {\r\n                var paper = this.component().paper();\r\n                if (paper) {\r\n                    paper.removeClass('linking');\r\n                }\r\n            }\r\n\r\n            this.reload(this.router.command());\r\n            this.invalidate();\r\n            this.resumeControl();\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.link.Orthogonal = Graph.extend(Graph.link.Link, {\r\n\r\n        reload: function(command, silent) {\r\n            var convex, smooth, radius, routes, maxlen, segments;\r\n            \r\n            silent = _.defaultTo(silent, false);\r\n            convex = this.cached.convex;\r\n            smooth = this.props.smooth;\r\n\r\n            if (convex) {\r\n                var points = this.router.waypoints();\r\n\r\n                if ( ! points) {\r\n                    return;\r\n                }\r\n\r\n                routes = points.slice();\r\n                maxlen = routes.length - 1;\r\n\r\n                segments = [];\r\n\r\n                _.forEach(routes, function(curr, i){\r\n                    var prev = curr,\r\n                        next = routes[i + 1];\r\n\r\n                    var item;\r\n\r\n                    if (i === 0) {\r\n                        item = ['M', curr.x, curr.y];\r\n                    } else {\r\n                        item = ['L', curr.x, curr.y];\r\n                    }\r\n\r\n                    segments.push(item);\r\n\r\n                    if (convex[i]) {\r\n                        _.forEach(convex[i], function(c){\r\n                            var conseg = Graph.util.convexSegment(c, prev, next);\r\n                            if (conseg) {\r\n                                segments.push(conseg[0], conseg[1]);\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                command = Graph.util.segments2path(segments);\r\n            }\r\n\r\n            if (smooth) {\r\n                radius = this.props.smoothness || 6;\r\n                segments = segments || Graph.util.path2segments(command).slice();\r\n\r\n                var item, prev, next, curr, i;\r\n                var bend;\r\n\r\n                for (i = 0; i < segments.length; i++) {\r\n                    item = segments[i];\r\n                    next = segments[i + 1];\r\n\r\n                    bend = !!(item[0] == 'L' && next && next[0] != 'Q');\r\n\r\n                    if (bend) {\r\n                        curr = {\r\n                            x: item[item.length - 2],\r\n                            y: item[item.length - 1]\r\n                        };\r\n\r\n                        prev = segments[i - 1];\r\n\r\n                        if (prev && next) {\r\n                            var ss = Graph.util.smoothSegment(\r\n                                curr,\r\n                                { x: prev[prev.length - 2], y: prev[prev.length - 1] },\r\n                                { x: next[next.length - 2], y: next[next.length - 1] },\r\n                                radius\r\n                            );\r\n\r\n                            if (ss) {\r\n                                segments.splice(i, 1, ss[0], ss[1]);\r\n                                i++;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                command = Graph.util.segments2path(segments);\r\n\r\n            }\r\n\r\n            command = command || '';\r\n\r\n            this.component('coat').attr('d', command).dirty(true);\r\n            this.component('path').attr('d', command);\r\n            this.invalidate();\r\n\r\n            if ( ! silent) {\r\n                this.refresh();\r\n                this.fire('change');\r\n                Graph.topic.publish('link:change');\r\n            }\r\n        },\r\n\r\n        renderControl: function() {\r\n            var me = this, editor = me.component('editor');\r\n\r\n            if (me.cached.controls) {\r\n                _.forEach(me.cached.controls, function(c){\r\n                    c = Graph.registry.vector.get(c);\r\n                    c.remove();\r\n                });\r\n                me.cached.controls = null;\r\n            }\r\n\r\n            var points = this.cached.bendpoints,\r\n                linkid = me.guid(),\r\n                maxlen = points.length - 1,\r\n                controls = [],\r\n                controlImage = Graph.config.base + 'img/' + Graph.config.resizer.image,\r\n                controlSize = Graph.config.resizer.size;\r\n\r\n            _.forEach(points, function(dot, i){\r\n                var control, cursor, align, axis, drag;\r\n\r\n                control = (new Graph.svg.Image(\r\n                    controlImage,\r\n                    dot.x - controlSize / 2,\r\n                    dot.y - controlSize / 2,\r\n                    controlSize,\r\n                    controlSize\r\n                ));\r\n\r\n                control.selectable(false);\r\n                control.removeClass(Graph.styles.VECTOR);\r\n                control.elem.group('graph-link');\r\n                control.elem.data(Graph.string.ID_LINK, linkid);\r\n\r\n                drag = {ghost: false};\r\n                axis = null;\r\n                cursor = 'default';\r\n\r\n                if (i === 0) {\r\n                    control.addClass(Graph.styles.LINK_TAIL);\r\n                    control.elem.data('pole', 'tail');\r\n                } else if (i === maxlen) {\r\n                    control.addClass(Graph.styles.LINK_HEAD);\r\n                    control.elem.data('pole', 'head');\r\n                } else {\r\n                    align  = Graph.util.pointAlign(dot.start, dot.end);\r\n                    axis   = align == 'v' ? 'y' : 'x';\r\n                    cursor = axis  == 'x' ? 'ew-resize' : 'ns-resize';\r\n\r\n                    drag = {ghost:false, axis: axis};\r\n                }\r\n\r\n                var context = {\r\n\r\n                    trans: (i === 0 || i === maxlen) ? 'CONNECT' : 'BENDING',\r\n                    index: dot.index,\r\n                    axis: axis,\r\n                    cursor: cursor,\r\n                    point: {\r\n                        x: dot.x,\r\n                        y: dot.y\r\n                    },\r\n\r\n                    ranges: {\r\n                        start: dot.range[0],\r\n                        end:   dot.range[1]\r\n                    },\r\n\r\n                    event: {\r\n                        x: dot.x,\r\n                        y: dot.y\r\n                    },\r\n\r\n                    snap: {\r\n                        hor: [],\r\n                        ver: []\r\n                    },\r\n\r\n                    delta: {\r\n                        x: 0,\r\n                        y: 0\r\n                    }\r\n                };\r\n\r\n\r\n                control.draggable(drag);\r\n                control.cursor(cursor);\r\n\r\n                control.on('beforedrag', _.bind(me.onControlStart, me, _, context, control));\r\n                control.on('drag',  _.bind(me.onControlMove,  me, _, context));\r\n                control.on('afterdrag',   _.bind(me.onControlEnd,   me, _, context, control));\r\n\r\n                control.render(editor);\r\n                controls.push(control.guid());\r\n            });\r\n\r\n            me.cached.controls = controls;\r\n            controls = null;\r\n        },\r\n\r\n        onControlStart: function(e, context, control) {\r\n            this.component('coat').cursor(context.cursor);\r\n            this.router.initTrans(context);\r\n\r\n            if (context.trans == 'CONNECT') {\r\n                var paper = this.component().paper();\r\n                if (paper) {\r\n                    paper.addClass('linking');\r\n                }\r\n            }\r\n\r\n            // snapping\r\n            var snaphor = context.snap.hor,\r\n                snapver = context.snap.ver;\r\n\r\n            control.draggable().snap([\r\n                function(x, y) {\r\n                    var sx = Graph.util.snapValue(x, snapver),\r\n                        sy = Graph.util.snapValue(y, snaphor);\r\n\r\n                    return {\r\n                        x: sx,\r\n                        y: sy,\r\n                        range: 10\r\n                    };\r\n                }\r\n            ]);\r\n\r\n            _.forEach(this.cached.controls, function(id){\r\n                var c = Graph.registry.vector.get(id);\r\n                if (c && c !== control) {\r\n                    c.hide();\r\n                }\r\n            });\r\n\r\n            control.show();\r\n            this.removeConvex();\r\n        },\r\n\r\n        onControlMove: function(e, context) {\r\n            var me = this;\r\n\r\n            context.delta.x += e.dx;\r\n            context.delta.y += e.dy;\r\n\r\n            var x1, y1, x2, y2, dx, dy;\r\n\r\n            x1 = context.event.x;\r\n            y1 = context.event.y;\r\n\r\n            if (context.trans == 'BENDING') {\r\n                me.router.bending(context, function(result){\r\n                    me.reload(result.command, true);\r\n                });\r\n            } else {\r\n                me.router.connecting(context, function(result){\r\n                    me.reload(result.command, true);\r\n                });\r\n            }\r\n\r\n            x2 = context.event.x;\r\n            y2 = context.event.y;\r\n\r\n            dx = x2 - x1;\r\n            dy = y2 - y1;\r\n\r\n            // update dragger\r\n            e.originalData.dx = dx;\r\n            e.originalData.dy = dy;\r\n        },\r\n\r\n        onControlEnd: function(e, context, control) {\r\n            this.component('coat').cursor('pointer');\r\n            this.router.stopTrans(context);\r\n\r\n            if (context.trans == 'CONNECT') {\r\n                var paper = this.component().paper();\r\n                if (paper) {\r\n                    paper.removeClass('linking');\r\n                }\r\n            }\r\n\r\n            this.reload(this.router.command());\r\n            this.invalidate();\r\n            this.resumeControl();\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.link.Orthogonal';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var KEY_TRESHOLD = 1e-9;\r\n    var SLOPE_TRESHOLD = .1;\r\n    \r\n    var Sweeplink = Graph.util.Sweeplink = function(links) {\r\n        \r\n        var me = this;\r\n        \r\n        me.points = [];\r\n        me.queue = [];\r\n        me.lines = [];\r\n        me.found = [];\r\n        me.process = [];\r\n        \r\n        _.forEach(links, function(link){\r\n            var dots = me.extract(link);\r\n            Array.prototype.push.apply(me.points, dots);\r\n        });\r\n\r\n        _.forEach(me.points, function(p, i){\r\n            if (i % 2) me.lines.push(_.sortBy( [p, me.points[i - 1]], 'y' ));\r\n        });\r\n        \r\n        _.forEach(me.lines, function(d, i){\r\n            if (d[0].x == d[1].x) {\r\n                d[0].x += SLOPE_TRESHOLD;\r\n                d[1].x -= SLOPE_TRESHOLD;\r\n            }\r\n\r\n            if (d[0].y == d[1].y) {\r\n                d[0].y -= SLOPE_TRESHOLD;\r\n                d[1].y += SLOPE_TRESHOLD;\r\n            }\r\n\r\n            d[0].line = d;\r\n            d[1].line = d;\r\n        });\r\n        \r\n    };\r\n\r\n    Sweeplink.prototype.constructor = Sweeplink;\r\n\r\n    Sweeplink.prototype.extract = function(link) {\r\n        var segments = link.router.path().curve().segments, \r\n            dots = [];\r\n\r\n        var x, y;\r\n        \r\n        _.forEach(segments, function(s, i){\r\n            var p = i === 0 ? {x: s[1], y: s[2]} : {x: s[5], y: s[6]};\r\n            var q = segments[i + 1];\r\n            \r\n            if (q) {\r\n                \r\n                q = {x: q[5], y: q[6]};\r\n                \r\n                Graph.util.movepoint(p, q, -20);\r\n                Graph.util.movepoint(q, p, -20);\r\n\r\n                p.x = Math.round(p.x, 3);\r\n                p.y = Math.round(p.y, 3);\r\n\r\n                q.x = Math.round(q.x, 3);\r\n                q.y = Math.round(q.y, 3);\r\n\r\n                p.link = link;\r\n                q.link = link;\r\n\r\n                p.range = i;\r\n                q.range = i + 1;\r\n\r\n                dots.push(p, q);\r\n            }\r\n            \r\n        });\r\n\r\n        return dots;\r\n    };\r\n\r\n    Sweeplink.prototype.findConvex = function() {\r\n        var me = this, linesByY;\r\n        \r\n        me.queue = createTree(me.points.slice())\r\n            .key(function(d){ return d.y + KEY_TRESHOLD * d.x; })\r\n            .order();\r\n        \r\n        me.found = [];\r\n        me.process = createTree([]);\r\n\r\n        for (var i = 0; i < me.queue.length && i < 1000; i++) {\r\n            \r\n            var d = me.queue[i];\r\n            var index, indexA, indexB, minIndex;\r\n            \r\n\r\n            if (d.line && d.line[0] == d) {\r\n                d.type = 'insert';\r\n                index = me.process\r\n                    .key(function(e){ return me.intercept(e, d.y - KEY_TRESHOLD / 1000); })\r\n                    .insert(d.line);\r\n                \r\n                me.validate(d.line, me.process[index + 1]);\r\n                me.validate(d.line, me.process[index - 1]);\r\n                \r\n            } else if (d.line) {\r\n                d.type = 'removal';\r\n                index = me.process.findIndex(d.line);\r\n                me.process.remove(d.line);\r\n                \r\n                me.validate(me.process[index - 1], me.process[index]);\r\n            } else if (d.lineA && d.lineB) {\r\n                me.process.key(function(e){ return me.intercept(e, d.y - KEY_TRESHOLD / 1000); });\r\n                \r\n                indexA = me.process.findIndex(d.lineA);\r\n                indexB = me.process.findIndex(d.lineB);\r\n                  \r\n                if (indexA == indexB) indexA = indexA + 1\r\n                  \r\n                me.process[indexA] = d.lineB;\r\n                me.process[indexB] = d.lineA;\r\n\r\n                minIndex = indexA < indexB ? indexA : indexB\r\n\r\n                me.validate(me.process[minIndex - 1], me.process[minIndex])\r\n                me.validate(me.process[minIndex + 1], me.process[minIndex + 2])\r\n            }\r\n        }\r\n        \r\n        var convex = {};\r\n        \r\n        _.forEach(this.found, function(f){\r\n            \r\n            var routes, rangeStart, rangeEnd, segmentAlign, segmentStart, segmentEnd,\r\n                alignA, alignB, line, link, guid;\r\n            \r\n            alignA = Graph.util.pointAlign(f.lineA[0], f.lineA[1], 10);\r\n            alignB = Graph.util.pointAlign(f.lineB[0], f.lineB[1], 10);\r\n            \r\n            if (alignA != alignB) {\r\n                segmentAlign = alignA == 'v' ? alignA : alignB;\r\n                \r\n                line = alignA == 'v' ? f.lineA : f.lineB;\r\n                link = line[0].link;\r\n                guid = link.guid();\r\n                \r\n                routes = link.router.waypoints();\r\n                \r\n                rangeStart = Math.min(line[0].range, line[1].range),\r\n                rangeEnd   = Math.max(line[0].range, line[1].range);\r\n                \r\n                segmentStart = routes[rangeStart];\r\n                segmentEnd = routes[rangeEnd];\r\n                \r\n                if ( ! convex[guid]) {\r\n                    convex[guid] = {};\r\n                }\r\n                \r\n                if ( ! convex[guid][rangeStart]) {\r\n                    convex[guid][rangeStart] = createTree([])\r\n                        .key(function(c){\r\n                            if (c.segmentAlign == 'v') {\r\n                                if (c.segmentStart.x < c.segmentEnd.x) {\r\n                                    return c.x + c.segmentStart.x;\r\n                                } else {\r\n                                    return c.segmentStart.x - c.x;\r\n                                }\r\n                            } else {\r\n                                if (c.segmentStart.y < c.segmentEnd.y) {\r\n                                    return c.y + c.segmentStart.y;\r\n                                } else {\r\n                                    return c.segmentStart.y - c.y;\r\n                                }\r\n                            }\r\n                        });\r\n                }\r\n                \r\n                convex[guid][rangeStart].insert({\r\n                    x: f.x,\r\n                    y: f.y,\r\n                    link: link.guid(),\r\n                    rangeStart: rangeStart,\r\n                    rangeEnd: rangeEnd,\r\n                    segmentAlign: segmentAlign,\r\n                    segmentStart: segmentStart,\r\n                    segmentEnd: segmentEnd\r\n                });\r\n                \r\n            }\r\n            \r\n        });\r\n        \r\n        return convex;\r\n    };\r\n    \r\n    Sweeplink.prototype.intersect = function(a, b, c, d) {\r\n        var det = (a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x),\r\n            l   = a.x * b.y - a.y * b.x,\r\n            m   = c.x * d.y - c.y * d.x,\r\n            ix  = (l * (c.x - d.x) - m * (a.x - b.x)) / det,\r\n            iy  = (l * (c.y - d.y) - m * (a.y - b.y)) / det,\r\n            i   = {x: ix, y: iy};\r\n\r\n        i.isOverlap = (ix == a.x && iy == a.y) || (ix == b.x && iy == b.y)\r\n        i.isIntersection = ! (a.x < ix ^ ix < b.x) && ! (c.x < ix ^ ix < d.x) && ! i.isOverlap && det\r\n        \r\n        // if (isNaN(i.x)) debugger\r\n\r\n        return i;\r\n    };\r\n    \r\n    Sweeplink.prototype.validate = function(a, b) {\r\n        if ( ! a || ! b ) return;\r\n        var i = this.intersect(a[0], a[1], b[0], b[1]);\r\n        \r\n        i.lineA = a;\r\n        i.lineB = b;\r\n        \r\n        if (i.isIntersection) {\r\n            this.found.push(i) && this.queue.insert(i);\r\n        }\r\n    };\r\n\r\n    Sweeplink.prototype.intercept = function(line, y) {\r\n        var a = line[0], \r\n            b = line[1],\r\n            m = (a.y - b.y) / (a.x - b.x);\r\n\r\n        return (y - a.y + m * a.x) / m;\r\n    }\r\n\r\n    Sweeplink.prototype.destroy = function() {\r\n        this.points = null;\r\n        this.lines = null;\r\n        this.found = null;\r\n        this.queue = null;\r\n        this.process = null;\r\n    };\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function createTree(array) {\r\n        var key = function(d){ return d; };\r\n        var bisect = _.bisector(function(d){ return key(d); }).left;\r\n        \r\n        array.insert = function(d) {\r\n            var i = array.findIndex(d);\r\n            var v = key(d);\r\n            if (array[i] && v == key(array[i])) return;\r\n            array.splice(i, 0, d);\r\n            return i;\r\n        };\r\n\r\n        array.remove = function(d) {\r\n            var i = array.findIndex(d);\r\n            array.splice(i, 1);\r\n            return i;\r\n        };\r\n\r\n        array.findIndex = function(d) {\r\n            return bisect(array, key(d));\r\n        };\r\n\r\n        array.key = function(f) {\r\n            key = f;\r\n            return array;\r\n        };\r\n\r\n        array.swap = function() {\r\n\r\n        };\r\n\r\n        array.order = function() {\r\n            array.sort(_.ascendingKey(key));\r\n            return array;\r\n        };\r\n\r\n        return array;\r\n    }\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Plugin = Graph.extend({\r\n\r\n        props: {\r\n            vector: null,\r\n            activator: 'tool'\r\n        },\r\n\r\n        cached: {\r\n            \r\n        },\r\n\r\n        /**\r\n         * Get/set options\r\n         */\r\n        options: function(options) {\r\n\r\n        },\r\n        \r\n        vector: function() {\r\n            return Graph.registry.vector.get(this.props.vector);\r\n        },\r\n\r\n        invalidate: function() {\r\n            \r\n        },\r\n\r\n        enable: function(activator) {},\r\n\r\n        disable: function() {},\r\n\r\n        destroy: function() {}\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Manager = Graph.diagram.Manager = Graph.extend({\r\n\r\n        props: {\r\n            paper: null,\r\n            defaultType: 'activity'\r\n        },\r\n\r\n        pallets: [],\r\n        diagram: null,\r\n        snapshoot: [],\r\n\r\n        constructor: function(paper) {\r\n            this.props.paper = paper.guid();\r\n            paper.on('keynavdown', _.bind(this.onKeynavDown, this));\r\n        },\r\n\r\n        paper: function() {\r\n            return Graph.registry.vector.get(this.props.paper);\r\n        },\r\n\r\n        deselectAll: function() {\r\n            this.paper().collector().clearCollection();\r\n        },\r\n\r\n        removeSelection: function() {\r\n            var selection = this.paper().collector().collection.toArray().slice();\r\n                  \r\n            this.capture();\r\n\r\n            _.forEach(selection, function(vector){\r\n                vector.remove();\r\n            });\r\n        },\r\n\r\n        capture: function() {\r\n            // capture to snapshoot\r\n        },\r\n\r\n        undo: function() {\r\n\r\n        },\r\n\r\n        redo: function() {\r\n\r\n        },\r\n\r\n        addPallet: function(pallet) {\r\n            var me = this,\r\n                paper = me.paper(),\r\n                layout = paper.layout(),\r\n                scale = layout.scale(),\r\n                drawing = null;\r\n\r\n            me.pallets.push(pallet);\r\n\r\n            pallet.on({\r\n                pick: function(e) {\r\n                    paper.tool().activate('panzoom');\r\n\r\n                    if ( ! me.diagram) {\r\n                        me.create(me.props.defaultType);\r\n                    }\r\n\r\n                    var origin = layout.pointerLocation({\r\n                        clientX: e.offset.x,\r\n                        clientY: e.offset.y\r\n                    });\r\n\r\n                    var options = {\r\n                        left: origin.x,\r\n                        top: origin.y\r\n                    };\r\n\r\n                    var result = me.diagram.drawShape(e.shape, options);\r\n                    \r\n                    if (result.movable) {\r\n                        drawing = result.shape;\r\n                        scale = paper.layout().scale();\r\n                    } else {\r\n                        drawing = null;\r\n                        pallet.stopPicking();\r\n                    }\r\n\r\n                },\r\n                drag: function(e) {\r\n                    if (drawing) {\r\n                        var dx = e.dx,\r\n                            dy = e.dy;\r\n\r\n                        dx /= scale.x;\r\n                        dy /= scale.y;\r\n\r\n                        if (scale.x < 1) {\r\n                            dx += scale.x;\r\n                        }\r\n\r\n                        drawing.translate(dx, dy);\r\n                    }\r\n                },\r\n                drop: function(e) {\r\n                    if (drawing) {\r\n                        drawing = null;\r\n                    }\r\n                }\r\n            });\r\n\r\n        },\r\n\r\n        current: function() {\r\n            return this.diagram;\r\n        },\r\n\r\n        remove: function() {\r\n            this.diagram = null;\r\n            this.paper().fire('diagram.destroy');\r\n        },\r\n\r\n        create: function(type, options, silent) {\r\n            type = _.defaultTo(this.props.defaultType);\r\n\r\n            var clazz = Graph.diagram.type[_.capitalize(type)],\r\n                paper = this.paper();\r\n\r\n            this.diagram = Graph.factory(clazz, [paper, options]);\r\n            silent = _.defaultTo(silent, false);\r\n\r\n            if ( ! silent) {\r\n                paper.fire('diagram.create', {\r\n                    diagram: this.diagram\r\n                });\r\n            }\r\n\r\n            return this.diagram;\r\n        },\r\n\r\n        saveAs: function(type, filename) {\r\n            var exporter = new Graph.data.Exporter(this.paper());\r\n              \r\n            switch(type) {\r\n                case 'svg':\r\n                    exporter.exportSVG(filename);\r\n                    break;\r\n                case 'png':\r\n                    exporter.exportPNG(filename);\r\n                    break;\r\n                case 'jpg':\r\n                case 'jpeg':\r\n                    exporter.exportJPEG(filename);\r\n                    break;\r\n            }\r\n\r\n            exporter = null;\r\n        },\r\n\r\n        saveAsBlob: function(callback) {\r\n            var exporter = new Graph.data.Exporter(this.paper());\r\n            return exporter.exportBlob(callback);\r\n        },\r\n\r\n        onKeynavDown: function(e) {\r\n            switch (e.keyCode) {\r\n                case Graph.event.DELETE:\r\n                    this.removeSelection();\r\n                    e.preventDefault();\r\n                    break;\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Definer = Graph.extend(Graph.plugin.Plugin, {\r\n        props: {\r\n            vector: null\r\n        },\r\n\r\n        definitions: {\r\n\r\n        },\r\n\r\n        components: {\r\n            holder: null\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            this.props.vector = vector.guid();\r\n\r\n            this.components.holder = Graph.$('<defs/>');\r\n            this.components.holder.prependTo(vector.elem);\r\n\r\n            if (vector.isPaper()) {\r\n                this.defineArrowMarker('marker-link-end');\r\n                this.defineCircleMarker('marker-link-start-circle');\r\n            }\r\n\r\n        },\r\n        \r\n        defineArrowMarker: function(id) {\r\n            if (this.definitions[id]) {\r\n                return this.definitions[id];\r\n            }\r\n\r\n            var marker = Graph.$(_.format(\r\n                '<marker id=\"{0}\" refX=\"{1}\" refY=\"{2}\" viewBox=\"{3}\" markerWidth=\"{4}\" markerHeight=\"{5}\" orient=\"{6}\">' + \r\n                    '<path d=\"{7}\" fill=\"{8}\" stroke-width=\"{9}\" stroke-linecap=\"{10}\" stroke-dasharray=\"{11}\">' + \r\n                    '</path>'+\r\n                '</marker>',\r\n                id, '11', '10', '0 0 20 20', '10', '10', 'auto',\r\n                'M 1 5 L 11 10 L 1 15 Z', '#000000', '1', 'round', '10000, 1'\r\n            ));\r\n\r\n            this.definitions[id] = marker;\r\n            this.components.holder.append(marker);\r\n\r\n            return marker;\r\n        },\r\n\r\n        defineCircleMarker: function(id) {\r\n            if (this.definitions[id]) {\r\n                return this.definitions[id];\r\n            }\r\n\r\n            var marker = Graph.$(_.format(\r\n                '<marker id=\"{0}\" refX=\"{1}\" refY=\"{2}\" viewBox=\"{3}\" markerWidth=\"{4}\" markerHeight=\"{5}\" orient=\"{6}\">' + \r\n                    '<circle cx=\"6\" cy=\"6\" r=\"4\" fill=\"none\" stroke=\"#000000\" stroke-width=\"1\" />' + \r\n                '</marker>',\r\n                id, '6', '6', '0 0 20 20', '10', '10', 'auto'\r\n            ));\r\n\r\n            this.definitions[id] = marker;\r\n            this.components.holder.append(marker);\r\n\r\n            return marker;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Definer';\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n    \r\n    // storages\r\n    var vendors = {};\r\n\r\n    var Reactor = Graph.plugin.Reactor = function(vector, listeners) {\r\n\r\n        var me = this,\r\n            node = vector.node(),\r\n            guid = vector.guid();\r\n\r\n        me.props = {\r\n            vector: guid\r\n        };\r\n\r\n        me.navigationKeys = [\r\n            Graph.event.ENTER,\r\n            Graph.event.DELETE,\r\n            Graph.event.SHIFT,\r\n            Graph.event.CTRL,\r\n            Graph.event.ESC\r\n        ];\r\n\r\n        me.listeners = listeners || {};\r\n\r\n        var vendor = vendors[guid] = interact(node);\r\n\r\n        vendor.on('down', function reactorDown(e){\r\n            if (e.target === node) {\r\n                e.originalType = 'pointerdown';\r\n                Graph.topic.publish('vector:pointerdown', {vector: vector});\r\n                vector.fire(e);\r\n            }\r\n        }, true);\r\n\r\n        vector.elem.on({\r\n            contextmenu: function(e) {\r\n                if (e.currentTarget === node) {\r\n                    vector.fire(e);\r\n                    // e.preventDefault();\r\n                }\r\n            }\r\n        });\r\n\r\n        if (vector.isPaper()) {\r\n            var doc = Graph.$(document);\r\n\r\n            doc.on('keydown', function(e){\r\n                if (me.isNavigation(e) && Graph.cached.paper == guid) {\r\n                    e.originalType = 'keynavdown';\r\n                    vector.fire(e); \r\n                }\r\n            });\r\n\r\n            doc.on('keyup', function(e){\r\n                if (me.isNavigation(e) && Graph.cached.paper == guid) {\r\n                    e.originalType = 'keynavup';\r\n                    vector.fire(e);\r\n                }\r\n            });\r\n\r\n            doc = null;\r\n        }\r\n\r\n        vendor = null;\r\n\r\n    };\r\n\r\n    Reactor.prototype.constructor = Reactor;\r\n\r\n    Reactor.prototype.fire = function(eventType) {\r\n        var eventObject;\r\n\r\n        switch(eventType) {\r\n            case 'down':\r\n\r\n                eventObject = {\r\n                    type: 'mousedown'\r\n                };\r\n\r\n                break;\r\n        }\r\n\r\n        if (eventObject) {\r\n            // this.vendor().fire(eventObject);\r\n        }\r\n    };\r\n\r\n    Reactor.prototype.isNavigation = function(e) {\r\n        var key = e.keyCode;\r\n        return _.indexOf(this.navigationKeys, key) > -1;\r\n    };\r\n    \r\n    Reactor.prototype.vendor = function() {\r\n        return vendors[this.props.vector];\r\n    };\r\n\r\n    Reactor.prototype.draggable = function(options) {\r\n        return this.vendor().draggable(options);\r\n    };\r\n\r\n    Reactor.prototype.dropzone = function(options) {\r\n        return this.vendor().dropzone(options);\r\n    };\r\n\r\n    Reactor.prototype.gesturable = function(options) {\r\n        return this.vendor().gesturable(options);\r\n    };\r\n\r\n    Reactor.prototype.destroy = function() {\r\n        var guid = this.props.vector,\r\n            vendor = vendors[guid];\r\n\r\n        if (vendor) {\r\n            vendor.unset();\r\n        }\r\n\r\n        delete vendors[guid];\r\n    };\r\n\r\n    Reactor.prototype.toString = function() {\r\n        return 'Graph.plugin.Reactor';\r\n    };\r\n\r\n    /*var Reactor = Graph.plugin.Reactor = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null\r\n        },\r\n\r\n        navigationKeys: [\r\n            Graph.event.ENTER,\r\n            Graph.event.DELETE,\r\n            Graph.event.SHIFT,\r\n            Graph.event.CTRL,\r\n            Graph.event.ESC\r\n        ],\r\n\r\n        constructor: function(vector, listeners) {\r\n            var me = this, \r\n                node = vector.node(),\r\n                guid = vector.guid();\r\n\r\n            var vendor;\r\n\r\n            me.props.vector = guid;\r\n            me.listeners = listeners || {};\r\n\r\n\r\n            vendor = vendors[guid] = interact(node);\r\n\r\n            vendor.on('down', function reactorDown(e){\r\n                if (e.target === node) {\r\n                    e.originalType = 'pointerdown';\r\n                    Graph.topic.publish('vector:pointerdown', {vector: vector});\r\n                    vector.fire(e);\r\n                }\r\n            }, true);\r\n\r\n            vector.elem.on({\r\n                contextmenu: function(e) {\r\n                    if (e.currentTarget === node) {\r\n                        vector.fire(e);\r\n                        // e.preventDefault();\r\n                    }\r\n                }\r\n            });\r\n\r\n            if (vector.isPaper()) {\r\n                var doc = Graph.$(document);\r\n\r\n                doc.on('keydown', function(e){\r\n                    if (me.isNavigation(e) && Graph.cached.paper == guid) {\r\n                        e.originalType = 'keynavdown';\r\n                        vector.fire(e); \r\n                    }\r\n                });\r\n\r\n                doc.on('keyup', function(e){\r\n                    if (me.isNavigation(e) && Graph.cached.paper == guid) {\r\n                        e.originalType = 'keynavup';\r\n                        vector.fire(e);\r\n                    }\r\n                });\r\n\r\n                doc = null;\r\n            }\r\n\r\n            vendor = null;\r\n        },\r\n\r\n        isNavigation: function(e) {\r\n            var key = e.keyCode;\r\n            return _.indexOf(this.navigationKeys, key) > -1;\r\n        },\r\n        \r\n        vendor: function() {\r\n            return vendors[this.props.vector];\r\n        },\r\n\r\n        draggable: function(options) {\r\n            return this.vendor().draggable(options);\r\n        },\r\n\r\n        dropzone: function(options) {\r\n            return this.vendor().dropzone(options);\r\n        },\r\n\r\n        gesturable: function(options) {\r\n            return this.vendor().gesturable(options);\r\n        },\r\n\r\n        destroy: function() {\r\n            var guid = this.props.vector,\r\n                vendor = vendors[guid];\r\n\r\n            if (vendor) {\r\n                vendor.unset();\r\n            }\r\n\r\n            delete vendors[guid];\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Reactor';\r\n        }\r\n    });\r\n\r\n    var on  = Reactor.prototype.on,\r\n        off = Reactor.prototype.off;\r\n\r\n    Reactor.prototype.on = function(event, handler) {\r\n        var vector = this.vector();\r\n        return on.apply(vector, [event, handler]);\r\n    };\r\n\r\n    Reactor.prototype.off = function(event, handler) {\r\n        var vector = this.vector();\r\n        return off.apply(vector, [event, handler]);\r\n    };*/\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Transformer = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            scale: 1,\r\n            rotate: 0\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            this.actions = [];\r\n            this.props.vector = vector.guid();\r\n        },\r\n\r\n        transform: function(command) {\r\n            var me = this, segments = Graph.util.transform2segments(command);\r\n\r\n            _.forEach(segments, function(args){\r\n                var method = args.shift();\r\n                if (me[method] && _.isFunction(me[method])) {\r\n                    (function(){\r\n                        me[method].apply(me, args);\r\n                    }(method, args));    \r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        queue: function() {\r\n            var args = _.toArray(arguments);\r\n            \r\n            this.actions.push({\r\n                name: args.shift(),\r\n                args: args,\r\n                sort: this.actions.length\r\n            });\r\n\r\n            return this;\r\n        },\r\n        translate: function(dx, dy) {\r\n            dx = _.defaultTo(dx, 0);\r\n            dy = _.defaultTo(dy, 0);\r\n            this.queue('translate', dx, dy);\r\n            return this;\r\n        },\r\n        rotate: function(deg, cx, cy) {\r\n            if ( ! _.isUndefined(cx) && ! _.isUndefined(cy)) {\r\n                this.queue('rotate', deg, cx, cy);    \r\n            } else {\r\n                this.queue('rotate', deg);    \r\n            }\r\n            return this;\r\n        },\r\n        scale: function(sx, sy, cx, cy) {\r\n            sy = _.defaultTo(sy, sx);\r\n\r\n            if ( ! _.isUndefined(cx) && ! _.isUndefined(cy)) {\r\n                this.queue('scale', sx, sy, cx, cy);\r\n            } else {\r\n                this.queue('scale', sx, sy);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        matrix: function(a, b, c, d, e, f) {\r\n            this.queue('matrix', a, b, c, d, e, f);\r\n            return this;\r\n        },\r\n\r\n        commit: function(absolute, simulate) {\r\n            var me = this,\r\n                actions = me.actions,\r\n                vector = me.vector(),\r\n                events = {\r\n                    translate: false,\r\n                    rotate: false,\r\n                    scale: false\r\n                };\r\n\r\n            if ( ! actions.length) {\r\n                return;\r\n            }\r\n            \r\n            absolute = _.defaultTo(absolute, false);\r\n            simulate = _.defaultTo(simulate, false);\r\n            \r\n            var deg = 0, \r\n                dx = 0, \r\n                dy = 0, \r\n                sx = 1, \r\n                sy = 1;\r\n                \r\n            var mat = vector.matrix().clone();\r\n            \r\n            _.forEach(actions, function(act){\r\n                var arg = act.args,\r\n                    cmd = act.name,\r\n                    len = arg.length,\r\n                    inv = false;\r\n\r\n                if (absolute) {\r\n                    inv = mat.invert(true);\r\n                }\r\n                \r\n                var x1, y1, x2, y2, bb;\r\n                \r\n                if (cmd == 'translate' && len === 2) {\r\n                    if (absolute) {\r\n                        x1 = inv.x(0, 0);\r\n                        y1 = inv.y(0, 0);\r\n                        x2 = inv.x(arg[0], arg[1]);\r\n                        y2 = inv.y(arg[0], arg[1]);\r\n                        mat.translate(x2 - x1, y2 - y1);\r\n                    } else {\r\n                        mat.translate(arg[0], arg[1]);\r\n                    }\r\n                    events.translate = true;\r\n                } else if (cmd == 'rotate') {\r\n                    if (len == 1) {\r\n                        bb = bb || vector.bboxPristine().toJson();\r\n                        mat.rotate(arg[0], bb.x + bb.width / 2, bb.y + bb.height / 2);\r\n                        deg += arg[0];\r\n                    } else if (len == 3) {\r\n                        if (absolute) {\r\n                            x2 = inv.x(arg[1], arg[2]);\r\n                            y2 = inv.y(arg[1], arg[2]);\r\n                            mat.rotate(arg[0], x2, y2);\r\n                        } else {\r\n                            mat.rotate(arg[0], arg[1], arg[2]);\r\n                        }\r\n                        deg += arg[0];\r\n                    }\r\n                    events.rotate = true;\r\n                } else if (cmd == 'scale') {\r\n                    if (len === 1 || len === 2) {\r\n                        bb = bb || vector.bboxPristine().toJson();\r\n                        mat.scale(arg[0], arg[len - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\r\n                        sx *= arg[0];\r\n                        sy *= arg[len - 1];\r\n                    } else if (len === 4) {\r\n                        if (absolute) {\r\n                            x2 = inv.x(arg[2], arg[3]);\r\n                            y2 = inv.y(arg[2], arg[3]);\r\n                            mat.scale(arg[0], arg[1], x2, y2);\r\n                        } else {\r\n                            mat.scale(arg[0], arg[1], arg[2], arg[3]);\r\n                        }\r\n                        sx *= arg[0];\r\n                        sy *= arg[1];\r\n                    }\r\n                    events.scale = true;\r\n                } else if (cmd == 'matrix') {\r\n                    mat.multiply(arg[0], arg[1], arg[2], arg[3], arg[4], arg[5]);\r\n                }\r\n            });\r\n\r\n            if (simulate) {\r\n                this.actions = [];\r\n                return mat;\r\n            }\r\n            \r\n            vector.graph.matrix = mat;\r\n            vector.attr('transform', mat.toValue());\r\n\r\n            if (events.translate) {\r\n                events.translate = {\r\n                    dx: mat.e,\r\n                    dy: mat.f\r\n                };\r\n                this.fire('translate', events.translate);\r\n            }\r\n\r\n            if (events.rotate) {\r\n                events.rotate = {\r\n                    deg: deg\r\n                };\r\n                this.fire('rotate', events.rotate);\r\n            }\r\n\r\n            if (events.scale) {\r\n                events.scale = {\r\n                    sx: sx,\r\n                    sy: sy\r\n                };\r\n                this.fire('scale', events.scale);\r\n            }\r\n\r\n            this.actions = [];\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Transformer';\r\n        }\r\n    });\r\n    \r\n}());","\r\n(function(){\r\n    var global = this;\r\n\r\n    var Animator = Graph.plugin.Animator = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n\r\n            // default duration\r\n            duration: 1000,\r\n\r\n            // default easing\r\n            easing: 'linier'\r\n        },\r\n\r\n        stacks: [],\r\n\r\n        constructor: function(vector) {\r\n            this.props.vector = vector.guid();\r\n        },\r\n        \r\n        create: function(keyframes, duration, easing, callback) {\r\n            return new Animation(keyframes, duration, easing, callback);\r\n        },\r\n\r\n        animate: function(params, duration, easing, callback) {\r\n            var vector = this.vector(),\r\n                reset = _.extend({}, vector.attrs);\r\n\r\n            var scenes, animation;\r\n\r\n            if (params instanceof Animation ) {\r\n                animation = params;\r\n            } else {\r\n                duration = _.defaultTo(duration, this.props.duration);\r\n\r\n                if (_.isFunction(easing)) {\r\n                    callback = easing;\r\n                    easing = this.props.easing;\r\n                }\r\n\r\n                if ( ! easing) {\r\n                    easing = this.props.easing;\r\n                }\r\n\r\n                scenes = {\r\n                    100: params\r\n                };\r\n\r\n                animation = new Animation(scenes, duration, easing, callback);\r\n            }\r\n\r\n            if ( ! animation.count()) {\r\n                animation = null;\r\n                return;\r\n            }\r\n\r\n            reset.transform = vector.attrs.transform;\r\n            reset.matrix = vector.matrix().clone();\r\n\r\n            this.start(\r\n                animation, \r\n                animation.frame(0), \r\n                reset, \r\n                null\r\n            );\r\n\r\n            animation = null;\r\n\r\n            return this;\r\n        },\r\n\r\n        resume: function() {\r\n\r\n        },\r\n\r\n        pause: function() {\r\n\r\n        },\r\n\r\n        stop: function() {\r\n\r\n        },\r\n\r\n        start: function(animation, frame, reset, status) {\r\n            var asize = animation.count();\r\n\r\n            if ( ! asize) {\r\n                animation = null;\r\n                return;\r\n            }\r\n\r\n            var vector = this.vector(),\r\n                ssize = this.stacks.length,\r\n                origin = {},\r\n                delta = {},\r\n                from = {},\r\n                to = {};\r\n\r\n            var scene, queue, last, time, playing, applied, p, i;\r\n\r\n            if (status) {\r\n                for (i = 0; i < ssize; i++) {\r\n                    p = this.stacks[i];\r\n                    if (p.animation == animation) {\r\n                        if (p.frame != frame) {\r\n                            this.stacks.splice(i, 1);\r\n                            applied = 1;\r\n                        } else {\r\n                            playing = p;\r\n                        }\r\n                        vector.attr(p.reset);\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                status = +to;\r\n            }\r\n\r\n            queue = {\r\n                animation: animation,\r\n                vector: vector\r\n            };\r\n\r\n            time = animation.duration();\r\n            last = animation.at(asize - 1).frame;\r\n\r\n            for (i = 0; i < asize; i++) {\r\n                scene = animation.at(i);\r\n                if (scene.frame == frame || scene.frame > status * last) {\r\n\r\n                    queue.prev = animation.at(i - 1);\r\n                    queue.prev = queue.prev ? queue.prev.frame : 0;\r\n\r\n                    queue.frame = scene.frame;\r\n                    queue.duration = time / last * (queue.frame - queue.prev);\r\n\r\n                    queue.next = animation.at(i + 1);\r\n                    queue.next = queue.next ? queue.next.frame : undefined;\r\n\r\n                    queue.last = last;\r\n                    break;\r\n                } else if (status) {\r\n                    vector.attr(scene.params);\r\n                }\r\n            }\r\n\r\n            if ( ! playing) {\r\n\r\n                time = queue.duration;\r\n\r\n                _.forOwn(scene.params, function(v, k){\r\n                    \r\n                    var able = Animation.animable[k];\r\n                    var plugin, matrix, inverse, segments;\r\n                    var i, j, ii, jj;\r\n\r\n                    if (able) {\r\n                        from[k] = vector.attrs[k];\r\n                        from[k] = _.defaultTo(from[k], able.defaults);\r\n                        to[k]   = v;\r\n\r\n                        switch(able.type) {\r\n                            case 'number':\r\n                                delta[k] = (to[k] - from[k]) / time;\r\n                                break;\r\n\r\n                            case 'transform':\r\n                                var eq = equalizeTransform(vector.attrs[k], v);\r\n\r\n                                if (eq.equal) {\r\n                                    from[k]  = eq.from;\r\n                                    to[k]    = eq.to;\r\n                                    delta[k] = [];\r\n                                    delta[k].semantic = true;\r\n                                    for (i = 0, ii = from[k].length; i < ii; i++) {\r\n                                        delta[k][i] = [from[k][i][0]];\r\n                                        for (j = 1, jj = from[k][i].length; j < jj; j++) {\r\n                                            delta[k][i][j] = (to[k][i][j] - from[k][i][j]) / time;\r\n                                        }\r\n                                    }\r\n                                } else {\r\n                                    plugin = vector.plugins.transformer;\r\n                                    segments = Graph.util.transform2segments(to[k]);\r\n\r\n                                    matrix = vector.matrix();\r\n\r\n                                    from[k] = matrix.clone();\r\n                                    inverse = matrix.invert(true);\r\n\r\n                                    vector.graph.matrix = matrix.multiply(inverse);\r\n\r\n                                    _.forEach(segments, function(s){\r\n                                        var cmd = s[0], args = s.slice(1);\r\n                                        plugin[cmd].apply(plugin, args);\r\n                                    });\r\n\r\n                                    matrix = plugin.commit(false, true);\r\n                                    to[k] = matrix.clone();\r\n\r\n                                    delta[k] = {\r\n                                        a: (to[k].props.a - from[k].props.a) / time,\r\n                                        b: (to[k].props.b - from[k].props.b) / time,\r\n                                        c: (to[k].props.c - from[k].props.c) / time,\r\n                                        d: (to[k].props.d - from[k].props.d) / time,\r\n                                        e: (to[k].props.e - from[k].props.e) / time,\r\n                                        f: (to[k].props.f - from[k].props.f) / time\r\n                                    };\r\n\r\n                                    segments = null;\r\n                                    plugin = null;\r\n                                    matrix = null;\r\n                                }\r\n\r\n                                break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n                var timestamp = +new Date;\r\n\r\n                _.extend(queue, {\r\n                    scene: scene,\r\n                    timestamp: timestamp,\r\n                    start: timestamp + animation.delay(),\r\n\r\n                    reset: reset,\r\n                    from: from,\r\n                    to: to,\r\n                    delta: delta,\r\n\r\n                    status: 0,\r\n                    initstatus: status || 0,\r\n\r\n                    stop: false\r\n                });\r\n\r\n                this.stacks.push(queue);\r\n\r\n                if (status && ! playing && ! applied) {\r\n                    queue.stop = true;\r\n                    queue.start = new Date - scene.duration * status;\r\n                    if (this.stacks.length === 1) {\r\n                        return this.player();\r\n                    }\r\n                }\r\n\r\n                if (applied) {\r\n                    queue.start = new Date - scene.duration * status;\r\n                }\r\n\r\n                if (this.stacks.length === 1) {\r\n                    Animator.play(_.bind(this.player, this));\r\n                }\r\n            } else {\r\n                playing.initstatus = status;\r\n                playing.start = new Date - playing.duration * status;\r\n            }\r\n\r\n            this.fire('animstart');\r\n\r\n        },\r\n\r\n        player: function() {\r\n            var timestamp = +new Date, tick = 0;\r\n            var vector, curr, from, prog, anim, time, able, value, key, type, scene, matrix;\r\n            var plugin, matrix, method, args;\r\n            var key, to, ii, jj, i, j;\r\n\r\n            for (; tick < this.stacks.length; tick++) {\r\n                curr = this.stacks[tick];\r\n\r\n                if (curr.paused) {\r\n                    continue;\r\n                }\r\n                \r\n                prog   = timestamp - curr.start;\r\n\r\n                time   = curr.duration;\r\n                vector = curr.vector;\r\n                scene  = curr.scene;\r\n                from   = curr.from;\r\n                to     = curr.to;\r\n                delta  = curr.delta;\r\n                anim   = curr.animation;\r\n\r\n                if (curr.initstatus) {\r\n                    prog = (curr.initstatus * curr.last - curr.prev) / (curr.frame - curr.prev) * time;\r\n                    curr.status = curr.initstatus;\r\n                    delete curr.initstatus;\r\n                    curr.stop && this.stacks.splice(tick--, 1);\r\n                } else {\r\n                    curr.status = (curr.prev + (curr.frame - curr.prev) * (prog / time)) / curr.last;\r\n                }\r\n\r\n                if (prog < 0) {\r\n                    continue;\r\n                }\r\n\r\n                if (prog < time) {\r\n\r\n                    ease = scene.easing(prog / time);\r\n\r\n                    for (key in from) {\r\n                        \r\n                        able = Animation.animable[key];\r\n\r\n                        switch(able.type) {\r\n                            case 'number':\r\n\r\n                                value = +from[key] + ease * time * delta[key];\r\n                                vector.attr(name, value);\r\n\r\n                                break;\r\n                            case 'transform':\r\n\r\n                                // semantic `rotate,scale,translate`\r\n                                if (delta[key].semantic) {\r\n                                    plugin = vector.plugins.transformer;\r\n\r\n                                    for (i = 0, ii = from[key].length; i < ii; i++) {\r\n                                        method = from[key][i][0];\r\n                                        args = [];\r\n\r\n                                        for (j = 1, jj = from[key][i].length; j < jj; j++) {\r\n                                            args.push(from[key][i][j] + ease * time * delta[key][i][j]);\r\n                                        }\r\n\r\n                                        plugin[method].apply(plugin, args);\r\n                                    }\r\n\r\n                                    matrix = plugin.commit(false, true);\r\n\r\n                                    vector.attr('transform', matrix.toValue());\r\n\r\n\r\n                                    matrix = null;\r\n                                    plugin = null;\r\n\r\n                                } else {\r\n                                    matrix = Graph.matrix(\r\n                                        from[key].props.a + ease * time * delta[key].a,\r\n                                        from[key].props.b + ease * time * delta[key].b,\r\n                                        from[key].props.c + ease * time * delta[key].c,\r\n                                        from[key].props.d + ease * time * delta[key].d,\r\n                                        from[key].props.e + ease * time * delta[key].e,\r\n                                        from[key].props.f + ease * time * delta[key].f\r\n                                    );\r\n                                    vector.attr('transform', matrix.toValue());\r\n                                    matrix = null;\r\n                                }\r\n\r\n                                break;\r\n                        }\r\n                    }\r\n\r\n                } else {\r\n\r\n                    for (key in to) {\r\n                        \r\n                        able = Animation.animable[key];\r\n\r\n                        switch(able.type) {\r\n\r\n                            case 'transform':\r\n\r\n                                if (delta[key].semantic) {\r\n                                    plugin = vector.plugins.transformer;\r\n\r\n                                    _.forEach(to[key], function(v){\r\n                                        var cmd = v[0], args = v.slice(1);\r\n                                        plugin[cmd].apply(plugin, args);\r\n                                    });\r\n\r\n                                    matrix = plugin.commit(false, true);\r\n\r\n                                    vector.graph.matrix = matrix;\r\n                                    vector.attr('transform', matrix.toValue());\r\n                                    \r\n                                    matrix = null;\r\n                                    plugin = null;\r\n                                } else {\r\n                                    matrix = to[key].clone();\r\n\r\n                                    vector.graph.matrix = matrix;\r\n                                    vector.attr('transform', matrix.toValue());\r\n\r\n                                    matrix = null;\r\n                                }\r\n                                break;\r\n                            \r\n                            default:\r\n                                vector.attr(key, to[key]);\r\n                                break;\r\n                        }\r\n                    }\r\n                    \r\n                    scene.played++;\r\n\r\n                    this.stacks.splice(tick--, 1);\r\n\r\n                    var repeat = anim.repeat(), \r\n                        played = scene.played;\r\n\r\n                    if ((repeat > 1 && played < repeat) && ! curr.next ) {\r\n                        _.forOwn(anim.scenes, function(s, k){\r\n                            for (var key in s.params) {\r\n                                if (key == 'transform') {\r\n                                    vector.graph.matrix = curr.reset.matrix;\r\n                                    vector.attr('transform', curr.reset.transform);\r\n                                } else {\r\n                                    vector.attr(k, curr.reset[k]);    \r\n                                }\r\n                            }\r\n                        });\r\n\r\n                        this.start(\r\n                            anim,\r\n                            anim.frame(0),\r\n                            curr.reset,\r\n                            null\r\n                        );\r\n                    }\r\n\r\n                    if (curr.next && ! curr.stop) {\r\n                        this.start(\r\n                            anim,\r\n                            curr.next,\r\n                            curr.reset,\r\n                            null\r\n                        );\r\n                    }\r\n\r\n                    if (played >= repeat) {\r\n                        // ___DONE___?\r\n                        curr = null;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.stacks.length) {\r\n                Animator.play(_.bind(this.player, this));\r\n            } else {\r\n                // ___DONE___\r\n            }\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Animator';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n    Animator.play = (function(g){\r\n        var func = g.requestAnimationFrame || \r\n                   g.webkitRequestAnimationFrame || \r\n                   g.mozRequestAnimationFrame || \r\n                   g.oRequestAnimationFrame || \r\n                   g.msRequestAnimationFrame || \r\n                   function (callback) { \r\n                        setTimeout(callback, 16); \r\n                   };\r\n\r\n        return _.bind(func, g);\r\n    }(global));\r\n\r\n    ///////// INTERNAL ANIMATION /////////\r\n    \r\n    var Animation = Graph.extend({\r\n\r\n        props: {\r\n            easing: 'linier',\r\n            duration: 1000,\r\n            repeat: 1,\r\n            delay: 0\r\n        },\r\n        \r\n        scenes: {},\r\n        frames: [],\r\n\r\n        constructor: function(keyframes, duration, easing, callback) {\r\n            this.props.guid = 'graph-anim-' + (++Animation.guid);\r\n            this.props.duration = duration = _.defaultTo(duration, 1000);\r\n\r\n            if (_.isFunction(easing)) {\r\n                if (callback) {\r\n                    this.props.easing = 'function';\r\n                } else {\r\n                    callback = easing;\r\n                    easing = this.props.easing;\r\n                }\r\n            }\r\n\r\n            if ( ! easing) {\r\n                easing = this.props.easing;\r\n            }\r\n\r\n            if (keyframes) {\r\n                var easing = _.isString(easing) ? Animation.easing[easing] : easing,\r\n                    repeat = this.props.repeat,\r\n                    scenes = this.scenes,\r\n                    frames = this.frames;\r\n\r\n                _.forOwn(keyframes, function(f, key){\r\n                    var params = {}, frame, scene;\r\n\r\n                    frame = _.toNumber(key);\r\n\r\n                    params = _.pickBy(f, function(v, k){\r\n                        return !!Animation.animable[k];\r\n                    });\r\n\r\n                    scene = {\r\n                        frame: frame,\r\n                        params: params,\r\n                        easing: easing,\r\n                        callback: callback,\r\n                        played: 0\r\n                    };\r\n\r\n                    frames.push(frame);\r\n                    scenes[frame] = scene;\r\n                });\r\n\r\n                frames.sort(function(a, b){ return a - b });\r\n            }\r\n        },\r\n\r\n        guid: function() {\r\n            return this.props.guid;\r\n        },\r\n\r\n        duration: function() {\r\n            return this.props.duration;\r\n        },\r\n\r\n        easing: function() {\r\n            return this.props.easing;\r\n        },\r\n\r\n        delay: function(delay) {\r\n\r\n            if (delay === undefined) {\r\n                return this.props.delay;\r\n            }\r\n\r\n            var anim = new Animation();\r\n\r\n            anim.frames = this.frames;\r\n            anim.scenes = _.cloneDeep(this.scenes);\r\n            anim.props  = _.cloneDeep(this.props);\r\n            anim.props.delay = delay || 0;\r\n            \r\n            return anim;\r\n        },\r\n\r\n        repeat: function(times) {\r\n\r\n            if (times === undefined) {\r\n                return this.props.repeat;\r\n            }\r\n\r\n            var anim = new Animation();\r\n\r\n            anim.frames = this.frames.slice();\r\n            anim.scenes = _.cloneDeep(this.scenes);\r\n            anim.props  = _.cloneDeep(this.props);\r\n            anim.props.repeat = Math.floor(Math.max(times, 0)) || 1;\r\n\r\n            // reset to scenes\r\n            _.forOwn(anim.scenes, function(s, f){\r\n                s.played = 0;\r\n            });\r\n\r\n            return anim;\r\n        },\r\n\r\n        count: function() {\r\n            return this.frames.length;\r\n        },\r\n\r\n        at: function(index) {\r\n            var frame = this.frame(index);\r\n            return this.scene(frame);\r\n        },\r\n\r\n        frame: function(index) {\r\n            return this.frames[index];\r\n        },\r\n\r\n        scene: function(frame) {\r\n            return this.scenes[frame];\r\n        },\r\n\r\n        destroy: function() {\r\n            this.scenes = null;\r\n            this.frames = null;\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n    _.extend(Animation, {\r\n        guid: 0,\r\n\r\n        animable: {\r\n             x: { type: 'number', defaults: 0 },\r\n             y: { type: 'number', defaults: 0 },\r\n            cx: { type: 'number', defaults: 0 },\r\n            cy: { type: 'number', defaults: 0 },\r\n            transform: { type: 'transform', defaults: '' }\r\n        },\r\n\r\n        easing: {\r\n            linier: function(n) {\r\n                return n;\r\n            },\r\n\r\n            easeIn: function(n) {\r\n                return Math.pow(n, 1.7);\r\n            },\r\n\r\n            easeOut: function(n) {\r\n                return Math.pow(n, .48);\r\n            },\r\n\r\n            easeInOut: function(n) {\r\n                var q = .48 - n / 1.04,\r\n                    Q = Math.sqrt(.1734 + q * q),\r\n                    x = Q - q,\r\n                    X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\r\n                    y = -Q - q,\r\n                    Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\r\n                    t = X + Y + .5;\r\n                return (1 - t) * 3 * t * t + t * t * t;\r\n            },\r\n\r\n            backIn: function(n) {\r\n                var s = 1.70158;\r\n                return n * n * ((s + 1) * n - s);\r\n            },\r\n\r\n            backOut: function (n) {\r\n                n = n - 1;\r\n                var s = 1.70158;\r\n                return n * n * ((s + 1) * n + s) + 1;\r\n            },\r\n\r\n            elastic: function (n) {\r\n                if (n == !!n) {\r\n                    return n;\r\n                }\r\n                return pow(2, -10 * n) * math.sin((n - .075) * (2 * PI) / .3) + 1;\r\n            },\r\n\r\n            bounce: function (n) {\r\n                var s = 7.5625,\r\n                    p = 2.75,\r\n                    l;\r\n                if (n < (1 / p)) {\r\n                    l = s * n * n;\r\n                } else {\r\n                    if (n < (2 / p)) {\r\n                        n -= (1.5 / p);\r\n                        l = s * n * n + .75;\r\n                    } else {\r\n                        if (n < (2.5 / p)) {\r\n                            n -= (2.25 / p);\r\n                            l = s * n * n + .9375;\r\n                        } else {\r\n                            n -= (2.625 / p);\r\n                            l = s * n * n + .984375;\r\n                        }\r\n                    }\r\n                }\r\n                return l;\r\n            }\r\n        }\r\n    });\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function equalizeTransform (t1, t2) {\r\n        t2 = _.toString(t2).replace(/\\.{3}|\\u2026/g, t1);\r\n        t1 = Graph.util.transform2segments(t1) || [];\r\n        t2 = Graph.util.transform2segments(t2) || [];\r\n        \r\n        var maxlength = Math.max(t1.length, t2.length),\r\n            from = [],\r\n            to = [],\r\n            i = 0, j, jj,\r\n            tt1, tt2;\r\n\r\n        for (; i < maxlength; i++) {\r\n            tt1 = t1[i] || emptyTransform(t2[i]);\r\n            tt2 = t2[i] || emptyTransform(tt1);\r\n\r\n            if ((tt1[0] != tt2[0]) ||\r\n                (tt1[0].toLowerCase() == \"rotate\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3])) ||\r\n                (tt1[0].toLowerCase() == \"scale\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4]))) {\r\n                return {\r\n                    equal: false,\r\n                    from: tt1,\r\n                    to: tt2\r\n                }\r\n            }\r\n            from[i] = [];\r\n            to[i] = [];\r\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\r\n                j in tt1 && (from[i][j] = tt1[j]);\r\n                j in tt2 && (to[i][j] = tt2[j]);\r\n            }\r\n        }\r\n        return {\r\n            equal: true,\r\n            from: from,\r\n            to: to\r\n        };\r\n    }\r\n\r\n    function emptyTransform(item) {\r\n        var l = item[0];\r\n        switch (l.toLowerCase()) {\r\n            case \"translate\": return [l, 0, 0];\r\n            case \"matrix\": return [l, 1, 0, 0, 1, 0, 0];\r\n            case \"rotate\": if (item.length == 4) {\r\n                return [l, 0, item[2], item[3]];\r\n            } else {\r\n                return [l, 0];\r\n            }\r\n            case \"scale\": if (item.length == 5) {\r\n                return [l, 1, 1, item[3], item[4]];\r\n            } else if (item.length == 3) {\r\n                return [l, 1, 1];\r\n            } else {\r\n                return [l, 1];\r\n            }\r\n        }\r\n    }\r\n\r\n}());","\r\n(function(){\r\n    \r\n    Graph.plugin.Resizer = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            vector: null,\r\n            enabled: true,\r\n            suspended: true,\r\n            restriction: null,\r\n            handleImage: null,\r\n            handleSize: null,\r\n            rendered: false\r\n        },\r\n\r\n        components: {\r\n            holder: null,\r\n            helper: null,\r\n            handle: null\r\n        },\r\n\r\n        trans: {\r\n            // original offset\r\n            ox: 0,\r\n            oy: 0,\r\n\r\n            // original\r\n            ow: 0,\r\n            oh: 0,\r\n\r\n            // current\r\n            cw: 0,\r\n            ch: 0,\r\n\r\n            // translation\r\n            dx: 0,\r\n            dy: 0\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var me = this, guid = vector.guid();\r\n            \r\n            options = options || {};\r\n\r\n            _.assign(me.props, options);\r\n\r\n            vector.addClass('graph-resizable');\r\n\r\n            me.props.handleImage = Graph.config.base + 'img/' + Graph.config.resizer.image;\r\n            me.props.handleSize = Graph.config.resizer.size;\r\n\r\n            me.props.vector = guid;\r\n\r\n            me.cached.snapping = null;\r\n            me.cached.vertices = null;\r\n\r\n            me.initComponent();\r\n        },\r\n        \r\n        holder: function() {\r\n            return Graph.registry.vector.get(this.components.holder);\r\n        },\r\n\r\n        helper: function() {\r\n            return Graph.registry.vector.get(this.components.helper);\r\n        },\r\n\r\n        handle: function(dir) {\r\n            return Graph.registry.vector.get(this.components.handle[dir]);\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = me.components;\r\n            var holder, helper;\r\n\r\n            holder = (new Graph.svg.Group())\r\n                .addClass('graph-resizer')\r\n                .removeClass('graph-elem graph-elem-group');\r\n\r\n            holder.elem.group('graph-resizer');\r\n\r\n            holder.on({\r\n                render: _.bind(me.onHolderRender, me)\r\n            });\r\n            \r\n            helper = (new Graph.svg.Rect(0, 0, 0, 0, 0))\r\n                .addClass('graph-resizer-helper')\r\n                .removeClass('graph-elem graph-elem-rect')\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(holder);\r\n\r\n            helper.elem.group('graph-resizer');\r\n\r\n            comp.handle = {};\r\n\r\n            var handle = {\r\n                ne: {ghost: false, cursor: 'nesw-resize'},\r\n                se: {ghost: false, cursor: 'nwse-resize'},\r\n                sw: {ghost: false, cursor: 'nesw-resize'},\r\n                nw: {ghost: false, cursor: 'nwse-resize'},\r\n                 n: {ghost: false, cursor: 'ns-resize', axis: 'y'},\r\n                 e: {ghost: false, cursor: 'ew-resize', axis: 'x'},\r\n                 s: {ghost: false, cursor: 'ns-resize', axis: 'y'},\r\n                 w: {ghost: false, cursor: 'ew-resize', axis: 'x'}\r\n            };\r\n\r\n            _.forOwn(handle, function(c, dir){\r\n                (function(dir){\r\n                    var h = (new Graph.svg.Image(\r\n                        me.props.handleImage,\r\n                        0,\r\n                        0,\r\n                        me.props.handleSize,\r\n                        me.props.handleSize\r\n                    ))\r\n                    .selectable(false)\r\n                    .removeClass('graph-elem graph-elem-image')\r\n                    .addClass('graph-resizer-handle handle-' + dir);\r\n\r\n                    h.elem.group('graph-resizer');\r\n                    h.props.dir = dir;\r\n                    h.draggable(c);\r\n                    \r\n                    h.on('beforedrag', _.bind(me.onHandleBeforeDrag, me));\r\n                    h.on('drag', _.bind(me.onHandleDrag, me));\r\n                    h.on('afterdrag', _.bind(me.onHandleAfterDrag, me));\r\n\r\n                    h.render(holder);\r\n\r\n                    comp.handle[dir] = h.guid();\r\n                    h = null;\r\n                }(dir));\r\n            });\r\n\r\n            comp.holder = holder.guid();\r\n            comp.helper = helper.guid();\r\n\r\n            holder = null;\r\n            helper = null;\r\n            handle = null;\r\n        },\r\n\r\n        invalidate: function()  {\r\n            this.superclass.prototype.invalidate.call(this);\r\n            this.cached.vertices = null;\r\n        },\r\n\r\n        render: function() {\r\n            var me = this;\r\n\r\n            if (me.props.rendered) {\r\n                me.redraw();\r\n                return;\r\n            }\r\n\r\n            me.holder().render(me.vector().parent());\r\n            me.props.rendered = true;\r\n            me.redraw();\r\n        },\r\n\r\n        snap: function(snap) {\r\n            this.cached.snapping = snap;\r\n        },\r\n\r\n        vertices: function() {\r\n            var me = this,\r\n                vector = me.vector(),\r\n                vertices = me.cached.vertices;\r\n\r\n            if ( ! vertices) {\r\n                // get original bounding\r\n                var path = vector.shape(),\r\n                    bbox = path.bbox().toJson(),\r\n                    rotate = vector.matrixCurrent().rotate();\r\n\r\n                var ro, cx, cy, ox, oy, hs, hw, hh;\r\n\r\n                ro = rotate.deg;\r\n                cx = 0;\r\n                cy = 0;\r\n                ox = bbox.x;\r\n                oy = bbox.y;\r\n                hs = me.props.handleSize / 2;\r\n\r\n                if (ro) {\r\n                    var rmatrix = Graph.matrix(),\r\n                        path = vector.shapeRelative();\r\n\r\n                    cx = bbox.x + bbox.width / 2,\r\n                    cy = bbox.y + bbox.height / 2;\r\n\r\n                    rmatrix.rotate(-ro, cx, cy);\r\n\r\n                    path = path.transform(rmatrix);\r\n                    bbox = path.bbox().toJson();\r\n                }\r\n\r\n                hw = bbox.width / 2;\r\n                hh = bbox.height / 2;\r\n\r\n                vertices = {\r\n                    ne: {\r\n                        x: bbox.x + bbox.width - hs,\r\n                        y: bbox.y - hs\r\n                    },\r\n\r\n                    se: {\r\n                        x: bbox.x + bbox.width - hs,\r\n                        y: bbox.y + bbox.height - hs\r\n                    },\r\n\r\n                    sw: {\r\n                        x: bbox.x - hs,\r\n                        y: bbox.y + bbox.height - hs\r\n                    },\r\n\r\n                    nw: {\r\n                        x: bbox.x - hs,\r\n                        y: bbox.y - hs\r\n                    },\r\n\r\n                    n: {\r\n                        x: bbox.x + hw - hs,\r\n                        y: bbox.y - hs\r\n                    },\r\n                    e: {\r\n                        x: bbox.x + bbox.width - hs,\r\n                        y: bbox.y + hh - hs\r\n                    },\r\n                    s: {\r\n                        x: bbox.x + hw - hs,\r\n                        y: bbox.y + bbox.height - hs\r\n                    },\r\n                    w: {\r\n                        x: bbox.x - hs,\r\n                        y: bbox.y + hh - hs\r\n                    },\r\n\r\n                    rotate: {\r\n                        deg: ro,\r\n                        cx: cx,\r\n                        cy: cy\r\n                    },\r\n\r\n                    box: {\r\n                        x: bbox.x,\r\n                        y: bbox.y,\r\n                        width: bbox.width,\r\n                        height: bbox.height\r\n                    },\r\n\r\n                    offset: {\r\n                        x: ox,\r\n                        y: oy\r\n                    }\r\n                };\r\n\r\n                this.cached.vertices = vertices;\r\n            }\r\n\r\n            return vertices;\r\n        },\r\n\r\n        redraw: function() {\r\n            var me = this,\r\n                helper = me.helper(),\r\n                holder = me.holder();\r\n\r\n            var vx;\r\n\r\n            if ( ! holder) {\r\n                return;\r\n            }\r\n\r\n            vx = this.vertices();\r\n\r\n            if ( ! vx) {\r\n                return;\r\n            }\r\n            \r\n            helper.reset();\r\n\r\n            helper.attr({\r\n                x: vx.box.x,\r\n                y: vx.box.y,\r\n                width: vx.box.width,\r\n                height: vx.box.height\r\n            });\r\n\r\n            helper.rotate(vx.rotate.deg, vx.rotate.cx, vx.rotate.cy).commit();\r\n\r\n            _.forOwn(me.components.handle, function(id, dir){\r\n                (function(id, dir){\r\n                    var h = me.handle(dir);\r\n                    h.show();\r\n                    h.reset();\r\n                    h.attr(vx[dir]);\r\n                    h.rotate(vx.rotate.deg, vx.rotate.cx, vx.rotate.cy).commit();\r\n                }(id, dir));\r\n            });\r\n\r\n            me.trans.ox = vx.offset.x;\r\n            me.trans.oy = vx.offset.y;\r\n            me.trans.ow = this.trans.cw = vx.box.width;\r\n            me.trans.oh = this.trans.ch = vx.box.height;\r\n            me.trans.dx = 0;\r\n            me.trans.dy = 0;\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.holder().elem.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            if ( ! this.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            if (this.props.suspended) {\r\n                this.props.suspended = false;\r\n\r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else { \r\n                    this.vector().parent().elem.append(this.holder().elem);\r\n                    this.redraw();\r\n                }\r\n            }\r\n        },\r\n\r\n        restrict: function(options) {\r\n            _.assign(this.props, {\r\n                restriction: options\r\n            });\r\n        },\r\n\r\n        setupRestriction: function(handle) {\r\n            var me = this,\r\n                restriction = this.props.restriction || {},\r\n                vector = me.vector(),\r\n                paper = vector.paper(),\r\n                layout = paper.layout(),\r\n                dir = handle.props.dir,\r\n                width = +restriction.width || 0,\r\n                height = +restriction.height || 0,\r\n                MAX_VALUE = Number.MAX_SAFE_INTEGER;\r\n\r\n            var bounds = {\r\n                top: -MAX_VALUE,\r\n                left: -MAX_VALUE,\r\n                right: MAX_VALUE,\r\n                bottom: MAX_VALUE\r\n            };\r\n\r\n            var origin;\r\n            \r\n            if (restriction.origin === undefined) {\r\n                var box = vector.bboxView().toJson();\r\n                origin = getRestrictOrigin(handle, box);\r\n            } else {\r\n                origin = _.extend({x: 0, y: 0}, restriction.origin);\r\n            }\r\n\r\n            switch(dir) {\r\n                case 'n':\r\n                    bounds.bottom = origin.y - height;\r\n                    break;\r\n                case 'e':\r\n                    bounds.left = origin.x + width;\r\n                    break;\r\n                case 's':\r\n                    bounds.top = origin.y + height;\r\n                    break;\r\n                case 'w':\r\n                    bounds.right = origin.x - width;\r\n                    break;\r\n                case 'ne':\r\n                    bounds.left = origin.x + width;\r\n                    bounds.bottom = origin.y - height;\r\n                    break;\r\n                case 'se':\r\n                    bounds.top = origin.y + height;\r\n                    bounds.left = origin.x + width;\r\n                    break;\r\n                case 'sw':\r\n                    bounds.right = origin.x - width;\r\n                    bounds.top = origin.y + height;\r\n                    break;\r\n                case 'nw':\r\n                    bounds.right = origin.x - width;\r\n                    bounds.bottom = origin.y - height;\r\n                    break;\r\n            }\r\n\r\n            handle.draggable().restrict(bounds);\r\n\r\n        },\r\n        \r\n        onHolderRender: function(e) {\r\n            \r\n        },\r\n\r\n        onHandleBeforeDrag: function(e) {\r\n            var me = this, handle = e.publisher;\r\n\r\n            me.fire('beforeresize', {\r\n                resizer: this,\r\n                direction: handle.props.dir\r\n            });\r\n\r\n            _.forOwn(me.components.handle, function(id, dir){\r\n                var h = me.handle(dir);\r\n                if (h !== handle) {\r\n                    h.hide();\r\n                }\r\n            });\r\n\r\n            var snapping = this.cached.snapping;\r\n\r\n            if (snapping && handle.draggable().snap() !== snapping) {\r\n                handle.draggable().snap(snapping);    \r\n            }\r\n            \r\n            if (this.props.restriction) {\r\n                this.setupRestriction(handle);    \r\n            }\r\n\r\n            handle.show();\r\n            handle.removeClass('dragging');\r\n        },\r\n\r\n        onHandleDrag: function(e) {\r\n            var me = this, \r\n                helper = me.helper(), \r\n                handle = e.publisher;\r\n            \r\n            var tr = this.trans,\r\n                dx = e.dx,\r\n                dy = e.dy;\r\n\r\n            switch(handle.props.dir) {\r\n                case 'ne':\r\n                    tr.cw += dx;\r\n                    tr.ch -= dy;\r\n\r\n                    me.trans.dy += dy;\r\n                    helper.translate(0, dy).commit();\r\n                    break;\r\n\r\n                case 'se':\r\n                    tr.cw += dx;\r\n                    tr.ch += dy;\r\n\r\n                    break;\r\n\r\n                case 'sw':\r\n                    tr.cw -= dx;\r\n                    tr.ch += dy;\r\n\r\n                    me.trans.dx += dx;\r\n                    helper.translate(dx, 0).commit();\r\n                    break;\r\n\r\n                case 'nw':\r\n                    tr.cw -= dx;\r\n                    tr.ch -= dy;\r\n\r\n                    me.trans.dx += dx;\r\n                    me.trans.dy += dy;\r\n                    helper.translate(dx, dy).commit();\r\n                    break;\r\n\r\n                case 'n':\r\n                    tr.cw += 0;\r\n                    tr.ch -= dy;\r\n\r\n                    me.trans.dy += dy;\r\n                    helper.translate(0, dy).commit();\r\n                    break;\r\n\r\n                case 'e':\r\n                    tr.cw += dx;\r\n                    tr.ch += 0;\r\n\r\n                    break;\r\n\r\n                case 's':\r\n                    tr.cw += 0;\r\n                    tr.ch += dy;\r\n                    break;\r\n\r\n                case 'w':\r\n                    tr.cw -= dx;\r\n                    tr.ch += 0;\r\n\r\n                    me.trans.dx += dx;\r\n                    helper.translate(dx, 0).commit();\r\n                    break;\r\n            }\r\n\r\n            helper.attr({\r\n                width:  tr.cw,\r\n                height: tr.ch\r\n            });\r\n\r\n        },\r\n\r\n        onHandleAfterDrag: function(e) {\r\n            var me = this,\r\n                tr = this.trans,\r\n                handle = e.publisher;\r\n\r\n            var sx, sy, cx, cy, dx, dy;\r\n\r\n            sx = tr.ow > 0 ? (tr.cw / tr.ow) : 1;\r\n            sy = tr.oh > 0 ? (tr.ch / tr.oh) : 1;\r\n            dx = tr.dx;\r\n            dy = tr.dy;\r\n\r\n            switch(handle.props.dir) {\r\n                case 'ne':\r\n                    cx = tr.ox;\r\n                    cy = tr.oy + tr.oh;\r\n                    break;\r\n                case 'se':\r\n                    cx = tr.ox;\r\n                    cy = tr.oy;\r\n                    break;\r\n                case 'sw':\r\n                    cx = tr.ox + tr.ow;\r\n                    cy = tr.oy;\r\n                    break;\r\n                case 'nw':\r\n                    cx = tr.ox + tr.ow;\r\n                    cy = tr.oy + tr.oh;\r\n                    break;\r\n                case 'n':\r\n                    cx = tr.ox + tr.ow / 2;\r\n                    cy = tr.oy + tr.oh;\r\n                    break;\r\n                case 'e':\r\n                    cx = tr.ox;\r\n                    cy = tr.oy + tr.oh / 2;\r\n                    break;\r\n                case 's':\r\n                    cx = tr.ox + tr.ow / 2;\r\n                    cy = tr.oy;\r\n                    break;\r\n                case 'w':\r\n                    cx = tr.ox + tr.ow;\r\n                    cy = tr.oy + tr.oh / 2;\r\n                    break;\r\n            }\r\n\r\n            // track translation\r\n            var vector = me.vector(),\r\n                oldcen = vector.bbox().center().toJson(),\r\n                resize = vector.resize(sx, sy, cx, cy, dx, dy),\r\n                newcen = vector.bbox().center().toJson();\r\n\r\n            var vdx = newcen.x - oldcen.x,\r\n                vdy = newcen.y - oldcen.y;\r\n\r\n            resize.translate.dx = vdx;\r\n            resize.translate.dy = vdy;\r\n            \r\n            me.redraw();\r\n            me.fire('afterresize', resize);\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Resizer';\r\n        },\r\n\r\n        destroy: function() {\r\n            // remove handles\r\n            var me = this\r\n\r\n            _.forOwn(me.components.handle, function(id, dir){\r\n                var h = me.handle(dir);\r\n                h.remove();\r\n            });\r\n\r\n            me.components.handle = null;\r\n\r\n            // remove helper\r\n            me.helper().remove();\r\n            me.components.helper = null;\r\n\r\n            // remove holder\r\n            me.holder().remove();\r\n            me.components.holder = null;\r\n\r\n            // remove listeners\r\n            me.listeners = null;\r\n        }\r\n        \r\n    });\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function getRestrictOrigin(handle, box) {\r\n        var origin = {\r\n            x: box.x,\r\n            y: box.y\r\n        };\r\n\r\n        switch(handle.props.dir) {\r\n            case 'n':\r\n                origin.x = (box.x + box.x2) / 2;\r\n                origin.y = box.y2;\r\n                break;\r\n            case 'e':\r\n                origin.x = box.x;\r\n                origin.y = (box.y + box.y2) / 2;\r\n                break;\r\n            case 's':\r\n                origin.x = (box.x + box.x2) / 2;\r\n                origin.y = box.y;\r\n                break;\r\n            case 'w':\r\n                origin.x = box.x2;\r\n                origin.y = (box.y + box.y2) / 2;\r\n                break;\r\n            case 'ne':\r\n                origin.x = box.x;\r\n                origin.y = box.y2;\r\n                break;\r\n            case 'se':\r\n                origin.x = box.x;\r\n                origin.y = box.y;\r\n                break;\r\n            case 'sw':\r\n                origin.x = box.x2;\r\n                origin.y = box.y;\r\n                break;\r\n            case 'nw':\r\n                origin.x = box.x2;\r\n                origin.y = box.y2;\r\n                break;\r\n        }\r\n\r\n        return origin;\r\n    }\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Collector = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            enabled: false,\r\n            suspended: true,\r\n            rendered: false,\r\n            activator: 'tool',\r\n            ready: false\r\n        },\r\n\r\n        paper: null,\r\n\r\n        collection: [],\r\n\r\n        components: {\r\n            rubber: null\r\n        },\r\n\r\n        collecting: {\r\n            enabled: false\r\n        },\r\n\r\n        constructor: function(paper) {\r\n            var me = this;\r\n\r\n            if ( ! paper.isPaper()) {\r\n                throw Graph.error('Collector tool only available for paper !');\r\n            }\r\n\r\n            me.paper = paper;\r\n            me.components.rubber = Graph.$('<div class=\"graph-rubberband\">');\r\n            me.collection = new Graph.collection.Vector();\r\n\r\n            paper.on('keynavdown', _.bind(me.onKeynavDown, me));\r\n            paper.on('keynavup', _.bind(me.onKeynavUp, me));\r\n\r\n            if (me.paper.props.rendered) {\r\n                me.setup();\r\n            } else {\r\n                me.paper.on('render', function(){\r\n                    me.setup();\r\n                });\r\n            }\r\n        },\r\n\r\n        enable: function(activator) {\r\n            this.props.enabled = true;\r\n            this.props.activator = activator;\r\n\r\n            this.paper.cursor('crosshair');\r\n            this.paper.state('collecting');\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.enabled = false;\r\n            this.paper.cursor('default');\r\n        },\r\n\r\n        setup: function() {\r\n            var me = this;\r\n\r\n            if (me.props.ready) {\r\n                return;\r\n            }\r\n\r\n            me.props.ready = true;\r\n\r\n            var collecting = me.collecting,\r\n                paper = me.paper,\r\n                layout = paper.layout(),\r\n                position = layout.position(),\r\n                rubber = me.components.rubber,\r\n                vendor = paper.interactable().vendor();\r\n\r\n            vendor.styleCursor(false);\r\n\r\n            vendor.draggable({\r\n\r\n                manualStart: true,\r\n\r\n                onstart: function(e) {\r\n                    _.assign(collecting, {\r\n                        enabled: true,\r\n                        start: {\r\n                            x: e.clientX,\r\n                            y: e.clientY,\r\n                        },\r\n                        end: {\r\n                            x: e.clientX,\r\n                            y: e.clientY,\r\n                        },\r\n                        bounds: {}\r\n                    });\r\n\r\n                    rubber.query.css({\r\n                        width: 0,\r\n                        height: 0,\r\n                        transform: 'translate(' + (collecting.start.x - position.left) + 'px, ' + (collecting.start.y - position.top) + 'px)'\r\n                    });\r\n                },\r\n\r\n                onmove: function(e) {\r\n                    var start = collecting.start,\r\n                        end = {\r\n                            x: e.clientX,\r\n                            y: e.clientY\r\n                        };\r\n\r\n                    var bounds;\r\n\r\n                    if ((start.x <= end.x && start.y < end.y) || (start.x < end.x && start.y <= end.y)) {\r\n                        bounds = {\r\n                            x: start.x,\r\n                            y: start.y,\r\n                            width:  end.x - start.x,\r\n                            height: end.y - start.y\r\n                        };\r\n                    } else if ((start.x >= end.x && start.y < end.y) || (start.x > end.x && start.y <= end.y)) {\r\n                        bounds = {\r\n                            x: end.x,\r\n                            y: start.y,\r\n                            width:  start.x - end.x,\r\n                            height: end.y - start.y\r\n                        };\r\n                    } else if ((start.x <= end.x && start.y > end.y) || (start.x < end.x && start.y >= end.y)) {\r\n                        bounds = {\r\n                            x: start.x,\r\n                            y: end.y,\r\n                            width:  end.x - start.x,\r\n                            height: start.y - end.y\r\n                        };\r\n                    } else if ((start.x >= end.x && start.y > end.y) || (start.x > end.x && start.y >= end.y)) {\r\n                        bounds = {\r\n                            x: end.x,\r\n                            y: end.y,\r\n                            width:  start.x - end.x,\r\n                            height: start.y - end.y\r\n                        };\r\n                    } else {\r\n                        bounds = {\r\n                            x: end.x,\r\n                            y: end.y,\r\n                            width:  0,\r\n                            height: 0\r\n                        };\r\n                    }\r\n\r\n                    collecting.bounds = bounds;\r\n\r\n                    rubber.query.css({\r\n                        width:  bounds.width,\r\n                        height: bounds.height,\r\n                        transform: 'translate(' + (bounds.x - position.left) + 'px,' + (bounds.y - position.top) + 'px)'\r\n                    });\r\n                },\r\n\r\n                onend: function() {\r\n                    \r\n                    if ( ! collecting.enabled) return;\r\n                    collecting.enabled = false;\r\n\r\n                    var context = paper.guid(),\r\n                        vectors = Graph.registry.vector.collect(context),\r\n                        bounds = collecting.bounds,\r\n                        scale = layout.scale();\r\n\r\n                    var start = layout.pointerLocation({\r\n                        clientX: bounds.x,\r\n                        clientY: bounds.y\r\n                    });\r\n\r\n                    var end = layout.pointerLocation({\r\n                        clientX: bounds.x + bounds.width,\r\n                        clientY: bounds.y + bounds.height\r\n                    });\r\n\r\n                    var bbox = new Graph.lang.BBox({\r\n                        x: start.x,\r\n                        y: start.y,\r\n                        x2: end.x,\r\n                        y2: end.y,\r\n                        width: end.x - start.x,\r\n                        height: end.y - start.y\r\n                    });\r\n\r\n                    bbox.transform(paper.viewport().matrix());\r\n\r\n                    _.forEach(vectors, function(v){\r\n                        if (v.guid() != context && v.isSelectable() && ! v.isGroup()) {\r\n                            if (bbox.contains(v)) {\r\n                                me.collect(v, true);\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    if (me.props.activator == 'tool') {\r\n                        paper.tool().activate('panzoom');\r\n                    }\r\n\r\n                    bbox = null;\r\n                    me.suspend();\r\n                }\r\n            })\r\n            .on('down', function(e){\r\n                var single = ! (e.ctrlKey || e.shiftKey),\r\n                    vector = Graph.registry.vector.get(e.target);\r\n\r\n                if (vector) {\r\n                    if ( ! vector.isSelectable()) {\r\n                        if ( ! vector.elem.belong('graph-resizer') && ! vector.elem.belong('graph-link')) {\r\n                            if (single) {\r\n                                me.clearCollection();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            .on('tap', function(e){\r\n                var vector = Graph.registry.vector.get(e.target),\r\n                    single = ! (e.ctrlKey || e.shiftKey);\r\n\r\n                if (vector && vector.isSelectable()) {\r\n                    if (vector.paper().state() == 'linking') {\r\n                        me.clearCollection();\r\n                        return;\r\n                    }\r\n\r\n                    if (single) {\r\n                        me.clearCollection();\r\n                    }\r\n\r\n                    me.collect(vector);\r\n                }\r\n\r\n            }, true)\r\n            .on('move', function(e){\r\n                var i = e.interaction;\r\n\r\n                if (me.props.enabled) {\r\n                    if (i.pointerIsDown && ! i.interacting()) {\r\n                        var action = {name: 'drag'};\r\n\r\n                        // -- workaround for a bug in v1.2.6 of interact.js\r\n                        i.prepared.name = action.name;\r\n                        i.setEventXY(i.startCoords, i.pointers);\r\n\r\n                        if (e.currentTarget === paper.node()) {\r\n                            if (me.props.suspended) {\r\n                                me.resume();\r\n                            }\r\n                            i.start(action, e.interactable, rubber.node());\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        render: function() {\r\n            var me = this;\r\n\r\n            if (me.props.rendered) {\r\n                return;\r\n            }\r\n\r\n            me.paper.container().append(me.components.rubber);\r\n            me.props.rendered = true;\r\n        },\r\n\r\n        size: function() {\r\n            return this.collection.size();\r\n        },\r\n\r\n        index: function(vector) {\r\n            return this.collection.index(vector);\r\n        },\r\n\r\n        add: function(vector) {\r\n            var offset = this.index(vector);\r\n            vector._collector = this;\r\n            if (offset === -1) {\r\n                this.collection.push(vector);\r\n            }\r\n        },\r\n\r\n        remove: function(vector) {\r\n            delete vector._collector;\r\n            this.collection.pull(vector);\r\n        },\r\n\r\n        collect: function(vector) {\r\n            vector.select();\r\n            Graph.cached.paper = this.paper.guid();\r\n        },\r\n\r\n        decollect: function(vector) {\r\n            vector.deselect();\r\n        },\r\n\r\n        clearCollection: function() {\r\n            var me = this,\r\n                collection = me.collection.toArray().slice();\r\n\r\n            _.forEach(collection, function(vector){\r\n                me.decollect(vector);\r\n            });\r\n\r\n            collection = null;\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.components.rubber.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            if (this.props.suspended) {\r\n                this.props.suspended = false;\r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else {\r\n                    this.paper.container().append(this.components.rubber);\r\n                }\r\n            }\r\n        },\r\n\r\n        syncBeforeDrag: function(master, e) {\r\n            var me = this;\r\n\r\n            me.collection.each(function(v){\r\n                if (v.plugins.dragger && v.plugins.dragger.props.enabled && v !== master) {\r\n                    (function(){\r\n                        var mat = v.graph.matrix.data(),\r\n                            sin = mat.sin,\r\n                            cos = mat.cos;\r\n\r\n                        if (v.plugins.resizer && ! v.plugins.resizer.suspended) {\r\n                            v.plugins.resizer.suspend();\r\n                        }\r\n\r\n                        if (v.plugins.dragger.props.ghost) {\r\n                            v.plugins.dragger.resume();\r\n                        }\r\n\r\n                        v.syncdrag = {\r\n                            sin: sin,\r\n                            cos: cos,\r\n                            tdx: 0,\r\n                            tdy: 0\r\n                        };\r\n\r\n                        v.addClass('dragging');\r\n\r\n                        v.fire('beforedrag', {\r\n                            dx: e.dx *  cos + e.dy * sin,\r\n                            dy: e.dx * -sin + e.dy * cos,\r\n                            master: false\r\n                        });\r\n\r\n                    }());\r\n                }\r\n            });\r\n\r\n            me.fire('beforedrag');\r\n        },\r\n\r\n        syncDrag: function(master, e) {\r\n            var me = this, dx, dy;\r\n\r\n            me.collection.each(function(v){\r\n                if (v.plugins.dragger && v.plugins.dragger.props.enabled && v !== master) {\r\n                    (function(v, e){\r\n\r\n                        var dx = e.ox *  v.syncdrag.cos + e.oy * v.syncdrag.sin,\r\n                            dy = e.ox * -v.syncdrag.sin + e.oy * v.syncdrag.cos;\r\n\r\n                        if (v.plugins.dragger.props.ghost) {\r\n                            v.plugins.dragger.helper().translate(e.ox, e.oy).commit();\r\n                        } else {\r\n                            v.translate(dx, dy).commit();\r\n                        }\r\n\r\n                        v.syncdrag.tdx += dx;\r\n                        v.syncdrag.tdy += dy;\r\n\r\n                        v.fire('drag', {\r\n                            dx: dx,\r\n                            dy: dy,\r\n                            master: false\r\n                        });\r\n\r\n                    }(v, e));\r\n                }\r\n            });\r\n\r\n        },\r\n\r\n        syncAfterDrag: function(master, e) {\r\n            var me = this;\r\n\r\n            me.collection.each(function(v){\r\n                if (v.plugins.dragger && v.plugins.dragger.props.enabled && v !== master) {\r\n                    (function(v, e){\r\n                        var batchSync = v.plugins.dragger.props.batchSync,\r\n                            ghost = v.plugins.dragger.props.ghost;\r\n\r\n                        if (ghost) {\r\n                            if (batchSync) {\r\n                                v.translate(v.syncdrag.tdx, v.syncdrag.tdy).commit();\r\n                            }\r\n                            v.plugins.dragger.suspend();\r\n                        }\r\n\r\n                        if ( ! batchSync) {\r\n                            v.dirty(true);\r\n                        }\r\n\r\n                        v.fire('afterdrag', {\r\n                            dx: v.syncdrag.tdx,\r\n                            dy: v.syncdrag.tdy,\r\n                            batch: true,\r\n                            master: false\r\n                        });\r\n\r\n                        v.removeClass('dragging');\r\n\r\n                        delete v.syncdrag;\r\n\r\n                    }(v, e));\r\n                }\r\n            });\r\n\r\n            e.type = 'afterdrag';\r\n            me.fire(e);\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Collector';\r\n        },\r\n\r\n        onKeynavDown: function(e) {\r\n            if (e.keyCode == Graph.event.SHIFT && this.props.activator != 'key') {\r\n                var tool = this.paper.tool(),\r\n                    curr = tool.current();\r\n\r\n                if (curr != 'collector') {\r\n                    tool.activate('collector', 'key');\r\n                }\r\n            }\r\n        },\r\n\r\n        onKeynavUp: function(e) {\r\n            if (e.keyCode == Graph.event.SHIFT) {\r\n                var tool = this.paper.tool(),\r\n                    curr = tool.current();\r\n\r\n                if (curr == 'collector') {\r\n                    this.props.activator = 'tool';\r\n                    tool.activate('panzoom');\r\n                }\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.plugin.Dragger = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            ready: false,\r\n            manual: false,\r\n\r\n            ghost: true,\r\n            vector: null,\r\n            enabled: true,\r\n            rendered: false,\r\n            suspended: true,\r\n            inertia: false,\r\n            bound: false,\r\n            grid: null,\r\n            axis: false,\r\n            cursor: 'move',\r\n\r\n            dragClass: '',\r\n\r\n            // batching operation\r\n            batchSync: true,\r\n            restriction: false\r\n        },\r\n\r\n        rotation: {\r\n            deg: 0,\r\n            rad: 0,\r\n            sin: 0,\r\n            cos: 1\r\n        },\r\n\r\n        scaling: {\r\n            x: 1,\r\n            y: 1\r\n        },\r\n\r\n        dragging: {\r\n            enabled: false,\r\n            vector: null,\r\n            paper: null,\r\n            helper: null,\r\n            dx: 0,\r\n            dy: 0,\r\n            coord: null\r\n        },\r\n\r\n        components: {\r\n            holder: null,\r\n            helper: null\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var me = this;\r\n\r\n            vector.addClass('graph-draggable');\r\n            me.props.vector = vector.guid();\r\n\r\n            options = _.extend({\r\n                inertia: false\r\n            }, options || {});\r\n\r\n            _.forEach(['axis', 'grid', 'bbox', 'ghost'], function(name){\r\n                if (options[name] !== undefined) {\r\n                    me.props[name] = options[name];\r\n                }\r\n            });\r\n\r\n            _.assign(me.props, options);\r\n\r\n            me.cached.snapping = null;\r\n            me.cached.origin = null;\r\n\r\n            me.initComponent();\r\n\r\n            vector.on('render.dragger', _.bind(me.onVectorRender, me));\r\n\r\n            if (vector.props.rendered) {\r\n                me.setup();\r\n            }\r\n        },\r\n\r\n        holder: function() {\r\n            return Graph.registry.vector.get(this.components.holder);\r\n        },\r\n\r\n        helper: function() {\r\n            return Graph.registry.vector.get(this.components.helper);\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = me.components;\r\n            var holder, helper;\r\n\r\n            if (me.props.ghost) {\r\n                holder = (new Graph.svg.Group())\r\n                    .addClass('graph-dragger')\r\n                    .removeClass('graph-elem graph-elem-group')\r\n                    .traversable(false)\r\n                    .selectable(false);\r\n\r\n                var style = 'graph-dragger-helper' + (me.props.dragClass ? ' ' + me.props.dragClass : '');\r\n\r\n                helper = (new Graph.svg.Rect(0, 0, 0, 0, 0))\r\n                    .addClass(style)\r\n                    .removeClass('graph-elem graph-elem-rect')\r\n                    .traversable(false)\r\n                    .selectable(false)\r\n                    .clickable(false)\r\n                    .render(holder);\r\n\r\n                style = null;\r\n\r\n                helper.elem.data(Graph.string.ID_VECTOR, this.vector().guid());\r\n\r\n                comp.holder = holder.guid();\r\n                comp.helper = helper.guid();\r\n\r\n                holder = null;\r\n                helper = null;\r\n            }\r\n        },\r\n\r\n        setup: function() {\r\n            var me, vector, vendor, paper, options;\r\n\r\n            if (this.props.ready) {\r\n                return;\r\n            }\r\n\r\n            me = this;\r\n            vector = me.vector();\r\n            paper = vector.paper();\r\n            options = {};\r\n\r\n            _.extend(options, {\r\n                manualStart: true,\r\n                onstart: _.bind(me.onDragStart, me),\r\n                onmove: _.bind(me.onDragMove, me),\r\n                onend: _.bind(me.onDragEnd, me)\r\n            });\r\n\r\n            vendor = vector.interactable().vendor();\r\n            vendor.draggable(options);\r\n            vendor.styleCursor(false);\r\n\r\n            me.cached.origin = vendor.origin();\r\n            me.cached.snapping = [];\r\n\r\n            vendor.on('down', _.bind(me.onPointerDown, me));\r\n\r\n            // if ( ! me.props.manual) {\r\n            //     vendor.on('move', _.bind(me.onPointerMove, me, _, vector));\r\n            // }\r\n\r\n            var matrix = vector.matrixCurrent(),\r\n                rotate = matrix.rotate(),\r\n                scale  = matrix.scale();\r\n\r\n            me.rotate(rotate.deg);\r\n            me.scale(scale.x, scale.y);\r\n\r\n            if (me.props.grid) {\r\n                me.snap({\r\n                    mode: 'grid',\r\n                    x: me.props.grid[0],\r\n                    y: me.props.grid[1]\r\n                });\r\n            }\r\n\r\n            me.props.ready = true;\r\n        },\r\n\r\n        enable: function() {\r\n            this.props.enabled = true;\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.enabled = false;\r\n        },\r\n\r\n        ghost: function(ghost) {\r\n            if (ghost === undefined) {\r\n                return this.props.ghost;\r\n            }\r\n            this.props.ghost = ghost;\r\n            return this;\r\n        },\r\n\r\n        render: function() {\r\n            var me = this, vector = me.vector();\r\n\r\n            if ( ! me.props.rendered) {\r\n                me.props.rendered = true;\r\n                me.holder().render(vector.parent());\r\n            }\r\n\r\n            if (me.props.ghost) {\r\n                me.redraw();\r\n            }\r\n\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.holder().elem.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            this.props.suspended = false;\r\n\r\n            if ( ! this.props.rendered) {\r\n                this.render();\r\n            } else {\r\n                this.vector().parent().elem.append(this.holder().elem);\r\n                this.redraw();\r\n            }\r\n        },\r\n\r\n        redraw: function() {\r\n            var vector = this.vector(),\r\n                helper = this.helper();\r\n\r\n            if (helper) {\r\n                var vbox = vector.bbox().toJson(),\r\n                    hbox = helper.bbox().toJson();\r\n\r\n                var dx = vbox.x - hbox.x,\r\n                    dy = vbox.y - hbox.y;\r\n\r\n                helper.translate(dx, dy).commit();\r\n\r\n                helper.attr({\r\n                    width: vbox.width,\r\n                    height: vbox.height\r\n                });\r\n            }\r\n        },\r\n\r\n        rotate: function(deg) {\r\n            var rad = Graph.util.rad(deg);\r\n            this.rotation.deg = deg;\r\n            this.rotation.rad = rad;\r\n            this.rotation.sin = Math.sin(rad);\r\n            this.rotation.cos = Math.cos(rad);\r\n        },\r\n\r\n        scale: function(sx, sy) {\r\n            sy = _.defaultTo(sy, sx);\r\n            this.scaling.x = sx;\r\n            this.scaling.y = sy;\r\n        },\r\n\r\n        origin: function(origin) {\r\n            if (origin === undefined) {\r\n                return this.cached.origin;\r\n            }\r\n\r\n            this.cached.origin = origin;\r\n\r\n            var vendor = this.vector().interactable().vendor();\r\n\r\n            if (vendor) {\r\n                vendor.origin(origin);\r\n            }\r\n        },\r\n\r\n        snap: function(snap, end) {\r\n\r\n            if (snap === undefined) {\r\n                return this.cached.snapping;\r\n            }\r\n\r\n            if (end === undefined) {\r\n                end = false;\r\n            }\r\n\r\n            var me = this, snaps = [];\r\n\r\n            // save original request\r\n            this.cached.snapping = snap;\r\n\r\n            if (_.isArray(snap)) {\r\n                _.forEach(snap, function(s){\r\n                    snaps.push(fixsnap(s));\r\n                });\r\n            } else {\r\n                snaps.push(fixsnap(snap));\r\n            }\r\n\r\n            var vendor = this.vector().interactable().vendor();\r\n\r\n            if (vendor) {\r\n                vendor.setOptions('snap', {\r\n                    targets: snaps,\r\n                    endOnly: end\r\n                });\r\n            }\r\n\r\n            /////////\r\n\r\n            function fixsnap(snap) {\r\n\r\n                if (_.isFunction(snap)) {\r\n                    return snap;\r\n                }\r\n\r\n                snap.mode = _.defaultTo(snap.mode, 'anchor');\r\n\r\n                if (snap.mode == 'grid') {\r\n                    if (me.props.axis == 'x') {\r\n                        snap.y = 0;\r\n                    } else if (me.props.axis == 'y') {\r\n                        snap.x = 0;\r\n                    }\r\n                    snap = interact.createSnapGrid({x: snap.x, y: snap.y});\r\n                } else {\r\n                    snap.range = _.defaultTo(snap.range, 20);\r\n                }\r\n                return snap;\r\n            }\r\n        },\r\n\r\n        resetSnap: function() {\r\n            this.snaps = [];\r\n\r\n            this.snap({\r\n                mode: 'grid',\r\n                x: this.props.grid[0],\r\n                y: this.props.grid[1]\r\n            });\r\n        },\r\n\r\n        restrict: function(options) {\r\n            this.props.restriction = options;\r\n        },\r\n\r\n        start: function() {\r\n            var me = this, \r\n                vector = me.vector(),\r\n                vendor = vector.interactable().vendor();\r\n\r\n            if (me.props.manual) {\r\n                return;\r\n            }\r\n\r\n            if (me.dragging.enabled) {\r\n                return;\r\n            }\r\n\r\n            me.dragging.enabled = true;\r\n            me.dragging.moveHandler = _.bind(me.onPointerMove, me, _, vector);\r\n            \r\n            vendor.on('move', me.dragging.moveHandler);\r\n        },\r\n\r\n        onVectorRender: function() {\r\n            this.setup();\r\n        },\r\n\r\n        onPointerDown: function draggerDown(e) {\r\n            e.preventDefault();\r\n            this.start();\r\n        },\r\n\r\n        onPointerMove: function draggerMove(e, vector) {\r\n            var i = e.interaction;\r\n\r\n            if (this.props.enabled) {\r\n                if (i.pointerIsDown && ! i.interacting()) {\r\n                    var paper = vector.paper(),\r\n                        node = vector.node(),\r\n                        action = { name: 'drag' };\r\n\r\n                    // -- workaround for a bug in v1.2.6 of interact.js\r\n                    i.prepared.name = action.name;\r\n                    i.setEventXY(i.startCoords, i.pointers);\r\n\r\n                    if (e.currentTarget === node) {\r\n                        if (paper) {\r\n                            var state = paper.state();\r\n\r\n                            if (state == 'collecting') {\r\n                                if (vector.elem.belong('graph-resizer')) {\r\n                                    paper.tool().activate('panzoom');\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            } else if (state == 'linking') {\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        if (this.props.ghost) {\r\n                            if (this.props.suspended) {\r\n                                this.resume();\r\n                            }\r\n                            i.start(action, e.interactable, this.helper().node());\r\n                        } else {\r\n                            i.start(action, e.interactable, node);\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n            e.preventDefault();\r\n\r\n        },\r\n\r\n        onDragStart: function(e) {\r\n            var vector = this.vector(),\r\n                paper = vector.paper(),\r\n                layout = paper.layout(),\r\n                helper = this.helper();\r\n\r\n            vector.addClass('dragging' + (this.props.ghost ? ' ghost-mode' : ' normal-mode'));\r\n            paper.cursor(this.props.cursor);\r\n\r\n            this.dragging.vector = vector;\r\n            this.dragging.paper = paper;\r\n            this.dragging.helper = helper;\r\n\r\n            this.dragging.dx = 0;\r\n            this.dragging.dy = 0;\r\n            this.dragging.hx = 0;\r\n            this.dragging.hy = 0;\r\n\r\n            var edata = {\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n                dx: 0,\r\n                dy: 0,\r\n                ghost: this.props.ghost\r\n            };\r\n\r\n            this.fire('beforedrag', edata);\r\n\r\n            var coord = layout.pointerLocation(e);\r\n            this.dragging.coord = coord;\r\n        },\r\n\r\n        onDragMove: function(e) {\r\n\r\n            var dragging = this.dragging,\r\n                paper = dragging.paper,\r\n                vector = dragging.vector,\r\n                helper = dragging.helper,\r\n                ghost = this.props.ghost,\r\n                axs = this.props.axis,\r\n                deg = this.rotation.deg,\r\n                sin = this.rotation.sin,\r\n                cos = this.rotation.cos,\r\n                scaleX = this.scaling.x,\r\n                scaleY = this.scaling.y;\r\n\r\n            // check current scaling\r\n            var scaling = vector.matrixCurrent().scale();\r\n\r\n            if (scaling.x !== scaleX || scaling.y !== scaleY) {\r\n                this.scale(scaling.x, scaling.y);\r\n                scaleX = scaling.x;\r\n                scaleY = scaling.y;\r\n            }\r\n\r\n            var edx = _.defaultTo(e.dx, 0),\r\n                edy = _.defaultTo(e.dy, 0);\r\n\r\n            var dx, dy, hx, hy, tx, ty;\r\n\r\n            dx = dy = hx = hy = tx = ty = 0;\r\n\r\n            edx /= scaleX;\r\n            edy /= scaleY;\r\n            \r\n            if (axs == 'x') {\r\n                dx = hx = edx;\r\n                dy = hy = 0;\r\n\r\n                tx = edx *  cos + 0 * sin;\r\n                ty = edx * -sin + 0 * cos;\r\n            } else if (axs == 'y') {\r\n                dx = hx = 0;\r\n                dy = hy = edy;\r\n\r\n                tx = 0 *  cos + edy * sin;\r\n                ty = 0 * -sin + edy * cos;\r\n            } else {\r\n                hx = edx;\r\n                hy = edy;\r\n\r\n                dx = tx = edx *  cos + edy * sin;\r\n                dy = ty = edx * -sin + edy * cos;\r\n            }\r\n\r\n            // check restriction\r\n            var restriction = this.props.restriction;\r\n\r\n            if (restriction) {\r\n                var coord = this.dragging.coord;\r\n\r\n                if (helper) {\r\n                    coord.x += hx;\r\n                    coord.y += hy;\r\n                } else {\r\n                    coord.x += dx;\r\n                    coord.y += dy;\r\n                }\r\n\r\n                if (coord.x < restriction.left || coord.x > restriction.right) {\r\n                    hx = dx = tx = edx = 0;\r\n                }\r\n                \r\n                if (coord.y < restriction.top || coord.y > restriction.bottom) {\r\n                    hy = dy = ty = edy = 0;\r\n                }\r\n            }\r\n\r\n            this.dragging.dx += tx;\r\n            this.dragging.dy += ty;\r\n\r\n            this.dragging.hx += hx;\r\n            this.dragging.hy += hy;\r\n\r\n            var pageX = _.defaultTo(e.pageX, e.x0),\r\n                pageX = _.defaultTo(e.pageY, e.y0);\r\n\r\n            pageX /= scaleX;\r\n            pageX /= scaleY;\r\n\r\n            var event = {\r\n                pageX: pageX,\r\n                pageY: pageX,\r\n\r\n                ex: edx,\r\n                ey: edy,\r\n\r\n                dx: dx,\r\n                dy: dy,\r\n\r\n                hx: hx,\r\n                hy: hy,\r\n\r\n                ox: hx,\r\n                oy: hy,\r\n\r\n                ghost: this.props.ghost\r\n            };\r\n\r\n            this.fire('drag', event);\r\n\r\n            if (ghost) {\r\n                helper.translate(event.hx, event.hy).commit();\r\n            } else {\r\n                vector.translate(event.dx, event.dy).commit();\r\n            }\r\n        },\r\n\r\n        onDragEnd: function(e) {\r\n            var dragging = this.dragging,\r\n                paper = dragging.paper,\r\n                vector = dragging.vector,\r\n                helper = dragging.helper,\r\n                ghost = this.props.ghost,\r\n                dx = dragging.dx,\r\n                dy = dragging.dy,\r\n                hx = dragging.hx,\r\n                hy = dragging.hy;\r\n\r\n            if (ghost) {\r\n                vector.translate(dx, dy).commit();\r\n                this.redraw();\r\n                this.suspend();\r\n            }\r\n\r\n            vector.removeClass('dragging');\r\n            paper.cursor('default');\r\n\r\n            var edata = {\r\n                dx: dx,\r\n                dy: dy,\r\n                ghost: this.props.ghost\r\n            };\r\n\r\n            var vendor = vector.interactable().vendor();\r\n            vendor.off('move', this.dragging.moveHandler);\r\n            \r\n            this.dragging.moveHandler = null;\r\n            this.dragging.enabled = false;\r\n\r\n            this.fire('afterdrag', edata);\r\n\r\n            this.dragging.vector = null;\r\n            this.dragging.paper = null;\r\n            this.dragging.helper = null;\r\n\r\n            this.dragging.dx = 0;\r\n            this.dragging.dy = 0;\r\n            this.dragging.hx = 0;\r\n            this.dragging.hy = 0;\r\n            this.dragging.coord = null;\r\n\r\n            \r\n        },\r\n\r\n        destroy: function() {\r\n            var me = this;\r\n\r\n            if (me.components.helper) {\r\n                me.helper().remove();\r\n            }\r\n\r\n            me.components.helper = null;\r\n\r\n            if (me.components.holder) {\r\n                me.holder().remove();\r\n            }\r\n\r\n            me.components.holder = null;\r\n            me.listeners = {};\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Dragger';\r\n        }\r\n    });\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.plugin.Dropper = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            overlap: 'center',\r\n            accept: '.graph-draggable'\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var me = this;\r\n\r\n            _.assign(me.props, options || {});\r\n            vector.addClass('graph-dropzone').removeClass('graph-draggable');\r\n\r\n            me.props.vector = vector.guid();    \r\n            \r\n            vector.on({\r\n                render: _.bind(me.onVectorRender, me)\r\n            });\r\n\r\n            if (vector.props.rendered) {\r\n                me.setup();\r\n            }\r\n        },\r\n\r\n        setup: function() {\r\n            var me = this;\r\n\r\n            if (me.plugin) {\r\n                return;\r\n            }\r\n\r\n            var config = _.extend({}, me.props, {\r\n                checker: _.bind(me.onDropValidate, me),\r\n\r\n                ondropactivate: _.bind(me.onDropActivate, me),\r\n                ondropdeactivate: _.bind(me.onDropDeactivate, me),\r\n                ondragenter: _.bind(me.onDragEnter, me),\r\n                ondragleave: _.bind(me.onDragLeave, me),\r\n                ondrop: _.bind(me.onDrop, me)\r\n            });\r\n\r\n            me.plugin = me.vector.interactable().dropzone(config);\r\n        },\r\n\r\n        onDropValidate: function( edrop, edrag, dropped, dropzone, dropel, draggable, dragel ) {\r\n            return dropped;\r\n            /*if (dropped) {\r\n                if (this.config.validate) {\r\n                    var args = _.toArray(arguments);\r\n                    dropped = this.config.validate.apply(this, args);\r\n                }    \r\n            }\r\n            \r\n            return dropped;*/\r\n        },\r\n\r\n        onVectorRender: function() {\r\n            this.setup();\r\n        },\r\n\r\n        onDropActivate: function(e) {\r\n            this.vector().addClass('drop-activate');\r\n        },\r\n\r\n        onDropDeactivate: function(e) {\r\n            this.vector().removeClass('drop-activate');\r\n        },\r\n\r\n        onDragEnter: function(e) {\r\n            this.vector().removeClass('drop-activate').addClass('drop-enter');\r\n            e.type = 'dropenter';\r\n            this.fire(e);\r\n        },\r\n\r\n        onDragLeave: function(e) {\r\n            this.vector().removeClass('drop-enter').addClass('drop-activate');\r\n            e.type = 'dropleave';\r\n            this.fire(e);\r\n        },\r\n\r\n        onDrop: function(e) {\r\n            this.vector().removeClass('drop-activate drop-enter');\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    var CLS_CONNECT_VALID = 'connect-valid',\r\n        CLS_CONNECT_INVALID = 'connect-invalid',\r\n        CLS_CONNECT_RESET = 'connect-valid connect-invalid',\r\n        CLS_CONNECT_CLEAR = 'connect-valid connect-invalid connect-hover',\r\n        CLS_CONNECT_HOVER = 'connect-hover',\r\n\r\n        CONNECT_OUTGOING = 'outgoing',\r\n        CONNECT_INCOMING = 'incoming';\r\n\r\n    Graph.plugin.Network = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n            wiring: 'h:h',\r\n            tuning: true,\r\n            limitIncoming: 0,\r\n            limitOutgoing: 0\r\n        },\r\n\r\n        linking: {\r\n            valid: false,\r\n            router: null,\r\n            source: null,\r\n            target: null,\r\n            link: null,\r\n            pole: null\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var me = this, guid = vector.guid();\r\n\r\n            options = options || {};\r\n\r\n            _.assign(me.props, options);\r\n\r\n            me.props.vector = guid;\r\n\r\n            me.cached.cables = {};\r\n            me.cached.pairs = {};\r\n\r\n            vector.addClass('graph-connectable');\r\n\r\n            // setup link droppable\r\n\r\n            var vendor = vector.interactable().vendor();\r\n\r\n            vendor.dropzone({\r\n                accept: _.format('.{0}, .{1}', Graph.styles.LINK_HEAD, Graph.styles.LINK_TAIL),\r\n                overlap: .2\r\n            })\r\n            .on('dropdeactivate', function(e){\r\n                var v = Graph.registry.vector.get(e.target);\r\n                if (v) {\r\n                    v.removeClass(CLS_CONNECT_CLEAR);\r\n                }\r\n                me.invalidateTrans();\r\n            })\r\n            .on('dropactivate', function(e){\r\n                var v = Graph.registry.vector.get(e.target);\r\n\r\n                if (v) {\r\n                    v.addClass(CLS_CONNECT_HOVER);\r\n                }\r\n\r\n                me.invalidateTrans();\r\n            })\r\n            .on('dragenter', function(e){\r\n                var link = Graph.registry.link.get(e.relatedTarget);\r\n\r\n                if (link) {\r\n                    var pole = Graph.$(e.relatedTarget).data('pole');\r\n                    var valid, source, target;\r\n\r\n                    if (pole == 'head') {\r\n                        source = link.router.source();\r\n                        target = vector;\r\n                    } else {\r\n                        source = vector;\r\n                        target = link.router.target();\r\n                    }\r\n\r\n                    valid  = source.connectable().canConnect(target.connectable(), link);\r\n\r\n                    if (valid) {\r\n                        vector.removeClass(CLS_CONNECT_INVALID);\r\n                        vector.addClass(CLS_CONNECT_VALID);\r\n                    } else {\r\n                        vector.removeClass(CLS_CONNECT_VALID);\r\n                        vector.addClass(CLS_CONNECT_INVALID);\r\n                    }\r\n\r\n                    _.assign(me.linking, {\r\n                        valid: valid,\r\n                        router: link.router,\r\n                        source: source,\r\n                        target: target,\r\n                        pole: pole\r\n                    });\r\n\r\n                    link.router.updateTrans('CONNECT', {\r\n                        valid: valid,\r\n                        source: source,\r\n                        target: target\r\n                    });\r\n                }\r\n            })\r\n            .on('dragleave', function(e){\r\n                var v = Graph.registry.vector.get(e.target);\r\n                if (v) {\r\n                    v.removeClass(CLS_CONNECT_RESET);\r\n                }\r\n\r\n                me.linking.valid = false;\r\n\r\n                if (me.linking.pole == 'head') {\r\n                    me.linking.router.updateTrans('CONNECT', {\r\n                        valid: false,\r\n                        target: null\r\n                    });\r\n                } else {\r\n                    me.linking.router.updateTrans('CONNECT', {\r\n                        valid: false,\r\n                        source: null\r\n                    });\r\n                }\r\n\r\n            })\r\n            .on('drop', function(e){\r\n                var link = Graph.registry.link.get(e.relatedTarget);\r\n\r\n                if (me.linking.valid) {\r\n                    if (me.linking.pole == 'head') {\r\n\r\n                        var oldTarget = me.linking.router.target();\r\n                        \r\n                        if (oldTarget && oldTarget.guid() != vector.guid()) {\r\n                            oldTarget.connectable().removeLink(link);\r\n                        }\r\n\r\n                        me.linking.router.updateTrans('CONNECT', {\r\n                            target: vector\r\n                        });\r\n\r\n                    } else {\r\n\r\n                        var oldSource = me.linking.router.source();\r\n\r\n                        if (oldSource && oldSource.guid() != vector.guid()) {\r\n                            oldSource.connectable().removeLink(link);\r\n                        }\r\n\r\n                        me.linking.router.updateTrans('CONNECT', {\r\n                            source: vector\r\n                        });\r\n\r\n\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        invalidateTrans: function() {\r\n            for (var name in this.linking) {\r\n                this.linking[name] = null;\r\n            }\r\n        },\r\n\r\n        wiring: function() {\r\n            return this.props.wiring;\r\n        },\r\n\r\n        treshold: function() {\r\n            var wiring = this.props.wiring;\r\n\r\n            switch(wiring) {\r\n                case 'h:h':\r\n                case 'v:v':\r\n                    return 20;\r\n                case 'h:v':\r\n                case 'v:h':\r\n                    return -10;\r\n            }\r\n\r\n            return 0;\r\n        },\r\n\r\n        direction: function (network) {\r\n            if (this.props.tuning) {\r\n                var orient = this.orientation(network);\r\n\r\n                switch(orient) {\r\n                    case 'intersect':\r\n                        return null;\r\n                    case 'top':\r\n                    case 'bottom':\r\n                        return 'v:v';\r\n                    case 'left':\r\n                    case 'right':\r\n                        return 'h:h';\r\n                    default:\r\n                        return this.props.wiring;\r\n                }    \r\n            } else {\r\n                return this.props.wiring;\r\n            }\r\n        },\r\n\r\n        orientation: function(network) {\r\n            var sourceBox = this.vector().bboxView().toJson(),\r\n                targetBox = network.vector().bboxView().toJson(),\r\n                orientation = Graph.util.boxOrientation(sourceBox, targetBox, this.treshold());\r\n\r\n            sourceBox = targetBox = null;\r\n            return orientation;\r\n        },\r\n\r\n        isSource: function(link) {\r\n            return link.source().guid() == this.vector().guid();\r\n        },\r\n\r\n        isTarget: function(link) {\r\n            return link.target().guid() == this.vector().guid();\r\n        },\r\n\r\n        connect: function(target, start, end, options) {\r\n            if (this.canConnect(target)) {\r\n\r\n                if (start && ! end) {\r\n                    options = start;\r\n                    start = null;\r\n                    end = null;\r\n                } else {\r\n                    if (start instanceof Graph.lang.Point) {\r\n                        start = start.toJson();\r\n                    }\r\n\r\n                    if (end instanceof Graph.lang.Point) {\r\n                        end = end.toJson();\r\n                    }    \r\n                }\r\n\r\n                options = options || {};\r\n\r\n                var source = this,\r\n                    sourceVector = source.vector(),\r\n                    targetVector = target.vector(),\r\n                    paper = sourceVector.paper(),\r\n                    paperLayout = paper.layout(),\r\n                    router = paperLayout.createRouter(sourceVector, targetVector),\r\n                    link = paperLayout.createLink(router, options);\r\n\r\n                if (options.command !== undefined) {\r\n                    link.connectByCommand(options.command);\r\n                } else {\r\n                    link.connect(start, end);    \r\n                }\r\n\r\n                link.render(paper);\r\n\r\n                link.cached.beforeDestroyHandler = _.bind(this.onLinkBeforeDestroy, this);\r\n                link.on('beforedestroy', link.cached.beforeDestroyHandler);\r\n\r\n                source.addLink(link, CONNECT_OUTGOING, targetVector);\r\n                target.addLink(link, CONNECT_INCOMING, sourceVector);\r\n\r\n                sourceVector.fire('connect', {link: link});\r\n\r\n                return link;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        connectByLinker: function(target, start, end, options) {\r\n            var routerType = this.vector().paper().layout().routerType();\r\n\r\n            if (routerType == 'orthogonal') {\r\n                this.connect(target, null, null, options);\r\n            } else {\r\n                this.connect(target, start, end, options);\r\n            }\r\n        },\r\n\r\n        disconnect: function(target, link) {\r\n            var connections = this.connections(target),\r\n                connectionsLength = connections.length,\r\n                disconnected = 0,\r\n                linkIds = [];\r\n\r\n            if (link !== undefined) {\r\n                if ( ! _.isArray(link)) {\r\n                    linkIds = link ? [link.guid()] : [];\r\n                } else {\r\n                    linkIds = _.map(link, function(l){ return l && l.guid() });\r\n                }\r\n            }\r\n            \r\n            _.forEach(connections, function(conn){\r\n                if (linkIds.length) {\r\n                    if (_.indexOf(linkIds, conn.guid) > -1) {\r\n                        conn.link.disconnect();\r\n                        disconnected++;\r\n                        connectionsLength--;\r\n                    }\r\n                } else {\r\n                    conn.link.disconnect();\r\n                    connectionsLength--;\r\n                }\r\n            });\r\n\r\n            if (linkIds.length) {\r\n                return disconnected === linkIds.length;\r\n            } else {\r\n                return connectionsLength === 0;\r\n            }\r\n\r\n        },\r\n\r\n        addLink: function(link, type, pair) {\r\n            var guid = link.guid(),\r\n                cables = this.cached.cables,\r\n                pairs = this.cached.pairs;\r\n\r\n            pair  = pair.guid();\r\n            pairs = pairs || {};\r\n\r\n            pairs[pair] = pairs[pair] || [];\r\n\r\n            if (_.indexOf(pairs[pair], guid) === -1) {\r\n                pairs[pair].push(guid);\r\n            }\r\n\r\n            cables[guid] = {\r\n                type: type,\r\n                pair: pair\r\n            };\r\n        },\r\n\r\n        removeLink: function(link) {\r\n            var guid, pair;\r\n\r\n            if (_.isString(link)) {\r\n                guid = link;\r\n            } else {\r\n                guid = link.guid();\r\n            }\r\n\r\n            var conn = this.cached.cables[guid];\r\n\r\n            if (conn) {\r\n                if (this.cached.pairs[conn.pair]) {\r\n                    var index = _.indexOf(this.cached.pairs[conn.pair], guid);\r\n\r\n                    if (index > -1) {\r\n                        this.cached.pairs[conn.pair].splice(index, 1);\r\n                    }\r\n\r\n                    if ( ! this.cached.pairs[conn.pair].length) {\r\n                        delete this.cached.pairs[conn.pair];\r\n                    }\r\n                }\r\n            }\r\n\r\n            delete this.cached.cables[guid];\r\n            conn = null;\r\n        },\r\n\r\n        repairLinks: function() {\r\n            console.log('called');\r\n        },\r\n\r\n        hasConnection: function(network) {\r\n            var conn = this.connections(network);\r\n            return conn.length ? conn : false;\r\n        },\r\n\r\n        connections: function(network) {\r\n            var me = this,\r\n                registry = Graph.registry.link,\r\n                current = this.props.vector,\r\n                conns = [];\r\n\r\n            if (network !== undefined) {\r\n\r\n                var pair = network.vector().guid();\r\n\r\n                if (this.cached.pairs[pair]) {\r\n                    _.forEach(me.cached.pairs[pair], function(guid){\r\n                        var link = registry.get(guid),\r\n                            opts = me.cached.cables[guid];\r\n                        if (link && opts) {\r\n                            conns.push({\r\n                                guid: guid,\r\n                                link: link,\r\n                                type: opts.type,\r\n                                source: opts.type == 'outgoing' ? current : pair,\r\n                                target: opts.type == 'outgoing' ? pair : current\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                return conns;\r\n            }\r\n\r\n            var cables = me.cached.cables;\r\n\r\n            _.forOwn(cables, function(opts, guid){\r\n                var link = registry.get(guid);\r\n                if (link) {\r\n                    conns.push({\r\n                        guid: guid,\r\n                        link: link,\r\n                        type: opts.type,\r\n                        source: opts.type == 'outgoing' ? current : opts.pair,\r\n                        target: opts.type == 'outgoing' ? opts.pair : current\r\n                    });\r\n                }\r\n            });\r\n\r\n            return conns;\r\n        },\r\n\r\n        ///////// RULES /////////\r\n\r\n        /**\r\n         * Can connect to target\r\n         */\r\n        canConnect: function(target) {\r\n            if (target instanceof Graph.plugin.Network) {\r\n                var sourceVector = this.vector().guid(),\r\n                    targetVector = target.vector().guid();\r\n\r\n                var connections, outgoing, incoming;\r\n\r\n                // check limit outgoing\r\n                if (this.props.limitOutgoing > 0) {\r\n                    connections = this.connections();\r\n                    outgoing = _.filter(connections, function(conn){\r\n                        return conn.type == 'outgoing';\r\n                    });\r\n\r\n                    if (outgoing.length + 1 > this.props.limitOutgoing) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                if (target.props.limitIncoming > 0) {\r\n                    connections = target.connections();\r\n                    \r\n                    incoming = _.filter(connections, function(conn){\r\n                        return conn.type == 'incoming';\r\n                    });\r\n\r\n                    if (incoming.length + 1 > target.props.limitIncoming) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                if (sourceVector != targetVector) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        destroy: function() {\r\n            var me = this;\r\n\r\n            // collect garbage\r\n            this.cached.cables = null;\r\n            this.cached.pairs  = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Network';\r\n        },\r\n\r\n        onLinkBeforeDestroy: function(e) {\r\n            var link = e.link;\r\n            var vector, network;\r\n\r\n            if ((vector = link.router.source())) {\r\n                vector.connectable().removeLink(link);\r\n            }\r\n\r\n            if ((vector = link.router.target())) {\r\n                vector.connectable().removeLink(link);\r\n            }\r\n\r\n            link.off('beforedestroy', link.cached.beforeDestroyHandler);\r\n            link.cached.beforeDestroyHandler = null;\r\n        }\r\n\r\n    });\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.plugin.History = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            limit: 1,\r\n            index: 0\r\n        },\r\n\r\n        items: {},\r\n\r\n        constructor: function(vector) {\r\n            this.props.vector = vector.guid();\r\n        },\r\n\r\n        save: function(prop, data) {\r\n            var lim = this.props.limit, len;\r\n\r\n            if (len > lim) {\r\n                _.drop(this.items, len - lim);\r\n            }\r\n\r\n            this.items[prop] = this.items[prop] || [];\r\n\r\n            if ((len = this.items[prop].length) > lim - 1) {\r\n                this.items[prop].splice(0, len - lim);\r\n            }\r\n\r\n            this.items[prop].push(data);\r\n        },\r\n\r\n        last: function(prop) {\r\n\r\n        },\r\n\r\n        go: function() {\r\n\r\n        },\r\n\r\n        back: function() {\r\n\r\n        },\r\n\r\n        next: function() {\r\n\r\n        },\r\n\r\n        clear: function() {\r\n\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Panzoom = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            panEnabled: false,\r\n            zoomEnabled: true,\r\n            showToolbox: true,\r\n            vector: null\r\n        },\r\n\r\n        caching: {\r\n            offset: {x: 0, y: 0}\r\n        },\r\n\r\n        scrolling: {\r\n            steps: 10\r\n        },\r\n\r\n        zooming: {\r\n            scale: 1,\r\n            zoom: 1,\r\n            origin: null,\r\n            range: {min: 0.2, max: 4.0}\r\n        },\r\n\r\n        components: {\r\n            toolbox: null\r\n        },\r\n\r\n        panning: {\r\n            start: {x: 0, y: 0},\r\n            moveHandler: null,\r\n            stopHandler: null\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            var me = this, vendor, viewport, scale, bound;\r\n\r\n            // validate vector\r\n            if ( ! vector.isPaper()) {\r\n                throw Graph.error('Panzoom only available for paper !');\r\n            }\r\n\r\n            viewport = vector.viewport();\r\n            scale    = Math.round(viewport.matrix().scale().x, 1000);\r\n            vendor   = vector.interactable().vendor();\r\n\r\n            _.assign(me.props, {\r\n                vector: vector.guid()\r\n            });\r\n\r\n            _.assign(me.zooming, {\r\n                scale: scale,\r\n                zoom: scale\r\n            });\r\n\r\n            me.initComponent(vector);\r\n\r\n            // use native engine\r\n            vendor.on('wheel', _.bind(me.onMouseWheel, me, _, vector, viewport));\r\n            vendor.on('down', _.bind(me.onPointerDown, me, _, vector, viewport));\r\n\r\n            if (vector.props.rendered) {\r\n                me.revalidate(vector);\r\n\r\n                if (me.props.showToolbox) {\r\n                    me.components.toolbox.appendTo(vector.container());\r\n                }\r\n            } else {\r\n                vector.on('render', function(){\r\n                    me.revalidate(vector);\r\n\r\n                    if (me.props.showToolbox) {\r\n                        me.components.toolbox.appendTo(vector.container());\r\n                    }\r\n                });\r\n            }\r\n\r\n            vendor = null;\r\n            vector = null;\r\n        },\r\n\r\n        initComponent: function(vector) {\r\n            var me = this;\r\n            var container, toolbox;\r\n\r\n            if (me.props.showToolbox) {\r\n                container = vector.container();\r\n\r\n                toolbox = me.components.toolbox = Graph.$('<div class=\"graph-zoom-toolbox\">');\r\n                toolbox.html(\r\n                    '<div>' +\r\n                        '<a data-tool=\"zoom-reset\" href=\"javascript:void(0)\" title=\"' + Graph._('Reset zoom') + '\">' +\r\n                            '<i class=\"'+ Graph.icons.ZOOM_RESET +'\"></i>' +\r\n                        '</a>'+\r\n                        '<div class=\"splitter\"></div>'+\r\n                        '<a data-tool=\"zoom-in\" href=\"javascript:void(0)\" title=\"' + Graph._('Zoom in') + '\">' +\r\n                            '<i class=\"'+ Graph.icons.ZOOM_IN +'\"></i>' +\r\n                        '</a>'+\r\n                        '<div class=\"splitter\"></div>'+\r\n                        '<a data-tool=\"zoom-out\" href=\"javascript:void(0)\" title=\"' + Graph._('Zoom out') + '\">' +\r\n                            '<i class=\"'+ Graph.icons.ZOOM_OUT +'\"></i>' +\r\n                        '</a>'+\r\n                    '</div>'\r\n                );\r\n\r\n                toolbox.on('click', '[data-tool]', function(e){\r\n                    e.preventDefault();\r\n                    var tool = Graph.$(this).data('tool');\r\n                    switch(tool) {\r\n                        case 'zoom-reset':\r\n                            me.zoomReset();\r\n                            break;\r\n                        case 'zoom-in':\r\n                            me.zoomIn();\r\n                            break;\r\n                        case 'zoom-out':\r\n                            me.zoomOut();\r\n                            break;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        revalidate: function(vector) {\r\n            var bound = vector.node().getBoundingClientRect();\r\n\r\n            this.caching.offset = {\r\n                x: bound.left,\r\n                y: bound.top\r\n            };\r\n        },\r\n\r\n        enable: function() {\r\n            var vector = this.vector();\r\n\r\n            this.props.panEnabled = true;\r\n            this.props.zoomEnabled = true;\r\n\r\n            vector.cursor('default');\r\n            vector.state('panning');\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.panEnabled = false;\r\n        },\r\n\r\n        zoomReset: function() {\r\n            var viewport = this.vector().viewport();\r\n            var matrix;\r\n\r\n            this.zooming.zoom = 1;\r\n            this.zooming.scale = 1;\r\n\r\n            viewport.reset();\r\n\r\n            matrix = Graph.matrix();\r\n            // matrix.translate(.5, .5);\r\n\r\n            viewport.attr('transform', matrix.toValue());\r\n            viewport.graph.matrix = matrix;\r\n        },\r\n\r\n        zoomIn: function() {\r\n            var paper = this.vector().paper(),\r\n                viewport = paper.viewport(),\r\n                origin = paper.layout().center(),\r\n                direction = 0.1875;\r\n\r\n            this.zoom(paper, viewport, direction, origin);\r\n        },\r\n\r\n        zoomOut: function() {\r\n            var paper = this.vector().paper(),\r\n                viewport = paper.viewport(),\r\n                origin = paper.layout().center(),\r\n                direction = -0.1875;\r\n\r\n            this.zoom(paper, viewport, direction, origin);\r\n        },\r\n\r\n        zoom: function(paper, viewport, direction, origin) {\r\n            var range = this.zooming.range,\r\n                currentZoom = this.zooming.zoom,\r\n                zoomType = direction > 0 ? 'in' : 'out',\r\n                factor = Math.pow(1 + Math.abs(direction), zoomType == 'in' ? 1 : -1),\r\n                zoom = (zoomRange(range, currentZoom * factor)),\r\n                matrix = viewport.matrix(),\r\n                currentScale = matrix.props.a,\r\n                scale = 1 / currentScale * zoom,\r\n                matrixScale = matrix.clone();\r\n\r\n            this.onBeforeZoom(paper);\r\n\r\n            matrixScale.scale(scale, scale, origin.x, origin.y);\r\n\r\n            viewport.attr('transform', matrixScale.toValue());\r\n            viewport.graph.matrix = matrixScale;\r\n\r\n            this.zooming.zoom  = zoom;\r\n            this.zooming.scale = matrixScale.props.a;\r\n\r\n            if (paper.state() == 'panning') {\r\n                paper.cursor(zoomType == 'in' ? 'zoom-in' : 'zoom-out');\r\n            }\r\n\r\n            this.onZoom(paper);\r\n        },\r\n\r\n        scroll: function(paper, viewport, dx, dy) {\r\n            var matrix = viewport.matrix().clone(),\r\n                scale = this.zooming.scale;\r\n\r\n            this.onBeforeScroll(paper);\r\n\r\n            dx /= scale;\r\n            dy /= scale;\r\n\r\n            matrix.translate(dx, dy);\r\n\r\n            viewport.attr('transform', matrix.toValue());\r\n            viewport.graph.matrix = matrix;\r\n\r\n            if (this.zooming.origin) {\r\n                this.zooming.origin.x += dx;\r\n                this.zooming.origin.y += dy;\r\n            }\r\n\r\n            this.onScroll();\r\n        },\r\n\r\n        onMouseWheel: function(e, paper, viewport) {\r\n\r\n            e = Graph.event.fix(e);\r\n            e.preventDefault();\r\n\r\n            var vscroll = Graph.event.hasPrimaryModifier(e),\r\n                hscroll = Graph.event.hasSecondaryModifier(e),\r\n                event   = Graph.event.original(e);\r\n\r\n            var factor, delta, origin, offset, box;\r\n\r\n            if (vscroll || hscroll) {\r\n\r\n                if (Graph.isMac()) {\r\n                    factor = event.deltaMode === 0 ? 1.25 : 50;\r\n                } else {\r\n                    // factor = event.deltaMode === 0 ? 1/40 : 1/2;\r\n                    factor = event.deltaMode === 0 ? 1 : 20;\r\n                }\r\n\r\n                delta = {};\r\n\r\n                if (hscroll) {\r\n                    delta.dx = (factor * (event.deltaX || event.deltaY));\r\n                    delta.dy = 0;\r\n                } else {\r\n                    delta.dx = 0;\r\n                    delta.dy = (factor * event.deltaY);\r\n                }\r\n\r\n                this.scroll(paper, viewport, delta.dx, delta.dy);\r\n\r\n            } else {\r\n                factor = (event.deltaMode === 0 ? 1/40 : 1/2);\r\n                offset = this.caching.offset;\r\n\r\n                origin = {\r\n                    x: event.clientX - offset.x,\r\n                    y: event.clientY - offset.y\r\n                };\r\n\r\n                this.zooming.origin = origin;\r\n\r\n                // console.log(event.deltaY, factor, event.deltaY * factor / (-15));\r\n\r\n                this.zoom(\r\n                    paper,\r\n                    viewport,\r\n                    // event.deltaY * factor / (-5),\r\n                    event.deltaY * factor / (-8),\r\n                    origin\r\n                );\r\n            }\r\n        },\r\n\r\n        onPointerDown: function(e, paper, viewport, vendor) {\r\n            var target = Graph.$(e.target),\r\n                vector = Graph.registry.vector.get(target),\r\n                vendor = paper.interactable().vendor(),\r\n                tool   = paper.tool().current();\r\n\r\n            var offset;\r\n\r\n            if (this.panning.moveHandler) {\r\n                vendor.off('move', this.panning.moveHandler);\r\n                this.panning.moveHandler = null;\r\n            }\r\n\r\n            if (this.panning.stopHandler) {\r\n                vendor.off('up', this.panning.stopHandler);\r\n                this.panning.stopHandler = null;\r\n            }\r\n\r\n            if (' collector pencil '.indexOf(tool) > -1) {\r\n                return;\r\n            }\r\n\r\n            if (vector) {\r\n                // already has drag feature\r\n                if (vector.isDraggable()) {\r\n                    return;\r\n                }\r\n\r\n                // reject non primary button\r\n                if (e.button || e.ctrlKey || e.shiftKey || e.altKey) {\r\n                    return;\r\n                }\r\n\r\n                this.revalidate(paper);\r\n\r\n                offset = this.caching.offset;\r\n\r\n                this.panning.start = {\r\n                    x: e.clientX - offset.x,\r\n                    y: e.clientY - offset.y\r\n                };\r\n\r\n                // install temporary events handler\r\n                this.panning.moveHandler = _.bind(this.onPointerMove, this, _, paper, viewport);\r\n                this.panning.stopHandler = _.bind(this.onPointerStop, this, _, paper, viewport);\r\n\r\n                vendor.on('move', this.panning.moveHandler);\r\n                vendor.on('up', this.panning.stopHandler);\r\n            }\r\n        },\r\n\r\n        onPointerMove: function(e, paper, viewport) {\r\n\r\n            var offset = this.caching.offset,\r\n                start = this.panning.start,\r\n                current = {\r\n                    x: e.clientX - offset.x,\r\n                    y: e.clientY - offset.y\r\n                },\r\n                dx = current.x - start.x,\r\n                dy = current.y - start.y,\r\n                mg = Graph.util.hypo(dx, dy);\r\n\r\n            this.scroll(paper, viewport, dx, dy);\r\n\r\n            this.panning.start = {\r\n                x: e.clientX - offset.x,\r\n                y: e.clientY - offset.y\r\n            };\r\n\r\n            paper.cursor('move');\r\n\r\n            // prevent select\r\n            e.preventDefault();\r\n        },\r\n\r\n        onPointerStop: function(e, paper) {\r\n            var me = this, vendor = paper.interactable().vendor();\r\n            var delay;\r\n\r\n            // wait interact to fire last posible event...\r\n            delay = _.delay(function(){\r\n                clearTimeout(delay);\r\n                delay = null;\r\n\r\n                vendor.off('move', me.panning.moveHandler);\r\n                vendor.off('up', me.panning.stopHandler);\r\n\r\n                me.panning.moveHandler = null;\r\n                me.panning.stopHandler = null;\r\n            }, 0);\r\n\r\n            paper.cursor('default');\r\n        },\r\n\r\n        onBeforeZoom: _.debounce(function(paper){\r\n\r\n            Graph.topic.publish('paper:beforezoom', null, paper);\r\n\r\n        }, 300, {leading: true, trailing: false}),\r\n\r\n        onZoom: _.debounce(function(paper) {\r\n            var state = paper.state();\r\n\r\n            if (state == 'panning') {\r\n                paper.cursor('default');\r\n            }\r\n\r\n        }, 300),\r\n\r\n        onBeforeScroll: _.debounce(function(paper){\r\n\r\n            Graph.topic.publish('paper:beforescroll', null, paper);\r\n\r\n        }, 300, {leading: true, trailing: false}),\r\n\r\n        onScroll: _.debounce(function() {\r\n\r\n        }, 300),\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Panzoom';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// HELPERS /////////\r\n\r\n    function logarithm(num, base) {\r\n        base = base || 10;\r\n        return Math.log(num) / Math.log(base);\r\n    }\r\n\r\n    function stepRange(range, steps) {\r\n        var min = logarithm(range.min),\r\n            max = logarithm(range.max),\r\n            abs = Math.abs(min) + Math.abs(max);\r\n\r\n        return abs / steps;\r\n    }\r\n\r\n    function zoomRange(range, scale) {\r\n        return Math.max(range.min, Math.min(range.max, scale));\r\n    }\r\n\r\n    function onDestroy(event, paper) {\r\n        var offset = paper.node().getBoundingClientRect(),\r\n            x = event.clientX - offset.left,\r\n            y = event.clientY - offset.top;\r\n\r\n        return {\r\n            x: x,\r\n            y: y\r\n        };\r\n    }\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var CLS_CONNECT_VALID = 'connect-valid',\r\n        CLS_CONNECT_INVALID = 'connect-invalid',\r\n        CLS_CONNECT_RESET = 'connect-valid connect-invalid';\r\n\r\n    Graph.plugin.Linker = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n            enabled: false,\r\n            suspended: true,\r\n            rendered: false\r\n        },\r\n\r\n        components: {\r\n            block: null,\r\n            pointer: null,\r\n            path: null\r\n        },\r\n\r\n        linking: {\r\n            treshold: 10,\r\n            enabled: false,\r\n            moveHandler: null,\r\n            stopHandler: null,\r\n            source: null,\r\n            start: null,\r\n            target: null,\r\n            end: null,\r\n            visits: []\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            var me = this, vendor;\r\n\r\n            if ( ! vector.isPaper()) {\r\n                throw Graph.error('Linker plugin is only available for paper !');\r\n            }\r\n\r\n            vendor = vector.interactable().vendor();\r\n            vendor.on('down', _.bind(me.onPointerDown, me, _, vector));\r\n\r\n            vector.on('keynavdown', function(e){\r\n                if (e.keyCode === Graph.event.ESC) {\r\n                    me.invalidate();\r\n                    vector.tool().activate('panzoom');\r\n                }\r\n            });\r\n\r\n            me.props.vector = vector.guid();\r\n            me.initComponent();\r\n        },\r\n        \r\n        initComponent: function() {\r\n            var me = this, \r\n                comp = me.components;\r\n\r\n            var block, pointer, path;\r\n\r\n            block = (new Graph.svg.Group())\r\n                .addClass('graph-linker-path')\r\n                .selectable(false);\r\n\r\n            pointer = (new Graph.svg.Circle())\r\n                .addClass('graph-linker-pointer')\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .selectable(false)\r\n                .render(block);\r\n\r\n            path = (new Graph.svg.Path())\r\n                .addClass('graph-linker-path')\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .selectable(false)\r\n                .render(block)\r\n                .attr('marker-end', 'url(#marker-link-end)');\r\n\r\n            comp.block = block.guid();\r\n            comp.pointer = pointer.guid();\r\n            comp.path = path.guid();\r\n        },\r\n\r\n        component: function(name) {\r\n            if (name === undefined) {\r\n                return Graph.registry.vector.get(this.components.block);\r\n            }\r\n            return Graph.registry.vector.get(this.components[name]);\r\n        },\r\n\r\n        render: function() {\r\n            var paper;\r\n\r\n            if (this.props.rendered) {\r\n                return;\r\n            }\r\n\r\n            paper = this.vector();\r\n            this.component().render(paper);\r\n\r\n            this.props.rendered = true;\r\n        },\r\n\r\n        invalidate: function() {\r\n            var vector, vendor;\r\n\r\n            if (this.linking.enabled) {\r\n                vector = this.vector();\r\n                vendor = vector.interactable().vendor();\r\n                \r\n                if (this.linking.moveHandler) {\r\n                    vendor.off('move', this.linking.moveHandler);\r\n                    this.linking.moveHandler = null;\r\n                }\r\n\r\n                if (this.linking.source) {\r\n                    this.linking.source.removeClass('disallowed');\r\n                }\r\n\r\n                if (this.linking.target) {\r\n                    this.linking.target.removeClass('allowed');\r\n                }\r\n\r\n                _.assign(this.linking, {\r\n                    enabled: false,\r\n                    moveHandler: null,\r\n                    stopHandler: null,\r\n                    source: null,\r\n                    start: null,\r\n                    target: null,\r\n                    end: null\r\n                });\r\n                \r\n                if (this.linking.visits) {\r\n                    _.forEach(this.linking.visits, function(v){\r\n                        v.removeClass('connect-valid connect-invalid');\r\n                    });\r\n                }\r\n                \r\n                this.linking.visits = null;\r\n            }\r\n        },\r\n\r\n        enable: function() {\r\n            var paper = this.vector();\r\n            this.props.enabled = true;\r\n\r\n            paper.state('linking');\r\n            paper.addClass('linking');\r\n        },\r\n\r\n        disable: function() {\r\n            var paper = this.vector();\r\n\r\n            this.props.enabled = false;\r\n            this.invalidate();\r\n            this.suspend();\r\n\r\n            paper.removeClass('linking');\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.component().elem.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            var paper;\r\n\r\n            if ( ! this.props.suspended) {\r\n                return;\r\n            }\r\n\r\n            paper = this.vector();\r\n\r\n            this.props.suspended = false;\r\n            \r\n            if ( ! this.props.rendered) {\r\n                this.render();\r\n            } else {\r\n                this.component().elem.appendTo(paper.viewport().elem);\r\n            }\r\n        },\r\n        \r\n        /**\r\n         *  Start manual linking\r\n         */\r\n        start: function(source, anchor) {\r\n            var paper = this.vector(),\r\n                layout = paper.layout(),\r\n                offset = layout.position();\r\n                \r\n            if (paper.tool().current() != 'linker') {\r\n                return;\r\n            }\r\n            \r\n            if (this.linking.enabled) {\r\n                if (this.linking.source && this.linking.target) {\r\n                    this.build();\r\n                } else {\r\n                    this.invalidate();\r\n                    this.suspend();\r\n                }\r\n                return;\r\n            }\r\n            \r\n            this.linking.visits = [];\r\n            \r\n            var vendor, sbox, port;\r\n\r\n            if (source.isConnectable()) {\r\n\r\n                if (this.props.suspended) {\r\n                    this.resume();    \r\n                }\r\n\r\n                var path = this.component('path');\r\n\r\n                this.linking.moveHandler = _.bind(this.onPointerMove, this, _, paper, path);    \r\n                \r\n                vendor = paper.interactable().vendor();\r\n                vendor.on('move', this.linking.moveHandler);\r\n\r\n                this.linking.visits.push(source);    \r\n\r\n                if (source.isConnectable()) {\r\n                    \r\n                    if ( ! this.linking.source) {\r\n                        sbox = source.bboxView();\r\n                        port = sbox.center(true);\r\n\r\n                        this.linking.source = source;\r\n                        this.linking.start  = port;\r\n                        \r\n                        if (anchor) {\r\n                            path.moveTo(port.x, port.y).lineTo(anchor.x, anchor.y, false);\r\n                        } else {\r\n                            path.moveTo(port.x, port.y).lineTo(port.x, port.y, false);\r\n                        }   \r\n\r\n                        sbox = port = null;\r\n                    }\r\n\r\n                }\r\n\r\n                this.linking.enabled = true;\r\n            }\r\n        },\r\n        \r\n        cropping: function(start, end) {\r\n            var source = this.linking.source,\r\n                target = this.linking.target,\r\n                cable = new Graph.lang.Path([['M', start.x, start.y], ['L', end.x, end.y]]);\r\n\r\n            var spath, scrop, tpath, tcrop;\r\n\r\n            if (source) {\r\n                spath = source.shapeView();\r\n                scrop = spath.intersection(cable, true);\r\n            }\r\n\r\n            if (target) {\r\n                tpath = target.shapeView();\r\n                tcrop = tpath.intersection(cable, true);\r\n            }\r\n\r\n            cable = spath = tpath = null;\r\n\r\n            return {\r\n                start: scrop ? scrop[0] : null,\r\n                end:   tcrop ? tcrop[0] : null\r\n            };\r\n        },\r\n\r\n        build: function() {\r\n            var path = this.component('path'),\r\n                tail = path.tail(),\r\n                head = path.head();\r\n\r\n            if (tail && head) {\r\n                var sourceNetwork = this.linking.source.connectable(),\r\n                    targetNetwork = this.linking.target.connectable();\r\n\r\n                sourceNetwork.connectByLinker(targetNetwork, tail, head);\r\n            }\r\n\r\n            this.invalidate();\r\n            this.suspend();\r\n        },\r\n\r\n        onPointerDown: function(e, paper) {\r\n            var layout = paper.layout(),\r\n                source = layout.grabVector(e);\r\n            \r\n            if (source) {\r\n                this.start(source);\r\n            }\r\n            \r\n            layout = source = null;\r\n        },\r\n\r\n        onPointerMove: function(e, paper, path) {\r\n            if (this.linking.enabled) {\r\n\r\n                var layout = paper.layout(),\r\n                    target = layout.grabVector(e);\r\n\r\n                if ( ! target) {\r\n                    return;\r\n                }\r\n\r\n                var source = this.linking.source,\r\n                    valid = false;\r\n\r\n                if (source) {\r\n\r\n                    // track visit\r\n                    if (this.linking.visits.indexOf(target.guid()) === -1) {\r\n                        this.linking.visits.push(target);\r\n                    }\r\n                    \r\n                    var start = this.linking.start,\r\n                        coord = layout.pointerLocation(e),\r\n                        x = coord.x,\r\n                        y = coord.y,\r\n                        rad = Graph.util.rad(Graph.util.theta(start, {x: x, y: y})),\r\n                        sin = Math.sin(rad),\r\n                        cos = Math.cos(rad),\r\n                        tdx = this.linking.treshold * -cos,\r\n                        tdy = this.linking.treshold *  sin;\r\n\r\n                    x += tdx;\r\n                    y += tdy;\r\n\r\n                    if (target.isConnectable()) {\r\n                        \r\n                        var crop, tbox, port;\r\n\r\n                        if (source.connectable().canConnect(target.connectable())) {\r\n                            valid  = true;\r\n                            \r\n                            target.removeClass(CLS_CONNECT_INVALID);\r\n                            target.addClass(CLS_CONNECT_VALID);\r\n                            \r\n                            tbox = target.bboxView();\r\n                            port = tbox.center(true);\r\n\r\n                            this.linking.target = target;\r\n                            this.linking.end    = port;\r\n\r\n                            crop = this.cropping(start, port);\r\n\r\n                            if (crop.start) {\r\n                                path.moveTo(crop.start.x, crop.start.y);\r\n                            }\r\n\r\n                            if (crop.end) {\r\n                                path.lineTo(crop.end.x, crop.end.y, false);\r\n                            } else {\r\n                                path.lineTo(x, y, false);\r\n                            }\r\n\r\n                            tbox = port = null;\r\n                        } else {\r\n                            target.removeClass(CLS_CONNECT_VALID);\r\n                            target.addClass(CLS_CONNECT_INVALID);\r\n                        }\r\n\r\n                    } else {\r\n                        target.addClass(CLS_CONNECT_INVALID);\r\n                    }\r\n\r\n                    if ( ! valid) {\r\n\r\n                        if (this.linking.target) {\r\n                            this.linking.target.removeClass(CLS_CONNECT_RESET);\r\n                        }\r\n\r\n                        this.linking.target = null;\r\n                        this.linking.end    = null; \r\n\r\n                        crop = this.cropping(start, {x: x, y: y});\r\n\r\n                        if (crop.start) {\r\n                            path.moveTo(crop.start.x, crop.start.y);\r\n                        }\r\n\r\n                        if (crop.end) {\r\n                            path.lineTo(crop.end.x, crop.end.y, false);\r\n                        } else {\r\n                            path.lineTo(x, y, false);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            e.preventDefault();\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Linker';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// HELPER /////////\r\n    \r\n\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.ToolManager = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n            current: null\r\n        },\r\n\r\n        tools: {\r\n\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            var me = this;\r\n\r\n            me.props.vector = vector.guid();\r\n\r\n        },\r\n        \r\n        has: function(tool) {\r\n            return !!this.tools[tool];\r\n        },\r\n\r\n        get: function(name) {\r\n            var data = this.tools[name],\r\n                vector = this.vector();\r\n\r\n            if (data) {\r\n                switch(data.type) {\r\n                    case 'plugin':\r\n                        return vector.plugins[name];\r\n                    case 'util':\r\n                        return vector.utils[name];\r\n                }\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        current: function() {\r\n            return this.props.current;\r\n        },\r\n\r\n        register: function(name, type) {\r\n            type = _.defaultTo(type, 'plugin');\r\n\r\n            this.tools[name] = {\r\n                name: name,\r\n                type: type,\r\n                enabled: false\r\n            };\r\n        },\r\n\r\n        unregister: function(name) {\r\n            if (this.tools[name]) {\r\n                delete this.tools[name];\r\n            }\r\n        },\r\n\r\n        activate: function(name, activator) {\r\n            if (this.props.current != name) {\r\n\r\n                var tool = this.get(name), data;\r\n                \r\n                if (tool) {\r\n                    this.deactivateAll(name);\r\n                    this.props.current = name;\r\n\r\n                    data = this.tools[name];\r\n                    data.enabled = true;\r\n\r\n                    activator = _.defaultTo(activator, 'tool');\r\n                    tool.enable(activator);\r\n\r\n                    this.fire('activate', {\r\n                        name: data.name,\r\n                        enabled: data.enabled\r\n                    });\r\n                }\r\n            }\r\n            \r\n        },\r\n\r\n        deactivate: function(name) {\r\n            var tool = this.get(name), data;\r\n\r\n            if (tool) {\r\n                data = this.tools[name];\r\n                data.enabled = false;\r\n                this.props.current = null;\r\n\r\n                tool.disable();\r\n\r\n                this.fire('deactivate', {\r\n                    name: data.name,\r\n                    enabled: data.enabled\r\n                });\r\n            }\r\n        },\r\n\r\n        deactivateAll: function(except) {\r\n            var vector = this.vector();\r\n\r\n            for(var name in this.tools) {\r\n                if (name != except) {\r\n                    this.deactivate(name);\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        toggle: function(tool) {\r\n            var data = this.tools[tool];\r\n            if (data) {\r\n                if (data.enabled) {\r\n                    this.deactivate(tool);\r\n                } else {\r\n                    this.activate(tool);\r\n                }\r\n            }\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.ToolManager';\r\n        }\r\n\r\n\r\n    });\r\n\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Pencil = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        writing: {\r\n            startHandler: null\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            this.props.vector = vector.guid();\r\n        },\r\n\r\n        enable: function(activator) {\r\n            this.props.enabled = true;\r\n            this.props.activator = activator;\r\n\r\n            var vector = this.vector(),\r\n                vendor = vector.interactable().vendor();\r\n\r\n            vector.cursor('text');\r\n            vector.state('writing');\r\n\r\n            this.writing.startHandler = _.bind(this.onPointerDown, this);\r\n            vendor.on('down', this.writing.startHandler);\r\n\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.enabled = false;\r\n            var vendor = this.vector().interactable().vendor();\r\n            vendor.off('down', this.writing.startHandler);\r\n            this.writing.startHandler = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Pencil';\r\n        },\r\n\r\n        onPointerDown: function(e) {\r\n            var vector = this.vector();\r\n\r\n            if (vector.isPaper()) {\r\n                var offset, options, result;\r\n\r\n                offset = vector.layout().pointerLocation(e);\r\n                options = {\r\n                    left: offset.x,\r\n                    top: offset.y\r\n                };\r\n\r\n                if ( ! vector.diagram().current()) {\r\n                    vector.diagram().create();\r\n                }\r\n\r\n                result = vector.diagram().current().drawShape(\r\n                    vector, \r\n                    'Graph.shape.common.Label', \r\n                    options\r\n                );\r\n\r\n                if (result.shape) {\r\n                    var t = _.delay(function(e){\r\n                        clearTimeout(t);\r\n                        t = null;\r\n\r\n                        vector.tool().activate('panzoom');\r\n                        result.shape.editable().plugin().startEdit();\r\n\r\n                    }, 10);    \r\n                } else {\r\n                    //vector.tool().activate('panzoom');\r\n                }\r\n                \r\n            }\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    var MIN_BOX_WIDTH  = 150,\r\n        MIN_BOX_HEIGHT = 50,\r\n        OFFSET_TRESHOLD = 10;\r\n\r\n    var Editor = Graph.plugin.Editor = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n            rendered: false,\r\n            suspended: true,\r\n            width: 'auto',\r\n            height: 'auto',\r\n            offset: 'auto',\r\n            align: 'center'\r\n        },\r\n\r\n        editing: {\r\n            commitHandler: null\r\n        },\r\n\r\n        components: {\r\n            editor: null\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var vendor;\r\n\r\n            _.assign(this.props, options || {});\r\n\r\n            this.props.vector = vector.guid();\r\n\r\n            _.assign(this.cached, {\r\n                left: 0,\r\n                top: 0,\r\n                width: 0,\r\n                height: 0\r\n            });\r\n\r\n            vendor = vector.interactable().vendor();\r\n            vendor.on('doubletap', _.bind(this.onDoubleTap, this));\r\n\r\n            this.initComponent();\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = this.components;\r\n            \r\n            comp.editor = Graph.$('<div class=\"graph-editor\" contenteditable=\"true\"></div>');\r\n            comp.editor.css('text-align', this.props.align);\r\n            \r\n            comp.editor.on('keydown', function(e){\r\n                switch(e.keyCode) {\r\n                    case Graph.event.ENTER:\r\n                        me.commit();\r\n                        break;\r\n                    case Graph.event.DELETE:\r\n                    case Graph.event.SHIFT:\r\n                        e.stopPropagation();\r\n                        break;\r\n\r\n                }\r\n            });\r\n        },\r\n        \r\n        commit: function() {\r\n\r\n            var text = this.components.editor.text();\r\n\r\n            this.suspend();\r\n            this.vector().props.text = text;\r\n\r\n            this.fire('edit', {\r\n                text: text,\r\n                left: this.cached.left,\r\n                top: this.cached.top\r\n            });\r\n        },\r\n\r\n        render: function() {\r\n            if (this.props.rendered) {\r\n                this.redraw();\r\n                return;\r\n            }\r\n\r\n            this.vector().paper().container().append(this.components.editor);\r\n            this.props.rendered = true;\r\n            this.redraw();\r\n        },\r\n\r\n        suspend: function() {\r\n\r\n            this.props.suspended = true;\r\n            this.components.editor.detach();\r\n\r\n            if (this.editing.commitHandler) {\r\n                Graph.topic.unsubscribe('paper:beforezoom', this.editing.commitHandler);\r\n                Graph.topic.unsubscribe('paper:beforescroll', this.editing.commitHandler);\r\n                Graph.topic.unsubscribe('vector:pointerdown', this.editing.commitHandler);\r\n\r\n                this.editing.commitHandler = null;\r\n            }\r\n        },\r\n\r\n        resume: function() {\r\n            var container;\r\n\r\n            if ( ! this.props.rendered) {\r\n                this.render();\r\n            } else {\r\n                if (this.props.suspended) {\r\n                    this.props.suspended = false;\r\n                    container = this.vector().paper().container();\r\n                    container.append(this.components.editor);\r\n                }\r\n                this.redraw();\r\n            }\r\n\r\n        },\r\n\r\n        redraw: function() {\r\n            var editor = this.components.editor,\r\n                vector = this.vector(),\r\n                matrix = vector.matrixCurrent(),\r\n                scale  = matrix.scale();\r\n\r\n            var vbox = vector.bbox().clone().transform(matrix).toJson();\r\n            var left, top, width, height;\r\n            \r\n            width  = vbox.width;\r\n            height = vbox.height;\r\n            left = vbox.x;\r\n            top  = vbox.y;\r\n\r\n            if (this.props.width != 'auto') {\r\n                width = Math.max(this.props.width, MIN_BOX_WIDTH);\r\n                width = Math.max(width * scale.x, width);\r\n                left = vbox.x;\r\n            } else {\r\n                width = width - 8 * scale.x;\r\n                left = left + 4 * scale.x;\r\n            }   \r\n\r\n            if (this.props.height != 'auto') {\r\n                height = Math.max(this.props.height, MIN_BOX_HEIGHT);\r\n                height = Math.max(height * scale.y, height);\r\n                top = vbox.y;\r\n            } else {\r\n                height = height - 8 * scale.y;\r\n                top = top + 4 * scale.y;\r\n            }\r\n\r\n            editor.css({\r\n                left: left,\r\n                top:  top,\r\n                width: width,\r\n                height: height\r\n            });\r\n\r\n            _.assign(this.cached, {\r\n                left: left,\r\n                top: top,\r\n                width: width,\r\n                height: height\r\n            });\r\n\r\n            editor.text((vector.props.text || ''));\r\n            editor.focus();\r\n\r\n            vbox = null;\r\n        },\r\n\r\n        startEdit: function(e) {\r\n            var me = this, vector = me.vector();\r\n\r\n            vector.deselect();\r\n\r\n            if (vector.paper().tool().current() == 'linker') {\r\n                vector.paper().tool().activate('panzoom');\r\n            }\r\n\r\n            me.fire('beforeedit');\r\n            me.resume();\r\n\r\n            if (e && this.props.offset == 'pointer') {\r\n                var editor = me.components.editor,\r\n                    paper = vector.paper(),\r\n                    layout = paper.layout(),\r\n                    scale = layout.scale();\r\n\r\n                var offset, coords, screen;\r\n\r\n                if (paper) {\r\n                    offset = paper.position();\r\n                    coords = layout.pointerLocation(e);\r\n                    \r\n                    if (this.props.align == 'center') {\r\n                        screen = {\r\n                            x: e.clientX - offset.left,\r\n                            y: e.clientY - offset.top\r\n                        };\r\n\r\n                        editor.css({\r\n                            left: screen.x - editor.width() / 2,\r\n                            top: screen.y - editor.height() / 2\r\n                        });\r\n                    } else {\r\n                        screen = vector.bboxView().toJson();\r\n                        screen = layout.screenLocation({x: screen.x, y: screen.y});\r\n\r\n                        editor.css({\r\n                            left: screen.x - offset.left,\r\n                            top: screen.y - offset.top\r\n                        });\r\n                    }\r\n\r\n                    editor.focus(true);\r\n\r\n                    me.cached.left = coords.x;\r\n                    me.cached.top  = coords.y;\r\n                }\r\n            }\r\n\r\n            if ( ! me.editing.commitHandler) {\r\n                me.editing.commitHandler = function() {\r\n                    me.commit();\r\n                };\r\n\r\n                Graph.topic.subscribe('paper:beforezoom', me.editing.commitHandler);\r\n                Graph.topic.subscribe('paper:beforescroll', me.editing.commitHandler);\r\n                Graph.topic.subscribe('vector:pointerdown', me.editing.commitHandler);\r\n            }\r\n        },\r\n\r\n        onDoubleTap: function(e) {\r\n            this.startEdit(e);\r\n            e.preventDefault();\r\n        },\r\n\r\n        destroy: function() {\r\n            if (this.editing.commitHandler) {\r\n                Graph.topic.unsubscribe('paper:beforezoom', this.editing.commitHandler);\r\n                Graph.topic.unsubscribe('paper:beforescroll', this.editing.commitHandler);\r\n                Graph.topic.unsubscribe('vector:pointerdown', this.editing.commitHandler);\r\n\r\n                this.editing.commitHandler = null;\r\n            }\r\n\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Editor';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n    \r\n    \r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Snapper = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            enabled: false,\r\n            suspended: true,\r\n            rendered: false,\r\n            vector: null\r\n        },\r\n\r\n        clients: {\r\n\r\n        },\r\n\r\n        components: {\r\n            block: null,\r\n            stubx: null,\r\n            stuby: null\r\n        },\r\n\r\n        // trans\r\n        snapping: {\r\n            coords: null,\r\n            vector: null,\r\n            offset: null,\r\n            stubx: null,\r\n            stuby: null\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            options = options || {};\r\n\r\n            if ( ! vector.isPaper()) {\r\n                throw Graph.error(\"Snapper plugin only available for paper\");\r\n            }\r\n\r\n            _.assign(this.props, options);\r\n\r\n            this.props.vector  = vector.guid();\r\n\r\n            this.initComponent(vector);\r\n            this.snapping.coords = {};\r\n        },\r\n\r\n        initComponent: function(vector) {\r\n            var block, stubx, stuby;\r\n\r\n            block = (new Graph.svg.Group())\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .addClass('graph-snapper');\r\n\r\n            stubx = (new Graph.svg.Path('M 0 0 L 0 0'))\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(block);\r\n\r\n            stuby = (new Graph.svg.Path('M 0 0 L 0 0'))\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(block);\r\n\r\n            this.components.block = block.guid();\r\n            this.components.stuby = stuby.guid();\r\n            this.components.stubx = stubx.guid();\r\n\r\n        },\r\n\r\n        component: function(name) {\r\n            if (name === undefined) {\r\n                return Graph.registry.vector.get(this.components.block);\r\n            }\r\n            return Graph.registry.vector.get(this.components[name]);\r\n        },\r\n\r\n        render: function() {\r\n            if (this.props.rendered) {\r\n                return;\r\n            }\r\n            this.component().render(this.vector());\r\n            this.props.rendered = true;\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.component().elem.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            if (this.props.suspended) {\r\n                this.props.suspended = false;\r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else {\r\n                    var block = this.component(),\r\n                        viewport = this.vector().viewport();\r\n                    block.elem.appendTo(viewport.elem);\r\n                }\r\n            }\r\n        },\r\n\r\n        setup: function(client, options) {\r\n\r\n            if ( ! this.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            var me = this,\r\n                clientId = client.guid();\r\n\r\n            var key;\r\n\r\n            if (me.clients[clientId]) {\r\n                client.off('beforedrag', me.clients[clientId].beforeDragHandler);\r\n                client.off('afterdrag',  me.clients[clientId].afterDragHandler);\r\n                client.off('afterdestroy',  me.clients[clientId].afterDestroyHandler);\r\n\r\n                if (me.clients[clientId].coords) {\r\n                    delete me.snapping.coords[me.clients[clientId].coords];\r\n                }\r\n\r\n                delete me.clients[clientId];\r\n            }\r\n\r\n            if (options.enabled) {\r\n\r\n                var dragger = client.draggable();\r\n\r\n                me.clients[clientId] = {\r\n                    coords: null,\r\n                    osnaps: dragger.snap(),\r\n                    beforeDragHandler: _.bind(me.onClientBeforeDrag, me, _, client),\r\n                    afterDragHandler: _.bind(me.onClientAfterDrag, me, _, client),\r\n                    afterDestroyHandler: _.bind(me.onClientAfterDestroy, me, _, client)\r\n                };\r\n\r\n                client.on('beforedrag', me.clients[clientId].beforeDragHandler);\r\n                client.on('afterdrag', me.clients[clientId].afterDragHandler);\r\n                client.on('afterdestroy',  me.clients[clientId].afterDestroyHandler);\r\n\r\n                var center = me.getClientCenter(client),\r\n                    coords = this.snapping.coords;\r\n\r\n                // this.vector().circle(center.x, center.y, 5);\r\n\r\n                key = center.x + '_' + center.y;\r\n\r\n                if ( ! coords[key]) {\r\n                    coords[key] = center;\r\n                    me.clients[clientId].coords = key;\r\n                }\r\n\r\n                key = null;\r\n            }\r\n        },\r\n\r\n        repairClient: function(client) {\r\n            console.log(client);\r\n        },\r\n\r\n        getClientCenter: function(client) {\r\n            var bbox = client.bboxView(),\r\n                center = bbox.center(true);\r\n\r\n            return center;\r\n        },\r\n\r\n        showStub: function(axis, value) {\r\n            var snapping = this.snapping;\r\n            var command;\r\n\r\n            if (axis == 'x') {\r\n                command = 'M ' + value + ' -100000 L ' + value + ' 100000';\r\n\r\n                snapping.stubx.attr('d', command);\r\n                snapping.stubx.addClass('visible');\r\n            }\r\n\r\n            if (axis == 'y') {\r\n                command = 'M -100000 ' + value + ' L 100000 ' + value;\r\n\r\n                snapping.stuby.attr('d', command);\r\n                snapping.stuby.addClass('visible');\r\n            }\r\n\r\n            command = null;\r\n        },\r\n\r\n        hideStub: function(axis) {\r\n            var stub = axis == 'x' ? 'stubx' : 'stuby';\r\n            this.snapping[stub].removeClass('visible');\r\n        },\r\n\r\n        onClientBeforeDrag: function(e, client) {\r\n            var me = this,\r\n                paper = me.vector(),\r\n                viewport = paper.viewport(),\r\n                layout = paper.layout(),\r\n                offset = layout.position(),\r\n                center = me.getClientCenter(client);\r\n\r\n            var snapping = this.snapping,\r\n                coords = snapping.coords;\r\n\r\n            snapping.stubx = this.component('stubx');\r\n            snapping.stuby = this.component('stuby');\r\n\r\n            var left = offset.left,\r\n                top = offset.top,\r\n                ma = viewport.matrix(),\r\n                dx = ma.props.e,\r\n                dy = ma.props.f,\r\n                point = layout.pointerLocation({clientX: e.x, clientY: e.y}),\r\n                diffx = center.x - point.x,\r\n                diffy = center.y - point.y,\r\n                snapx = [],\r\n                snapy = [];\r\n\r\n            _.forOwn(coords, function(c){\r\n                var mx, my, vx, vy;\r\n\r\n                mx = ma.x(c.x - diffx, c.y - diffy);\r\n                my = ma.y(c.x - diffx, c.y - diffy);\r\n\r\n                vx = mx + left;\r\n\r\n                if (_.indexOf(snapx, vx) === -1) {\r\n                    snapx.push(vx);\r\n                }\r\n\r\n                vy = my + top;\r\n\r\n                if (_.indexOf(snapy, vy) === -1) {\r\n                    snapy.push(vy);\r\n                }\r\n\r\n            });\r\n\r\n            client.draggable().snap([\r\n                function(x, y) {\r\n                    var rx, ry, x1, y1, pt;\r\n\r\n                    rx = snapValue(x, snapx);\r\n                    ry = snapValue(y, snapy);\r\n\r\n                    x1 = rx.value;\r\n                    y1 = ry.value;\r\n\r\n                    pt = layout.pointerLocation({\r\n                        clientX: x1,\r\n                        clientY: y1\r\n                    });\r\n\r\n                    if (rx.snapped) {\r\n                        me.showStub('x', pt.x + diffx);\r\n                    } else {\r\n                        me.hideStub('x');\r\n                    }\r\n\r\n                    if (ry.snapped) {\r\n                        me.showStub('y', pt.y + diffy);\r\n                    } else {\r\n                        me.hideStub('y');\r\n                    }\r\n\r\n                    return {\r\n                        x: x1,\r\n                        y: y1\r\n                    };\r\n                }\r\n            ]);\r\n\r\n            me.resume();\r\n        },\r\n\r\n        onClientAfterDrag: function(e, client) {\r\n            var snapping = this.snapping,\r\n                options = this.clients[client.guid()];\r\n\r\n            if (options) {\r\n                var dragger = client.draggable();\r\n\r\n                if (options.osnaps) {\r\n                    dragger.snap(options.osnaps);\r\n                }\r\n\r\n                var key, center;\r\n\r\n                if (options.coords) {\r\n                    delete snapping.coords[options.coords];\r\n                }\r\n\r\n                center = this.getClientCenter(client);\r\n                key = center.x + '_' + center.y;\r\n\r\n                if ( ! snapping.coords[key]) {\r\n                    snapping.coords[key] = center;\r\n                    options.coords = key;\r\n                }\r\n\r\n                key = null;\r\n                center = null;\r\n            }\r\n\r\n            this.suspend();\r\n\r\n            _.assign(this.snapping, {\r\n                stubx: null,\r\n                stuby: null\r\n            });\r\n        },\r\n\r\n        onClientAfterDestroy: function(e, client) {\r\n            var guid = client.guid(),\r\n                options = this.clients[guid],\r\n                snapping = this.snapping;\r\n\r\n            if (options) {\r\n                if (options.coords) {\r\n                    if (snapping.coords[options.coords]) {\r\n                        delete snapping.coords[options.coords];\r\n                    }\r\n                }\r\n                delete this.clients[guid];\r\n            }\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Snapper';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// HELPERS /////////\r\n\r\n    function snapValue(value, snaps, range) {\r\n        range = _.defaultTo(range, 10);\r\n\r\n        var i = snaps.length, v;\r\n\r\n        while(i--) {\r\n            v = Math.abs(snaps[i] - value);\r\n            if (v <= range) {\r\n                return {\r\n                    snapped: true,\r\n                    value: snaps[i]\r\n                };\r\n            }\r\n        }\r\n\r\n        return {\r\n            snapped: false,\r\n            value: value\r\n        };\r\n    }\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.plugin.Toolpad = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            vector: null,\r\n            rendered: false,\r\n            suspended: true\r\n        },\r\n        \r\n        components: {\r\n            pad: null\r\n        },  \r\n    \r\n        constructor: function(paper) {\r\n            \r\n            this.props.vector = paper.guid();\r\n            this.initComponent(paper);\r\n\r\n            this.cached.tools = null;\r\n            this.cached.shape = null;\r\n            this.cached.link  = null;\r\n            \r\n            Graph.topic.subscribe('shape:select', _.bind(this.onShapeSelect, this));\r\n            Graph.topic.subscribe('shape:deselect', _.bind(this.onShapeDeselect, this));\r\n            \r\n            Graph.topic.subscribe('link:select', _.bind(this.onLinkSelect, this));\r\n            Graph.topic.subscribe('link:deselect', _.bind(this.onLinkDeselect, this));\r\n        },\r\n        \r\n        initComponent: function(paper) {\r\n            \r\n            var pad = '<div class=\"graph-toolpad\">' + \r\n                            '<div class=\"pad-header\"></div>' + \r\n                            '<div class=\"pad-splitter\"></div>' + \r\n                            '<div class=\"pad-body\">x</div>'+\r\n                      '</div>';\r\n\r\n            pad = Graph.$(pad);\r\n\r\n            pad.on('click', '[data-shape-tool]', _.bind(this.onShapeToolClick, this));\r\n            pad.on('click', '[data-link-tool]', _.bind(this.onLinkToolClick, this));\r\n            \r\n            this.components.pad = pad;\r\n        },\r\n        \r\n        render: function() {\r\n            if (this.props.rendered) {\r\n                return;\r\n            }\r\n            \r\n            this.components.pad.appendTo(this.vector().container());\r\n            this.props.rendered = true;\r\n        },\r\n        \r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.components.pad.detach();\r\n        },\r\n        \r\n        resume: function() {\r\n            if (this.props.suspended) {\r\n                \r\n                this.props.suspended = false;\r\n                \r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else {\r\n                    this.components.pad.appendTo(this.vector().container());\r\n                }\r\n            }\r\n        },\r\n        \r\n        onShapeSelect: function(e) {\r\n            var shape = e.shape,\r\n                meta = shape.metadata,\r\n                pad = this.components.pad;\r\n\r\n            pad.find('.pad-header').html('<a><i class=\"' + meta.icon + '\"></i></a>');\r\n            \r\n            var body = '';\r\n\r\n            _.forEach(meta.tools, function(tool){\r\n                if (tool.enabled) {\r\n                    body += '<div class=\"splitter\"></div>';\r\n                    body += '<a data-shape-tool=\"' + tool.name + '\" href=\"javascript:void(0)\" title=\"' + tool.title + '\"><i class=\"' + tool.icon + '\"></i></a>';\r\n                }\r\n            });\r\n            \r\n            pad.find('.pad-body').html(body);\r\n\r\n            this.cached.tools = meta.tools;\r\n            this.cached.shape = shape;\r\n\r\n            this.resume();\r\n        },\r\n        \r\n        onShapeDeselect: function(e) {\r\n            this.suspend();\r\n        },\r\n        \r\n\r\n        onLinkSelect: function(e) {\r\n            var link = e.link,\r\n                meta = link.metadata,\r\n                pad = this.components.pad;\r\n            \r\n            pad.find('.pad-header').html('<a><i class=\"' + meta.icon + '\"></i></a>');\r\n            \r\n            var body = '';\r\n            \r\n            _.forEach(meta.tools, function(tool){\r\n                if (tool.enabled) {\r\n                    body += '<div class=\"splitter\"></div>';\r\n                    body += '<a data-link-tool=\"' + tool.name + '\" href=\"#\" title=\"' + tool.title + '\"><i class=\"' + tool.icon + '\"></i></a>';\r\n                }\r\n            });\r\n            \r\n            pad.find('.pad-body').html(body);\r\n            \r\n            this.cached.tools = meta.tools;\r\n            this.cached.link = link;\r\n            this.resume();\r\n        },\r\n\r\n        onLinkDeselect: function(e) {\r\n            this.suspend();\r\n        },\r\n        \r\n        onShapeToolClick: function(e) {\r\n            var target = Graph.$(e.currentTarget),\r\n                name = target.data('shapeTool');\r\n            \r\n            var tool = _.find(this.cached.tools, function(t){\r\n                return t.name == name;\r\n            });\r\n\r\n            if (tool) {\r\n                if (tool.name == 'config') {\r\n                    var paper = this.vector();\r\n                    paper.fire('shapetoolclick', {\r\n                        shape: this.cached.shape\r\n                    });\r\n                } else if (tool.handler) {\r\n                    tool.handler(e);\r\n                }\r\n            }\r\n            \r\n            e.preventDefault();\r\n        },\r\n\r\n        onLinkToolClick: function(e) {\r\n            var target = Graph.$(e.currentTarget),\r\n                name = target.data('linkTool');\r\n            \r\n            var tool = _.find(this.cached.tools, function(t){\r\n                return t.name == name;\r\n            });\r\n\r\n            if (tool) {\r\n                if (tool.name == 'config') {\r\n                    var paper = this.vector();\r\n                    paper.fire('linktoolclick', {\r\n                        link: this.cached.link\r\n                    });\r\n                } else if (tool.handler) {\r\n                    tool.handler(e);\r\n                }\r\n            }\r\n            \r\n            e.preventDefault();  \r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Toolpad';\r\n        }\r\n        \r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.ns('Graph.shape.activity');\r\n\r\n    Graph.shape.activity.Start = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'Start',\r\n            width: 60,\r\n            height: 60,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            type: 'activity.start',\r\n            style: 'graph-shape-activity-start'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, label;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            var cx = this.props.width / 2,\r\n                cy = this.props.height / 2;\r\n\r\n            block = (new Graph.svg.Ellipse(cx, cy, cx, cy))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .data('text', this.props.label)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            pmgr.install('dragger', block, {ghost: true, dragClass: Graph.styles.SHAPE_DRAG});\r\n            pmgr.install('network', block, {wiring: 'h:v'});\r\n            pmgr.install('resizer', block);\r\n            pmgr.install('editor',  block);\r\n            pmgr.install('snapper', block);\r\n\r\n            block.on('edit.shape',      _.bind(this.onLabelEdit, this));\r\n            block.on('beforedrag.shape', _.bind(this.onBeforeDrag, this));\r\n            block.on('afterdrag.shape',   _.bind(this.onAfterDrag, this));\r\n            block.on('afterresize.shape',    _.bind(this.onAfterResize, this));\r\n            block.on('beforedestroy.shape',    _.bind(this.onBeforeDestroy, this));\r\n            block.on('afterdestroy.shape',    _.bind(this.onAfterDestroy, this));\r\n            block.on('select.shape',    _.bind(this.onSelect, this));\r\n            block.on('deselect.shape',  _.bind(this.onDeselect, this));\r\n            block.on('connect.shape', _.bind(this.onConnect, this));\r\n\r\n            label = (new Graph.svg.Text(cx, cy, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n\r\n            shape = block = label = null;\r\n        },\r\n\r\n        refresh: function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n            \r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                label = this.component('label');\r\n\r\n            var matrix, bound, cx, cy;\r\n\r\n            bound  = block.bbox().toJson(),\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            cx = bound.width  / 2;\r\n            cy = bound.height / 2;\r\n\r\n            block.attr({\r\n                cx: cx,\r\n                cy: cy\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            label.attr({\r\n                x: cx,\r\n                y: cy\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n            // update props\r\n\r\n            matrix = shape.matrix();\r\n\r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Start';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.shape.activity.Final = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'End',\r\n            width: 60,\r\n            height: 60,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            type: 'activity.final',\r\n            style: 'graph-shape-activity-final'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, inner, label;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            var cx = this.props.width / 2,\r\n                cy = this.props.height / 2;\r\n\r\n            block = (new Graph.svg.Ellipse(cx, cy, cx, cy))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .data('text', this.props.label)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            pmgr.install('dragger', block, {ghost: true, dragClass: Graph.styles.SHAPE_DRAG});\r\n            pmgr.install('network', block, {wiring: 'h:v'});\r\n            pmgr.install('resizer', block);\r\n            pmgr.install('editor',  block);\r\n            pmgr.install('snapper', block);\r\n\r\n            block.on('edit.shape',      _.bind(this.onLabelEdit, this));\r\n            block.on('beforedrag.shape', _.bind(this.onBeforeDrag, this));\r\n            block.on('afterdrag.shape',   _.bind(this.onAfterDrag, this));\r\n            block.on('afterresize.shape',    _.bind(this.onAfterResize, this));\r\n            block.on('beforedestroy.shape',    _.bind(this.onBeforeDestroy, this));\r\n            block.on('afterdestroy.shape',    _.bind(this.onAfterDestroy, this));\r\n            block.on('select.shape',    _.bind(this.onSelect, this));\r\n            block.on('deselect.shape',  _.bind(this.onDeselect, this));\r\n            block.on('connect.shape', _.bind(this.onConnect, this));\r\n\r\n            inner = (new Graph.svg.Ellipse(cx, cy, cx - 6, cy - 6))\r\n                .addClass('comp-inner')\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            label = (new Graph.svg.Text(cx, cy, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .addClass('comp-label')\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n            comp.inner = inner.guid();\r\n\r\n            shape = block = label = inner = null;\r\n        },\r\n\r\n        fill: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.value;\r\n            }\r\n\r\n            this.component('inner').elem.css('fill', value);\r\n            this.props.fill = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        refresh: function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                inner = this.component('inner'),\r\n                label = this.component('label');\r\n\r\n            var matrix, bound, cx, cy;\r\n\r\n            bound  = block.bbox().toJson(),\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            cx = bound.width / 2,\r\n            cy = bound.height / 2;\r\n\r\n            block.attr({\r\n                cx: cx,\r\n                cy: cy\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            label.attr({\r\n                x: cx,\r\n                y: cy\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n            inner.attr({\r\n                cx: cx,\r\n                cy: cy,\r\n                rx: cx - 6,\r\n                ry: cy - 6\r\n            });\r\n\r\n            // update props\r\n            matrix = shape.matrix();\r\n\r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Final';\r\n        },\r\n\r\n        onAfterDestroy: function() {\r\n            // remove label\r\n            this.component('label').remove();\r\n\r\n            // remove inner\r\n            this.component('inner').remove();\r\n\r\n            // remove shape\r\n            this.component('shape').remove();\r\n\r\n            for (var name in this.components) {\r\n                this.components[name] = null;\r\n            }\r\n\r\n            Graph.registry.shape.unregister(this);\r\n            \r\n            this.fire('afterdestroy');\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.shape.activity.Action = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'Action',\r\n            width: 140,\r\n            height: 60,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            type: 'activity.action',\r\n            icon: Graph.icons.SHAPE_ACTION,\r\n            style: 'graph-shape-activity-action'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, label;\r\n\r\n            var cx = this.props.width / 2,\r\n                cy = this.props.height / 2;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Rect(0, 0, this.props.width, this.props.height))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .data('text', this.props.label)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            pmgr.install('dragger', block, {ghost: true, dragClass: Graph.styles.SHAPE_DRAG});\r\n            pmgr.install('resizer', block);\r\n            pmgr.install('editor',  block);\r\n            pmgr.install('network', block, {wiring: 'h:v'});\r\n            pmgr.install('snapper', block);\r\n\r\n            block.on('edit.shape', _.bind(this.onLabelEdit, this));\r\n            block.on('beforedrag.shape', _.bind(this.onBeforeDrag, this));\r\n            block.on('afterdrag.shape', _.bind(this.onAfterDrag, this));\r\n            block.on('afterresize.shape', _.bind(this.onAfterResize, this));\r\n            block.on('beforedestroy.shape', _.bind(this.onBeforeDestroy, this));\r\n            block.on('afterdestroy.shape', _.bind(this.onAfterDestroy, this));\r\n            block.on('select.shape', _.bind(this.onSelect, this));\r\n            block.on('deselect.shape', _.bind(this.onDeselect, this));\r\n            block.on('connect.shape', _.bind(this.onConnect, this));\r\n\r\n            label = (new Graph.svg.Text(cx, cy, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n\r\n            shape = block = label = null;\r\n        },\r\n        \r\n        refresh: function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n            \r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                label = this.component('label');\r\n\r\n            var bound, matrix;\r\n\r\n            bound = block.bbox().toJson();\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            block.attr({\r\n                x: 0,\r\n                y: 0\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            label.attr({\r\n                x: bound.width  / 2,\r\n                y: bound.height / 2\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n            // update props\r\n\r\n\r\n            matrix = shape.matrix();\r\n            \r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        onAfterResize: function() {\r\n            this.refresh();\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Action';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.shape.activity.Fork = Graph.extend(Graph.shape.Shape, {\r\n        props: {\r\n            width: 300,\r\n            height: 15,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            type: 'activity.fork',\r\n            style: 'graph-shape-activity-fork'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, label;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Rect(0, 0, this.props.width, this.props.height, 0))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            pmgr.install('dragger', block, {ghost: true});\r\n            pmgr.install('resizer', block);\r\n            pmgr.install('snapper', block);\r\n            pmgr.install('network', block, {\r\n                wiring: 'v:v', \r\n                tuning: false,\r\n                limitIncoming: 1,\r\n                limitOutgoing: 0\r\n            });\r\n\r\n            block.on('beforedrag.shape', _.bind(this.onBeforeDrag, this));\r\n            block.on('afterdrag.shape',   _.bind(this.onAfterDrag, this));\r\n            block.on('afterresize.shape',    _.bind(this.onAfterResize, this));\r\n            block.on('beforedestroy.shape',    _.bind(this.onBeforeDestroy, this));\r\n            block.on('afterdestroy.shape',    _.bind(this.onAfterDestroy, this));\r\n            block.on('select.shape',    _.bind(this.onSelect, this));\r\n            block.on('deselect.shape',  _.bind(this.onDeselect, this));\r\n            block.on('connect.shape', _.bind(this.onConnect, this));\r\n            \r\n            label = (new Graph.svg.Text(0, 0, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n        },\r\n\r\n        refresh: function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n            \r\n            var block = this.component('block'),\r\n                shape = this.component('shape');\r\n\r\n            var bound, matrix;\r\n\r\n            bound = block.bbox().toJson();\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            block.attr({\r\n                x: 0,\r\n                y: 0\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            matrix = shape.matrix();\r\n\r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Join';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.shape.activity.Join = Graph.extend(Graph.shape.Shape, {\r\n        props: {\r\n            width: 300,\r\n            height: 15,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            type: 'activity.join',\r\n            style: 'graph-shape-activity-join'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, label;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Rect(0, 0, this.props.width, this.props.height, 0))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            pmgr.install('dragger', block, {ghost: true});\r\n            pmgr.install('resizer', block);\r\n            pmgr.install('snapper', block);\r\n            pmgr.install('network', block, {\r\n                wiring: 'v:v', \r\n                tuning: false,\r\n                limitIncoming: 0,\r\n                limitOutgoing: 1\r\n            });\r\n\r\n            block.on('beforedrag.shape', _.bind(this.onBeforeDrag, this));\r\n            block.on('afterdrag.shape',   _.bind(this.onAfterDrag, this));\r\n            block.on('afterresize.shape',    _.bind(this.onAfterResize, this));\r\n            block.on('beforedestroy.shape',    _.bind(this.onBeforeDestroy, this));\r\n            block.on('afterdestroy.shape',    _.bind(this.onAfterDestroy, this));\r\n            block.on('select.shape',    _.bind(this.onSelect, this));\r\n            block.on('deselect.shape',  _.bind(this.onDeselect, this));\r\n            block.on('connect.shape', _.bind(this.onConnect, this));\r\n            \r\n            label = (new Graph.svg.Text(0, 0, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n        },\r\n\r\n        refresh: function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n            \r\n            var block = this.component('block'),\r\n                shape = this.component('shape');\r\n\r\n            var bound, matrix;\r\n\r\n            bound = block.bbox().toJson();\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            block.attr({\r\n                x: 0,\r\n                y: 0\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            matrix = shape.matrix();\r\n\r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Join';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var TRANSFER_RECEIVE = 'receive',\r\n        TRANSFER_DISPOSE = 'dispose';\r\n\r\n    Graph.shape.activity.Lane = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'Participant Role',\r\n            width: 1000,\r\n            height: 200,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        components: {\r\n            header: null\r\n        },\r\n\r\n        tree: {\r\n            pool: null\r\n        },\r\n\r\n        transfer: null,\r\n\r\n        resizing: null,\r\n\r\n        metadata: {\r\n            type: 'activity.lane',\r\n            icon: Graph.icons.SHAPE_LANE,\r\n            style: 'graph-shape-activity-lane'\r\n        },\r\n\r\n        constructor: function(options) {\r\n            this.superclass.prototype.constructor.call(this, options);\r\n            this.initDropzone();\r\n        },\r\n\r\n        initMetadata: function() {\r\n            this.metadata.tools = [\r\n                {\r\n                    name: 'config',\r\n                    icon: Graph.icons.CONFIG,\r\n                    title: Graph._('Click to config shape'),\r\n                    enabled: true\r\n                },\r\n                {\r\n                    name: 'above',\r\n                    icon: Graph.icons.LANE_ABOVE,\r\n                    title: Graph._('Add shape above'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onAboveToolClick, this)\r\n                },\r\n                {\r\n                    name: 'below',\r\n                    icon: Graph.icons.LANE_BELOW,\r\n                    title: Graph._('Add shape below'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBelowToolClick, this)\r\n                },\r\n                {\r\n                    name: 'moveup',\r\n                    icon: Graph.icons.MOVE_UP,\r\n                    title: Graph._('Move up'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onUpToolClick, this)\r\n                },\r\n                {\r\n                    name: 'movedown',\r\n                    icon: Graph.icons.MOVE_DOWN,\r\n                    title: Graph._('Move down'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onDownToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtofront',\r\n                    icon: Graph.icons.SEND_TO_FRONT,\r\n                    title: Graph._('Send to front'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onFrontToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtoback',\r\n                    icon: Graph.icons.SEND_TO_BACK,\r\n                    title: Graph._('Send to back'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBackToolClick, this)\r\n                },\r\n                {\r\n                    name: 'trash',\r\n                    icon: Graph.icons.TRASH,\r\n                    title: Graph._('Click to remove shape'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onTrashToolClick, this)\r\n                }\r\n            ];\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, header, label, child;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Rect(0, 0, this.props.width, this.props.height, 0))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            pmgr.install('resizer', block, {restriction: { width: 200, height: 100 }});\r\n            pmgr.install('dragger', block, {ghost: true, batchSync: false, dragClass: Graph.styles.SHAPE_DRAG});\r\n\r\n            block.on('beforedrag.shape', _.bind(this.onBeforeDrag, this));\r\n            block.on('afterdrag.shape',   _.bind(this.onAfterDrag, this));\r\n            block.on('beforeresize.shape', _.bind(this.onBeforeResize, this));\r\n            block.on('afterresize.shape',    _.bind(this.onAfterResize, this));\r\n            block.on('beforedestroy.shape',    _.bind(this.onBeforeDestroy, this));\r\n            block.on('afterdestroy.shape',    _.bind(this.onAfterDestroy, this));\r\n            block.on('select.shape',    _.bind(this.onSelect, this));\r\n            block.on('deselect.shape',  _.bind(this.onDeselect, this));\r\n\r\n            header = (new Graph.svg.Rect(0, 0, 30, this.props.height, 0))\r\n                .addClass(Graph.styles.SHAPE_HEADER)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            header.data('text', this.props.label);\r\n\r\n            pmgr.install('editor', header, {\r\n                width: 200, \r\n                height: 100,\r\n                offset: 'pointer'\r\n            });\r\n\r\n            header.on('edit.shape', _.bind(this.onLabelEdit, this));\r\n\r\n            var tx = 15,\r\n                ty = this.props.height / 2;\r\n\r\n            label = (new Graph.svg.Text(tx, ty, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(shape);\r\n\r\n            label.rotate(270, tx, ty).commit();\r\n\r\n            child = (new Graph.svg.Group())\r\n                .addClass(Graph.styles.SHAPE_CHILD)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            child.translate(50, 0).commit();\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.header = header.guid();\r\n            comp.label = label.guid();\r\n            comp.child = child.guid();\r\n\r\n            // set virtual pool\r\n            this.tree.pool = new Graph.shape.activity.Pool();\r\n            this.tree.pool.insert(this);\r\n\r\n            shape = block = header = label = null;\r\n        },\r\n\r\n        initDropzone: function() {\r\n            var me = this,\r\n                comp = me.component(),\r\n                block = me.component('block'),\r\n                children = me.children();\r\n\r\n            block.interactable().dropzone({\r\n                accept: '.shape-draggable',\r\n                overlap: .2\r\n            })\r\n            .on('dragenter', function laneDragEnter(e){\r\n                var poolGuid = me.pool().guid,\r\n                    laneGuid = me.guid();\r\n\r\n                var vector, shape, batch;\r\n\r\n                if ( ! me.transfer) {\r\n                    vector = Graph.registry.vector.get(e.relatedTarget);\r\n\r\n                    if (vector) {\r\n\r\n                        shape = Graph.registry.shape.get(vector);\r\n\r\n                        if (shape) {\r\n\r\n                            if (\r\n                                (shape.guid() == laneGuid) || \r\n                                (shape.is('activity.lane') && shape.pool().guid == poolGuid)\r\n                            ) {\r\n                                return;\r\n                            }\r\n\r\n                            me.transfer = {\r\n                                shape: shape,\r\n                                batch: []\r\n                            };\r\n\r\n                            me.transfer.shape.on('afterdrag', onTransferEnd);\r\n                            me.transfer.batch = [shape];\r\n\r\n                            var collector = vector.collector();\r\n\r\n                            if (collector) {\r\n                                batch = collector.collection.toArray().slice();\r\n                                \r\n                                _.forEach(batch, function(v){\r\n                                    var s = Graph.registry.shape.get(v);\r\n                                    if (s && s.guid() != shape.guid()) {\r\n                                        me.transfer.batch.push(s);\r\n                                    }\r\n                                });\r\n\r\n                                batch = null;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (me.transfer) {\r\n                    comp.addClass('receiving');\r\n                }\r\n            })\r\n            .on('dragleave', function laneDragLeave(e){\r\n                comp.removeClass('receiving');\r\n            })\r\n            .on('drop', function laneDrop(e){\r\n                if (me.transfer) {\r\n                    var delay;\r\n\r\n                    delay = _.delay(function(){\r\n                        clearTimeout(delay);\r\n                        delay = null;\r\n\r\n                        // takeout lane from batch\r\n                        var appended = [],\r\n                            lanes = [],\r\n                            poolGuid = me.pool().guid,\r\n                            laneGuid = me.guid();\r\n\r\n                        _.forEach(me.transfer.batch, function(shape){\r\n                            if (shape.is('activity.lane')) {\r\n                                if (shape.guid() != laneGuid && shape.pool().guid != poolGuid) {\r\n                                    lanes.push(shape);\r\n                                }\r\n                            } else {\r\n                                appended.push(shape);\r\n                            }\r\n                        });\r\n\r\n                        if (appended.length) {\r\n                            me.addChild(appended);\r\n                        }\r\n\r\n                        if (lanes.length) {\r\n                            me.addSiblingBellow(lanes);\r\n                        }\r\n\r\n                    }, 0);\r\n\r\n                }\r\n\r\n                comp.removeClass('receiving');\r\n            });\r\n\r\n            block = null;\r\n\r\n            /////////\r\n\r\n            function onTransferEnd() {\r\n                var delay;\r\n\r\n                delay = _.delay(function(){\r\n\r\n                    clearTimeout(delay);\r\n                    delay = null;\r\n\r\n                    me.transfer.shape.off('afterdrag', onTransferEnd);\r\n                    me.transfer = null;\r\n\r\n                }, 0);\r\n            }\r\n        },\r\n\r\n        pool: function() {\r\n            return this.tree.pool;\r\n        },\r\n\r\n        // @Override\r\n        render: function(paper, method, sibling) {\r\n            var component = this.component();\r\n\r\n            method = _.defaultTo(method, 'prepend');\r\n\r\n            component.render(paper, method, sibling);\r\n\r\n            // save\r\n            this.tree.paper = paper.guid();\r\n            Graph.registry.shape.setContext(this.guid(), paper.guid());\r\n        },\r\n\r\n        sendToBack: function() {\r\n            var paper = this.paper();\r\n        },\r\n\r\n        sendToFront: function() {\r\n            this.pool().bringToFront(this);\r\n        },\r\n\r\n        refresh: function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                child = this.component('child'),\r\n                header = this.component('header'),\r\n                label = this.component('label');\r\n\r\n            var matrix, bound;\r\n\r\n            bound  = block.bbox().toJson();\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n            shape.dirty(true);\r\n            child.dirty(true);\r\n\r\n            block.attr({\r\n                x: 0,\r\n                y: 0\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            header.attr({\r\n                x: 0,\r\n                y: 0,\r\n                height: bound.height\r\n            });\r\n\r\n            header.dirty(true);\r\n\r\n            var tx = 15,\r\n                ty = bound.height / 2;\r\n\r\n            label.graph.matrix = Graph.matrix();\r\n            label.attr('transform', '');\r\n\r\n            label.attr({\r\n                x: tx,\r\n                y: ty\r\n            });\r\n\r\n            label.wrap(bound.height - 10);\r\n            label.rotate(270, tx, ty).commit();\r\n\r\n            // update props\r\n\r\n            matrix = shape.matrix();\r\n\r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            var result = this.superclass.prototype.attr.call(this, name, value),\r\n                maps = {\r\n                    width: 'width',\r\n                    height: 'height',\r\n                    left: 'x',\r\n                    top: 'y'\r\n                };\r\n\r\n            var block, key, val;\r\n\r\n            if (_.isPlainObject(name)) {\r\n\r\n                block = this.component('block');\r\n\r\n                for (key in name) {\r\n                    if (maps[key]) {\r\n                        val = name[key];\r\n                        block.attr(maps[key], val);\r\n                    }\r\n                }\r\n\r\n                this.refresh();\r\n\r\n            } else if (value !== undefined) {\r\n                block = this.component('block');\r\n\r\n                if (maps[name]) {\r\n                    block.attr(maps[name], value);\r\n                }\r\n\r\n                this.refresh();\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        height: function(value) {\r\n            if (value !== undefined) {\r\n                var childBox = this.component('child').bbox().toJson();\r\n                value = Math.max(value, (childBox.y + childBox.height + 20));    \r\n            }\r\n\r\n            return this.superclass.prototype.height.call(this, value);\r\n        },\r\n\r\n        width: function(value) {\r\n            if (value !== undefined) {\r\n                var childBox = this.component('child').bbox().toJson();\r\n                value = Math.max(value, (childBox.x + childBox.width + 20));\r\n            }\r\n\r\n            return this.superclass.prototype.width.call(this, value);\r\n        },\r\n\r\n        stroke: function(value) {\r\n            var result = this.superclass.prototype.stroke.call(this, value);\r\n            if (value !== undefined) {\r\n                this.component('header').elem.css('stroke', this.props.stroke);\r\n            }\r\n            return result;\r\n        },\r\n\r\n        addChild: function(child, redraw) {\r\n            this.superclass.prototype.addChild.call(this, child, redraw);\r\n            this.pool().invalidate();\r\n        },\r\n\r\n        removeChild: function(child) {\r\n            this.superclass.prototype.removeChild.call(this, child);\r\n            this.pool().invalidate();\r\n        },\r\n\r\n        addSiblingBellow: function(lanes) {\r\n            if ( ! _.isArray(lanes)) {\r\n                lanes = [lanes];\r\n            }\r\n\r\n            var pool = this.pool(),\r\n                height = _.reduce(\r\n                    _.map(lanes, function(lane){\r\n                        return lane.height();\r\n                    }),\r\n                    function(result, curr) {\r\n                        return result + curr;\r\n                    },\r\n                    0\r\n                ),\r\n                offsetWidth = this.width(),\r\n                offsetLeft = this.left(),\r\n                offsetTop = (this.top() + this.height());\r\n\r\n            pool.createSpaceBellow(this, height);\r\n\r\n            _.forEach(lanes, function(lane){\r\n\r\n                var boxBefore = lane.component().bboxView().clone().toJson();\r\n                var boxAfter, dx, dy;\r\n\r\n                lane.component().reset();\r\n\r\n                lane.attr({\r\n                    width: offsetWidth,\r\n                    left: offsetLeft,\r\n                    top: offsetTop\r\n                });\r\n\r\n                height = lane.height();\r\n                offsetTop += height;\r\n                \r\n                lane.tree.pool = pool;\r\n                pool.insert(lane);\r\n\r\n                lane.children().each(function(c){\r\n                    var netcom = c.connectable().component();\r\n                    netcom && (netcom.dirty(true));\r\n                });\r\n\r\n                boxAfter = lane.component().bboxView().toJson();\r\n\r\n                dx = boxAfter.x - boxBefore.x;\r\n                dy = boxAfter.y - boxBefore.y;\r\n\r\n                pool.relocateLinks(dx, dy, lane);\r\n                \r\n            });\r\n\r\n            pool.invalidate();\r\n            \r\n        },\r\n\r\n        createSiblingAbove: function(options) {\r\n            var sibling = new Graph.shape.activity.Lane(options),\r\n                paper = this.paper(),\r\n                pool = this.pool();\r\n\r\n            // create space above\r\n            pool.createSpaceAbove(this, sibling.height());\r\n\r\n            // sync position 'above'\r\n            var top = (this.top() - sibling.height());\r\n\r\n            sibling.attr({\r\n                width: this.props.width,\r\n                left: this.props.left,\r\n                top: top\r\n            });\r\n\r\n            // sync pool\r\n            sibling.tree.pool = pool;\r\n\r\n            var result = pool.insert(sibling);\r\n\r\n            if (result !== undefined) {\r\n                sibling.render(paper, 'before', this.component());\r\n                pool.invalidate();\r\n            }\r\n\r\n            return sibling;\r\n        },\r\n\r\n        createSiblingBellow: function(options) {\r\n            var sibling = new Graph.shape.activity.Lane(options),\r\n                paper = this.paper(),\r\n                pool = this.pool();\r\n\r\n            // create space\r\n            pool.createSpaceBellow(this, sibling.height());\r\n\r\n            // sync position 'bellow'\r\n            var bottom = (this.top() + this.height());\r\n\r\n            sibling.attr({\r\n                width: this.props.width,\r\n                left: this.props.left,\r\n                top: bottom\r\n            });\r\n\r\n            // sync pool\r\n            sibling.tree.pool = pool;\r\n\r\n            var result = pool.insert(sibling);\r\n\r\n            if (result !== undefined) {\r\n                sibling.render(paper, 'after', this.component());\r\n                pool.invalidate();\r\n            }\r\n\r\n            return sibling;\r\n        },\r\n\r\n        autoResize: function() {\r\n\r\n            var shapeComponent = this.component(),\r\n                blockComponent = this.component('block');\r\n\r\n            if (blockComponent.isSelected()) {\r\n                blockComponent.deselect();\r\n            }\r\n\r\n            var bbox = this.bbox().toJson(),\r\n                actualBBox = shapeComponent.bbox().toJson(),\r\n                blockComponent = this.component('block'),\r\n                padding = {\r\n                    top: 20,\r\n                    bottom: 20,\r\n                    left: 40,\r\n                    right: 20\r\n                };\r\n\r\n            var bounds = _.extend({}, bbox);\r\n\r\n            if (actualBBox.y + padding.top - bbox.y < padding.top) {\r\n                bounds.y = actualBBox.y - padding.top;\r\n            }\r\n\r\n            if (actualBBox.x + padding.left - bbox.x < padding.left) {\r\n                bounds.x = actualBBox.x - padding.left;\r\n            }\r\n\r\n            if (bbox.x2 - actualBBox.x2 + padding.right < padding.right) {\r\n                bounds.x2 = actualBBox.x2 + padding.right;\r\n            }\r\n\r\n            if (bbox.y2 - actualBBox.y2 + padding.bottom < padding.bottom) {\r\n                bounds.y2 = actualBBox.y2 + padding.bottom;\r\n            }\r\n\r\n            var dx = bounds.x - bbox.x,\r\n                dy = bounds.y - bbox.y;\r\n\r\n            var width = bounds.x2 - bounds.x,\r\n                height = bounds.y2 - bounds.y;\r\n\r\n            var pool = this.pool(),\r\n                curr = this.guid(),\r\n                lanes = pool.populateChildren(),\r\n                childOffsets = {};\r\n\r\n            lanes.each(function(lane){\r\n                var childBox = lane.component('child').bboxView().toJson();\r\n                childOffsets[lane.guid()] = {\r\n                    x: childBox.x,\r\n                    y: childBox.y\r\n                };\r\n            });\r\n\r\n            this.translate(dx, dy);\r\n\r\n            this.attr({\r\n                width: width,\r\n                height: height\r\n            });\r\n\r\n            pool.resizeBy(this);\r\n\r\n            lanes.each(function(lane){\r\n                var child = lane.component('child'),\r\n                    childBox = child.bboxView().toJson(),\r\n                    offset = childOffsets[lane.guid()]\r\n\r\n                if (offset) {\r\n                    var dx = offset.x - childBox.x,\r\n                        dy = offset.y - childBox.y;\r\n\r\n                    child.translate(dx, dy).commit();\r\n                }\r\n\r\n            });\r\n\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Lane';\r\n        },\r\n\r\n        onAfterDestroy: function() {\r\n            var me = this, guid = this.guid();\r\n\r\n            me.cascade(function(shape){\r\n                if (shape.guid() != guid) {\r\n                    shape.remove();\r\n                }\r\n            });\r\n\r\n            this.pool().remove(this);\r\n\r\n            // remove child\r\n            this.component('child').remove();\r\n\r\n            // remove label\r\n            this.component('label').remove();\r\n\r\n            // remove header\r\n            this.component('header').remove();\r\n\r\n            // remove shape\r\n            this.component('shape').remove();\r\n\r\n            for (var name in this.components) {\r\n                this.components[name] = null;\r\n            }\r\n\r\n            Graph.registry.shape.unregister(this);\r\n            this.fire('afterdestroy');\r\n        },\r\n\r\n        onChildConnect: function(e) {\r\n            var sourceParent = e.source.parent(),\r\n                targetParent = e.target.parent();\r\n\r\n            if (sourceParent && targetParent) {\r\n                var sourcePool = sourceParent.pool(),\r\n                    targetPool = targetParent.pool();\r\n\r\n                if (sourcePool.guid != targetPool.guid) {\r\n                    e.link.type('message');\r\n                }\r\n            }\r\n        },\r\n\r\n        onChildBeforeDestroy: function(e) {\r\n            this.superclass.prototype.onChildBeforeDestroy.call(this, e);\r\n            this.pool().invalidate();\r\n        },\r\n\r\n        onSelect: function(e) {\r\n            var me = this, guid = me.guid();\r\n\r\n            var delay = _.delay(function(){\r\n\r\n                clearTimeout(delay);\r\n                delay = null;\r\n\r\n                me.cascade(function(curr){\r\n                    if (curr.guid() != guid) {\r\n                        var vector, network;\r\n\r\n                        // deselect shape\r\n                        vector = curr.draggable().component();\r\n\r\n                        if (vector) {\r\n                            vector.deselect();\r\n                        }\r\n\r\n                        // deselect links\r\n                        network = curr.connectable().plugin();\r\n\r\n                        if (network) {\r\n                            var connections = network.connections();\r\n                            _.forEach(connections, function(conn){\r\n                                conn.link.deselect();\r\n                            });\r\n                        }\r\n                        \r\n                    }\r\n                });\r\n\r\n                me.component('shape').addClass('shape-selected');\r\n                Graph.topic.publish('shape:select', {shape: me});\r\n\r\n            }, 0);\r\n        },\r\n\r\n        onBeforeDrag: function(e) {\r\n            this.component().addClass('shape-dragging');\r\n\r\n            if (e.master) {\r\n\r\n                this.paper().diagram().capture();\r\n\r\n                var links = this.pool().populateLinks();\r\n                var link, key;\r\n\r\n                for (key in links.isolated) {\r\n                    link = links.isolated[key].link;\r\n                    link.deselect();\r\n                }\r\n\r\n                for (key in links.separated) {\r\n                    link = links.separated[key].link;\r\n                    link.deselect();\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        onAfterDrag: function(e) {\r\n            if (e.master) {\r\n                var blockComponent = this.component('block'),\r\n                    shapeComponent = this.component('shape'),\r\n                    childComponent = this.component('child'),\r\n                    blockMatrix = blockComponent.matrix(),\r\n                    pool = this.pool();\r\n\r\n                var shapeMatrix;\r\n\r\n                blockComponent.reset();\r\n\r\n                shapeComponent.matrix().multiply(blockMatrix);\r\n                shapeComponent.attr('transform', shapeComponent.matrix().toValue());\r\n                shapeComponent.dirty(true);\r\n                childComponent.dirty(true);\r\n\r\n                // update props\r\n                shapeMatrix = shapeComponent.matrix();\r\n\r\n                this.data({\r\n                    left: shapeMatrix.props.e,\r\n                    top: shapeMatrix.props.f\r\n                });\r\n\r\n                // forward\r\n                this.fire(e);\r\n                shapeComponent.removeClass('shape-dragging');\r\n\r\n                // sync other\r\n                pool.relocateSiblings(this, e.dx, e.dy);\r\n                pool.refreshContents();\r\n\r\n                // sync links\r\n                pool.relocateLinks(e.dx, e.dy);\r\n                pool.refreshChildren();\r\n            }\r\n\r\n        },\r\n\r\n        onBeforeResize: function(e){\r\n            this.resizing = {\r\n                childOffsets: {}\r\n            };\r\n\r\n            // set resize restriction\r\n            // calculate max children bound for all lanes\r\n            var bounds = this.component('child').bboxView().toJson(),\r\n                lanes = this.pool().populateChildren(),\r\n                resizing = this.resizing;\r\n\r\n            lanes.each(function(lane){\r\n                var laneChildComponent = lane.component('child'),\r\n                    laneChildBox = laneChildComponent.bboxView().toJson();\r\n\r\n                resizing.childOffsets[lane.guid()] = {\r\n                    x: laneChildBox.x,\r\n                    y: laneChildBox.y\r\n                };\r\n\r\n                if (laneChildBox.x < bounds.x) {\r\n                    bounds.x = laneChildBox.x;\r\n                }\r\n\r\n                if (bounds.x2 < laneChildBox.x2) {\r\n                    bounds.x2 = laneChildBox.x2;\r\n                }\r\n\r\n            });\r\n\r\n            var resizer = e.resizer,\r\n                direction = e.direction,\r\n                origin = {\r\n                    x: bounds.x, \r\n                    y: bounds.y\r\n                },\r\n                padding = {\r\n                    top: 10,\r\n                    left: 40,\r\n                    right: 10,\r\n                    bottom: 10\r\n                };\r\n\r\n            switch(direction) {\r\n                case 'n':\r\n                    origin.x = (bounds.x + bounds.x2) / 2;\r\n                    origin.y = bounds.y2 - padding.bottom;\r\n                    break;\r\n                case 'e':\r\n                    origin.x = bounds.x + padding.right;\r\n                    origin.y = (bounds.y + bounds.y2) / 2;\r\n                    break;\r\n                case 's':\r\n                    origin.x = (bounds.x + bounds.x2) / 2;\r\n                    origin.y = bounds.y + padding.top;\r\n                    break;\r\n                case 'w':\r\n                    origin.x = bounds.x2 - padding.left;\r\n                    origin.y = (bounds.y + bounds.y2) / 2;\r\n                    break;\r\n                case 'ne':\r\n                    origin.x = bounds.x + padding.right;\r\n                    origin.y = bounds.y2 - padding.bottom;\r\n                    break;\r\n                case 'se':\r\n                    origin.x = bounds.x + padding.right;\r\n                    origin.y = bounds.y + padding.top;\r\n                    break;\r\n                case 'sw':\r\n                    origin.x = bounds.x2 - padding.left;\r\n                    origin.y = bounds.y + padding.top;\r\n                    break;\r\n                case 'nw':\r\n                    origin.x = bounds.x2 - padding.left;\r\n                    origin.y = bounds.y2 - padding.bottom;\r\n                    break;\r\n            }\r\n\r\n            var width = bounds.x2 - bounds.x,\r\n                height = bounds.y2 - bounds.y;\r\n\r\n            if (width <= 0) {\r\n                width = 200;\r\n            }\r\n\r\n            if (height <= 0) {\r\n                height = 100;\r\n            }\r\n\r\n            resizer.restrict({\r\n                width: width,\r\n                height: height,\r\n                origin: origin\r\n            });\r\n\r\n        },\r\n\r\n        onAfterResize: function(e) {\r\n            this.superclass.prototype.onAfterResize.call(this, e);\r\n\r\n            var pool = this.pool();\r\n            pool.resizeBy(this);\r\n\r\n            if (this.resizing) {\r\n                var lanes = pool.populateChildren(),\r\n                    resizing = this.resizing;\r\n\r\n                lanes.each(function(lane){\r\n                    var child = lane.component('child'),\r\n                        childBox = child.bboxView().toJson(),\r\n                        offset = resizing.childOffsets[lane.guid()];\r\n\r\n                    if (offset) {\r\n                        var dx = offset.x - childBox.x,\r\n                            dy = offset.y - childBox.y;\r\n\r\n                        child.translate(dx, dy).commit();\r\n                    }\r\n\r\n                });\r\n\r\n                this.resizing = resizing = null;\r\n            }\r\n\r\n        },\r\n\r\n        onAboveToolClick: function(e) {\r\n            this.createSiblingAbove();\r\n        },\r\n\r\n        onBelowToolClick: function(e) {\r\n            this.createSiblingBellow();\r\n        },\r\n\r\n        onUpToolClick: function(e) {\r\n            this.pool().moveUp(this);\r\n        },\r\n\r\n        onDownToolClick: function(e) {\r\n            this.pool().moveDown(this);\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    /**\r\n     * Virtual pool for lanes\r\n     */\r\n\r\n    var Pool = Graph.shape.activity.Pool = function() {\r\n        this.guid = 'pool-' + (++Pool.guid);\r\n\r\n        // tree nodes\r\n        this.lanes = (new Graph.collection.Tree([]))\r\n            .keygen(function(lane){\r\n                return lane.bbox.y;\r\n                // return (lane.bbox.y + (1e-9 * lane.bbox.x));\r\n            });\r\n\r\n        this.cached = {\r\n            nodes: {},\r\n            contents: null\r\n        };\r\n    };\r\n\r\n    Pool.prototype.invalidate = function() {\r\n        this.cached.contents = null;\r\n    };\r\n\r\n    Pool.prototype.populateChildren = function() {\r\n        var children = [];\r\n\r\n        _.forEach(this.lanes.toArray(), function(node){\r\n            var lane = Graph.registry.shape.get(node.lane);\r\n            children.push(lane);\r\n        });\r\n\r\n        return new Graph.collection.Shape(children);\r\n    };\r\n\r\n    Pool.prototype.bbox = function() {\r\n        var nodes = this.lanes.toArray(),\r\n             x = [],\r\n             y = [],\r\n            x2 = [],\r\n            y2 = [];\r\n\r\n        var bbox;\r\n\r\n        for (var i = nodes.length - 1; i >= 0; i--) {\r\n            bbox = nodes[i].bbox;\r\n\r\n            x.push(bbox.x);\r\n            y.push(bbox.y);\r\n\r\n            x2.push(bbox.x + bbox.width);\r\n            y2.push(bbox.y + bbox.height);\r\n        }\r\n\r\n         x = _.min(x);\r\n         y = _.min(y);\r\n        x2 = _.max(x2);\r\n        y2 = _.max(y2);\r\n\r\n        nodes = null;\r\n\r\n        return Graph.bbox({\r\n            x: x,\r\n            y: y,\r\n            x2: x2,\r\n            y2: y2,\r\n            width: x2 - x,\r\n            height: y2 - y\r\n        });\r\n    };\r\n\r\n    Pool.prototype.get = function(index) {\r\n        var data = this.lanes.get(index);\r\n        if (data) {\r\n            return Graph.registry.shape.get(data.lane);\r\n        }\r\n        return null;\r\n    };\r\n\r\n    Pool.prototype.prev = function(lane) {\r\n        var index = this.index(lane),\r\n            prev = this.lanes.get(index - 1);\r\n\r\n        if (prev) {\r\n            return Graph.registry.shape.get(prev.lane);\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    Pool.prototype.last = function() {\r\n        var index = this.size() - 1,\r\n            last = this.lanes.get(index);\r\n\r\n        if (last) {\r\n            return Graph.registry.shape.get(last.lane);\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Create new space\r\n     */\r\n    Pool.prototype.createSpaceAbove = function(lane, height) {\r\n        var laneIndex = this.index(lane),\r\n            prev = this.lanes.get(laneIndex - 1),\r\n            me = this;\r\n\r\n        if (prev) {\r\n            this.lanes.bubble(prev, function(curr){\r\n                var shape = Graph.registry.shape.get(curr.lane);\r\n                if (shape) {\r\n                    shape.translate(0, -height);\r\n                    curr.bbox = shape.bbox().toJson();\r\n\r\n                    shape.children().each(function(c){\r\n                        var comnet = c.connectable().component();\r\n                        comnet && (comnet.dirty(true));\r\n                    });\r\n\r\n                    me.relocateLinks(0, -height, shape);\r\n                }\r\n            });\r\n            this.lanes.order();\r\n        }\r\n    };\r\n\r\n    Pool.prototype.createSpaceBellow = function(lane, height) {\r\n        var laneIndex = this.index(lane),\r\n            next = this.lanes.get(laneIndex + 1),\r\n            me = this;\r\n\r\n        if (next) {\r\n            this.lanes.cascade(next, function(curr){\r\n                var shape = Graph.registry.shape.get(curr.lane);\r\n                if (shape) {\r\n                    shape.translate(0, height);\r\n                    curr.bbox = shape.bbox().toJson();\r\n\r\n                    shape.children().each(function(c){\r\n                        var comnet = c.connectable().component();\r\n                        comnet && (comnet.dirty(true));\r\n                    });\r\n\r\n                    me.relocateLinks(0, height, shape);\r\n                }\r\n            });\r\n            this.lanes.order();\r\n        }\r\n    };\r\n\r\n    Pool.prototype.relocateSiblings = function(lane, dx, dy) {\r\n        var root = this.lanes.root(),\r\n            guid = lane.guid();\r\n\r\n        if (root) {\r\n            this.lanes.cascade(root, function(curr){\r\n                if (curr.lane == guid) {\r\n                    curr.bbox = lane.bbox().toJson();\r\n                } else {\r\n                    var shape = Graph.registry.shape.get(curr.lane);\r\n                    if (shape) {\r\n                        shape.translate(dx, dy);\r\n                        curr.bbox = shape.bbox().toJson();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    Pool.prototype.resizeBy = function(lane) {\r\n        var guid = lane.guid(),\r\n            bbox = lane.bbox().toJson(),\r\n            root = this.lanes.root(),\r\n            index = this.index(lane);\r\n\r\n        if (root) {\r\n\r\n            // sample\r\n            var prev, next, dx1, dx2, dy1, dy2;\r\n\r\n            prev = this.lanes.get(index - 1);\r\n            next = this.lanes.get(index + 1);\r\n\r\n            dx1 = 0;\r\n            dy1 = 0;\r\n\r\n            dx2 = 0\r\n            dy2 = 0;\r\n\r\n            if (prev) {\r\n                dx1 = bbox.x - prev.bbox.x;\r\n                dy1 = bbox.y - (prev.bbox.y + prev.bbox.height);\r\n            }\r\n\r\n            if (next) {\r\n                dx2 = bbox.x - next.bbox.x;\r\n                dy2 = (bbox.y + bbox.height) - next.bbox.y;\r\n            }\r\n\r\n            this.lanes.cascade(root, function(curr, i){\r\n                if (curr.lane == guid) {\r\n                    curr.bbox = bbox;\r\n                } else {\r\n                    var shape = Graph.registry.shape.get(curr.lane);\r\n                    if (shape) {\r\n\r\n                        var group = shape.component(),\r\n                            block = shape.component('block');\r\n\r\n                        // up\r\n                        if (index > i) {\r\n                            shape.translate(dx1, dy1);\r\n                        }\r\n                        // down\r\n                        else if (index < i) {\r\n                            shape.translate(dx2, dy2);\r\n                        }\r\n\r\n                        block.attr({\r\n                            width: bbox.width\r\n                        });\r\n\r\n                        block.dirty(true);\r\n                        shape.refresh();\r\n\r\n                        curr.bbox = shape.bbox().toJson();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        bbox = null;\r\n    };\r\n\r\n    Pool.prototype.bringToFront = function(lane) {\r\n        var sets = Graph.$('[data-pool=\"' + this.guid + '\"]'),\r\n            last = sets.last();\r\n\r\n        if (last.length()) {\r\n            if (last.node() != lane.component().node()) {\r\n                last.after(lane.component().elem);\r\n            }\r\n        }\r\n    };\r\n\r\n    Pool.prototype.moveUp = function(lane) {\r\n        var index = this.index(lane),\r\n            prev  = this.get(index - 1),\r\n            laneNode = this.lanes.get(index),\r\n            prevNode = this.lanes.get(index - 1);\r\n\r\n        if (prev) {\r\n            var laneBox = lane.bbox().toJson(),\r\n                prevBox = prev.bbox().toJson();\r\n\r\n            var dx1 = 0,\r\n                dy1 = prevBox.y - laneBox.y,\r\n                dx2 = 0,\r\n                dy2 = laneBox.height;\r\n\r\n            laneNode.bbox.y  += dy1;\r\n            laneNode.bbox.y2 += dy1;\r\n\r\n            prevNode.bbox.y  += dy2;\r\n            prevNode.bbox.y2 += dy2;\r\n\r\n            lane.translate(dx1, dy1);\r\n            prev.translate(dx2, dy2);\r\n\r\n            this.lanes.order();\r\n\r\n            lane.children().each(function(c){\r\n                var comnet = c.connectable().component();\r\n                comnet && (comnet.dirty(true));\r\n            });\r\n\r\n            prev.children().each(function(c){\r\n                var comnet = c.connectable().component();\r\n                comnet && (comnet.dirty(true));\r\n            });\r\n\r\n            this.relocateLinks(dx1, dy1, lane);\r\n            this.relocateLinks(dx2, dy2, prev);\r\n        }\r\n    };\r\n\r\n    Pool.prototype.moveDown = function(lane) {\r\n        var index = this.index(lane),\r\n            next  = this.get(index + 1),\r\n            laneNode = this.lanes.get(index),\r\n            nextNode = this.lanes.get(index + 1);\r\n\r\n        if (next) {\r\n            var laneBox = lane.bbox().toJson(),\r\n                nextBox = next.bbox().toJson();\r\n\r\n            var dx1 = 0,\r\n                dy1 = nextBox.height,\r\n                dx2 = 0,\r\n                dy2 = laneBox.y - nextBox.y;\r\n\r\n            laneNode.bbox.y  += dy1;\r\n            laneNode.bbox.y2 += dy1;\r\n\r\n            nextNode.bbox.y  += dy2;\r\n            nextNode.bbox.y2 += dy2;\r\n\r\n            lane.translate(dx1, dy1);\r\n            next.translate(dx2, dy2);\r\n\r\n            this.lanes.order();\r\n\r\n            lane.children().each(function(c){\r\n                var comnet = c.connectable().component();\r\n                comnet && (comnet.dirty(true));\r\n            });\r\n\r\n            next.children().each(function(c){\r\n                var comnet = c.connectable().component();\r\n                comnet && (comnet.dirty(true));\r\n            });\r\n\r\n            this.relocateLinks(dx1, dy1, lane);\r\n            this.relocateLinks(dx2, dy2, next);\r\n        }\r\n    };\r\n\r\n    Pool.prototype.refreshChildren = function() {\r\n        var children = this.populateChildren();\r\n\r\n        children.each(function(lane){\r\n            lane.component('child').dirty(true);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Populate lanes children\r\n     */\r\n    Pool.prototype.populateContents = function(lane) {\r\n        var contents;\r\n        if (lane !== undefined) {\r\n            contents = new Graph.collection.Shape(lane.children().toArray());\r\n        } else {\r\n            contents = this.cached.contents;\r\n            if ( ! contents) {\r\n                contents = [];\r\n                _.forEach(this.lanes.toArray(), function(node){\r\n                    var lane = Graph.registry.shape.get(node.lane);\r\n                    if (lane) {\r\n                        contents = _.concat(contents, lane.children().toArray());\r\n                    }\r\n                });\r\n\r\n                contents = new Graph.collection.Shape(contents);\r\n                this.cached.contents = contents;\r\n            }    \r\n        }\r\n\r\n        return contents;\r\n    };\r\n\r\n    Pool.prototype.refreshContents = function() {\r\n        var contents = this.populateContents();\r\n\r\n        contents.each(function(shape){\r\n            var connectableBlock = shape.connectable().component();\r\n            if (connectableBlock) {\r\n                connectableBlock.dirty(true);\r\n            }\r\n        });\r\n    };\r\n\r\n    Pool.prototype.populateLinks = function(lane) {\r\n        var me = this, \r\n            contents = me.populateContents(lane),\r\n            contentKeys = contents.keys(),\r\n            result = {\r\n                isolated: {},\r\n                separated: {}\r\n            };\r\n\r\n        contents.each(function(shape){\r\n            var network = shape.connectable().plugin(),\r\n                connections = (network && network.connections()) || [];\r\n\r\n            var pairVector, pairShape;\r\n\r\n            _.forEach(connections, function(conn){\r\n                pairVector = Graph.registry.vector.get((conn.type == 'incoming' ? conn.source : conn.target));\r\n                if (pairVector) {\r\n                    pairShape = Graph.registry.shape.get(pairVector);\r\n                    if (pairShape) {\r\n                        if (_.indexOf(contentKeys, pairShape.guid()) > -1) {\r\n                            if ( ! result.isolated[conn.guid]) {\r\n                                result.isolated[conn.guid] = conn;\r\n                            }\r\n                        } else {\r\n                            if ( ! result.separated[conn.guid]) {\r\n                                result.separated[conn.guid] = conn;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n    Pool.prototype.relocateLinks = function(dx, dy, lane) {\r\n        var links = this.populateLinks(lane);\r\n        var key, conn, router;\r\n        \r\n        for (key in links.isolated) {\r\n            conn = links.isolated[key];\r\n            conn.link.invalidate('convex');\r\n            conn.link.relocate(dx, dy);\r\n        }\r\n        \r\n        for (key in links.separated) {\r\n            conn = links.separated[key];\r\n            conn.link.invalidate('convex');\r\n            \r\n            if (conn.type == 'incoming') {\r\n                conn.link.relocateHead(dx, dy);\r\n            } else {\r\n                conn.link.invalidate('convex');\r\n                conn.link.relocateTail(dx, dy);\r\n            }\r\n        }\r\n        \r\n        links = null;\r\n    };\r\n\r\n\r\n    Pool.prototype.size = function() {\r\n        return this.lanes.size();\r\n    };\r\n\r\n    Pool.prototype.insert = function(lane) {\r\n        var guid = lane.guid();\r\n        var node, index;\r\n\r\n        node = {\r\n            lane: guid,\r\n            bbox: lane.bbox().toJson()\r\n        };\r\n\r\n        index = this.lanes.insert(node);\r\n\r\n        if (index !== undefined) {\r\n            this.cached.nodes[guid] = node;\r\n            lane.component().elem.attr('data-pool', this.guid);\r\n        }\r\n\r\n        node = null;\r\n        return index;\r\n    };\r\n\r\n    Pool.prototype.remove = function(lane) {\r\n        var guid = lane.guid(),\r\n            node = this.cached.nodes[guid];\r\n\r\n        var index = this.lanes.remove(node);\r\n        \r\n        if (index !== undefined) {\r\n            // shrink pool (direction: up)\r\n            var prev = this.lanes.get(index - 1),\r\n                next = this.lanes.get(index),\r\n                me = this;\r\n            \r\n            if (next) {\r\n                var dx = 0,\r\n                    dy = -node.bbox.height;\r\n\r\n                this.lanes.cascade(next, function(node){\r\n                    var lane = Graph.registry.shape.get(node.lane);\r\n                    if (lane) {\r\n                        lane.translate(dx, dy);\r\n                        node.bbox = lane.bbox().toJson();\r\n\r\n                        lane.children().each(function(c){\r\n                            var comnet = c.connectable().component();\r\n                            comnet && (comnet.dirty(true));\r\n                        });\r\n\r\n                        me.relocateLinks(dx, dy, lane);\r\n                    }\r\n                });\r\n\r\n                this.lanes.order();\r\n            }\r\n\r\n            delete this.cached.nodes[guid];\r\n        }\r\n\r\n        node = null;\r\n\r\n        return index;\r\n    };\r\n\r\n    Pool.prototype.index = function(lane) {\r\n        var guid = lane.guid(),\r\n            node = this.cached.nodes[guid];\r\n\r\n        var index = this.lanes.index(node);\r\n\r\n        node = null;\r\n\r\n        return index;\r\n    };\r\n\r\n    ///////// STATIC /////////\r\n\r\n    Pool.guid = 0;\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.shape.common.Label = Graph.extend(Graph.shape.Shape, {\r\n        props: {\r\n            label: 'untitled',\r\n            align: 'left',\r\n            fontSize: 16,\r\n            lineHeight: 1.1\r\n        },\r\n        metadata: {\r\n            name: 'common.label',\r\n            icon: 'ion-android-create'\r\n        },\r\n        initComponent: function() {\r\n            var pmgr = this.plugins.manager;\r\n            var shape, block, label;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Rect(0, 0, 0, 0, 0))\r\n                .data('text', this.props.label)\r\n                .render(shape);\r\n\r\n            block.style({\r\n                fill: 'rgba(255,255,255,0)',\r\n                'stroke-width': 0\r\n            });\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            pmgr.install('dragger', block, {dragClass: Graph.styles.SHAPE_DRAG});\r\n            pmgr.install('editor', block, {width: 300, height: 75, align: 'left', offset: 'pointer'});\r\n\r\n            block.on('edit.shape', _.bind(this.onLabelEdit, this));\r\n            block.on('afterdrag.shape', _.bind(this.onAfterDrag, this));\r\n            block.on('select.shape', _.bind(this.onSelect, this));\r\n            block.on('deselect.shape', _.bind(this.onDeselect, this));\r\n            block.on('beforedestroy.shape',    _.bind(this.onBeforeDestroy, this));\r\n            block.on('afterdestroy.shape',    _.bind(this.onAfterDestroy, this));\r\n\r\n            label = (new Graph.svg.Text(0, (this.props.lineHeight * this.props.fontSize) , this.props.label))\r\n                .attr('font-size', this.props.fontSize)\r\n                .attr('text-anchor', this.props.align)\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            label.on('render.shape', _.bind(this.onLabelRender, this));\r\n\r\n            _.assign(this.components, {\r\n                shape: shape.guid(),\r\n                block: block.guid(),\r\n                label: label.guid()\r\n            });\r\n        },\r\n\r\n        initMetadata: function() {\r\n            this.metadata.tools = [\r\n                {\r\n                    name: 'sendtofront',\r\n                    icon: Graph.icons.SEND_TO_FRONT,\r\n                    title: Graph._('Send to front'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onFrontToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtoback',\r\n                    icon: Graph.icons.SEND_TO_BACK,\r\n                    title: Graph._('Send to back'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBackToolClick, this)\r\n                },\r\n                {\r\n                    name: 'trash',\r\n                    icon: Graph.icons.TRASH,\r\n                    title: Graph._('Click to remove shape'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onTrashToolClick, this)\r\n                }\r\n            ];\r\n        },\r\n\r\n        refresh: _.debounce(function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n\r\n            var label = this.component('label'),\r\n                block = this.component('block');\r\n\r\n            label.write(this.props.label);\r\n            label.dirty(true);\r\n            \r\n            var labelBox = label.bbox().toJson();\r\n\r\n            block.attr({\r\n                width: labelBox.width\r\n            });\r\n\r\n            block.dirty(true);\r\n            \r\n        }, 1),\r\n\r\n        onLabelRender: function() {\r\n            var label = this.component('label'),\r\n                block = this.component('block'),\r\n                labelBox = label.bbox().toJson();\r\n\r\n            block.attr({\r\n                width: labelBox.width,\r\n                height: labelBox.height\r\n            });\r\n        },\r\n\r\n        onLabelEdit: function(e) {\r\n            var text = e.text;\r\n\r\n            if (text) {\r\n                this.component('label').props.text = text;\r\n                this.props.label = text;\r\n                this.refresh();    \r\n            } else {\r\n                this.remove();\r\n            }\r\n        },\r\n\r\n        onAfterDrag: function(e) {\r\n            var blockComponent = this.component('block'),\r\n                shapeComponent = this.component('shape'),\r\n                blockMatrix = blockComponent.matrix();\r\n\r\n            var shapeMatrix;\r\n\r\n            blockComponent.reset();\r\n\r\n            shapeComponent.matrix().multiply(blockMatrix);\r\n            shapeComponent.attr('transform', shapeComponent.matrix().toValue());\r\n            shapeComponent.dirty(true);\r\n\r\n            shapeMatrix = shapeComponent.matrix();\r\n\r\n            this.data({\r\n                left: shapeMatrix.props.e,\r\n                top: shapeMatrix.props.f\r\n            });\r\n\r\n            this.fire(e);\r\n            shapeComponent.removeClass('shape-dragging');\r\n        },\r\n\r\n        onSelect: function(e) {\r\n            this.component().addClass('label-selected');\r\n            if (e.initial) {\r\n                Graph.topic.publish('shape:select', {shape: this});\r\n            }\r\n        },\r\n\r\n        onDeselect: function(e) {\r\n            this.component().removeClass('label-selected');\r\n            if (e.initial) {\r\n                Graph.topic.publish('shape:deselect', {shape: this});\r\n            }\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n    \r\n    var XMLDOC = '<?xml version=\"1.0\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\" [<!ENTITY nbsp \"&#160;\">]>';\r\n    \r\n    var Exporter = Graph.data.Exporter = function(vector, options){\r\n        \r\n        this.options = _.extend({}, Exporter.defaults, options || {});\r\n        this.element = vector.node();\r\n        \r\n        var width, height, scale;\r\n        \r\n        if (vector.isPaper()) {\r\n            width  = vector.elem.width();\r\n            height = vector.elem.height();\r\n            scale  = vector.layout().scale();\r\n        } else {\r\n            var bounds = vector.bbox().toJson();\r\n            \r\n            width  = bounds.width;\r\n            height = bounds.height;\r\n            scale  = vector.matrixCurrent().scale();\r\n        }\r\n        \r\n        _.assign(this.options, {\r\n            width: width,\r\n            height: height,\r\n            scaleX: scale.x,\r\n            scaleY: scale.y\r\n        });\r\n    };\r\n    \r\n    Exporter.defaults = {\r\n        width: 0,\r\n        height: 0,\r\n        \r\n        scaleX: 1,\r\n        scaleY: 1\r\n    };\r\n\r\n    Exporter.prototype.exportDataURI = function() {\r\n        \r\n    };\r\n    \r\n    Exporter.prototype.exportSVG = function(filename, compression) {\r\n        var options = _.extend({}, this.options);\r\n        \r\n        options.encoder = 'application/svg+xml';\r\n        options.compression = 1;\r\n        options.background = '#ffffff';\r\n\r\n        var uri = createDataURI(this.element, options);\r\n        var link = document.createElement('a');\r\n        var click;\r\n\r\n        link.setAttribute('download', filename);\r\n        link.setAttribute('href', uri);\r\n\r\n        if (document.createEvent) {\r\n            click = document.createEvent('MouseEvents');\r\n            click.initEvent('click', true, false);\r\n            link.dispatchEvent(click);\r\n        } else if (document.createEventObject) {\r\n            link.fireEvent('onclick');\r\n        }\r\n\r\n        link = click = null;\r\n    };\r\n\r\n    Exporter.prototype.exportJPEG = function(filename, compression) {\r\n        var options = _.extend({}, this.options);\r\n        \r\n        options.encoder = 'image/jpeg';\r\n        options.compression = compression || 1;\r\n        options.background = '#ffffff';\r\n        \r\n        filename = _.defaultTo(filename, 'download.jpg');\r\n        \r\n        exportImage(this.element, options, function(result){\r\n            if (result) {\r\n                download(filename, result);\r\n            }\r\n        });\r\n    };\r\n\r\n    Exporter.prototype.exportPNG = function(filename, compression) {\r\n        var options = _.extend({}, this.options);\r\n        \r\n        filename = _.defaultTo(filename, 'download.png');\r\n        \r\n        options.encoder = 'image/png';\r\n        options.compression = compression || 0.8;\r\n        \r\n        exportImage(this.element, options, function(result){\r\n            if (result) {\r\n                download(filename, result);\r\n            }\r\n        });\r\n    };\r\n\r\n    Exporter.prototype.exportBlob = function(callback) {\r\n        var options = _.extend({}, this.options);\r\n        \r\n        options.encoder = 'image/jpeg';\r\n        options.compression = 1;\r\n        options.background = '#ffffff';\r\n\r\n        exportImage(this.element, options, function(result){\r\n            if (result) {\r\n                var blob = createBlob(result);\r\n                callback && callback(blob);\r\n            } else {\r\n                callback && callback(false);\r\n            }\r\n        });\r\n    };\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function repair(data) {\r\n        var encoded = encodeURIComponent(data);\r\n        \r\n        encoded = encoded.replace(/%([0-9A-F]{2})/g, function(match, p1) {\r\n            var c = String.fromCharCode('0x'+p1);\r\n            return c === '%' ? '%25' : c;\r\n        });\r\n        \r\n        return decodeURIComponent(encoded);\r\n    }\r\n    \r\n    function download(name, uri) {\r\n        if (navigator.msSaveOrOpenBlob) {\r\n            var blob = createBlob(uri);\r\n            navigator.msSaveOrOpenBlob(blob, name);\r\n            blob = null;\r\n        } else {\r\n            var link = Graph.dom('<a/>');\r\n            \r\n            if ('download' in link) {\r\n                link.download = name;\r\n                link.href = uri;\r\n                link.style.display = 'none';\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                document.body.removeChild(link);\r\n            } else {\r\n                window.open(uri, '_download', 'menubar=no,toolbar=no,status=no');\r\n            }\r\n            \r\n            link = null;\r\n        }\r\n    }\r\n    \r\n    function createBlob(uri) {\r\n        var byteString = window.atob(uri.split(',')[1]),\r\n            mimeString = uri.split(',')[0].split(':')[1].split(';')[0],\r\n            buffer = new ArrayBuffer(byteString.length),\r\n            intArray = new Uint8Array(buffer);\r\n        \r\n        for (var i = 0, ii = byteString.length; i < ii; i++) {\r\n            intArray[i] = byteString.charCodeAt(i);\r\n        }\r\n        \r\n        return new Blob([buffer], {type: mimeString});\r\n    }\r\n    \r\n    function exportImage(element, options, callback) {\r\n        var data = createDataURI(element, options),\r\n            image = new Image();\r\n        \r\n        image.onload = function() {\r\n            var canvas, context, result;\r\n            \r\n            canvas = document.createElement('canvas');\r\n            canvas.width  = image.width;\r\n            canvas.height = image.height;\r\n            \r\n            context = canvas.getContext('2d');\r\n\r\n            if (options.background) {\r\n                context.fillStyle = options.background;\r\n                context.fillRect(0, 0, canvas.width, canvas.height);\r\n            }\r\n\r\n            context.drawImage(image, 0, 0);\r\n            \r\n            try {\r\n                result = canvas.toDataURL(options.encoder, options.compression);\r\n            } catch(e) {\r\n                result = false;\r\n            }\r\n            \r\n            canvas = context = null;\r\n            callback(result);\r\n        };\r\n        \r\n        image.onerror = function() {\r\n            callback(false);\r\n        };\r\n        \r\n        image.src = data; // DOMURL.createObjectURL(blob);\r\n    }\r\n\r\n    function createData(element, options) {\r\n        var holder = Graph.dom('<div/>'),\r\n            cloned = element.cloneNode(true);\r\n        \r\n        var css, sty, svg, xml, uri;\r\n            \r\n        if (cloned.tagName == 'svg') {\r\n            cloned.setAttribute('width',  options.width);\r\n            cloned.setAttribute('height', options.height);\r\n        } else {\r\n            svg = Graph.dom('<svg/>');\r\n            \r\n            svg.setAttribute('xmlns', Graph.config.xmlns.svg);\r\n            svg.setAttribute('xmlns:xlink', Graph.config.xmlns.xlink);\r\n            svg.setAttribute('version', Graph.config.svg.version);\r\n            svg.setAttribute('width',  options.width);\r\n            svg.setAttribute('height', options.height);\r\n            \r\n            svg.appendChild(cloned);\r\n            cloned = svg;\r\n        }\r\n        \r\n        holder.appendChild(cloned);\r\n        \r\n        css = getElementStyles(element);\r\n        sty = Graph.dom('<style/>');\r\n        sty.setAttribute('type', 'text/css');\r\n        sty.innerHTML = \"<![CDATA[\\n\" + css + \"\\n]]>\";\r\n        \r\n        var first = cloned.childNodes[0];\r\n        \r\n        if (first) {\r\n            cloned.insertBefore(sty, first);\r\n        } else {\r\n            cloned.appendChild(sty);\r\n        }\r\n        \r\n        xml = XMLDOC + holder.innerHTML;\r\n        holder = cloned = null;\r\n        return xml;\r\n    }\r\n    \r\n    function createDataURI(element, options) {\r\n        var xml = createData(element, options);\r\n        var uri = 'data:image/svg+xml;base64,' + window.btoa(repair(xml));\r\n        return uri;\r\n    }\r\n    \r\n    function getElementStyles(element) {\r\n        var styles = document.styleSheets,\r\n            result = '';\r\n            \r\n        var rules, rule, found;\r\n        \r\n        for (var i = 0, ii = styles.length; i < ii; i++) {\r\n            \r\n            rules = styles[i].cssRules;\r\n            \r\n            if (rules != null) {\r\n                \r\n                for (var j = 0, jj = rules.length; j < jj; j++, found = null) {\r\n                    \r\n                    rule = rules[j];\r\n                    \r\n                    if (rule.style !== undefined) {\r\n                        if (rule.selectorText) {\r\n                            \r\n                            found = element.querySelector(rule.selectorText);\r\n                            \r\n                            if (found) {\r\n                                result += rule.selectorText + \" { \" + rule.style.cssText + \" }\\n\";\r\n                            } else if(rule.cssText.match(/^@font-face/)) {\r\n                                result += rule.cssText + '\\n';\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n}());","\r\n(function(){\r\n    var Parser = Graph.diagram.Parser = function(data) {\r\n        data = data || {};\r\n\r\n        this._props  = data.props || {};\r\n        this._shapes = data.shapes || [];\r\n        this._links  = data.links || [];\r\n        this._tree   = {};\r\n\r\n        this.parse();\r\n    };\r\n\r\n    Parser.prototype.constructor = Parser;\r\n\r\n    Parser.prototype.parse = function() {\r\n        var shapes = this._shapes,\r\n            tree = {},\r\n            nodes = {},\r\n            total = shapes.length;\r\n\r\n        _.forEach(shapes, function(shape, idx){\r\n            nodes[shape.props.id] = {\r\n                id: shape.props.id,\r\n                parent_id: shape.props.parent_id,\r\n                index: idx,\r\n                total: total\r\n            };\r\n        });\r\n\r\n        var key, node;\r\n\r\n        for (key in nodes) {\r\n            node = nodes[key];\r\n            if ( ! node.parent_id) {\r\n                tree[key] = node;\r\n            } else {\r\n                if (nodes[node.parent_id].children === undefined) {\r\n                    nodes[node.parent_id].children = {};\r\n                }\r\n                nodes[node.parent_id].children[node.id] = node;\r\n            }\r\n        }\r\n\r\n        this._tree = tree;\r\n    };\r\n\r\n    Parser.prototype.shapes = function() {\r\n        var shapes = this._shapes,\r\n            tree = this._tree;\r\n\r\n        return {\r\n            total: shapes.length,\r\n            each: function(callback) {\r\n                traverse(tree, shapes, callback);\r\n            }\r\n        };\r\n    };\r\n\r\n    Parser.prototype.links = function() {\r\n        var links = this._links;\r\n        return {\r\n            total: links.length,\r\n            each: function(callback) {\r\n                _.forEach(links, callback);\r\n            }\r\n        }\r\n    };\r\n\r\n    Parser.prototype.props = function() {\r\n        var props = this._props;\r\n        return {\r\n            each: function(callback) {\r\n                _.forOwn(props, callback);\r\n            }\r\n        }\r\n    };\r\n\r\n    Parser.prototype.destroy = function() {\r\n        this._shapes = null;\r\n        this._links = null;\r\n        this._tree = null;\r\n        this._props = null;\r\n    };\r\n\r\n    function traverse(nodes, shapes, callback) {\r\n        var key, node;\r\n        for (key in nodes) {\r\n            node = nodes[key];\r\n            callback(shapes[node.index], node.index, node.total);\r\n            if (node.children !== undefined) {\r\n                traverse(node.children, shapes, callback);\r\n            }\r\n        }\r\n    }\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var Pallet = Graph.diagram.pallet.Activity = Graph.extend({\r\n        \r\n        props: {\r\n            guid: null,\r\n            rendered: false\r\n        },\r\n        \r\n        components: {\r\n            pallet: null\r\n        },\r\n        \r\n        cached: {\r\n            \r\n        },\r\n\r\n        picking: {\r\n            enabled: false,\r\n            clientX: null,\r\n            clientY: null,\r\n            target: null,\r\n            matrix: null,\r\n            shape: null,\r\n            start: null\r\n        },\r\n        \r\n        constructor: function(options) {\r\n            _.assign(this.props, options || {});\r\n            this.props.guid = 'pallet-' + (++Pallet);\r\n            this.initComponent();\r\n\r\n            Graph.registry.pallet.register(this);\r\n        },\r\n\r\n        guid: function() {\r\n            return this.props.guid;\r\n        },\r\n\r\n        initComponent: function() {\r\n            var template, pallet;\r\n            \r\n            template = _.format(\r\n                '<svg class=\"graph-pallet\" xmlns=\"{0}\" xmlns:xlink=\"{1}\" version=\"{2}\" style=\"width: 100%; height: 100%\">' + \r\n                    '<defs>' + \r\n                        '<marker id=\"marker-arrow-pallet\" refX=\"11\" refY=\"10\" viewBox=\"0 0 20 20\" markerWidth=\"10\" markerHeight=\"10\" orient=\"auto\">' + \r\n                            '<path d=\"M 1 5 L 11 10 L 1 15 Z\" fill=\"#30D0C6\" stroke-linecap=\"round\" stroke-dasharray=\"10000, 1\"/>' + \r\n                        '</marker>' + \r\n                    '</defs>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"Graph.shape.activity.Start\" transform=\"matrix(1,0,0,1,40,0)\">' + \r\n                        '<circle cx=\"32\" cy=\"32\" r=\"30\"/>' +\r\n                        '<text x=\"32\" y=\"36\">Start</text>' + \r\n                    '</g>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"Graph.shape.activity.Final\" transform=\"matrix(1,0,0,1,40,80)\">' + \r\n                        '<circle cx=\"32\" cy=\"32\" r=\"30\"/>' + \r\n                        '<circle cx=\"32\" cy=\"32\" r=\"24\" class=\"full\"/>' + \r\n                        '<text x=\"32\" y=\"36\">End</text>' + \r\n                    '</g>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"Graph.shape.activity.Action\" transform=\"matrix(1,0,0,1,40,160)\">' + \r\n                        '<rect x=\"2\" y=\"2\" width=\"60\" height=\"60\" rx=\"7\" ry=\"7\"/>' + \r\n                        '<text x=\"32\" y=\"34\">Action</text>' + \r\n                    '</g>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"Graph.shape.activity.Router\" transform=\"matrix(1,0,0,1,40,250)\">' + \r\n                        '<rect x=\"4\" y=\"4\" width=\"54\" height=\"54\" transform=\"rotate(45,32,32)\"/>' + \r\n                        '<text x=\"30\" y=\"34\">Route</text>' + \r\n                    '</g>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"Graph.shape.activity.Join\" transform=\"matrix(1,0,0,1,40,340)\">' + \r\n                        '<rect x=\"2\" width=\"60\" height=\"58\" rx=\"0\" ry=\"0\" style=\"fill: rgba(255,255,255,0); stroke-width: 0\" />' + \r\n                        '<rect x=\"2\" y=\"28\" width=\"60\" height=\"6\" rx=\"0\" ry=\"0\" pointer-events=\"none\" class=\"full\"/>' + \r\n                        '<path d=\"M 10  0 L 10 28\" pointer-events=\"none\" ></path>' + \r\n                        '<path d=\"M 54  0 L 54 28\" pointer-events=\"none\" ></path>' + \r\n                        '<path d=\"M 32 34 L 32 60\" marker-end=\"url(#marker-arrow-pallet)\" pointer-events=\"none\" ></path>' + \r\n                        '<text x=\"32\" y=\"20\">Join</text>' + \r\n                    '</g>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"Graph.shape.activity.Fork\" transform=\"matrix(1,0,0,1,40,420)\">' + \r\n                        '<rect x=\"2\" width=\"60\" height=\"58\" rx=\"0\" ry=\"0\" pointer-events=\"none\" style=\"fill: rgba(255,255,255,0); stroke-width: 0\" />' + \r\n                        '<rect x=\"2\" y=\"28\" width=\"60\" height=\"6\" rx=\"0\" ry=\"0\" class=\"full\"/>' + \r\n                        '<path d=\"M 10 34 L 10 60\" marker-end=\"url(#marker-arrow-pallet)\" pointer-events=\"none\" ></path>' + \r\n                        '<path d=\"M 54 34 L 54 60\" marker-end=\"url(#marker-arrow-pallet)\" pointer-events=\"none\" ></path>' + \r\n                        '<path d=\"M 32  0 L 32 28\" pointer-events=\"none\" ></path>' + \r\n                        '<text x=\"32\" y=\"50\">Fork</text>' + \r\n                    '</g>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"Graph.shape.activity.Lane\" transform=\"matrix(1,0,0,1,40,500)\">' + \r\n                        '<rect x=\"2\" y=\"2\" width=\"60\" height=\"60\" rx=\"0\" ry=\"0\"/>' + \r\n                        '<rect x=\"2\" y=\"2\" width=\"10\" height=\"60\" rx=\"0\" ry=\"0\"/>' + \r\n                        '<text x=\"32\" y=\"34\">Role</text>' + \r\n                    '</g>' + \r\n                '</svg>',\r\n                Graph.config.xmlns.svg,\r\n                Graph.config.xmlns.xlink,\r\n                Graph.config.svg.version\r\n            );\r\n            \r\n            pallet = Graph.$(template);\r\n            this.components.pallet = pallet;\r\n        },\r\n\r\n        stopPicking: function() {\r\n            if (this.picking.enabled) {\r\n                this.picking.target.remove();\r\n                _.assign(this.picking, {\r\n                    clientX: null,\r\n                    clientY: null,\r\n                    target: null,\r\n                    matrix: null,\r\n                    start: null,\r\n                    enabled: false,\r\n                    shape: null\r\n                });\r\n            }\r\n        },\r\n\r\n        render: function(container) {\r\n            if (this.props.rendered) {\r\n                return;\r\n            }\r\n\r\n            var me = this, pallet = this.components.pallet;\r\n\r\n            this.props.rendered = true;\r\n\r\n            container = Graph.$(container);\r\n            container.prepend(pallet);\r\n            container = null;\r\n\r\n            interact('.graph-pallet-item')\r\n                .on('down', function(e){\r\n                    dragStart(e);\r\n                })\r\n                .on('move', function(e){\r\n                    dragMove(e);\r\n                })\r\n                .on('up', function(e){\r\n                    dragStop();\r\n                });\r\n\r\n            /////////\r\n            \r\n            pallet.on('mouseleave', function(e){\r\n                dragStop();\r\n            });\r\n\r\n            function dragStart(e) {\r\n                var target = Graph.$(e.currentTarget);\r\n\r\n                if (me.picking.enabled) {\r\n                    dragStop();\r\n                }\r\n\r\n                if (target.data('shape') !== undefined) {\r\n                    var transform = Graph.util.transform2segments(target.attr('transform'));\r\n                    transform = transform[0].slice(1);\r\n\r\n                    me.picking.enabled = true;\r\n                    me.picking.matrix = Graph.factory(Graph.lang.Matrix, transform);\r\n                    me.picking.target = Graph.$(e.currentTarget.cloneNode(true));\r\n                    me.picking.target.addClass('grabbing');\r\n                    me.picking.shape = target.data('shape');\r\n\r\n                    pallet.append(me.picking.target);\r\n\r\n                    me.picking.clientX = e.clientX;\r\n                    me.picking.clientY = e.clientY;\r\n\r\n                    me.fire('pick', {\r\n                        shape: me.picking.shape,\r\n                        offset: {\r\n                            x: me.picking.clientX,\r\n                            y: me.picking.clientY\r\n                        }\r\n                    });\r\n\r\n                    transform = null;\r\n\r\n                }\r\n            }\r\n\r\n            function dragMove(e) {\r\n                var i = e.interaction;\r\n\r\n                if (i.pointerIsDown && me.picking.target) {\r\n\r\n                    e.preventDefault();\r\n\r\n                    me.picking.clientX = e.clientX;\r\n                    me.picking.clientY = e.clientY;\r\n\r\n                    var end = {\r\n                        x: e.clientX,\r\n                        y: e.clientY\r\n                    };\r\n\r\n                    if ( ! me.picking.start) {\r\n                        me.picking.start = end;\r\n                    }\r\n\r\n                    var dx = end.x - me.picking.start.x,\r\n                        dy = end.y - me.picking.start.y;\r\n\r\n                    me.picking.matrix.translate(dx, dy);\r\n                    me.picking.target.attr('transform', me.picking.matrix.toValue());\r\n\r\n                    me.fire('drag', {\r\n                        dx: dx,\r\n                        dy: dy\r\n                    });\r\n\r\n                    me.picking.start = end;\r\n                }\r\n            }\r\n\r\n            function dragStop() {\r\n                me.stopPicking();\r\n                me.fire('drop');\r\n            }\r\n\r\n        },\r\n        \r\n        toString: function() {\r\n            return 'Graph.diagram.pallet.Activity';\r\n        }\r\n\r\n    });\r\n\r\n    Pallet.guid = 0;\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.diagram.type.Diagram = Graph.extend({\r\n        props: {\r\n            id: null,\r\n            paper: null,\r\n            dirty: false\r\n        },\r\n\r\n        drawing: {\r\n            enabled: false\r\n        },\r\n\r\n        metadata: {\r\n            type: 'diagram.diagram'\r\n        },\r\n\r\n        constructor: function(paper, options) {\r\n            options = options || {};\r\n            _.assign(this.props, options);\r\n\r\n            this.props.paper = paper.guid();\r\n            this.empty();\r\n        },\r\n\r\n        /**\r\n         * update properties\r\n         */\r\n        update: function(data) {\r\n            var me = this,\r\n                parser = new Graph.diagram.Parser(data),\r\n                paper = me.paper();\r\n            \r\n            parser.props().each(function(v, k){\r\n                me.props[k] = v;\r\n            });\r\n\r\n            parser.shapes().each(function(item){\r\n                var shape;\r\n\r\n                if (item.props.id) {\r\n                    shape = me.getShapeBy(function(shape){ \r\n                        return shape.props.id == item.props.id; \r\n                    });\r\n                } else {\r\n                    shape = me.getShapeBy(function(shape){\r\n                        return shape.props.guid == item.props.client_id;\r\n                    });\r\n                }\r\n\r\n                if (shape) {\r\n                    shape.update(item);\r\n                }\r\n            });\r\n\r\n            parser.links().each(function(item){\r\n                var link;\r\n                if (item.props.id) {\r\n                    link = me.getLinkBy(function(link){\r\n                        return link.props.id == item.props.id;\r\n                    });\r\n                } else {\r\n                    link = me.getLinkBy(function(link){\r\n                        return link.props.guid == item.props.client_id;\r\n                    });\r\n                }\r\n\r\n                if (link) {\r\n                    // link.update(item);\r\n                }\r\n            });\r\n\r\n            parser.destroy();\r\n            parser = null;\r\n        },\r\n\r\n        commit: function() {\r\n            this.props.dirty = false;\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Render data and update properties\r\n         */\r\n        render: function(data) {\r\n\r\n        },\r\n\r\n        paper: function() {\r\n            return Graph.registry.vector.get(this.props.paper);\r\n        },\r\n\r\n        empty: function() {\r\n            _.forEach(this.getShapes(), function(shape){\r\n                if ( ! shape.tree.parent) {\r\n                    shape.remove();\r\n                }\r\n            });\r\n            return this;\r\n        },\r\n\r\n        getShapes: function() {\r\n            var context = this.paper().guid();\r\n            return Graph.registry.shape.collect(context);\r\n        },\r\n\r\n        getLinks: function() {\r\n            var shapes = this.getShapes(),  \r\n                indexes = {},\r\n                links = [];\r\n\r\n            var network, connections, i, ii, j, jj;\r\n\r\n            for(i = 0, ii = shapes.length; i < ii; i++) {\r\n                network = shapes[i].connectable().plugin();\r\n                if (network) {\r\n                    connections = network.connections();\r\n                    for (j = 0, jj = connections.length; j < jj; j++) {\r\n                        if (indexes[connections[j].guid] === undefined) {\r\n                            links.push(connections[j].link);\r\n                            indexes[connections[j].guid] = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            indexes = null;\r\n\r\n            return links;\r\n        },\r\n        \r\n        arrange: function() {\r\n\r\n        },\r\n\r\n        drawShape: function(namespace, options) {\r\n\r\n        },\r\n\r\n        findShapeBy: function(identity) {\r\n            return _.filter(this.getShapes(), identity);\r\n        },\r\n\r\n        getShapeBy: function(identity) {\r\n            return _.find(this.getShapes(), identity);\r\n        },\r\n\r\n        getLinkBy: function(identity) {\r\n\r\n        },\r\n\r\n        toJson: function() {\r\n            var json = {};\r\n            return json;\r\n        }\r\n\r\n    });\r\n\r\n}());","(function(){\r\n\r\n    var Diagram = Graph.diagram.type.Activity = Graph.extend(Graph.diagram.type.Diagram, {\r\n\r\n        props: {\r\n            name: 'Activity Diagram',\r\n            description: 'Example of activity diagram'\r\n        },\r\n\r\n        rendering: {\r\n            active: false\r\n        },\r\n\r\n        metadata: {\r\n            type: 'diagram.activity'\r\n        },\r\n\r\n        drawShape: function(namespace, options) {\r\n            var paper = this.paper();\r\n\r\n            // already drawing\r\n            if (this.drawing.enabled) {\r\n                \r\n                this.drawing.enabled = false;\r\n                this.drawing.shape.off('afterdrag', this.drawing.dropHandler);\r\n                this.drawing.dropHandler = null;\r\n\r\n                // mark as invalid\r\n                this.drawing.shape.remove();\r\n                this.drawing.shape = null;\r\n            }\r\n\r\n            var clazz, shape, movable;\r\n\r\n            options = options || {};\r\n            movable = true;\r\n\r\n            if (namespace == 'Graph.shape.activity.Lane') {\r\n                if ( ! this.hasLane() && this.getShapes().length) {\r\n                    var bbox = this.shapes.bbox().toJson();\r\n                    \r\n                    options.left = bbox.x - 40;\r\n                    options.top = bbox.y - 20;\r\n\r\n                    movable = false;\r\n                    bbox = null;\r\n                }\r\n            } else if (namespace == 'Graph.shape.common.Label') {\r\n                movable = false;\r\n            }\r\n\r\n            clazz = Graph.ns(namespace);\r\n            shape = Graph.factory(clazz, [options]);\r\n\r\n            // check again...\r\n            if (movable) {\r\n                movable = !!shape.draggable().plugin();\r\n            }\r\n\r\n            var me = this;\r\n\r\n            this.drawing.dropHandler = function() {\r\n                var timer;\r\n\r\n                timer = _.delay(function(shape){\r\n                    var valid = false;\r\n\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n\r\n                    if (shape.is('activity.lane')) {\r\n                        valid = true;\r\n                    } else {\r\n                        if (me.hasLane()) {\r\n                            var parent = shape.parent();\r\n                            valid = parent && parent.is('activity.lane');\r\n                        } else {\r\n                            valid = true;\r\n                        }\r\n                    }\r\n\r\n                    if ( ! valid) {\r\n                        Graph.message(\"Can't drop shape outside lane or pool\", 'warning');\r\n                        shape.remove();\r\n                        shape = null;\r\n                    }\r\n\r\n                }, 0, me.drawing.shape);\r\n\r\n                me.drawing.dropHandler = null;\r\n                me.drawing.enabled = false;\r\n                me.drawing.shape = null;\r\n\r\n            };\r\n\r\n            if (movable) {\r\n                this.drawing.enabled = true;\r\n                this.drawing.shape = shape;\r\n\r\n                if (options.left !== undefined && options.top !== undefined) {\r\n                    var center = shape.center(),\r\n                        dx = options.left - center.x,\r\n                        dy = options.top - center.y;\r\n\r\n                    shape.translate(dx, dy);    \r\n                }\r\n                \r\n                shape.render(paper);\r\n                \r\n                var draggable = shape.draggable().plugin();\r\n                draggable.start();\r\n\r\n                shape.one('afterdrag', this.drawing.dropHandler);\r\n\r\n            } else {\r\n                me.drawing.enabled = false;\r\n                me.drawing.shape = null;\r\n                me.drawing.dropHandler = null;\r\n\r\n                if (shape.is('activity.lane')) {\r\n                    shape.render(paper);\r\n\r\n                    var children = me.shapes.toArray().slice();    \r\n                    shape.addChild(children);\r\n                    children = null;\r\n\r\n                } else if (shape.is('common.label')) {\r\n                    var lanes = me.findShapeBy(function(shape){ return shape.is('activity.lane'); }),\r\n                        coord = {x: shape.props.left, y: shape.props.top},\r\n                        found = false;\r\n                    \r\n                    shape.render(paper);\r\n\r\n                    if (lanes.length) {\r\n                        var box, i, j;\r\n\r\n                        for (i = 0, j = lanes.length; i < j; i++) {\r\n                            box = lanes[i].bbox().toJson();\r\n                            \r\n                            if (Graph.util.isBoxContainsPoint(box, coord)) {\r\n                                found = lanes[i];\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if (found) {\r\n                            found.addChild(shape);\r\n                        } else {\r\n                            Graph.message(\"Can't drop shape outside lane or pool\", 'warning');\r\n                            shape.remove();\r\n                            shape = null;\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n            return {\r\n                movable: movable,\r\n                shape: shape\r\n            };\r\n        },\r\n\r\n        hasLane: function() {\r\n            return this.findShapeBy(function(shape){ return shape.is('activity.lane'); }).length !== 0;\r\n        },\r\n\r\n        render: function(data) {\r\n            var me = this,\r\n                paper = this.paper(),\r\n                parser = new Graph.diagram.Parser(data);\r\n\r\n            if (this.rendering.active) {\r\n                return;\r\n            }\r\n\r\n            this.rendering.active = true;\r\n            this.empty();\r\n\r\n            parser.props().each(function(v, k){\r\n                me.props[k] = v;\r\n            });\r\n\r\n            render(parser).then(function(rendered){\r\n                parser.links().each(function(item){\r\n                    var props = item.props,\r\n                        sourceShape = rendered[props.source_id],\r\n                        targetShape = rendered[props.target_id];\r\n\r\n                    if (sourceShape && targetShape) {\r\n                        var sourceNetwork = sourceShape.connectable().plugin(),\r\n                            targetNetwork = targetShape.connectable().plugin();\r\n\r\n                        if (sourceNetwork && targetNetwork) {\r\n                            sourceNetwork.connect(targetNetwork, null, null, item.props);\r\n                        }\r\n                    }\r\n                })\r\n                \r\n                me.rendering.active = false;\r\n\r\n                parser.destroy();\r\n                parser = null;\r\n            }); \r\n\r\n            ///////// RENDERER /////////\r\n            \r\n            function render(parser) {\r\n                var def = Graph.defer(),\r\n                    rendered = {},\r\n                    counter = 0;\r\n\r\n                parser.shapes().each(function(item, index, total){\r\n                    var props = item.props,\r\n                        clazz = Graph.ns(props.type);\r\n\r\n                    var shape;\r\n\r\n                    if (clazz) {\r\n                        var delay;\r\n\r\n                        delay = _.delay(function(index, clazz, props){\r\n                            clearTimeout(delay);\r\n                            delay = null;\r\n\r\n                            shape = Graph.factory(clazz, [props]);\r\n                            shape.render(paper);\r\n\r\n                            if (rendered[props.parent_id] !== undefined) {\r\n                                rendered[props.parent_id].addChild(shape, false);\r\n                            }\r\n\r\n                            rendered[props.id] = shape;\r\n\r\n                            if (index === total - 1) {\r\n                                def.resolve(rendered);\r\n                            }\r\n\r\n                        }, (counter * 100), index, clazz, props);\r\n                        \r\n                    }\r\n                    counter++;\r\n                });\r\n\r\n                return def.promise();\r\n            };  \r\n        },  \r\n\r\n        toString: function() {\r\n            return 'Graph.diagram.type.Activity';\r\n        },\r\n\r\n        toJson: function() {\r\n            var diagram = {\r\n                props: {\r\n                    id: this.props.id,\r\n                    name: this.props.name,\r\n                    type: this.toString(),\r\n                    description: this.props.description\r\n                },\r\n                shapes: [],\r\n                links: []\r\n            };\r\n\r\n            _.forEach(this.getShapes(), function(shape){\r\n                var data = shape.toJson();\r\n                diagram.shapes.push({\r\n                    props: data.props,\r\n                    params: data.params\r\n                });\r\n            });\r\n\r\n            _.forEach(this.getLinks(), function(link){\r\n                var data = link.toJson();\r\n                diagram.links.push({\r\n                    props: data.props,\r\n                    params: data.params\r\n                });\r\n            });\r\n\r\n            return diagram;\r\n        }\r\n    });\r\n    \r\n}());\r\n\r\n","\r\n(function(){\r\n\r\n    Graph.popup.Dialog = Graph.extend({\r\n\r\n        props: {\r\n            opened: false\r\n        },\r\n\r\n        components: {\r\n            element: null,\r\n            backdrop: null\r\n        },\r\n\r\n        handlers: {\r\n            backdrop_click: null\r\n        },\r\n\r\n        constructor: function(element, options) {\r\n            var me = this, \r\n                comp = me.components,\r\n                handlers = me.handlers;\r\n\r\n            comp.element = Graph.$(element);\r\n\r\n            if (options.buttons) {\r\n                _.forEach(options.buttons, function(button, index){\r\n                    var element = Graph.$(button.element, comp.element);\r\n                    if (element.length()) {\r\n                        var name = 'button' + index,\r\n                            func = name + '_click';\r\n\r\n                        comp[name] = element;\r\n\r\n                        if (_.isFunction(button.onclick)) {\r\n                            handlers[func] = _.bind(function(e){\r\n                                button.onclick.call(me, e);\r\n                            }, me);\r\n                            element.on('click', handlers[func]);\r\n                        }\r\n                        name = func = null;\r\n                    }\r\n                    element = null;\r\n                });\r\n            }\r\n        },\r\n\r\n        element: function() {\r\n            return this.components.element;\r\n        },\r\n\r\n        open: function() {\r\n            if (this.props.opened) {\r\n                return;\r\n            }\r\n\r\n            this.element().addClass('open');\r\n            this.props.opened = true;\r\n\r\n            this.center();\r\n            this.backdrop();\r\n        },\r\n\r\n        close: function() {\r\n            var me = this,\r\n                comp = this.components,\r\n                handlers = this.handlers,\r\n                backdrop = comp.backdrop;\r\n\r\n            this.element().removeClass('open');\r\n            this.props.opened = false;\r\n\r\n            if (handlers.backdrop_click) {\r\n                backdrop.off('click', handlers.backdrop_click);\r\n                handlers.backdrop_click = null;\r\n\r\n                var backdropUser = +backdrop.data('user');\r\n\r\n                backdropUser--;\r\n\r\n                if (backdropUser <= 0) {\r\n                    backdropUser = 0;\r\n                    backdrop.detach();\r\n                }\r\n\r\n                backdrop.data('user', backdropUser);\r\n            }\r\n\r\n            _.forOwn(handlers, function(handler, name){\r\n                var tmp = _.split(name, '_'),\r\n                    key = tmp[0],\r\n                    evt = tmp[1];\r\n\r\n                if (handler && comp[key] && evt) {\r\n                    comp[key].off(evt, handler);\r\n                    handlers[name] = null;\r\n                }\r\n                \r\n                tmp = key = evt = null;\r\n            });\r\n\r\n            this.fire('close');\r\n        },\r\n\r\n        center: _.debounce(function() {\r\n            var element = this.element(),\r\n                width = element.width(),\r\n                height = element.height();\r\n\r\n            element.css({\r\n                'top': '50%',\r\n                'left': '50%',\r\n                'margin-top': -height / 2,\r\n                'margin-left': -width / 2\r\n            });\r\n        }, 0),\r\n\r\n        backdrop: function() {\r\n            var me = this,\r\n                backdrop = Graph.$('.graph-dialog-backdrop');\r\n\r\n            if ( ! backdrop.length()) {\r\n                backdrop = Graph.$('<div class=\"graph-dialog-backdrop\"/>');\r\n                backdrop.data('user', 0);\r\n                backdrop.on('click', function(e){\r\n                    e.stopPropagation();\r\n                });\r\n            }\r\n\r\n            me.handlers.backdrop_click = function() {\r\n                me.close();\r\n            };\r\n\r\n            backdrop.on('click', me.handlers.backdrop_click);\r\n\r\n            var backdropUser = +backdrop.data('user');\r\n\r\n            backdropUser++;\r\n            backdrop.data('user', backdropUser);\r\n\r\n            me.components.element.before(backdrop);\r\n            me.components.backdrop = backdrop;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.popup.Dialog';\r\n        },\r\n\r\n        destroy: function() {\r\n            this.components.element = null;\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n    ///////// SHORTCUT /////////\r\n    \r\n    Graph.dialog = function(element, options){\r\n        return new Graph.popup.Dialog(element, options);\r\n    };\r\n\r\n}());"],"sourceRoot":"/source/"}