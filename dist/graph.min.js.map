{"version":3,"sources":["poly.js","core.js","util.js","error.js","event.js","class.js","point.js","line.js","curve.js","bbox.js","path.js","matrix.js","vector.js","element.js","ellipse.js","circle.js","rect.js","polyline.js","polygon.js","group.js","text.js","image.js","paper.js","link.js","shape.js","layout.js","router.js","directed.js","orthogonal.js","spotlight.js","toolpad.js","sweeplink.js","plugin.js","definer.js","reactor.js","transformer.js","animator.js","resizer.js","collector.js","dragger.js","dropper.js","sorter.js","network.js","history.js","panzoom.js","linker.js","toolmanager.js","pencil.js","editor.js","snapper.js","start.js","final.js","action.js","fork.js","join.js","lane.js","exporter.js","diagram.js","command.js","modeler.js","parser.js","rules.js","dialog.js"],"names":["_","float","parseFloat","gcd","array","length","t","a","b","i","r","len","lcm","format","params","toArray","arguments","shift","replace","match","number","insert","index","Array","prototype","splice","apply","concat","move","from","to","size","k","push","undefined","permute","permuter","isFunction","reduce","result","value","key","isArray","bisector","f","left","x","lo","hi","mid","call","right","ascendingKey","NaN","isIE","na","global","navigator","ua","userAgent","toLowerCase","ie","indexOf","parseInt","substring","GLOBAL","window","Math","self","Function","CACHE_SIZE","document","MEMO_SIZE","readyFn","Graph","ready","VERSION","AUTHOR","cached","config","base","svg","version","xmlns","xlink","html","font","family","line","setup","name","isPlainObject","extend","string","ID_VECTOR","ID_LINK","ID_PORT","CLS_VECTOR_SVG","CLS_VECTOR_RECT","CLS_VECTOR_PATH","CLS_VECTOR_TEXT","CLS_VECTOR_LINE","CLS_VECTOR_GROUP","CLS_VECTOR_IMAGE","CLS_VECTOR_CIRCLE","CLS_VECTOR_ELLIPSE","CLS_VECTOR_POLYGON","CLS_VECTOR_POLYLINE","CLS_VECTOR_VIEWPORT","CLS_LINK_HEAD","CLS_LINK_TAIL","isHTML","obj","HTMLElement","isSVG","SVGElement","isElement","dom","Element","isMac","test","platform","ns","namespace","lookup","clazz","current","parts","split","parent","uuid","c","random","v","toString","hash","str","chr","charCodeAt","create","superclass","props","factory","args","bind","expand","target","source","scope","tproto","constructor","sproto","defaultTo","forOwn","isUndefined","lang","Class","mixin","this","group","token","credit","join","remove","debounce","memoize","func","memo","param","cache","saved","ii","defer","$","Deferred","when","paper","width","height","options","Paper","type","capitalize","shape","names","chunk","lastIndexOf","substr","layout","router","link","plugin","proto","topic","subscribers","topics","publish","message","subs","lsnr","forEach","handler","subscribe","unsub","h","s","sub","unsubscribe","find","u","doc","evt","timer","removeEventListener","readyState","loaded","inspect","delay","clearTimeout","addEventListener","REGEX_PATH_STR","REGEX_PATH_VAL","REGEX_PATH_CMD","REGEX_POLY_STR","REGEX_TRAN_STR","REGEX_TRAN_SUB","CONVEX_RADIUS","SMOOTH_RADIUS","LEGENDRE_N","LEGENDRE_T","LEGENDRE_C","util","deg","rad","round","PI","angle","dx","dy","y","atan2","theta","toFixed","taxicab","hypo","va","vb","sqrt","sign","num","quadrant","gradient","Infinity","snapValue","snaps","range","abs","rem","pointbox","padding","x1","y1","x2","y2","pointAlign","treshold","pointDistance","isPointEquals","isPointOnLine","p","det","dis","polar2point","distance","radian","origin","d","point","cos","sin","isBoxContainsPoint","box","isBoxIntersect","fn","boxOrientation","box1","box2","top","rgt","btm","lft","ver","hor","midpoint","movepoint","tr","lineBendpoints","dir","xm","ym","points","lineIntersection","x3","y3","x4","y4","max","min","nx","ny","denominator","px","py","px2","py2","perpendicular","m1","m2","tt","hp","atan","mx","my","iy","points2path","segments","map","cmd","segments2path","path2points","command","path2segments","sizes","l","m","q","z","cloneDeep","val","polygon2dots","$0","polygon2path","dots","transform2segments","valid","matrix","translate","rotate","scale","skewX","skewY","transform","matches","curvebox","x0","y0","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","j","jlen","curveLength","sum","ct","xb","curvePolynom","yb","co","n1","n2","n3","n4","curveInterval","step","e","pointAtInterval","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","t13","pow","t12","t3","ax","ay","cx","cy","alpha","n","start","end","curveIntersection","count","bon1","bon2","nres","ares","l1","l2","dots1","dots2","xy","di","di1","dj","dj1","ci","cj","is","convexSegment","prev","next","radius","d1","d2","cp","c1","c2","dr","smoothSegment","E","Error","err","stack","Object","setPrototypeOf","error","Event","data","init","cancelBubble","defaultPrevented","propagationStopped","immediatePropagationStopped","originalData","assign","stopPropagation","stopImmediatePropagation","preventDefault","event","ESC","ENTER","DELETE","SHIFT","fix","original","originalEvent","position","clientX","clientY","relative","vector","clone","invert","isPrimaryButton","button","hasPrimaryModifier","metaKey","ctrlKey","hasSecondaryModifier","shiftKey","jQuery","initializing","$super","defaults","prop","me","listeners","classdef","superdef","inherits","fcal","fsup","near","ctor","caller","callee","closest","pro","on","once","o","part","fire","orig","one","off","rgex","slice","RegExp","escapeRegExp","isString","originalType","publisher","onces","method","inherited","snap","Point","tmp","trim","toNumber","manhattan","toJson","triangle","difference","alignment","bbox","bearing","Line","bear","dec","equals","rd","si","rx","ry","comply","polar","adhereToBox","contains","stringify","sep","isPoint","lat1","lat2","lon1","lon2","deltaLon","intersect","intersection","Curve","unshift","pointAt","json","curve","intersectnum","BBox","pathinfo","Path","center","corner","dot","contain","isVector","isBBox","dw","dh","tbox","bdat","tdat","sideNearestPoint","tx","ty","tw","th","distToLeft","distToRight","distToTop","distToBottom","side","pointNearestPoint","fixsegment","segment","attr","tq","T","Q","qx","qy","X","Y","arc2curve","bx","by","quad2curve","line2curve","cat2bezier","def","_13","_23","large_arc_flag","sweep_flag","recursive","_120","res","f1","f2","rx2","ry2","asin","df","f2old","x2old","y2old","s1","s2","tan","hx","hy","m3","m4","path1","path2","x1m","y1m","x2m","y2m","bz1","bz2","cv1","cv2","sj","inter","ss1","ln1","ss2","ln2","kk","segment1","segment2","bezier1","bezier2","__CLASS__","isPath","absolute","seg","itm","toUpperCase","toUpper","jj","pop","ll","head","tail","toLower","fixarc","pi","com","curve2curve","fixarc2","com1","com2","p1","p2","fixmove2","segments1","segments2","a1","a2","attrs2","pcom","fixArc2","xmin","ymin","xmax","ymax","lengthAt","ps","segmentAt","total","sp","path","vertices","vs","addVertext","vertext","simple","isSimple","vx","vy","nearest","best","bestlen","currpoint","currdist","tolerance","bestdist","prevlen","nextlen","prevdist","nextdist","moveTo","lineTo","append","maxs","Matrix","get","multiply","isMatrix","delta","sx","sy","determinant","radSkewX","cosSkewX","sinSkewX","scaleX","scaleY","toFilter","Collection","collection","items","nth","item","first","last","clear","modify","each","iteratee","Vector","vectors","guid","has","id","not","filter","pull","registry","methods","domParser","REGEX_SVG_BUILDER","selector","context","query","fragment","element","DOMParser","parseFromString","documentElement","childNodes","node","deep","cloneNode","belong","setAttributeNS","setAttribute","outerHeight","margin","show","hide","offset","css","addClass","classes","currentClasses","className","baseVal","uniq","removeClass","hasClass","prepend","appendTo","prependTo","before","detach","types","trigger","text","focus","contextmenu","state","empty","scrollTop","scrollLeft","cascade","child","children","bubble","parentNode","nodeName","getBoundingClientRect","tree","container","traversable","selectable","focusable","snappable","selected","rendered","attrs","style","class","plugins","transformer","collector","animator","resizer","reactor","dragger","dropper","network","history","sorter","panzoom","toolmgr","editor","utils","spotlight","definer","toolpad","graph","originalBBox","elem","onAppendChild","onRemoveChild","onPrependChild","createElementNS","Transformer","onTransformTranslate","onTransformRotate","onTransformScale","isPaper","ToolManager","onActivateTool","onDeactivateTool","register","ctm","getCTM","refresh","reset","removeAttr","dirty","invalidate","interactable","Reactor","animable","Animator","animstart","animating","animend","resizable","Resizer","resize","onResizerResize","draggable","Dragger","dragstart","onDraggerStart","dragmove","onDraggerMove","dragend","onDraggerEnd","zoomable","Panzoom","droppable","Dropper","dropenter","onDropperEnter","dropleave","onDropperLeave","sortable","Sorter","connectable","Network","clickable","editable","Editor","beforeedit","edit","isBoolean","shield","enabled","snapping","removeAttribute","cursor","predicate","added","chain","removed","removal","pullAll","ma","pa","dt","dotval","mat","dimension","getBBox","clientLeft","clientTop","clientWidth","clientHeight","bottom","nbox","pbox","elems","holder","render","viewport","isViewport","setContext","ancestors","papa","descendants","$collector","decollect","destroy","unregister","select","resume","deselect","suspended","suspend","animate","duration","easing","callback","label","deltaMatrix","backward","forward","front","back","isGroup","isTraversable","isSelectable","isDraggable","isResizable","isConnectable","isSnappable","isRendered","tool","syncDragStart","syncDragMove","syncDragEnd","Ellipse","gx","gy","commit","bb","magnify","Circle","ar","Rect","origpath","w","ms","mr","ro","ox","oy","Polyline","Polygon","Group","stroke","stroke-width","fill","Text","text-anchor","lineHeight","fontSize","rows","font-size","font-family","write","onTextRender","addSpan","span","arrange","wrap","word","words","reverse","lines","lineNo","getComputedTextLength","textBox","targetBox","Image","preserveAspectRatio","src","xlink:href","align","aspect","showOrigin","components","xmlns:link","overflow","initLayout","Collector","linker","Linker","pencil","Pencil","Definer","snapper","Snapper","Spotlight","Toolpad","onPointerDown","onKeynavDown","onKeynavUp","listenLinkUpdate","listenLinkRemove","listenShapeDraw","vp","flush","activate","connect","isShape","hub","createRouter","createLink","parse","shapes","links","save","alert","keyCode","selections","saveAsImage","filename","exporter","Exporter","exportPNG","arrangeLinks","arrangeShapes","ellipse","circle","rect","polyline","polygon","image","connector","arg","storage","Registry","keys","tagName","wipe","pid","hasOwnProperty","collect","ID_SHAPE","Layout","fit","view","smooth","smootness","grabVector","grabLocation","location","currentScale","dragSnapping","mode","convex","idx","sweeper","Sweeplink","findConvex","updateConvex","removeConvex","Router","domain","values","waypoints","bendpoints","bending","route","repair","component","port","relocate","initTrans","updateTrans","trans","connecting","stopTrans","portCentering","axis","porting","routes","cable","sortIntersection","isRepairable","getSegmentIndex","sortBy","floor","getClosestIntersect","repairBendpoint","bend","oldport","newport","repairRoutes","bound1","bound2","clonedRoutes","tidyRoutes","Directed","space","srcnet","srcbox","sbound","tarnet","tarbox","tbound","orient","orientation","direct","direction","tuneup","sdot","edot","maxlen","sourcePath","targetPath","rangeStart","rangeEnd","segmentStart","segmentEnd","oldSource","oldTarget","align1","align2","cropBinding","srcport","tarport","cropped","cropConnect","changed","Orthogonal","bends","repaired","ranges","sourceBox","snapH","snapV","sourceBound","targetBound","segmentAlign","q1","q2","newStart","newEnd","sourceOrient","targetOrient","dotlen","newRangeStart","cropBending","getHandler","resource","Link","labelDistance","labelX","labelY","block","coat","controls","handlers","initComponent","bindResource","onRouterRoute","onRouterReroute","comp","ghost","single","manual","onCoatSelect","onCoatDeselect","onCoatDragStart","onCoatDragEnd","onCoatEdit","onCoatBeforeEdit","onCoatRemove","onLabelRender","onLabelDragend","labelVendor","vendor","onLabelDoubletap","existing","bindSource","bindTarget","update","silent","redraw","bound","isNull","sendToFront","resumeControl","suspendControl","renderControl","startEdit","onSourceRotate","onSourceDragstart","lasso","onSourceDragmove","onSourceDragend","onSourceResize","onTargetRotate","onTargetDragstart","onTargetDragmove","onTargetDragend","onTargetResize","linkid","control","onControlStart","onControlMove","onControlEnd","snaphor","snapver","curr","conseg","ss","drag","G","N","S","W","root","tools","onVectorSelect","onVectorDeselect","pos","createTree","bisect","findIndex","swap","order","sort","KEY_TRESHOLD","SLOPE_TRESHOLD","queue","found","process","extract","indexA","indexB","minIndex","intercept","validate","lineA","lineB","alignA","alignB","ix","isOverlap","isIntersection","Plugin","activator","bboxMatrix","pathMatrix","hasShield","enable","disable","definitions","defineArrowMarker","marker","navigationKeys","CTRL","interact","mouseenter","mouseleave","isNavigation","dropzone","gesturable","unset","actions","simulate","events","act","inv","equalizeTransform","tt1","tt2","maxlength","emptyTransform","equal","stacks","keyframes","Animation","scenes","animation","100","frame","pause","stop","status","asize","scene","time","playing","applied","ssize","at","initstatus","Date","inverse","able","eq","semantic","timestamp","player","play","prog","anim","tick","paused","ease","played","repeat","g","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","frames","pickBy","times","linier","easeIn","easeOut","easeInOut","backIn","backOut","elastic","math","bounce","handleImage","handleSize","helper","handle","ow","oh","cw","ch","onHolderRender","ne","se","sw","nw","onHandleMoveStart","onHandleMove","onHandleMoveEnd","hs","hw","hh","rmatrix","oldcen","newcen","vdx","vdy","rubber","manualStart","onstart","pageX","pageY","onmove","onend","clearCollection","interaction","pointerIsDown","interacting","currentTarget","styleCursor","except","syncdrag","tdx","tdy","inertia","grid","rotation","scaling","onVectorRender","scroller","onDragStart","onDragMove","onDragEnd","onPointerMove","vbox","hbox","fixsnap","createSnapGrid","setOptions","targets","endOnly","resetSnap","action","prepared","setEventXY","startCoords","pointers","edata","axs","edx","edy","ex","ey","overlap","accept","checker","onDropValidate","ondropactivate","onDropActivate","ondropdeactivate","onDropDeactivate","ondragenter","onDragEnter","ondragleave","onDragLeave","ondrop","onDrop","edrop","edrag","dropped","dropel","dragel","offsetTop","offsetLeft","sortables","origins","guests","batch","sorting","drop","$sorter","appendchild","onItemAdded","prependchild","onSortActivate","onSortDeactivate","onSortEnter","onSortLeave","onSort","afterdrag","drage","pointe","$master","$sorting","resumeBatch","revert","ta","tb","orders","swaps","repos","sbox","suspendBatch","enroll","release","onItemRender","onItemResize","onItemDragStart","onItemDragEnd","onItemCollect","onItemDecollect","suppress","bsize","relatedTarget","CLS_CONNECT_VALID","CLS_CONNECT_INVALID","CLS_CONNECT_HOVER","wiring","linking","pole","invalidateTrans","canConnect","refbox","isSource","isTarget","History","limit","lim","console","log","go","zoomRange","panEnabled","zoomEnabled","showToolbox","caching","scrolling","steps","zooming","zoom","toolbox","panning","moveHandler","stopHandler","onMouseWheel","revalidate","zoomReset","zoomIn","zoomOut","currentZoom","zoomType","factor","matrixScale","onBeforeZoom","onZoom","scroll","onBeforeScroll","onScroll","vscroll","hscroll","deltaMode","deltaX","deltaY","altKey","onPointerStop","leading","trailing","pointer","visits","cropping","spath","scrop","tpath","tcrop","build","coord","crop","deactivateAll","deactivate","toggle","drawing","draw","coords","MIN_BOX_WIDTH","MIN_BOX_HEIGHT","OFFSET_TRESHOLD","editing","commitHandler","onDoubleTap","snapped","clients","stubx","stuby","dragStartHandler","dragEndHandler","removeHandler","osnaps","ostart","onClientDragStart","onClientDragEnd","onClientRemove","showStub","hideStub","stub","origX","origY","snapX","snapY","Shape","manager","imatrix","onLabelEdit","onResize","onRemove","activity","Start","Final","inner","Action","Fork","Join","Lane","header","encoded","encodeURIComponent","String","fromCharCode","decodeURIComponent","download","uri","msSaveOrOpenBlob","blob","createBlob","href","display","body","appendChild","click","removeChild","open","byteString","atob","mimeString","buffer","ArrayBuffer","intArray","Uint8Array","Blob","exportImage","createDataURI","onload","canvas","createElement","getContext","drawImage","toDataURL","encoder","compression","onerror","sty","xml","cloned","getElementStyles","innerHTML","insertBefore","XMLDOC","btoa","rules","rule","styles","styleSheets","cssRules","selectorText","querySelector","cssText","exportDataURI","exportSVG","exportJPEG","diagram","Diagram","Command","add","undo","redo","Modeler","export","import","model","Parser","Rules","popup","Dialog","opened","content","buttons","baseClass","backdrop","backdropClick","then","close","backdropUser","margin-top","margin-left"],"mappings":"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","file":"graph.min.js","sourcesContent":["\r\n(function(){\r\n\r\n    /**\r\n     * Lodash polyfill\r\n     */\r\n\r\n    _.float = parseFloat;\r\n\r\n    _.gcd = function(array) {\r\n        if (array.length === 2) {\r\n            var a = array[0], b = array[1], t;\r\n\r\n            while (b > 0) {\r\n                t = b;\r\n                b = a % b;\r\n                a = t;\r\n            }\r\n\r\n            return a;\r\n        } else {\r\n            var r = array[0], len = array.length, i;\r\n            for (i = 1; i < len; i++) {\r\n                r = _.gcd([r, array[i]]);\r\n            }\r\n            return r;\r\n        }\r\n    };\r\n\r\n    _.lcm = function(array) {\r\n        if (array.length === 2) {\r\n            var a = array[0], b = array[1];\r\n            return a * (b / _.gcd([a, b]));\r\n        } else {\r\n            var r = array[0], len = array.length, i;\r\n            for (i = 1; i < len; i++) {\r\n                r = _.lcm([r, array[i]]);\r\n            }\r\n            return r;\r\n        }\r\n    };\r\n\r\n    _.format = function() {\r\n        var params = _.toArray(arguments),\r\n            format = params.shift();\r\n        return format.replace(/{(\\d+)}/g, function(match, number) {\r\n            return typeof params[number] != 'undefined'\r\n                ? params[number]\r\n                : match;\r\n        });\r\n    }\r\n\r\n    _.insert = function(array, index, insert) {\r\n        Array.prototype.splice.apply(array, [index, 0].concat(insert));\r\n        return array;\r\n    };\r\n\r\n    /**\r\n     * Array move (swap)\r\n     * http://stackoverflow.com/questions/5306680/move-an-array-element-from-one-array-position-to-another/5306832#5306832\r\n     */\r\n    _.move = function(array, from, to) {\r\n        var size = array.length;\r\n        \r\n        while(from < 0) {\r\n            from += size;\r\n        }\r\n        \r\n        while(to < 0) {\r\n            to += size;\r\n        }\r\n\r\n        if (to >= size) {\r\n            var k = to - size;\r\n            while((k--) + 1) {\r\n                array.push(undefined);\r\n            }\r\n        }\r\n\r\n        array.splice(to, 0, array.splice(from, 1)[0]);\r\n        return array;\r\n    };\r\n\r\n    /**\r\n     * Array permutation\r\n     * https://github.com/lodash/lodash/issues/1701\r\n     */\r\n    _.permute = function(array, permuter) {\r\n        if(_.isFunction(permuter)) {\r\n            return _.reduce(array, function(result, value, key){\r\n                result[permuter(key, value)] = value;\r\n                return result;\r\n            }, []);\r\n        } else if (_.isArray(permuter)) {\r\n            return _.reduce(permuter, function(result, value, key){\r\n                result[key] = array[permuter[key]];\r\n                return result;\r\n            }, []);\r\n        }\r\n        return array;\r\n    };  \r\n    \r\n    /**\r\n     *  Bisector\r\n     */\r\n    _.bisector = function(f) {\r\n        return {\r\n            left: function(a, x, lo, hi) {\r\n                if (arguments.length < 3) lo = 0;\r\n                if (arguments.length < 4) hi = a.length;\r\n                while (lo < hi) {\r\n                    var mid = lo + hi >>> 1;\r\n                    if (f.call(a, a[mid], mid) < x) lo = mid + 1; else hi = mid;\r\n                }\r\n                return lo;\r\n            },\r\n            right: function(a, x, lo, hi) {\r\n                if (arguments.length < 3) lo = 0;\r\n                if (arguments.length < 4) hi = a.length;\r\n                while (lo < hi) {\r\n                    var mid = lo + hi >>> 1;\r\n                    if (x < f.call(a, a[mid], mid)) hi = mid; else lo = mid + 1;\r\n                }\r\n                return lo;\r\n            }\r\n        };\r\n    };\r\n    \r\n    /** \r\n     *  Sorter\r\n     */\r\n    _.ascendingKey = function(key) {\r\n        return typeof key == 'function' ? function (a, b) {\r\n            return key(a) < key(b) ? -1 : key(a) > key(b) ? 1 : key(a) >= key(b) ? 0 : NaN;\r\n        } : function (a, b) {\r\n            return a[key] < b[key] ? -1 : a[key] > b[key] ? 1 : a[key] >= b[key] ? 0 : NaN;\r\n        };\r\n    };\r\n\r\n    _.isIE = function() {\r\n        var na = global.navigator,\r\n            ua = (na && na.userAgent || '').toLowerCase(),\r\n            ie = ua.indexOf('MSIE ');\r\n\r\n        if (ie > 0 || !!ua.match(/Trident.*rv\\:11\\./)) {\r\n            return parseInt(ua.substring(ie + 5, ua.indexOf('.', ie)));\r\n        }\r\n        return false;\r\n    };\r\n\r\n}());","\r\n//////////////////////////////////////////////////////////////////\r\n/*\r\n * Graph - SVG Library\r\n * Documentation visit: https://github.com/londomloto/graph\r\n *\r\n * @author londomloto <roso.sasongko@gmail.com>\r\n * @author londomloto <roso@kct.co.id>\r\n */\r\n//////////////////////////////////////////////////////////////////\r\n\r\n(function(){\r\n\r\n    var GLOBAL = typeof window != 'undefined' && \r\n                 window.Math == Math \r\n                    ? window \r\n                    : (typeof self != 'undefined' && self.Math == Math \r\n                        ? self \r\n                        : Function('return this')());\r\n\r\n    var DOCUMENT = document;\r\n\r\n    /**\r\n     * Size for cached result\r\n     */\r\n    var CACHE_SIZE = 100;\r\n\r\n    /**\r\n     * Size for memoize function\r\n     */\r\n    var MEMO_SIZE = 1000;\r\n\r\n    //--------------------------------------------------------------------//\r\n    \r\n    var readyFn = [];\r\n\r\n    /**\r\n     * Banner\r\n     */\r\n    GLOBAL.Graph = function(ready) {\r\n        readyFn.push(ready);\r\n    };\r\n\r\n    Graph.VERSION = '1.0.0';\r\n    \r\n    Graph.AUTHOR = 'Kreasindo Cipta Teknologi';\r\n    \r\n    /**\r\n     * Config\r\n     */\r\n    Graph.cached = {};\r\n\r\n    Graph.config = {\r\n        base: './',\r\n        svg: {\r\n            version: '1.1'\r\n        },\r\n        xmlns: {\r\n            svg: 'http://www.w3.org/2000/svg',\r\n            xlink: 'http://www.w3.org/1999/xlink',\r\n            html: 'http://www.w3.org/1999/xhtml'\r\n        },\r\n        font: {\r\n            family: 'Segoe UI',\r\n            size: '12px',\r\n            line: 1\r\n        }\r\n    };\r\n\r\n    Graph.setup = function(name, value) {\r\n        if (_.isPlainObject(name)) {\r\n            _.extend(Graph.config, name);\r\n        } else {\r\n            Graph.config[name] = value;\r\n        }\r\n    };\r\n\r\n    /*\r\n    Graph.toString = function() {\r\n        return 'SVG Library presented by ' + Graph.AUTHOR;\r\n    }\r\n    */\r\n\r\n    /**\r\n     * String params\r\n     */\r\n    Graph.string = {\r\n        ID_VECTOR: 'graph-vector-id',\r\n        ID_LINK: 'graph-link-id',\r\n        ID_PORT: 'graph-port-id',\r\n\r\n        CLS_VECTOR_SVG: 'graph-paper',\r\n        CLS_VECTOR_RECT: 'graph-elem graph-elem-rect',\r\n        CLS_VECTOR_PATH: 'graph-elem graph-elem-path',\r\n        CLS_VECTOR_TEXT: 'graph-elem graph-elem-text',\r\n        CLS_VECTOR_LINE: 'graph-elem graph-elem-line',\r\n        CLS_VECTOR_GROUP: 'graph-elem graph-elem-group',\r\n        CLS_VECTOR_IMAGE: 'graph-elem graph-elem-image',\r\n        CLS_VECTOR_CIRCLE: 'graph-elem graph-elem-circle',\r\n        CLS_VECTOR_ELLIPSE: 'graph-elem graph-elem-ellipse',\r\n        CLS_VECTOR_POLYGON: 'graph-elem graph-elem-polygon',\r\n        CLS_VECTOR_POLYLINE: 'graph-elem graph-elem-polyline',\r\n        CLS_VECTOR_VIEWPORT: 'graph-viewport',\r\n\r\n        CLS_LINK_HEAD: 'graph-link-head',\r\n        CLS_LINK_TAIL: 'graph-link-tail'\r\n    };\r\n\r\n    /**\r\n     * Language & Core helper\r\n     */\r\n    Graph.isHTML = function(obj) {\r\n        return obj instanceof HTMLElement;\r\n    };\r\n\r\n    Graph.isSVG = function(obj) {\r\n        return obj instanceof SVGElement;\r\n    };\r\n\r\n    Graph.isElement = function(obj) {\r\n        return obj instanceof Graph.dom.Element;\r\n    };\r\n\r\n    Graph.isMac = function() {\r\n        return (/mac/i).test(navigator.platform);    \r\n    };\r\n\r\n    Graph.ns = function(namespace) {\r\n        var cached = Graph.lookup('Graph', 'ns', namespace);\r\n\r\n        if (cached.clazz) {\r\n            return cached.clazz;\r\n        }\r\n\r\n        var parts = _.split(namespace, '.'),\r\n            parent = GLOBAL,\r\n            len = parts.length,\r\n            current,\r\n            i;\r\n\r\n        for (i = 0; i < len; i++) {\r\n            current = parts[i];\r\n            parent[current] = parent[current] || {};\r\n            parent = parent[current];\r\n        }\r\n\r\n        if (_.isFunction(parent)) {\r\n            cached.clazz = parent;\r\n        }\r\n\r\n        return parent;\r\n    };\r\n\r\n    Graph.uuid = function() {\r\n        // credit: http://stackoverflow.com/posts/2117523/revisions\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n            var r = Math.random() * 16|0;\r\n            var v = c == 'x' ? r : (r&0x3|0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Simple hashing\r\n     */\r\n    Graph.hash = function(str) {\r\n        var hash = 0, chr, len, i;\r\n        \r\n        if ( ! str.length) {\r\n            return hash;\r\n        }\r\n\r\n        for (i = 0, len = str.length; i < len; i++) {\r\n            chr   = str.charCodeAt(i);\r\n            hash  = ((hash << 5) - hash) + chr;\r\n            hash |= 0;\r\n        }\r\n\r\n        return hash;\r\n    };\r\n\r\n    // prepare for prototypal factory\r\n    Graph.create = function(superclass, props) {\r\n        \r\n    };\r\n\r\n    Graph.factory = function(clazz, args) {\r\n        args = [clazz].concat(args);\r\n        return new (Function.prototype.bind.apply(clazz, args));\r\n    };\r\n\r\n    Graph.expand = function(target, source, scope) {\r\n        var tproto = target.constructor.prototype,\r\n            sproto = source.constructor.prototype;\r\n\r\n        scope = _.defaultTo(source);\r\n\r\n        _.forOwn(sproto, function(value, key){\r\n            if (_.isFunction(value) && _.isUndefined(tproto[key])) {\r\n                (function(key, value){\r\n                    tproto[key] = _.bind(value, scope);\r\n                }(key, value));    \r\n            }\r\n        });\r\n    };\r\n\r\n    Graph.extend = function(clazz, props) {\r\n        if (_.isPlainObject(clazz)) {\r\n            props = clazz;\r\n            clazz = Graph.lang.Class;\r\n        }\r\n        return clazz.extend(props);\r\n    };\r\n\r\n    Graph.mixin = function(target, source) {\r\n        this.extend(target, source, target);\r\n    };\r\n\r\n    Graph.lookup = function(group, token) {\r\n        var args = _.toArray(arguments), cached, credit;\r\n\r\n        group  = args.shift();\r\n        token  = _.join(args, '|');\r\n        cached = Graph.cached[group] = Graph.cached[group] || {};\r\n        credit = group == 'Regex.event' ? null : CACHE_SIZE;\r\n\r\n        if (cached[token]) {\r\n            cached[token].credit = credit;\r\n        } else {\r\n            cached[token] = {\r\n                credit: credit,\r\n                remove: (function(group, token){\r\n                    return function() {\r\n                        delete Graph.cached[group][token];    \r\n                    };\r\n                }(group, token))\r\n            }\r\n        }\r\n\r\n        _.debounce(function(t){\r\n            _.forOwn(cached, function(v, k){\r\n                if (k != t) {\r\n                    if (cached[k].credit !== null) {\r\n                        cached[k].credit--;\r\n                        if (cached[k].credit <= 0) {\r\n                            delete cached[k];\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        })(token);\r\n\r\n        return cached[token];\r\n    };\r\n\r\n    Graph.memoize = function(func) {\r\n        return function memo() {\r\n            var param = _.toArray(arguments),\r\n                token = _.join(param, \"\\u2400\"),\r\n                cache = memo.cache = memo.cache || {},\r\n                saved = memo.saved = memo.saved || [];\r\n\r\n            if ( ! _.isUndefined(cache[token])) {\r\n                for (var i = 0, ii = saved.length; i < ii; i++) {\r\n                    if (saved[i] == token) {\r\n                        saved.push(saved.splice(i, 1)[0]);\r\n                        break;\r\n                    }\r\n                }\r\n                return cache[token];\r\n            }\r\n\r\n            if (saved.length >= MEMO_SIZE) {\r\n                delete cache[saved.shift()];\r\n            }\r\n\r\n            saved.push(token);\r\n            cache[token] = func.apply(this, param);\r\n\r\n            return cache[token];\r\n        }\r\n    };\r\n\r\n    Graph.defer = function() {\r\n        return $.Deferred();\r\n    };\r\n\r\n    Graph.when = $.when;\r\n\r\n    /**\r\n     * Expand namespaces\r\n     */\r\n    Graph.ns('Graph.lang');\r\n    Graph.ns('Graph.collection');\r\n    Graph.ns('Graph.registry');\r\n    Graph.ns('Graph.data');\r\n    Graph.ns('Graph.diagram');\r\n    Graph.ns('Graph.popup');\r\n    \r\n\r\n    /**\r\n     * Vector\r\n     */\r\n    Graph.paper = function(width, height, options) {\r\n        return Graph.factory(Graph.svg.Paper, [width, height, options]);\r\n    };\r\n\r\n    Graph.svg = function(type) {\r\n        var args = _.toArray(arguments), svg;\r\n\r\n        type = args.shift();\r\n        svg = Graph.factory(Graph.svg[_.capitalize(type)], args);\r\n        args = null;\r\n        \r\n        return svg;\r\n    };\r\n\r\n    Graph.shape = function(names, options) {\r\n        var clazz, shape, chunk;\r\n\r\n        chunk = names.lastIndexOf('.');\r\n        names = names.substr(0, chunk) + '.' + _.capitalize(names.substr(chunk + 1));\r\n        clazz = Graph.ns('Graph.shape.' + names);\r\n        shape = Graph.factory(clazz, options);\r\n\r\n        chunk = names = clazz = null;\r\n        return shape;\r\n    };\r\n\r\n    Graph.ns('Graph.shape.activity');\r\n\r\n    /**\r\n     * Layout\r\n     */\r\n    Graph.layout = function(type) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Router\r\n     */\r\n    Graph.router = function(type) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Link / Connector\r\n     */\r\n    Graph.link = function(type) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Plugin\r\n     */\r\n    Graph.plugin = function(proto) {\r\n\r\n    };\r\n    \r\n    /**\r\n     * Topic\r\n     */\r\n    Graph.topic = {\r\n        subscribers: {\r\n\r\n        },\r\n        topics: {\r\n\r\n        },\r\n        publish: function(topic, message, scope) {\r\n            var subs = Graph.topic.subscribers,\r\n                lsnr = subs[topic] || [];\r\n\r\n            _.forEach(lsnr, function(handler){\r\n                (function(){\r\n                    handler.call(null, message, scope);\r\n                }(handler));\r\n            });\r\n        },\r\n\r\n        subscribe: function(topic, handler) {\r\n\r\n            if (_.isPlainObject(topic)) {\r\n                var unsub = [];\r\n\r\n                _.forOwn(topic, function(h, t){\r\n                    (function(t, h){\r\n                        var s = Graph.topic.subscribe(t, h);\r\n                        unsub.push({topic: t, sub: s});\r\n                    }(t, h));\r\n                });\r\n\r\n                return {\r\n                    unsubscribe: (function(unsub){\r\n                        return function(topic) {\r\n                            if (topic) {\r\n                                var f = _.find(unsub, function(u){\r\n                                    return u.topic == topic;\r\n                                });\r\n                                f && f.sub.unsubscribe();\r\n                            } else {\r\n                                _.forEach(unsub, function(u){\r\n                                    u.sub.unsubscribe();\r\n                                });\r\n                            }\r\n                        };\r\n                    }(unsub))\r\n                };\r\n            }\r\n\r\n            var subs = Graph.topic.subscribers, data;\r\n\r\n            subs[topic] = subs[topic] || [];\r\n            subs[topic].push(handler);\r\n\r\n            return {\r\n                unsubscribe: (function(topic, handler){\r\n                    return function() {\r\n                        Graph.topic.unsubscribe(topic, handler);\r\n                    };\r\n                }(topic, handler))\r\n            };\r\n        },\r\n\r\n        unsubscribe: function(topic, handler) {\r\n            var subs = Graph.topic.subscribers, \r\n                lsnr = subs[topic] || [];\r\n\r\n            for (var i = lsnr.length - 1; i >= 0; i--) {\r\n                if (lsnr[i] === handler) {\r\n                    lsnr.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ///////////////////////// LISTEN DOCUMENT READY ////////////////////////\r\n    \r\n    (function(doc, evt){\r\n        var timer;\r\n\r\n        var handler = function() {\r\n            doc.removeEventListener(evt, handler, false);\r\n            doc.readyState = 'complete';\r\n        };\r\n\r\n        var loaded = function() {\r\n            _.forEach(readyFn, function(f){\r\n                f();\r\n            });\r\n        };\r\n\r\n        var inspect = function() {\r\n            if (doc.readyState != 'complete') {\r\n                timer = _.delay(function(){\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n\r\n                    inspect();\r\n                }, 10);\r\n            } else {\r\n                loaded();\r\n            }\r\n        };\r\n\r\n        if (doc.readyState == null && doc.addEventListener) {\r\n            doc.addEventListener(evt, handler, false);\r\n            doc.readyState = 'loading';\r\n        }\r\n\r\n        inspect();\r\n        \r\n    }(document, 'DOMContentLoaded'));\r\n\r\n    ///////////////////////////////////////////////////////////////////////\r\n    \r\n}());","\r\n(function(){\r\n\r\n    var REGEX_PATH_STR = /([achlmrqstvz])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig;\r\n    var REGEX_PATH_VAL = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/ig;\r\n    var REGEX_PATH_CMD = /,?([achlmqrstvxz]),?/gi;\r\n    var REGEX_POLY_STR = /(\\-?[0-9.]+)\\s*,\\s*(\\-?[0-9.]+)/g;\r\n    var REGEX_TRAN_STR = /((matrix|translate|rotate|scale|skewX|skewY)*\\((\\-?\\d+\\.?\\d*e?\\-?\\d*[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+\\))+/g;\r\n    var REGEX_TRAN_SUB = /[\\w\\.\\-]+/g;\r\n    var REGEX_POLY_STR = /(\\-?[0-9.]+)\\s*,\\s*(\\-?[0-9.]+)/g;\r\n    \r\n    var CONVEX_RADIUS  = 10;\r\n    var SMOOTH_RADIUS  = 6;\r\n\r\n    /**\r\n     * Legendre Gauss (Quadratic Curve)\r\n     * https://pomax.github.io/bezierinfo/legendre-gauss.html\r\n     */\r\n    \r\n    var LEGENDRE_N = 12;\r\n    var LEGENDRE_T = [-0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873, -0.7699, 0.7699, -0.9041, 0.9041, -0.9816, 0.9816];\r\n    var LEGENDRE_C = [ 0.2491, 0.2491,  0.2335, 0.2335,  0.2032, 0.2032,  0.1601, 0.1601,  0.1069, 0.1069,  0.0472, 0.0472];\r\n    \r\n    Graph.util = {\r\n        \r\n        // --------MATH-------- //\r\n        \r\n        deg: function(rad) {\r\n            return Math.round ((rad * 180 / Math.PI % 360) * 1000) / 1000;\r\n        },  \r\n        \r\n        rad: function(deg) {\r\n            return deg % 360 * Math.PI / 180;\r\n        },\r\n        \r\n        angle: function(a, b) {\r\n            var dx = a.x - b.x,\r\n                dy = a.y - b.y;\r\n\r\n            if ( ! dx && ! dy) {\r\n                return 0;\r\n            }\r\n\r\n            return (180 + Math.atan2(-dy, -dx) * 180 / Math.PI + 360) % 360;\r\n        },\r\n\r\n        theta: function(a, b) {\r\n            var dy = -(b.y - a.y),\r\n                dx =   b.x - a.x;\r\n\r\n            var rad, deg;\r\n\r\n            if (dy.toFixed(10) == 0 && dx.toFixed(10) == 0) {\r\n                rad = 0;\r\n            } else {\r\n                rad = Math.atan2(dy, dx);\r\n            }\r\n\r\n            if (rad < 0) {\r\n                rad = 2 * Math.PI + rad;\r\n            }\r\n\r\n            deg = 180 * rad / Math.PI;\r\n            deg = (deg % 360) + (deg < 0 ? 360 : 0);\r\n\r\n            return deg;\r\n        },\r\n\r\n        taxicab: function(a, b) {\r\n            var dx = a.x - b.x,\r\n                dy = a.y - b.y;\r\n            return dx * dx + dy * dy;\r\n        },\r\n\r\n        /**\r\n         * Get vector hypotenuse (magnitude)\r\n         */\r\n        hypo: function(va, vb) {\r\n            return Math.sqrt(va * va + vb * vb);\r\n        },\r\n        \r\n        /**\r\n         * Get sign of number\r\n         */\r\n        sign: function(num) {\r\n            return num < 0 ? -1 : 1;\r\n        },\r\n            \r\n        quadrant: function(x, y) {\r\n            return x >= 0 && y >= 0 ? 1 : (x >= 0 && y < 0 ? 4 : (x < 0 && y < 0 ? 3 : 2));\r\n        },\r\n        \r\n        // slope\r\n        gradient: function(a, b) {\r\n            // parallel\r\n            if (b.x == a.x) {\r\n                return b.y > a.y ? Infinity : -Infinity\r\n            } else if (b.y == a.y) {\r\n                return b.x > a.x ? 0 : -0;\r\n            } else {\r\n                return (b.y - a.y) / (b.x - a.x);\r\n            }\r\n        },\r\n        \r\n        snapValue: function (value, snaps, range) {\r\n            range = _.defaultTo(range, 10);\r\n            \r\n            if (_.isArray(snaps)) {\r\n                var i = snaps.length;\r\n                while(i--) {\r\n                    if (Math.abs(snaps[i] - value) <= range) {\r\n                        return snaps[i];\r\n                    }\r\n                }\r\n            } else {\r\n                snaps = +snaps;\r\n                \r\n                var rem = value % snaps;\r\n                \r\n                if (rem < range) {\r\n                    return value - rem;\r\n                }\r\n                \r\n                if (rem > value - range) {\r\n                    return value - rem + snaps;\r\n                }\r\n            }\r\n            return value;\r\n        },\r\n        \r\n        // --------POINT-------- //\r\n        \r\n        pointbox: function(x, y, padding) {\r\n            if (_.isPlainObject(x)) {\r\n                padding = y;\r\n                y = x.y;\r\n                x = x.x;\r\n            }\r\n            \r\n            padding = padding || 0;\r\n            \r\n            var x1 = x - padding,\r\n                y1 = y - padding,\r\n                x2 = x + padding,\r\n                y2 = y + padding,\r\n                width = x2 - x1,\r\n                height = y2 - y1;\r\n            \r\n            return {\r\n                x: x1,\r\n                y: y1,\r\n                x2: x2,\r\n                y2: y2,\r\n                width: width,\r\n                height: height\r\n            };\r\n        },\r\n\r\n        pointAlign: function(a, b, treshold) {\r\n            if ( ! a || ! b) {\r\n                return false;\r\n            }\r\n            \r\n            treshold = treshold || 2;\r\n            \r\n            if (Math.abs(a.x - b.x) <= treshold) {\r\n                return 'h';\r\n            };\r\n\r\n            if (Math.abs(a.y - b.y) <= treshold) {\r\n                return 'v';\r\n            }\r\n\r\n            return false;\r\n        },\r\n        \r\n        pointDistance: function (a, b) {\r\n            if ( ! a || ! b) {\r\n                return -1;\r\n            }\r\n            return Graph.util.hypo((a.x - b.x), (a.y - b.y));\r\n        },\r\n        \r\n        isPointEquals: function (a, b) {\r\n            return a.x == b.x && a.y == b.y;\r\n        },\r\n        \r\n        // http://stackoverflow.com/a/907491/412190\r\n        isPointOnLine: function(a, b, p) {\r\n            if ( ! a || ! b || ! p) {\r\n                return false;\r\n            }\r\n            \r\n            var det = (b.x - a.x) * (p.y - a.y) - (b.y - a.y) * (p.x - a.x),\r\n                dis = Graph.util.pointDistance(a, b);\r\n            \r\n            return Math.abs(det / dis) < 2;\r\n        },\r\n        \r\n        polar2point: function(distance, radian, origin) {\r\n            var x, y, d;\r\n\r\n            if (_.isUndefined(origin)) {\r\n                origin = Graph.point(0, 0);\r\n            }\r\n\r\n            x = Math.abs(distance * Math.cos(radian));\r\n            y = Math.abs(distance * Math.sin(radian));\r\n            d = Graph.util.deg(radian);\r\n\r\n            if (d < 90) {\r\n                y = -y;\r\n            } else if (d < 180) {\r\n                x = -x;\r\n                y = -y;\r\n            } else if (d < 270) {\r\n                x = -x;\r\n            }\r\n\r\n            return Graph.point(origin.props.x + x, origin.props.y + y);\r\n        },\r\n        \r\n        // --------BOUNDING-------- //\r\n\r\n        isBoxContainsPoint: function(box, p) {\r\n            return p.x >= box.x && p.x <= box.x2 && p.y >= box.y && p.y <= box.y2;\r\n        },\r\n\r\n        isBoxIntersect: function(a, b) {\r\n            var fn = Graph.util.isBoxContainsPoint;\r\n\r\n            return fn(b, {x: a.x,  y: a.y})  ||\r\n                   fn(b, {x: a.x2, y: a.y})  || \r\n                   fn(b, {x: a.x,  y: a.y2}) || \r\n                   fn(b, {x: a.x2, y: a.y2}) || \r\n                   fn(a, {x: b.x,  y: b.y})  ||\r\n                   fn(a, {x: b.x2, y: b.y})  || \r\n                   fn(a, {x: b.x,  y: b.y2}) || \r\n                   fn(a, {x: b.x2, y: b.y2}) || \r\n                   (a.x < b.x2 && a.x > b.x  ||  b.x < a.x2 && b.x > a.x) && \r\n                   (a.y < b.y2 && a.y > b.y  ||  b.y < a.y2 && b.y > a.y);\r\n        },\r\n\r\n        boxOrientation: function(box1, box2, dx, dy) {\r\n            // treshold\r\n            dx = _.defaultTo(dx, 0);\r\n            dy = _.defaultTo(dy, dx);\r\n            \r\n            var top = box1.y2 + dy <= box2.y,\r\n                rgt = box1.x  - dx >= box2.x2,\r\n                btm = box1.y  - dy >= box2.y2,\r\n                lft = box1.x2 + dx <= box2.x;\r\n\r\n            var ver = top ? 'top' : (btm ? 'bottom' : null),\r\n                hor = lft ? 'left' : (rgt ? 'right' : null);\r\n\r\n            if (hor && ver) {\r\n                return ver + '-' + hor;\r\n            } else {\r\n                return hor || ver || 'intersect';\r\n            }\r\n        },\r\n        \r\n        // -------LINE------ //\r\n        \r\n        midpoint: function(a, b) {\r\n            return {\r\n                x: (a.x + b.x) / 2,\r\n                y: (a.y + b.y) / 2\r\n            };\r\n        },\r\n        \r\n        /** \r\n         * Move point `a` to `b` as far as distance \r\n         */\r\n        movepoint: function(a, b, distance) {\r\n            var tr =  Graph.util.rad(Graph.util.theta(b, a)),\r\n                dx =  Math.cos(tr) * distance,\r\n                dy = -Math.sin(tr) * distance;\r\n            \r\n            a.x += dx;\r\n            a.y += dy;\r\n            \r\n            return a;\r\n        },\r\n        \r\n        lineBendpoints: function(a, b, dir) {\r\n            var points = [],\r\n                x1 = a.x,\r\n                y1 = a.y,\r\n                x2 = b.x,\r\n                y2 = b.y;\r\n               \r\n            var xm, ym;\r\n            \r\n            dir = dir || 'h:h';\r\n            \r\n            if (dir == 'h:v') {\r\n                points = [\r\n                    { x: x2, y: y1 }\r\n                ];\r\n            } else if (dir == 'v:h') {\r\n                points = [\r\n                    { x: x1, y: y2 }\r\n                ];\r\n            } else if (dir == 'h:h') {\r\n                xm = Math.round((x2 - x1) / 2 + x1);\r\n                points = [\r\n                    { x: xm, y: y1 },\r\n                    { x: xm, y: y2 }\r\n                ];\r\n            } else if (dir == 'v:v') {\r\n                ym = Math.round((y2 - y1) / 2 + y1);\r\n                points = [\r\n                    { x: x1, y: ym },\r\n                    { x: x2, y: ym }\r\n                ];\r\n            } else {\r\n                points = [];\r\n            }\r\n            \r\n            return points;\r\n        },\r\n        \r\n        lineIntersection: function (x1, y1, x2, y2, x3, y3, x4, y4) {\r\n            if (\r\n                Math.max(x1, x2) < Math.min(x3, x4) ||\r\n                Math.min(x1, x2) > Math.max(x3, x4) ||\r\n                Math.max(y1, y2) < Math.min(y3, y4) ||\r\n                Math.min(y1, y2) > Math.max(y3, y4)\r\n            ) {\r\n                return null;\r\n            }\r\n\r\n            var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\r\n                ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\r\n                denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\r\n\r\n            if ( ! denominator) {\r\n                return null;\r\n            }\r\n\r\n            var px = nx / denominator,\r\n                py = ny / denominator,\r\n                px2 = +px.toFixed(2),\r\n                py2 = +py.toFixed(2);\r\n\r\n            if (\r\n                px2 < +Math.min(x1, x2).toFixed(2) ||\r\n                px2 > +Math.max(x1, x2).toFixed(2) ||\r\n                px2 < +Math.min(x3, x4).toFixed(2) ||\r\n                px2 > +Math.max(x3, x4).toFixed(2) ||\r\n                py2 < +Math.min(y1, y2).toFixed(2) ||\r\n                py2 > +Math.max(y1, y2).toFixed(2) ||\r\n                py2 < +Math.min(y3, y4).toFixed(2) ||\r\n                py2 > +Math.max(y3, y4).toFixed(2)\r\n            ) {\r\n                return null;\r\n            }\r\n\r\n            return {\r\n                x: px, \r\n                y: py\r\n            };\r\n        },\r\n        \r\n        perpendicular: function(a, b, h) {\r\n            var m1, m2, tt, hp;\r\n\r\n            m1 = Graph.util.gradient(a, b);\r\n            m2 = m1 === 0 ? 0 : ( -1 / m1 );\r\n            tt = Math.atan(m2);\r\n            // si = Math.sin(tt),\r\n            // co = Math.cos(tt);\r\n\r\n            var hp = h * Math.cos(tt);\r\n            // var hy = h * si;\r\n\r\n            // find `middle point`\r\n            var mx = (a.x + b.x) / 2,\r\n                my = (a.y + b.y) / 2;\r\n\r\n            // find `y` intercept\r\n            var iy = my - (mx * m2)\r\n\r\n            var x3 = mx + hp,\r\n                y3 = m2 * x3 + iy;\r\n\r\n            return {\r\n                from: {\r\n                    x: mx,\r\n                    y: my\r\n                },\r\n                to: {\r\n                    x: x3,\r\n                    y: y3\r\n                }\r\n            };\r\n        },\r\n        \r\n        // -------SHAPE/PATH------ //\r\n        \r\n        points2path: function (points) {\r\n            var segments = _.map(points, function(p, i){\r\n                var cmd = i === 0 ? 'M' : 'L';\r\n                return [cmd, p.x, p.y];\r\n            });\r\n            return Graph.util.segments2path(segments);\r\n        },\r\n        \r\n        path2points: function(command) {\r\n            var segments = Graph.util.path2segments(command);\r\n            return _.map(segments, function(s, i){\r\n                if (s[0] == 'M' || s[0] == 'L') {\r\n                    return {x: s[1], y: s[2]};\r\n                } else {\r\n                    return {x: s[5], y: s[6]};\r\n                }\r\n            });\r\n        },\r\n\r\n        segments2path: function(segments) {\r\n            return _.join(segments || [], ',').replace(REGEX_PATH_CMD, '$1');\r\n        },\r\n\r\n        path2segments: function(command) {\r\n            if ( ! command) {\r\n                return [];\r\n            }\r\n\r\n            var cached = Graph.lookup('Graph.util', 'path2segments', command),\r\n                sizes = {a: 7, c: 6, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, z: 0},\r\n                segments = [];\r\n            \r\n            if (cached.segments) {\r\n                return _.cloneDeep(cached.segments);\r\n            }\r\n\r\n            command.replace(REGEX_PATH_STR, function(match, cmd, val){\r\n                var \r\n                    params = [],\r\n                    name = cmd.toLowerCase();\r\n\r\n                val.replace(REGEX_PATH_VAL, function(match, v){\r\n                    if (v) {\r\n                        params.push(+v);\r\n                    }\r\n                });\r\n\r\n                if (name == 'm' && params.length > 2) {\r\n                    segments.push(_.concat([cmd], params.splice(0, 2)));\r\n                    name = 'l';\r\n                    cmd = cmd == 'm' ? 'l' : 'L';\r\n                }\r\n\r\n                if (name == 'r') {\r\n                    segments.push(_.concat([cmd], params));\r\n                } else while (params.length >= sizes[name]) {\r\n                    segments.push(_.concat([cmd], params.splice(0, sizes[name])));\r\n                    if ( ! sizes[name]) {\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n            \r\n            cached.segments = _.cloneDeep(segments);\r\n            return segments;\r\n        },\r\n\r\n        polygon2dots: function(command) {\r\n            var array = [];\r\n            command.replace(REGEX_POLY_STR, function($0, x, y){\r\n                array.push([_.float(x), _.float(y)]);\r\n            });\r\n            return array;\r\n        },\r\n\r\n        polygon2path: function(command) {\r\n            var dots = Graph.util.polygon2dots(command);\r\n\r\n            if ( ! dots.length) {\r\n                return 'M0,0';\r\n            }\r\n            \r\n            var command = 'M' + dots[0][0] + ',' + dots[0][1];\r\n\r\n            for (var i = 1, ii = dots.length; i < ii; i++) {\r\n                command += 'L' + dots[i][0] + ',' + dots[i][1] + ',';\r\n            }\r\n            \r\n            command  = command.substring(0, command.length - 1);\r\n            command += 'Z';\r\n\r\n            return command;\r\n        },\r\n\r\n        transform2segments: Graph.memoize(function(command) {\r\n            var valid = {\r\n                matrix: true,\r\n                translate: true,\r\n                rotate: true,\r\n                scale: true,\r\n                skewX: true,\r\n                skewY: true\r\n            };\r\n\r\n            command += '';\r\n\r\n            var transform = [], matches = command.match(REGEX_TRAN_STR);\r\n\r\n            if (matches) {\r\n                _.forEach(matches, function(sub){\r\n                    var args = sub.match(REGEX_TRAN_SUB),\r\n                        name = args.shift();\r\n                    if (valid[name]) {\r\n                        args = _.map(args, function(v){ return +v; })\r\n                        transform.push([name].concat(args));    \r\n                    }\r\n                });  \r\n            }\r\n\r\n            return transform;\r\n        }),\r\n        \r\n        // --------CURVE-------- //\r\n        \r\n        curvebox: Graph.memoize(function(x0, y0, x1, y1, x2, y2, x3, y3) {\r\n            var token = _.join(arguments, '_'),\r\n                cached = Graph.lookup('Graph.util', 'curvebox', token);\r\n\r\n            token = null;\r\n\r\n            if (cached.curvebox) {\r\n                return cached.curvebox;\r\n            }\r\n\r\n            var tvalues = [],\r\n                bounds  = [[], []];\r\n\r\n            var a, b, c, t, t1, t2, b2ac, sqrtb2ac;\r\n\r\n            for (var i = 0; i < 2; ++i) {\r\n                if (i == 0) {\r\n                    b =  6 * x0 - 12 * x1 + 6 * x2;\r\n                    a = -3 * x0 +  9 * x1 - 9 * x2 + 3 * x3;\r\n                    c =  3 * x1 -  3 * x0;\r\n                } else {\r\n                    b =  6 * y0 - 12 * y1 + 6 * y2;\r\n                    a = -3 * y0 +  9 * y1 - 9 * y2 + 3 * y3;\r\n                    c =  3 * y1 -  3 * y0;\r\n                }\r\n\r\n                if (Math.abs(a) < 1e-12) {\r\n                    if (Math.abs(b) < 1e-12) {\r\n                        continue;\r\n                    }\r\n                    t = -c / b;\r\n                    if (0 < t && t < 1) {\r\n                        tvalues.push(t);\r\n                    }\r\n                    continue;\r\n                }\r\n\r\n                b2ac = b * b - 4 * c * a;\r\n                sqrtb2ac = Math.sqrt(b2ac);\r\n                \r\n                if (b2ac < 0) {\r\n                    continue;\r\n                }\r\n                \r\n                t1 = (-b + sqrtb2ac) / (2 * a);\r\n                \r\n                if (0 < t1 && t1 < 1) {\r\n                    tvalues.push(t1);\r\n                }\r\n\r\n                t2 = (-b - sqrtb2ac) / (2 * a);\r\n                \r\n                if (0 < t2 && t2 < 1) {\r\n                    tvalues.push(t2);\r\n                }\r\n            }\r\n\r\n            var x, y, j = tvalues.length,\r\n                jlen = j,\r\n                mt;\r\n\r\n            while (j--) {\r\n                t = tvalues[j];\r\n                mt = 1 - t;\r\n                bounds[0][j] = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\r\n                bounds[1][j] = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\r\n            }\r\n\r\n            bounds[0][jlen] = x0;\r\n            bounds[1][jlen] = y0;\r\n            bounds[0][jlen + 1] = x3;\r\n            bounds[1][jlen + 1] = y3;\r\n            bounds[0].length = bounds[1].length = jlen + 2;\r\n\r\n            cached.curvebox = {\r\n                min: {x: Math.min.apply(0, bounds[0]), y: Math.min.apply(0, bounds[1])},\r\n                max: {x: Math.max.apply(0, bounds[0]), y: Math.max.apply(0, bounds[1])}\r\n            };\r\n\r\n            return cached.curvebox;\r\n        }),\r\n        \r\n        curveLength: function(x1, y1, x2, y2, x3, y3, x4, y4, t) {\r\n            t = _.defaultTo(t, 1);\r\n            t = t > 1 ? 1 : t < 0 ? 0 : t;\r\n\r\n            var h = t / 2,\r\n                sum = 0;\r\n\r\n            for (var i = 0; i < LEGENDRE_N; i++) {\r\n                var ct = h * LEGENDRE_T[i] + h,\r\n\r\n                    xb = Graph.util.curvePolynom(ct, x1, x2, x3, x4),\r\n                    yb = Graph.util.curvePolynom(ct, y1, y2, y3, y4),\r\n                    co = xb * xb + yb * yb;\r\n\r\n                sum += LEGENDRE_C[i] * Math.sqrt(co);\r\n            }\r\n\r\n            return h * sum;\r\n        },\r\n\r\n        curvePolynom: function(t, n1, n2, n3, n4) {\r\n            var t1 = -3 * n1 + 9 * n2 -  9 * n3 + 3 * n4,\r\n                t2 =  t * t1 + 6 * n1 - 12 * n2 + 6 * n3;\r\n            return t * t2 - 3 * n1 + 3 * n2;\r\n        },\r\n        \r\n        curveInterval: function(x1, y1, x2, y2, x3, y3, x4, y4, length) {\r\n            if (length < 0 || Graph.util.curveLength(x1, y1, x2, y2, x3, y3, x4, y4) < length) {\r\n                return;\r\n            }\r\n\r\n            var t = 1,\r\n                step = t / 2,\r\n                t2 = t - step,\r\n                l,\r\n                e = .01;\r\n\r\n            l = Graph.util.curveLength(x1, y1, x2, y2, x3, y3, x4, y4, t2);\r\n\r\n            while (Math.abs(l - length) > e) {\r\n                step /= 2;\r\n                t2 += (l < length ? 1 : -1) * step;\r\n                l = Graph.util.curveLength(x1, y1, x2, y2, x3, y3, x4, y4, t2);\r\n            }\r\n\r\n            return t2;\r\n        },\r\n\r\n        pointAtInterval: function(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\r\n            var t1 = 1 - t,\r\n                t13 = Math.pow(t1, 3),\r\n                t12 = Math.pow(t1, 2),\r\n                t2 = t * t,\r\n                t3 = t2 * t,\r\n                x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\r\n                y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\r\n                mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\r\n                my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\r\n                nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\r\n                ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\r\n                ax = t1 * p1x + t * c1x,\r\n                ay = t1 * p1y + t * c1y,\r\n                cx = t1 * c2x + t * p2x,\r\n                cy = t1 * c2y + t * p2y,\r\n                alpha = (90 - Math.atan2(mx - nx, my - ny) * 180 / Math.PI);\r\n            \r\n            alpha = (90 - Math.atan2(nx - mx, ny - my) * 180 / Math.PI);\r\n\r\n            // (mx > nx || my < ny) && (alpha += 180);\r\n\r\n            // if (isNaN(x) || isNaN(y)) {\r\n            //     return null;\r\n            // }\r\n\r\n            return {\r\n                x: x,\r\n                y: y,\r\n                m: {x: mx, y: my},\r\n                n: {x: nx, y: ny},\r\n                start: {x: ax, y: ay},\r\n                end:   {x: cx, y: cy},\r\n                alpha: alpha\r\n            };\r\n        },\r\n\r\n        curveIntersection: function(a, b, count) {\r\n            var bon1 = Graph.util.curvebox.apply(null, a),\r\n                bon2 = Graph.util.curvebox.apply(null, b),\r\n                nres = 0,\r\n                ares = [];\r\n\r\n            var box1 = {x: bon1.min.x, y: bon1.min.y, x2: bon1.max.x, y2: bon1.max.y},\r\n                box2 = {x: bon2.min.x, y: bon2.min.y, x2: bon2.max.x, y2: bon2.max.y};\r\n\r\n            if ( ! Graph.util.isBoxIntersect(box1, box2)) {\r\n                return count ? 0 : [];\r\n            }\r\n\r\n            var l1 = Graph.util.curveLength.apply(null, a),\r\n                l2 = Graph.util.curveLength.apply(null, b);\r\n            \r\n            var // n1 = ~~(l1 / 8),\r\n                // n2 = ~~(l2 / 8),\r\n                n1 = ~~(l1 / 10),\r\n                n2 = ~~(l2 / 10),\r\n                dots1 = [],\r\n                dots2 = [],\r\n                xy = {};\r\n\r\n            var i, j, t, p;\r\n\r\n            for (i = 0; i < n1 + 1; i++) {\r\n                t = i / n1;\r\n                p = Graph.util.pointAtInterval.apply(null, a.concat([t]));\r\n                dots1.push({x: p.x, y: p.y, t: t});\r\n            }\r\n\r\n            for (i = 0; i < n2 + 1; i++) {\r\n                t = i / n2;\r\n                p = Graph.util.pointAtInterval.apply(null, b.concat([t]));\r\n                dots2.push({x: p.x, y: p.y, t: t});\r\n            }\r\n\r\n            for (i = 0; i < n1; i++) {\r\n                for (j = 0; j < n2; j++) {\r\n\r\n                    var di  = dots1[i],\r\n                        di1 = dots1[i + 1],\r\n                        dj  = dots2[j],\r\n                        dj1 = dots2[j + 1],\r\n                        ci  = Math.abs(di1.x - di.x) < .001 ? 'y' : 'x',\r\n                        cj  = Math.abs(dj1.x - dj.x) < .001 ? 'y' : 'x',\r\n                        is  = Graph.util.lineIntersection(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\r\n                    \r\n                    if (is) {\r\n                        \r\n                        if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\r\n                            continue;\r\n                        }\r\n\r\n                        xy[is.x.toFixed(4)] = is.y.toFixed(4);\r\n                        \r\n                        var t1 = di.t + Math.abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\r\n                            t2 = dj.t + Math.abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\r\n                        \r\n                        if (t1 >= 0 && t1 <= 1.001 && t2 >= 0 && t2 <= 1.001) {\r\n                            nres++;\r\n                            // ares.push(is);\r\n                            ares.push({\r\n                                x: is.x,\r\n                                y: is.y,\r\n                                t1: t1,\r\n                                t2: t2\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            return count ? nres : ares;\r\n        },\r\n        \r\n        convexSegment: function(point, prev, next, radius) {\r\n            if ( ! prev || ! next || ! point) {\r\n                return null;\r\n            }\r\n            \r\n            var d1 = Graph.util.pointDistance(point, prev),\r\n                d2 = Graph.util.pointDistance(point, next);\r\n                \r\n            radius = radius || CONVEX_RADIUS;\r\n            \r\n            if (d1 > radius && d2 > radius) {\r\n                \r\n                var c1 = Graph.util.movepoint({x: point.x, y: point.y}, prev, -radius / 2),\r\n                    c2 = Graph.util.movepoint({x: point.x, y: point.y}, next, -radius / 2),\r\n                    dr = Graph.util.pointAlign(prev, next, radius / 2);\r\n                \r\n                var cp;\r\n                \r\n                if (dr == 'h') {\r\n                    cp = {\r\n                        x: point.x - radius, \r\n                        y: point.y\r\n                    };\r\n                } else {\r\n                    c1.y = prev.y;\r\n                    c2.y = next.y;\r\n                    cp = {\r\n                        x: point.x, \r\n                        y: point.y - radius\r\n                    };\r\n                }\r\n                \r\n                return [\r\n                    ['L', c1.x, c1.y],\r\n                    ['Q', cp.x, cp.y, c2.x, c2.y]\r\n                ];\r\n            }\r\n            \r\n            return null;\r\n        },\r\n        \r\n        smoothSegment: function(point, prev, next, radius) {\r\n            if ( ! prev || ! next || ! point) {\r\n                return null;\r\n            }\r\n            \r\n            var d1 = Graph.util.pointDistance(point, prev),\r\n                d2 = Graph.util.pointDistance(point, next);\r\n                \r\n            radius = radius || SMOOTH_RADIUS;\r\n            \r\n            if (d1 > radius && d2 > radius) {\r\n                var c1 = Graph.util.movepoint({x: point.x, y: point.y}, prev, -radius),\r\n                    c2 = Graph.util.movepoint({x: point.x, y: point.y}, next, -radius);\r\n                    \r\n                return [\r\n                    ['L', c1.x, c1.y],\r\n                    ['Q', point.x, point.y, c2.x, c2.y]\r\n                ]\r\n            }\r\n            \r\n            return null;\r\n        }\r\n        \r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    var E = Graph.lang.Error = function(message) {\r\n        this.message = message;\r\n\r\n        var err = new Error();\r\n        this.stack = err.stack;\r\n\r\n        err = null;\r\n    };\r\n    \r\n    Object.setPrototypeOf(E, Error);\r\n\r\n    E.prototype = Object.create(Error.prototype);\r\n    E.prototype.name = \"Graph.lang.Error\";\r\n    E.prototype.message = \"\";\r\n    E.prototype.constructor = E;\r\n\r\n    ///////// SHORTCUT /////////\r\n    \r\n    Graph.error = function(message) {\r\n        return new Graph.lang.Error(message);\r\n    };\r\n\r\n}());","\r\n(function(_, $){\r\n\r\n    var E = Graph.lang.Event = function(type, data){\r\n        this.type = type;\r\n        this.init(data);\r\n    };\r\n\r\n    E.toString = function() {\r\n        return 'function(type, data)';\r\n    };\r\n\r\n    _.extend(E.prototype, {\r\n        \r\n        cancelBubble: false,\r\n        defaultPrevented: false,\r\n\r\n        // sync with `interactjs`\r\n        propagationStopped: false,\r\n        immediatePropagationStopped: false,\r\n\r\n        originalData: null,\r\n        \r\n        init: function(data) {\r\n            if (data) {\r\n                this.originalData = data;    \r\n                _.assign(this, data || {});\r\n            }\r\n        },\r\n\r\n        stopPropagation: function() {\r\n            this.cancelBubble = this.propagationStopped = true;\r\n        },\r\n\r\n        stopImmediatePropagation: function() {\r\n            this.immediatePropagationStopped = this.propagationStopped = true;\r\n        },\r\n\r\n        preventDefault: function() {\r\n            this.defaultPrevented = true;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.lang.Event';\r\n        }\r\n    });\r\n\r\n    ///////// SHORTCUT /////////\r\n    \r\n    Graph.event = function(type, data) {\r\n        return new Graph.lang.Event(type, data);\r\n    };\r\n    \r\n    _.extend(Graph.event, {\r\n\r\n        ESC: 27,\r\n        ENTER: 13,\r\n        DELETE: 46,\r\n        SHIFT: 16,\r\n\r\n        fix: function(event) {\r\n            return $.event.fix(event);\r\n        },\r\n\r\n        original: function(event) {\r\n            return event.originalEvent || event;\r\n        },\r\n\r\n        position: function(event) {\r\n            return {\r\n                x: event.clientX,\r\n                y: event.clientY\r\n            };\r\n        },\r\n        \r\n        relative: function(event, vector) {\r\n\r\n            var position = Graph.event.position(event),\r\n                matrix = vector.matrix().clone().invert(),\r\n                relative = {\r\n                    x: matrix.x(position.x, position.y),\r\n                    y: matrix.y(position.x, position.y)\r\n                };\r\n\r\n            matrix = null;\r\n\r\n            return relative;\r\n        },\r\n\r\n        isPrimaryButton: function(event) {\r\n            var original = Graph.event.original(event);\r\n            return ! original.button;\r\n        },\r\n\r\n        hasPrimaryModifier: function(event) {\r\n            if ( ! Graph.event.isPrimaryButton(event)) {\r\n                return false;\r\n            }\r\n            var original = Graph.event.original(event);\r\n            return Graph.isMac() ? original.metaKey : original.ctrlKey;\r\n        },\r\n\r\n        hasSecondaryModifier: function(event) {\r\n            var original = Graph.event.original(event);\r\n            return Graph.event.isPrimaryButton(event) && original.shiftKey;\r\n        }\r\n    });\r\n    \r\n}(_, jQuery));","\r\n(function(){\r\n    \r\n    var initializing = false;\r\n    // var inherit = /xyz/.test(function(){ xyz; }) ? /\\$super/ : /.*/;\r\n    var Class = Graph.lang.Class = function() {};\r\n\r\n    Class.extend = function (config) {\r\n        var $super, proto, name, value, defaults;\r\n        \r\n        $super = this.prototype;\r\n        defaults = {};\r\n        \r\n        initializing = true;\r\n        \r\n        // proto = new this();\r\n        proto = Object.create($super);\r\n\r\n        initializing = false;\r\n        \r\n        var name;\r\n\r\n        for (name in config) {\r\n            value = config[name];\r\n            if ( ! _.isFunction(value)) {\r\n\r\n                proto[name] = value;\r\n                defaults[name] = value;\r\n                \r\n            } else {\r\n                proto[name] = value;\r\n\r\n                // NOTE: perfomance penalty!!!\r\n                // ---------------------------\r\n                // proto[name] = _.isFunction($super[name])  && inherit.test(value) \r\n                //     ? (function(name, func){\r\n                //         return function() {\r\n                //             var tmp, ret;\r\n                //             tmp = this.$super;\r\n                //             this.$super = $super[name];\r\n                //             ret = func.apply(this, arguments);\r\n                //             this.$super = tmp;\r\n                //             return ret;\r\n                //         };\r\n                //     }(name, value)) : value;\r\n            }\r\n        }\r\n\r\n        var clazz, init;\r\n\r\n        if ( ! _.isUndefined(proto.constructor)) {\r\n            init = proto.constructor;\r\n            delete proto.constructor;\r\n        }\r\n        \r\n        clazz = function() {\r\n            var me = this;\r\n            var prop, value;\r\n\r\n            me.listeners = {};\r\n\r\n            var classdef = me.constructor.defaults,\r\n                superdef = me.superclass.defaults;\r\n\r\n            var inherits = {};\r\n\r\n            if (superdef) {\r\n                for(prop in superdef) {\r\n                    me[prop] = _.cloneDeep(superdef[prop]);\r\n                    inherits[prop] = true;\r\n                }\r\n            }\r\n\r\n            if (classdef) {\r\n                for(prop in classdef) {\r\n                    value = _.cloneDeep(classdef[prop]);\r\n                    if (inherits[prop]) {\r\n                        if (_.isPlainObject(value) || _.isArray(value)) {\r\n                            _.assign(me[prop], value);\r\n                        }\r\n                    } else {\r\n                        me[prop] = value;    \r\n                    }\r\n                }\r\n            }\r\n\r\n            inherits = superdef = classdef = null;\r\n            \r\n            if ( ! initializing) {\r\n                init && init.apply(me, arguments);\r\n            }\r\n        };\r\n\r\n        // statics\r\n        clazz.init = init;\r\n        clazz.extend = Class.extend;\r\n        clazz.defaults = defaults;\r\n\r\n        // instance\r\n        clazz.prototype = proto;\r\n        clazz.prototype.constructor = clazz;\r\n        clazz.prototype.superclass = $super.constructor;\r\n\r\n        // `$super()` implementation, replace John Resigh implementation\r\n        clazz.prototype.$super = function () {\r\n            var func = clazz.prototype.$super,\r\n                ctor = this.constructor;\r\n                \r\n            var fcal, fsup, near;\r\n            \r\n            fcal = (func && func.caller) ? func.caller : arguments.callee.caller;\r\n\r\n            if ( ! fcal) {\r\n                return undefined;\r\n            }\r\n\r\n            fsup = fcal.$super;\r\n\r\n            if ( ! fsup) {\r\n                near = Class.closest(fcal, ctor);\r\n                    \r\n                if (near) {\r\n                    var pro = near.proto, \r\n                        key = near.key;\r\n\r\n                    fsup = pro.superclass.prototype[key];\r\n                    fcal.$super = fsup;\r\n                }\r\n            }\r\n\r\n            return fsup ? fsup.apply(this, arguments) : undefined;\r\n        };\r\n\r\n        /**\r\n         * Enable eventbus\r\n         */\r\n        \r\n        clazz.prototype.on = function(type, handler, once) {\r\n            var me = this, data;\r\n\r\n            if (_.isPlainObject(type)) {\r\n                _.forOwn(type, function(h, t){\r\n                    if (_.isPlainObject(h)) {\r\n                        var o = h;\r\n                        h = o.handler;\r\n                        s = o.once;\r\n                        me.on(t, h, s);\r\n                    } else {\r\n                        me.on(t, h, false);\r\n                    }\r\n                });\r\n                return me;\r\n            }\r\n\r\n            var part = _.split(type, '.'),\r\n                fire = part.shift();\r\n\r\n            me.listeners[fire] = me.listeners[fire] || [];\r\n            \r\n            once = _.defaultTo(once, false);\r\n\r\n            data = {\r\n                type: type,\r\n                once: once,\r\n                orig: handler,\r\n                func: _.bind(handler, this)\r\n            };\r\n\r\n            me.listeners[fire].push(data);\r\n            return this;\r\n        };\r\n\r\n        clazz.prototype.one = function(type, handler) {\r\n            var me = this;\r\n\r\n            if (_.isPlainObject(type)) {\r\n                _.forOwn(type, function(h, t){\r\n                    me.on(t, h, true);\r\n                });\r\n                return me;\r\n            }\r\n\r\n            return me.on(type, handler, true);\r\n        };\r\n\r\n        /**\r\n         * Unregister event handler\r\n         */\r\n        clazz.prototype.off = function(type, handler) {\r\n            var part, fire, lsnr, rgex;\r\n            \r\n            part = _.split(type, '.');\r\n            fire = part.shift();\r\n            lsnr = fire ? (this.listeners[fire] || []).slice() : [];\r\n\r\n            var cached = Graph.lookup('Regex.event', type);\r\n            \r\n            if (cached.rgex) {\r\n                rgex = cached.rgex;\r\n            } else {\r\n                rgex = new RegExp(_.escapeRegExp(type), 'i');\r\n                cached.rgex = rgex;\r\n            }\r\n            \r\n            if (lsnr.length) {\r\n                for (var i = lsnr.length - 1; i >= 0; i--) {\r\n                    if (handler) {\r\n                        if (rgex.test(lsnr[i].type) && lsnr[i].orig === handler) {\r\n                            this.listeners[fire].splice(i, 1);\r\n                        }\r\n                    } else {\r\n                        if (rgex.test(lsnr[i].type)) {\r\n                            this.listeners[fire].splice(i, 1);\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                var me = this;\r\n                for (fire in me.listeners) {\r\n                    (function(lsnr){\r\n                        for (var i = lsnr.length - 1; i >= 0; i--) {\r\n                            if (handler) {\r\n                                if (rgex.test(lsnr[i].type) && lsnr[i].orig === handler) {\r\n                                    lsnr.splice(i, 1);\r\n                                }\r\n                            } else {\r\n                                if (rgex.test(lsnr[i].type)) {\r\n                                    lsnr.splice(i, 1);\r\n                                }\r\n                            }\r\n                        }\r\n                    }(me.listeners[fire]))\r\n                }\r\n            }\r\n\r\n            rgex = null;\r\n            lsnr = null;\r\n            \r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Execute event handler\r\n         */\r\n        clazz.prototype.fire = function(type, data) {\r\n            var func = clazz.prototype.fire;\r\n            var args = [];\r\n            var event, part, fire, lsnr, rgex;\r\n\r\n            if (_.isString(type)) {\r\n                event = new Graph.lang.Event(type, data);\r\n            } else {\r\n                event = type;\r\n                event.originalData = event.originalData || {};\r\n                type = event.originalType || event.type;\r\n            }\r\n\r\n            // add default publisher props for later use\r\n            event.publisher = this;\r\n            \r\n            args.push(event);\r\n\r\n            part = _.split(type, '.');\r\n            fire = part.shift();\r\n            lsnr = this.listeners[fire] || [];\r\n\r\n            var cached = Graph.lookup('Regex.event', type);\r\n\r\n            if (cached.rgex) {\r\n                rgex = cached.rgex;\r\n            } else {\r\n                rgex = new RegExp(_.escapeRegExp(type), 'i');\r\n                cached.rgex = rgex;\r\n            }\r\n\r\n            var onces = [];\r\n\r\n            if (lsnr.length) {\r\n                for (var i = 0, ii = lsnr.length; i < ii; i++) {\r\n                    if (fire != type) {\r\n                        if (rgex.test(lsnr[i].type)) {\r\n                            if (lsnr[i].once) {\r\n                                onces.push(lsnr[i]);\r\n                            }\r\n                            lsnr[i].func.apply(lsnr[i].func, args);\r\n                        }\r\n                    } else {\r\n                        if (lsnr[i].once) {\r\n                            onces.push(lsnr[i]);\r\n                        }\r\n\r\n                        lsnr[i].func.apply(lsnr[i].func, args);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (onces.length) {\r\n                var me = this;\r\n                _.forEach(onces, function(lsnr){\r\n                    me.off(lsnr.type, lsnr.orig);\r\n                });\r\n            }\r\n\r\n            rgex = null;\r\n            return event;\r\n        };\r\n\r\n        return clazz;\r\n    };\r\n\r\n    Class.closest = function(method, clazz) {\r\n        var proto = clazz.prototype, inherited;\r\n\r\n        if (method === clazz.init) {\r\n            inherited = proto.superclass ? method === proto.superclass.init : false;\r\n\r\n            if ( ! inherited) {\r\n                return { proto: proto, key: 'constructor' };\r\n            }\r\n        } else {\r\n            for (var key in proto) {\r\n                if (proto[key] === method) {\r\n\r\n                    inherited = proto.superclass ? proto[key] === proto.superclass.prototype[key]  : false;\r\n\r\n                    if ( ! inherited) {\r\n                        return { proto: proto, key: key };\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (proto.superclass) {\r\n            return Class.closest(method, proto.superclass);\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Collection = Graph.collection.Point = function(items) {\r\n        this.items = items || [];\r\n    };\r\n\r\n    Collection.prototype.constructor = Collection;\r\n    Collection.prototype.items = [];\r\n\r\n    Collection.prototype.nth = function(index) {\r\n        return _.nth(this.items, index);\r\n    };\r\n\r\n    Collection.prototype.push = function(item) {\r\n        this.items.push(item);\r\n        return item;\r\n    };\r\n\r\n    Collection.prototype.pop = function() {\r\n        var item = this.items.pop();\r\n        return item;\r\n    };\r\n\r\n    Collection.prototype.shift = function() {\r\n        var item = this.items.shift();\r\n        return item;\r\n    };\r\n\r\n    Collection.prototype.first = function() {\r\n        return _.head(this.items);\r\n    };\r\n\r\n    Collection.prototype.last = function() {\r\n        return _.last(this.items);\r\n    };\r\n\r\n    Collection.prototype.clear = function() {\r\n        this.items = [];\r\n        return this;\r\n    },\r\n\r\n    Collection.prototype.modify = function(index, x, y) {\r\n        var item = this.items[index];\r\n        item.props.x = x;\r\n        item.props.y = y;\r\n        return item;\r\n    };\r\n\r\n    Collection.prototype.each = function(iteratee) {\r\n        _.forEach(this.items, iteratee);\r\n    };\r\n\r\n    Collection.prototype.toArray = function() {\r\n        return this.items;\r\n    };\r\n\r\n    Collection.prototype.toJson = function() {\r\n        return _.map(this.items, function(item){\r\n            return item.toJson();\r\n        });\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Line = Graph.extend(Graph.svg.Vector, {\r\n\r\n        attrs: {\r\n            // 'stroke': '#696B8A',\r\n            // 'stroke-width': 1,\r\n            // 'stroke-linecap': 'butt',\r\n            'class': Graph.string.CLS_VECTOR_LINE\r\n        },\r\n\r\n        constructor: function(x1, y1, x2, y2) {\r\n            var args = _.toArray(arguments);\r\n\r\n            if (args.length === 1) {\r\n                var start = args[0].start().toJson(),\r\n                    end = args[0].end().toJson();\r\n\r\n                x1 = start.x;\r\n                y1 = start.y;\r\n                x2 = end.x;\r\n                y2 = end.y;\r\n            } else if (args.length === 2) {\r\n                if (Graph.isPoint(args[0])) {\r\n                    x1 = args[0].props.x;\r\n                    y1 = args[0].props.y;\r\n                    x2 = args[1].props.x;\r\n                    y2 = args[1].props.y;\r\n                } else {\r\n                    x1 = args[0].x;\r\n                    y1 = args[0].y;\r\n                    x2 = args[1].x;\r\n                    y2 = args[1].y;\r\n                }\r\n                \r\n            }\r\n\r\n            // this.$super('line', {\r\n            //     x1: _.defaultTo(x1, 0),\r\n            //     y1: _.defaultTo(y1, 0),\r\n            //     x2: _.defaultTo(x2, 0),\r\n            //     y2: _.defaultTo(y2, 0)\r\n            // });\r\n            \r\n            this.superclass.prototype.constructor.call(this, 'line', {\r\n                x1: _.defaultTo(x1, 0),\r\n                y1: _.defaultTo(y1, 0),\r\n                x2: _.defaultTo(x2, 0),\r\n                y2: _.defaultTo(y2, 0)\r\n            });\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Line';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.svg.Line.toString = function() {\r\n        return \"function(x1, y1, x2, y2)\";\r\n    };\r\n\r\n}());","\r\n(function(){\r\n    \r\n    Graph.lang.Curve = Graph.extend({\r\n        segments: [],\r\n        \r\n        constructor: function(command) {\r\n            this.segments = _.isString(command) ? Graph.util.path2segments(command) : _.cloneDeep(command);\r\n            \r\n            if (this.segments[0][0] != 'M') {\r\n                this.segments.unshift(\r\n                    ['M', this.segments[0][1], this.segments[0][2]]\r\n                );\r\n            }\r\n\r\n            if (this.segments.length === 1 && this.segments[0][0] === 'M') {\r\n                var x = this.segments[0][1],\r\n                    y = this.segments[0][2];\r\n                this.segments.push(['C', x, y, x, y, x, y]);\r\n            }\r\n        },\r\n\r\n        x: function() {\r\n            return this.segments[1][5];\r\n        },\r\n\r\n        y: function() {\r\n            return this.segments[1][6];\r\n        },\r\n\r\n        length: function(t) {\r\n            var params = this.segments[0].slice(1).concat(this.segments[1].slice(1)).concat([t]);\r\n            return Graph.util.curveLength.apply(null, params);\r\n        },\r\n\r\n        t: function(length) {\r\n            var params = this.segments[0].slice(1).concat(this.segments[1].slice(1)).concat([length]);\r\n            return Graph.util.curveInterval.apply(null, params);\r\n        },\r\n\r\n        pointAt: function(t, json) {\r\n            var params = this.segments[0].slice(1).concat(this.segments[1].slice(1)).concat([t]),\r\n                result = Graph.util.pointAtInterval.apply(null, params);\r\n\r\n            if (json) {\r\n                return result;\r\n            } else {\r\n                var point = Graph.point(result.x, result.y);\r\n                result.x = result.y = undefined;\r\n                return _.extend(point, result);\r\n            }\r\n        },\r\n\r\n        intersection: function(curve, json) {\r\n            var a = this.segments[0].slice(1).concat(this.segments[1].slice(1)),\r\n                b = curve.segments[0].slice(1).concat(curve.segments[1].slice(1)),\r\n                i = Graph.util.curveIntersection(a, b);\r\n\r\n            if (json) {\r\n                return i;\r\n            } else {\r\n                var points = _.map(i, function(p){ return Graph.point(p.x, p.y); });\r\n                return points;\r\n            }\r\n        },\r\n\r\n        intersectnum: function(curve) {\r\n            var a = this.segments[0].slice(1).concat(this.segments[1].slice(1)),\r\n                b = curve.segments[0].slice(1).concat(curve.segments[1].slice(1));\r\n\r\n            return Graph.util.curveIntersection(a, b, true);\r\n        },\r\n\r\n        bbox: function() {\r\n            var args = [this.segments[0][1], this.segments[0][2]].concat(this.segments[1].slice(1)),\r\n                bbox = Graph.util.curvebox.apply(null, args);\r\n            return Graph.bbox({\r\n                x: bbox.min.x,\r\n                y: bbox.min.y,\r\n                x2: bbox.max.x,\r\n                y2: bbox.max.y,\r\n                width: bbox.max.x - bbox.min.x,\r\n                height: bbox.max.y - bbox.min.y\r\n            });\r\n        },\r\n\r\n        clone: function() {\r\n            var segments = _.cloneDeep(this.segments);\r\n            return new Graph.lang.Curve(segments);\r\n        },\r\n\r\n        toString: function() {\r\n            return Graph.util.segments2path(this.segments);\r\n        }\r\n    });\r\n    \r\n    ///////// STATIC /////////\r\n    \r\n    Graph.lang.Curve.toString = function() {\r\n        return \"function(command)\";\r\n    };  \r\n\r\n    ///////// SHORTCUT /////////\r\n    \r\n    Graph.curve = function(command) {\r\n        return new Graph.lang.Curve(command);\r\n    };\r\n\r\n}());","\r\n(function(){\r\n    \r\n    var BBox = Graph.lang.BBox = Graph.extend({\r\n        \r\n        props: {\r\n            // origin\r\n            x: 0,\r\n            y: 0,\r\n\r\n            // corner\r\n            x2: 0,\r\n            y2: 0,\r\n\r\n            // dimension\r\n            width: 0,\r\n            height: 0\r\n        },\r\n\r\n        constructor: function(bbox) {\r\n            this.props = _.cloneDeep(bbox);\r\n        },\r\n        \r\n        data: function(name, value) {\r\n            if (name === undefined && value === undefined) {\r\n                return this.props;\r\n            }\r\n\r\n            if (value === undefined) {\r\n                return this.props[name];\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        pathinfo: function() {\r\n            var a = this.props;\r\n\r\n            return new Graph.lang.Path([\r\n                ['M', a.x, a.y], \r\n                ['l', a.width, 0], \r\n                ['l', 0, a.height], \r\n                ['l', -a.width, 0], \r\n                ['z']\r\n            ]);\r\n        },\r\n\r\n        origin: function() {\r\n            var x = this.props.x, \r\n                y = this.props.y;\r\n\r\n            return Graph.point(x, y);\r\n        },\r\n\r\n        center: function(dots) {\r\n            var x = this.props.x + this.props.width / 2,\r\n                y = this.props.y + this.props.height / 2;\r\n\r\n            return dots ? {x: x, y: y} : Graph.point(x, y);\r\n        },\r\n\r\n        corner: function() {\r\n            var x = this.props.x + this.props.width,\r\n                y = this.props.y + this.props.height;\r\n\r\n            return Graph.point(x, y);\r\n        },\r\n        \r\n        width: function() {\r\n            return this.props.width;\r\n        },\r\n        \r\n        height: function() {\r\n            return this.props.height;\r\n        },\r\n        \r\n        clone: function() {\r\n            var props = _.extend({}, this.props);\r\n            return new BBox(props);\r\n        },\r\n\r\n        contains: function(obj) {\r\n            var contain = true,\r\n                bbox = this.props,\r\n                dots = [];\r\n\r\n            var vbox, papa, mat, dot;\r\n\r\n            if (Graph.isPoint(obj)) {\r\n                dots = [\r\n                    [obj.props.x, obj.props.y]\r\n                ];\r\n            } else if (Graph.isVector(obj)) {\r\n                dots = obj.dots(true);\r\n            } else if (Graph.isBBox(obj)) {\r\n                dots = [\r\n                    [obj.props.x, obj.props.y],\r\n                    [obj.props.x2, obj.props.y2]\r\n                ];\r\n            } else {\r\n                var args = _.toArray(arguments);\r\n                if (args.length === 2) {\r\n                    dots = [args];\r\n                }\r\n            }\r\n\r\n            if (dots.length) {\r\n                var l = dots.length;\r\n                while(l--) {\r\n                    dot = dots[l];\r\n                    contain = dot[0] >= bbox.x  && \r\n                              dot[0] <= bbox.x2 && \r\n                              dot[1] >= bbox.y  && \r\n                              dot[1] <= bbox.y2;\r\n                    if ( ! contain) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return contain;\r\n        },\r\n\r\n        expand: function(dx, dy, dw, dh) {\r\n            var ax, ay;\r\n            if (_.isUndefined(dy)) {\r\n                ax = Math.abs(dx);\r\n                \r\n                dx = -ax;\r\n                dy = -ax;\r\n                dw = 2 * ax;\r\n                dh = 2 * ax;\r\n            } else {\r\n                ax = Math.abs(dx);\r\n                ay = Math.abs(dy);\r\n\r\n                dx = -ax;\r\n                dy = -ay;\r\n                dw = 2 * ax;\r\n                dh = 2 * ay;\r\n            }\r\n            \r\n            this.props.x += dx;\r\n            this.props.y += dy;\r\n            this.props.width  += dw;\r\n            this.props.height += dh;\r\n\r\n            return this;\r\n        },\r\n\r\n        transform: function(matrix) {\r\n            var x = this.props.x,\r\n                y = this.props.y;\r\n\r\n            this.props.x = matrix.x(x, y);\r\n            this.props.y = matrix.y(x, y);\r\n\r\n            x = this.props.x2;\r\n            y = this.props.y2;\r\n\r\n            this.props.x2 = matrix.x(x, y);\r\n            this.props.y2 = matrix.y(x, y);\r\n\r\n            var scale = matrix.scale();\r\n\r\n            this.props.width  *= scale.x;\r\n            this.props.height *= scale.y;\r\n\r\n            return this;\r\n        },\r\n\r\n        intersect: function(tbox) {\r\n            var me = this,\r\n                bdat = me.props,\r\n                tdat = tbox.toJson();\r\n\r\n            return tbox.contains(bdat.x, bdat.y)\r\n                || tbox.contains(bdat.x2, bdat.y)\r\n                || tbox.contains(bdat.x, bdat.y2)\r\n                || tbox.contains(bdat.x2, bdat.y2)\r\n                || me.contains(tdat.x, tdat.y)\r\n                || me.contains(tdat.x2, tdat.y)\r\n                || me.contains(tdat.x, tdat.y2)\r\n                || me.contains(tdat.x2, tdat.y2)\r\n                || (bdat.x < tdat.x2 && bdat.x > tdat.x || tdat.x < bdat.x2 && tdat.x > bdat.x)\r\n                && (bdat.y < tdat.y2 && bdat.y > tdat.y || tdat.y < bdat.y2 && tdat.y > bdat.y);\r\n        },\r\n\r\n        sideNearestPoint: function(point) {\r\n            var px = point.props.x,\r\n                py = point.props.y,\r\n                tx = this.props.x,\r\n                ty = this.props.y,\r\n                tw = this.props.width,\r\n                th = this.props.height;\r\n\r\n            var distToLeft = px - tx;\r\n            var distToRight = (tx + tw) - px;\r\n            var distToTop = py - ty;\r\n            var distToBottom = (ty + th) - py;\r\n            var closest = distToLeft;\r\n            var side = 'left';\r\n\r\n            if (distToRight < closest) {\r\n                closest = distToRight;\r\n                side = 'right';\r\n            }\r\n\r\n            if (distToTop < closest) {\r\n                closest = distToTop;\r\n                side = 'top';\r\n            }\r\n            if (distToBottom < closest) {\r\n                closest = distToBottom;\r\n                side = 'bottom';\r\n            }\r\n\r\n            return side;\r\n        },\r\n\r\n        pointNearestPoint: function(point) {\r\n            if (this.contains(point)) {\r\n                var side = this.sideNearestPoint(point);\r\n                switch (side){\r\n                    case 'right': return Graph.point(this.props.x + this.props.width, point.props.y);\r\n                    case 'left': return Graph.point(this.props.x, point.props.y);\r\n                    case 'bottom': return Graph.point(point.props.x, this.props.y + this.props.height);\r\n                    case 'top': return Graph.point(point.props.x, this.props.y);\r\n                }\r\n            }\r\n            return point.clone().adhereToBox(this);\r\n        },\r\n\r\n        toJson: function() {\r\n            return this.props;\r\n        }\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n    \r\n    Graph.lang.BBox.toString = function() {\r\n        return 'function(bounds)';\r\n    };\r\n\r\n    ///////// EXTENSION /////////\r\n    \r\n    Graph.isBBox = function(obj) {\r\n        return obj instanceof Graph.lang.BBox;\r\n    };\r\n\r\n    Graph.bbox = function(bounds) {\r\n        return new Graph.lang.BBox(bounds);\r\n    };\r\n    \r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Path = Graph.extend(Graph.svg.Vector, {\r\n\r\n        attrs: {\r\n            // 'stroke': '#696B8A',\r\n            // 'stroke-width': 1,\r\n            // 'fill': 'none',\r\n            'style': '',\r\n            'class': Graph.string.CLS_VECTOR_PATH\r\n        },\r\n\r\n        constructor: function(d) {\r\n            if ( ! d) {\r\n                d = [['M', 0, 0]];\r\n            }\r\n\r\n            if (_.isArray(d)) {\r\n                d = Graph.path(Graph.util.segments2path(d)).absolute().toString();\r\n            } else if (d instanceof Graph.lang.Path) {\r\n                d = d.toString();\r\n            } else {\r\n                d = Graph.path(d).absolute().toString();\r\n            }\r\n\r\n            this.superclass.prototype.constructor.call(this, 'path', {\r\n                d: d\r\n            });\r\n        },\r\n\r\n        pathinfo: function() {\r\n            return Graph.path(this.attrs.d)\r\n        },\r\n\r\n        segments: function() {\r\n            return this.pathinfo().segments;\r\n        },\r\n\r\n        intersection: function(path, dots) {\r\n            return this.pathinfo().intersection(path.pathinfo(), dots);\r\n        },\r\n\r\n        intersectnum: function(path) {\r\n            return this.pathinfo().intersectnum(path.pathinfo());\r\n        },\r\n\r\n        angle: function() {\r\n            var segments = _.clone(this.segments()),\r\n                max = segments.length - 1;\r\n\r\n            if (segments[max][0] == 'Z') {\r\n                max--;\r\n                segments.pop();\r\n            }\r\n\r\n            if (segments.length === 1) {\r\n                max++;\r\n                segments.push(['L', segments[0][1], segments[0][2]]);\r\n            }\r\n\r\n            var dx = segments[max][1] - segments[max - 1][1],\r\n                dy = segments[max][2] - segments[max - 1][2];\r\n\r\n            return (180 + Math.atan2(-dy, -dx) * 180 / Math.PI + 360) % 360;\r\n        },\r\n\r\n        slice: function(from, to) {\r\n            return this.pathinfo().slice(from, to);\r\n        },\r\n\r\n        pointAt: function(length) {\r\n            return this.pathinfo().pointAt(length);\r\n        },\r\n\r\n        length: function() {\r\n            return this.pathinfo().length();\r\n        },\r\n\r\n        addVertext: function(vertext) {\r\n            var path = this.pathinfo();\r\n\r\n            path.addVertext(vertext);\r\n            this.attr('d', path.command());\r\n\r\n            return this;\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var ms = this.matrix().clone(),\r\n                mr = matrix.rotate(),\r\n                ro = mr.deg,\r\n                rd = mr.rad,\r\n                si = Math.sin(rd),\r\n                co = Math.cos(rd),\r\n                pa = this.pathinfo(),\r\n                ps = pa.segments,\r\n                rx = ps[0][1],\r\n                ry = ps[0][2];\r\n\r\n            if (ro) {\r\n                ms.rotate(-ro, rx, ry);    \r\n            }\r\n            \r\n            rx = ms.x(ps[0][1], ps[0][2]);\r\n            ry = ms.y(ps[0][1], ps[0][2]);\r\n\r\n            ms.scale(sx, sy, cx, cy);\r\n\r\n            _.forEach(ps, function(seg){\r\n                var ox, oy, nx, ny;\r\n                if (seg[0] != 'Z') {\r\n                    ox = seg[seg.length - 2];\r\n                    oy = seg[seg.length - 1];\r\n\r\n                    nx = ms.x(ox, oy);\r\n                    ny = ms.y(ox, oy);\r\n                    \r\n                    seg[seg.length - 2] = nx;\r\n                    seg[seg.length - 1] = ny;\r\n                }\r\n            });\r\n\r\n            this.reset();\r\n            this.attr('d', pa.command());\r\n\r\n            if (ro) {\r\n                this.rotate(ro, rx, ry).commit(true);    \r\n            }\r\n\r\n            return {\r\n                matrix: ms,\r\n                x: rx,\r\n                y: ry\r\n            };\r\n        },\r\n\r\n        moveTo: function(x, y) {\r\n            var path = this.pathinfo();\r\n            \r\n            path.moveTo(x, y);\r\n            this.attr('d', path.command());\r\n\r\n            return this;\r\n        },\r\n\r\n        lineTo: function(x, y, append) {\r\n            var path = this.pathinfo();\r\n            \r\n            path.lineTo(x, y, append);\r\n            this.attr('d', path.command());\r\n\r\n            return this;\r\n        },\r\n\r\n        tail: function() {\r\n            var segments = this.segments();\r\n            if (segments.length) {\r\n                return Graph.point(segments[0][1], segments[0][2]);\r\n            }\r\n            return null;\r\n        },\r\n\r\n        head: function() {\r\n            var segments = this.segments(), maxs;\r\n            if (segments.length) {\r\n                maxs = segments.length - 1;\r\n                return Graph.point(segments[maxs][1], segments[maxs][2]);\r\n            }\r\n            return null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Path';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.svg.Path.toString = function() {\r\n        return 'function(d)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n    \r\n    var Matrix = Graph.lang.Matrix = Graph.extend({\r\n\r\n        props: {\r\n            a: 1,\r\n            b: 0,\r\n            c: 0,\r\n            d: 1,\r\n            e: 0,\r\n            f: 0    \r\n        },\r\n\r\n        constructor: function(a, b, c, d, e, f) {\r\n            this.props.a = _.defaultTo(a, 1);\r\n            this.props.b = _.defaultTo(b, 0);\r\n            this.props.c = _.defaultTo(c, 0);\r\n            this.props.d = _.defaultTo(d, 1);\r\n            this.props.e = _.defaultTo(e, 0);\r\n            this.props.f = _.defaultTo(f, 0);\r\n        },\r\n\r\n        x: function(x, y) {\r\n            return x * this.props.a + y * this.props.c + this.props.e;\r\n        },\r\n\r\n        y: function(x, y) {\r\n            return x * this.props.b + y * this.props.d + this.props.f;\r\n        },\r\n        \r\n        get: function(chr) {\r\n            return +this.props[chr].toFixed(4);\r\n        },\r\n\r\n        multiply: function(a, b, c, d, e, f) {\r\n            var \r\n                result = [[], [], []],\r\n                source = [\r\n                    [this.props.a, this.props.c, this.props.e], \r\n                    [this.props.b, this.props.d, this.props.f], \r\n                    [0, 0, 1]\r\n                ],\r\n                matrix = [\r\n                    [a, c, e], \r\n                    [b, d, f], \r\n                    [0, 0, 1]\r\n                ];\r\n\r\n            var x, y, z, tmp;\r\n\r\n            if (Graph.isMatrix(a)) {\r\n                matrix = [\r\n                    [a.props.a, a.props.c, a.props.e], \r\n                    [a.props.b, a.props.d, a.props.f], \r\n                    [0, 0, 1]\r\n                ];\r\n            }\r\n\r\n            for (x = 0; x < 3; x++) {\r\n                for (y = 0; y < 3; y++) {\r\n                    tmp = 0;\r\n                    for (z = 0; z < 3; z++) {\r\n                        tmp += source[x][z] * matrix[z][y];\r\n                    }\r\n                    result[x][y] = tmp;\r\n                }\r\n            }\r\n\r\n            this.props.a = result[0][0];\r\n            this.props.b = result[1][0];\r\n            this.props.c = result[0][1];\r\n            this.props.d = result[1][1];\r\n            this.props.e = result[0][2];\r\n            this.props.f = result[1][2];\r\n\r\n            return this;\r\n        },\r\n\r\n        invert: function(clone) {\r\n            var x = this.props.a * this.props.d - this.props.b * this.props.c;\r\n            var a, b, c, d, e, f;\r\n\r\n            clone = _.defaultTo(clone, false);\r\n\r\n            a =  this.props.d / x;\r\n            b = -this.props.b / x;\r\n            c = -this.props.c / x;\r\n            d =  this.props.a / x;\r\n            e = (this.props.c * this.props.f - this.props.d * this.props.e) / x;\r\n            f = (this.props.b * this.props.e - this.props.a * this.props.f) / x;\r\n\r\n            if (clone) {\r\n                return new Graph.matrix(a, b, c, d, e, f);\r\n            } else {\r\n                this.props.a = a;\r\n                this.props.b = b;\r\n                this.props.c = c;\r\n                this.props.d = d;\r\n                this.props.e = e;\r\n                this.props.f = f;    \r\n\r\n                return this;\r\n            }\r\n        },\r\n\r\n        translate: function(x, y) {\r\n            x = _.defaultTo(x, 0);\r\n            y = _.defaultTo(y, 0);\r\n            this.multiply(1, 0, 0, 1, x, y);\r\n\r\n            return this;\r\n        },\r\n\r\n        rotate: function(angle, cx, cy) {\r\n            if (angle === undefined) {\r\n                \r\n                var px = this.delta(0, 1),\r\n                    py = this.delta(1, 0),\r\n                    deg = 180 / Math.PI * Math.atan2(px.y, px.x) - 90,\r\n                    rad = Graph.util.rad(deg);\r\n\r\n                return {\r\n                    deg: deg,\r\n                    rad: rad\r\n                };\r\n            }\r\n\r\n            angle = Graph.util.rad(angle);\r\n            cx = _.defaultTo(cx, 0);\r\n            cy = _.defaultTo(cy, 0);\r\n\r\n            var cos = +Math.cos(angle).toFixed(9),\r\n                sin = +Math.sin(angle).toFixed(9);\r\n\r\n            this.multiply(cos, sin, -sin, cos, cx, cy);\r\n            this.multiply(1, 0, 0, 1, -cx, -cy);\r\n\r\n            return this;\r\n        },\r\n\r\n        scale: function(sx, sy, cx, cy) {\r\n            if (sx === undefined) {\r\n                var prop = this.props,\r\n                    sx = Graph.util.hypo(prop.a, prop.b),\r\n                    sy = Graph.util.hypo(prop.c, prop.d);\r\n\r\n                if (this.determinant() < 0) {\r\n                    sx = -sx;\r\n                }\r\n\r\n                return {\r\n                    x: sx,\r\n                    y: sy\r\n                };\r\n            }\r\n\r\n            sy = _.defaultTo(sy, sx);\r\n\r\n            if (cx || cy) {\r\n                cx = _.defaultTo(cx, 0);\r\n                cy = _.defaultTo(cy, 0);\r\n            }\r\n\r\n            (cx || cy) && this.multiply(1, 0, 0, 1, cx, cy);\r\n            this.multiply(sx, 0, 0, sy, 0, 0);\r\n            (cx || cy) && this.multiply(1, 0, 0, 1, -cx, -cy);\r\n            \r\n            return this;\r\n        },\r\n        \r\n        determinant: function() {\r\n            return this.props.a * this.props.d - this.props.b * this.props.c;\r\n        },\r\n\r\n        delta: function(x, y) {\r\n            return {\r\n                x: x * this.props.a + y * this.props.c + 0,\r\n                y: x * this.props.b + y * this.props.d + 0\r\n            };\r\n        },\r\n\r\n        data: function() {\r\n            var px = this.delta(0, 1),\r\n                py = this.delta(1, 0),\r\n                skewX = 180 / Math.PI * Math.atan2(px.y, px.x) - 90,\r\n                radSkewX = Graph.util.rad(skewX),\r\n                cosSkewX = Math.cos(radSkewX),\r\n                sinSkewX = Math.sin(radSkewX),\r\n                scaleX = Graph.util.hypo(this.props.a, this.props.b),\r\n                scaleY = Graph.util.hypo(this.props.c, this.props.d),\r\n                radian = Graph.util.rad(skewX);\r\n\r\n            if (this.determinant() < 0) {\r\n                scaleX = -scaleX;\r\n            }\r\n\r\n            return {\r\n                x: this.props.e,\r\n                y: this.props.f,\r\n                dx: (this.props.e * cosSkewX + this.props.f *  sinSkewX) / scaleX,\r\n                dy: (this.props.f * cosSkewX + this.props.e * -sinSkewX) / scaleY,\r\n                skewX: -skewX,\r\n                skewY: 180 / Math.PI * Math.atan2(py.y, py.x),\r\n                scaleX: scaleX,\r\n                scaleY: scaleY,\r\n                rotate: skewX,\r\n                rad: radian,\r\n                sin: Math.sin(radian),\r\n                cos: Math.cos(radian),\r\n                a: this.props.a,\r\n                b: this.props.b,\r\n                c: this.props.c,\r\n                d: this.props.d,\r\n                e: this.props.e,\r\n                f: this.props.f\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Convert to `matrix(...)` toString\r\n         */\r\n        toString: function() {\r\n            var array = [\r\n                this.get('a'),\r\n                this.get('b'),\r\n                this.get('c'),\r\n                this.get('d'),\r\n                this.get('e'),\r\n                this.get('f')\r\n            ];\r\n\r\n            return 'matrix(' + _.join(array, ',') + ')';\r\n        },\r\n\r\n        toFilter: function() {\r\n            return \"progid:DXImageTransform.Microsoft.Matrix(\" + \r\n               \"M11=\" + this.get('a') + \", \" + \r\n               \"M12=\" + this.get('c') + \", \" + \r\n               \"M21=\" + this.get('b') + \", \" + \r\n               \"M22=\" + this.get('d') + \", \" + \r\n               \"Dx=\"  + this.get('e') + \", \" + \r\n               \"Dy=\"  + this.get('f') + \", \" + \r\n               \"sizingmethod='auto expand'\"  + \r\n            \")\";\r\n        },\r\n\r\n        toArray: function() {\r\n            return [\r\n                [this.get('a'), this.get('c'), this.get('e')], \r\n                [this.get('b'), this.get('d'), this.get('f')], \r\n                [0, 0, 1]\r\n            ];\r\n        },\r\n\r\n        clone: function() {\r\n            return new Matrix(\r\n                this.props.a, \r\n                this.props.b, \r\n                this.props.c, \r\n                this.props.d, \r\n                this.props.e, \r\n                this.props.f\r\n            );\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.lang.Matrix.toString = function() {\r\n        return \"function(a, b, c, d, e, f)\";\r\n    };  \r\n\r\n    ///////// EXTENSION /////////\r\n    \r\n    Graph.isMatrix = function(obj) {\r\n        return obj instanceof Graph.lang.Matrix;\r\n    };\r\n\r\n    Graph.matrix = function(a, b, c, d, e, f) {\r\n        return new Graph.lang.Matrix(a, b, c, d, e, f);\r\n    };\r\n    \r\n}());","\r\n(function(){\r\n    \r\n    var storage = {},\r\n        context = {};\r\n    \r\n    var Registry = Graph.extend({\r\n        \r\n        context: {},\r\n\r\n        constructor: function() {\r\n            this.context = context;\r\n        },\r\n\r\n        register: function(vector) {\r\n            var id = vector.guid(), found = this.get(id);\r\n            \r\n            if (found !== vector) {\r\n                // vector.on('resize', function(){\r\n                //     if (vector.isConnectable()) {\r\n                //         var delay = _.delay(function(){\r\n                //             clearTimeout(delay);\r\n                //             Graph.registry.link.synchronize(vector);\r\n                //         }, 1);\r\n                //     }\r\n                // });\r\n\r\n                // vector.on('translate', function(){\r\n                //     if (vector.isConnectable()) {\r\n                //         var delay = _.delay(function(){\r\n                //             clearTimeout(delay);\r\n                //             Graph.registry.link.synchronize(vector);\r\n                //         }, 1);\r\n                //     }\r\n                // });\r\n            }\r\n\r\n            storage[id] = vector;\r\n        },\r\n\r\n        unregister: function(vector) {\r\n            var id = vector.guid();\r\n            if (storage[id]) {\r\n                delete storage[id];\r\n            }\r\n\r\n            if (context[id]) {\r\n                delete context[id];\r\n            }\r\n        },\r\n\r\n        setContext: function(id, scope) {\r\n            if (storage[id]) {\r\n                context[id] = scope;\r\n            }\r\n        },\r\n\r\n        count: function() {\r\n            return _.keys(storage).length;\r\n        },\r\n\r\n        toArray: function() {\r\n            var keys = _.keys(storage);\r\n            return _.map(keys, function(k){\r\n                return storage[k];\r\n            });\r\n        },\r\n\r\n        get: function(key) {\r\n\r\n            if (_.isUndefined(key)) {\r\n                return this.toArray();\r\n            }\r\n\r\n            if (key instanceof SVGElement) {\r\n                if (key.tagName == 'tspan') {\r\n                    // we only interest to text\r\n                    key = key.parentNode;\r\n                }\r\n                key = Graph.$(key).data(Graph.string.ID_VECTOR);\r\n            } else if (key instanceof Graph.dom.Element) {\r\n                key = key.data(Graph.string.ID_VECTOR);\r\n            }\r\n            return storage[key];\r\n        },\r\n\r\n        wipe: function(paper) {\r\n            var pid = paper.guid();\r\n\r\n            for (var id in storage) {\r\n                if (storage.hasOwnProperty(id)) {\r\n                    if (storage[id].tree.paper == pid) {\r\n                        delete storage[id];\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (storage[pid]) {\r\n                delete storage[pid];\r\n            }\r\n        },\r\n        \r\n        toString: function() {\r\n            return 'Graph.registry.Vector';\r\n        }\r\n\r\n    });\r\n\r\n    /**\r\n     * Singleton vector manager\r\n     */\r\n    Graph.registry.vector = new Registry();\r\n\r\n}());","\r\n(function(_, $){\r\n    \r\n    var REGEX_SVG_BUILDER = /^<(svg|g|rect|text|path|line|tspan|circle|polygon|defs|marker)/i;\r\n\r\n    var domParser;\r\n\r\n    ///////// BUILDER /////////\r\n    \r\n    Graph.dom = function(selector, context, query) {\r\n        var fragment, element;\r\n\r\n        if (domParser === undefined) {\r\n            try {\r\n                domParser = new DOMParser();\r\n            } catch(e){\r\n                domParser = null;\r\n            }\r\n        }\r\n\r\n        query = _.defaultTo(query, false);\r\n\r\n        if (_.isString(selector)) {\r\n            if (REGEX_SVG_BUILDER.test(selector)) {\r\n                if (domParser) {\r\n                    fragment = '<g xmlns=\"'+ Graph.config.xmlns.svg +'\">' + selector + '</g>';\r\n                    element  = domParser.parseFromString(fragment, 'text/xml').documentElement.childNodes[0];\r\n                    fragment = null;\r\n                    element  = query ? $(element) : element;\r\n                }\r\n            } else {\r\n                element = query ? $(selector, context) : $(selector, context)[0];\r\n            }\r\n        } else {\r\n            if (Graph.isHTML(selector) || Graph.isSVG(selector)) {\r\n                element = query ? $(selector) : selector;\r\n            } else if (Graph.isElement(selector)) {\r\n                element = query ? selector.query : selector.query[0];\r\n            } else {\r\n                // document, window, ...etc\r\n                element = query ? $(selector) : selector;\r\n            }\r\n        }\r\n\r\n        return element;\r\n    };  \r\n\r\n    Graph.dom.clone = function(node, deep) {\r\n        return node.cloneNode(deep);\r\n    };\r\n\r\n    ///////// ELEMENT /////////\r\n    \r\n    var E = Graph.dom.Element = function(query) {\r\n        this.query = $(query);\r\n    };\r\n\r\n    E.prototype.node = function() {\r\n        return this.query[0];\r\n    };\r\n\r\n    E.prototype.length = function() {\r\n        return this.query.length;\r\n    };\r\n\r\n    E.prototype.group = function(name) {\r\n        if (name === undefined) {\r\n            return this.query.data('component-group');\r\n        }\r\n        this.query.data('component-group', name);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.belong = function(group) {\r\n        return this.group() == group;\r\n    };\r\n\r\n    E.prototype.attr = function(name, value) {\r\n        var me = this, node = this.query[0];\r\n\r\n        if (Graph.isHTML(node)) {\r\n            this.query.attr(name, value);\r\n        } else if (Graph.isSVG(node)) {\r\n\r\n            if (_.isPlainObject(name)) {\r\n                _.forOwn(name, function(v, k){\r\n                    me.attr(k, v);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (name.substring(0, 6) == 'xlink:') {\r\n                node.setAttributeNS(Graph.config.xmlns.xlink, name.substring(6), _.toString(value));\r\n            } else {\r\n                node.setAttribute(name, _.toString(value));\r\n            }\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    E.prototype.width = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.width();\r\n        }\r\n        this.query.width(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.outerHeight = function(margin) {\r\n        return this.query.outerHeight(margin);\r\n    };\r\n\r\n    E.prototype.height = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.height();\r\n        }\r\n        this.query.height(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.show = function() {\r\n        this.query.show();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.hide = function() {\r\n        this.query.hide();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.offset = function() {\r\n        return this.query.offset();\r\n    };\r\n\r\n    E.prototype.position = function() {\r\n        return this.query.position();\r\n    };\r\n\r\n    E.prototype.css = function(name, value) {\r\n        if (value === undefined) {\r\n            return this.query.css(name);\r\n        }\r\n        this.query.css(name, value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.addClass = function(classes) {\r\n        var node = this.query[0];\r\n        if (Graph.isHTML(node)) {\r\n            this.query.addClass(classes);\r\n        } else if (Graph.isSVG(node)) {\r\n            var currentClasses = _.split(node.className.baseVal || '', ' ');\r\n            classes = _.split(classes, ' ');\r\n            classes = _.concat(currentClasses, classes);\r\n            classes = _.uniq(classes);\r\n            classes = _.join(classes, ' ');\r\n            node.className.baseVal = _.trim(classes);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    E.prototype.removeClass = function(classes) {\r\n        var node = this.query[0];\r\n        if (Graph.isHTML(node)) {\r\n            this.query.removeClass(classes);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    E.prototype.hasClass = function(clazz) {\r\n        var node = this.query[0];\r\n\r\n        if (Graph.isHTML(node)) {\r\n            return this.query.hasClass(clazz); \r\n        } else if (Graph.isSVG(node)) {\r\n            var classes = _.split(node.className.baseVal, ' ');\r\n            return classes.indexOf(clazz) > -1;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    E.prototype.find = function(selector) {\r\n        return new Graph.dom.Element(this.query.find(selector));\r\n    };\r\n\r\n    E.prototype.parent = function() {\r\n        return new Graph.dom.Element(this.query.parent());\r\n    };\r\n\r\n    E.prototype.closest = function(element) {\r\n        return new Graph.dom.Element(this.query.closest(element));\r\n    };\r\n\r\n    E.prototype.append = function(element) {\r\n        this.query.append(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.prepend = function(element) {\r\n        this.query.prepend(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.appendTo = function(element) {\r\n        this.query.appendTo(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.prependTo = function(element) {\r\n        this.query.prependTo(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.before = function(element) {\r\n        this.query.before(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.remove = function() {\r\n        this.query.remove();\r\n        this.query = null;\r\n        return this;\r\n    };\r\n\r\n    E.prototype.detach = function() {\r\n        this.query = this.query.detach();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.on = function(types, selector, data, fn, /*INTERNAL*/ one) {\r\n        this.query.on.call(this.query, types, selector, data, fn, one);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.off = function(types, selector, fn) {\r\n        this.query.off.call(this.query, types, selector, fn);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.trigger = function(type, data) {\r\n        this.query.trigger(type, data);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.text = function(text) {\r\n        if (text === undefined) {\r\n            return this.query.text();\r\n        }\r\n        this.query.text(text);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.html = function(html) {\r\n        if (html === undefined) {\r\n            return this.query.html();\r\n        }\r\n        this.query.html(html);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.focus = function() {\r\n        this.query.focus();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.contextmenu = function(state) {\r\n        state = _.defaultTo(state, true);\r\n        if ( ! state) {\r\n            this.query.on('contextmenu', function(e){\r\n                return false;\r\n            });\r\n        }\r\n    };\r\n\r\n    E.prototype.each = function(iteratee) {\r\n        this.query.each(iteratee);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.empty = function() {\r\n        this.query.empty();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.data = function(key, value) {\r\n        if (value === undefined) {\r\n            return this.query.data(key);\r\n        }\r\n        this.query.data(key, value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.prop = function(name, value) {\r\n        if (value === undefined) {\r\n            return this.query.data(name);\r\n        }\r\n        this.query.prop(name, value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.scrollTop = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.scrollTop();\r\n        }\r\n        this.query.scrollTop(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.scrollLeft = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.scrollLeft();\r\n        }\r\n        this.query.scrollLeft(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.toString = function() {\r\n        return 'Graph.dom.Element';\r\n    };\r\n    \r\n    /// HELPERS ///\r\n\r\n    Graph.$ = function(selector, context) {\r\n        var query = Graph.dom(selector, context, true);\r\n        return new Graph.dom.Element(query);\r\n    };\r\n\r\n}(_, jQuery));","\r\n(function(){\r\n\r\n    Graph.svg.Ellipse = Graph.extend(Graph.svg.Vector, {\r\n        attrs: {\r\n            // 'stroke': '#696B8A',\r\n            // 'stroke-width': 1,\r\n            // 'fill': '#ffffff',\r\n            // 'style': '',\r\n            'class': Graph.string.CLS_VECTOR_ELLIPSE\r\n        },\r\n\r\n        constructor: function(cx, cy, rx, ry) {\r\n            \r\n            // this.$super('ellipse', {\r\n            //     cx: cx,\r\n            //     cy: cy,\r\n            //     rx: rx,\r\n            //     ry: ry\r\n            // });\r\n\r\n            this.superclass.prototype.constructor.call(this, 'ellipse', {\r\n                cx: cx,\r\n                cy: cy,\r\n                rx: rx,\r\n                ry: ry\r\n            });\r\n        },\r\n\r\n        pathinfo: function() {\r\n            var a = this.attrs;\r\n\r\n            return Graph.path([\r\n                ['M', a.cx, a.cy],\r\n                ['m', 0, -a.ry],\r\n                ['a', a.rx, a.ry, 0, 1, 1, 0,  2 * a.ry],\r\n                ['a', a.rx, a.ry, 0, 1, 1, 0, -2 * a.ry],\r\n                ['z']\r\n            ]);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.graph.matrix.clone().scale(sx, sy, cx, cy),\r\n                rotate = this.props.rotate;\r\n\r\n            var mx = matrix.x(this.attrs.cx, this.attrs.cy),\r\n                my = matrix.y(this.attrs.cx, this.attrs.cy),\r\n                rx = this.attrs.rx * sx,\r\n                ry = this.attrs.ry * sy;\r\n\r\n            var gx, gy;\r\n\r\n            this.reset();\r\n\r\n            this.attr({\r\n                cx: mx,\r\n                cy: my,\r\n                rx: rx,\r\n                ry: ry\r\n            });\r\n\r\n            if (rotate) {\r\n                this.rotate(rotate, mx, my).commit();    \r\n            }\r\n\r\n            var bb = this.bbox().toJson();\r\n\r\n            gx = mx - rx - dx;\r\n            gy = my - ry - dy;\r\n\r\n            gx = bb.x;\r\n            gy = bb.y;\r\n\r\n            return  {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: mx,\r\n                    cy: my\r\n                },\r\n                magnify: {\r\n                    cx: gx,\r\n                    cy: gy\r\n                }\r\n            };\r\n        },\r\n        toString: function() {\r\n            return 'Graph.svg.Ellipse';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.svg.Ellipse.toString = function() {\r\n        return \"function(cx, cy, rx, ry)\";\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Circle = Graph.extend(Graph.svg.Vector, {\r\n\r\n        attrs: {\r\n            // 'stroke': '#696B8A',\r\n            // 'stroke-width': 1,\r\n            // 'fill': '#ffffff',\r\n            'style': '',\r\n            'class': Graph.string.CLS_VECTOR_CIRCLE\r\n        },\r\n        \r\n        constructor: function(cx, cy, r) {\r\n            var me = this;\r\n            \r\n            if (Graph.isPoint(cx)) {\r\n                r  = cy;\r\n                cy = cx.props.y;\r\n                cx = cx.props.x;\r\n            }\r\n\r\n            // me.$super('circle', {\r\n            //     cx: cx,\r\n            //     cy: cy,\r\n            //     r: r\r\n            // });\r\n\r\n            me.superclass.prototype.constructor.call(me, 'circle', {\r\n                cx: cx,\r\n                cy: cy,\r\n                r: r\r\n            });\r\n            \r\n        },\r\n\r\n        pathinfo: function() {\r\n            var a = this.attrs;\r\n            \r\n            return Graph.path([\r\n                ['M', a.cx, a.cy],\r\n                ['m', 0, -a.r],\r\n                ['a', a.r, a.r, 0, 1, 1, 0,  2 * a.r],\r\n                ['a', a.r, a.r, 0, 1, 1, 0, -2 * a.r],\r\n                ['z']\r\n            ]);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.graph.matrix.clone(),\r\n                rotate = this.props.rotate,\r\n                ax = this.attrs.cx,\r\n                ay = this.attrs.cy,\r\n                ar = this.attrs.r;\r\n\r\n            var x, y, r;\r\n            \r\n            if (sy === 1) {\r\n                r  = ar * sx;\r\n                sy = sx;\r\n            } else if (sx === 1) {\r\n                r  = ar * sy;\r\n                sx = sy;\r\n            } else if (sx < sy) {\r\n                r = ar * sy;\r\n                sx = sy;\r\n            } else if (sx > sy) {\r\n                r  = ar * sx;\r\n                sy = sx;\r\n            }\r\n\r\n            matrix.scale(sx, sy, cx, cy);\r\n\r\n            x = matrix.x(ax, ay);\r\n            y = matrix.y(ax, ay);\r\n\r\n            this.reset();\r\n\r\n            this.attr({\r\n                cx: x,\r\n                cy: y,\r\n                 r: r\r\n            });\r\n            \r\n            if (rotate) {\r\n                this.rotate(rotate, x, y).commit();    \r\n            }\r\n\r\n            return {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: x,\r\n                    cy: y\r\n                }\r\n            };\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Circle';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.svg.Circle.toString = function() {\r\n        return \"function(cx, cy, r)\";\r\n    };  \r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Rect = Graph.extend(Graph.svg.Vector, {\r\n\r\n        attrs: {\r\n            // 'stroke': '#333333',\r\n            // 'stroke-width': 1,\r\n            // 'fill': '#ffffff',\r\n            'style': '',\r\n            // 'shape-rendering': 'crispEdges',\r\n            'class': Graph.string.CLS_VECTOR_RECT\r\n        },\r\n\r\n        constructor: function(x, y, width, height, r) {\r\n            var me = this;\r\n            r = _.defaultTo(r, 6);\r\n\r\n            // me.$super('rect', {\r\n            //     x: _.defaultTo(x, 0),\r\n            //     y: _.defaultTo(y, 0),\r\n            //     rx: r,\r\n            //     ry: r,\r\n            //     width: _.defaultTo(width, 0),\r\n            //     height: _.defaultTo(height, 0)\r\n            // });\r\n\r\n            me.superclass.prototype.constructor.call(me, 'rect', {\r\n                x: _.defaultTo(x, 0),\r\n                y: _.defaultTo(y, 0),\r\n                rx: r,\r\n                ry: r,\r\n                width: _.defaultTo(width, 0),\r\n                height: _.defaultTo(height, 0)\r\n            });\r\n            \r\n            me.origpath = me.pathinfo();\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            var result = this.superclass.prototype.attr.apply(this, [name, value]);\r\n\r\n            if (name == 'rx' && value !== undefined) {\r\n                this.attrs.r = this.attrs.rx;    \r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        pathinfo: function() {\r\n            var a = this.attrs, p;\r\n\r\n            if (a.r) {\r\n                p = Graph.path([\r\n                    ['M', a.x + a.r, a.y], \r\n                    ['l', a.width - a.r * 2, 0], \r\n                    ['a', a.r, a.r, 0, 0, 1, a.r, a.r], \r\n                    ['l', 0, a.height - a.r * 2], \r\n                    ['a', a.r, a.r, 0, 0, 1, -a.r, a.r], \r\n                    ['l', a.r * 2 - a.width, 0], \r\n                    ['a', a.r, a.r, 0, 0, 1, -a.r, -a.r], \r\n                    ['l', 0, a.r * 2 - a.height], \r\n                    ['a', a.r, a.r, 0, 0, 1, a.r, -a.r], \r\n                    ['z']\r\n                ]);\r\n            } else {\r\n                p = Graph.path([\r\n                    ['M', a.x, a.y], \r\n                    ['l', a.width, 0], \r\n                    ['l', 0, a.height], \r\n                    ['l', -a.width, 0], \r\n                    ['z']\r\n                ]);\r\n            }\r\n\r\n            return p;\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.matrix().clone(),\r\n                rotate = matrix.rotate().deg;\r\n\r\n            var x, y, w, h;\r\n\r\n            matrix.scale(sx, sy, cx, cy);\r\n\r\n            this.reset();\r\n\r\n            x = matrix.x(this.attrs.x, this.attrs.y);\r\n            y = matrix.y(this.attrs.x, this.attrs.y);\r\n            w = this.attrs.width  * sx;\r\n            h = this.attrs.height * sy;\r\n\r\n            this.attr({\r\n                x: x,\r\n                y: y,\r\n                width: w,\r\n                height: h\r\n            });\r\n\r\n            if (rotate) {\r\n                this.rotate(rotate, x, y).commit();    \r\n            }\r\n            \r\n            return {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: x,\r\n                    cy: y\r\n                }\r\n            };\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Rect';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.svg.Rect.toString = function() {\r\n        return 'function(x, y, width, height, r)';\r\n    };\r\n\r\n}());","(function(){\r\n\r\n    Graph.svg.Polyline = Graph.extend(Graph.svg.Vector, {\r\n        attrs: {\r\n            // 'stroke': '#696B8A',\r\n            // 'stroke-width': 1,\r\n            // 'fill': '#ffffff',\r\n            'style': '',\r\n            'class': Graph.string.CLS_VECTOR_POLYLINE\r\n        },\r\n\r\n        constructor: function(points) {\r\n            points = _.defaultTo(points, '');\r\n\r\n            if (_.isArray(points)) {\r\n                if (points.length) {\r\n                    if (_.isPlainObject(points[0])) { \r\n                        points = _.map(points, function(p){ return p.x + ',' + p.y; });\r\n                    }\r\n                    points = _.join(points, ',');\r\n                } else {\r\n                    points = '';\r\n                }\r\n            }\r\n            \r\n            this.superclass.prototype.constructor.call(this, 'polyline', {\r\n                points: points\r\n            });\r\n        },\r\n\r\n        pathinfo: function() {\r\n            var command = Graph.util.polygon2path(this.attrs.points);\r\n            command = command.replace(/Z/i, '');\r\n            return Graph.path(command);\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            if (name == 'points' && _.isArray(value)) {\r\n                value = _.join(_.map(value, function(p){\r\n                    return p[0] + ',' + p[1];\r\n                }), ' ');\r\n            }\r\n            \r\n            return this.superclass.prototype.attr.call(this, name, value); // this.$super(name, value);\r\n        },\r\n        toString: function() {\r\n            return 'Graph.svg.Polyline';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.svg.Polyline.toString = function() {\r\n        return 'function(points)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Polygon = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        attrs: {\r\n            // 'stroke': '#696B8A',\r\n            // 'stroke-width': 1,\r\n            // 'fill': '#ffffff',\r\n            'style': '',\r\n            'class': Graph.string.CLS_VECTOR_POLYGON\r\n        },\r\n\r\n        constructor: function(points) {\r\n            points = _.defaultTo(points, '');\r\n            \r\n            if (_.isArray(points)) {\r\n                if (points.length) {\r\n                    if (_.isPlainObject(points[0])) { \r\n                        points = _.map(points, function(p){ return p.x + ',' + p.y; });\r\n                    }\r\n                    points = _.join(points, ',');\r\n                } else {\r\n                    points = '';\r\n                }\r\n            }\r\n\r\n            this.superclass.prototype.constructor.call(this, 'polygon', {\r\n                points: points\r\n            });\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            if (name == 'points' && _.isArray(value)) {\r\n                value = _.join(value, ',');\r\n            }\r\n            \r\n            return this.superclass.prototype.attr.call(this, name, value); // this.$super(name, value);\r\n        },\r\n\r\n        pathinfo: function() {\r\n            var command = Graph.util.polygon2path(this.attrs.points);\r\n            return Graph.path(command);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.graph.matrix.clone(),\r\n                origin = this.graph.matrix.clone(),\r\n                rotate = this.props.rotate,\r\n                ps = this.pathinfo().segments,\r\n                dt = [],\r\n                rx = ps[0][1],\r\n                ry = ps[0][2];\r\n\r\n            if (rotate) {\r\n                origin.rotate(-rotate, ps[0][1], ps[0][2]); \r\n                rx = origin.x(ps[0][1], ps[0][2]);\r\n                ry = origin.y(ps[0][1], ps[0][2]);\r\n            }\r\n\r\n            origin.scale(sx, sy, cx, cy);\r\n            matrix.scale(sx, sy, cx, cy);\r\n\r\n            _.forEach(ps, function(seg){\r\n                var ox, oy, x, y;\r\n                if (seg[0] != 'Z') {\r\n                    ox = seg[seg.length - 2];\r\n                    oy = seg[seg.length - 1];\r\n                    x = origin.x(ox, oy);\r\n                    y = origin.y(ox, oy);\r\n                    dt.push(x + ',' + y);\r\n                }\r\n            });\r\n\r\n            dt = _.join(dt, ' ');\r\n\r\n            this.reset();\r\n            this.attr('points', dt);\r\n\r\n            if (rotate) {\r\n                this.rotate(rotate, rx, ry).commit();\r\n            }\r\n            \r\n            return {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: rx,\r\n                    cy: ry\r\n                }\r\n            };\r\n        },\r\n        toString: function() {\r\n            return 'Graph.svg.Polygon';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.svg.Polygon.toString = function() {\r\n        return 'function(points)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Group = Graph.extend(Graph.svg.Vector, {\r\n\r\n        attrs: {\r\n            'stroke': null,\r\n            'stroke-width': null,\r\n            'class': null,\r\n            'fill': null,\r\n            'style': null\r\n        },\r\n        \r\n        constructor: function(x, y) {\r\n            // this.$super('g');\r\n            this.superclass.prototype.constructor.call(this, 'g');\r\n\r\n            if (x !== undefined && y !== undefined) {\r\n                this.graph.matrix.translate(x, y);\r\n                this.attr('transform', this.graph.matrix.toString());\r\n            }\r\n        },\r\n\r\n        pathinfo: function() {\r\n            var size = this.dimension();\r\n\r\n            return new Graph.lang.Path([\r\n                ['M', size.x, size.y], \r\n                ['l', size.width, 0], \r\n                ['l', 0, size.height], \r\n                ['l', -size.width, 0], \r\n                ['z']\r\n            ]);\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Group';\r\n        }\r\n        \r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.svg.Group.toString = function() {\r\n        return 'function(x, y)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Text = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        attrs: {\r\n            // 'stroke': '#000000',\r\n            // 'stroke-width': .05,\r\n            // 'fill': '#000000',\r\n            // 'font-size': '12px',\r\n            // 'font-family': 'Arial',\r\n            'text-anchor': 'middle',\r\n            'class': Graph.string.CLS_VECTOR_TEXT\r\n        },  \r\n\r\n        props: {\r\n            id: '',\r\n            guid: '',\r\n            text: '',\r\n            type: 'text',\r\n            rotate: 0,\r\n            lineHeight: 1,\r\n            fontSize: 12,\r\n            traversable: true,\r\n            focusable: false,\r\n            selectable: true,\r\n            selected: false,\r\n            rendered: false\r\n        },\r\n\r\n        rows: [],\r\n\r\n        constructor: function(x, y, text) {\r\n            // this.$super('text', {\r\n            //     x: _.defaultTo(x, 0),\r\n            //     y: _.defaultTo(y, 0)\r\n            // });\r\n\r\n            this.superclass.prototype.constructor.call(this, 'text', {\r\n                x: _.defaultTo(x, 0),\r\n                y: _.defaultTo(y, 0)\r\n            });\r\n\r\n            this.attr({\r\n                'font-size': Graph.config.font.size,\r\n                'font-family': Graph.config.font.family\r\n            });\r\n\r\n            if (text) {\r\n                this.write(text);\r\n            }\r\n            \r\n            this.on('render', _.bind(this.onTextRender, this));\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            var result = this.superclass.prototype.attr.apply(this, [name, value]);\r\n            \r\n            if (name == 'font-size' && value !== undefined) {\r\n                this.props.fontSize = _.parseInt(value) || 12;\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        write: function(text) {\r\n            var me = this, parts, span;\r\n\r\n            if (text === undefined) {\r\n                return me.props.text;\r\n            }\r\n\r\n            parts = (text || '').split(\"\\n\");\r\n\r\n            me.empty();\r\n            me.rows = [];\r\n\r\n            _.forEach(parts, function(t, i){\r\n                me.addSpan(t);\r\n            });\r\n\r\n            me.props.text = text;\r\n            me.cached.bbox = null;\r\n        },\r\n\r\n        addSpan: function(text) {\r\n            var me = this, span;\r\n\r\n            text = _.defaultTo(text, '');\r\n\r\n            span = Graph.$('<tspan/>');\r\n            span.text(text);\r\n\r\n            me.elem.append(span);\r\n            me.rows.push(span);\r\n\r\n            return span;\r\n        },\r\n\r\n        /**\r\n         * Arrange position\r\n         */\r\n        arrange: function() {\r\n            var rows = this.rows,\r\n                size = this.props.fontSize,\r\n                line = this.props.lineHeight,\r\n                bbox = this.bbox().toJson();\r\n\r\n            if (rows.length) {\r\n                for (var i = 0, ii = rows.length; i < ii; i++) {\r\n                    if (i) {\r\n                        rows[i].attr('x', this.attrs.x);\r\n                        rows[i].attr('dy', size * line);\r\n                    }\r\n                }\r\n\r\n                rows[0].attr('dy', 0);\r\n\r\n                // var box = this.bbox().toJson(),\r\n                //     off = this.attrs.y - (box.y + box.height / 2);\r\n\r\n                // if (off) {\r\n                //     rows[0].setAttribute('dy', off);    \r\n                // }\r\n                \r\n            }\r\n        },\r\n\r\n        wrap: function(width) {\r\n            var text = this.props.text,\r\n                words = text.split(/\\s+/).reverse(),\r\n                lines = [],\r\n                lineNo = 0,\r\n                lineHeight = this.props.lineHeight,\r\n                ax = this.attrs.x,\r\n                ay = this.attrs.y,\r\n                dy = 0;\r\n\r\n            var word, span;\r\n\r\n            this.empty();\r\n\r\n            span = this.addSpan();\r\n            span.attr({\r\n                x: ax, \r\n                y: ay, \r\n                dy: dy + 'em'\r\n            });\r\n\r\n            while((word = words.pop())) {\r\n                lines.push(word);\r\n                span.text(lines.join(' '));\r\n                if (span.node().getComputedTextLength() > width) {\r\n                    lines.pop();\r\n                    span.text(lines.join(' '));\r\n                    lines = [word];\r\n                    span = this.addSpan(word);\r\n                    span.attr({\r\n                        x: ax, \r\n                        y: ay, \r\n                        dy: (++lineNo * lineHeight) + 'em'\r\n                    });\r\n                }\r\n            }\r\n        },\r\n\r\n        center: function(target) {\r\n            if (target) {\r\n                var targetBox = target.bbox().toJson(),\r\n                    matrix = this.graph.matrix.data();\r\n\r\n                var textBox, dx, dy, cx, cy;\r\n\r\n                this.reset();\r\n\r\n                textBox = this.bbox().toJson();   \r\n\r\n                dx = targetBox.width / 2;\r\n                dy = targetBox.height / 2;\r\n                cx = textBox.x + textBox.width / 2;\r\n                cy = textBox.y + textBox.height / 2;\r\n\r\n                if (matrix.rotate) {\r\n                    this.translate(dx, dy).rotate(matrix.rotate).commit();\r\n                } else {\r\n                    this.translate(dx, dy).commit();\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        pathinfo: function() {\r\n            var size = this.dimension();\r\n\r\n            return new Graph.lang.Path([\r\n                ['M', size.x, size.y], \r\n                ['l', size.width, 0], \r\n                ['l', 0, size.height], \r\n                ['l', -size.width, 0], \r\n                ['z']\r\n            ]);\r\n\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Text';\r\n        },\r\n\r\n        onTextRender: function() {\r\n            var me = this;\r\n            me.arrange();\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.svg.Text.toString = function() {\r\n        return 'function(x, y, text)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Image = Graph.extend(Graph.svg.Vector, {\r\n\r\n        attrs: {\r\n            preserveAspectRatio: 'none',\r\n            class: Graph.string.CLS_VECTOR_IMAGE\r\n        },\r\n\r\n        constructor: function(src, x, y, width, height) {\r\n            var me = this;\r\n\r\n            // me.$super('image', {\r\n            //     'xlink:href': src,\r\n            //     'x': _.defaultTo(x, 0),\r\n            //     'y': _.defaultTo(y, 0),\r\n            //     'width': _.defaultTo(width, 0),\r\n            //     'height': _.defaultTo(height, 0)\r\n            // });\r\n            \r\n            me.superclass.prototype.constructor.call(me, 'image', {\r\n                'xlink:href': src,\r\n                'x': _.defaultTo(x, 0),\r\n                'y': _.defaultTo(y, 0),\r\n                'width': _.defaultTo(width, 0),\r\n                'height': _.defaultTo(height, 0)\r\n            });\r\n            \r\n        },\r\n\r\n        align: function(value, scale) {\r\n            if (value == 'none') {\r\n                this.attr('preserveAspectRatio', 'none');\r\n\r\n                return this;\r\n            }\r\n\r\n            var aspect = this.attrs.preserveAspectRatio,\r\n                align = '';\r\n\r\n            aspect = /(meet|slice)/.test(aspect) \r\n                ? aspect.replace(/(.*)\\s*(meet|slice)/i, '$2')\r\n                : '';\r\n\r\n            scale = _.defaultTo(scale, aspect);\r\n            value = value.replace(/s+/, ' ').toLowerCase();\r\n\r\n            switch(value) {\r\n                case 'top left':\r\n                case 'left top':\r\n                    align = 'xMinYMin';\r\n                    break;\r\n                case 'top center':\r\n                case 'center top':\r\n                    align = 'xMidYMin';\r\n                    break;\r\n                case 'top right':\r\n                case 'right top':\r\n                    align = 'xMaxYMin';\r\n                    break;\r\n                case 'left':\r\n                    align = 'xMinYMid';\r\n                    break;\r\n                case 'center':\r\n                    align = 'xMidYMid';\r\n                    break;\r\n                case 'right':\r\n                    align = 'xMaxYMid';\r\n                    break;\r\n                case 'bottom left':\r\n                case 'left bottom':\r\n                    align = 'xMinYMax';\r\n                    break;\r\n                case 'bottom center':\r\n                case 'center bottom':\r\n                    align = 'xMidYMax';\r\n                    break;\r\n                case 'bottom right':\r\n                case 'right bottom':\r\n                    align = 'xMaxYMax';\r\n                    break;\r\n            }\r\n\r\n            aspect = align + (scale ? ' ' + scale : '');\r\n            this.attr('preserveAspectRatio', aspect);\r\n\r\n            return this;\r\n        },\r\n\r\n        pathinfo: function() {\r\n            var a = this.attrs;\r\n\r\n            return new Graph.lang.Path([\r\n                ['M', a.x, a.y], \r\n                ['l', a.width, 0], \r\n                ['l', 0, a.height], \r\n                ['l', -a.width, 0], \r\n                ['z']\r\n            ]);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var ms = this.graph.matrix.clone().scale(sx, sy, cx, cy),\r\n                ro = this.graph.matrix.data().rotate;\r\n\r\n            this.reset();\r\n\r\n            var x = ms.x(this.attrs.x, this.attrs.y),\r\n                y = ms.y(this.attrs.x, this.attrs.y),\r\n                w = +this.attrs.width * sx,\r\n                h = +this.attrs.height * sy;\r\n\r\n            this.attr({\r\n                x: x,\r\n                y: y,\r\n                width: w,\r\n                height: h\r\n            });\r\n            \r\n            this.rotate(ro, x, y).commit();\r\n\r\n            return {\r\n                matrix: ms,\r\n                x: x,\r\n                y: y\r\n            };\r\n        },\r\n        toString: function() {\r\n            return 'Graph.svg.Image';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n    Graph.svg.Image.toString = function() {\r\n        return 'function(src, x, y, width, height)';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    /**\r\n     * Paper - root viewport\r\n     */\r\n\r\n    var Paper = Graph.svg.Paper = Graph.extend(Graph.svg.Vector, {\r\n\r\n        attrs: {\r\n            'class': Graph.string.CLS_VECTOR_SVG\r\n        },\r\n\r\n        props: {\r\n            id: null,\r\n            guid: null,\r\n            type: 'paper',\r\n            text: null,\r\n            rotate: 0,\r\n\r\n            traversable: false,\r\n            selectable: false,\r\n            selected: false,\r\n            focusable: false,\r\n\r\n            rendered: false,\r\n            showOrigin: true,\r\n            zoomable: true\r\n        },\r\n\r\n        components: {\r\n            viewport: null\r\n        },\r\n\r\n        constructor: function(width, height, options) {\r\n            var me = this;\r\n\r\n            me.superclass.prototype.constructor.call(me, 'svg', {\r\n                'xmlns': Graph.config.xmlns.svg,\r\n                'xmlns:link': Graph.config.xmlns.xlink,\r\n                'version': Graph.config.svg.version\r\n                // 'width': _.defaultTo(width, 200),\r\n                // 'height': _.defaultTo(height, 200)\r\n            });\r\n\r\n            _.assign(me.props, options || {});\r\n\r\n            me.style({\r\n                overflow: 'hidden',\r\n                position: 'relative'\r\n            });\r\n\r\n            me.interactable();\r\n            me.initLayout();\r\n\r\n            me.plugins.collector = new Graph.plugin.Collector(me);\r\n            me.plugins.toolmgr.register('collector', 'plugin');\r\n\r\n            me.plugins.linker = new Graph.plugin.Linker(me);\r\n            me.plugins.toolmgr.register('linker', 'plugin');\r\n\r\n            me.plugins.pencil = new Graph.plugin.Pencil(me);\r\n            me.plugins.definer = new Graph.plugin.Definer(me);\r\n\r\n            me.plugins.snapper = new Graph.plugin.Snapper(me);\r\n\r\n            me.utils.spotlight = new Graph.util.Spotlight(me);\r\n            me.utils.toolpad = new Graph.util.Toolpad(me);\r\n            \r\n            me.on('pointerdown', _.bind(me.onPointerDown, me));\r\n            me.on('keynavdown', _.bind(me.onKeynavDown, me));\r\n            me.on('keynavup', _.bind(me.onKeynavUp, me));\r\n\r\n            // subscribe topics\r\n            Graph.topic.subscribe('link/update', _.bind(me.listenLinkUpdate, me));\r\n            Graph.topic.subscribe('link/remove', _.bind(me.listenLinkRemove, me));\r\n            Graph.topic.subscribe('shape/draw',  _.bind(me.listenShapeDraw, me));\r\n        },\r\n\r\n        initLayout: function() {\r\n            // create viewport\r\n            var viewport = (new Graph.svg.Group())\r\n                .addClass(Graph.string.CLS_VECTOR_VIEWPORT)\r\n                .selectable(false);\r\n\r\n            viewport.props.viewport = true;\r\n            \r\n            this.components.viewport = viewport.guid();\r\n\r\n            if (this.props.showOrigin) {\r\n                var origin = Graph.$(\r\n                    '<g class=\"graph-origin\">' + \r\n                        '<rect class=\"x\" rx=\"1\" ry=\"1\" x=\"-16\" y=\"-2\" height=\"2\" width=\"30\"></rect>' + \r\n                        '<rect class=\"y\" rx=\"1\" ry=\"1\" x=\"-2\" y=\"-16\" height=\"30\" width=\"2\"></rect>' + \r\n                        '<text class=\"t\" x=\"-40\" y=\"-10\">(0, 0)</text>' + \r\n                    '</g>'\r\n                );\r\n                \r\n                origin.appendTo(viewport.elem);\r\n                origin = null;\r\n            }\r\n\r\n            // render viewport\r\n            viewport.tree.paper = viewport.tree.parent = this.guid();\r\n            viewport.translate(0.5, 0.5).commit();\r\n\r\n            this.elem.append(viewport.elem);\r\n            this.children().push(viewport);\r\n\r\n            viewport.on('render', function(){\r\n                viewport.cascade(function(c){\r\n                    if (c !== viewport && ! c.props.rendered) {\r\n                        c.props.rendered = true;\r\n                        c.tree.paper = viewport.tree.paper;\r\n                        c.fire('render');\r\n                    }\r\n                });\r\n            });\r\n\r\n            this.layout('default');\r\n        },\r\n\r\n        layout: function(options) {\r\n            var viewport = this.viewport();\r\n\r\n            if (options === undefined) {\r\n                return viewport.graph.layout;\r\n            }1\r\n            \r\n            viewport.layout(options);\r\n            return this;\r\n        },\r\n\r\n        shape: function(names, options) {\r\n            var shape = Graph.shape(names, options);\r\n            shape.render(this);\r\n            \r\n            return shape;\r\n        },\r\n\r\n        render: function(container) {\r\n            var me = this, \r\n                vp = me.viewport(),\r\n                id = me.guid();\r\n\r\n            if (me.props.rendered) {\r\n                return;\r\n            }\r\n\r\n            container = Graph.$(container);\r\n            container.append(me.elem);\r\n\r\n            me.tree.container = container;\r\n            \r\n            me.elem.css({\r\n                width: '100%',\r\n                height: '100%'\r\n            });\r\n            \r\n            me.props.rendered = true;\r\n            me.fire('render');\r\n\r\n            vp.props.rendered = true;\r\n            vp.fire('render');\r\n\r\n            if (me.props.zoomable) {\r\n                me.zoomable();\r\n                \r\n                var debounce = _.debounce(function(){\r\n                    debounce.flush();\r\n                    debounce = null;\r\n                    \r\n                    me.tool().activate('panzoom');\r\n                }, 1000);\r\n                \r\n                debounce();\r\n            }\r\n\r\n            return me;\r\n        },\r\n\r\n        container: function() {\r\n            return this.tree.container;\r\n        },\r\n\r\n        viewport: function() {\r\n            return Graph.registry.vector.get(this.components.viewport);\r\n        },\r\n\r\n        // @Override\r\n        scale: function(sx, sy, cx, cy) {\r\n            if (sx === undefined) {\r\n                return this.viewport().matrix().scale();\r\n            }\r\n            return this.plugins.transformer.scale(sx, sy, cx, cy);\r\n        },\r\n\r\n        snapping: function(options) {\r\n            if (Graph.isVector(options)) {\r\n                options = {\r\n                    vector: options,\r\n                    shield: options,\r\n                    enabled: true\r\n                };\r\n            }\r\n\r\n            var snapper = this.plugins.snapper;\r\n            snapper.subscribe(options);\r\n        },\r\n\r\n        connect: function(source, target, start, end, options) {\r\n            var layout, router, link;\r\n\r\n            if (start) {\r\n                if ( ! Graph.isPoint(start)) {\r\n                    options = start;\r\n                    start = null;\r\n                    end = null;    \r\n                }\r\n            }\r\n\r\n            source = Graph.isShape(source) ? source.hub() : source;\r\n            target = Graph.isShape(target) ? target.hub() : target;\r\n            layout = this.layout();\r\n            router = layout.createRouter(source, target, options);\r\n            \r\n            link = layout.createLink(router);\r\n            \r\n            link.connect(start, end);\r\n            link.render(this);\r\n\r\n            return link;\r\n        },\r\n\r\n        parse: function(json) {\r\n            var paper  = this;\r\n            var shapes = {};\r\n\r\n            _.forEach(json.shapes, function(o){\r\n                (function(o){\r\n                    var s = Graph.shape(o.type, o.data);\r\n                    s.render(paper);\r\n                    shapes[o.data.id] = s;    \r\n                }(o));\r\n            });\r\n\r\n            _.forEach(json.links, function(o){\r\n                (function(o){\r\n                    paper.connect(shapes[o.source], shapes[o.target]);\r\n                }(o))\r\n            });\r\n\r\n        },\r\n\r\n        save: function() {\r\n            alert('save');\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Paper';\r\n        },\r\n\r\n        ///////// OBSERVERS /////////\r\n        \r\n        onPointerDown: function(e) {\r\n            if (e.target === this.node()) {\r\n                var tool = this.tool().current();\r\n                if (tool != 'collector') {\r\n                    this.tool().activate('panzoom');    \r\n                }\r\n            }\r\n        },\r\n\r\n        onKeynavDown: function(e) {\r\n            var me = this, key = e.keyCode;\r\n\r\n            switch(key) {\r\n                case Graph.event.DELETE:\r\n\r\n                    var selections = me.plugins.collector.collection;\r\n                    \r\n                    for (var v, i = selections.length - 1; i >= 0; i--) {\r\n                        if ((v = selections[i])) {\r\n                            v.remove();\r\n                            selections.splice(i, 1);\r\n                        }\r\n                    }\r\n\r\n                    e.preventDefault();\r\n                    break;\r\n\r\n                case Graph.event.SHIFT:\r\n                    \r\n                    break;\r\n\r\n                case Graph.event.ESC:\r\n\r\n                    break;\r\n            }   \r\n\r\n        },\r\n\r\n        onKeynavUp: function(e) {\r\n            var me = this, key = e.keyCode;\r\n\r\n            switch(key) {\r\n                case Graph.event.SHIFT:\r\n\r\n                    break;\r\n            }\r\n        },\r\n\r\n        saveAsImage: function(filename) {\r\n            var exporter = new Graph.data.Exporter(this);\r\n            exporter.exportPNG(filename);\r\n            exporter = null;\r\n        },\r\n\r\n        /**\r\n         * save workspace\r\n         */\r\n        save: function() {\r\n\r\n        },\r\n\r\n        ///////// TOPIC LISTENERS /////////\r\n        \r\n        listenLinkUpdate: _.debounce(function() {\r\n            this.layout().arrangeLinks();\r\n        }, 300),\r\n        \r\n        listenLinkRemove: _.debounce(function(){\r\n            this.layout().arrangeLinks();\r\n        }, 10),\r\n\r\n        listenShapeDraw: _.debounce(function() {\r\n            this.layout().arrangeShapes();\r\n        }, 1)\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n    \r\n    Paper.toString = function() {\r\n        return 'function( width, height )';\r\n    };\r\n\r\n    ///////// EXTENSIONS /////////\r\n\r\n    var vectors = {\r\n        ellipse: 'Ellipse',\r\n        circle: 'Circle',\r\n        rect: 'Rect',\r\n        path: 'Path',\r\n        polyline: 'Polyline',\r\n        polygon: 'Polygon',\r\n        group: 'Group',\r\n        text: 'Text',\r\n        image: 'Image',\r\n        line: 'Line',\r\n        connector: 'Connector'\r\n    };\r\n\r\n    _.forOwn(vectors, function(name, method){\r\n        (function(name, method){\r\n            Paper.prototype[method] = function() {\r\n                var arg = [name].concat(_.toArray(arguments)),\r\n                    svg = Graph.svg.apply(null, arg);\r\n\r\n                svg.tree.paper = this.guid();\r\n                svg.render(this);\r\n\r\n                arg = null;\r\n                return svg;\r\n            };\r\n        }(name, method));\r\n    });\r\n\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Link = Graph.link.Link = Graph.extend({\r\n        \r\n        props: {\r\n            id: null,\r\n            guid: null,\r\n            rendered: false,\r\n            selected: false,\r\n            label: '',\r\n            labelDistance: null,\r\n            labelX: null,\r\n            labelY: null,\r\n            source: null,\r\n            target: null\r\n        },\r\n\r\n        components: {\r\n            block: null,\r\n            coat: null,\r\n            path: null,\r\n            label: null,\r\n            editor: null\r\n        },\r\n\r\n        cached: {\r\n            bendpoints: null,\r\n            controls: null,\r\n            convex: null\r\n        },\r\n        \r\n        handlers: {\r\n            source: null,\r\n            target: null\r\n        },\r\n        \r\n        router: null,\r\n\r\n        constructor: function(router, options) {\r\n            options = _.extend({\r\n                id: 'graph-link-' + (++Link.guid)\r\n            }, options || {});\r\n\r\n            _.assign(this.props, options);\r\n\r\n            this.props.guid = this.props.id; // Graph.uuid();\r\n            this.router = router;\r\n\r\n            this.initComponent();\r\n            this.bindResource('source', router.source());\r\n            this.bindResource('target', router.target());\r\n\r\n            this.router.on('route', _.bind(this.onRouterRoute, this));\r\n            this.router.on('reroute', _.bind(this.onRouterReroute, this));\r\n            \r\n            Graph.registry.link.register(this);\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components;\r\n            var block, coat, path, editor, label;\r\n\r\n            block = (new Graph.svg.Group())\r\n                .addClass('graph-link')\r\n                .selectable(false);\r\n                \r\n            block.elem.data(Graph.string.ID_LINK, this.props.guid);\r\n\r\n            coat = (new Graph.svg.Path())\r\n                .removeClass(Graph.string.CLS_VECTOR_PATH)\r\n                .addClass('graph-link-coat')\r\n                // .selectable(false)\r\n                .render(block);\r\n\r\n            coat.data('text', this.props.label);\r\n            coat.elem.data(Graph.string.ID_LINK, this.props.guid);\r\n\r\n            coat.draggable({\r\n                ghost: true,\r\n                single: false,\r\n                manual: true\r\n            });\r\n            \r\n            coat.editable({\r\n                width: 150,\r\n                height: 80,\r\n                offset: 'pointer'\r\n            });\r\n\r\n            coat.on('select.link', _.bind(this.onCoatSelect, this));\r\n            coat.on('deselect.link', _.bind(this.onCoatDeselect, this));\r\n            coat.on('dragstart.link', _.bind(this.onCoatDragStart, this));\r\n            coat.on('dragend.link', _.bind(this.onCoatDragEnd, this));\r\n            coat.on('edit.link', _.bind(this.onCoatEdit, this));\r\n            coat.on('beforeedit.link', _.bind(this.onCoatBeforeEdit, this));\r\n            coat.on('remove.link', _.bind(this.onCoatRemove, this));\r\n\r\n            path = (new Graph.svg.Path())\r\n                .removeClass(Graph.string.CLS_VECTOR_PATH)\r\n                .addClass('graph-link-path')\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .attr('marker-end', 'url(#marker-arrow)')\r\n                .render(block);\r\n\r\n            path.elem.data(Graph.string.ID_LINK, this.props.guid);\r\n\r\n            label = (new Graph.svg.Text(0, 0, ''))\r\n                .addClass('graph-link-label')\r\n                .selectable(false)\r\n                // .attr('text-anchor', 'left')\r\n                .render(block);\r\n            \r\n            label.draggable({ghost: true});\r\n            \r\n            label.on('render.link', _.bind(this.onLabelRender, this));\r\n            label.on('dragend.link', _.bind(this.onLabelDragend, this));\r\n\r\n            // enable label doubletap\r\n            var labelVendor = label.interactable().vendor();\r\n            labelVendor.on('doubletap', _.bind(this.onLabelDoubletap, this));\r\n                \r\n            editor = (new Graph.svg.Group())\r\n                .selectable(false)\r\n                .render(block);\r\n                \r\n            comp.block = block.guid();\r\n            comp.coat = coat.guid();\r\n            comp.path = path.guid();\r\n            comp.label = label.guid();\r\n            comp.editor = editor.guid();\r\n        },\r\n        \r\n        bindResource: function(type, resource) {\r\n            var router = this.router,\r\n                existing = this.props[type],\r\n                handlers = this.handlers[type];\r\n            \r\n            if (existing && handlers) {\r\n                existing = Graph.registry.vector.get(existing);\r\n                if (existing) {\r\n                    var name, ns;\r\n                    for (name in handlers) {\r\n                        ns = name + '.link';\r\n                        existing.off(ns, handlers[name]);\r\n                        ns = null;\r\n                    }\r\n                }\r\n            }\r\n            \r\n            handlers = {};\r\n\r\n            handlers.resize    = _.bind(getHandler(this, type, 'resize'), this);\r\n            handlers.rotate    = _.bind(getHandler(this, type, 'rotate'), this);\r\n            handlers.dragstart = _.bind(getHandler(this, type, 'dragstart'), this, _, resource);\r\n            handlers.dragmove  = _.bind(getHandler(this, type, 'dragmove'), this);\r\n            handlers.dragend   = _.bind(getHandler(this, type, 'dragend'), this);\r\n\r\n            this.handlers[type] = handlers;\r\n            this.props[type] = resource.guid();\r\n            \r\n            resource.on('resize.link', handlers.resize);\r\n            resource.on('rotate.link', handlers.rotate);\r\n            \r\n            // VERY EXPENSIVE!!!\r\n            if (resource.isDraggable()) {\r\n                resource.on('dragstart.link', handlers.dragstart);\r\n                if ( ! resource.draggable().ghost()) {\r\n                    resource.on('dragmove.link', handlers.dragmove);\r\n                } else {\r\n                    resource.on('dragend.link', handlers.dragend);\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        bindSource: function(source) {\r\n            return this.bindResource('source', source);\r\n        },\r\n\r\n        bindTarget: function(target) {\r\n            return this.bindResource('target', target);\r\n        },\r\n\r\n        component: function(name) {\r\n            if (name === undefined) {\r\n                return Graph.registry.vector.get(this.components.block);\r\n            }\r\n            return Graph.registry.vector.get(this.components[name]);\r\n        },\r\n        \r\n        invalidate: function() {\r\n            this.cached.bendpoints = null;\r\n        },\r\n\r\n        render: function(container) {\r\n            var paper;\r\n\r\n            this.component().render(container);\r\n            paper = container.paper();\r\n\r\n            if (paper) {\r\n                Graph.registry.link.setContext(this.guid(), paper.guid());\r\n            }\r\n        },\r\n\r\n        id: function() {\r\n            return this.props.id;\r\n        },\r\n\r\n        guid: function() {\r\n            return this.props.guid;\r\n        },\r\n\r\n        connect: function(/*start, end*/) {\r\n            this.router.route();\r\n        },\r\n        \r\n        update: function(command, silent) {\r\n            \r\n            silent = _.defaultTo(silent, false);\r\n            \r\n            this.component('coat').attr('d', command).dirty(true);\r\n            this.component('path').attr('d', command);\r\n            this.invalidate();\r\n            \r\n            if ( ! silent) {\r\n                this.redraw();\r\n                this.fire('update');\r\n                Graph.topic.publish('link/update');\r\n            }\r\n        },\r\n        \r\n        refresh: function(silent) {\r\n            var command = this.router.command();\r\n            this.update(command, silent);\r\n        },\r\n\r\n        updateConvex: function(convex) {\r\n            this.cached.convex = convex;\r\n        },\r\n        \r\n        removeConvex: function() {\r\n            this.cached.convex = null;\r\n        },\r\n        \r\n        redraw: function() {\r\n            // TODO: update label position\r\n            \r\n            if (this.props.label) {\r\n                var label = this.component('label'),\r\n                    bound = label.bbox().toJson(),\r\n                    distance = this.props.labelDistance || .5,\r\n                    scale = this.router.layout().currentScale(),\r\n                    path = this.router.pathinfo(),\r\n                    dots = path.pointAt(distance * path.length(), true),\r\n                    align = Graph.util.pointAlign(dots.start, dots.end, 10);\r\n                \r\n                if (align == 'h') {\r\n                    dots.x += ((10 + bound.width / 2) / scale.x);\r\n                } else {\r\n                    dots.y -= ((10 + bound.height / 2) / scale.y);\r\n                }\r\n                \r\n                label.attr({\r\n                    x: dots.x,\r\n                    y: dots.y\r\n                });\r\n                \r\n                path = null;\r\n                dots = null;\r\n\r\n                label.dirty(true);\r\n            }\r\n            \r\n        },\r\n        \r\n        label: function(text, x, y) {\r\n            var path, distance, point, align;\r\n            \r\n            if (text === undefined) {\r\n                return this.props.label;\r\n            }\r\n\r\n            this.props.label = text;\r\n            \r\n            if (x !== undefined && y !== undefined) {\r\n                path = this.router.pathinfo();\r\n                point = path.nearest({x: x, y: y});\r\n                distance = point.distance / path.length();\r\n            } else if (_.isNull(this.props.labelDistance)) {\r\n                path = this.router.pathinfo();\r\n                distance = 0.5;\r\n                point = path.pointAt(path.length() / 2, true);\r\n            }\r\n            \r\n            if (point) {\r\n                this.props.labelDistance = distance;\r\n                path = point = null;\r\n            }\r\n            \r\n            this.component('label').write(text);\r\n            this.component('coat').data('text', text);\r\n            \r\n            this.redraw();\r\n            return this;\r\n        },\r\n\r\n        select: function() {\r\n            this.props.selected = true;\r\n            this.component('block').addClass('selected');\r\n            this.sendToFront();\r\n            this.resumeControl();\r\n        },\r\n\r\n        deselect: function() {\r\n            this.props.selected = false;\r\n            this.component('block').removeClass('selected');\r\n            this.suspendControl();\r\n        },\r\n        \r\n        renderControl: function() {\r\n            // TODO: render bends control\r\n        },\r\n        \r\n        resumeControl: function() {\r\n            var me = this, editor = me.component('editor');\r\n\r\n            if ( ! me.cached.bendpoints) {\r\n                me.cached.bendpoints = me.router.bendpoints();\r\n                me.renderControl();\r\n            }\r\n\r\n            editor.elem.appendTo(this.component('block').elem);\r\n        },\r\n        \r\n        suspendControl: function() {\r\n            this.component('editor').elem.detach();\r\n        },\r\n\r\n        sendToFront: function() {\r\n            var container = this.component().parent();\r\n            this.component().elem.appendTo(container.elem);\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.link.Link';\r\n        },\r\n\r\n        ///////// OBSERVERS /////////\r\n        \r\n        onRouterRoute: function(e) {\r\n            var command = e.command;\r\n            this.update(command);\r\n        },\r\n        \r\n        onRouterReroute: function(e) {\r\n            var source = e.source,\r\n                target = e.target;\r\n\r\n            this.bindResource('source', source);\r\n            this.bindResource('target', target);\r\n            this.sendToFront();\r\n        },\r\n        \r\n        onLabelRender: function(e) {\r\n            if (this.props.label) {\r\n                this.label(this.props.label);\r\n            }\r\n        },\r\n        \r\n        onLabelDragend: function(e) {\r\n            var label = this.component('label'),\r\n                matrix = label.matrix(),\r\n                x = label.attrs.x,\r\n                y = label.attrs.y,\r\n                p = {\r\n                    x: matrix.x(x, y),\r\n                    y: matrix.y(x, y)\r\n                }\r\n            \r\n            label.attr({\r\n                x: p.x,\r\n                y: p.y\r\n            });\r\n            \r\n            // update label distance\r\n            var path = this.router.pathinfo(),\r\n                near = path.nearest(p);\r\n            \r\n            this.props.labelDistance = near.distance / path.length();\r\n            \r\n            label.reset();\r\n            \r\n            matrix = path = null;\r\n        },\r\n\r\n        onLabelDoubletap: function(e) {\r\n            var coat = this.component('coat');\r\n            coat.editable().startEdit(e);\r\n        },\r\n\r\n        onCoatBeforeEdit: function(e) {\r\n            this.component('label').hide();\r\n            this.component().addClass('editing');\r\n        },\r\n\r\n        onCoatEdit: function(e) {\r\n            this.component().removeClass('editing');\r\n            this.component('label').show();\r\n            this.label(e.text, e.left, e.top);\r\n        },\r\n\r\n        onCoatSelect: function(e) {\r\n            this.select();\r\n        },\r\n\r\n        onCoatDeselect: function(e) {\r\n            this.deselect();\r\n        },\r\n\r\n        onCoatDragStart: function(e) {\r\n            this.suspendControl();\r\n        },\r\n\r\n        onCoatDragEnd: function(e) {\r\n            var dx = e.dx,\r\n                dy = e.dy;\r\n            this.router.relocate(dx, dy);\r\n            this.update(this.router.command());\r\n        },\r\n\r\n        onCoatRemove: function(e) {\r\n            this.destroy();\r\n        },\r\n\r\n        ///////// OBSERVERS /////////\r\n        \r\n        onSourceRotate: function() {\r\n    \r\n        },\r\n\r\n        onSourceDragstart: function(e, source) {\r\n            var lasso = this.component('coat').$collector;\r\n            if ( ! source.$collector) {\r\n                if (lasso) {\r\n                    lasso.decollect(this.component('coat'));\r\n                }\r\n            }\r\n\r\n            // remove convex\r\n            this.cached.convex = null;\r\n        },\r\n\r\n        onSourceDragmove: function() {\r\n            this.router.repair('source');\r\n        },\r\n\r\n        onSourceDragend: function(e) {\r\n            var lasso = this.component('coat').$collector;\r\n            if ( ! lasso) {\r\n                var port = this.router.tail();\r\n                port.x += e.dx;\r\n                port.y += e.dy;\r\n                this.router.repair(this.router.source(), port);\r\n            }\r\n        },\r\n\r\n        onSourceResize: function(e) {\r\n            var port = this.router.tail();\r\n            \r\n            port.x += e.translate.dx;\r\n            port.y += e.translate.dy;\r\n            \r\n            this.router.repair(this.router.source(), port);\r\n        },\r\n\r\n        onTargetRotate: function() {\r\n            \r\n        },\r\n\r\n        onTargetDragstart: function(e, target) {\r\n            var lasso = this.component('coat').$collector;\r\n\r\n            if ( ! target.$collector) {\r\n                if (lasso) {\r\n                    lasso.decollect(this.component('coat'));\r\n                }\r\n            }\r\n\r\n            // remove convex\r\n            this.cached.convex = null;\r\n        },\r\n\r\n        onTargetDragmove: function() {\r\n            this.router.repair('target');\r\n        },\r\n\r\n        onTargetDragend: function(e) {\r\n            var lasso = this.component('coat').$collector;\r\n            if ( ! lasso) {\r\n                var port = this.router.head();\r\n                port.x += e.dx;\r\n                port.y += e.dy;\r\n                    \r\n                this.router.repair(this.router.target(), port);\r\n            }\r\n        },\r\n\r\n        onTargetResize: function(e) {\r\n            var port = this.router.head();\r\n            \r\n            port.x += e.translate.dx;\r\n            port.y += e.translate.dy;\r\n            \r\n            this.router.repair(this.router.target(), port);\r\n        },\r\n\r\n        destroy: function() {\r\n            var me = this;\r\n            var prop;\r\n\r\n            // remove label\r\n            me.component('label').remove();\r\n\r\n            // remove vertexs\r\n            if (me.cached.controls) {\r\n                _.forEach(me.cached.controls, function(id){\r\n                    var c = Graph.registry.vector.get(id);\r\n                    c && c.remove();\r\n                });\r\n                me.cached.controls = null;\r\n            }\r\n\r\n            // remove editor\r\n            me.component('editor').remove();\r\n\r\n            // remove path\r\n            me.component('path').remove();\r\n\r\n            // remove block\r\n            me.component('block').remove();\r\n            \r\n            for (prop in me.components) {\r\n                me.components[prop] = null;\r\n            }\r\n\r\n            // unbind resource\r\n            _.forEach(['source', 'target'], function(res){\r\n                var handlers = me.handlers[res],\r\n                    resource = me.router[res]();\r\n                \r\n                var key, ns;\r\n\r\n                if (handlers && resource) {\r\n                    for (key in handlers) {\r\n                        ns = key + '.link';\r\n                        resource.off(ns, handlers[key]);\r\n                    }\r\n                }\r\n                \r\n                handlers = null;\r\n            });\r\n\r\n            // clear cache\r\n            for (prop in me.cached) {\r\n                me.cached[prop] = null;\r\n            }\r\n\r\n            me.router.destroy();\r\n            me.router = null;\r\n\r\n            // unregister\r\n            Graph.registry.link.unregister(me);\r\n            \r\n            // publish\r\n            Graph.topic.publish('link/remove');\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n    \r\n    Link.guid = 0;\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function getHandler(scope, resource, handler) {\r\n        var name = 'on' + _.capitalize(resource) + _.capitalize(handler),\r\n            func = scope[name];\r\n        name = null;\r\n        return func;\r\n    }\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Shape = Graph.shape.Shape = Graph.extend({\r\n\r\n        props: {\r\n            id: null,\r\n            guid: null,\r\n            width: 0,\r\n            height: 0,\r\n            label: ''\r\n        },\r\n\r\n        components: {\r\n            shape: null,\r\n            block: null,\r\n            label: null\r\n        },\r\n\r\n        plugins: {},\r\n\r\n        constructor: function(options) {\r\n            _.assign(this.props, options || {});\r\n\r\n            this.props.guid = 'graph-shape-' + (++Shape.guid);\r\n            this.initComponent();\r\n            Graph.registry.shape.register(this);\r\n        },\r\n\r\n        guid: function() {\r\n            return this.props.guid;\r\n        },\r\n\r\n        /**\r\n         * Default draw function\r\n         */\r\n        draw: function() {\r\n\r\n        },\r\n\r\n        render: function(paper) {\r\n            var component = this.component();\r\n            component && component.render(paper);\r\n        },\r\n\r\n        initComponent: function() {\r\n            var shape = (new Graph.svg.Group());\r\n            this.components.shape = shape.guid();\r\n            shape = null;\r\n        },\r\n\r\n        component: function(name) {\r\n            var manager = Graph.registry.vector;\r\n            if (name === undefined) {\r\n                return manager.get(this.components.shape);\r\n            }\r\n            return manager.get(this.components[name]);\r\n        },\r\n        \r\n        hub: function() {\r\n            // TODO return connectable component\r\n            return this.component('block');\r\n        },\r\n\r\n        redraw: _.debounce(function() {\r\n            var label = this.component('label'),\r\n                block = this.component('block'),\r\n                bound = block.bbox().toJson();\r\n\r\n            label.attr({\r\n                x: bound.x + bound.width  / 2, \r\n                y: bound.x + bound.height / 2\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n        }, 1),\r\n\r\n        move: function(x, y) {\r\n            var shape = this.component(),\r\n                imatrix = shape.matrix().clone().invert();\r\n\r\n            x -= this.props.width / 2;\r\n            y -= this.props.height / 2;\r\n\r\n            shape.matrix().multiply(imatrix);\r\n            shape.translate(x, y).commit();\r\n\r\n            imatrix = null;\r\n        },\r\n\r\n        onLabelEdit: function(e) {\r\n            var text = e.text;\r\n            this.component('label').props.text = text;\r\n            this.redraw();\r\n        },\r\n\r\n        onDragEnd: function(e) {\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                matrix = block.matrix();\r\n\r\n            block.reset();\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toString());\r\n        },\r\n\r\n        onResize: function() {\r\n            this.redraw();\r\n        },\r\n\r\n        onRemove: function() {\r\n            // remove label\r\n            this.component('label').remove();\r\n\r\n            // remove shape\r\n            this.component('shape').remove();\r\n\r\n            for (var name in this.components) {\r\n                this.components[name] = null;\r\n            }\r\n\r\n            Graph.registry.shape.unregister(this);\r\n        }\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n    \r\n    Shape.guid = 0;\r\n\r\n    ///////// EXTENSION /////////\r\n    \r\n    Graph.isShape = function(obj) {\r\n        return obj instanceof Graph.shape.Shape;\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.layout.Layout = Graph.extend({\r\n        \r\n        props: {\r\n            // view config\r\n            fit: true,\r\n            view: null,\r\n            width: 0,\r\n            height: 0,\r\n\r\n            // router config\r\n            router: {\r\n                type: 'orthogonal'\r\n            },\r\n\r\n            link: {\r\n                smooth: true,\r\n                smootness: 6\r\n            }\r\n        },\r\n        \r\n        view: null,\r\n\r\n        cached: {\r\n            offset: null\r\n        },\r\n\r\n        constructor: function(view, options) {\r\n            _.assign(this.props, options || {});\r\n            this.props.view = view.guid();\r\n        },\r\n\r\n        view: function() {\r\n            return Graph.registry.vector.get(this.props.view);\r\n        },\r\n\r\n        offset: function() {\r\n            var offset = this.cached.offset;\r\n            var view, node;\r\n\r\n            if ( ! offset) {\r\n                view = this.view();\r\n                node = view.isViewport() ? view.parent().node() : view.node();\r\n                offset = node.getBoundingClientRect();\r\n                this.cached.offset = offset;\r\n            }\r\n\r\n            return offset;\r\n        },\r\n\r\n        invalidate: function() {\r\n            this.cached.offset = null;\r\n        },\r\n\r\n        width: function() {\r\n\r\n        },\r\n\r\n        height: function() {\r\n            \r\n        },\r\n\r\n        fit: function() {\r\n\r\n        },\r\n\r\n        grabVector: function(event) {\r\n            return Graph.registry.vector.get(event.target);\r\n        },\r\n\r\n        grabLocation: function(event) {\r\n            var x = event.clientX,\r\n                y = event.clientY,\r\n                offset = this.offset(),\r\n                matrix = this.view().matrix(),\r\n                invert = matrix.clone().invert(),\r\n                scale  = matrix.scale(),\r\n                location = {\r\n                    x: invert.x(x, y),\r\n                    y: invert.y(x, y)\r\n                };\r\n\r\n            location.x -= offset.left / scale.x;\r\n            location.y -= offset.top / scale.y;\r\n\r\n            matrix = invert = null;\r\n\r\n            return location;\r\n        },\r\n\r\n        currentScale: function() {\r\n            return this.view().matrix().scale();\r\n        },\r\n\r\n        dragSnapping: function() {\r\n            return {\r\n                mode: 'anchor',\r\n                x: 1,\r\n                y: 1\r\n            };\r\n        },\r\n        \r\n        createRouter: function(source, target, options) {\r\n            var clazz, router;\r\n\r\n            clazz   = Graph.router[_.capitalize(this.props.router.type)];\r\n            options = _.extend({}, this.props.router, options || {});\r\n            router  = Graph.factory(clazz, [this.view(), source, target, options]);\r\n\r\n            return router;\r\n        },\r\n\r\n        createLink: function(router, options) {\r\n            var clazz, link;\r\n\r\n            clazz   = Graph.link[_.capitalize(this.props.router.type)];\r\n            options = _.extend({}, this.props.link, options || {});\r\n            link    = Graph.factory(clazz, [router, options]);\r\n\r\n            return link;\r\n        },\r\n\r\n        refresh: function(vector) {\r\n            this.fire('refresh');\r\n        },\r\n\r\n        arrangeLinks: function() {\r\n            var scope = this.view().paper().guid(),\r\n                links = Graph.registry.link.collect(scope);\r\n            \r\n            if (links.length) {\r\n                \r\n                var inspect = [];\r\n                \r\n                _.forEach(links, function(link){\r\n                    if (link.cached.convex) {\r\n                        inspect.push(link.guid());\r\n                    }\r\n                });\r\n                \r\n                // TODO: research for sweepline algorithm\r\n                \r\n                var sweeper = new Graph.util.Sweeplink(links),\r\n                    convex = sweeper.findConvex();\r\n                \r\n                var key, link, idx;\r\n                \r\n                for (key in convex) {\r\n                    link = Graph.registry.link.get(key);\r\n                    \r\n                    link.updateConvex(convex[key]);\r\n                    link.refresh(true);\r\n                    \r\n                    idx = _.indexOf(inspect, key);\r\n                    \r\n                    if (idx > -1) {\r\n                        inspect.splice(idx, 1);\r\n                    }\r\n                }\r\n                \r\n                if (inspect.length) {\r\n                    _.forEach(inspect, function(key){\r\n                        var link = Graph.registry.link.get(key);\r\n                        \r\n                        link.removeConvex();\r\n                        link.refresh(true);\r\n                    });\r\n                }\r\n                \r\n                sweeper.destroy();\r\n                sweeper = null;\r\n            }\r\n        },\r\n\r\n        arrangeShapes: function() {\r\n            \r\n        }\r\n        \r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.shape.activity.Router = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'Route',\r\n            width: 100,\r\n            height: 100,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = me.components;\r\n            var shape, block, label;\r\n\r\n            var points = [\r\n                me.props.width / 2, 0,\r\n                me.props.width, me.props.height / 2,\r\n                me.props.width / 2, me.props.height,\r\n                0, me.props.height / 2\r\n            ];\r\n\r\n            var cx = points[0],\r\n                cy = points[3];\r\n\r\n            shape = (new Graph.svg.Group(me.props.left, me.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Polygon(points))\r\n                .data('text', me.props.label)\r\n                .render(shape);\r\n\r\n            block.draggable({ghost: true});\r\n            block.resizable({shield: shape});\r\n            block.editable();\r\n            block.connectable({shield: shape});\r\n\r\n            block.on('edit', _.bind(me.onLabelEdit, me));\r\n            block.on('dragend', _.bind(me.onDragEnd, me));\r\n            block.on('resize', _.bind(me.onResize, me));\r\n            block.on('remove',  _.bind(me.onRemove, me));\r\n\r\n            label = (new Graph.svg.Text(cx, cy, me.props.label))\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n\r\n            shape = block = label = null;\r\n        },\r\n\r\n        redraw: function() {\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                label = this.component('label');\r\n\r\n            var bound, matrix;\r\n\r\n            bound = block.bbox().toJson();\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toString());\r\n\r\n            var points = [\r\n                bound.width / 2, 0,\r\n                bound.width, bound.height / 2,\r\n                bound.width / 2, bound.height,\r\n                0, bound.height / 2\r\n            ];\r\n\r\n            block.attr({\r\n                points: _.join(points, ',')\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            label.attr({\r\n                x: bound.width  / 2, \r\n                y: bound.height / 2\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n            matrix = null;\r\n            bound  = null;\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n    \r\n    var Link = Graph.link.Link;\r\n    \r\n    Graph.link.Directed = Graph.extend(Link, {\r\n        \r\n        renderControl: function() {\r\n            var me = this, editor = me.component('editor');\r\n\r\n            if (me.cached.controls) {\r\n                _.forEach(me.cached.controls, function(c){\r\n                    c = Graph.registry.vector.get(c);\r\n                    c.remove();\r\n                });\r\n                me.cached.controls = null;\r\n            }\r\n\r\n            var points = this.cached.bendpoints,\r\n                maxlen = points.length - 1,\r\n                linkid = me.guid(),\r\n                controls = [];\r\n\r\n            _.forEach(points, function(dot, i){\r\n                \r\n                var control = (new Graph.svg.Image(\r\n                    Graph.config.base + 'img/resize-control.png',\r\n                    dot.x - 17 / 2,\r\n                    dot.y - 17 / 2,\r\n                    17,\r\n                    17\r\n                ));\r\n                \r\n                control.selectable(false);\r\n                control.removeClass(Graph.string.CLS_VECTOR_IMAGE);\r\n                \r\n                if (i === 0) {\r\n                    control.addClass(Graph.string.CLS_LINK_TAIL);\r\n                    control.elem.data('pole', 'tail');\r\n                } else if (i === maxlen) {\r\n                    control.addClass(Graph.string.CLS_LINK_HEAD);\r\n                    control.elem.data('pole', 'head');\r\n                }\r\n                \r\n                control.elem.group('graph-link');\r\n                control.elem.data(Graph.string.ID_LINK, linkid);\r\n                \r\n                var context = {\r\n                    trans: (i === 0 || i === maxlen) ? 'CONNECT' : 'BENDING',\r\n                    index: dot.index,\r\n                    space: dot.space,\r\n                    point: {\r\n                        x: dot.x,\r\n                        y: dot.y\r\n                    },\r\n                    event: {\r\n                        x: dot.x,\r\n                        y: dot.y\r\n                    },\r\n                    range: {\r\n                        start: dot.range[0],\r\n                        end:   dot.range[1]\r\n                    },\r\n                    delta: {\r\n                        x: 0,\r\n                        y: 0\r\n                    },\r\n                    snap: {\r\n                        hor: [],\r\n                        ver: []\r\n                    }\r\n                };\r\n                \r\n                control.draggable();\r\n                control.cursor('default');\r\n                \r\n                control.on('dragstart', _.bind(me.onControlStart, me, _, context, control));\r\n                control.on('dragmove',  _.bind(me.onControlMove,  me, _, context, control));\r\n                control.on('dragend',   _.bind(me.onControlEnd,   me, _, context, control));\r\n                \r\n                control.render(editor);\r\n                controls.push(control.guid());\r\n            });\r\n            \r\n            me.cached.controls = controls;\r\n            controls = null;\r\n        },\r\n        \r\n        onControlStart: function(e, context, control) {\r\n            this.router.initTrans(context);\r\n            \r\n            var snaphor = context.snap.hor,\r\n                snapver = context.snap.ver;\r\n            \r\n            control.draggable().snap([\r\n                function(x, y){\r\n                    var sx = Graph.util.snapValue(x, snapver),\r\n                        sy = Graph.util.snapValue(y, snaphor);\r\n                    \r\n                    return {\r\n                        x: sx,\r\n                        y: sy,\r\n                        range: 10\r\n                    };\r\n                }\r\n            ]);\r\n            \r\n            _.forEach(this.cached.controls, function(id){\r\n                var c = Graph.registry.vector.get(id);\r\n                if (c && c !== control) {\r\n                    c.hide();\r\n                }\r\n            });\r\n            \r\n            control.show();\r\n        },\r\n        \r\n        onControlMove: function(e, context, control) {\r\n            var me = this;\r\n            \r\n            context.delta.x += e.dx;\r\n            context.delta.y += e.dy;\r\n            \r\n            var x1, y1, x2, y2;\r\n            \r\n            x1 = context.event.x,\r\n            y1 = context.event.y;\r\n            \r\n            if (context.trans == 'BENDING') {\r\n                me.router.bending(context, function(result){\r\n                    me.update(result.command, true);\r\n                });\r\n            } else {\r\n                me.router.connecting(context, function(result){\r\n                    me.update(result.command, true);\r\n                });\r\n            }\r\n            \r\n            x2 = context.event.x,\r\n            y2 = context.event.y;\r\n            \r\n            // update dragger\r\n            e.originalData.dx = (x2 - x1);\r\n            e.originalData.dy = (y2 - y1);\r\n        },\r\n        \r\n        onControlEnd: function(e, context, control) {\r\n            this.router.stopTrans(context);\r\n            this.update(this.router.command());\r\n            this.invalidate();\r\n            this.resumeControl();\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.link.Orthogonal = Graph.extend(Graph.link.Link, {\r\n        \r\n        update: function(command, silent) {\r\n            var convex, smooth, radius, routes, maxlen, segments;\r\n            \r\n            silent = _.defaultTo(silent, false);\r\n            \r\n            convex = this.cached.convex;\r\n            smooth = this.props.smooth;\r\n            \r\n            if (convex) {\r\n                \r\n                routes = this.router.waypoints().slice();\r\n                maxlen = routes.length - 1;\r\n\r\n                segments = [];\r\n                \r\n                _.forEach(routes, function(curr, i){\r\n                    var prev = curr,\r\n                        next = routes[i + 1];\r\n                        \r\n                    var item;\r\n                    \r\n                    if (i === 0) {\r\n                        item = ['M', curr.x, curr.y];\r\n                    } else {\r\n                        item = ['L', curr.x, curr.y];\r\n                    }\r\n                    \r\n                    segments.push(item);\r\n\r\n                    if (convex[i]) {\r\n                        _.forEach(convex[i], function(c){\r\n                            var conseg = Graph.util.convexSegment(c, prev, next);\r\n                            if (conseg) {\r\n                                segments.push(conseg[0], conseg[1]);\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                command = Graph.util.segments2path(segments);\r\n            }\r\n            \r\n            if (smooth) {\r\n                radius = this.props.smootness || 6;\r\n                segments = segments || Graph.util.path2segments(command).slice();\r\n                \r\n                var item, prev, next, curr, i;\r\n                var bend;\r\n                \r\n                for (i = 0; i < segments.length; i++) {\r\n                    item = segments[i];\r\n                    next = segments[i + 1];\r\n                    \r\n                    bend = !!(item[0] == 'L' && next && next[0] != 'Q');\r\n                    \r\n                    if (bend) {\r\n                        curr = {\r\n                            x: item[item.length - 2],\r\n                            y: item[item.length - 1]\r\n                        };\r\n                        \r\n                        prev = segments[i - 1];\r\n                        \r\n                        if (prev && next) {\r\n                            var ss = Graph.util.smoothSegment(\r\n                                curr, \r\n                                { x: prev[prev.length - 2], y: prev[prev.length - 1] },\r\n                                { x: next[next.length - 2], y: next[next.length - 1] },\r\n                                radius\r\n                            );\r\n                            \r\n                            if (ss) {\r\n                                segments.splice(i, 1, ss[0], ss[1]);\r\n                                i++;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                command = Graph.util.segments2path(segments);\r\n                // var p = Graph.path(command);\r\n                // this.router.source().paper().path(p).style('stroke', 'red');\r\n                \r\n            }\r\n\r\n            this.component('coat').attr('d', command).dirty(true);\r\n            this.component('path').attr('d', command);\r\n            \r\n            this.invalidate();\r\n            \r\n            if ( ! silent) {\r\n                \r\n                this.redraw();\r\n                \r\n                this.fire('update');\r\n                Graph.topic.publish('link/update');\r\n            }\r\n        },\r\n        \r\n        renderControl: function() {\r\n            var me = this, editor = me.component('editor');\r\n\r\n            if (me.cached.controls) {\r\n                _.forEach(me.cached.controls, function(c){\r\n                    c = Graph.registry.vector.get(c);\r\n                    c.remove();\r\n                });\r\n                me.cached.controls = null;\r\n            }\r\n\r\n            var points = this.cached.bendpoints,\r\n                linkid = me.guid(),\r\n                maxlen = points.length - 1,\r\n                controls = [];\r\n\r\n            _.forEach(points, function(dot, i){\r\n                var control, cursor, align, axis, drag;\r\n                \r\n                control = (new Graph.svg.Image(\r\n                    Graph.config.base + 'img/resize-control.png',\r\n                    dot.x - 17 / 2,\r\n                    dot.y - 17 / 2,\r\n                    17,\r\n                    17\r\n                ));\r\n                \r\n                control.selectable(false);\r\n                control.removeClass(Graph.string.CLS_VECTOR_IMAGE);\r\n                control.elem.group('graph-link');\r\n                control.elem.data(Graph.string.ID_LINK, linkid);\r\n                \r\n                drag = {};\r\n                axis = null;\r\n                cursor = 'default';\r\n                \r\n                if (i === 0) {\r\n                    control.addClass(Graph.string.CLS_LINK_TAIL);\r\n                    control.elem.data('pole', 'tail');\r\n                } else if (i === maxlen) {\r\n                    control.addClass(Graph.string.CLS_LINK_HEAD);\r\n                    control.elem.data('pole', 'head');\r\n                } else {\r\n                    align  = Graph.util.pointAlign(dot.start, dot.end);\r\n                    axis   = align == 'v' ? 'y' : 'x';\r\n                    cursor = axis  == 'x' ? 'ew-resize' : 'ns-resize';\r\n                    \r\n                    drag = {axis: axis};\r\n                }\r\n                \r\n                var context = {\r\n                    \r\n                    trans: (i === 0 || i === maxlen) ? 'CONNECT' : 'BENDING',\r\n                    index: dot.index,\r\n                    axis: axis,\r\n                    cursor: cursor,\r\n                    point: {\r\n                        x: dot.x,\r\n                        y: dot.y\r\n                    },\r\n                    \r\n                    ranges: {\r\n                        start: dot.range[0],\r\n                        end:   dot.range[1]\r\n                    },\r\n                    \r\n                    event: {\r\n                        x: dot.x,\r\n                        y: dot.y\r\n                    },\r\n                    \r\n                    snap: {\r\n                        hor: [],\r\n                        ver: []\r\n                    },\r\n                    \r\n                    delta: {\r\n                        x: 0,\r\n                        y: 0\r\n                    }\r\n                };\r\n                \r\n                \r\n                control.draggable(drag);\r\n                control.cursor(cursor);\r\n                \r\n                control.on('dragstart', _.bind(me.onControlStart, me, _, context, control));\r\n                control.on('dragmove',  _.bind(me.onControlMove,  me, _, context));\r\n                control.on('dragend',   _.bind(me.onControlEnd,   me, _, context, control));\r\n \r\n                control.render(editor);\r\n                controls.push(control.guid());\r\n            });\r\n            \r\n            me.cached.controls = controls;\r\n            controls = null;\r\n        },\r\n\r\n        onControlStart: function(e, context, control) {\r\n            this.component('coat').cursor(context.cursor);\r\n            this.router.initTrans(context);\r\n            \r\n            // snapping\r\n            var snaphor = context.snap.hor,\r\n                snapver = context.snap.ver;\r\n                \r\n            control.draggable().snap([\r\n                function(x, y) {\r\n                    var sx = Graph.util.snapValue(x, snapver),\r\n                        sy = Graph.util.snapValue(y, snaphor);\r\n                    \r\n                    return {\r\n                        x: sx,\r\n                        y: sy,\r\n                        range: 10\r\n                    };\r\n                }\r\n            ]);\r\n            \r\n            _.forEach(this.cached.controls, function(id){\r\n                var c = Graph.registry.vector.get(id);\r\n                if (c && c !== control) {\r\n                    c.hide();\r\n                }\r\n            });\r\n            \r\n            control.show();\r\n            this.removeConvex();\r\n        },\r\n\r\n        onControlMove: function(e, context) {\r\n            var me = this;\r\n            \r\n            context.delta.x += e.dx;\r\n            context.delta.y += e.dy;\r\n            \r\n            var x1, y1, x2, y2, dx, dy;\r\n            \r\n            x1 = context.event.x;\r\n            y1 = context.event.y;\r\n            \r\n            if (context.trans == 'BENDING') {\r\n                me.router.bending(context, function(result){\r\n                    me.update(result.command, true);\r\n                });\r\n            } else {\r\n                me.router.connecting(context, function(result){\r\n                    me.update(result.command, true);\r\n                });\r\n            }\r\n\r\n            x2 = context.event.x;\r\n            y2 = context.event.y;\r\n            \r\n            dx = x2 - x1;\r\n            dy = y2 - y1;\r\n            \r\n            // update dragger\r\n            e.originalData.dx = dx;\r\n            e.originalData.dy = dy;\r\n        },\r\n\r\n        onControlEnd: function(e, context, control) {\r\n            this.component('coat').cursor('pointer');\r\n            this.router.stopTrans(context);\r\n            this.update(this.router.command());\r\n            this.invalidate();\r\n            this.resumeControl();\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.link.Orthogonal';\r\n        }\r\n\r\n    });\r\n    \r\n}());","\r\n(function(){\r\n\r\n    Graph.util.Spotlight = Graph.extend({\r\n        props: {\r\n            suspended: true,\r\n            rendered: false\r\n        },\r\n        \r\n        components: {\r\n            G: null,\r\n            N: null,\r\n            E: null,\r\n            S: null,\r\n            W: null\r\n        },\r\n\r\n        paper: null,\r\n        \r\n        constructor: function(paper) {\r\n            var me = this, comp = me.components;\r\n\r\n            me.paper = paper;\r\n\r\n            comp.G = (new Graph.svg.Group())\r\n                .traversable(false)\r\n                .selectable(false)\r\n                .addClass('graph-util-spotlight');\r\n\r\n            _.forEach(['N', 'E', 'S', 'W'], function(name){\r\n                comp[name] = (new Graph.svg.Line(0, 0, 0, 0))\r\n                    .removeClass(Graph.string.CLS_VECTOR_LINE)\r\n                    .traversable(false)\r\n                    .selectable(false)\r\n                    .render(comp.G);\r\n            });\r\n\r\n            // paper.on('pointerdown', function(e){\r\n            //     var vector = Graph.registry.vector.get(e.target);\r\n            //     me.focus(vector);\r\n            // })\r\n        },\r\n        \r\n        component: function() {\r\n            return this.components.G;\r\n        },\r\n        \r\n        render: function() {\r\n            if (this.props.rendered) {\r\n                return;\r\n            }\r\n\r\n            this.components.G.render(this.paper);\r\n            this.props.rendered = true;\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.components.G.elem.detach();\r\n            // this.components.G.removeClass('visible');\r\n        },\r\n\r\n        resume: function() {\r\n            this.props.suspended = false;\r\n\r\n            if ( ! this.props.rendered) {\r\n                this.render();\r\n            } else {\r\n                this.paper.viewport().elem.append(this.components.G.elem);\r\n                // this.components.G.addClass('visible');    \r\n            }\r\n        },\r\n\r\n        focus: function(target, state) {\r\n            state = _.defaultTo(state, true);\r\n\r\n            if ( ! state) {\r\n                this.suspend();\r\n                return;\r\n            }\r\n\r\n            var tbox = target.bbox().toJson(),\r\n                dots = target.dots(true),\r\n                comp = this.components,\r\n                root = this.paper;\r\n\r\n            var x, y, h, w;\r\n\r\n            x = tbox.x,\r\n            y = tbox.y,\r\n            h = root.elem.height() || 0;\r\n            w = root.elem.width() || 0;\r\n\r\n            this.resume();\r\n\r\n            comp.W.attr({\r\n                x1: x,\r\n                y1: 0,\r\n                x2: x,\r\n                y2: h\r\n            });\r\n\r\n            comp.E.attr({\r\n                x1: x + tbox.width,\r\n                y1: 0,\r\n                x2: x + tbox.width,\r\n                y2: h\r\n            });\r\n\r\n            comp.N.attr({\r\n                x1: 0,\r\n                y1: y,\r\n                x2: w,\r\n                y2: y\r\n            });\r\n\r\n            comp.S.attr({\r\n                x1: 0,\r\n                y1: y + tbox.height,\r\n                x2: w,\r\n                y2: y + tbox.height\r\n            });\r\n        },\r\n        toString: function() {\r\n            return 'Graph.util.Spotlight';\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.util.Toolpad = Graph.extend({\r\n\r\n        props: {\r\n            vector: null,\r\n\r\n            rendered: false,\r\n            suspended: true,\r\n            \r\n            tools: [\r\n\r\n            ]\r\n        },\r\n\r\n        components: {\r\n            block: null\r\n        },\r\n\r\n        paper: null,\r\n\r\n        constructor: function(paper) {\r\n            this.paper = paper;\r\n            this.initComponent();\r\n\r\n            Graph.topic.subscribe('vector/select', _.bind(this.onVectorSelect, this));\r\n            Graph.topic.subscribe('vector/deselect', _.bind(this.onVectorDeselect, this));\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components;\r\n            comp.block = Graph.$('<div class=\"graph-util-toolpad\">');\r\n        },\r\n\r\n        render: function() {\r\n            if (this.props.rendered) {\r\n                this.redraw();\r\n                return;\r\n            }\r\n\r\n            this.paper.container().append(this.components.block);\r\n            this.rendered = true;\r\n\r\n            this.redraw();\r\n        },\r\n\r\n        vector: function() {\r\n            return Graph.registry.vector.get(this.props.vector);\r\n        },\r\n\r\n        resume: function() {\r\n            this.props.suspended = false;\r\n\r\n            if ( ! this.props.rendered) {\r\n                this.render();\r\n            } else {\r\n                this.paper.container().append(this.components.block);\r\n            }\r\n\r\n            this.redraw();\r\n        },\r\n\r\n        redraw: function() {\r\n            var vector = this.vector(),\r\n                box = vector.bbox().toJson(),\r\n                pos = vector.position();\r\n\r\n            this.components.block.css({\r\n                top: pos.top,\r\n                left: pos.left + box.width + 12\r\n            });\r\n        },\r\n\r\n        suspend: function()  {\r\n            this.props.suspended = true;\r\n            this.components.block.detach();\r\n        },\r\n\r\n        onVectorSelect: function(e) {\r\n            // var vector = e.vector;\r\n            // this.props.vector = vector.guid();\r\n            // this.resume();\r\n        },\r\n\r\n        onVectorDeselect: function(e) {\r\n            // this.suspend();\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    var KEY_TRESHOLD = 1e-9;\r\n    var SLOPE_TRESHOLD = .1;\r\n    \r\n    var Sweeplink = Graph.util.Sweeplink = function(links) {\r\n        \r\n        var me = this;\r\n        \r\n        me.points = [];\r\n        me.queue = [];\r\n        me.lines = [];\r\n        me.found = [];\r\n        me.process = [];\r\n        \r\n        _.forEach(links, function(link){\r\n            var dots = me.extract(link);\r\n            Array.prototype.push.apply(me.points, dots);\r\n        });\r\n\r\n        _.forEach(me.points, function(p, i){\r\n            if (i % 2) me.lines.push(_.sortBy( [p, me.points[i - 1]], 'y' ));\r\n        });\r\n        \r\n        _.forEach(me.lines, function(d, i){\r\n            if (d[0].x == d[1].x) {\r\n                d[0].x += SLOPE_TRESHOLD;\r\n                d[1].x -= SLOPE_TRESHOLD;\r\n            }\r\n\r\n            if (d[0].y == d[1].y) {\r\n                d[0].y -= SLOPE_TRESHOLD;\r\n                d[1].y += SLOPE_TRESHOLD;\r\n            }\r\n\r\n            d[0].line = d;\r\n            d[1].line = d;\r\n        });\r\n        \r\n    };\r\n\r\n    Sweeplink.prototype.constructor = Sweeplink;\r\n\r\n    Sweeplink.prototype.extract = function(link) {\r\n        var segments = link.router.pathinfo().curve().segments, \r\n            dots = [];\r\n\r\n        var x, y;\r\n        \r\n        _.forEach(segments, function(s, i){\r\n            var p = i === 0 ? {x: s[1], y: s[2]} : {x: s[5], y: s[6]};\r\n            var q = segments[i + 1];\r\n            \r\n            if (q) {\r\n                \r\n                q = {x: q[5], y: q[6]};\r\n                \r\n                Graph.util.movepoint(p, q, -20);\r\n                Graph.util.movepoint(q, p, -20);\r\n\r\n                p.x = Math.round(p.x, 3);\r\n                p.y = Math.round(p.y, 3);\r\n\r\n                q.x = Math.round(q.x, 3);\r\n                q.y = Math.round(q.y, 3);\r\n\r\n                p.link = link;\r\n                q.link = link;\r\n\r\n                p.range = i;\r\n                q.range = i + 1;\r\n\r\n                dots.push(p, q);\r\n            }\r\n            \r\n        });\r\n\r\n        return dots;\r\n    };\r\n\r\n    Sweeplink.prototype.findConvex = function() {\r\n        var me = this, linesByY;\r\n        \r\n        me.queue = createTree(me.points.slice())\r\n            .key(function(d){ return d.y + KEY_TRESHOLD * d.x; })\r\n            .order();\r\n        \r\n        me.found = [];\r\n        me.process = createTree([]);\r\n\r\n        for (var i = 0; i < me.queue.length && i < 1000; i++) {\r\n            \r\n            var d = me.queue[i];\r\n            var index, indexA, indexB, minIndex;\r\n            \r\n\r\n            if (d.line && d.line[0] == d) {\r\n                d.type = 'insert';\r\n                index = me.process\r\n                    .key(function(e){ return me.intercept(e, d.y - KEY_TRESHOLD / 1000); })\r\n                    .insert(d.line);\r\n                \r\n                me.validate(d.line, me.process[index + 1]);\r\n                me.validate(d.line, me.process[index - 1]);\r\n                \r\n            } else if (d.line) {\r\n                d.type = 'removal';\r\n                index = me.process.findIndex(d.line);\r\n                me.process.remove(d.line);\r\n                \r\n                me.validate(me.process[index - 1], me.process[index]);\r\n            } else if (d.lineA && d.lineB) {\r\n                me.process.key(function(e){ return me.intercept(e, d.y - KEY_TRESHOLD / 1000); });\r\n                \r\n                indexA = me.process.findIndex(d.lineA);\r\n                indexB = me.process.findIndex(d.lineB);\r\n                  \r\n                if (indexA == indexB) indexA = indexA + 1\r\n                  \r\n                me.process[indexA] = d.lineB;\r\n                me.process[indexB] = d.lineA;\r\n\r\n                minIndex = indexA < indexB ? indexA : indexB\r\n\r\n                me.validate(me.process[minIndex - 1], me.process[minIndex])\r\n                me.validate(me.process[minIndex + 1], me.process[minIndex + 2])\r\n            }\r\n        }\r\n        \r\n        var convex = {};\r\n        \r\n        _.forEach(this.found, function(f){\r\n            \r\n            var routes, rangeStart, rangeEnd, segmentAlign, segmentStart, segmentEnd,\r\n                alignA, alignB, line, link, guid;\r\n            \r\n            alignA = Graph.util.pointAlign(f.lineA[0], f.lineA[1], 10);\r\n            alignB = Graph.util.pointAlign(f.lineB[0], f.lineB[1], 10);\r\n            \r\n            if (alignA != alignB) {\r\n                segmentAlign = alignA == 'v' ? alignA : alignB;\r\n                \r\n                line = alignA == 'v' ? f.lineA : f.lineB;\r\n                link = line[0].link;\r\n                guid = link.guid();\r\n                \r\n                routes = link.router.waypoints();\r\n                \r\n                rangeStart = Math.min(line[0].range, line[1].range),\r\n                rangeEnd   = Math.max(line[0].range, line[1].range);\r\n                \r\n                segmentStart = routes[rangeStart];\r\n                segmentEnd = routes[rangeEnd];\r\n                \r\n                if ( ! convex[guid]) {\r\n                    convex[guid] = {};\r\n                }\r\n                \r\n                if ( ! convex[guid][rangeStart]) {\r\n                    convex[guid][rangeStart] = createTree([])\r\n                        .key(function(c){\r\n                            if (c.segmentAlign == 'v') {\r\n                                if (c.segmentStart.x < c.segmentEnd.x) {\r\n                                    return c.x + c.segmentStart.x;\r\n                                } else {\r\n                                    return c.segmentStart.x - c.x;\r\n                                }\r\n                            } else {\r\n                                if (c.segmentStart.y < c.segmentEnd.y) {\r\n                                    return c.y + c.segmentStart.y;\r\n                                } else {\r\n                                    return c.segmentStart.y - c.y;\r\n                                }\r\n                            }\r\n                        });\r\n                }\r\n                \r\n                convex[guid][rangeStart].insert({\r\n                    x: f.x,\r\n                    y: f.y,\r\n                    link: link.guid(),\r\n                    rangeStart: rangeStart,\r\n                    rangeEnd: rangeEnd,\r\n                    segmentAlign: segmentAlign,\r\n                    segmentStart: segmentStart,\r\n                    segmentEnd: segmentEnd\r\n                });\r\n                \r\n            }\r\n            \r\n        });\r\n        \r\n        return convex;\r\n    };\r\n    \r\n    Sweeplink.prototype.intersect = function(a, b, c, d) {\r\n        var det = (a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x),\r\n            l   = a.x * b.y - a.y * b.x,\r\n            m   = c.x * d.y - c.y * d.x,\r\n            ix  = (l * (c.x - d.x) - m * (a.x - b.x)) / det,\r\n            iy  = (l * (c.y - d.y) - m * (a.y - b.y)) / det,\r\n            i   = {x: ix, y: iy};\r\n\r\n        i.isOverlap = (ix == a.x && iy == a.y) || (ix == b.x && iy == b.y)\r\n        i.isIntersection = ! (a.x < ix ^ ix < b.x) && ! (c.x < ix ^ ix < d.x) && ! i.isOverlap && det\r\n        \r\n        // if (isNaN(i.x)) debugger\r\n\r\n        return i;\r\n    };\r\n    \r\n    Sweeplink.prototype.validate = function(a, b) {\r\n        if ( ! a || ! b ) return;\r\n        var i = this.intersect(a[0], a[1], b[0], b[1]);\r\n        \r\n        i.lineA = a;\r\n        i.lineB = b;\r\n        \r\n        if (i.isIntersection) {\r\n            this.found.push(i) && this.queue.insert(i);\r\n        }\r\n    };\r\n\r\n    Sweeplink.prototype.intercept = function(line, y) {\r\n        var a = line[0], \r\n            b = line[1],\r\n            m = (a.y - b.y) / (a.x - b.x);\r\n\r\n        return (y - a.y + m * a.x) / m;\r\n    }\r\n\r\n    Sweeplink.prototype.destroy = function() {\r\n        this.points = null;\r\n        this.lines = null;\r\n        this.found = null;\r\n        this.queue = null;\r\n        this.process = null;\r\n    };\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function createTree(array) {\r\n        var key = function(d){ return d; };\r\n        var bisect = _.bisector(function(d){ return key(d); }).left;\r\n        \r\n        array.insert = function(d) {\r\n            var i = array.findIndex(d);\r\n            var v = key(d);\r\n            if (array[i] && v == key(array[i])) return;\r\n            array.splice(i, 0, d);\r\n            return i;\r\n        };\r\n\r\n        array.remove = function(d) {\r\n            var i = array.findIndex(d);\r\n            array.splice(i, 1);\r\n            return i;\r\n        };\r\n\r\n        array.findIndex = function(d) {\r\n            return bisect(array, key(d));\r\n        };\r\n\r\n        array.key = function(f) {\r\n            key = f;\r\n            return array;\r\n        };\r\n\r\n        array.swap = function() {\r\n\r\n        };\r\n\r\n        array.order = function() {\r\n            array.sort(_.ascendingKey(key));\r\n            return array;\r\n        };\r\n\r\n        return array;\r\n    }\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Plugin = Graph.extend({\r\n\r\n        props: {\r\n            shield: null,\r\n            vector: null,\r\n            activator: 'tool'\r\n        },\r\n\r\n        cached: {\r\n            bboxMatrix: null,\r\n            pathMatrix: null\r\n        },\r\n\r\n        vector: function() {\r\n            return Graph.registry.vector.get(this.props.vector);\r\n        },\r\n\r\n        shield: function() {\r\n            if (this.props.shield == this.props.vector) {\r\n                return this.vector();\r\n            }\r\n            return Graph.registry.vector.get(this.props.shield);\r\n        },\r\n\r\n        invalidate: function() {\r\n            this.cached.bboxMatrix = null;\r\n            this.cached.pathMatrix = null;\r\n        },\r\n\r\n        bboxMatrix: function() {\r\n            var matrix = this.cached.bboxMatrix;\r\n\r\n            if ( ! matrix) {\r\n                if (this.props.vector == this.props.shield) {\r\n                    matrix = this.vector().matrix().clone();\r\n                } else {\r\n                    matrix = this.shield().matrix().clone();\r\n                }\r\n\r\n                this.cached.bboxMatrix = matrix;\r\n            }\r\n            \r\n            return matrix;\r\n        },\r\n        \r\n        pathMatrix: function() {\r\n            var matrix = this.cached.pathMatrix;\r\n\r\n            if ( ! matrix) {\r\n                matrix = Graph.matrix();\r\n\r\n                if (this.props.vector == this.props.shield) {\r\n                    matrix = matrix.multiply(this.vector().matrix());\r\n                } else {\r\n                    var shield = this.shield(),\r\n                        vector = this.vector();\r\n\r\n                    vector.bubble(function(curr){\r\n                        matrix.multiply(curr.matrix());\r\n                        if (curr == shield) {\r\n                            return false;\r\n                        }\r\n                    });\r\n                }\r\n                this.cached.pathMatrix = matrix;\r\n            }\r\n\r\n            return matrix;\r\n        },\r\n\r\n        bbox: function() {\r\n            var matrix = this.bboxMatrix(),\r\n                path = this.vector().pathinfo().transform(matrix),\r\n                bbox = path.bbox();\r\n            \r\n            matrix = path = null;\r\n            \r\n            return bbox;\r\n        },\r\n\r\n        pathinfo: function() {\r\n            var matrix = this.pathMatrix(),\r\n                path = this.vector().pathinfo().transform(matrix);\r\n            \r\n            matrix = null;\r\n            \r\n            return path;\r\n        },\r\n\r\n        hasShield: function() {\r\n            return this.props.vector != this.props.shield;\r\n        },\r\n\r\n        enable: function(activator) {},\r\n\r\n        disable: function() {},\r\n\r\n        destroy: function() {}\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Definer = Graph.extend(Graph.plugin.Plugin, {\r\n        props: {\r\n            vector: null\r\n        },\r\n\r\n        definitions: {\r\n\r\n        },\r\n\r\n        components: {\r\n            holder: null\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            this.props.vector = vector.guid();\r\n\r\n            this.components.holder = Graph.$('<defs/>');\r\n            this.components.holder.prependTo(vector.elem);\r\n\r\n            if (vector.isPaper()) {\r\n                this.defineArrowMarker('marker-arrow');\r\n            }\r\n\r\n        },\r\n        \r\n        defineArrowMarker: function(id) {\r\n            if (this.definitions[id]) {\r\n                return this.definitions[id];\r\n            }\r\n\r\n            var marker = Graph.$(_.format(\r\n                '<marker id=\"{0}\" refX=\"{1}\" refY=\"{2}\" viewBox=\"{3}\" markerWidth=\"{4}\" markerHeight=\"{5}\" orient=\"{6}\">' + \r\n                    '<path d=\"{7}\" fill=\"{8}\" stroke-width=\"{9}\" stroke-linecap=\"{10}\" stroke-dasharray=\"{11}\">' + \r\n                    '</path>'+\r\n                '</marker>',\r\n                id, '11', '10', '0 0 20 20', '10', '10', 'auto',\r\n                'M 1 5 L 11 10 L 1 15 Z', '#000000', '1', 'round', '10000, 1'\r\n            ));\r\n\r\n            this.definitions[id] = marker;\r\n            this.components.holder.append(marker);\r\n\r\n            return marker;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Definer';\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n    \r\n    var Reactor = Graph.plugin.Reactor = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null\r\n        },\r\n\r\n        plugin: null,\r\n        \r\n        navigationKeys: [\r\n            Graph.event.ENTER,\r\n            Graph.event.DELETE,\r\n            Graph.event.SHIFT,\r\n            Graph.event.CTRL,\r\n            Graph.event.ESC\r\n        ],\r\n\r\n        constructor: function(vector, listeners) {\r\n            var me = this;\r\n\r\n            this.props.vector = vector.guid();\r\n            this.plugin = interact(vector.node());\r\n            this.listeners = listeners || {};\r\n\r\n            this.plugin.on('down', function(e){\r\n                e.originalType = 'pointerdown';\r\n                vector.fire(e);\r\n            }, true);\r\n\r\n            vector.elem.on({\r\n                mouseenter: function(e) {\r\n                    e.type = 'pointerin'\r\n                    vector.fire(e);\r\n                },\r\n                mouseleave: function(e) {\r\n                    e.type = 'pointerout';\r\n                    vector.fire(e);\r\n                }\r\n            });\r\n\r\n            if (vector.isPaper()) {\r\n                Graph.$(document).on('keydown', function(e){\r\n                    if (me.isNavigation(e)) {\r\n                        e.originalType = 'keynavdown';\r\n                        vector.fire(e);    \r\n                    }\r\n                });\r\n\r\n                Graph.$(document).on('keyup', function(e){\r\n                    if (me.isNavigation(e)) {\r\n                        e.originalType = 'keynavup';\r\n                        vector.fire(e);\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        isNavigation: function(e) {\r\n            var key = e.keyCode;\r\n            return _.indexOf(this.navigationKeys, key) > -1;\r\n        },\r\n        \r\n        vendor: function() {\r\n            return this.plugin;\r\n        },\r\n\r\n        draggable: function(options) {\r\n            return this.plugin.draggable(options);\r\n        },\r\n\r\n        dropzone: function(options) {\r\n            return this.plugin.dropzone(options);\r\n        },\r\n\r\n        gesturable: function(options) {\r\n            return this.plugin.gesturable(options);\r\n        },\r\n\r\n        destroy: function() {\r\n            this.plugin.unset();\r\n            this.plugin = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Reactor';\r\n        }\r\n    });\r\n\r\n    var on  = Reactor.prototype.on,\r\n        off = Reactor.prototype.off;\r\n\r\n    /**\r\n     * Override\r\n     */\r\n    Reactor.prototype.on = function(event, handler) {\r\n        var vector = this.vector();\r\n        return on.apply(vector, [event, handler]);\r\n    };\r\n\r\n    /**\r\n     * Override\r\n     */\r\n    Reactor.prototype.off = function(event, handler) {\r\n        var vector = this.vector();\r\n        return off.apply(vector, [event, handler]);\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Transformer = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            scale: 1,\r\n            rotate: 0\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            this.actions = [];\r\n            this.props.vector = vector.guid();\r\n        },\r\n\r\n        transform: function(command) {\r\n            var me = this, segments = Graph.util.transform2segments(command);\r\n\r\n            _.forEach(segments, function(args){\r\n                var method = args.shift();\r\n                if (me[method] && _.isFunction(me[method])) {\r\n                    (function(){\r\n                        me[method].apply(me, args);\r\n                    }(method, args));    \r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        queue: function() {\r\n            var args = _.toArray(arguments);\r\n            \r\n            this.actions.push({\r\n                name: args.shift(),\r\n                args: args,\r\n                sort: this.actions.length\r\n            });\r\n\r\n            return this;\r\n        },\r\n        translate: function(dx, dy) {\r\n            dx = _.defaultTo(dx, 0);\r\n            dy = _.defaultTo(dy, 0);\r\n            this.queue('translate', dx, dy);\r\n            return this;\r\n        },\r\n        rotate: function(deg, cx, cy) {\r\n            if ( ! _.isUndefined(cx) && ! _.isUndefined(cy)) {\r\n                this.queue('rotate', deg, cx, cy);    \r\n            } else {\r\n                this.queue('rotate', deg);    \r\n            }\r\n            return this;\r\n        },\r\n        scale: function(sx, sy, cx, cy) {\r\n            sy = _.defaultTo(sy, sx);\r\n\r\n            if ( ! _.isUndefined(cx) && ! _.isUndefined(cy)) {\r\n                this.queue('scale', sx, sy, cx, cy);\r\n            } else {\r\n                this.queue('scale', sx, sy);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        matrix: function(a, b, c, d, e, f) {\r\n            this.queue('matrix', a, b, c, d, e, f);\r\n            return this;\r\n        },\r\n\r\n        commit: function(absolute, simulate) {\r\n            var me = this,\r\n                actions = me.actions,\r\n                vector = me.vector(),\r\n                events = {\r\n                    translate: false,\r\n                    rotate: false,\r\n                    scale: false\r\n                };\r\n\r\n            if ( ! actions.length) {\r\n                return;\r\n            }\r\n            \r\n            absolute = _.defaultTo(absolute, false);\r\n            simulate = _.defaultTo(simulate, false);\r\n            \r\n            var deg = 0, \r\n                dx = 0, \r\n                dy = 0, \r\n                sx = 1, \r\n                sy = 1;\r\n                \r\n            var mat = vector.matrix().clone();\r\n            \r\n            _.forEach(actions, function(act){\r\n                var arg = act.args,\r\n                    cmd = act.name,\r\n                    len = arg.length,\r\n                    inv = false;\r\n\r\n                if (absolute) {\r\n                    inv = mat.invert(true);\r\n                }\r\n                \r\n                var x1, y1, x2, y2, bb;\r\n                \r\n                if (cmd == 'translate' && len === 2) {\r\n                    if (absolute) {\r\n                        x1 = inv.x(0, 0);\r\n                        y1 = inv.y(0, 0);\r\n                        x2 = inv.x(arg[0], arg[1]);\r\n                        y2 = inv.y(arg[0], arg[1]);\r\n                        mat.translate(x2 - x1, y2 - y1);\r\n                    } else {\r\n                        mat.translate(arg[0], arg[1]);\r\n                    }\r\n                    events.translate = true;\r\n                } else if (cmd == 'rotate') {\r\n                    if (len == 1) {\r\n                        bb = bb || vector.bbox(true).toJson();\r\n                        mat.rotate(arg[0], bb.x + bb.width / 2, bb.y + bb.height / 2);\r\n                        deg += arg[0];\r\n                    } else if (len == 3) {\r\n                        if (absolute) {\r\n                            x2 = inv.x(arg[1], arg[2]);\r\n                            y2 = inv.y(arg[1], arg[2]);\r\n                            mat.rotate(arg[0], x2, y2);\r\n                        } else {\r\n                            mat.rotate(arg[0], arg[1], arg[2]);\r\n                        }\r\n                        deg += arg[0];\r\n                    }\r\n                    events.rotate = true;\r\n                } else if (cmd == 'scale') {\r\n                    if (len === 1 || len === 2) {\r\n                        bb = bb || vector.bbox(true).toJson();\r\n                        mat.scale(arg[0], arg[len - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\r\n                        sx *= arg[0];\r\n                        sy *= arg[len - 1];\r\n                    } else if (len === 4) {\r\n                        if (absolute) {\r\n                            x2 = inv.x(arg[2], arg[3]);\r\n                            y2 = inv.y(arg[2], arg[3]);\r\n                            mat.scale(arg[0], arg[1], x2, y2);\r\n                        } else {\r\n                            mat.scale(arg[0], arg[1], arg[2], arg[3]);\r\n                        }\r\n                        sx *= arg[0];\r\n                        sy *= arg[1];\r\n                    }\r\n                    events.scale = true;\r\n                } else if (cmd == 'matrix') {\r\n                    mat.multiply(arg[0], arg[1], arg[2], arg[3], arg[4], arg[5]);\r\n                }\r\n            });\r\n\r\n            if (simulate) {\r\n                this.actions = [];\r\n                return mat;\r\n            }\r\n            \r\n            vector.graph.matrix = mat;\r\n            vector.attr('transform', mat);\r\n\r\n            if (events.translate) {\r\n                events.translate = {\r\n                    dx: mat.e,\r\n                    dy: mat.f\r\n                };\r\n                this.fire('translate', events.translate);\r\n            }\r\n\r\n            if (events.rotate) {\r\n                events.rotate = {\r\n                    deg: deg\r\n                };\r\n                this.fire('rotate', events.rotate);\r\n            }\r\n\r\n            if (events.scale) {\r\n                events.scale = {\r\n                    sx: sx,\r\n                    sy: sy\r\n                };\r\n                this.fire('scale', events.scale);\r\n            }\r\n\r\n            this.actions = [];\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Transformer';\r\n        }\r\n    });\r\n    \r\n}());","\r\n(function(){\r\n    var global = this;\r\n\r\n    var Animator = Graph.plugin.Animator = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n\r\n            // default duration\r\n            duration: 1000,\r\n\r\n            // default easing\r\n            easing: 'linier'\r\n        },\r\n\r\n        stacks: [],\r\n\r\n        constructor: function(vector) {\r\n            this.props.vector = vector.guid();\r\n        },\r\n        \r\n        create: function(keyframes, duration, easing, callback) {\r\n            return new Animation(keyframes, duration, easing, callback);\r\n        },\r\n\r\n        animate: function(params, duration, easing, callback) {\r\n            var vector = this.vector(),\r\n                reset = _.extend({}, vector.attrs);\r\n\r\n            var scenes, animation;\r\n\r\n            if (params instanceof Animation ) {\r\n                animation = params;\r\n            } else {\r\n                duration = _.defaultTo(duration, this.props.duration);\r\n\r\n                if (_.isFunction(easing)) {\r\n                    callback = easing;\r\n                    easing = this.props.easing;\r\n                }\r\n\r\n                if ( ! easing) {\r\n                    easing = this.props.easing;\r\n                }\r\n\r\n                scenes = {\r\n                    100: params\r\n                };\r\n\r\n                animation = new Animation(scenes, duration, easing, callback);\r\n            }\r\n\r\n            if ( ! animation.count()) {\r\n                animation = null;\r\n                return;\r\n            }\r\n\r\n            reset.transform = vector.attrs.transform;\r\n            reset.matrix = vector.matrix().clone();\r\n\r\n            this.start(\r\n                animation, \r\n                animation.frame(0), \r\n                reset, \r\n                null\r\n            );\r\n\r\n            animation = null;\r\n\r\n            return this;\r\n        },\r\n\r\n        resume: function() {\r\n\r\n        },\r\n\r\n        pause: function() {\r\n\r\n        },\r\n\r\n        stop: function() {\r\n\r\n        },\r\n\r\n        start: function(animation, frame, reset, status) {\r\n            var asize = animation.count();\r\n\r\n            if ( ! asize) {\r\n                animation = null;\r\n                return;\r\n            }\r\n\r\n            var vector = this.vector(),\r\n                ssize = this.stacks.length,\r\n                origin = {},\r\n                delta = {},\r\n                from = {},\r\n                to = {};\r\n\r\n            var scene, queue, last, time, playing, applied, p, i;\r\n\r\n            if (status) {\r\n                for (i = 0; i < ssize; i++) {\r\n                    p = this.stacks[i];\r\n                    if (p.animation == animation) {\r\n                        if (p.frame != frame) {\r\n                            this.stacks.splice(i, 1);\r\n                            applied = 1;\r\n                        } else {\r\n                            playing = p;\r\n                        }\r\n                        vector.attr(p.reset);\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                status = +to;\r\n            }\r\n\r\n            queue = {\r\n                animation: animation,\r\n                vector: vector\r\n            };\r\n\r\n            time = animation.duration();\r\n            last = animation.at(asize - 1).frame;\r\n\r\n            for (i = 0; i < asize; i++) {\r\n                scene = animation.at(i);\r\n                if (scene.frame == frame || scene.frame > status * last) {\r\n\r\n                    queue.prev = animation.at(i - 1);\r\n                    queue.prev = queue.prev ? queue.prev.frame : 0;\r\n\r\n                    queue.frame = scene.frame;\r\n                    queue.duration = time / last * (queue.frame - queue.prev);\r\n\r\n                    queue.next = animation.at(i + 1);\r\n                    queue.next = queue.next ? queue.next.frame : undefined;\r\n\r\n                    queue.last = last;\r\n                    break;\r\n                } else if (status) {\r\n                    vector.attr(scene.params);\r\n                }\r\n            }\r\n\r\n            if ( ! playing) {\r\n\r\n                time = queue.duration;\r\n\r\n                _.forOwn(scene.params, function(v, k){\r\n                    \r\n                    var able = Animation.animable[k];\r\n                    var plugin, matrix, inverse, segments;\r\n                    var i, j, ii, jj;\r\n\r\n                    if (able) {\r\n                        from[k] = vector.attrs[k];\r\n                        from[k] = _.defaultTo(from[k], able.defaults);\r\n                        to[k]   = v;\r\n\r\n                        switch(able.type) {\r\n                            case 'number':\r\n                                delta[k] = (to[k] - from[k]) / time;\r\n                                break;\r\n\r\n                            case 'transform':\r\n                                var eq = equalizeTransform(vector.attrs[k], v);\r\n\r\n                                if (eq.equal) {\r\n                                    from[k]  = eq.from;\r\n                                    to[k]    = eq.to;\r\n                                    delta[k] = [];\r\n                                    delta[k].semantic = true;\r\n                                    for (i = 0, ii = from[k].length; i < ii; i++) {\r\n                                        delta[k][i] = [from[k][i][0]];\r\n                                        for (j = 1, jj = from[k][i].length; j < jj; j++) {\r\n                                            delta[k][i][j] = (to[k][i][j] - from[k][i][j]) / time;\r\n                                        }\r\n                                    }\r\n                                } else {\r\n                                    plugin = vector.plugins.transformer;\r\n                                    segments = Graph.util.transform2segments(to[k]);\r\n\r\n                                    matrix = vector.matrix();\r\n\r\n                                    from[k] = matrix.clone();\r\n                                    inverse = matrix.invert(true);\r\n\r\n                                    vector.graph.matrix = matrix.multiply(inverse);\r\n\r\n                                    _.forEach(segments, function(s){\r\n                                        var cmd = s[0], args = s.slice(1);\r\n                                        plugin[cmd].apply(plugin, args);\r\n                                    });\r\n\r\n                                    matrix = plugin.commit(false, true);\r\n                                    to[k] = matrix.clone();\r\n\r\n                                    delta[k] = {\r\n                                        a: (to[k].props.a - from[k].props.a) / time,\r\n                                        b: (to[k].props.b - from[k].props.b) / time,\r\n                                        c: (to[k].props.c - from[k].props.c) / time,\r\n                                        d: (to[k].props.d - from[k].props.d) / time,\r\n                                        e: (to[k].props.e - from[k].props.e) / time,\r\n                                        f: (to[k].props.f - from[k].props.f) / time\r\n                                    };\r\n\r\n                                    segments = null;\r\n                                    plugin = null;\r\n                                    matrix = null;\r\n                                }\r\n\r\n                                break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n                var timestamp = +new Date;\r\n\r\n                _.extend(queue, {\r\n                    scene: scene,\r\n                    timestamp: timestamp,\r\n                    start: timestamp + animation.delay(),\r\n\r\n                    reset: reset,\r\n                    from: from,\r\n                    to: to,\r\n                    delta: delta,\r\n\r\n                    status: 0,\r\n                    initstatus: status || 0,\r\n\r\n                    stop: false\r\n                });\r\n\r\n                this.stacks.push(queue);\r\n\r\n                if (status && ! playing && ! applied) {\r\n                    queue.stop = true;\r\n                    queue.start = new Date - scene.duration * status;\r\n                    if (this.stacks.length === 1) {\r\n                        return this.player();\r\n                    }\r\n                }\r\n\r\n                if (applied) {\r\n                    queue.start = new Date - scene.duration * status;\r\n                }\r\n\r\n                if (this.stacks.length === 1) {\r\n                    Animator.play(_.bind(this.player, this));\r\n                }\r\n            } else {\r\n                playing.initstatus = status;\r\n                playing.start = new Date - playing.duration * status;\r\n            }\r\n\r\n            this.fire('animstart');\r\n\r\n        },\r\n\r\n        player: function() {\r\n            var timestamp = +new Date, tick = 0;\r\n            var vector, curr, from, prog, anim, time, able, value, key, type, scene, matrix;\r\n            var plugin, matrix, method, args;\r\n            var key, to, ii, jj, i, j;\r\n\r\n            for (; tick < this.stacks.length; tick++) {\r\n                curr = this.stacks[tick];\r\n\r\n                if (curr.paused) {\r\n                    continue;\r\n                }\r\n                \r\n                prog   = timestamp - curr.start;\r\n\r\n                time   = curr.duration;\r\n                vector = curr.vector;\r\n                scene  = curr.scene;\r\n                from   = curr.from;\r\n                to     = curr.to;\r\n                delta  = curr.delta;\r\n                anim   = curr.animation;\r\n\r\n                if (curr.initstatus) {\r\n                    prog = (curr.initstatus * curr.last - curr.prev) / (curr.frame - curr.prev) * time;\r\n                    curr.status = curr.initstatus;\r\n                    delete curr.initstatus;\r\n                    curr.stop && this.stacks.splice(tick--, 1);\r\n                } else {\r\n                    curr.status = (curr.prev + (curr.frame - curr.prev) * (prog / time)) / curr.last;\r\n                }\r\n\r\n                if (prog < 0) {\r\n                    continue;\r\n                }\r\n\r\n                if (prog < time) {\r\n\r\n                    ease = scene.easing(prog / time);\r\n\r\n                    for (key in from) {\r\n                        \r\n                        able = Animation.animable[key];\r\n\r\n                        switch(able.type) {\r\n                            case 'number':\r\n\r\n                                value = +from[key] + ease * time * delta[key];\r\n                                vector.attr(name, value);\r\n\r\n                                break;\r\n                            case 'transform':\r\n\r\n                                // semantic `rotate,scale,translate`\r\n                                if (delta[key].semantic) {\r\n                                    plugin = vector.plugins.transformer;\r\n\r\n                                    for (i = 0, ii = from[key].length; i < ii; i++) {\r\n                                        method = from[key][i][0];\r\n                                        args = [];\r\n\r\n                                        for (j = 1, jj = from[key][i].length; j < jj; j++) {\r\n                                            args.push(from[key][i][j] + ease * time * delta[key][i][j]);\r\n                                        }\r\n\r\n                                        plugin[method].apply(plugin, args);\r\n                                    }\r\n\r\n                                    matrix = plugin.commit(false, true);\r\n\r\n                                    vector.attr('transform', matrix.toString());\r\n\r\n\r\n                                    matrix = null;\r\n                                    plugin = null;\r\n\r\n                                } else {\r\n                                    matrix = Graph.matrix(\r\n                                        from[key].props.a + ease * time * delta[key].a,\r\n                                        from[key].props.b + ease * time * delta[key].b,\r\n                                        from[key].props.c + ease * time * delta[key].c,\r\n                                        from[key].props.d + ease * time * delta[key].d,\r\n                                        from[key].props.e + ease * time * delta[key].e,\r\n                                        from[key].props.f + ease * time * delta[key].f\r\n                                    );\r\n                                    vector.attr('transform', matrix.toString());\r\n                                    matrix = null;\r\n                                }\r\n\r\n                                break;\r\n                        }\r\n                    }\r\n\r\n                } else {\r\n\r\n                    for (key in to) {\r\n                        \r\n                        able = Animation.animable[key];\r\n\r\n                        switch(able.type) {\r\n\r\n                            case 'transform':\r\n\r\n                                if (delta[key].semantic) {\r\n                                    plugin = vector.plugins.transformer;\r\n\r\n                                    _.forEach(to[key], function(v){\r\n                                        var cmd = v[0], args = v.slice(1);\r\n                                        plugin[cmd].apply(plugin, args);\r\n                                    });\r\n\r\n                                    matrix = plugin.commit(false, true);\r\n\r\n                                    vector.graph.matrix = matrix;\r\n                                    vector.attr('transform', matrix.toString());\r\n                                    \r\n                                    matrix = null;\r\n                                    plugin = null;\r\n                                } else {\r\n                                    matrix = to[key].clone();\r\n\r\n                                    vector.graph.matrix = matrix;\r\n                                    vector.attr('transform', matrix.toString());\r\n\r\n                                    matrix = null;\r\n                                }\r\n                                break;\r\n                            \r\n                            default:\r\n                                vector.attr(key, to[key]);\r\n                                break;\r\n                        }\r\n                    }\r\n                    \r\n                    scene.played++;\r\n\r\n                    this.stacks.splice(tick--, 1);\r\n\r\n                    var repeat = anim.repeat(), \r\n                        played = scene.played;\r\n\r\n                    if ((repeat > 1 && played < repeat) && ! curr.next ) {\r\n                        _.forOwn(anim.scenes, function(s, k){\r\n                            for (var key in s.params) {\r\n                                if (key == 'transform') {\r\n                                    vector.graph.matrix = curr.reset.matrix;\r\n                                    vector.attr('transform', curr.reset.transform);\r\n                                } else {\r\n                                    vector.attr(k, curr.reset[k]);    \r\n                                }\r\n                            }\r\n                        });\r\n\r\n                        this.start(\r\n                            anim,\r\n                            anim.frame(0),\r\n                            curr.reset,\r\n                            null\r\n                        );\r\n                    }\r\n\r\n                    if (curr.next && ! curr.stop) {\r\n                        this.start(\r\n                            anim,\r\n                            curr.next,\r\n                            curr.reset,\r\n                            null\r\n                        );\r\n                    }\r\n\r\n                    if (played >= repeat) {\r\n                        // ___DONE___?\r\n                        curr = null;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.stacks.length) {\r\n                Animator.play(_.bind(this.player, this));\r\n            } else {\r\n                // ___DONE___\r\n            }\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Animator';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n    Animator.play = (function(g){\r\n        var func = g.requestAnimationFrame || \r\n                   g.webkitRequestAnimationFrame || \r\n                   g.mozRequestAnimationFrame || \r\n                   g.oRequestAnimationFrame || \r\n                   g.msRequestAnimationFrame || \r\n                   function (callback) { \r\n                        setTimeout(callback, 16); \r\n                   };\r\n\r\n        return _.bind(func, g);\r\n    }(global));\r\n\r\n    ///////// INTERNAL ANIMATION /////////\r\n    \r\n    var Animation = Graph.extend({\r\n\r\n        props: {\r\n            easing: 'linier',\r\n            duration: 1000,\r\n            repeat: 1,\r\n            delay: 0\r\n        },\r\n        \r\n        scenes: {},\r\n        frames: [],\r\n\r\n        constructor: function(keyframes, duration, easing, callback) {\r\n            this.props.guid = 'graph-anim-' + (++Animation.guid);\r\n            this.props.duration = duration = _.defaultTo(duration, 1000);\r\n\r\n            if (_.isFunction(easing)) {\r\n                if (callback) {\r\n                    this.props.easing = 'function';\r\n                } else {\r\n                    callback = easing;\r\n                    easing = this.props.easing;\r\n                }\r\n            }\r\n\r\n            if ( ! easing) {\r\n                easing = this.props.easing;\r\n            }\r\n\r\n            if (keyframes) {\r\n                var easing = _.isString(easing) ? Animation.easing[easing] : easing,\r\n                    repeat = this.props.repeat,\r\n                    scenes = this.scenes,\r\n                    frames = this.frames;\r\n\r\n                _.forOwn(keyframes, function(f, key){\r\n                    var params = {}, frame, scene;\r\n\r\n                    frame = _.toNumber(key);\r\n\r\n                    params = _.pickBy(f, function(v, k){\r\n                        return !!Animation.animable[k];\r\n                    });\r\n\r\n                    scene = {\r\n                        frame: frame,\r\n                        params: params,\r\n                        easing: easing,\r\n                        callback: callback,\r\n                        played: 0\r\n                    };\r\n\r\n                    frames.push(frame);\r\n                    scenes[frame] = scene;\r\n                });\r\n\r\n                frames.sort(function(a, b){ return a - b });\r\n            }\r\n        },\r\n\r\n        guid: function() {\r\n            return this.props.guid;\r\n        },\r\n\r\n        duration: function() {\r\n            return this.props.duration;\r\n        },\r\n\r\n        easing: function() {\r\n            return this.props.easing;\r\n        },\r\n\r\n        delay: function(delay) {\r\n\r\n            if (delay === undefined) {\r\n                return this.props.delay;\r\n            }\r\n\r\n            var anim = new Animation();\r\n\r\n            anim.frames = this.frames;\r\n            anim.scenes = _.cloneDeep(this.scenes);\r\n            anim.props  = _.cloneDeep(this.props);\r\n            anim.props.delay = delay || 0;\r\n            \r\n            return anim;\r\n        },\r\n\r\n        repeat: function(times) {\r\n\r\n            if (times === undefined) {\r\n                return this.props.repeat;\r\n            }\r\n\r\n            var anim = new Animation();\r\n\r\n            anim.frames = this.frames.slice();\r\n            anim.scenes = _.cloneDeep(this.scenes);\r\n            anim.props  = _.cloneDeep(this.props);\r\n            anim.props.repeat = Math.floor(Math.max(times, 0)) || 1;\r\n\r\n            // reset to scenes\r\n            _.forOwn(anim.scenes, function(s, f){\r\n                s.played = 0;\r\n            });\r\n\r\n            return anim;\r\n        },\r\n\r\n        count: function() {\r\n            return this.frames.length;\r\n        },\r\n\r\n        at: function(index) {\r\n            var frame = this.frame(index);\r\n            return this.scene(frame);\r\n        },\r\n\r\n        frame: function(index) {\r\n            return this.frames[index];\r\n        },\r\n\r\n        scene: function(frame) {\r\n            return this.scenes[frame];\r\n        },\r\n\r\n        destroy: function() {\r\n            this.scenes = null;\r\n            this.frames = null;\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n    _.extend(Animation, {\r\n        guid: 0,\r\n\r\n        animable: {\r\n             x: { type: 'number', defaults: 0 },\r\n             y: { type: 'number', defaults: 0 },\r\n            cx: { type: 'number', defaults: 0 },\r\n            cy: { type: 'number', defaults: 0 },\r\n            transform: { type: 'transform', defaults: '' }\r\n        },\r\n\r\n        easing: {\r\n            linier: function(n) {\r\n                return n;\r\n            },\r\n\r\n            easeIn: function(n) {\r\n                return Math.pow(n, 1.7);\r\n            },\r\n\r\n            easeOut: function(n) {\r\n                return Math.pow(n, .48);\r\n            },\r\n\r\n            easeInOut: function(n) {\r\n                var q = .48 - n / 1.04,\r\n                    Q = Math.sqrt(.1734 + q * q),\r\n                    x = Q - q,\r\n                    X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\r\n                    y = -Q - q,\r\n                    Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\r\n                    t = X + Y + .5;\r\n                return (1 - t) * 3 * t * t + t * t * t;\r\n            },\r\n\r\n            backIn: function(n) {\r\n                var s = 1.70158;\r\n                return n * n * ((s + 1) * n - s);\r\n            },\r\n\r\n            backOut: function (n) {\r\n                n = n - 1;\r\n                var s = 1.70158;\r\n                return n * n * ((s + 1) * n + s) + 1;\r\n            },\r\n\r\n            elastic: function (n) {\r\n                if (n == !!n) {\r\n                    return n;\r\n                }\r\n                return pow(2, -10 * n) * math.sin((n - .075) * (2 * PI) / .3) + 1;\r\n            },\r\n\r\n            bounce: function (n) {\r\n                var s = 7.5625,\r\n                    p = 2.75,\r\n                    l;\r\n                if (n < (1 / p)) {\r\n                    l = s * n * n;\r\n                } else {\r\n                    if (n < (2 / p)) {\r\n                        n -= (1.5 / p);\r\n                        l = s * n * n + .75;\r\n                    } else {\r\n                        if (n < (2.5 / p)) {\r\n                            n -= (2.25 / p);\r\n                            l = s * n * n + .9375;\r\n                        } else {\r\n                            n -= (2.625 / p);\r\n                            l = s * n * n + .984375;\r\n                        }\r\n                    }\r\n                }\r\n                return l;\r\n            }\r\n        }\r\n    });\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function equalizeTransform (t1, t2) {\r\n        t2 = _.toString(t2).replace(/\\.{3}|\\u2026/g, t1);\r\n        t1 = Graph.util.transform2segments(t1) || [];\r\n        t2 = Graph.util.transform2segments(t2) || [];\r\n        \r\n        var maxlength = Math.max(t1.length, t2.length),\r\n            from = [],\r\n            to = [],\r\n            i = 0, j, jj,\r\n            tt1, tt2;\r\n\r\n        for (; i < maxlength; i++) {\r\n            tt1 = t1[i] || emptyTransform(t2[i]);\r\n            tt2 = t2[i] || emptyTransform(tt1);\r\n\r\n            if ((tt1[0] != tt2[0]) ||\r\n                (tt1[0].toLowerCase() == \"rotate\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3])) ||\r\n                (tt1[0].toLowerCase() == \"scale\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4]))) {\r\n                return {\r\n                    equal: false,\r\n                    from: tt1,\r\n                    to: tt2\r\n                }\r\n            }\r\n            from[i] = [];\r\n            to[i] = [];\r\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\r\n                j in tt1 && (from[i][j] = tt1[j]);\r\n                j in tt2 && (to[i][j] = tt2[j]);\r\n            }\r\n        }\r\n        return {\r\n            equal: true,\r\n            from: from,\r\n            to: to\r\n        };\r\n    }\r\n\r\n    function emptyTransform(item) {\r\n        var l = item[0];\r\n        switch (l.toLowerCase()) {\r\n            case \"translate\": return [l, 0, 0];\r\n            case \"matrix\": return [l, 1, 0, 0, 1, 0, 0];\r\n            case \"rotate\": if (item.length == 4) {\r\n                return [l, 0, item[2], item[3]];\r\n            } else {\r\n                return [l, 0];\r\n            }\r\n            case \"scale\": if (item.length == 5) {\r\n                return [l, 1, 1, item[3], item[4]];\r\n            } else if (item.length == 3) {\r\n                return [l, 1, 1];\r\n            } else {\r\n                return [l, 1];\r\n            }\r\n        }\r\n    }\r\n\r\n}());","\r\n(function(){\r\n    \r\n    Graph.plugin.Resizer = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            shield: null,\r\n            vector: null,\r\n            enabled: true,\r\n            suspended: true,\r\n            handleImage: Graph.config.base + 'img/resize-control.png',\r\n            handleSize: 17,\r\n            rendered: false\r\n        },\r\n\r\n        components: {\r\n            holder: null,\r\n            helper: null,\r\n            handle: null\r\n        },\r\n\r\n        trans: {\r\n            // original offset\r\n            ox: 0,\r\n            oy: 0,\r\n\r\n            // original\r\n            ow: 0,\r\n            oh: 0,\r\n\r\n            // current\r\n            cw: 0,\r\n            ch: 0,\r\n\r\n            // translation\r\n            dx: 0,\r\n            dy: 0\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var me = this, guid = vector.guid();\r\n            \r\n            options = options || {};\r\n\r\n            if (options.shield) {\r\n                options.shield = options.shield.guid();\r\n            } else {\r\n                options.shield = guid;\r\n            }\r\n\r\n            _.assign(me.props, options);\r\n\r\n            vector.addClass('graph-resizable');\r\n\r\n            me.props.handleImage = Graph.config.base + 'img/resize-control.png';\r\n\r\n            me.props.vector = guid;\r\n\r\n            me.cached.snapping = null;\r\n            me.cached.vertices = null;\r\n\r\n            me.initComponent();\r\n        },\r\n        \r\n        holder: function() {\r\n            return Graph.registry.vector.get(this.components.holder);\r\n        },\r\n\r\n        helper: function() {\r\n            return Graph.registry.vector.get(this.components.helper);\r\n        },\r\n\r\n        handle: function(dir) {\r\n            return Graph.registry.vector.get(this.components.handle[dir]);\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = me.components;\r\n            var holder, helper;\r\n\r\n            holder = (new Graph.svg.Group())\r\n                .addClass('graph-resizer')\r\n                .removeClass('graph-elem graph-elem-group');\r\n\r\n            holder.elem.group('graph-resizer');\r\n\r\n            holder.on({\r\n                render: _.bind(me.onHolderRender, me)\r\n            });\r\n            \r\n            helper = (new Graph.svg.Rect(0, 0, 0, 0, 0))\r\n                .addClass('graph-resizer-helper')\r\n                .removeClass('graph-elem graph-elem-rect')\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(holder);\r\n\r\n            helper.elem.group('graph-resizer');\r\n\r\n            comp.handle = {};\r\n\r\n            var handle = {\r\n                ne: {cursor: 'nesw-resize'},\r\n                se: {cursor: 'nwse-resize'},\r\n                sw: {cursor: 'nesw-resize'},\r\n                nw: {cursor: 'nwse-resize'},\r\n                 n: {cursor: 'ns-resize', axis: 'y'},\r\n                 e: {cursor: 'ew-resize', axis: 'x'},\r\n                 s: {cursor: 'ns-resize', axis: 'y'},\r\n                 w: {cursor: 'ew-resize', axis: 'x'}\r\n            };\r\n\r\n            _.forOwn(handle, function(c, dir){\r\n                (function(dir){\r\n                    var h = (new Graph.svg.Image(\r\n                        me.props.handleImage,\r\n                        0,\r\n                        0,\r\n                        me.props.handleSize,\r\n                        me.props.handleSize\r\n                    ))\r\n                    .selectable(false)\r\n                    .removeClass('graph-elem graph-elem-image')\r\n                    .addClass('graph-resizer-handle handle-' + dir);\r\n\r\n                    h.elem.group('graph-resizer');\r\n                    h.props.dir = dir;\r\n                    h.draggable(c);\r\n                    \r\n                    h.on('dragstart', _.bind(me.onHandleMoveStart, me));\r\n                    h.on('dragmove', _.bind(me.onHandleMove, me));\r\n                    h.on('dragend', _.bind(me.onHandleMoveEnd, me));\r\n\r\n                    h.render(holder);\r\n\r\n                    comp.handle[dir] = h.guid();\r\n                    h = null;\r\n                }(dir));\r\n            });\r\n\r\n            comp.holder = holder.guid();\r\n            comp.helper = helper.guid();\r\n\r\n            holder = null;\r\n            helper = null;\r\n            handle = null;\r\n        },\r\n\r\n        invalidate: function()  {\r\n            this.superclass.prototype.invalidate.call(this);\r\n            this.cached.vertices = null;\r\n        },\r\n\r\n        render: function() {\r\n            var me = this;\r\n\r\n            if (me.props.rendered) {\r\n                me.redraw();\r\n                return;\r\n            }\r\n            \r\n            me.holder().render(me.vector().parent());\r\n            me.props.rendered = true;\r\n\r\n            me.redraw();\r\n        },\r\n\r\n        snap: function(snap) {\r\n            this.cached.snapping = snap;\r\n        },\r\n\r\n        vertices: function() {\r\n            var me = this,\r\n                vector = me.vector(),\r\n                vertices = me.cached.vertices;\r\n\r\n            if ( ! vertices) {\r\n                // get original bounding\r\n                var path = vector.pathinfo(),\r\n                    bbox = path.bbox().toJson(),\r\n                    rotate = vector.matrix(true).rotate();\r\n\r\n                var ro, cx, cy, ox, oy, hs, hw, hh;\r\n\r\n                ro = rotate.deg;\r\n                cx = 0;\r\n                cy = 0;\r\n                ox = bbox.x;\r\n                oy = bbox.y;\r\n                hs = me.props.handleSize / 2;\r\n\r\n                if (ro) {\r\n                    var rmatrix = Graph.matrix(),\r\n                        path = me.pathinfo();\r\n\r\n                    cx = bbox.x + bbox.width / 2,\r\n                    cy = bbox.y + bbox.height / 2;\r\n\r\n                    rmatrix.rotate(-ro, cx, cy);\r\n\r\n                    path = path.transform(rmatrix);\r\n                    bbox = path.bbox().toJson();\r\n                } else {\r\n                    if ( ! this.hasShield()) {\r\n                        path = me.pathinfo();\r\n                        bbox = path.bbox().toJson();\r\n                    }\r\n                }\r\n\r\n                hw = bbox.width / 2;\r\n                hh = bbox.height / 2;\r\n\r\n                vertices = {\r\n                    ne: {\r\n                        x: bbox.x + bbox.width - hs,\r\n                        y: bbox.y - hs\r\n                    },\r\n\r\n                    se: {\r\n                        x: bbox.x + bbox.width - hs,\r\n                        y: bbox.y + bbox.height - hs\r\n                    },\r\n\r\n                    sw: {\r\n                        x: bbox.x - hs,\r\n                        y: bbox.y + bbox.height - hs\r\n                    },\r\n\r\n                    nw: {\r\n                        x: bbox.x - hs,\r\n                        y: bbox.y - hs\r\n                    },\r\n\r\n                    n: {\r\n                        x: bbox.x + hw - hs,\r\n                        y: bbox.y - hs\r\n                    },\r\n                    e: {\r\n                        x: bbox.x + bbox.width - hs,\r\n                        y: bbox.y + hh - hs\r\n                    },\r\n                    s: {\r\n                        x: bbox.x + hw - hs,\r\n                        y: bbox.y + bbox.height - hs\r\n                    },\r\n                    w: {\r\n                        x: bbox.x - hs,\r\n                        y: bbox.y + hh - hs\r\n                    },\r\n\r\n                    rotate: {\r\n                        deg: ro,\r\n                        cx: cx,\r\n                        cy: cy\r\n                    },\r\n\r\n                    box: {\r\n                        x: bbox.x,\r\n                        y: bbox.y,\r\n                        width: bbox.width,\r\n                        height: bbox.height\r\n                    },\r\n\r\n                    offset: {\r\n                        x: ox,\r\n                        y: oy\r\n                    }\r\n                };\r\n\r\n                this.cached.vertices = vertices;\r\n            }\r\n\r\n            return vertices;\r\n        },\r\n\r\n        redraw: function() {\r\n            var me = this,\r\n                helper = me.helper(),\r\n                holder = me.holder();\r\n\r\n            var vx;\r\n\r\n            if ( ! holder) {\r\n                return;\r\n            }\r\n\r\n            vx = this.vertices();\r\n\r\n            if ( ! vx) {\r\n                return;\r\n            }\r\n            \r\n            helper.reset();\r\n\r\n            helper.attr({\r\n                x: vx.box.x,\r\n                y: vx.box.y,\r\n                width: vx.box.width,\r\n                height: vx.box.height\r\n            });\r\n            \r\n            helper.rotate(vx.rotate.deg, vx.rotate.cx, vx.rotate.cy).commit();\r\n\r\n            _.forOwn(me.components.handle, function(id, dir){\r\n                (function(id, dir){\r\n                    var h = me.handle(dir);\r\n                    h.show();\r\n                    h.reset();\r\n                    h.attr(vx[dir]);\r\n                    h.rotate(vx.rotate.deg, vx.rotate.cx, vx.rotate.cy).commit();\r\n                }(id, dir));\r\n            });\r\n\r\n            me.trans.ox = vx.offset.x;\r\n            me.trans.oy = vx.offset.y;\r\n            me.trans.ow = this.trans.cw = vx.box.width;\r\n            me.trans.oh = this.trans.ch = vx.box.height;\r\n            me.trans.dx = 0;\r\n            me.trans.dy = 0;\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.holder().elem.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            if ( ! this.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            if (this.props.suspended) {\r\n\r\n                this.props.suspended = false;\r\n\r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else { \r\n                    this.vector().parent().elem.append(this.holder().elem);\r\n                    this.redraw();\r\n                }\r\n            }\r\n        },\r\n\r\n        onHolderRender: function(e) {\r\n            \r\n        },\r\n\r\n        onHandleMoveStart: function(e) {\r\n            var me = this, handle = e.publisher;\r\n\r\n            _.forOwn(me.components.handle, function(id, dir){\r\n                var h = me.handle(dir);\r\n                if (h !== handle) {\r\n                    h.hide();\r\n                }\r\n            });\r\n\r\n            var snapping = this.cached.snapping;\r\n\r\n            if (snapping && handle.draggable().snap() !== snapping) {\r\n                handle.draggable().snap(snapping);    \r\n            }\r\n            \r\n            handle.show();\r\n            handle.removeClass('dragging');\r\n        },\r\n\r\n        onHandleMove: function(e) {\r\n            var me = this, \r\n                helper = me.helper(), \r\n                handle = e.publisher;\r\n            \r\n            var tr = this.trans,\r\n                dx = e.dx,\r\n                dy = e.dy;\r\n\r\n            switch(handle.props.dir) {\r\n                case 'ne':\r\n                    tr.cw += dx;\r\n                    tr.ch -= dy;\r\n\r\n                    me.trans.dy += dy;\r\n                    helper.translate(0, dy).commit();\r\n                    break;\r\n\r\n                case 'se':\r\n                    tr.cw += dx;\r\n                    tr.ch += dy;\r\n\r\n                    break;\r\n\r\n                case 'sw':\r\n                    tr.cw -= dx;\r\n                    tr.ch += dy;\r\n\r\n                    me.trans.dx += dx;\r\n                    helper.translate(dx, 0).commit();\r\n                    break;\r\n\r\n                case 'nw':\r\n                    tr.cw -= dx;\r\n                    tr.ch -= dy;\r\n\r\n                    me.trans.dx += dx;\r\n                    me.trans.dy += dy;\r\n                    helper.translate(dx, dy).commit();\r\n                    break;\r\n\r\n                case 'n':\r\n                    tr.cw += 0;\r\n                    tr.ch -= dy;\r\n\r\n                    me.trans.dy += dy;\r\n                    helper.translate(0, dy).commit();\r\n                    break;\r\n\r\n                case 'e':\r\n                    tr.cw += dx;\r\n                    tr.ch += 0;\r\n\r\n                    break;\r\n\r\n                case 's':\r\n                    tr.cw += 0;\r\n                    tr.ch += dy;\r\n                    break;\r\n\r\n                case 'w':\r\n                    tr.cw -= dx;\r\n                    tr.ch += 0;\r\n\r\n                    me.trans.dx += dx;\r\n                    helper.translate(dx, 0).commit();\r\n                    break;\r\n            }\r\n\r\n            helper.attr({\r\n                width:  tr.cw,\r\n                height: tr.ch\r\n            });\r\n\r\n        },\r\n\r\n        onHandleMoveEnd: function(e) {\r\n            var me = this,\r\n                tr = this.trans,\r\n                handle = e.publisher;\r\n\r\n            var sx, sy, cx, cy, dx, dy;\r\n\r\n            sx = tr.ow > 0 ? (tr.cw / tr.ow) : 1;\r\n            sy = tr.oh > 0 ? (tr.ch / tr.oh) : 1;\r\n            dx = tr.dx;\r\n            dy = tr.dy;\r\n\r\n            switch(handle.props.dir) {\r\n                case 'ne':\r\n                    cx = tr.ox;\r\n                    cy = tr.oy + tr.oh;\r\n                    break;\r\n                case 'se':\r\n                    cx = tr.ox;\r\n                    cy = tr.oy;\r\n                    break;\r\n                case 'sw':\r\n                    cx = tr.ox + tr.ow;\r\n                    cy = tr.oy;\r\n                    break;\r\n                case 'nw':\r\n                    cx = tr.ox + tr.ow;\r\n                    cy = tr.oy + tr.oh;\r\n                    break;\r\n                case 'n':\r\n                    cx = tr.ox + tr.ow / 2;\r\n                    cy = tr.oy + tr.oh;\r\n                    break;\r\n                case 'e':\r\n                    cx = tr.ox;\r\n                    cy = tr.oy + tr.oh / 2;\r\n                    break;\r\n                case 's':\r\n                    cx = tr.ox + tr.ow / 2;\r\n                    cy = tr.oy;\r\n                    break;\r\n                case 'w':\r\n                    cx = tr.ox + tr.ow;\r\n                    cy = tr.oy + tr.oh / 2;\r\n                    break;\r\n            }\r\n\r\n            // track translation\r\n            var vector = me.vector(),\r\n                oldcen = vector.bbox().center().toJson(),\r\n                resize = vector.resize(sx, sy, cx, cy, dx, dy),\r\n                newcen = vector.bbox().center().toJson();\r\n\r\n            var vdx = newcen.x - oldcen.x,\r\n                vdy = newcen.y - oldcen.y;\r\n\r\n            resize.translate.dx = vdx;\r\n            resize.translate.dy = vdy;\r\n            \r\n            me.redraw();\r\n            me.fire('resize', resize);\r\n        },\r\n\r\n        destroy: function() {\r\n            // remove handles\r\n            var me = this\r\n\r\n            _.forOwn(me.components.handle, function(id, dir){\r\n                var h = me.handle(dir);\r\n                h.remove();\r\n            });\r\n\r\n            me.components.handle = null;\r\n\r\n            // remove helper\r\n            me.helper().remove();\r\n            me.components.helper = null;\r\n\r\n            // remove holder\r\n            me.holder().remove();\r\n            me.components.holder = null;\r\n\r\n            // remove listeners\r\n            me.listeners = null;\r\n        }\r\n        \r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Collector = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            x: 0,\r\n            y: 0,\r\n            x2: 0,\r\n            y2: 0,\r\n            dir: null,\r\n            top: 0,\r\n            left: 0,\r\n            width: 0,\r\n            height: 0,\r\n            offset: [0, 0],\r\n            enabled: false,\r\n            suspended: true,\r\n            rendered: false,\r\n            activator: 'tool'\r\n        },\r\n\r\n        paper: null,\r\n        collection: [],\r\n\r\n        components: {\r\n            rubber: null\r\n        },\r\n\r\n        constructor: function(paper) {\r\n            var me = this;\r\n\r\n            if ( ! paper.isPaper()) {\r\n                throw Graph.error('Lasso tool only available for paper !');\r\n            }\r\n            \r\n            me.paper = paper;\r\n            me.components.rubber = Graph.$('<div class=\"graph-rubberband\">');\r\n\r\n            paper.on('keynavdown', _.bind(me.onKeynavDown, me));\r\n            paper.on('keynavup', _.bind(me.onKeynavUp, me));\r\n\r\n            if (me.paper.props.rendered) {\r\n                me.setup();\r\n            } else {\r\n                me.paper.on('render', function(){\r\n                    me.setup();\r\n                });\r\n            }\r\n        },\r\n\r\n        enable: function(activator) {\r\n            this.props.enabled = true;\r\n            this.props.activator = activator;\r\n\r\n            this.paper.cursor('crosshair');\r\n            this.paper.state('collecting');\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.enabled = false;\r\n            this.paper.cursor('default');\r\n        },\r\n\r\n        setup: function() {\r\n            var me = this, paper = me.paper;\r\n\r\n            if (me.plugin) {\r\n                return;\r\n            }\r\n            // me.tree.container.on('scroll', function(){\r\n            //     var top = me.tree.container.scrollTop(),\r\n            //         left = me.tree.container.scrollLeft(),\r\n            //         dy = top - me.props.top,\r\n            //         dx = left - me.props.left;\r\n\r\n            //     me.props.height += dy;\r\n            //     me.props.width += dx;\r\n\r\n            //     me.props.top = top;\r\n            //     me.props.left = left;\r\n            // });\r\n\r\n            me.plugin = paper.interactable().draggable({\r\n                manualStart: true,\r\n\r\n                onstart: function(e) {\r\n                    me.reset();\r\n                    me.resize(0, 0);\r\n\r\n                    var offset = paper.tree.container.offset(),   \r\n                        x = e.pageX - offset.left,\r\n                        y = e.pageY - offset.top;\r\n\r\n                    me.translate(x, y);\r\n                    me.props.offset = [x, y];\r\n                },\r\n                \r\n                onmove: function(e) {\r\n                    var dw = 0,\r\n                        dh = 0,\r\n                        dx = 0,\r\n                        dy = 0;\r\n\r\n                    if ( ! me.props.dir) {\r\n                        switch(true) {\r\n                            case (e.dx > 0 && e.dy > 0):\r\n                                me.props.dir = 'nw';\r\n                                break;\r\n                            case (e.dx < 0 && e.dy < 0):\r\n                                me.props.dir = 'se';\r\n                                break;\r\n                            case (e.dx < 0 && e.dy > 0):\r\n                                me.props.dir = 'ne';\r\n                                break;\r\n                            case (e.dx > 0 && e.dy < 0):\r\n                                me.props.dir = 'sw';\r\n                                break;\r\n                        }\r\n                    } else {\r\n                        switch(me.props.dir) {\r\n                            case 'nw':\r\n                                dw = e.dx;\r\n                                dh = e.dy;\r\n                                dx = 0;\r\n                                dy = 0;\r\n                                break;\r\n                            case 'ne':\r\n                                dw = -e.dx;\r\n                                dh =  e.dy;\r\n                                dx =  e.dx;\r\n                                dy =  0;\r\n                                break;\r\n                            case 'se':\r\n                                dw = -e.dx;\r\n                                dh = -e.dy;\r\n                                dx =  e.dx;\r\n                                dy =  e.dy;\r\n                                break;\r\n                            case 'sw':\r\n                                dw =  e.dx;\r\n                                dh = -e.dy;\r\n                                dx =  0;\r\n                                dy =  e.dy;\r\n                                break;\r\n                        }\r\n                        \r\n                        me.props.width  += dw;\r\n                        me.props.height += dh;\r\n\r\n                        if (me.props.width >= 0 && me.props.height >= 0) {\r\n                            me.translate(dx, dy); \r\n                            me.resize(me.props.width, me.props.height);\r\n                        } else {\r\n                            me.props.width  -= dw;\r\n                            me.props.height -= dh;\r\n                        }\r\n                        \r\n                    }\r\n                },\r\n\r\n                onend: function() {\r\n                    var bbox\r\n\r\n                    me.props.x2 = me.props.x + me.props.width;\r\n                    me.props.y2 = me.props.y + me.props.height;\r\n\r\n                    bbox = me.bbox();\r\n                    \r\n                    paper.cascade(function(c){\r\n                        if (c !== paper && c.isSelectable() && ! c.isGroup()) {\r\n                            if (bbox.contains(c)) {\r\n                                me.collect(c);\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    if (me.props.activator == 'tool') {\r\n                        paper.tool().activate('panzoom');    \r\n                    }\r\n\r\n                    me.resize(0, 0);\r\n                    me.suspend();\r\n                }\r\n            })\r\n            .on('down', function(e){\r\n                var single = ! (e.ctrlKey || e.shiftKey),\r\n                    vector = Graph.registry.vector.get(e.target);\r\n\r\n                if (vector) {\r\n                    if ( ! vector.isSelectable()) {\r\n                        if ( ! vector.elem.belong('graph-resizer') && ! vector.elem.belong('graph-link')) {\r\n                            single && me.clearCollection();    \r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            .on('tap', function(e){\r\n                var vector = Graph.registry.vector.get(e.target),\r\n                    single = ! (e.ctrlKey || e.shiftKey);\r\n                \r\n                if (vector && vector.isSelectable()) {\r\n                    if (vector.paper().state() == 'linking') {\r\n                        me.clearCollection();\r\n                        return;\r\n                    }\r\n\r\n                    if (single) {\r\n                        me.clearCollection();\r\n                    }\r\n                    \r\n                    me.collect(vector);\r\n                }\r\n\r\n            }, true)\r\n            .on('move', function(e){\r\n                var i = e.interaction;\r\n\r\n                if (me.props.enabled) {\r\n                    if (i.pointerIsDown && ! i.interacting()) {\r\n                        if (e.currentTarget === paper.node()) {\r\n                            if (me.props.suspended) {\r\n                                me.resume();\r\n                            }\r\n                            i.start({name: 'drag'}, e.interactable, me.components.rubber.node());        \r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            me.plugin.styleCursor(false);\r\n        },\r\n\r\n        render: function() {\r\n            var me = this;\r\n\r\n            if (me.props.rendered) {\r\n                return;\r\n            }\r\n\r\n            me.paper.container().append(me.components.rubber);\r\n            me.props.rendered = true;\r\n        },\r\n\r\n        bbox: function() {\r\n            var props = this.props;\r\n            \r\n            return Graph.bbox({\r\n                x: props.x,\r\n                y: props.y,\r\n                x2: props.x2,\r\n                y2: props.y2,\r\n                width: props.width,\r\n                height: props.height\r\n            });\r\n        },\r\n\r\n        collect: function(vector, silent) {\r\n            var me = this, offset;\r\n\r\n            vector.$collector = this;\r\n            vector.select();\r\n\r\n            silent = _.defaultTo(silent, false);\r\n            offset = _.indexOf(this.collection, vector);\r\n\r\n            if (offset === -1) {\r\n                this.collection.push(vector);\r\n                if ( ! silent) {\r\n                    vector.fire('collect');\r\n                }\r\n            }\r\n        },\r\n\r\n        decollect: function(vector) {\r\n            var offset;\r\n            \r\n            vector.$collector = null;\r\n            vector.deselect();\r\n\r\n            offset = _.indexOf(this.collection, vector);\r\n\r\n            if (offset > -1) {\r\n                this.collection.splice(offset, 1);\r\n                vector.fire('decollect');\r\n            }\r\n        },\r\n\r\n        clearCollection: function(except) {\r\n            var me = this;\r\n            me.paper.cascade(function(c){\r\n                if (c !== me.paper && c !== except && c.props.selected) {\r\n                    me.decollect(c);\r\n                }\r\n            });\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.components.rubber.detach();\r\n            // this.components.rubber.removeClass('visible');\r\n        },\r\n\r\n        resume: function() {\r\n            this.props.suspended = false;\r\n\r\n            if ( ! this.props.rendered) {\r\n                this.render();\r\n            } else {\r\n                this.paper.container().append(this.components.rubber);\r\n                // this.components.rubber.addClass('visible');\r\n            }\r\n        },\r\n\r\n        reset: function() {\r\n            var top = this.paper.container().scrollTop(),\r\n                left = this.paper.container().scrollLeft();\r\n\r\n            this.props.x = 0;\r\n            this.props.y = 0;\r\n            this.props.x2 = this.props.x,\r\n            this.props.y2 = this.props.y,\r\n            this.props.top = top;\r\n            this.props.left = left;\r\n            this.props.dir = null;\r\n            this.props.width = 0;\r\n            this.props.height = 0;\r\n            this.props.offset = [0, 0];\r\n        },\r\n\r\n        translate: function(dx, dy) {\r\n            this.props.x += dx;\r\n            this.props.y += dy;\r\n            \r\n            this.components.rubber.css({\r\n                transform: 'translate(' + this.props.x + 'px,' + this.props.y + 'px)'\r\n            });\r\n        },\r\n\r\n        resize: function(width, height) {\r\n            this.components.rubber.width(width).height(height);\r\n        },\r\n\r\n        syncDragStart: function(origin, e) {\r\n            var me = this;\r\n\r\n            _.forEach(me.collection, function(v){\r\n                if (v.plugins.dragger && v.plugins.dragger.props.enabled && v !== origin) {\r\n                    (function(){\r\n                        var mat = v.graph.matrix.data(),\r\n                            sin = mat.sin,\r\n                            cos = mat.cos;\r\n\r\n                        if (v.plugins.resizer) {\r\n                            v.plugins.resizer.redraw();\r\n                            v.plugins.resizer.suspend();\r\n                        }\r\n\r\n                        if (v.plugins.dragger.components.helper) {\r\n                            v.plugins.dragger.resume();\r\n                        }\r\n\r\n                        v.syncdrag = {\r\n                            sin: sin,\r\n                            cos: cos,\r\n                            tdx: 0,\r\n                            tdy: 0\r\n                        };\r\n\r\n                        v.addClass('dragging');\r\n                        \r\n                        v.fire('dragstart', {\r\n                            dx: e.dx *  cos + e.dy * sin,\r\n                            dy: e.dx * -sin + e.dy * cos\r\n                        });\r\n\r\n                    }());\r\n                }\r\n            });\r\n\r\n            me.fire('beforedrag');\r\n        },\r\n\r\n        syncDragMove: function(origin, e) {\r\n            var me = this, dx, dy;\r\n\r\n            _.forEach(me.collection, function(v){\r\n                if (v.plugins.dragger && v.plugins.dragger.props.enabled && v !== origin) {\r\n                    (function(v, e){\r\n                        var dx = e.ox *  v.syncdrag.cos + e.oy * v.syncdrag.sin,\r\n                            dy = e.ox * -v.syncdrag.sin + e.oy * v.syncdrag.cos;\r\n\r\n                        if (v.plugins.dragger.components.helper) {\r\n                            v.plugins.dragger.helper().translate(e.ox, e.oy).commit();\r\n                        } else {\r\n                            v.translate(dx, dy).commit();\r\n                        }\r\n\r\n                        v.syncdrag.tdx += dx;\r\n                        v.syncdrag.tdy += dy;\r\n\r\n                        v.fire('dragmove', {\r\n                            dx: dx,\r\n                            dy: dy\r\n                        });\r\n\r\n                    }(v, e));    \r\n                }\r\n            });\r\n\r\n        },\r\n\r\n        syncDragEnd: function(origin, e) {\r\n            var me = this;\r\n\r\n            _.forEach(me.collection, function(v){\r\n                if (v.plugins.dragger && v.plugins.dragger.props.enabled && v !== origin) {\r\n                    (function(v, e){\r\n                        var manual = v.plugins.dragger.props.manual,\r\n                            helper = v.plugins.dragger.components.helper;\r\n\r\n                        if (helper) {\r\n                            if ( ! manual) {\r\n                                v.translate(v.syncdrag.tdx, v.syncdrag.tdy).commit();    \r\n                            }\r\n                            v.plugins.dragger.suspend();\r\n                        }\r\n                        \r\n                        if ( ! manual) {\r\n                            v.dirty(true);    \r\n                        }\r\n\r\n                        if (v.plugins.resizer) {\r\n                            v.plugins.resizer.resume();\r\n                        }\r\n\r\n                        v.fire('dragend', {\r\n                            dx: v.syncdrag.tdx,\r\n                            dy: v.syncdrag.tdy\r\n                        });\r\n                        \r\n                        v.removeClass('dragging');\r\n                        \r\n                        delete v.syncdrag;\r\n\r\n                    }(v, e));\r\n                }\r\n            });\r\n\r\n            e.origin = origin;\r\n            e.type = 'afterdrag';\r\n            \r\n            me.fire(e);\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Collector';\r\n        },\r\n\r\n        onKeynavDown: function(e) {\r\n            if (e.keyCode == Graph.event.SHIFT && this.props.activator != 'key') {\r\n                var tool = this.paper.tool(),\r\n                    curr = tool.current();\r\n\r\n                if (curr != 'collector') {\r\n                    tool.activate('collector', 'key');\r\n                }\r\n            }\r\n        },\r\n\r\n        onKeynavUp: function(e) {\r\n            if (e.keyCode == Graph.event.SHIFT) {\r\n                var tool = this.paper.tool(),\r\n                    curr = tool.current();\r\n\r\n                if (curr == 'collector') {\r\n                    this.props.activator = 'tool';\r\n                    tool.activate('panzoom');\r\n                }\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Dragger = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            manual: false,\r\n            single: true,\r\n            ghost: false,\r\n            vector: null,\r\n            enabled: true,\r\n            rendered: false,\r\n            suspended: true,\r\n            inertia: false,\r\n            bound: false,\r\n            // grid: [1, 1],\r\n            grid: null,\r\n            axis: false,\r\n            cursor: 'move',\r\n            snappable: false\r\n        },\r\n\r\n        rotation: {\r\n            deg: 0,\r\n            rad: 0,\r\n            sin: 0,\r\n            cos: 1\r\n        },\r\n\r\n        scaling: {\r\n            x: 1,\r\n            y: 1\r\n        },\r\n\r\n        trans: {\r\n            vector: null,\r\n            paper: null,\r\n            helper: null,\r\n            dx: 0,\r\n            dy: 0\r\n        },\r\n\r\n        components: {\r\n            holder: null,\r\n            helper: null\r\n        },\r\n        \r\n        constructor: function(vector, options) {\r\n            var me = this;\r\n\r\n            vector.addClass('graph-draggable');\r\n            me.props.vector = vector.guid();\r\n\r\n            options = _.extend({\r\n                inertia: false\r\n            }, options || {});\r\n\r\n            _.forEach(['axis', 'grid', 'bbox', 'ghost'], function(name){\r\n                if (options[name] !== undefined) {\r\n                    me.props[name] = options[name];\r\n                }\r\n            });\r\n            \r\n            _.assign(me.props, options);\r\n\r\n            me.cached.snapping = null;\r\n            me.cached.origin = null;\r\n\r\n            me.initComponent();\r\n\r\n            vector.on('render.dragger', _.bind(me.onVectorRender, me));\r\n            \r\n            if (vector.props.rendered) {\r\n                me.setup();\r\n            }\r\n        },\r\n        \r\n        holder: function() {\r\n            return Graph.registry.vector.get(this.components.holder);\r\n        },\r\n\r\n        helper: function() {\r\n            return Graph.registry.vector.get(this.components.helper);\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = me.components;\r\n            var holder, helper;\r\n\r\n            if (me.props.ghost) {\r\n                holder = (new Graph.svg.Group())\r\n                    .addClass('graph-dragger')\r\n                    .removeClass('graph-elem graph-elem-group')\r\n                    .traversable(false)\r\n                    .selectable(false);\r\n\r\n                helper = (new Graph.svg.Rect(0, 0, 0, 0, 0))\r\n                    .addClass('graph-dragger-helper')\r\n                    .removeClass('graph-elem graph-elem-rect')\r\n                    .traversable(false)\r\n                    .selectable(false)\r\n                    .clickable(false)\r\n                    .render(holder);\r\n\r\n                comp.holder = holder.guid();\r\n                comp.helper = helper.guid();\r\n\r\n                holder = null;\r\n                helper = null;\r\n            }\r\n        },\r\n\r\n        setup: function() {\r\n            var me = this, \r\n                vector = me.vector(),\r\n                paper = vector.paper(),\r\n                options = {};\r\n\r\n            if (me.plugin) {\r\n                return;\r\n            }\r\n\r\n            if (paper.utils.scroller) {\r\n                // options.autoScroll = {\r\n                //     container: paper.utils.scroller.node()\r\n                // };\r\n            }\r\n\r\n            _.extend(options, {\r\n                manualStart: true,\r\n                onstart: _.bind(me.onDragStart, me),\r\n                onmove: _.bind(me.onDragMove, me),\r\n                onend: _.bind(me.onDragEnd, me)\r\n            });\r\n\r\n            var vendor = vector.interactable().vendor();\r\n            \r\n            vendor.draggable(options);\r\n            vendor.styleCursor(false);\r\n\r\n            me.cached.origin   = vendor.origin();\r\n            me.cached.snapping = [];\r\n            \r\n            vendor.on('down', function(e){\r\n                e.preventDefault();\r\n            });\r\n\r\n            if (me.props.single) {\r\n                vendor.on('move', _.bind(me.onPointerMove, me, _, vector));    \r\n            }\r\n            \r\n            var matrix = vector.matrix(true),\r\n                rotate = matrix.rotate(),\r\n                scale  = matrix.scale();\r\n\r\n            me.rotate(rotate.deg);\r\n            me.scale(scale.x, scale.y);\r\n            \r\n            if (me.props.grid) {\r\n                me.snap({\r\n                    mode: 'grid',\r\n                    x: me.props.grid[0],\r\n                    y: me.props.grid[1]\r\n                });\r\n            }\r\n        },\r\n\r\n        enable: function() {\r\n            this.props.enabled = true;\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.enabled = false;\r\n        },\r\n\r\n        ghost: function(ghost) {\r\n            if (ghost === undefined) {\r\n                return this.props.ghost;\r\n            }\r\n            this.props.ghost = ghost;\r\n            return this;\r\n        },\r\n\r\n        render: function() {\r\n            var me = this, vector = me.vector();\r\n\r\n            if ( ! me.props.rendered) {\r\n                me.props.rendered = true;\r\n                me.holder().render(vector.parent());\r\n            }\r\n\r\n            if (me.props.ghost) {\r\n                me.redraw();\r\n            }   \r\n            \r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.holder().elem.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            this.props.suspended = false;\r\n\r\n            if ( ! this.props.rendered) {\r\n                this.render();\r\n            } else {\r\n                this.vector().parent().elem.append(this.holder().elem);\r\n                this.redraw();\r\n            }\r\n        },\r\n\r\n        redraw: function() {\r\n            var vector = this.vector(),\r\n                helper = this.helper();\r\n\r\n            if (helper) {\r\n                var vbox = vector.bbox().toJson(),\r\n                    hbox = helper.bbox().toJson();\r\n\r\n                var dx = vbox.x - hbox.x,\r\n                    dy = vbox.y - hbox.y;\r\n\r\n                helper.translate(dx, dy).commit();\r\n\r\n                helper.attr({\r\n                    width: vbox.width,\r\n                    height: vbox.height\r\n                });\r\n            }\r\n        },\r\n\r\n        rotate: function(deg) {\r\n            var rad = Graph.util.rad(deg);\r\n            this.rotation.deg = deg;\r\n            this.rotation.rad = rad;\r\n            this.rotation.sin = Math.sin(rad);\r\n            this.rotation.cos = Math.cos(rad);\r\n        },\r\n\r\n        scale: function(sx, sy) {\r\n            sy = _.defaultTo(sy, sx);\r\n            this.scaling.x = sx;\r\n            this.scaling.y = sy;\r\n        },\r\n\r\n        origin: function(origin) {\r\n            if (origin === undefined) {\r\n                return this.cached.origin;\r\n            }\r\n\r\n            this.cached.origin = origin;\r\n\r\n            var vendor = this.vector().interactable().vendor();\r\n\r\n            if (vendor) {\r\n                vendor.origin(origin);\r\n            }\r\n        },\r\n\r\n        snap: function(snap, end) {\r\n\r\n            if (snap === undefined) {\r\n                return this.cached.snapping;\r\n            }\r\n\r\n            if (end === undefined) {\r\n                end = false;\r\n            }\r\n\r\n            var me = this, snaps = [];\r\n\r\n            // save original request\r\n            this.cached.snapping = snap;\r\n\r\n            if (_.isArray(snap)) {\r\n                _.forEach(snap, function(s){\r\n                    snaps.push(fixsnap(s));\r\n                });\r\n            } else {\r\n                snaps.push(fixsnap(snap));\r\n            }\r\n\r\n            var vendor = this.vector().interactable().vendor();\r\n\r\n            if (vendor) {\r\n                vendor.setOptions('snap', {\r\n                    targets: snaps,\r\n                    endOnly: end\r\n                });\r\n            }\r\n\r\n            // if (this.plugin) {\r\n            //     this.plugin.setOptions('snap', {\r\n            //         targets: snaps\r\n            //     });\r\n            // }\r\n\r\n            /////////\r\n            \r\n            function fixsnap(snap) {\r\n                \r\n                if (_.isFunction(snap)) {\r\n                    return snap;\r\n                }\r\n                \r\n                snap.mode = _.defaultTo(snap.mode, 'anchor');\r\n                \r\n                if (snap.mode == 'grid') {\r\n                    if (me.props.axis == 'x') {\r\n                        snap.y = 0;\r\n                    } else if (me.props.axis == 'y') {\r\n                        snap.x = 0;\r\n                    }\r\n                    snap = interact.createSnapGrid({x: snap.x, y: snap.y});\r\n                } else {\r\n                    snap.range = _.defaultTo(snap.range, 20);\r\n                }\r\n                return snap;\r\n            }\r\n        },\r\n\r\n        resetSnap: function() {\r\n            this.snaps = [];\r\n\r\n            this.snap({\r\n                mode: 'grid',\r\n                x: this.props.grid[0],\r\n                y: this.props.grid[1]\r\n            });\r\n        },\r\n\r\n        bound: function(bound) {\r\n            /*if ( ! this.plugin) {\r\n                return;\r\n            }\r\n\r\n            if (_.isBoolean(bound) && bound === false) {\r\n                this.props.bound = false;\r\n                this.plugin.setOptions('restrict', null);\r\n                return;\r\n            }\r\n\r\n            bound = _.extend({\r\n                top: Infinity,\r\n                right: Infinity,\r\n                bottom: Infinity,\r\n                left: Infinity\r\n            }, bound || {});\r\n            \r\n            this.props.bound = _.extend({}, bound);\r\n\r\n            this.plugin.setOptions('restrict', {\r\n                restriction: bound\r\n            });\r\n\r\n            return;*/\r\n        },\r\n\r\n        onVectorRender: function() {\r\n            this.setup();\r\n        },\r\n\r\n        onPointerMove: function(e, vector) {\r\n            var i = e.interaction;\r\n\r\n            if (this.props.enabled) {\r\n                if (i.pointerIsDown && ! i.interacting()) {\r\n                    var paper = vector.paper(),\r\n                        node = vector.node(),\r\n                        action = {name: 'drag'};\r\n\r\n                    // -- workaround for a bug in v1.2.6 of interact.js\r\n                    i.prepared.name = action.name;\r\n                    i.setEventXY(i.startCoords, i.pointers);\r\n\r\n                    if (e.currentTarget === node) {\r\n                        if (paper) {\r\n                            var state = paper.state();\r\n                            \r\n                            if (state == 'collecting') {\r\n                                if (vector.elem.belong('graph-resizer')) {\r\n                                    paper.tool().activate('panzoom');    \r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            } else if (state == 'linking') {\r\n                                return;\r\n                            }\r\n                        }\r\n                        \r\n                        if (this.props.ghost) {\r\n                            if (this.props.suspended) {\r\n                                this.resume();\r\n                            }\r\n                            i.start(action, e.interactable, this.helper().node());\r\n                        } else {\r\n                            i.start(action, e.interactable, node);\r\n                        }\r\n\r\n                    }\r\n                }    \r\n            }\r\n\r\n            e.preventDefault();\r\n\r\n        },\r\n\r\n        onDragStart: function(e) {\r\n            var vector = this.vector(), \r\n                paper = vector.paper(),\r\n                helper = this.helper();\r\n\r\n            vector.addClass('dragging');\r\n            paper.cursor(this.props.cursor);\r\n\r\n            this.trans.vector = vector;\r\n            this.trans.paper = paper;\r\n            this.trans.helper = helper;\r\n\r\n            this.trans.dx = 0;\r\n            this.trans.dy = 0;\r\n\r\n            var edata = {\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n                dx: 0,\r\n                dy: 0,\r\n                ghost: this.props.ghost\r\n            };\r\n\r\n            this.fire('dragstart', edata);\r\n        },\r\n\r\n        onDragMove: function(e) {\r\n            \r\n            var trans = this.trans,\r\n                paper = trans.paper,\r\n                vector = trans.vector,\r\n                helper = trans.helper,\r\n                axs = this.props.axis,\r\n                deg = this.rotation.deg,\r\n                sin = this.rotation.sin,\r\n                cos = this.rotation.cos,\r\n                scaleX = this.scaling.x,\r\n                scaleY = this.scaling.y;\r\n\r\n            // check current scaling\r\n            var scaling = vector.matrix(true).scale();\r\n            \r\n            if (scaling.x !== scaleX || scaling.y !== scaleY) {\r\n                this.scale(scaling.x, scaling.y);\r\n                scaleX = scaling.x;\r\n                scaleY = scaling.y;\r\n            }\r\n            \r\n            var edx = _.defaultTo(e.dx, 0),\r\n                edy = _.defaultTo(e.dy, 0);\r\n            \r\n            var dx, dy, hx, hy, tx, ty;\r\n            \r\n            dx = dy = hx = hy = tx = ty = 0;\r\n                \r\n            edx /= scaleX;\r\n            edy /= scaleY;\r\n\r\n            if (axs == 'x') {\r\n                dx = hx = edx;\r\n                dy = hy = 0;\r\n\r\n                tx = edx *  cos + 0 * sin;\r\n                ty = edx * -sin + 0 * cos;\r\n            } else if (axs == 'y') {\r\n                dx = hx = 0;\r\n                dy = hy = edy;\r\n\r\n                tx = 0 *  cos + edy * sin;\r\n                ty = 0 * -sin + edy * cos;\r\n            } else {\r\n                hx = edx;\r\n                hy = edy;\r\n                \r\n                dx = tx = edx *  cos + edy * sin;\r\n                dy = ty = edx * -sin + edy * cos;  \r\n            }\r\n\r\n            this.trans.dx += tx;\r\n            this.trans.dy += ty;\r\n            \r\n            var pageX = _.defaultTo(e.pageX, e.x0),\r\n                pageX = _.defaultTo(e.pageY, e.y0);\r\n\r\n            pageX /= scaleX;\r\n            pageX /= scaleY;\r\n            \r\n            var event = {\r\n                pageX: pageX,\r\n                pageY: pageX,\r\n                \r\n                ex: edx,\r\n                ey: edy,\r\n\r\n                dx: dx,\r\n                dy: dy,\r\n                \r\n                hx: hx,\r\n                hy: hy,\r\n                \r\n                ox: hx,\r\n                oy: hy,\r\n                \r\n                ghost: this.props.ghost\r\n            };\r\n\r\n            this.fire('dragmove', event);\r\n            \r\n            if (helper) {\r\n                helper.translate(event.hx, event.hy).commit();\r\n            } else {\r\n                vector.translate(event.dx, event.dy).commit();\r\n            }\r\n        },\r\n\r\n        onDragEnd: function(e) {\r\n            var trans = this.trans,\r\n                paper = trans.paper,\r\n                vector = trans.vector,\r\n                helper = trans.helper,\r\n                dx = trans.dx,\r\n                dy = trans.dy;\r\n\r\n            if (helper) {\r\n                vector.translate(dx, dy).commit();\r\n                this.redraw();\r\n                this.suspend();\r\n            }\r\n\r\n            vector.removeClass('dragging');\r\n            paper.cursor('default');\r\n\r\n            var edata = {\r\n                dx: dx,\r\n                dy: dy,\r\n                ghost: this.props.ghost\r\n            };\r\n            \r\n            this.fire('dragend', edata);\r\n            \r\n            this.trans.vector = null;\r\n            this.trans.paper = null;\r\n            this.trans.helper = null;\r\n            this.trans.dx = 0;\r\n            this.trans.dy = 0;\r\n\r\n        },\r\n\r\n        destroy: function() {\r\n            var me = this;\r\n\r\n            if (me.components.helper) {\r\n                me.helper().remove();\r\n            }\r\n\r\n            me.components.helper = null;\r\n\r\n            if (me.components.holder) {\r\n                me.holder().remove();\r\n            }\r\n\r\n            me.components.holder = null;\r\n            me.listeners = {};\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Dropper = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            overlap: 'center',\r\n            accept: '.graph-draggable'\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var me = this;\r\n\r\n            _.assign(me.props, options || {});\r\n            vector.addClass('graph-dropzone').removeClass('graph-draggable');\r\n\r\n            me.props.vector = vector.guid();    \r\n            \r\n            vector.on({\r\n                render: _.bind(me.onVectorRender, me)\r\n            });\r\n\r\n            if (vector.props.rendered) {\r\n                me.setup();\r\n            }\r\n        },\r\n\r\n        setup: function() {\r\n            var me = this;\r\n\r\n            if (me.plugin) {\r\n                return;\r\n            }\r\n\r\n            var config = _.extend({}, me.props, {\r\n                checker: _.bind(me.onDropValidate, me),\r\n\r\n                ondropactivate: _.bind(me.onDropActivate, me),\r\n                ondropdeactivate: _.bind(me.onDropDeactivate, me),\r\n                ondragenter: _.bind(me.onDragEnter, me),\r\n                ondragleave: _.bind(me.onDragLeave, me),\r\n                ondrop: _.bind(me.onDrop, me)\r\n            });\r\n\r\n            me.plugin = me.vector.interactable().dropzone(config);\r\n        },\r\n\r\n        onDropValidate: function( edrop, edrag, dropped, dropzone, dropel, draggable, dragel ) {\r\n            return dropped;\r\n            /*if (dropped) {\r\n                if (this.config.validate) {\r\n                    var args = _.toArray(arguments);\r\n                    dropped = this.config.validate.apply(this, args);\r\n                }    \r\n            }\r\n            \r\n            return dropped;*/\r\n        },\r\n\r\n        onVectorRender: function() {\r\n            this.setup();\r\n        },\r\n\r\n        onDropActivate: function(e) {\r\n            this.vector().addClass('drop-activate');\r\n        },\r\n\r\n        onDropDeactivate: function(e) {\r\n            this.vector().removeClass('drop-activate');\r\n        },\r\n\r\n        onDragEnter: function(e) {\r\n            this.vector().removeClass('drop-activate').addClass('drop-enter');\r\n            e.type = 'dropenter';\r\n            this.fire(e);\r\n        },\r\n\r\n        onDragLeave: function(e) {\r\n            this.vector().removeClass('drop-enter').addClass('drop-activate');\r\n            e.type = 'dropleave';\r\n            this.fire(e);\r\n        },\r\n\r\n        onDrop: function(e) {\r\n            this.vector().removeClass('drop-activate drop-enter');\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Sorter = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            height: 0,\r\n            width: 0,\r\n            suspended: true,\r\n            enabled: true,\r\n            offsetTop: 0,\r\n            offsetLeft: 0\r\n        },\r\n\r\n        sortables: [],\r\n        origins: [],\r\n        guests: [],\r\n        batch: [],\r\n        \r\n        trans: {\r\n            sorting: false,\r\n            valid: false,\r\n            drag: null,\r\n            drop: null\r\n        },\r\n\r\n        components: {\r\n            helper: null\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            var me = this;\r\n\r\n            me.vector = vector;\r\n            me.vector.addClass('graph-sorter');\r\n\r\n            me.components.helper = new Graph.svg.Rect(0, 0, 0, 0);\r\n            me.components.helper.addClass('graph-sorter-helper');\r\n            me.components.helper.removeClass('graph-elem graph-elem-rect');\r\n            me.components.helper.props.selectable = false;\r\n            me.components.helper.render(me.vector);\r\n            me.components.helper.$sorter = me;\r\n            \r\n            me.sortables.push(me.components.helper);\r\n\r\n            me.vector.on({\r\n                render: _.bind(me.onVectorRender, me),\r\n                appendchild: _.bind(me.onItemAdded, me),\r\n                prependchild: _.bind(me.onItemAdded, me)\r\n            });\r\n\r\n            if (me.vector.props.rendered) {\r\n                me.setup();\r\n            }\r\n        },\r\n\r\n        // setup plugin\r\n        setup: function() {\r\n            var me = this,\r\n                vector = me.vector,\r\n                paper = vector.paper(),\r\n                context = vector.node();\r\n\r\n            if (me.plugin) {\r\n                return;\r\n            }\r\n            \r\n            me.plugin = interact('.graph-sortable', {context: context}).dropzone({\r\n                accept: '.graph-sortable',\r\n                // overlap: 'center',\r\n                overlap: .1,\r\n                // checker: _.bind(me.snapping, me),\r\n                ondropactivate: _.bind(me.onSortActivate, me),\r\n                ondropdeactivate: _.bind(me.onSortDeactivate, me),\r\n                ondragenter: _.bind(me.onSortEnter, me),\r\n                ondragleave: _.bind(me.onSortLeave, me),\r\n                ondrop: _.bind(me.onSort, me)\r\n            });\r\n\r\n            me.plugin.styleCursor(false);\r\n\r\n            if (paper.plugins.collector) {\r\n                paper.plugins.collector.on({\r\n                    afterdrag: function(e) {\r\n                        var origin = e.origin;\r\n                        if (_.indexOf(me.sortables, origin) > -1) {\r\n                           me.props.offsetTop += e.dy;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        snapping: function(drage, pointe, dropped, dropzone, dropel, draggable, dragel) {\r\n            return dropped;\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n\r\n            if (this.components.helper) {\r\n                this.components.helper.focus(false);\r\n                this.components.helper.removeClass('visible');\r\n            }\r\n        },\r\n\r\n        resume: function() {\r\n            var me = this;\r\n\r\n            me.props.suspended = false;\r\n\r\n            if (me.components.helper) {\r\n                me.components.helper.addClass('visible');\r\n            }\r\n        },\r\n\r\n        redraw: function() {\r\n            var me = this;\r\n\r\n            if (me.trans.valid) {\r\n\r\n                if (me.props.suspended) {\r\n                    me.resume();    \r\n                }\r\n\r\n                me.swap(me.components.helper, me.trans.drop);\r\n                me.components.helper.focus();\r\n            }\r\n        },\r\n\r\n        commit: function() {\r\n            var me = this;\r\n\r\n            _.forEach(me.guests, function(g){\r\n                me.vector.elem.append(g.node());\r\n            });\r\n\r\n            _.forEach(me.sortables, function(s){\r\n                s.$master  = false;\r\n                s.$sorter  = null;\r\n                s.$sorting = false;\r\n            });\r\n\r\n            me.components.helper.attr('height', 0);\r\n            \r\n            if (me.batch.length) {\r\n                me.permute();\r\n            } else {\r\n                me.swap(me.trans.drag, me.components.helper);\r\n            }\r\n\r\n            _.forEach(me.origins, function(o){\r\n                o.components.helper.attr('height', 0);\r\n                o.reset();\r\n                o.arrange();\r\n                o.suspend();\r\n            });\r\n\r\n            me.reset();\r\n            me.suspend();\r\n            me.resumeBatch(me.batch);\r\n        },\r\n\r\n        revert: function() {\r\n            var me = this;\r\n            \r\n            _.forEach(me.guests, function(g){\r\n                me.vector.elem.append(g.node());\r\n            });\r\n\r\n            _.forEach(me.sortables, function(s){\r\n                s.$sorting = false;\r\n                s.$sorter  = null;\r\n                s.$master  = false;\r\n            });\r\n\r\n            _.forEach(me.origins, function(o){\r\n                o.components.helper.attr('height', 0);\r\n                o.reset();\r\n                o.arrange();\r\n                o.suspend();\r\n            });\r\n\r\n            me.components.helper.attr('height', 0);\r\n            me.reset();\r\n            me.arrange();\r\n            me.suspend();\r\n            me.resumeBatch(me.batch);\r\n        },  \r\n\r\n        permute: function() {\r\n            var me = this,\r\n                target = _.indexOf(me.sortables, me.components.helper),\r\n                stacks = _.map(me.sortables, function(s, i){ return i; });\r\n\r\n            me.batch.sort(function(a, b){\r\n                var ta = a.offset().top,\r\n                    tb = b.offset().top;\r\n                return ta === tb ? 0 : (ta < tb ? -1 : 1);\r\n            });\r\n\r\n            orders = _.map(me.batch, function(b){\r\n                return _.indexOf(me.sortables, b);\r\n            });\r\n\r\n            var swaps  = _.difference(stacks, orders),\r\n                repos = _.indexOf(swaps, target);\r\n\r\n            _.insert(swaps, repos, orders);\r\n\r\n            me.sortables = _.permute(me.sortables, swaps);\r\n            me.arrange();\r\n        },\r\n\r\n        swap: function(source, target) {\r\n            var me = this,\r\n                from = _.indexOf(me.sortables, source),\r\n                to = _.indexOf(me.sortables, target);\r\n\r\n            _.move(me.sortables, from, to);\r\n            me.arrange();\r\n        },\r\n\r\n        arrange: function() {\r\n            var me = this;\r\n\r\n            me.props.height = 0;\r\n            me.props.width  = 0;\r\n\r\n            _.forEach(me.sortables, function(s){\r\n                if ( ! s.$sorting) {\r\n                    var sbox = s.bbox().toJson(),\r\n                        dy = me.props.height- sbox.y + me.props.offsetTop;\r\n\r\n                    s.translate(0, dy).commit();\r\n                    me.props.height += sbox.height;\r\n\r\n                    if (sbox.width > me.props.width) {\r\n                        me.props.width = sbox.width;\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        suspendBatch: function(batch, predicate) {\r\n            _.forEach(batch, function(b){\r\n                b.cascade(function(c){\r\n                    if (c.props.selected && c.resizer) {\r\n                        c.resizer.suspend();\r\n                    }\r\n                });\r\n\r\n                if (predicate) {\r\n                    predicate.call(b, b);\r\n                }\r\n            });\r\n        },\r\n\r\n        resumeBatch: function(batch) {\r\n            var me = this, timer;\r\n            timer = _.delay(function(){\r\n                clearTimeout(timer);\r\n                _.forEach(batch, function(b){\r\n                    b.cascade(function(c){\r\n                        if (c.props.selected && c.resizer) {\r\n                            c.resizer.resume();\r\n                        }\r\n                    });\r\n                })\r\n            }, 0);\r\n        },\r\n\r\n        reset: function() {\r\n            this.guests = [];\r\n            this.origins = [];\r\n            this.trans.drag = null;\r\n            this.trans.sorting = false;\r\n            this.trans.valid = false;\r\n            this.trans.drop = null;\r\n        },\r\n\r\n        enroll: function(item) {\r\n            var me = this, sorter;\r\n\r\n            if (_.indexOf(me.sortables, item) === -1)  {\r\n                sorter = item.$sorter;\r\n                sorter.release(item);\r\n\r\n                if (_.indexOf(me.origins, sorter) === -1) {\r\n                    me.origins.push(sorter);\r\n                }\r\n\r\n                item.$sorter  = me;\r\n\r\n                if (item.$master) {\r\n                    me.trans.drag = item;\r\n                }\r\n                \r\n                item.off('.sorter');\r\n                item.tree.parent = me.vector;\r\n                me.vector.children().push(item);\r\n                me.guests.push(item);    \r\n            }\r\n            \r\n        },\r\n\r\n        release: function(item) {\r\n            var me = this, \r\n                sorter = item.$sorter || me;\r\n\r\n            var offset;\r\n\r\n            item.off('.sorter');\r\n            item.$sorter = null;\r\n            item.tree.parent = null;\r\n\r\n            if (item.$master) {\r\n                sorter.trans.drag = null;\r\n            }\r\n\r\n            sorter.vector.children().pull(item);\r\n            \r\n            if ((offset = _.indexOf(sorter.sortables, item)) > -1) {\r\n                sorter.sortables.splice(offset, 1);\r\n            }\r\n\r\n            if ((offset = _.indexOf(sorter.batch, item)) > -1) {\r\n                sorter.batch.splice(offset, 1);\r\n            }\r\n\r\n            if ((offset = _.indexOf(sorter.guests, item)) > -1) {\r\n                sorter.guests.splice(offset, 1);\r\n            }\r\n        },\r\n\r\n        onVectorRender: function() {\r\n            this.setup();\r\n        },\r\n\r\n        onItemAdded: function(item) {\r\n            var me = this, delay;\r\n\r\n            if (_.indexOf(me.sortables, item) > -1) {\r\n                return;\r\n            }\r\n\r\n            if (item.hasClass('graph-sorter-helper')) {\r\n                return;\r\n            }\r\n\r\n            item.$sorter = this;\r\n            item.addClass('graph-sortable');\r\n            \r\n            item.off('.sorter');\r\n\r\n            item.on('render.sorter',    _.bind(me.onItemRender, me));\r\n            item.on('resize.sorter',    _.bind(me.onItemResize, me));\r\n            item.on('dragstart.sorter', _.bind(me.onItemDragStart, me));\r\n            item.on('dragend.sorter',   _.bind(me.onItemDragEnd, me));\r\n            item.on('collect.sorter',   _.bind(me.onItemCollect, me));\r\n            item.on('decollect.sorter', _.bind(me.onItemDecollect, me));\r\n\r\n            me.sortables.push(item);\r\n\r\n            if (item.props.rendered && ! item.$sorting) {\r\n                delay = _.delay(function(){\r\n                    clearTimeout(delay);\r\n                    me.arrange();\r\n                }, 0);\r\n            }\r\n        },\r\n\r\n        onItemRender: function(e) {\r\n            var me = this, delay;\r\n            delay = _.delay(function(){\r\n                clearTimeout(delay);\r\n                me.arrange();\r\n            }, 0);\r\n        },\r\n\r\n        onItemResize: function(e) {\r\n            var item = e.publisher,\r\n                sorter = item.$sorter || this, defer;\r\n\r\n            suppress(item, true);\r\n\r\n            _.forEach(sorter.sortables, function(s){\r\n                if (s !== item) {\r\n                    e.type = 'resize.sortable';\r\n                    s.fire(e);\r\n                }\r\n            });\r\n\r\n            defer = _.defer(function(item){\r\n                clearTimeout(defer);\r\n                sorter.arrange();\r\n                suppress(item, false);\r\n            }, item);\r\n\r\n            /////////\r\n            \r\n            function suppress(item, state) {\r\n                item.cascade(function(c){\r\n                    if (c.props.selected && c.resizer) {\r\n                        var method = state ? 'suspend' : 'resume';\r\n                        c.resizer[method].call(c.resizer);\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        onItemDragStart: function(e) {\r\n            var me = this, \r\n                item = e.publisher,\r\n                bsize = me.batch.length;\r\n\r\n            var bbox;\r\n            \r\n            me.props.enabled = bsize && (bsize + 1) === me.sortables.length ? false : true;\r\n\r\n            if ( ! me.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            item.$sorter = me;\r\n            item.$master = true;\r\n            item.$sorting = true;\r\n\r\n            me.trans.drag = item;\r\n            me.trans.sorting = true;\r\n\r\n            bbox = item.bbox().toJson();  \r\n            width = me.props.width;\r\n            height = bbox.height;\r\n\r\n            if (bsize) {\r\n                if ( ! item.$collector) {\r\n                    me.batch.pop().$collector.clearCollection();\r\n                    me.batch = [];\r\n                } else {\r\n                    height = 0;\r\n                    me.suspendBatch(me.batch, function(b){\r\n                        var box = b.bbox().toJson();\r\n                        height += box.height;\r\n\r\n                        b.$sorter = me;\r\n                        b.$sorting = true;\r\n                    });\r\n                }\r\n            }\r\n\r\n            me.components.helper.attr({\r\n                width: width,\r\n                height: height\r\n            });   \r\n        },\r\n\r\n        onItemDragEnd: function(e) {\r\n            var me = this;\r\n\r\n            if ( ! me.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            if (me.trans.sorting) {\r\n                if ( ! me.trans.valid) {\r\n                    me.revert();\r\n                }\r\n            } else {\r\n                me.revert();\r\n            }\r\n        },\r\n\r\n        onItemCollect: function(e) {\r\n            var item = e.publisher,\r\n                sorter = item.$sorter || this;\r\n\r\n            sorter.batch.push(item);\r\n        },\r\n\r\n        onItemDecollect: function(e, item) {\r\n            var item = e.publisher,\r\n                sorter = item.$sorter || this, offset;\r\n\r\n            offset = _.indexOf(sorter.batch, item);\r\n            \r\n            if (offset > -1) {\r\n                sorter.batch.splice(offset, 1);\r\n            }\r\n        },\r\n\r\n        onSortActivate: function() {},\r\n\r\n        onSortDeactivate: function() {},\r\n\r\n        onSortEnter: function(e) {\r\n            var me = this;\r\n            var drag, drop, bbox, width, height;\r\n            \r\n            if ( ! me.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            drag = Graph.registry.vector.get(e.relatedTarget);\r\n            drop = Graph.registry.vector.get(e.target);\r\n\r\n            if (drag.$collector) {\r\n                \r\n                height = 0;\r\n                width  = me.props.width;\r\n\r\n                _.forEach(drag.$collector.collection, function(v){\r\n                    var box;\r\n\r\n                    if (v.$sorter) {\r\n\r\n                        if (v.$sorter !== me) {\r\n                            me.enroll(v);\r\n                            me.batch.push(v);\r\n                        }\r\n                        \r\n                        box = v.bbox().toJson();\r\n                        height += box.height;\r\n\r\n                        if (box.width > width) {\r\n                            width = box.width;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                me.components.helper.attr({\r\n                    width: width,\r\n                    height: height\r\n                });\r\n            } else {\r\n                if (drag.$sorter) {\r\n                    if (drag.$sorter !== me) {\r\n                        if (me.batch.length) {\r\n                            me.suspendBatch(me.batch);\r\n                        }\r\n\r\n                        me.enroll(drag);\r\n\r\n                        bbox = drag.bbox().toJson();\r\n                        height = bbox.height;\r\n                        width = me.props.width;\r\n\r\n                        me.components.helper.attr({\r\n                            width: width,\r\n                            height: height    \r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            me.trans.drop  = drop;\r\n            me.trans.valid = true;\r\n\r\n            me.redraw();\r\n        },\r\n\r\n        onSortLeave: function() {\r\n            var me = this;\r\n\r\n            if ( ! me.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            me.trans.drop = null;\r\n            me.trans.valid = false;\r\n            me.suspend();\r\n        },\r\n\r\n        onSort: function() {\r\n            var me = this;\r\n\r\n            if ( ! me.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            me.commit();\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n    \r\n    var CLS_CONNECT_VALID = 'connect-valid',\r\n        CLS_CONNECT_INVALID = 'connect-invalid',\r\n        CLS_CONNECT_HOVER = 'connect-hover';\r\n    \r\n    Graph.plugin.Network = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            shield: null,\r\n            vector: null,\r\n            wiring: 'h:h'\r\n        },\r\n\r\n        links: [],\r\n        \r\n        linking: {\r\n            valid: false,\r\n            router: null,\r\n            source: null,\r\n            target: null,\r\n            link: null,\r\n            pole: null\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var me = this, guid = vector.guid();\r\n            \r\n            options = options || {};\r\n\r\n            if (options.shield) {\r\n                options.shield = options.shield.guid();\r\n            } else {\r\n                options.shield = guid;\r\n            }\r\n\r\n            _.assign(me.props, options);\r\n\r\n            me.props.vector = guid;\r\n\r\n            vector.addClass('graph-connectable');\r\n            \r\n            // setup link droppable\r\n            \r\n            var vendor = vector.interactable().vendor();\r\n            \r\n            vendor.dropzone({\r\n                accept: _.format('.{0}, .{1}', Graph.string.CLS_LINK_HEAD, Graph.string.CLS_LINK_TAIL),\r\n                overlap: .2\r\n            })\r\n            .on('dropdeactivate', function(e){\r\n                var v = Graph.registry.vector.get(e.target);\r\n                \r\n                if (v) {\r\n                    v.removeClass([CLS_CONNECT_VALID, CLS_CONNECT_INVALID, CLS_CONNECT_HOVER]);\r\n                }\r\n                me.invalidateTrans();\r\n            })\r\n            .on('dropactivate', function(e){\r\n                var v = Graph.registry.vector.get(e.target);\r\n                \r\n                if (v) {\r\n                    v.addClass(CLS_CONNECT_HOVER);\r\n                }\r\n                \r\n                me.invalidateTrans();\r\n            })\r\n            .on('dragenter', function(e){\r\n                var link = Graph.registry.link.get(e.relatedTarget);\r\n\r\n                if (link) {\r\n                    var pole = Graph.$(e.relatedTarget).data('pole');\r\n                    var valid, source, target;\r\n\r\n                    if (pole == 'head') {\r\n                        source = link.router.source();\r\n                        target = vector;\r\n                    } else {\r\n                        source = vector;\r\n                        target = link.router.target();\r\n                    }\r\n                    \r\n                    valid  = source.connectable().canConnect(target.connectable(), link);\r\n                    \r\n                    if (valid) {\r\n                        vector.removeClass(CLS_CONNECT_INVALID);\r\n                        vector.addClass(CLS_CONNECT_VALID);\r\n                    } else {\r\n                        vector.removeClass(CLS_CONNECT_VALID);\r\n                        vector.addClass(CLS_CONNECT_INVALID);\r\n                    }\r\n                    \r\n                    _.assign(me.linking, {\r\n                        valid: valid,\r\n                        router: link.router,\r\n                        source: source,\r\n                        target: target,\r\n                        pole: pole\r\n                    });\r\n\r\n                    link.router.updateTrans('CONNECT', {\r\n                        valid: valid,\r\n                        source: source,\r\n                        target: target\r\n                    });\r\n                }\r\n            })\r\n            .on('dragleave', function(e){\r\n                var v = Graph.registry.vector.get(e.target);\r\n                if (v) {\r\n                    v.removeClass([CLS_CONNECT_VALID, CLS_CONNECT_INVALID]);\r\n                }\r\n                \r\n                me.linking.valid = false;\r\n                \r\n                if (me.linking.pole == 'head') {\r\n                    me.linking.router.updateTrans('CONNECT', {\r\n                        valid: false,\r\n                        target: null\r\n                    });    \r\n                } else {\r\n                    me.linking.router.updateTrans('CONNECT', {\r\n                        valid: false,\r\n                        source: null\r\n                    });\r\n                }\r\n                \r\n            })\r\n            .on('drop', function(e){\r\n                if (me.linking.valid) {\r\n                    if (me.linking.pole == 'head') {\r\n                        me.linking.router.updateTrans('CONNECT', {\r\n                            target: vector\r\n                        });\r\n                    } else {\r\n                        me.linking.router.updateTrans('CONNECT', {\r\n                            source: vector\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        \r\n        invalidateTrans: function() {\r\n            for (var name in this.linking) {\r\n                this.linking[name] = null;\r\n            }\r\n        },  \r\n        \r\n        wiring: function() {\r\n            return this.props.wiring;\r\n        },\r\n\r\n        treshold: function() {\r\n            var wiring = this.props.wiring;\r\n\r\n            switch(wiring) {\r\n                case 'h:h':\r\n                case 'v:v':\r\n                    return 20;\r\n                case 'h:v':\r\n                case 'v:h':\r\n                    return -10;\r\n            }\r\n\r\n            return 0;\r\n        },\r\n        \r\n        direction: function (network) {\r\n            var orient = this.orientation(network);\r\n            \r\n            switch(orient) {\r\n                case 'intersect':\r\n                    return null;\r\n                case 'top':\r\n                case 'bottom':\r\n                    return 'v:v';\r\n                case 'left':\r\n                case 'right':\r\n                    return 'h:h';\r\n                default:\r\n                    return this.props.wiring;\r\n            }\r\n        },\r\n        \r\n        orientation: function(network) {\r\n            var srcbox = this.bbox().toJson(),\r\n                refbox = network.bbox().toJson(),\r\n                orient = Graph.util.boxOrientation(srcbox, refbox, this.treshold());\r\n            \r\n            srcbox = refbox = null;\r\n            \r\n            return orient;\r\n        },\r\n        \r\n        isSource: function(link) {\r\n            return link.source().guid() == this.vector().guid();\r\n        },\r\n        \r\n        isTarget: function(link) {\r\n            return link.target().guid() == this.vector().guid();\r\n        },\r\n        \r\n        ///////// RULES /////////\r\n        \r\n        /**\r\n         * Can connect to target network\r\n         */\r\n        canConnect: function(network, link) {\r\n            var a = this.vector().guid(),\r\n                b = network.vector().guid();\r\n            \r\n            if (a != b) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.History = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            limit: 1,\r\n            index: 0\r\n        },\r\n\r\n        items: {},\r\n\r\n        constructor: function(vector) {\r\n            this.props.vector = vector.guid();\r\n        },\r\n\r\n        save: function(prop, data) {\r\n            var lim = this.props.limit, len;\r\n\r\n            if (len > lim) {\r\n                _.drop(this.items, len - lim);\r\n            }\r\n\r\n            this.items[prop] = this.items[prop] || [];\r\n\r\n            if ((len = this.items[prop].length) > lim - 1) {\r\n                this.items[prop].splice(0, len - lim);\r\n            }\r\n\r\n            this.items[prop].push(data);\r\n\r\n            console.log(this);\r\n        },\r\n\r\n        last: function(prop) {\r\n\r\n        },\r\n\r\n        go: function() {\r\n\r\n        },\r\n\r\n        back: function() {\r\n\r\n        },\r\n\r\n        next: function() {\r\n\r\n        },\r\n\r\n        clear: function() {\r\n\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Panzoom = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            panEnabled: false,\r\n            zoomEnabled: true,\r\n            showToolbox: true,\r\n            vector: null\r\n        },\r\n\r\n        caching: {\r\n            offset: {x: 0, y: 0}\r\n        },\r\n\r\n        scrolling: {\r\n            steps: 10\r\n        },\r\n\r\n        zooming: {\r\n            scale: 1,\r\n            zoom: 1,\r\n            origin: null,\r\n            range: {min: 0.2, max: 4}\r\n        },\r\n\r\n        components: {\r\n            toolbox: null\r\n        },\r\n\r\n        panning: {\r\n            start: {x: 0, y: 0},\r\n            moveHandler: null,\r\n            stopHandler: null\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            var me = this, vendor, viewport, scale, bound;\r\n\r\n            // validate vector\r\n            if ( ! vector.isPaper()) {\r\n                throw Graph.error('Panzoom only available for paper !');\r\n            }\r\n\r\n            viewport = vector.viewport();\r\n            scale    = Math.round(viewport.matrix().scale().x, 1000);\r\n            vendor   = vector.interactable().vendor();\r\n\r\n            _.assign(me.props, {\r\n                vector: vector.guid()\r\n            });\r\n\r\n            _.assign(me.zooming, {\r\n                scale: scale,\r\n                zoom: scale\r\n            });\r\n\r\n            me.initComponent(vector);\r\n\r\n            // use native engine\r\n            vendor.on('wheel', _.bind(me.onMouseWheel, me, _, vector, viewport));\r\n            vendor.on('down', _.bind(me.onPointerDown, me, _, vector, viewport));\r\n\r\n            if (vector.props.rendered) {\r\n                me.revalidate(vector);\r\n\r\n                if (me.props.showToolbox) {\r\n                    me.components.toolbox.appendTo(vector.container());\r\n                }\r\n            } else {\r\n                vector.on('render', function(){\r\n                    me.revalidate(vector);\r\n\r\n                    if (me.props.showToolbox) {\r\n                        me.components.toolbox.appendTo(vector.container());\r\n                    }\r\n                });\r\n            }\r\n\r\n            vendor = null;\r\n            vector = null;\r\n        },\r\n\r\n        initComponent: function(vector) {\r\n            var me = this;\r\n            var container, toolbox;\r\n\r\n            if (me.props.showToolbox) {\r\n                container = vector.container();\r\n\r\n                toolbox = me.components.toolbox = Graph.$('<div class=\"graph-zoom-toolbox\">');\r\n                toolbox.html(\r\n                    '<div>' + \r\n                        '<a data-tool=\"zoom-reset\" href=\"#\"><i class=\"ion-pinpoint\"></i></a>'+\r\n                        '<div class=\"splitter\"></div>'+\r\n                        '<a data-tool=\"zoom-in\" href=\"#\"><i class=\"ion-android-add\"></i></a>'+\r\n                        '<div class=\"splitter\"></div>'+\r\n                        '<a data-tool=\"zoom-out\" href=\"#\"><i class=\"ion-android-remove\"></i></a>'+\r\n                    '</div>'\r\n                );\r\n\r\n                toolbox.on('click', '[data-tool]', function(e){\r\n                    e.preventDefault();\r\n                    var tool = Graph.$(this).data('tool');\r\n                    switch(tool) {\r\n                        case 'zoom-reset':\r\n                            me.zoomReset();\r\n                            break;\r\n                        case 'zoom-in':\r\n                            me.zoomIn();\r\n                            break;\r\n                        case 'zoom-out':\r\n                            me.zoomOut();\r\n                            break;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        revalidate: function(vector) {\r\n            var bound = vector.node().getBoundingClientRect();\r\n\r\n            this.caching.offset = {\r\n                x: bound.left,\r\n                y: bound.top\r\n            };\r\n        },\r\n        \r\n        enable: function() {\r\n            var vector = this.vector();\r\n\r\n            this.props.panEnabled = true;\r\n            this.props.zoomEnabled = true;\r\n\r\n            vector.cursor('default');\r\n            vector.state('panning');\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.panEnabled = false;\r\n        },\r\n\r\n        zoomReset: function() {\r\n            var viewport = this.vector().viewport();\r\n            var matrix;\r\n\r\n            this.zooming.zoom = 1;\r\n            this.zooming.scale = 1;\r\n\r\n            viewport.reset();\r\n\r\n            matrix = Graph.matrix();\r\n            matrix.translate(.5, .5);\r\n\r\n            viewport.attr('transform', matrix.toString());\r\n            viewport.graph.matrix = matrix;\r\n        },\r\n\r\n        zoomIn: function() {\r\n            var paper = this.vector(),\r\n                viewport = paper.viewport(),\r\n                direction = 0.1,\r\n                origin = viewport.bbox().center(true);\r\n\r\n            this.zoom(paper, viewport, direction, origin);\r\n        },\r\n\r\n        zoomOut: function() {\r\n            var paper = this.vector(),\r\n                viewport = paper.viewport(),\r\n                direction = -0.1,\r\n                origin = viewport.bbox().center(true);\r\n\r\n            this.zoom(paper, viewport, direction, origin);\r\n        },\r\n\r\n        zoom: function(paper, viewport, direction, origin) {\r\n            var range = this.zooming.range,\r\n                currentZoom = this.zooming.zoom,\r\n                zoomType = direction > 0 ? 'in' : 'out',\r\n                factor = Math.pow(1 + Math.abs(direction), zoomType == 'in' ? 1 : -1),\r\n                zoom = (zoomRange(range, currentZoom * factor)),\r\n                matrix = viewport.matrix(),\r\n                currentScale = matrix.props.a,\r\n                scale = 1 / currentScale * zoom,\r\n                matrixScale = matrix.clone();\r\n\r\n            this.onBeforeZoom(paper);\r\n\r\n            matrixScale.scale(scale, scale, origin.x, origin.y);\r\n\r\n            viewport.attr('transform', matrixScale.toString());\r\n            viewport.graph.matrix = matrixScale;\r\n\r\n            this.zooming.zoom  = zoom;\r\n            this.zooming.scale = matrixScale.props.a;\r\n            \r\n            if (paper.state() == 'panning') {\r\n                paper.cursor(zoomType == 'in' ? 'zoom-in' : 'zoom-out');    \r\n            }\r\n\r\n            this.onZoom(paper);\r\n        },\r\n\r\n        scroll: function(paper, viewport, dx, dy) {\r\n            var matrix = viewport.matrix().clone(),\r\n                scale = this.zooming.scale;\r\n\r\n            this.onBeforeScroll(paper);\r\n\r\n            dx /= scale;\r\n            dy /= scale;\r\n            \r\n            matrix.translate(dx, dy);\r\n\r\n            viewport.attr('transform', matrix.toString());\r\n            viewport.graph.matrix = matrix;\r\n\r\n            if (this.zooming.origin) {\r\n                this.zooming.origin.x += dx;\r\n                this.zooming.origin.y += dy;\r\n            }\r\n\r\n            this.onScroll();\r\n        },\r\n\r\n        onMouseWheel: function(e, paper, viewport) {\r\n\r\n            e = Graph.event.fix(e);\r\n            e.preventDefault();\r\n\r\n            var vscroll = Graph.event.hasPrimaryModifier(e),\r\n                hscroll = Graph.event.hasSecondaryModifier(e),\r\n                event   = Graph.event.original(e);\r\n\r\n            var factor, delta, origin, offset, box;\r\n\r\n            if (vscroll || hscroll) {\r\n\r\n                if (Graph.isMac()) {\r\n                    factor = event.deltaMode === 0 ? 1.25 : 50;\r\n                } else {\r\n                    // factor = event.deltaMode === 0 ? 1/40 : 1/2;\r\n                    factor = event.deltaMode === 0 ? 1 : 20;\r\n                }\r\n\r\n                delta = {};\r\n\r\n                if (hscroll) {\r\n                    delta.dx = (factor * (event.deltaX || event.deltaY));\r\n                    delta.dy = 0;\r\n                } else {\r\n                    delta.dx = 0;\r\n                    delta.dy = (factor * event.deltaY);\r\n                }\r\n\r\n                this.scroll(paper, viewport, delta.dx, delta.dy);\r\n\r\n            } else {\r\n                factor = (event.deltaMode === 0 ? 1/40 : 1/2);\r\n                offset = this.caching.offset;\r\n\r\n                origin = {\r\n                    x: event.clientX - offset.x,\r\n                    y: event.clientY - offset.y    \r\n                };\r\n\r\n                this.zooming.origin = origin;\r\n\r\n                this.zoom(\r\n                    paper,\r\n                    viewport,\r\n                    // event.deltaY * factor / (-5), \r\n                    event.deltaY * factor / (-8), \r\n                    origin\r\n                );\r\n            }\r\n        }, \r\n\r\n        onPointerDown: function(e, paper, viewport, vendor) {\r\n            var target = Graph.$(e.target),\r\n                vector = Graph.registry.vector.get(target),\r\n                vendor = paper.interactable().vendor(),\r\n                tool   = paper.tool().current();\r\n\r\n            var offset;\r\n\r\n            if (tool == 'collector') {\r\n                return;\r\n            }\r\n\r\n            if (vector) {\r\n                // already has drag feature\r\n                if (vector.isDraggable()) {\r\n                    return;\r\n                }\r\n\r\n                // reject non primary button\r\n                if (e.button || e.ctrlKey || e.shiftKey || e.altKey) {\r\n                    return;\r\n                }\r\n\r\n                this.revalidate(paper);\r\n\r\n                offset = this.caching.offset;\r\n\r\n                this.panning.start = {\r\n                    x: e.clientX - offset.x,\r\n                    y: e.clientY - offset.y\r\n                };\r\n\r\n                // install temporary events handler\r\n                this.panning.moveHandler = _.bind(this.onPointerMove, this, _, paper, viewport);\r\n                this.panning.stopHandler = _.bind(this.onPointerStop, this, _, paper, viewport);\r\n\r\n                vendor.on('move', this.panning.moveHandler);\r\n                vendor.on('up', this.panning.stopHandler);\r\n            }\r\n        },\r\n\r\n        onPointerMove: function(e, paper, viewport) {\r\n            var offset = this.caching.offset,\r\n                start = this.panning.start,\r\n                current = { \r\n                    x: e.clientX - offset.x, \r\n                    y: e.clientY - offset.y\r\n                },\r\n                dx = current.x - start.x,\r\n                dy = current.y - start.y,\r\n                mg = Graph.util.hypo(dx, dy);\r\n\r\n            paper.cursor('move');\r\n\r\n            this.scroll(paper, viewport, dx, dy);\r\n\r\n            this.panning.start = {\r\n                x: e.clientX - offset.x,\r\n                y: e.clientY - offset.y\r\n            };\r\n\r\n            // prevent select\r\n            e.preventDefault();\r\n        },\r\n\r\n        onPointerStop: function(e, paper) {\r\n            var me = this, vendor = paper.interactable().vendor();\r\n            var delay, bounce;\r\n\r\n            // wait interact to fire last posible event...\r\n            delay = _.delay(function(){\r\n                clearTimeout(delay);\r\n                delay = null;\r\n\r\n                vendor.off('move', me.panning.moveHandler);\r\n                vendor.off('up', me.panning.stopHandler);\r\n\r\n            }, 0);\r\n\r\n            paper.cursor('default');\r\n        },\r\n\r\n        onBeforeZoom: _.debounce(function(paper){\r\n            \r\n            Graph.topic.publish('paper/beforezoom', null, paper);\r\n\r\n        }, 300, {leading: true, trailing: false}),\r\n\r\n        onZoom: _.debounce(function(paper) {\r\n            var state = paper.state();\r\n\r\n            if (state == 'panning') {\r\n                paper.cursor('default');\r\n            }\r\n\r\n        }, 300),\r\n\r\n        onBeforeScroll: _.debounce(function(paper){\r\n            \r\n            Graph.topic.publish('paper/beforescroll', null, paper);\r\n\r\n        }, 300, {leading: true, trailing: false}),\r\n\r\n        onScroll: _.debounce(function() {\r\n\r\n        }, 300)\r\n\r\n    });\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function logarithm(num, base) {\r\n        base = base || 10;\r\n        return Math.log(num) / Math.log(base);\r\n    }\r\n\r\n    function stepRange(range, steps) {\r\n        var min = logarithm(range.min),\r\n            max = logarithm(range.max),\r\n            abs = Math.abs(min) + Math.abs(max);\r\n\r\n        return abs / steps;\r\n    }\r\n\r\n    function zoomRange(range, scale) {\r\n        return Math.max(range.min, Math.min(range.max, scale));\r\n    }\r\n\r\n    function pointerLocation(event, paper) {\r\n        var offset = paper.node().getBoundingClientRect(),\r\n            x = event.clientX - offset.left,\r\n            y = event.clientY - offset.top;\r\n\r\n        return {\r\n            x: x, \r\n            y: y\r\n        };\r\n    }\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Linker = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n            enabled: false,\r\n            suspended: true,\r\n            rendered: false\r\n        },\r\n\r\n        components: {\r\n            block: null,\r\n            pointer: null,\r\n            path: null\r\n        },\r\n\r\n        linking: {\r\n            treshold: 10,\r\n            enabled: false,\r\n            moveHandler: null,\r\n            stopHandler: null,\r\n            source: null,\r\n            start: null,\r\n            target: null,\r\n            end: null,\r\n            visits: []\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            var me = this, vendor;\r\n\r\n            if ( ! vector.isPaper()) {\r\n                throw Graph.error('Linker plugin is only available for paper !');\r\n            }\r\n\r\n            vendor = vector.interactable().vendor();\r\n            vendor.on('down', _.bind(me.onPointerDown, me, _, vector));\r\n\r\n            vector.on('keynavdown', function(e){\r\n                if (e.keyCode === Graph.event.ESC) {\r\n                    me.invalidate();\r\n                    vector.tool().activate('panzoom');\r\n                }\r\n            });\r\n\r\n            me.props.vector = vector.guid();\r\n            me.initComponent(vector);\r\n        },\r\n        \r\n        initComponent: function(paper) {\r\n            var me = this, comp = me.components;\r\n\r\n            comp.block = (new Graph.svg.Group())\r\n                .addClass('graph-linker-path')\r\n                .selectable(false);\r\n\r\n            comp.pointer = (new Graph.svg.Circle())\r\n                .addClass('graph-linker-pointer')\r\n                .removeClass(Graph.string.CLS_VECTOR_CIRCLE)\r\n                .selectable(false)\r\n                .render(comp.block);\r\n\r\n            comp.path = (new Graph.svg.Path())\r\n                .addClass('graph-linker-path')\r\n                .removeClass(Graph.string.CLS_VECTOR_PATH)\r\n                .selectable(false)\r\n                .render(comp.block)\r\n                .attr('marker-end', 'url(#marker-arrow)');\r\n        },\r\n\r\n        render: function() {\r\n            var paper;\r\n\r\n            if (this.props.rendered) {\r\n                return;\r\n            }\r\n\r\n            paper = this.vector();\r\n            this.components.block.render(paper);\r\n            this.props.rendered = true;\r\n        },\r\n\r\n        invalidate: function() {\r\n            var vector, vendor;\r\n\r\n            if (this.linking.enabled) {\r\n                vector = this.vector();\r\n                vendor = vector.interactable().vendor();\r\n\r\n                vector.removeClass('linking');\r\n\r\n                if (this.linking.moveHandler) {\r\n                    vendor.off('move', this.linking.moveHandler);\r\n                }\r\n\r\n                if (this.linking.stopHandler) {\r\n                    vendor.off('up', this.linking.stopHandler);   \r\n                }\r\n\r\n                if (this.linking.source) {\r\n                    this.linking.source.removeClass('disallowed');\r\n                }\r\n\r\n                if (this.linking.target) {\r\n                    this.linking.target.removeClass('allowed');\r\n                }\r\n\r\n                _.assign(this.linking, {\r\n                    enabled: false,\r\n                    moveHandler: null,\r\n                    stopHandler: null,\r\n                    source: null,\r\n                    start: null,\r\n                    target: null,\r\n                    end: null\r\n                });\r\n                \r\n                if (this.linking.visits) {\r\n                    _.forEach(this.linking.visits, function(v){\r\n                        v.removeClass('connect-valid connect-invalid');\r\n                    });\r\n                }\r\n                \r\n                this.linking.visits = null;\r\n            }\r\n        },\r\n\r\n        enable: function() {\r\n            this.props.enabled = true;\r\n            this.vector().state('linking');\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.enabled = false;\r\n            this.invalidate();\r\n            this.suspend();\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.components.block.elem.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            var paper;\r\n\r\n            if ( ! this.props.suspended) {\r\n                return;\r\n            }\r\n\r\n            paper = this.vector();\r\n            this.props.suspended = false;\r\n            \r\n            if ( ! this.props.rendered) {\r\n                this.render();\r\n            } else {\r\n                paper.viewport().elem.append(this.components.block.elem);\r\n            }\r\n        },\r\n\r\n        cropping: function(start, end) {\r\n            var source = this.linking.source,\r\n                target = this.linking.target,\r\n                cable = new Graph.lang.Path([['M', start.x, start.y], ['L', end.x, end.y]]);\r\n\r\n            var spath, scrop, tpath, tcrop;\r\n\r\n            if (source) {\r\n                spath = source.connectable().pathinfo();\r\n                scrop = spath.intersection(cable, true);\r\n            }\r\n\r\n            if (target) {\r\n                tpath = target.connectable().pathinfo();\r\n                tcrop = tpath.intersection(cable, true);\r\n            }\r\n\r\n            cable = spath = tpath = null;\r\n\r\n            return {\r\n                start: scrop ? scrop[0] : null,\r\n                end:   tcrop ? tcrop[0] : null\r\n            };\r\n        },\r\n\r\n        build: function() {\r\n            var tail = this.components.path.tail(),\r\n                head = this.components.path.head();\r\n\r\n            if (tail && head) {\r\n                var paper = this.vector();\r\n                paper.connect(\r\n                    this.linking.source, \r\n                    this.linking.target,\r\n                    tail,\r\n                    head\r\n                );\r\n            }\r\n\r\n            this.invalidate();\r\n            this.suspend();\r\n        },\r\n\r\n        onPointerDown: function(e, paper) {\r\n            var layout = paper.layout(),\r\n                offset = layout.offset(),\r\n                vector = layout.grabVector(e), \r\n                vendor = paper.interactable().vendor(),\r\n                tool = paper.tool().current();\r\n\r\n            if (tool != 'linker') {\r\n                return;\r\n            }\r\n\r\n            if (this.linking.enabled) {\r\n                if (this.linking.target) {\r\n                    this.build();\r\n                }\r\n            } else {\r\n                \r\n                this.linking.visits = [];\r\n\r\n                if (vector.isConnectable()) {\r\n                    var sbox, port;\r\n\r\n                    // track visit\r\n                    this.linking.visits.push(vector);\r\n\r\n                    if ( ! this.linking.source) {\r\n                        \r\n                        sbox = vector.connectable().bbox();\r\n                        port = sbox.center(true);\r\n\r\n                        this.linking.source = vector;\r\n                        this.linking.start = port;\r\n\r\n                        this.components.path\r\n                            .moveTo(port.x, port.y)\r\n                            .lineTo(port.x, port.y, false);\r\n\r\n                        sbox = port = null;\r\n                    }\r\n\r\n                    if (this.props.suspended) {\r\n                        this.resume();    \r\n                    }\r\n\r\n                    this.linking.enabled = true;\r\n                    this.linking.moveHandler = _.bind(this.onPointerMove, this, _, paper);\r\n\r\n                    paper.addClass('linking');\r\n\r\n                    vendor = paper.interactable().vendor();\r\n                    vendor.on('move', this.linking.moveHandler);\r\n                }\r\n            }\r\n        },\r\n\r\n        onPointerMove: function(e, paper) {\r\n            var layout = paper.layout(),\r\n                start = this.linking.start,\r\n                coord = layout.grabLocation(e);\r\n\r\n            var x = coord.x,\r\n                y = coord.y;\r\n\r\n            // add threshold\r\n            var rad = Graph.util.rad(Graph.util.theta( start, {x: x, y: y} )),\r\n                sin = Math.sin(rad),\r\n                cos = Math.cos(rad),\r\n                tdx = this.linking.treshold * -cos,\r\n                tdy = this.linking.treshold *  sin;\r\n\r\n            x += tdx;\r\n            y += tdy;\r\n\r\n            var current = layout.grabVector(e),\r\n                valid = false;\r\n\r\n            var target, crop, tbox, port;\r\n\r\n            if (current && current.isConnectable()) {\r\n                \r\n                if (this.linking.visits.indexOf(current.guid()) === -1) {\r\n                    this.linking.visits.push(current);\r\n                }\r\n\r\n                if (this.linking.source.connectable().canConnect(current.connectable())) {\r\n                    valid = true;\r\n                    target = current;\r\n\r\n                    target.removeClass('connect-invalid');\r\n                    target.addClass('connect-valid');\r\n                    \r\n                    tbox = current.connectable().bbox();\r\n                    port = tbox.center(true);\r\n                    \r\n                    this.linking.target = target;\r\n                    this.linking.end    = port;\r\n\r\n                    crop = this.cropping(start, port);\r\n\r\n                    if (crop.start) {\r\n                        this.components.path.moveTo(crop.start.x, crop.start.y);\r\n                    }\r\n\r\n                    if (crop.end) {\r\n                        this.components.path.lineTo(crop.end.x, crop.end.y, false);\r\n                    } else {\r\n                        this.components.path.lineTo(x, y, false);\r\n                    }\r\n\r\n                    tbox = port = null;\r\n\r\n                } else {\r\n                    current.removeClass('connect-valid');\r\n                    current.addClass('connect-invalid');\r\n                }\r\n            }\r\n\r\n            if ( ! valid) {\r\n\r\n                if (this.linking.target) {\r\n                    this.linking.target.removeClass('connect-valid connect-invalid');\r\n                }\r\n\r\n                this.linking.target = null;\r\n                this.linking.end    = null;\r\n\r\n                crop = this.cropping(start, {x: x, y: y});\r\n\r\n                if (crop.start) {\r\n                    this.components.path.moveTo(crop.start.x, crop.start.y);\r\n                }\r\n\r\n                if (crop.end) {\r\n                    this.components.path.lineTo(crop.end.x, crop.end.y, false);\r\n                } else {\r\n                    this.components.path.lineTo(x, y, false);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    });\r\n\r\n    ///////// HELPER /////////\r\n    \r\n\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.ToolManager = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n            current: null\r\n        },\r\n\r\n        tools: {\r\n\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            var me = this;\r\n\r\n            me.props.vector = vector.guid();\r\n\r\n        },\r\n        \r\n        has: function(tool) {\r\n            return !!this.tools[tool];\r\n        },\r\n\r\n        get: function(name) {\r\n            var data = this.tools[name],\r\n                vector = this.vector();\r\n\r\n            if (data) {\r\n                switch(data.type) {\r\n                    case 'plugin':\r\n                        return vector.plugins[name];\r\n                    case 'util':\r\n                        return vector.utils[name];\r\n                }\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        current: function() {\r\n            return this.props.current;\r\n        },\r\n\r\n        register: function(name, type) {\r\n            type = _.defaultTo(type, 'plugin');\r\n\r\n            this.tools[name] = {\r\n                name: name,\r\n                type: type,\r\n                enabled: false\r\n            };\r\n        },\r\n\r\n        unregister: function(name) {\r\n            if (this.tools[name]) {\r\n                delete this.tools[name];\r\n            }\r\n        },\r\n\r\n        activate: function(name, activator) {\r\n            if (this.props.current != name) {\r\n\r\n                var tool = this.get(name), data;\r\n                \r\n                if (tool) {\r\n                    this.deactivateAll(name);\r\n                    this.props.current = name;\r\n\r\n                    data = this.tools[name];\r\n                    data.enabled = true;\r\n\r\n                    activator = _.defaultTo(activator, 'tool');\r\n                    tool.enable(activator);\r\n\r\n                    this.fire('activate', {\r\n                        name: data.name,\r\n                        enabled: data.enabled\r\n                    });\r\n                }\r\n            }\r\n            \r\n        },\r\n\r\n        deactivate: function(name) {\r\n            var tool = this.get(name), data;\r\n\r\n            if (tool) {\r\n                data = this.tools[name];\r\n                data.enabled = false;\r\n                this.props.current = null;\r\n\r\n                tool.disable();\r\n\r\n                this.fire('deactivate', {\r\n                    name: data.name,\r\n                    enabled: data.enabled\r\n                });\r\n            }\r\n        },\r\n\r\n        deactivateAll: function(except) {\r\n            var vector = this.vector();\r\n\r\n            for(var name in this.tools) {\r\n                if (name != except) {\r\n                    this.deactivate(name);\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        toggle: function(tool) {\r\n            var data = this.tools[tool];\r\n            if (data) {\r\n                if (data.enabled) {\r\n                    this.deactivate(tool);\r\n                } else {\r\n                    this.activate(tool);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    });\r\n\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Pencil = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        paper: null,\r\n\r\n        drawing: {\r\n            offset: {\r\n                x: 0, \r\n                y: 0\r\n            },\r\n            moveHandler: null,\r\n            stopHandler: null\r\n        },\r\n\r\n        constructor: function(paper) {\r\n            this.paper = paper;\r\n        },\r\n        \r\n        draw: function() {\r\n            var paper, shape, vendor;\r\n            \r\n            // activate panzoom\r\n            this.paper.tool().activate('panzoom');\r\n\r\n            shape = Graph.shape.apply(null, arguments);\r\n\r\n            if (shape) {\r\n\r\n                shape.render(this.paper);\r\n                shape.move(-500, -500);\r\n                \r\n                this.refresh(shape);\r\n                this.paper.state('drawing');\r\n\r\n                vendor = this.paper.interactable().vendor();\r\n\r\n                this.drawing.offset = this.paper.layout().offset();\r\n                this.drawing.moveHandler = _.bind(this.onPointerMove, this, _, shape);\r\n                this.drawing.stopHandler = _.bind(this.onPointerStop, this, _, shape);\r\n\r\n                vendor.on('move', this.drawing.moveHandler);\r\n                vendor.on('up', this.drawing.stopHandler);    \r\n            }\r\n\r\n            return shape;\r\n        },\r\n\r\n        refresh: function(shape) {\r\n            var snapping = this.paper.layout().dragSnapping();\r\n\r\n            shape.component().cascade(function(comp){\r\n                if (comp.isDraggable()) {\r\n                    comp.draggable().snap(snapping);\r\n                }\r\n\r\n                if (comp.isResizable()) {\r\n                    comp.resizable().snap(snapping);\r\n                }\r\n            });\r\n\r\n        },\r\n\r\n        onPointerMove: function(e, shape) {\r\n            var offset = this.drawing.offset,   \r\n                viewport = this.paper.viewport(),\r\n                coords = Graph.event.relative(e, viewport),\r\n                scale = viewport.scale();\r\n\r\n            var x = coords.x - (offset.left / scale.x),\r\n                y = coords.y - (offset.top / scale.y);\r\n\r\n            shape.move(x, y);\r\n        },\r\n\r\n        onPointerStop: function(e, shape) {\r\n            var vendor = this.paper.interactable().vendor();\r\n            var delay;\r\n\r\n            delay = _.delay(_.bind(function(){\r\n                if (this.drawing.moveHandler) {\r\n                    vendor.off('move', this.drawing.moveHandler);    \r\n                    this.drawing.moveHandler = null;\r\n                }\r\n\r\n                if (this.drawing.stopHandler) {\r\n                    vendor.off('up', this.drawing.stopHandler);    \r\n                    this.drawing.stopHandler = null;\r\n                }\r\n            }, this), 0);\r\n            \r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    var MIN_BOX_WIDTH  = 150,\r\n        MIN_BOX_HEIGHT = 50,\r\n        OFFSET_TRESHOLD = 10;\r\n\r\n    Graph.plugin.Editor = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n            rendered: false,\r\n            suspended: true,\r\n            width: 'auto',\r\n            height: 'auto',\r\n            offset: 'auto'\r\n        },\r\n\r\n        editing: {\r\n            commitHandler: null\r\n        },\r\n\r\n        components: {\r\n            editor: null\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var vendor;\r\n\r\n            _.assign(this.props, options || {});\r\n\r\n            this.props.vector = vector.guid();\r\n\r\n            _.assign(this.cached, {\r\n                left: 0,\r\n                top: 0,\r\n                width: 0,\r\n                height: 0\r\n            });\r\n\r\n            vendor = vector.interactable().vendor();\r\n            vendor.on('doubletap', _.bind(this.onDoubleTap, this));\r\n\r\n            this.initComponent();\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = this.components;\r\n            comp.editor = Graph.$('<div class=\"graph-editor\" contenteditable=\"true\"></div>');\r\n            comp.editor.on('keypress', function(e){\r\n                if (e.keyCode === Graph.event.ENTER) {\r\n                    me.commit();\r\n                }\r\n            });\r\n        },\r\n        \r\n        commit: function() {\r\n            var text = this.components.editor.text();\r\n            this.suspend();\r\n            this.vector().props.text = text;\r\n\r\n            this.fire('edit', {\r\n                text: text,\r\n                left: this.cached.left,\r\n                top: this.cached.top\r\n            });\r\n        },\r\n\r\n        render: function() {\r\n            if (this.props.rendered) {\r\n                this.redraw();\r\n                return;\r\n            }\r\n\r\n            this.vector().paper().container().append(this.components.editor);\r\n            this.props.rendered = true;\r\n            this.redraw();\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.components.editor.detach();\r\n\r\n            if (this.editing.commitHandler) {\r\n                Graph.topic.unsubscribe('paper/beforezoom', this.editing.commitHandler);\r\n                Graph.topic.unsubscribe('paper/beforescroll', this.editing.commitHandler);\r\n                this.vector().paper().off('pointerdown', this.editing.commitHandler);\r\n                this.editing.commitHandler = null;\r\n            }\r\n        },\r\n\r\n        resume: function() {\r\n            var container;\r\n\r\n            if ( ! this.props.rendered) {\r\n                this.render();\r\n            } else {\r\n                if (this.props.suspended) {\r\n                    this.props.suspended = false;\r\n                    container = this.vector().paper().container();\r\n                    container.append(this.components.editor);\r\n                }\r\n                this.redraw();\r\n            }\r\n\r\n        },\r\n\r\n        redraw: function() {\r\n            var editor = this.components.editor,\r\n                vector = this.vector(),\r\n                matrix = vector.matrix(true),\r\n                scale  = matrix.scale();\r\n\r\n            var vbox = vector.bbox().clone().transform(matrix).toJson();\r\n            var left, top, width, height;\r\n            \r\n            width  = vbox.width;\r\n            height = vbox.height;\r\n            left = vbox.x;\r\n            top  = vbox.y;\r\n\r\n            if (this.props.width != 'auto') {\r\n                width = Math.max(Math.min(this.props.width, width), MIN_BOX_WIDTH);\r\n                left = vbox.x + (vbox.width - width) / 2;\r\n            }\r\n\r\n            if (this.props.height != 'auto') {\r\n                height = Math.max((Math.min(this.props.height, height)), MIN_BOX_HEIGHT);\r\n                top = vbox.y + (vbox.height - height) / 2;\r\n            }\r\n\r\n            left = left + 4 * scale.x;\r\n            top = top + 4 * scale.y;\r\n            width = width - 8 * scale.x;\r\n            height = height - 8 * scale.y;\r\n\r\n            editor.css({\r\n                left: left,\r\n                top:  top,\r\n                width: width,\r\n                height: height\r\n            });\r\n\r\n            _.assign(this.cached, {\r\n                left: left,\r\n                top: top,\r\n                width: width,\r\n                height: height\r\n            });\r\n\r\n            editor.text((vector.props.text || ''));\r\n            editor.focus();\r\n\r\n            vbox = null;\r\n        },\r\n\r\n        startEdit: function(e) {\r\n            var me = this, vector = me.vector();\r\n\r\n            if (vector.$collector) {\r\n                vector.$collector.decollect(vector);\r\n            }\r\n\r\n            if (vector.paper().tool().current() == 'linker') {\r\n                vector.paper().tool().activate('panzoom');\r\n            }\r\n\r\n            me.fire('beforeedit');\r\n            me.resume();\r\n\r\n            if (e && this.props.offset == 'pointer') {\r\n                var editor = me.components.editor,\r\n                    paper = vector.paper(),\r\n                    scale = paper.layout().currentScale();\r\n\r\n                var offset, coords, left, top;\r\n\r\n                if (paper) {\r\n                    offset = paper.offset();\r\n                    coords = paper.layout().grabLocation(e);\r\n\r\n                    left = e.clientX - offset.left + (OFFSET_TRESHOLD * scale.x);\r\n                    top = e.clientY - offset.top + (OFFSET_TRESHOLD * scale.y);\r\n\r\n                    editor.css({\r\n                        left: left,\r\n                        top: top\r\n                    });\r\n\r\n                    me.cached.left = coords.x;\r\n                    me.cached.top = coords.y;\r\n                }\r\n            }\r\n\r\n            me.editing.commitHandler = function() {\r\n                me.commit();\r\n            };\r\n\r\n            Graph.topic.subscribe('paper/beforezoom', me.editing.commitHandler);\r\n            Graph.topic.subscribe('paper/beforescroll', me.editing.commitHandler);\r\n\r\n            vector.paper().on('pointerdown', me.editing.commitHandler);\r\n            vector = null;\r\n        },\r\n\r\n        onDoubleTap: function(e) {\r\n            this.startEdit(e);\r\n            e.preventDefault();\r\n        },\r\n\r\n        destroy: function() {\r\n\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Snapper = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            enabled: true,\r\n            suspended: true,\r\n            rendered: false,\r\n            vector: null\r\n        },\r\n\r\n        clients: {\r\n\r\n        },\r\n\r\n        components: {\r\n            block: null,\r\n            stubx: null,\r\n            stuby: null\r\n        },\r\n\r\n        // trans\r\n        snapping: {\r\n            coords: null,\r\n            vector: null,\r\n            stubx: null,\r\n            stuby: null\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            options = options || {};\r\n\r\n            if ( ! vector.isPaper()) {\r\n                throw Graph.error(\"Snapper plugin only available for paper\");\r\n            }\r\n\r\n            this.props.vector = vector.guid();\r\n            this.initComponent(vector);\r\n\r\n            this.snapping.coords = {x: [], y: [] };\r\n        },\r\n\r\n        initComponent: function(vector) {\r\n            var block, stubx, stuby;\r\n\r\n            block = (new Graph.svg.Group())\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .addClass('graph-snapper');\r\n\r\n            stubx = (new Graph.svg.Path('M 0 0 L 0 0'))\r\n                .removeClass(Graph.string.CLS_VECTOR_PATH)\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(block);\r\n\r\n            stuby = (new Graph.svg.Path('M 0 0 L 0 0'))\r\n                .removeClass(Graph.string.CLS_VECTOR_PATH)\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(block);\r\n\r\n            this.components.block = block.guid();\r\n            this.components.stuby = stuby.guid();\r\n            this.components.stubx = stubx.guid();\r\n\r\n        },\r\n\r\n        component: function(name) {\r\n            if (name === undefined) {\r\n                return Graph.registry.vector.get(this.components.block);    \r\n            }\r\n            return Graph.registry.vector.get(this.components[name]);\r\n        },\r\n\r\n        render: function() {\r\n            if (this.props.rendered) {\r\n                return;\r\n            }\r\n            this.component().render(this.vector());\r\n            this.props.rendered = true;\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.component().elem.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            if (this.props.suspended) {\r\n                this.props.suspended = false;\r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else {\r\n                    var block = this.component(),\r\n                        viewport = this.vector().viewport();\r\n                    block.elem.appendTo(viewport.elem);\r\n                }\r\n            }\r\n        },\r\n\r\n        subscribe: function(options) {\r\n            var me = this,\r\n                vector = options.vector,\r\n                shield = options.shield,\r\n                guid = vector.guid();\r\n\r\n            if (me.clients[guid]) {\r\n                vector.off('dragstart', me.clients[guid].dragStartHandler);\r\n                vector.off('dragend', me.clients[guid].dragEndHandler);\r\n                vector.off('remove',  me.clients[guid].removeHandler);\r\n\r\n                delete me.clients[guid];\r\n            }\r\n\r\n            if (options.enabled) {\r\n\r\n                var dragger = vector.draggable();\r\n\r\n                me.clients[guid] = {\r\n                    vector: guid,\r\n                    shield: shield.guid(),\r\n                    osnaps: dragger.snap(),\r\n                    ostart: dragger.origin(),\r\n                    \r\n                    dragStartHandler: _.bind(me.onClientDragStart, me, _, vector, shield),\r\n                    dragEndHandler: _.bind(me.onClientDragEnd, me, _, vector),\r\n                    removeHandler: _.bind(me.onClientRemove, me, _, guid)\r\n                };\r\n\r\n                vector.on('dragstart', me.clients[guid].dragStartHandler);\r\n                vector.on('dragend', me.clients[guid].dragEndHandler);\r\n                vector.on('remove',  me.clients[guid].removeHandler);\r\n\r\n                var center = shield.bbox().center().toJson(),\r\n                    offset = vector.paper().offset(),\r\n                    coords = this.snapping.coords,\r\n                    cx = center.x,\r\n                    cy = center.y;\r\n\r\n                if (_.indexOf(coords.x, cx) === -1) {\r\n                    coords.x.push((cx + offset.left));\r\n                }\r\n\r\n                if (_.indexOf(coords.y, cy) === -1) {\r\n                    coords.y.push((cy + offset.top));\r\n                }\r\n            }\r\n        },\r\n\r\n        showStub: function(axis, value) {\r\n            var snapping = this.snapping;\r\n            var command;\r\n\r\n            if (axis == 'x') {\r\n                command = 'M ' + value + ' -100000 L ' + value + ' 100000';\r\n\r\n                snapping.stubx.attr('d', command);\r\n                snapping.stubx.addClass('visible');\r\n            }\r\n\r\n            if (axis == 'y') {\r\n                command = 'M -100000 ' + value + ' L 100000 ' + value;\r\n\r\n                snapping.stuby.attr('d', command);\r\n                snapping.stuby.addClass('visible');\r\n            }\r\n\r\n            command = null;\r\n        },\r\n\r\n        hideStub: function(axis) {\r\n            var stub = axis == 'x' ? 'stubx' : 'stuby';\r\n            this.snapping[stub].removeClass('visible');\r\n        },\r\n\r\n        onClientDragStart: function(e, vector, shield) {\r\n            var me = this,\r\n                offset = vector.paper().offset(),\r\n                center = shield.bbox().center().toJson();\r\n\r\n            var snapping = this.snapping,\r\n                coords = snapping.coords;\r\n\r\n            snapping.stubx = this.component('stubx');\r\n            snapping.stuby = this.component('stuby');\r\n\r\n            var origX = center.x + offset.left - e.x,\r\n                origY = center.y + offset.top - e.y,\r\n                snapX = [],\r\n                snapY = [];\r\n\r\n            _.forEach(coords.x, function(v){\r\n                snapX.push((v - origX));\r\n            });\r\n\r\n            _.forEach(coords.y, function(v){\r\n                snapY.push((v - origY));\r\n            });\r\n\r\n            vector.draggable().origin({\r\n                x: origX,\r\n                y: origY\r\n            });\r\n\r\n            vector.draggable().snap([\r\n                function(x, y) {\r\n                    var sx, sy;\r\n\r\n                    sx = snapValue(x, snapX);\r\n                    sy = snapValue(y, snapY);\r\n\r\n                    if (sx.snapped) {\r\n                        me.showStub('x', sx.value - offset.left + origX);\r\n                    } else {\r\n                        me.hideStub('x');\r\n                    }\r\n\r\n                    if (sy.snapped) {\r\n                        me.showStub('y', sy.value - offset.top + origY);\r\n                    } else {\r\n                        me.hideStub('y');\r\n                    }\r\n\r\n                    return {\r\n                        x: sx.value,\r\n                        y: sy.value\r\n                    };\r\n                }\r\n            ]);\r\n\r\n            me.resume();\r\n        },\r\n\r\n        onClientDragEnd: function(e, vector) {\r\n            var snapping = this.snapping,\r\n                options = this.clients[vector.guid()];\r\n\r\n            if (options) {\r\n                var dragger = vector.draggable();\r\n                \r\n                if (options.osnaps) {\r\n                    dragger.snap(options.osnaps);\r\n                }\r\n\r\n                if (options.ostart) {\r\n                    dragger.origin(options.ostart);\r\n                }\r\n\r\n            }\r\n\r\n            this.suspend();\r\n\r\n            _.assign(this.snapping, {\r\n                stubx: null,\r\n                stuby: null\r\n            });\r\n        },\r\n\r\n        onClientRemove: function(e) {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function snapValue(value, snaps, range) {\r\n        range = _.defaultTo(range, 10);\r\n        \r\n        var i = snaps.length;\r\n\r\n        while(i--) {\r\n            if (Math.abs(snaps[i] - value) <= range) {\r\n                return {\r\n                    snapped: true,\r\n                    value: snaps[i]\r\n                };\r\n            }\r\n        }\r\n\r\n        return {\r\n            snapped: false,\r\n            value: value\r\n        };\r\n    }\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.ns('Graph.shape.activity');\r\n\r\n    Graph.shape.activity.Start = Graph.extend(Graph.shape.Shape, {\r\n        \r\n        props: {\r\n            label: 'START',\r\n            width: 60,\r\n            height: 60,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, \r\n                comp = me.components;\r\n\r\n            var shape, block, label;\r\n\r\n            shape = (new Graph.svg.Group(me.props.left, me.props.top))\r\n                .addClass('graph-shape-activity-start')\r\n                .selectable(false);\r\n\r\n            var cx = me.props.width / 2,\r\n                cy = me.props.height / 2;\r\n\r\n            block = (new Graph.svg.Ellipse(cx, cy, cx, cy))\r\n                .data('text', me.props.label)\r\n                .render(shape);\r\n\r\n            block.draggable({ghost: true});\r\n            block.connectable({shield: shape, wiring: 'h:v'});\r\n            block.resizable({shield: shape});\r\n            block.editable();\r\n\r\n            block.on('edit',    _.bind(me.onLabelEdit, me));\r\n            block.on('dragend', _.bind(me.onDragEnd, me));\r\n            block.on('resize',  _.bind(me.onResize, me));\r\n            block.on('remove',  _.bind(me.onRemove, me));\r\n\r\n            label = (new Graph.svg.Text(cx, cy, me.props.label))\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n\r\n            shape = block = label = null;\r\n        },\r\n\r\n        redraw: function() {\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                label = this.component('label');\r\n\r\n            var matrix, bound, cx, cy;\r\n\r\n            bound  = block.bbox().toJson(),\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toString());\r\n\r\n            cx = bound.width  / 2;\r\n            cy = bound.height / 2;\r\n\r\n            block.attr({\r\n                cx: cx,\r\n                cy: cy\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n            \r\n            label.attr({\r\n                x: cx, \r\n                y: cy\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Start';\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.shape.activity.Final = Graph.extend(Graph.shape.Shape, {\r\n        \r\n        props: {\r\n            label: 'STOP',\r\n            width: 60,\r\n            height: 60,\r\n            left: 0,\r\n            top: 0\r\n        }, \r\n\r\n        initComponent: function() {\r\n            var me = this, \r\n                comp = me.components;\r\n\r\n            var shape, block, inner, label;\r\n\r\n            shape = (new Graph.svg.Group(me.props.left, me.props.top))\r\n                .addClass('graph-shape-activity-final')\r\n                .selectable(false);\r\n\r\n            var cx = me.props.width / 2,\r\n                cy = me.props.height / 2;\r\n\r\n            block = (new Graph.svg.Ellipse(cx, cy, cx, cy))\r\n                .addClass('block')\r\n                .data('text', me.props.label)\r\n                .render(shape);\r\n\r\n            block.draggable({ghost: true});\r\n            block.connectable({shield: shape});\r\n            block.resizable({shield: shape});\r\n            block.editable();\r\n\r\n            block.on('edit',    _.bind(me.onLabelEdit, me));\r\n            block.on('dragend', _.bind(me.onDragEnd, me));\r\n            block.on('resize',  _.bind(me.onResize, me));\r\n            block.on('remove',  _.bind(me.onRemove, me));\r\n\r\n            inner = (new Graph.svg.Ellipse(cx, cy, cx - 6, cy - 6))\r\n                .addClass('inner')\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            label = (new Graph.svg.Text(cx, cy, me.props.label))\r\n                .addClass('label')\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n            comp.inner = inner.guid();\r\n\r\n            shape = block = label = null;\r\n        },\r\n\r\n        redraw: function() {\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                inner = this.component('inner'),\r\n                label = this.component('label');\r\n\r\n            var matrix, bound, cx, cy;\r\n\r\n            bound  = block.bbox().toJson(),\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n            \r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toString());\r\n\r\n            cx = bound.width / 2,\r\n            cy = bound.height / 2;\r\n\r\n            block.attr({\r\n                cx: cx,\r\n                cy: cy\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            label.attr({\r\n                x: cx, \r\n                y: cy\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n            inner.attr({\r\n                cx: cx,\r\n                cy: cy,\r\n                rx: cx - 6,\r\n                ry: cy - 6\r\n            });\r\n            \r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Final';\r\n        },\r\n\r\n        onRemove: function() {\r\n            // remove label\r\n            this.component('label').remove();\r\n\r\n            // remove inner\r\n            this.component('inner').remove();\r\n\r\n            // remove shape\r\n            this.component('shape').remove();\r\n\r\n            for (var name in this.components) {\r\n                this.components[name] = null;\r\n            }\r\n\r\n            Graph.registry.shape.unregister(this);\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.shape.activity.Action = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'Action',\r\n            width: 140,\r\n            height: 60,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = this.components;\r\n            var shape, block, label;\r\n\r\n            var cx = me.props.width / 2,\r\n                cy = me.props.height / 2;\r\n\r\n            shape = (new Graph.svg.Group(me.props.left, me.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Rect(0, 0, me.props.width, me.props.height))\r\n                .data('text', me.props.label)\r\n                .render(shape);\r\n\r\n            block.draggable({ghost: true});\r\n            block.resizable({shield: shape});\r\n            block.editable();\r\n            block.connectable({shield: shape, wiring: 'h:v'});\r\n            block.snappable({shield: shape, enabled: true});\r\n\r\n            block.on('edit.shape',    _.bind(me.onLabelEdit, me));\r\n            block.on('dragend.shape', _.bind(me.onDragEnd, me));\r\n            block.on('resize.shape',  _.bind(me.onResize, me));\r\n            block.on('remove.shape',  _.bind(me.onRemove, me));\r\n\r\n            label = (new Graph.svg.Text(cx, cy, me.props.label))\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n\r\n            shape = block = label = null;\r\n        },\r\n\r\n        redraw: function() {\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                label = this.component('label');\r\n\r\n            var bound, matrix;\r\n\r\n            bound = block.bbox().toJson();\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toString());\r\n\r\n            block.attr({\r\n                x: 0,\r\n                y: 0\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n            \r\n            label.attr({\r\n                x: bound.width  / 2, \r\n                y: bound.height / 2\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n            bound = null;\r\n            matrix = null;\r\n        },\r\n\r\n        onResize: function() {\r\n            this.redraw();\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Action';\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.shape.activity.Fork = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            width: 100,\r\n            height: 50,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = this.components;\r\n            var shape, block, label;\r\n\r\n            shape = (new Graph.svg.Group(me.props.left, me.props.top))\r\n                .selectable(false);\r\n\r\n            comp.shape = shape.guid();\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.shape.activity.Join = Graph.extend(Graph.shape.Shape, {\r\n        props: {\r\n            width: 140,\r\n            height: 12,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = this.components;\r\n            var shape, block, beam, label;\r\n\r\n            shape = (new Graph.svg.Group(me.props.left, me.props.top))\r\n                .addClass('graph-shape-activity-join')\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Rect(0, 0, me.props.width, me.props.height, 0))\r\n                .addClass('block')\r\n                .render(shape);\r\n\r\n            block.draggable({ghost: true});\r\n            block.connectable({shield: shape});\r\n            block.on('dragend', _.bind(me.onDragEnd, me));\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.shape.activity.Lane = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'Participant Role',\r\n            width: 1000,\r\n            height: 200,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = me.components;\r\n            var shape, block, header, label;\r\n\r\n            shape = (new Graph.svg.Group(me.props.left, me.props.top))\r\n                .addClass('graph-shape-activity-lane')\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Rect(0, 0, me.props.width, me.props.height, 0))\r\n                .addClass('block')\r\n                .render(shape);\r\n\r\n            block.resizable({shield: shape});\r\n            block.draggable({ghost: true});\r\n\r\n            block.on('dragend', _.bind(me.onDragEnd, me));\r\n            block.on('resize', _.bind(me.onResize, me));\r\n            block.on('remove',  _.bind(me.onRemove, me));\r\n\r\n            header = (new Graph.svg.Rect(0, 0, 30, me.props.height, 0))\r\n                .addClass('header')\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            var tx = 15,\r\n                ty = me.props.height / 2;\r\n\r\n            label = (new Graph.svg.Text(tx, ty, me.props.label))\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(shape);\r\n\r\n            label.rotate(270, tx, ty).commit();\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.header = header.guid();\r\n            comp.label = label.guid();\r\n\r\n            shape = block = header = label = null;\r\n        },\r\n\r\n        onDragEnd: function() {\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                matrix = block.matrix();\r\n\r\n            block.reset();\r\n            block.attr('transform', '');\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toString());\r\n        },\r\n\r\n        redraw: function() {\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                header = this.component('header'),\r\n                label = this.component('label');\r\n\r\n            var matrix, bound;\r\n\r\n            bound  = block.bbox().toJson();\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toString());\r\n\r\n            block.attr({\r\n                x: 0,\r\n                y: 0\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            header.attr({\r\n                x: 0,\r\n                y: 0,\r\n                height: bound.height\r\n            });\r\n\r\n            header.dirty(true);\r\n\r\n            var tx = 15,\r\n                ty = bound.height / 2;\r\n\r\n            label.graph.matrix = Graph.matrix();\r\n            label.attr('transform', '');\r\n\r\n            label.attr({\r\n                x: tx,\r\n                y: ty\r\n            });\r\n\r\n            label.wrap(bound.height - 10);\r\n            label.rotate(270, tx, ty).commit();\r\n\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Lane';\r\n        },\r\n\r\n        onRemove: function() {\r\n            // remove label\r\n            this.component('label').remove();\r\n\r\n            // remove header\r\n            this.component('header').remove();\r\n\r\n            // remove shape\r\n            this.component('shape').remove();\r\n\r\n            for (var name in this.components) {\r\n                this.components[name] = null;\r\n            }\r\n\r\n            Graph.registry.shape.unregister(this);\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n    \r\n    var XMLDOC = '<?xml version=\"1.0\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\" [<!ENTITY nbsp \"&#160;\">]>';\r\n    \r\n    var Exporter = Graph.data.Exporter = function(vector, options){\r\n        \r\n        this.options = _.extend({}, Exporter.defaults, options || {});\r\n        this.element = vector.node();\r\n        \r\n        var width, height, scale;\r\n        \r\n        if (vector.isPaper()) {\r\n            width  = vector.elem.width();\r\n            height = vector.elem.height();\r\n            scale  = vector.layout().currentScale();\r\n        } else {\r\n            var bounds = vector.bbox().toJson();\r\n            \r\n            width  = bounds.width;\r\n            height = bounds.height;\r\n            scale  = vector.matrix(true).scale();\r\n        }\r\n        \r\n        _.assign(this.options, {\r\n            width: width,\r\n            height: height,\r\n            scaleX: scale.x,\r\n            scaleY: scale.y\r\n        });\r\n    };\r\n    \r\n    Exporter.defaults = {\r\n        width: 0,\r\n        height: 0,\r\n        \r\n        scaleX: 1,\r\n        scaleY: 1\r\n    };\r\n\r\n    Exporter.prototype.exportDataURI = function() {\r\n        \r\n    };\r\n    \r\n    Exporter.prototype.exportSVG = function() {\r\n        \r\n    };\r\n\r\n    Exporter.prototype.exportJPEG = function(filename, compression) {\r\n        var options = _.extend({}, this.options);\r\n        \r\n        options.encoder = 'image/jpeg';\r\n        options.compression = compression || 0.8;\r\n        \r\n        filename = _.defaultTo(filename, 'download.jpg');\r\n        \r\n        exportImage(this.element, options, function(result){\r\n            if (result) {\r\n                document(filename, result);\r\n            }\r\n        });\r\n    };\r\n\r\n    Exporter.prototype.exportPNG = function(filename, compression) {\r\n        var options = _.extend({}, this.options);\r\n        \r\n        filename = _.defaultTo(filename, 'download.png');\r\n        \r\n        options.encoder = 'image/png';\r\n        options.compression = compression || 0.8;\r\n        \r\n        exportImage(this.element, options, function(result){\r\n            if (result) {\r\n                download(filename, result);\r\n            }\r\n        });\r\n    };\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function repair(data) {\r\n        var encoded = encodeURIComponent(data);\r\n        \r\n        encoded = encoded.replace(/%([0-9A-F]{2})/g, function(match, p1) {\r\n            var c = String.fromCharCode('0x'+p1);\r\n            return c === '%' ? '%25' : c;\r\n        });\r\n        \r\n        return decodeURIComponent(encoded);\r\n    }\r\n    \r\n    function download(name, uri) {\r\n        if (navigator.msSaveOrOpenBlob) {\r\n            var blob = createBlob(uri);\r\n            navigator.msSaveOrOpenBlob(blob, name);\r\n            blob = null;\r\n        } else {\r\n            var link = Graph.dom('<a/>');\r\n            \r\n            if ('download' in link) {\r\n                link.download = name;\r\n                link.href = uri;\r\n                link.style.display = 'none';\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                document.body.removeChild(link);\r\n            } else {\r\n                window.open(uri, '_download', 'menubar=no,toolbar=no,status=no');\r\n            }\r\n            \r\n            link = null;\r\n        }\r\n    }\r\n    \r\n    function createBlob(uri) {\r\n        var byteString = window.atob(uri.split(',')[1]),\r\n            mimeString = uri.split(',')[0].split(':')[1].split(';')[0],\r\n            buffer = new ArrayBuffer(byteString.length),\r\n            intArray = new Uint8Array(buffer);\r\n        \r\n        for (var i = 0, ii = byteString.length; i < ii; i++) {\r\n            intArray[i] = byteString.charCodeAt(i);\r\n        }\r\n        \r\n        return new Blob([buffer], {type: mimeString});\r\n    }\r\n    \r\n    function exportImage(element, options, callback) {\r\n        var data = createDataURI(element, options),\r\n            image = new Image();\r\n        \r\n        image.onload = function() {\r\n            var canvas, context, result;\r\n            \r\n            canvas = document.createElement('canvas');\r\n            canvas.width  = image.width;\r\n            canvas.height = image.height;\r\n            \r\n            context = canvas.getContext('2d');\r\n            context.drawImage(image, 0, 0);\r\n            \r\n            try {\r\n                result = canvas.toDataURL(options.encoder, options.compression);\r\n            } catch(e) {\r\n                result = false;\r\n            }\r\n            \r\n            canvas = context = null;\r\n            callback(result);\r\n        };\r\n        \r\n        image.onerror = function() {\r\n            callback(false);\r\n        };\r\n        \r\n        image.src = data; // DOMURL.createObjectURL(blob);\r\n    }\r\n    \r\n    function createDataURI(element, options) {\r\n        var holder = Graph.dom('<div/>'),\r\n            cloned = element.cloneNode(true);\r\n        \r\n        var css, sty, svg, xml, uri;\r\n            \r\n        if (cloned.tagName == 'svg') {\r\n            cloned.setAttribute('width',  options.width);\r\n            cloned.setAttribute('height', options.height);\r\n        } else {\r\n            svg = Graph.dom('<svg/>');\r\n            \r\n            svg.setAttribute('xmlns', Graph.config.xmlns.svg);\r\n            svg.setAttribute('xmlns:xlink', Graph.config.xmlns.xlink);\r\n            svg.setAttribute('version', Graph.config.svg.version);\r\n            svg.setAttribute('width',  options.width);\r\n            svg.setAttribute('height', options.height);\r\n            \r\n            svg.appendChild(cloned);\r\n            cloned = svg;\r\n        }\r\n        \r\n        holder.appendChild(cloned);\r\n        \r\n        css = getElementStyles(element);\r\n        sty = Graph.dom('<style/>');\r\n        sty.setAttribute('type', 'text/css');\r\n        sty.innerHTML = \"<![CDATA[\\n\" + css + \"\\n]]>\";\r\n        \r\n        var first = cloned.childNodes[0];\r\n        \r\n        if (first) {\r\n            cloned.insertBefore(sty, first);\r\n        } else {\r\n            cloned.appendChild(sty);\r\n        }\r\n        \r\n        xml = XMLDOC + holder.innerHTML;\r\n        uri = 'data:image/svg+xml;base64,' + window.btoa(repair(xml));\r\n        \r\n        cloned = holder = null;\r\n        return uri;\r\n    }\r\n    \r\n    function getElementStyles(element) {\r\n        var styles = document.styleSheets,\r\n            result = '';\r\n            \r\n        var rules, rule, found;\r\n        \r\n        for (var i = 0, ii = styles.length; i < ii; i++) {\r\n            \r\n            rules = styles[i].cssRules;\r\n            \r\n            if (rules != null) {\r\n                \r\n                for (var j = 0, jj = rules.length; j < jj; j++, found = null) {\r\n                    \r\n                    rule = rules[j];\r\n                    \r\n                    if (rule.style !== undefined) {\r\n                        if (rule.selectorText) {\r\n                            \r\n                            found = element.querySelector(rule.selectorText);\r\n                            \r\n                            if (found) {\r\n                                result += rule.selectorText + \" { \" + rule.style.cssText + \" }\\n\";\r\n                            } else if(rule.cssText.match(/^@font-face/)) {\r\n                                result += rule.cssText + '\\n';\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.diagram.Diagram = Graph.extend({\r\n\r\n        props: {\r\n            name: null,\r\n            type: ''\r\n        },\r\n\r\n        constructor: function(paper) {\r\n            \r\n        },\r\n\r\n        destroy: function() {\r\n\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.diagram.Command = Graph.extend({\r\n        \r\n        history: [],\r\n\r\n        add: function() {\r\n            \r\n        },\r\n\r\n        undo: function() {\r\n            \r\n        },\r\n\r\n        redo: function() {\r\n\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Modeler = Graph.diagram.Modeler = function(){};\r\n\r\n    Modeler.prototype.export = function(diagram) {\r\n\r\n    };\r\n\r\n    Modeler.prototype.import = function(diagram, model) {\r\n        \r\n    };\r\n}());","\r\n(function(){\r\n\r\n    var Parser = Graph.diagram.Parser = function(){};\r\n\r\n    Parser.prototype.parse = function(diagram, data) {\r\n        \r\n    };\r\n}());","\r\n(function(){\r\n\r\n    var Rules = Graph.diagram.Rules = function(){\r\n        this.rules = {};\r\n    };\r\n\r\n    Rules.prototype.add = function() {\r\n        \r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.popup.Dialog = Graph.extend({\r\n\r\n        props: {\r\n            opened: false,\r\n            content: null,\r\n            buttons: null,\r\n            baseClass: ''\r\n        },\r\n\r\n        components: {\r\n            popup: null,\r\n            container: null,\r\n            backdrop: null\r\n        },\r\n\r\n        handlers: {\r\n            backdropClick: null\r\n        },\r\n\r\n        constructor: function(container, options) {\r\n            if (_.isPlainObject(container)) {\r\n                options = container;\r\n                container = Graph.$('body');\r\n            }\r\n\r\n            _.assign(this.props, options || {});\r\n\r\n            this.components.container = container || Graph.$('body');\r\n            this.initComponent();\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this;\r\n\r\n            var popup = Graph.$('<div class=\"graph-popup-dialog\"/>');\r\n            popup.addClass(this.props.baseClass);\r\n            console.log(this.props.baseClass);\r\n            me.components.popup = popup;\r\n        },\r\n\r\n        component: function() {\r\n            return this.components.popup;\r\n        },\r\n\r\n        content: function(content) {\r\n            var me = this;\r\n\r\n            if (content === undefined) {\r\n                return me.props.content;\r\n            }\r\n\r\n            if (_.isFunction(content)) {\r\n                Graph.when(content()).then(function(data){\r\n                    me.props.content = data;\r\n                    me.components.popup.html(data);\r\n                });\r\n            } else {\r\n                me.props.content = content;\r\n                me.components.popup.html(content);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        open: function() {\r\n            if (this.opened) {\r\n                return;\r\n            }\r\n\r\n            this.components.container.append(this.components.popup);\r\n            this.props.opened = true;\r\n\r\n            this.center();\r\n            this.backdrop();\r\n\r\n            return this;\r\n        },\r\n\r\n        close: function() {\r\n            var backdrop = this.components.backdrop;\r\n\r\n            this.components.popup.detach();\r\n            this.props.opened = false;\r\n\r\n            if (this.handlers.backdropClick) {\r\n                backdrop.off('click', this.handlers.backdropClick);\r\n                this.handlers.backdropClick = null;\r\n\r\n                var backdropUser = +backdrop.data('user');\r\n\r\n                backdropUser--;\r\n\r\n                if (backdropUser <= 0) {\r\n                    backdropUser = 0;\r\n                    backdrop.detach();\r\n                }\r\n\r\n                backdrop.data('user', backdropUser);\r\n            }\r\n\r\n            this.fire('close');\r\n        },\r\n\r\n        center: _.debounce(function() {\r\n            var popup = this.components.popup,\r\n                width = popup.width(),\r\n                height = popup.height();\r\n\r\n            popup.css({\r\n                'top': '50%',\r\n                'left': '50%',\r\n                'margin-top': -height / 2,\r\n                'margin-left': -width / 2\r\n            });\r\n        }, 0),\r\n\r\n        backdrop: function() {\r\n            var me = this,\r\n                backdrop = Graph.$('.graph-popup-backdrop');\r\n\r\n            if ( ! backdrop.length()) {\r\n                backdrop = Graph.$('<div class=\"graph-popup-backdrop\"/>');\r\n                backdrop.data('user', 0);\r\n                backdrop.on('click', function(e){\r\n                    e.stopPropagation();\r\n                });\r\n            }\r\n\r\n            me.handlers.backdropClick = function() {\r\n                me.close();\r\n            };\r\n\r\n            backdrop.on('click', me.handlers.backdropClick);\r\n\r\n            var backdropUser = +backdrop.data('user');\r\n\r\n            backdropUser++;\r\n            backdrop.data('user', backdropUser);\r\n\r\n            me.components.popup.before(backdrop);\r\n            me.components.backdrop = backdrop;\r\n        },\r\n\r\n        destroy: function() {\r\n            this.components.popup.remove();\r\n            this.components.popup = null;\r\n            this.components.container = null;\r\n        }\r\n\r\n    });\r\n\r\n}());"],"sourceRoot":"/source/"}