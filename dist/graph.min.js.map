{"version":3,"sources":["poly.js","core.js","util.js","class.js","error.js","event.js","point.js","line.js","curve.js","bbox.js","path.js","matrix.js","vector.js","shape.js","tree.js","link.js","element.js","ellipse.js","circle.js","rect.js","polyline.js","polygon.js","group.js","text.js","image.js","paper.js","pallet.js","layout.js","router.js","directed.js","orthogonal.js","sweeplink.js","plugin.js","manager.js","definer.js","reactor.js","transformer.js","animator.js","resizer.js","rotator.js","collector.js","dragger.js","dropper.js","network.js","history.js","panzoom.js","linker.js","toolmanager.js","pencil.js","editor.js","snapper.js","toolpad.js","clipper.js","start.js","final.js","action.js","fork.js","join.js","lane.js","pool.js","label.js","exporter.js","parser.js","activity.js","dialog.js"],"names":["ascending","a","b","NaN","bisector","compare","left","x","lo","hi","arguments","length","mid","right","_","float","parseFloat","gcd","array","t","i","r","len","lcm","format","params","toArray","shift","replace","match","number","insert","index","Array","prototype","splice","apply","concat","move","from","to","size","k","push","undefined","permute","permuter","isFunction","reduce","result","value","key","isArray","f","d","ascendingKey","isIE","na","global","navigator","ua","userAgent","toLowerCase","ie","indexOf","parseInt","substring","GLOBAL","window","Math","self","Function","DOCUMENT","document","NAVIGATOR","location","readyFn","Graph","ready","VERSION","AUTHOR","cached","config","base","locale","svg","version","xmlns","xlink","html","font","family","line","resizer","image","rotator","setup","name","isPlainObject","extend","string","ID_VECTOR","ID_SHAPE","ID_LINK","ID_PORT","styles","VECTOR","PAPER","VIEWPORT","SHAPE","SHAPE_BLOCK","SHAPE_LABEL","SHAPE_HEADER","SHAPE_CHILD","SHAPE_DRAG","LINK_HEAD","LINK_TAIL","icons","ZOOM_IN","ZOOM_OUT","ZOOM_RESET","SHAPE_LANE","SHAPE_LINK","SHAPE_ACTION","SHAPE_ROUTER","LANE_ABOVE","LANE_BELOW","CONFIG","LINK","TRASH","SEND_TO_BACK","SEND_TO_FRONT","MOVE_UP","MOVE_DOWN","ROUTER_OR","ROUTER_XOR","ROUTER_NONE","ROUTER_PARALLEL","doc","isHTML","obj","HTMLElement","isSVG","SVGElement","isElement","dom","Element","isMac","test","platform","ns","namespace","lookup","clazz","current","parts","split","parent","uuid","c","random","toString","hash","str","l","hval","charCodeAt","substr","create","superclass","props","factory","args","bind","expand","target","source","scope","tproto","constructor","sproto","defaultTo","forOwn","isUndefined","lang","Class","mixin","this","group","token","credit","join","remove","debounce","v","memoize","func","memo","param","cache","saved","ii","defer","$","Deferred","when","paper","width","height","options","Paper","type","capitalize","shape","names","chunk","lastIndexOf","layout","router","link","plugin","proto","diagram","util","pallet","topic","subscribers","publish","message","subs","lsnr","forEach","handler","call","subscribe","unsub","h","s","sub","unsubscribe","find","u","graphConfig","on","e","vector","data","registry","get","guid","event","isNavigation","originalType","fire","ctrlKey","cmdKey","keyCode","C","V","evt","timer","removeEventListener","readyState","loaded","inspect","delay","clearTimeout","addEventListener","REGEX_POLY_STR","LEGENDRE_T","LEGENDRE_C","deg","rad","round","PI","angle","dx","dy","y","atan2","theta","toFixed","taxicab","hypo","va","vb","sqrt","sign","num","quadrant","gradient","Infinity","snapValue","snaps","range","abs","rem","pointbox","padding","x1","y1","x2","y2","pointAlign","treshold","pointDistance","isPointEquals","isPointOnLine","p","det","dis","polar2point","distance","radian","origin","point","cos","sin","isBoxContainsPoint","box","isBoxIntersect","fn","boxOrientation","box1","box2","top","rgt","btm","lft","ver","hor","expandBox","groupBox","boxes","min","max","midpoint","movepoint","tr","lineBendpoints","dir","xm","ym","points","lineIntersection","x3","y3","x4","y4","nx","ny","denominator","px","py","px2","py2","perpendicular","m1","m2","tt","hp","atan","mx","my","iy","points2path","segments","map","segments2path","path2points","command","path2segments","sizes","m","q","z","cloneDeep","cmd","val","polygon2dots","$0","polygon2path","dots","transform2segments","valid","matrix","translate","rotate","scale","skewX","skewY","transform","matches","curvebox","x0","y0","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","j","jlen","curveLength","sum","ct","xb","curvePolynom","yb","co","n1","n2","n3","n4","curveInterval","step","pointAtInterval","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","t13","pow","t12","t3","ax","ay","cx","cy","alpha","n","start","end","curveIntersection","count","bon1","bon2","nres","ares","l1","l2","dots1","dots2","xy","di","di1","dj","dj1","ci","cj","is","convexSegment","prev","next","radius","d1","d2","cp","c1","c2","dr","smoothSegment","context","eventType","once","priority","eventNames","eventRoot","listeners","original","unbind","eventRegex","cachedRegex","rgex","RegExp","escapeRegExp","_super","_proto","_constructor","_definition","_class","_classopt","Object","__initialized__","_superopt","_superclass","merge","one","off","batch","eventObject","onces","isString","Event","originalData","publisher","slice","Err","Error","err","stack","error","isError","Evt","cancelBubble","defaultPrevented","propagationStopped","immediatePropagationStopped","init","assign","stopPropagation","stopImmediatePropagation","preventDefault","isEvent","ESC","ENTER","DELETE","SHIFT","CTRL","CMD","fix","originalEvent","position","clientX","clientY","relative","clone","invert","navs","code","isPrimaryButton","button","hasPrimaryModifier","metaKey","hasSecondaryModifier","shiftKey","jQuery","snap","Point","tmp","trim","toNumber","manhattan","toJson","triangle","difference","alignment","bbox","bearing","Line","bear","dec","equals","polar","adhereToBox","contains","stringify","sep","toValue","isPoint","lat1","lat2","lon1","lon2","deltaLon","intersect","intersection","isLine","Curve","unshift","pointAt","json","curve","intersectnum","isCurve","BBox","prop","Path","simple","center","corner","dot","contain","isVector","vertices","isBBox","dw","dh","tbox","me","bdat","tdat","sideNearestPoint","tx","ty","tw","th","distToLeft","distToRight","distToTop","distToBottom","closest","side","pointNearestPoint","fixsegment","segment","attr","tq","T","Q","qx","qy","X","Y","arc2curve","bx","by","quad2curve","line2curve","cat2bezier","def","rx","ry","large_arc_flag","sweep_flag","recursive","_120","res","f1","f2","rx2","ry2","asin","df","f2old","x2old","y2old","s1","s2","tan","hx","hy","m3","m4","path1","path2","x1m","y1m","x2m","y2m","bz1","bz2","cv1","cv2","si","sj","inter","ss1","ln1","ss2","ln2","kk","segment1","segment2","bezier1","bezier2","isPath","absolute","seg","itm","toUpperCase","toUpper","jj","pop","ll","head","tail","toLower","com","pi","curve2curve","fixmove2","segments1","segments2","a1","a2","p1","p2","com1","com2","attrs2","pcom","fixArc2","xmin","ymin","xmax","ymax","lengthAt","ps","segmentAt","total","sp","path","vs","addVertext","vertext","isSimple","vx","vy","nearest","best","bestlen","currpoint","currdist","tolerance","bestdist","prevlen","nextlen","prevdist","nextdist","moveTo","lineTo","append","maxs","Matrix","chr","multiply","isMatrix","delta","sx","sy","determinant","radSkewX","cosSkewX","sinSkewX","scaleX","scaleY","toFilter","Collection","collection","items","item","first","last","clear","modify","each","iteratee","Vector","vectors","has","id","not","filter","o","offset","pull","reverse","methods","method","Shape","shapes","keys","identity","component","Tree","nodes","node","bisect","keygen","order","sort","root","cascade","bubble","Link","links","domParser","REGEX_SVG_BUILDER","selector","query","fragment","element","DOMParser","parseFromString","documentElement","childNodes","deep","cloneNode","E","pseudo","belong","setAttributeNS","setAttribute","outerHeight","margin","show","hide","getBoundingClientRect","css","addClass","classes","values","chain","className","baseVal","uniq","removeClass","hasClass","prepend","appendTo","prependTo","before","after","detach","types","trigger","text","focus","select","createRange","getSelection","selectNodeContents","selection","removeAllRanges","addRange","contextmenu","state","empty","scrollTop","scrollLeft","child","children","curr","parentNode","nodeName","tree","container","traversable","selectable","focusable","snappable","selected","rendered","attrs","style","class","plugins","transformer","collector","definer","animator","reactor","dragger","dropper","network","history","panzoom","toolmgr","toolpad","snapper","editor","graph","bboxView","bboxPristine","bboxOriginal","matrixCurrent","matrixView","shapeOriginal","shapeView","elem","createElementNS","Transformer","onTransformerAfterTranslate","onTransformerAfterRotate","onTransformerAfterScale","isPaper","ToolManager","onActivateTool","onDeactivateTool","register","viewport","viewportGuid","native","getCTM","refresh","reset","removeAttr","dirty","invalidate","interactable","Reactor","animable","Animator","animstart","animating","animend","resizable","Resizer","beforeresize","onResizerBeforeResize","afterresize","onResizerAfterResize","rotatable","Rotator","afterrotate","onRotatorAfterRotate","draggable","Dragger","beforedrag","onDraggerStart","drag","onDraggerMove","afterdrag","onDraggerEnd","zoomable","Panzoom","droppable","Dropper","dropenter","onDropperEnter","dropleave","onDropperLeave","connectable","Network","clickable","editable","Editor","beforeedit","edit","isBoolean","enabled","getDefaultInstance","removeAttribute","cursor","predicate","added","removed","removal","pullAll","vmatrix","vrotate","rmatrix","rcenter","shapeRelative","parentMatrix","ma","pa","dt","dimension","getBBox","clientLeft","clientTop","clientWidth","clientHeight","bottom","nbox","pbox","elems","render","sibling","isViewport","setContext","attach","isContainer","isRendered","isTraversable","relocate","resetMatrix","targetMatrix","applyMatrix","ancestors","descendants","deselect","destroy","unregister","initial","add","isResizable","resume","isRotatable","suspend","_collector","animate","duration","easing","callback","label","sendToFront","sendToBack","resize","isGroup","isSelectable","isDraggable","isConnectable","isSnappable","isSelected","tool","master","syncBeforeDrag","syncDrag","syncAfterDrag","Ellipse","gx","gy","commit","bb","magnify","Circle","ar","Rect","origpath","w","ms","mr","ro","rd","ox","oy","Polyline","Polygon","Group","stroke","stroke-width","fill","Text","text-anchor","lineHeight","fontSize","rows","font-size","write","onTextRender","addSpan","span","arrange","wrap","word","words","lines","lineNo","getComputedTextLength","textBox","targetBox","Image","preserveAspectRatio","src","xlink:href","align","aspect","showOrigin","components","manager","xmlns:link","overflow","initLayout","Collector","linker","Linker","pencil","Pencil","Definer","Snapper","Toolpad","clipper","Clipper","Manager","listenLinkChange","listenLinkAfterDestroy","defaultInstance","vp","flush","activate","locateLink","locateShape","arrangeLinks","ellipse","circle","rect","polyline","polygon","arg","storage","Registry","tagName","collect","wipe","pid","hasOwnProperty","Layout","fit","view","smooth","smoothness","grabVector","grabLink","pointerLocation","pointer","screenLocation","coord","screen","getScreenCTM","dragSnapping","mode","routerType","createRouter","createLink","convex","idx","sweeper","Sweeplink","findConvex","reloadConvex","removeConvex","arrangeShapes","Router","domain","waypoints","bendpoints","bending","connect","execute","route","repair","port","initTrans","updateTrans","trans","connecting","stopTrans","portCentering","axis","porting","routes","cable","sortIntersection","isRepairable","getSegmentIndex","sortBy","floor","getClosestIntersect","repairBendpoint","bend","oldport","newport","repairRoutes","bound1","bound2","clonedRoutes","tidyRoutes","Directed","space","sourceNetwork","sourceBBox","sourceBox","targetNetwork","targetBBox","orient","orientation","direct","direction","tuneup","sdot","edot","maxlen","sourcePath","targetPath","rangeStart","rangeEnd","segmentStart","segmentEnd","oldSource","oldTarget","align1","align2","cropBinding","srcport","tarport","cropped","cropConnect","changed","Orthogonal","croping","bends","repaired","ranges","snapH","snapV","sourceBound","targetBound","segmentAlign","q1","q2","newStart","newEnd","sourceOrient","targetOrient","dotlen","newRangeStart","cropBending","getHandler","resource","labelDistance","connected","block","coat","controls","handlers","metadata","icon","initComponent","initMetadata","bindResource","onRouterRoute","onRouterReroute","excludes","router_type","client_id","client_source","client_target","diagram_id","source_id","target_id","maps","label_distance","comp","ghost","manual","batchSync","onCoatClick","onCoatSelect","onCoatDeselect","onCoatBeforeDrag","onCoatAfterDrag","onCoatEdit","onCoatBeforeEdit","onCoatAfterDestroy","onLabelRender","onLabelAfterDrag","vendor","onLabelDoubletap","tools","title","onConfigToolClick","onFrontToolClick","onBackToolClick","onTrashToolClick","unbindResource","existing","beforedestroy","bindSource","bindTarget","unbindSource","unbindTarget","connectByCommand","disconnect","reload","redraw","silent","bound","componentLabel","componentCoat","single","clearCollection","renderControl","resumeControl","suspendControl","relocateHead","relocateTail","isConnected","sourceShape","targetShape","sourceType","targetType","near","startEdit","showControl","onSourceAfterRotate","oport","nport","onSourceSelect","onSourceBeforeDrag","onSourceDrag","console","warn","onSourceAfterDrag","onSourceAfterResize","onSourceBeforeDestroy","onTargetAfterRotate","onTargetSelect","onTargetBeforeDrag","onTargetDrag","onTargetAfterDrag","onTargetAfterResize","onTargetBeforeDestroy","linkid","controlImage","controlSize","control","onControlStart","onControlMove","onControlEnd","snaphor","snapver","conseg","ss","createTree","findIndex","swap","queue","found","process","extract","indexA","indexB","minIndex","intercept","KEY_TRESHOLD","validate","lineA","lineB","alignA","alignB","ix","isOverlap","isIntersection","Plugin","activator","enable","disable","installed","install","getPluginHandler","uninstall","definitions","holder","defineArrowMarker","defineCircleMarker","marker","vendors","interact","currentTarget","dropzone","gesturable","unset","actions","simulate","events","mat","act","inv","equalizeTransform","tt1","tt2","maxlength","emptyTransform","equal","stacks","keyframes","Animation","scenes","animation","100","frame","pause","stop","status","asize","scene","time","playing","applied","ssize","at","initstatus","Date","inverse","able","defaults","eq","semantic","timestamp","player","play","prog","anim","tick","paused","ease","played","repeat","g","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","frames","pickBy","times","linier","easeIn","easeOut","easeInOut","backIn","backOut","elastic","math","bounce","getRestrictOrigin","handle","suspended","restriction","handleImage","handleSize","helper","ow","oh","cw","ch","snapping","onHolderRender","ne","se","sw","nw","onHandleBeforeDrag","onHandleDrag","onHandleAfterDrag","hs","hw","hh","restrict","setupRestriction","MAX_VALUE","Number","MAX_SAFE_INTEGER","oldcen","newcen","vdx","vdy","suspendHelper","handleNode","resizing","manualStart","onstart","resumeHelper","onmove","edx","edy","onend","vcenter","drotate","interaction","pointerIsDown","interacting","prepared","setEventXY","startCoords","pointers","rpath","vpath","cmp","rubber","collecting","onKeynavDown","onKeynavUp","styleCursor","action","decollect","syncdrag","tdx","tdy","inertia","grid","cls","rotation","scaling","dragging","onVectorRender","onDragStart","onDragMove","onDragEnd","onPointerDown","fixsnap","createSnapGrid","setOptions","targets","endOnly","resetSnap","moveHandler","onPointerMove","edata","axs","pageX","pageY","overlap","accept","checker","onDropValidate","ondropactivate","onDropActivate","ondropdeactivate","onDropDeactivate","ondragenter","onDragEnter","ondragleave","onDragLeave","ondrop","onDrop","edrop","edrag","dropped","dropel","dragel","wiring","tuning","limitIncoming","limitOutgoing","linking","pole","cables","pairs","invalidateTrans","relatedTarget","canConnect","removeLink","isSource","isTarget","sourceVector","targetVector","paperLayout","beforeDestroyHandler","onLinkBeforeDestroy","addLink","connectByLinker","connections","connectionsLength","disconnected","linkIds","conn","pair","repairLinks","log","hasConnection","conns","opts","outgoing","incoming","History","limit","save","lim","drop","go","back","zoomRange","panEnabled","zoomEnabled","showToolbox","caching","scrolling","steps","zooming","zoom","toolbox","panning","stopHandler","onMouseWheel","revalidate","zoomReset","zoomIn","zoomOut","currentZoom","zoomType","factor","currentScale","matrixScale","onBeforeZoom","onZoom","scroll","onBeforeScroll","onScroll","vscroll","hscroll","deltaMode","deltaX","deltaY","altKey","onPointerStop","leading","trailing","visits","anchor","build","sbox","cropping","spath","scrop","tpath","tcrop","crop","utils","deactivateAll","deactivate","except","toggle","writing","startHandler","drawShape","editing","commitHandler","onDoubleTap","vbox","coords","snapped","clients","stubx","stuby","clientId","client","getClientCenter","beforeDragHandler","afterDragHandler","afterDestroyHandler","osnaps","onClientBeforeDrag","onClientAfterDrag","onClientAfterDestroy","repairClient","showStub","hideStub","stub","pt","diffx","diffy","snapx","snapy","pad","onShapeSelect","onShapeDeselect","onLinkSelect","onLinkDeselect","onShapeToolClick","onLinkToolClick","meta","body","copy","paste","clips","cut","clip","alias","strokeWidth","client_parent","client_pool","parent_id","stroke_width","update","suspendLayout","resumeLayout","hasChild","addChild","placeTarget","onChildBeforeDestroy","removeChild","shapeComponent","onChildAfterDrag","connectHandler","onChildConnect","autoResize","paperGuid","blockComponent","childComponent","pool","linkData","onLabelEdit","onBeforeDrag","capture","onAfterDrag","shapeMatrix","blockMatrix","onAfterRotate","shapeRotate","onSelect","onDeselect","onConnect","onAfterResize","onBeforeDestroy","onAfterDestroy","isShape","activity","Start","pmgr","Final","inner","Action","onModeClick","Fork","Join","Lane","header","transfer","initDropzone","onAboveToolClick","onBelowToolClick","onUpToolClick","onDownToolClick","onBeforeResize","Pool","onTransferEnd","poolGuid","laneGuid","appended","lanes","addSiblingBellow","bringToFront","childBox","lane","offsetWidth","offsetLeft","offsetTop","createSpaceBellow","boxAfter","boxBefore","netcom","relocateLinks","refreshSnapper","createSiblingAbove","createSpaceAbove","createSiblingBellow","actualBBox","populateChildren","childOffsets","resizeBy","sourceParent","targetParent","sourcePool","targetPool","populateLinks","isolated","separated","relocateSiblings","refreshContents","refreshChildren","laneChildComponent","laneChildBox","moveUp","moveDown","contents","laneIndex","comnet","dx1","dx2","dy1","dy2","sets","laneNode","prevNode","laneBox","prevBox","nextNode","nextBox","populateContents","connectableBlock","contentKeys","pairVector","pairShape","common","Label","labelBox","encoded","encodeURIComponent","String","fromCharCode","decodeURIComponent","download","uri","msSaveOrOpenBlob","blob","createBlob","href","display","appendChild","click","open","byteString","atob","mimeString","buffer","ArrayBuffer","intArray","Uint8Array","Blob","exportImage","createDataURI","onload","canvas","createElement","getContext","background","fillStyle","fillRect","drawImage","toDataURL","encoder","compression","onerror","createData","sty","xml","cloned","getElementStyles","innerHTML","insertBefore","XMLDOC","btoa","rules","rule","styleSheets","cssRules","selectorText","querySelector","cssText","Exporter","exportDataURI","exportSVG","filename","createEvent","initEvent","dispatchEvent","createEventObject","fireEvent","exportJPEG","exportPNG","exportFile","exportBlob","defaultType","pallets","snapshoot","deselectAll","removeSelection","undo","redo","addPallet","drawing","pick","movable","stopPicking","saveAsImage","exporter","saveAsFile","saveAsBlob","traverse","Parser","_props","_shapes","_links","_tree","parse","Pallet","Activity","picking","begin","template","dragStart","dragStop","dragMove","popup","Dialog","opened","backdrop","backdrop_click","buttons","onclick","close","backdropUser","margin-top","margin-left","dialog"],"mappings":"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","file":"graph.min.js","sourcesContent":["\r\n(function(){\r\n\r\n    /**\r\n     * Lodash polyfill\r\n     */\r\n\r\n    _.float = parseFloat;\r\n\r\n    _.gcd = function(array) {\r\n        if (array.length === 2) {\r\n            var a = array[0], b = array[1], t;\r\n\r\n            while (b > 0) {\r\n                t = b;\r\n                b = a % b;\r\n                a = t;\r\n            }\r\n\r\n            return a;\r\n        } else {\r\n            var r = array[0], len = array.length, i;\r\n            for (i = 1; i < len; i++) {\r\n                r = _.gcd([r, array[i]]);\r\n            }\r\n            return r;\r\n        }\r\n    };\r\n\r\n    _.lcm = function(array) {\r\n        if (array.length === 2) {\r\n            var a = array[0], b = array[1];\r\n            return a * (b / _.gcd([a, b]));\r\n        } else {\r\n            var r = array[0], len = array.length, i;\r\n            for (i = 1; i < len; i++) {\r\n                r = _.lcm([r, array[i]]);\r\n            }\r\n            return r;\r\n        }\r\n    };\r\n\r\n    _.format = function() {\r\n        var params = _.toArray(arguments),\r\n            format = params.shift();\r\n        return format.replace(/{(\\d+)}/g, function(match, number) {\r\n            return typeof params[number] != 'undefined'\r\n                ? params[number]\r\n                : match;\r\n        });\r\n    }\r\n\r\n    _.insert = function(array, index, insert) {\r\n        Array.prototype.splice.apply(array, [index, 0].concat(insert));\r\n        return array;\r\n    };\r\n\r\n    /**\r\n     * Array move (swap)\r\n     * http://stackoverflow.com/questions/5306680/move-an-array-element-from-one-array-position-to-another/5306832#5306832\r\n     */\r\n    _.move = function(array, from, to) {\r\n        var size = array.length;\r\n        \r\n        while(from < 0) {\r\n            from += size;\r\n        }\r\n        \r\n        while(to < 0) {\r\n            to += size;\r\n        }\r\n\r\n        if (to >= size) {\r\n            var k = to - size;\r\n            while((k--) + 1) {\r\n                array.push(undefined);\r\n            }\r\n        }\r\n\r\n        array.splice(to, 0, array.splice(from, 1)[0]);\r\n        return array;\r\n    };\r\n\r\n    /**\r\n     * Array permutation\r\n     * https://github.com/lodash/lodash/issues/1701\r\n     */\r\n    _.permute = function(array, permuter) {\r\n        if(_.isFunction(permuter)) {\r\n            return _.reduce(array, function(result, value, key){\r\n                result[permuter(key, value)] = value;\r\n                return result;\r\n            }, []);\r\n        } else if (_.isArray(permuter)) {\r\n            return _.reduce(permuter, function(result, value, key){\r\n                result[key] = array[permuter[key]];\r\n                return result;\r\n            }, []);\r\n        }\r\n        return array;\r\n    };  \r\n    \r\n    /**\r\n     *  Bisector\r\n     *  https://github.com/d3/d3-array/blob/master/src/bisector.js\r\n     */\r\n    function ascending(a, b) {\r\n        return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\r\n    }\r\n\r\n    function descending(a, b) {\r\n        return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\r\n    }\r\n\r\n    function bisector(compare) {\r\n        return {\r\n            left: function(a, x, lo, hi) {\r\n                if (arguments.length < 3) lo = 0;\r\n                if (arguments.length < 4) hi = a.length;\r\n                while (lo < hi) {\r\n                    var mid = lo + hi >>> 1;\r\n                    if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\r\n                }\r\n                return lo;\r\n            },\r\n            right: function(a, x, lo, hi) {\r\n                if (arguments.length < 3) lo = 0;\r\n                if (arguments.length < 4) hi = a.length;\r\n                while (lo < hi) {\r\n                    var mid = lo + hi >>> 1;\r\n                    if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\r\n                }\r\n                return lo;\r\n            }\r\n        };\r\n    }\r\n\r\n    _.bisector = function(f) {\r\n        return bisector(f.length === 1 ? function(d, x){\r\n            return ascending(f(d), x);\r\n        } : f);\r\n    };\r\n    \r\n    /** \r\n     *  Sorter\r\n     *  https://github.com/gka/d3-jetpack/blob/master/d3-jetpack.js\r\n     */\r\n    _.ascendingKey = function(key) {\r\n        return typeof key == 'function' ? function (a, b) {\r\n            return key(a) < key(b) ? -1 : key(a) > key(b) ? 1 : key(a) >= key(b) ? 0 : NaN;\r\n        } : function (a, b) {\r\n            return a[key] < b[key] ? -1 : a[key] > b[key] ? 1 : a[key] >= b[key] ? 0 : NaN;\r\n        };\r\n    };\r\n\r\n    _.isIE = function() {\r\n        var na = global.navigator,\r\n            ua = (na && na.userAgent || '').toLowerCase(),\r\n            ie = ua.indexOf('MSIE ');\r\n\r\n        if (ie > 0 || !!ua.match(/Trident.*rv\\:11\\./)) {\r\n            return parseInt(ua.substring(ie + 5, ua.indexOf('.', ie)));\r\n        }\r\n        return false;\r\n    };\r\n\r\n}());","\r\n//////////////////////////////////////////////////////////////////\r\n/*\r\n * Graph - SVG Library\r\n * Documentation visit: https://github.com/londomloto/graph\r\n *\r\n * @author londomloto <roso.sasongko@gmail.com>\r\n * @author londomloto <roso@kct.co.id>\r\n */\r\n//////////////////////////////////////////////////////////////////\r\n\r\n(function(){\r\n\r\n    var GLOBAL = typeof window != 'undefined' && \r\n                 window.Math == Math \r\n                    ? window \r\n                    : (typeof self != 'undefined' && self.Math == Math \r\n                        ? self \r\n                        : Function('return this')());\r\n\r\n    var DOCUMENT  = document;\r\n    var LOCATION  = location;\r\n    var NAVIGATOR = navigator;\r\n\r\n    /**\r\n     * Size for cached result\r\n     */\r\n    var CACHE_SIZE = 100;\r\n\r\n    /**\r\n     * Size for memoize function\r\n     */\r\n    var MEMO_SIZE = 1000;\r\n\r\n    //--------------------------------------------------------------------//\r\n    \r\n    var readyFn = [];\r\n\r\n    /**\r\n     * Banner\r\n     */\r\n    GLOBAL.Graph = function(ready) {\r\n        readyFn.push(ready);\r\n    };\r\n\r\n    Graph.VERSION = '1.0.0';\r\n    \r\n    Graph.AUTHOR = 'Kreasindo Cipta Teknologi';\r\n    \r\n    /**\r\n     * Config\r\n     */\r\n    Graph.cached = {};\r\n\r\n    Graph.config = {\r\n        base: '../',\r\n        locale: 'id',\r\n        svg: {\r\n            version: '1.1'\r\n        },\r\n        xmlns: {\r\n            svg: 'http://www.w3.org/2000/svg',\r\n            xlink: 'http://www.w3.org/1999/xlink',\r\n            html: 'http://www.w3.org/1999/xhtml'\r\n        },\r\n        font: {\r\n            family: 'Segoe UI',\r\n            size: '12px',\r\n            line: 1\r\n        },\r\n        resizer: {\r\n            image: 'resize-control.png',\r\n            size: 17\r\n        },\r\n        rotator: {\r\n            image: 'rotator.png',\r\n            size: 21\r\n        }\r\n    };\r\n\r\n    Graph.setup = function(name, value) {\r\n        if (_.isPlainObject(name)) {\r\n            _.extend(Graph.config, name);\r\n        } else {\r\n            Graph.config[name] = value;\r\n        }\r\n    };\r\n\r\n    // Graph.toString = function() {\r\n    //     return 'SVG Library presented by ' + Graph.AUTHOR;\r\n    // }\r\n    \r\n\r\n    /**\r\n     * String params\r\n     */\r\n    Graph.string = {\r\n        ID_VECTOR: 'graph-vector-id',\r\n        ID_SHAPE: 'graph-shape-id',\r\n        ID_LINK: 'graph-link-id',\r\n        ID_PORT: 'graph-port-id'\r\n    };\r\n\r\n    /**\r\n     * Style params\r\n     */\r\n    Graph.styles = {\r\n        VECTOR: 'graph-elem',\r\n        PAPER: 'graph-paper',\r\n        VIEWPORT: 'graph-viewport',\r\n\r\n        SHAPE: 'graph-shape',\r\n        SHAPE_BLOCK: 'comp-block',\r\n        SHAPE_LABEL: 'comp-label',\r\n        SHAPE_HEADER: 'comp-header',\r\n        SHAPE_CHILD: 'comp-child',\r\n        SHAPE_DRAG: 'shape-draggable',\r\n\r\n        LINK_HEAD: 'graph-link-head',\r\n        LINK_TAIL: 'graph-link-tail'\r\n    };\r\n\r\n    /**\r\n     * Icon params\r\n     */\r\n    Graph.icons = {\r\n        ZOOM_IN: 'ion-android-add',\r\n        ZOOM_OUT: 'ion-android-remove',\r\n        ZOOM_RESET: 'ion-pinpoint',\r\n\r\n        SHAPE: 'bpmn-icon-start-event-none',\r\n        SHAPE_LANE: 'bpmn-icon-participant',\r\n        SHAPE_LINK: 'ion-android-share-alt',\r\n        SHAPE_ACTION: 'bpmn-icon-task',\r\n        SHAPE_ROUTER: 'bpmn-icon-gateway-none',\r\n\r\n        LANE_ABOVE: 'bpmn-icon-lane-insert-above',\r\n        LANE_BELOW: 'bpmn-icon-lane-insert-below',\r\n\r\n        CONFIG: 'bpmn-icon-screw-wrench',\r\n        LINK: 'bpmn-icon-connection-multi',\r\n        TRASH: 'bpmn-icon-trash',\r\n\r\n        SEND_TO_BACK: 'font-icon-send-back',\r\n        SEND_TO_FRONT: 'font-icon-bring-front',\r\n\r\n        MOVE_UP: 'ion-android-arrow-up',\r\n        MOVE_DOWN: 'ion-android-arrow-down',\r\n\r\n        ROUTER_OR: 'bpmn-icon-gateway-or',\r\n        ROUTER_XOR: 'bpmn-icon-gateway-xor',\r\n        ROUTER_NONE: 'bpmn-icon-gateway-none',\r\n        ROUTER_PARALLEL: 'bpmn-icon-gateway-parallel'\r\n    };\r\n\r\n    Graph.doc = function() {\r\n        \r\n    };\r\n\r\n    Graph.global = function() {\r\n        \r\n    };  \r\n\r\n    /**\r\n     * Language & Core helper\r\n     */\r\n    \r\n    Graph.isHTML = function(obj) {\r\n        return obj instanceof HTMLElement;\r\n    };\r\n\r\n    Graph.isSVG = function(obj) {\r\n        return obj instanceof SVGElement;\r\n    };\r\n\r\n    Graph.isElement = function(obj) {\r\n        return obj instanceof Graph.dom.Element;\r\n    };\r\n\r\n    Graph.isMac = function() {\r\n        return (/mac/i).test(NAVIGATOR.platform);    \r\n    };\r\n\r\n    Graph.ns = function(namespace) {\r\n        var cached = Graph.lookup('Graph', 'ns', namespace);\r\n\r\n        if (cached.clazz) {\r\n            return cached.clazz;\r\n        }\r\n\r\n        var parts = _.split(namespace, '.'),\r\n            parent = GLOBAL,\r\n            len = parts.length,\r\n            current,\r\n            i;\r\n\r\n        for (i = 0; i < len; i++) {\r\n            current = parts[i];\r\n            parent[current] = parent[current] || {};\r\n            parent = parent[current];\r\n        }\r\n\r\n        if (_.isFunction(parent)) {\r\n            cached.clazz = parent;\r\n        }\r\n\r\n        return parent;\r\n    };\r\n\r\n    Graph.uuid = function() {\r\n        // credit: http://stackoverflow.com/posts/2117523/revisions\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n            var r = Math.random() * 16|0;\r\n            var v = c == 'x' ? r : (r&0x3|0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Simple hashing\r\n     * http://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript-jquery\r\n     */\r\n    Graph.hash = function(str) {\r\n        var hval = 0x811c9dc5, i, l;\r\n        \r\n        for (i = 0, l = str.length; i < l; i++) {\r\n            hval ^= str.charCodeAt(i);\r\n            hval += (hval << 1) + (hval << 4) + (hval << 7) + (hval << 8) + (hval << 24);\r\n        }\r\n\r\n        return ('0000000' + (hval >>> 0).toString(16)).substr(-8);\r\n\r\n        // var hash = 0, chr, len, i;\r\n        \r\n        // if ( ! str.length) {\r\n        //     return hash;\r\n        // }\r\n\r\n        // for (i = 0, len = str.length; i < len; i++) {\r\n        //     chr   = str.charCodeAt(i);\r\n        //     hash  = ((hash << 5) - hash) + chr;\r\n        //     hash |= 0;\r\n        // }\r\n\r\n        // return hash;\r\n    };\r\n\r\n    // prepare for prototypal factory\r\n    Graph.create = function(superclass, props) {\r\n        \r\n    };\r\n\r\n    Graph.factory = function(clazz, args) {\r\n        args = [clazz].concat(args);\r\n        return new (Function.prototype.bind.apply(clazz, args));\r\n    };\r\n\r\n    Graph.expand = function(target, source, scope) {\r\n        var tproto = target.constructor.prototype,\r\n            sproto = source.constructor.prototype;\r\n\r\n        scope = _.defaultTo(source);\r\n\r\n        _.forOwn(sproto, function(value, key){\r\n            if (_.isFunction(value) && _.isUndefined(tproto[key])) {\r\n                (function(key, value){\r\n                    tproto[key] = _.bind(value, scope);\r\n                }(key, value));    \r\n            }\r\n        });\r\n    };\r\n\r\n    Graph.extend = function(clazz, props) {\r\n        if (_.isPlainObject(clazz)) {\r\n            props = clazz;\r\n            clazz = Graph.lang.Class;\r\n        }\r\n        return clazz.extend(props);\r\n    };\r\n\r\n    Graph.mixin = function(target, source) {\r\n        this.extend(target, source, target);\r\n    };\r\n\r\n    Graph.lookup = function(group, token) {\r\n        var args = _.toArray(arguments), cached, credit;\r\n\r\n        group  = args.shift();\r\n        token  = _.join(args, '|');\r\n        cached = Graph.cached[group] = Graph.cached[group] || {};\r\n        credit = group == 'Regex.event' ? null : CACHE_SIZE;\r\n\r\n        if (cached[token]) {\r\n            cached[token].credit = credit;\r\n        } else {\r\n            cached[token] = {\r\n                credit: credit,\r\n                remove: (function(group, token){\r\n                    return function() {\r\n                        delete Graph.cached[group][token];    \r\n                    };\r\n                }(group, token))\r\n            }\r\n        }\r\n\r\n        _.debounce(function(t){\r\n            _.forOwn(cached, function(v, k){\r\n                if (k != t) {\r\n                    if (cached[k].credit !== null) {\r\n                        cached[k].credit--;\r\n                        if (cached[k].credit <= 0) {\r\n                            delete cached[k];\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        })(token);\r\n\r\n        return cached[token];\r\n    };\r\n\r\n    Graph.memoize = function(func) {\r\n        return function memo() {\r\n            var param = _.toArray(arguments),\r\n                token = _.join(param, \"\\u2400\"),\r\n                cache = memo.cache = memo.cache || {},\r\n                saved = memo.saved = memo.saved || [];\r\n\r\n            if ( ! _.isUndefined(cache[token])) {\r\n                for (var i = 0, ii = saved.length; i < ii; i++) {\r\n                    if (saved[i] == token) {\r\n                        saved.push(saved.splice(i, 1)[0]);\r\n                        break;\r\n                    }\r\n                }\r\n                return cache[token];\r\n            }\r\n\r\n            if (saved.length >= MEMO_SIZE) {\r\n                delete cache[saved.shift()];\r\n            }\r\n\r\n            saved.push(token);\r\n            cache[token] = func.apply(this, param);\r\n\r\n            return cache[token];\r\n        }\r\n    };\r\n\r\n    Graph.defer = function() {\r\n        return $.Deferred();\r\n    };\r\n\r\n    Graph.when = $.when;\r\n\r\n    /**\r\n     * Vector\r\n     */\r\n    Graph.paper = function(width, height, options) {\r\n        return Graph.factory(Graph.svg.Paper, [width, height, options]);\r\n    };\r\n\r\n    Graph.svg = function(type) {\r\n        var args = _.toArray(arguments), svg;\r\n\r\n        type = args.shift();\r\n        svg = Graph.factory(Graph.svg[_.capitalize(type)], args);\r\n        args = null;\r\n        \r\n        return svg;\r\n    };\r\n\r\n    Graph.shape = function(names, options) {\r\n        var clazz, shape, chunk;\r\n\r\n        chunk = names.lastIndexOf('.');\r\n        names = names.substr(0, chunk) + '.' + _.capitalize(names.substr(chunk + 1));\r\n        clazz = Graph.ns('Graph.shape.' + names);\r\n        shape = Graph.factory(clazz, options);\r\n\r\n        chunk = names = clazz = null;\r\n        return shape;\r\n    };\r\n\r\n    /**\r\n     * Layout\r\n     */\r\n    Graph.layout = function(type) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Router\r\n     */\r\n    Graph.router = function(type) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Link / Connector\r\n     */\r\n    Graph.link = function(type) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Plugin\r\n     */\r\n    Graph.plugin = function(proto) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Diagram\r\n     */\r\n    Graph.diagram = function(name, options) {\r\n        var clazz, diagram;\r\n        clazz = Graph.diagram.type[_.capitalize(name)];\r\n        return Graph.factory(clazz, [options]);\r\n    };\r\n\r\n    Graph.diagram.type = {};\r\n    Graph.diagram.util = {};\r\n    Graph.diagram.pallet = {};\r\n\r\n    /**\r\n     * Pallet\r\n     */\r\n    Graph.pallet = function(type, options) {\r\n        var clazz;\r\n        clazz = Graph.diagram.pallet[_.capitalize(type)];\r\n        return Graph.factory(clazz, [options]);\r\n    };\r\n    \r\n    /**\r\n     * Topic\r\n     */\r\n    Graph.topic = {\r\n        subscribers: {\r\n\r\n        },\r\n        publish: function(topic, message, scope) {\r\n            var subs = Graph.topic.subscribers,\r\n                lsnr = subs[topic] || [];\r\n\r\n            _.forEach(lsnr, function(handler){\r\n                if (handler) {\r\n                    handler.call(null, message, scope);  \r\n                }\r\n            });\r\n        },\r\n\r\n        subscribe: function(topic, handler) {\r\n\r\n            if (_.isPlainObject(topic)) {\r\n                var unsub = [];\r\n\r\n                _.forOwn(topic, function(h, t){\r\n                    (function(t, h){\r\n                        var s = Graph.topic.subscribe(t, h);\r\n                        unsub.push({topic: t, sub: s});\r\n                    }(t, h));\r\n                });\r\n\r\n                return {\r\n                    unsubscribe: (function(unsub){\r\n                        return function(topic) {\r\n                            if (topic) {\r\n                                var f = _.find(unsub, function(u){\r\n                                    return u.topic == topic;\r\n                                });\r\n                                f && f.sub.unsubscribe();\r\n                            } else {\r\n                                _.forEach(unsub, function(u){\r\n                                    u.sub.unsubscribe();\r\n                                });\r\n                            }\r\n                        };\r\n                    }(unsub))\r\n                };\r\n            }\r\n\r\n            var subs = Graph.topic.subscribers, data;\r\n\r\n            subs[topic] = subs[topic] || [];\r\n            subs[topic].push(handler);\r\n\r\n            return {\r\n                unsubscribe: (function(topic, handler){\r\n                    return function() {\r\n                        Graph.topic.unsubscribe(topic, handler);\r\n                    };\r\n                }(topic, handler))\r\n            };\r\n        },\r\n\r\n        unsubscribe: function(topic, handler) {\r\n            var subs = Graph.topic.subscribers, \r\n                lsnr = subs[topic] || [];\r\n\r\n            for (var i = lsnr.length - 1; i >= 0; i--) {\r\n                if (lsnr[i] === handler) {\r\n                    lsnr.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    Graph.message = function(message, type) {\r\n        type = _.defaultTo(type, 'info');\r\n        \r\n        Graph.topic.publish('graph:message', {\r\n            type: type,\r\n            message: message\r\n        });\r\n    };\r\n\r\n    ///////////////////////////// LOAD CONFIG /////////////////////////////\r\n    \r\n    if (GLOBAL.graphConfig) {\r\n        Graph.setup(GLOBAL.graphConfig);\r\n    }\r\n\r\n    ///////////////////////////// I18N /////////////////////////////\r\n    \r\n    Graph._ = function(message) {\r\n        return message;\r\n    };\r\n\r\n    /////////////////////////// CORE NAMESPACES ////////////////////////////\r\n    \r\n    Graph.ns('Graph.lang');\r\n    Graph.ns('Graph.collection');\r\n    Graph.ns('Graph.registry');\r\n    Graph.ns('Graph.data');\r\n    Graph.ns('Graph.popup');\r\n    Graph.ns('Graph.shape.activity');\r\n    Graph.ns('Graph.shape.common');\r\n\r\n    ///////////////////////// HOOK DOCUMENT CLICK /////////////////////////\r\n    \r\n    Graph(function(){\r\n        var doc = $(DOCUMENT);\r\n\r\n        doc.on('mousedown', function(e){\r\n            var target = $(e.target),\r\n                vector = target.data(Graph.string.ID_VECTOR);\r\n\r\n            var paper;\r\n\r\n            if (vector) {\r\n                vector = Graph.registry.vector.get(vector);\r\n                paper = vector.paper();\r\n                Graph.cached.paper = paper ? paper.guid() : null;\r\n            }\r\n\r\n            vector = paper = null;\r\n        });\r\n\r\n        doc.on('keydown', function(e){\r\n            var paper;\r\n\r\n            if (Graph.event.isNavigation(e)) {\r\n                paper = Graph.cached.paper;\r\n\r\n                if (paper) {\r\n                    paper = Graph.registry.vector.get(paper);\r\n                    e.originalType = 'keynavdown';\r\n                    paper.fire(e);\r\n                }\r\n            } else if (e.ctrlKey || e.cmdKey) {\r\n                paper = Graph.cached.paper;\r\n                \r\n                if (paper) {\r\n                    paper = Graph.registry.vector.get(paper);\r\n                    if (e.keyCode === Graph.event.C) {\r\n                        e.originalType = 'keycopy';\r\n                        paper.fire(e);\r\n                    } else if (e.keyCode === Graph.event.V) {\r\n                        e.originalType = 'keypaste';\r\n                        paper.fire(e);\r\n                    }\r\n                }   \r\n            }\r\n        });\r\n\r\n        doc.on('keyup', function(e){\r\n            if (Graph.event.isNavigation(e)) {\r\n                var paper = Graph.cached.paper;\r\n                if (paper) {\r\n                    paper = Graph.registry.vector.get(paper);\r\n                    e.originalType = 'keynavup';\r\n                    paper.fire(e);\r\n                }\r\n            }\r\n        });\r\n\r\n        doc = null;\r\n    });\r\n\r\n    ///////////////////////// LISTEN DOCUMENT READY ////////////////////////\r\n    \r\n    (function(doc, evt){\r\n        var timer;\r\n\r\n        var handler = function() {\r\n            doc.removeEventListener(evt, handler, false);\r\n            doc.readyState = 'complete';\r\n        };\r\n\r\n        var loaded = function() {\r\n            _.forEach(readyFn, function(f){\r\n                f();\r\n            });\r\n        };\r\n\r\n        var inspect = function() {\r\n            if (doc.readyState != 'complete') {\r\n                timer = _.delay(function(){\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n\r\n                    inspect();\r\n                }, 10);\r\n            } else {\r\n                loaded();\r\n            }\r\n        };\r\n\r\n        if (doc.readyState == null && doc.addEventListener) {\r\n            doc.addEventListener(evt, handler, false);\r\n            doc.readyState = 'loading';\r\n        }\r\n\r\n        inspect();\r\n        \r\n    }(DOCUMENT, 'DOMContentLoaded'));\r\n\r\n    ///////////////////////////////////////////////////////////////////////\r\n    \r\n}());","\r\n(function(){\r\n\r\n    var REGEX_PATH_STR = /([achlmrqstvz])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig;\r\n    var REGEX_PATH_VAL = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/ig;\r\n    var REGEX_PATH_CMD = /,?([achlmqrstvxz]),?/gi;\r\n    var REGEX_POLY_STR = /(\\-?[0-9.]+)\\s*,\\s*(\\-?[0-9.]+)/g;\r\n    var REGEX_TRAN_STR = /((matrix|translate|rotate|scale|skewX|skewY)*\\((\\-?\\d+\\.?\\d*e?\\-?\\d*[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+\\))+/g;\r\n    var REGEX_TRAN_SUB = /[\\w\\.\\-]+/g;\r\n    var REGEX_POLY_STR = /(\\-?[0-9.]+)\\s*,\\s*(\\-?[0-9.]+)/g;\r\n    \r\n    var CONVEX_RADIUS  = 10;\r\n    var SMOOTH_RADIUS  = 6;\r\n\r\n    /**\r\n     * Legendre Gauss (Quadratic Curve)\r\n     * https://pomax.github.io/bezierinfo/legendre-gauss.html\r\n     */\r\n    \r\n    var LEGENDRE_N = 12;\r\n    var LEGENDRE_T = [-0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873, -0.7699, 0.7699, -0.9041, 0.9041, -0.9816, 0.9816];\r\n    var LEGENDRE_C = [ 0.2491, 0.2491,  0.2335, 0.2335,  0.2032, 0.2032,  0.1601, 0.1601,  0.1069, 0.1069,  0.0472, 0.0472];\r\n    \r\n    Graph.util = {\r\n        \r\n        // --------MATH-------- //\r\n        \r\n        deg: function(rad) {\r\n            return Math.round ((rad * 180 / Math.PI % 360) * 1000) / 1000;\r\n        },  \r\n        \r\n        rad: function(deg) {\r\n            return deg % 360 * Math.PI / 180;\r\n        },\r\n        \r\n        angle: function(a, b) {\r\n            var dx = a.x - b.x,\r\n                dy = a.y - b.y;\r\n\r\n            if ( ! dx && ! dy) {\r\n                return 0;\r\n            }\r\n\r\n            return (180 + Math.atan2(-dy, -dx) * 180 / Math.PI + 360) % 360;\r\n        },\r\n\r\n        theta: function(a, b) {\r\n            var dy = -(b.y - a.y),\r\n                dx =   b.x - a.x;\r\n\r\n            var rad, deg;\r\n\r\n            if (dy.toFixed(10) == 0 && dx.toFixed(10) == 0) {\r\n                rad = 0;\r\n            } else {\r\n                rad = Math.atan2(dy, dx);\r\n            }\r\n\r\n            if (rad < 0) {\r\n                rad = 2 * Math.PI + rad;\r\n            }\r\n\r\n            deg = 180 * rad / Math.PI;\r\n            deg = (deg % 360) + (deg < 0 ? 360 : 0);\r\n\r\n            return deg;\r\n        },\r\n\r\n        taxicab: function(a, b) {\r\n            var dx = a.x - b.x,\r\n                dy = a.y - b.y;\r\n            return dx * dx + dy * dy;\r\n        },\r\n\r\n        /**\r\n         * Get vector hypotenuse (magnitude)\r\n         */\r\n        hypo: function(va, vb) {\r\n            return Math.sqrt(va * va + vb * vb);\r\n        },\r\n        \r\n        /**\r\n         * Get sign of number\r\n         */\r\n        sign: function(num) {\r\n            return num < 0 ? -1 : 1;\r\n        },\r\n            \r\n        quadrant: function(x, y) {\r\n            return x >= 0 && y >= 0 ? 1 : (x >= 0 && y < 0 ? 4 : (x < 0 && y < 0 ? 3 : 2));\r\n        },\r\n        \r\n        // slope\r\n        gradient: function(a, b) {\r\n            // parallel\r\n            if (b.x == a.x) {\r\n                return b.y > a.y ? Infinity : -Infinity\r\n            } else if (b.y == a.y) {\r\n                return b.x > a.x ? 0 : -0;\r\n            } else {\r\n                return (b.y - a.y) / (b.x - a.x);\r\n            }\r\n        },\r\n        \r\n        snapValue: function (value, snaps, range) {\r\n            range = _.defaultTo(range, 10);\r\n            \r\n            if (_.isArray(snaps)) {\r\n                var i = snaps.length;\r\n                while(i--) {\r\n                    if (Math.abs(snaps[i] - value) <= range) {\r\n                        return snaps[i];\r\n                    }\r\n                }\r\n            } else {\r\n                snaps = +snaps;\r\n                \r\n                var rem = value % snaps;\r\n                \r\n                if (rem < range) {\r\n                    return value - rem;\r\n                }\r\n                \r\n                if (rem > value - range) {\r\n                    return value - rem + snaps;\r\n                }\r\n            }\r\n            return value;\r\n        },\r\n        \r\n        // --------POINT-------- //\r\n        \r\n        pointbox: function(x, y, padding) {\r\n            if (_.isPlainObject(x)) {\r\n                padding = y;\r\n                y = x.y;\r\n                x = x.x;\r\n            }\r\n            \r\n            padding = padding || 0;\r\n            \r\n            var x1 = x - padding,\r\n                y1 = y - padding,\r\n                x2 = x + padding,\r\n                y2 = y + padding,\r\n                width = x2 - x1,\r\n                height = y2 - y1;\r\n            \r\n            return {\r\n                x: x1,\r\n                y: y1,\r\n                x2: x2,\r\n                y2: y2,\r\n                width: width,\r\n                height: height\r\n            };\r\n        },\r\n        \r\n        pointAlign: function(a, b, treshold) {\r\n            if ( ! a || ! b) {\r\n                return false;\r\n            }\r\n            \r\n            treshold = treshold || 2;\r\n            \r\n            if (Math.abs(a.x - b.x) <= treshold) {\r\n                return 'h';\r\n            };\r\n\r\n            if (Math.abs(a.y - b.y) <= treshold) {\r\n                return 'v';\r\n            }\r\n\r\n            return false;\r\n        },\r\n        \r\n        pointDistance: function (a, b) {\r\n            if ( ! a || ! b) {\r\n                return -1;\r\n            }\r\n            return Graph.util.hypo((a.x - b.x), (a.y - b.y));\r\n        },\r\n        \r\n        isPointEquals: function (a, b) {\r\n            return a.x == b.x && a.y == b.y;\r\n        },\r\n        \r\n        // http://stackoverflow.com/a/907491/412190\r\n        isPointOnLine: function(a, b, p) {\r\n            if ( ! a || ! b || ! p) {\r\n                return false;\r\n            }\r\n            \r\n            var det = (b.x - a.x) * (p.y - a.y) - (b.y - a.y) * (p.x - a.x),\r\n                dis = Graph.util.pointDistance(a, b);\r\n            \r\n            return Math.abs(det / dis) < 2;\r\n        },\r\n        \r\n        polar2point: function(distance, radian, origin) {\r\n            var x, y, d;\r\n\r\n            if (_.isUndefined(origin)) {\r\n                origin = Graph.point(0, 0);\r\n            }\r\n\r\n            x = Math.abs(distance * Math.cos(radian));\r\n            y = Math.abs(distance * Math.sin(radian));\r\n            d = Graph.util.deg(radian);\r\n\r\n            if (d < 90) {\r\n                y = -y;\r\n            } else if (d < 180) {\r\n                x = -x;\r\n                y = -y;\r\n            } else if (d < 270) {\r\n                x = -x;\r\n            }\r\n\r\n            return Graph.point(origin.props.x + x, origin.props.y + y);\r\n        },\r\n        \r\n        // --------BOUNDING-------- //\r\n\r\n        isBoxContainsPoint: function(box, p) {\r\n            return p.x >= box.x && p.x <= box.x2 && p.y >= box.y && p.y <= box.y2;\r\n        },\r\n\r\n        isBoxIntersect: function(a, b) {\r\n            var fn = Graph.util.isBoxContainsPoint;\r\n\r\n            return fn(b, {x: a.x,  y: a.y})  ||\r\n                   fn(b, {x: a.x2, y: a.y})  || \r\n                   fn(b, {x: a.x,  y: a.y2}) || \r\n                   fn(b, {x: a.x2, y: a.y2}) || \r\n                   fn(a, {x: b.x,  y: b.y})  ||\r\n                   fn(a, {x: b.x2, y: b.y})  || \r\n                   fn(a, {x: b.x,  y: b.y2}) || \r\n                   fn(a, {x: b.x2, y: b.y2}) || \r\n                   (a.x < b.x2 && a.x > b.x  ||  b.x < a.x2 && b.x > a.x) && \r\n                   (a.y < b.y2 && a.y > b.y  ||  b.y < a.y2 && b.y > a.y);\r\n        },\r\n\r\n        boxOrientation: function(box1, box2, dx, dy) {\r\n            // treshold\r\n            dx = _.defaultTo(dx, 0);\r\n            dy = _.defaultTo(dy, dx);\r\n            \r\n            var top = box1.y2 + dy <= box2.y,\r\n                rgt = box1.x  - dx >= box2.x2,\r\n                btm = box1.y  - dy >= box2.y2,\r\n                lft = box1.x2 + dx <= box2.x;\r\n\r\n            var ver = top ? 'top' : (btm ? 'bottom' : null),\r\n                hor = lft ? 'left' : (rgt ? 'right' : null);\r\n\r\n            if (hor && ver) {\r\n                return ver + '-' + hor;\r\n            } else {\r\n                return hor || ver || 'intersect';\r\n            }\r\n        },\r\n\r\n        expandBox: function(box, dx, dy) {\r\n            dx = _.defaultTo(dx, 0);\r\n            dy = _.defaultTo(dy, 0);\r\n\r\n            box.x  -= dx;\r\n            box.x2 += dx;\r\n            box.y  -= dy;\r\n            box.y2 += dy;\r\n            box.width = box.x2 - box.x;\r\n            box.height = box.y2 - box.y;\r\n\r\n            return box;\r\n        },\r\n\r\n        groupBox: function(boxes) {\r\n            var x  = [], \r\n                y  = [], \r\n                x2 = [], \r\n                y2 = [];\r\n\r\n            if (boxes.length) {\r\n                _.forEach(boxes, function(box){\r\n                    x.push(box.x);\r\n                    y.push(box.y);\r\n                    x2.push(box.x + box.width);\r\n                    y2.push(box.y + box.height);\r\n                });\r\n\r\n                x  = _.min(x);\r\n                y  = _.min(y);\r\n                x2 = _.max(x2);\r\n                y2 = _.max(y2);\r\n\r\n                return {\r\n                    x: x,\r\n                    y: y,\r\n                    x2: x2,\r\n                    y2: y2,\r\n                    width: (x2 - x),\r\n                    height: (y2 - y)\r\n                };\r\n            } else {\r\n                return {\r\n                    x: 0,\r\n                    y: 0,\r\n                    x2: 0,\r\n                    y2: 0,\r\n                    width: 0,\r\n                    height: 0\r\n                }\r\n            }\r\n        },\r\n        \r\n        // -------LINE------ //\r\n        \r\n        midpoint: function(a, b) {\r\n            return {\r\n                x: (a.x + b.x) / 2,\r\n                y: (a.y + b.y) / 2\r\n            };\r\n        },\r\n        \r\n        /** \r\n         * Move point `a` to `b` as far as distance \r\n         */\r\n        movepoint: function(a, b, distance) {\r\n            var tr =  Graph.util.rad(Graph.util.theta(b, a)),\r\n                dx =  Math.cos(tr) * distance,\r\n                dy = -Math.sin(tr) * distance;\r\n            \r\n            a.x += dx;\r\n            a.y += dy;\r\n            \r\n            return a;\r\n        },\r\n        \r\n        lineBendpoints: function(a, b, dir) {\r\n            var points = [],\r\n                x1 = a.x,\r\n                y1 = a.y,\r\n                x2 = b.x,\r\n                y2 = b.y;\r\n               \r\n            var xm, ym;\r\n            \r\n            dir = dir || 'h:h';\r\n            \r\n            if (dir == 'h:v') {\r\n                points = [\r\n                    { x: x2, y: y1 }\r\n                ];\r\n            } else if (dir == 'v:h') {\r\n                points = [\r\n                    { x: x1, y: y2 }\r\n                ];\r\n            } else if (dir == 'h:h') {\r\n                xm = Math.round((x2 - x1) / 2 + x1);\r\n                points = [\r\n                    { x: xm, y: y1 },\r\n                    { x: xm, y: y2 }\r\n                ];\r\n            } else if (dir == 'v:v') {\r\n                ym = Math.round((y2 - y1) / 2 + y1);\r\n                points = [\r\n                    { x: x1, y: ym },\r\n                    { x: x2, y: ym }\r\n                ];\r\n            } else {\r\n                points = [];\r\n            }\r\n            \r\n            return points;\r\n        },\r\n        \r\n        lineIntersection: function (x1, y1, x2, y2, x3, y3, x4, y4) {\r\n            if (\r\n                Math.max(x1, x2) < Math.min(x3, x4) ||\r\n                Math.min(x1, x2) > Math.max(x3, x4) ||\r\n                Math.max(y1, y2) < Math.min(y3, y4) ||\r\n                Math.min(y1, y2) > Math.max(y3, y4)\r\n            ) {\r\n                return null;\r\n            }\r\n\r\n            var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\r\n                ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\r\n                denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\r\n\r\n            if ( ! denominator) {\r\n                return null;\r\n            }\r\n\r\n            var px = nx / denominator,\r\n                py = ny / denominator,\r\n                px2 = +px.toFixed(2),\r\n                py2 = +py.toFixed(2);\r\n\r\n            if (\r\n                px2 < +Math.min(x1, x2).toFixed(2) ||\r\n                px2 > +Math.max(x1, x2).toFixed(2) ||\r\n                px2 < +Math.min(x3, x4).toFixed(2) ||\r\n                px2 > +Math.max(x3, x4).toFixed(2) ||\r\n                py2 < +Math.min(y1, y2).toFixed(2) ||\r\n                py2 > +Math.max(y1, y2).toFixed(2) ||\r\n                py2 < +Math.min(y3, y4).toFixed(2) ||\r\n                py2 > +Math.max(y3, y4).toFixed(2)\r\n            ) {\r\n                return null;\r\n            }\r\n\r\n            return {\r\n                x: px, \r\n                y: py\r\n            };\r\n        },\r\n        \r\n        perpendicular: function(a, b, h) {\r\n            var m1, m2, tt, hp;\r\n\r\n            m1 = Graph.util.gradient(a, b);\r\n            m2 = m1 === 0 ? 0 : ( -1 / m1 );\r\n            tt = Math.atan(m2);\r\n            // si = Math.sin(tt),\r\n            // co = Math.cos(tt);\r\n\r\n            var hp = h * Math.cos(tt);\r\n            // var hy = h * si;\r\n\r\n            // find `middle point`\r\n            var mx = (a.x + b.x) / 2,\r\n                my = (a.y + b.y) / 2;\r\n\r\n            // find `y` intercept\r\n            var iy = my - (mx * m2)\r\n\r\n            var x3 = mx + hp,\r\n                y3 = m2 * x3 + iy;\r\n\r\n            return {\r\n                from: {\r\n                    x: mx,\r\n                    y: my\r\n                },\r\n                to: {\r\n                    x: x3,\r\n                    y: y3\r\n                }\r\n            };\r\n        },\r\n        \r\n        // -------SHAPE/PATH------ //\r\n        \r\n        points2path: function (points) {\r\n            var segments = _.map(points, function(p, i){\r\n                var cmd = i === 0 ? 'M' : 'L';\r\n                return [cmd, p.x, p.y];\r\n            });\r\n            return Graph.util.segments2path(segments);\r\n        },\r\n        \r\n        path2points: function(command) {\r\n            var segments = Graph.util.path2segments(command);\r\n            return _.map(segments, function(s, i){\r\n                if (s[0] == 'M' || s[0] == 'L') {\r\n                    return {x: s[1], y: s[2]};\r\n                } else {\r\n                    return {x: s[5], y: s[6]};\r\n                }\r\n            });\r\n        },\r\n\r\n        segments2path: function(segments) {\r\n            return _.join(segments || [], ',').replace(REGEX_PATH_CMD, '$1');\r\n        },\r\n\r\n        path2segments: function(command) {\r\n            if ( ! command) {\r\n                return [];\r\n            }\r\n\r\n            var cached = Graph.lookup('Graph.util', 'path2segments', command),\r\n                sizes = {a: 7, c: 6, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, z: 0},\r\n                segments = [];\r\n            \r\n            if (cached.segments) {\r\n                return _.cloneDeep(cached.segments);\r\n            }\r\n\r\n            command.replace(REGEX_PATH_STR, function(match, cmd, val){\r\n                var \r\n                    params = [],\r\n                    name = cmd.toLowerCase();\r\n\r\n                val.replace(REGEX_PATH_VAL, function(match, v){\r\n                    if (v) {\r\n                        params.push(+v);\r\n                    }\r\n                });\r\n\r\n                if (name == 'm' && params.length > 2) {\r\n                    segments.push(_.concat([cmd], params.splice(0, 2)));\r\n                    name = 'l';\r\n                    cmd = cmd == 'm' ? 'l' : 'L';\r\n                }\r\n\r\n                if (name == 'r') {\r\n                    segments.push(_.concat([cmd], params));\r\n                } else while (params.length >= sizes[name]) {\r\n                    segments.push(_.concat([cmd], params.splice(0, sizes[name])));\r\n                    if ( ! sizes[name]) {\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n            \r\n            cached.segments = _.cloneDeep(segments);\r\n            return segments;\r\n        },\r\n\r\n        polygon2dots: function(command) {\r\n            var array = [];\r\n            command.replace(REGEX_POLY_STR, function($0, x, y){\r\n                array.push([_.float(x), _.float(y)]);\r\n            });\r\n            return array;\r\n        },\r\n\r\n        polygon2path: function(command) {\r\n            var dots = Graph.util.polygon2dots(command);\r\n\r\n            if ( ! dots.length) {\r\n                return 'M0,0';\r\n            }\r\n            \r\n            var command = 'M' + dots[0][0] + ',' + dots[0][1];\r\n\r\n            for (var i = 1, ii = dots.length; i < ii; i++) {\r\n                command += 'L' + dots[i][0] + ',' + dots[i][1] + ',';\r\n            }\r\n            \r\n            command  = command.substring(0, command.length - 1);\r\n            command += 'Z';\r\n\r\n            return command;\r\n        },\r\n\r\n        transform2segments: Graph.memoize(function(command) {\r\n            var valid = {\r\n                matrix: true,\r\n                translate: true,\r\n                rotate: true,\r\n                scale: true,\r\n                skewX: true,\r\n                skewY: true\r\n            };\r\n\r\n            command += '';\r\n\r\n            var transform = [], matches = command.match(REGEX_TRAN_STR);\r\n\r\n            if (matches) {\r\n                _.forEach(matches, function(sub){\r\n                    var args = sub.match(REGEX_TRAN_SUB),\r\n                        name = args.shift();\r\n                    if (valid[name]) {\r\n                        args = _.map(args, function(v){ return +v; })\r\n                        transform.push([name].concat(args));    \r\n                    }\r\n                });  \r\n            }\r\n\r\n            return transform;\r\n        }),\r\n        \r\n        // --------CURVE-------- //\r\n        \r\n        curvebox: Graph.memoize(function(x0, y0, x1, y1, x2, y2, x3, y3) {\r\n            var token = _.join(arguments, '_'),\r\n                cached = Graph.lookup('Graph.util', 'curvebox', token);\r\n\r\n            token = null;\r\n\r\n            if (cached.curvebox) {\r\n                return cached.curvebox;\r\n            }\r\n\r\n            var tvalues = [],\r\n                bounds  = [[], []];\r\n\r\n            var a, b, c, t, t1, t2, b2ac, sqrtb2ac;\r\n\r\n            for (var i = 0; i < 2; ++i) {\r\n                if (i == 0) {\r\n                    b =  6 * x0 - 12 * x1 + 6 * x2;\r\n                    a = -3 * x0 +  9 * x1 - 9 * x2 + 3 * x3;\r\n                    c =  3 * x1 -  3 * x0;\r\n                } else {\r\n                    b =  6 * y0 - 12 * y1 + 6 * y2;\r\n                    a = -3 * y0 +  9 * y1 - 9 * y2 + 3 * y3;\r\n                    c =  3 * y1 -  3 * y0;\r\n                }\r\n\r\n                if (Math.abs(a) < 1e-12) {\r\n                    if (Math.abs(b) < 1e-12) {\r\n                        continue;\r\n                    }\r\n                    t = -c / b;\r\n                    if (0 < t && t < 1) {\r\n                        tvalues.push(t);\r\n                    }\r\n                    continue;\r\n                }\r\n\r\n                b2ac = b * b - 4 * c * a;\r\n                sqrtb2ac = Math.sqrt(b2ac);\r\n                \r\n                if (b2ac < 0) {\r\n                    continue;\r\n                }\r\n                \r\n                t1 = (-b + sqrtb2ac) / (2 * a);\r\n                \r\n                if (0 < t1 && t1 < 1) {\r\n                    tvalues.push(t1);\r\n                }\r\n\r\n                t2 = (-b - sqrtb2ac) / (2 * a);\r\n                \r\n                if (0 < t2 && t2 < 1) {\r\n                    tvalues.push(t2);\r\n                }\r\n            }\r\n\r\n            var x, y, j = tvalues.length,\r\n                jlen = j,\r\n                mt;\r\n\r\n            while (j--) {\r\n                t = tvalues[j];\r\n                mt = 1 - t;\r\n                bounds[0][j] = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\r\n                bounds[1][j] = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\r\n            }\r\n\r\n            bounds[0][jlen] = x0;\r\n            bounds[1][jlen] = y0;\r\n            bounds[0][jlen + 1] = x3;\r\n            bounds[1][jlen + 1] = y3;\r\n            bounds[0].length = bounds[1].length = jlen + 2;\r\n\r\n            cached.curvebox = {\r\n                min: {x: Math.min.apply(0, bounds[0]), y: Math.min.apply(0, bounds[1])},\r\n                max: {x: Math.max.apply(0, bounds[0]), y: Math.max.apply(0, bounds[1])}\r\n            };\r\n\r\n            return cached.curvebox;\r\n        }),\r\n        \r\n        curveLength: function(x1, y1, x2, y2, x3, y3, x4, y4, t) {\r\n            t = _.defaultTo(t, 1);\r\n            t = t > 1 ? 1 : t < 0 ? 0 : t;\r\n\r\n            var h = t / 2,\r\n                sum = 0;\r\n\r\n            for (var i = 0; i < LEGENDRE_N; i++) {\r\n                var ct = h * LEGENDRE_T[i] + h,\r\n\r\n                    xb = Graph.util.curvePolynom(ct, x1, x2, x3, x4),\r\n                    yb = Graph.util.curvePolynom(ct, y1, y2, y3, y4),\r\n                    co = xb * xb + yb * yb;\r\n\r\n                sum += LEGENDRE_C[i] * Math.sqrt(co);\r\n            }\r\n\r\n            return h * sum;\r\n        },\r\n\r\n        curvePolynom: function(t, n1, n2, n3, n4) {\r\n            var t1 = -3 * n1 + 9 * n2 -  9 * n3 + 3 * n4,\r\n                t2 =  t * t1 + 6 * n1 - 12 * n2 + 6 * n3;\r\n            return t * t2 - 3 * n1 + 3 * n2;\r\n        },\r\n        \r\n        curveInterval: function(x1, y1, x2, y2, x3, y3, x4, y4, length) {\r\n\r\n            if (length < 0 || Graph.util.curveLength(x1, y1, x2, y2, x3, y3, x4, y4) < length) {\r\n                return;\r\n            }\r\n\r\n            var t = 1,\r\n                step = t / 2,\r\n                t2 = t - step,\r\n                l,\r\n                e = .01;\r\n\r\n            l = Graph.util.curveLength(x1, y1, x2, y2, x3, y3, x4, y4, t2);\r\n\r\n            while (Math.abs(l - length) > e) {\r\n                step /= 2;\r\n                t2 += (l < length ? 1 : -1) * step;\r\n                l = Graph.util.curveLength(x1, y1, x2, y2, x3, y3, x4, y4, t2);\r\n            }\r\n\r\n            return t2;\r\n        },\r\n\r\n        pointAtInterval: function(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\r\n            var t1 = 1 - t,\r\n                t13 = Math.pow(t1, 3),\r\n                t12 = Math.pow(t1, 2),\r\n                t2 = t * t,\r\n                t3 = t2 * t,\r\n                x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\r\n                y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\r\n                mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\r\n                my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\r\n                nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\r\n                ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\r\n                ax = t1 * p1x + t * c1x,\r\n                ay = t1 * p1y + t * c1y,\r\n                cx = t1 * c2x + t * p2x,\r\n                cy = t1 * c2y + t * p2y,\r\n                alpha = (90 - Math.atan2(mx - nx, my - ny) * 180 / Math.PI);\r\n            \r\n            alpha = (90 - Math.atan2(nx - mx, ny - my) * 180 / Math.PI);\r\n\r\n            // (mx > nx || my < ny) && (alpha += 180);\r\n\r\n            // if (isNaN(x) || isNaN(y)) {\r\n            //     return null;\r\n            // }\r\n\r\n            return {\r\n                x: x,\r\n                y: y,\r\n                m: {x: mx, y: my},\r\n                n: {x: nx, y: ny},\r\n                start: {x: ax, y: ay},\r\n                end:   {x: cx, y: cy},\r\n                alpha: alpha\r\n            };\r\n        },\r\n\r\n        curveIntersection: function(a, b, count) {\r\n            var bon1 = Graph.util.curvebox.apply(null, a),\r\n                bon2 = Graph.util.curvebox.apply(null, b),\r\n                nres = 0,\r\n                ares = [];\r\n\r\n            var box1 = {x: bon1.min.x, y: bon1.min.y, x2: bon1.max.x, y2: bon1.max.y},\r\n                box2 = {x: bon2.min.x, y: bon2.min.y, x2: bon2.max.x, y2: bon2.max.y};\r\n                \r\n            if ( ! Graph.util.isBoxIntersect(box1, box2)) {\r\n                return count ? 0 : [];\r\n            }\r\n\r\n            var l1 = Graph.util.curveLength.apply(null, a),\r\n                l2 = Graph.util.curveLength.apply(null, b);\r\n            \r\n            var // n1 = ~~(l1 / 8),\r\n                // n2 = ~~(l2 / 8),\r\n                n1 = ~~(l1 / 10),\r\n                n2 = ~~(l2 / 10),\r\n                dots1 = [],\r\n                dots2 = [],\r\n                xy = {};\r\n\r\n            var i, j, t, p;\r\n\r\n            for (i = 0; i < n1 + 1; i++) {\r\n                t = i / n1;\r\n                p = Graph.util.pointAtInterval.apply(null, a.concat([t]));\r\n                dots1.push({x: p.x, y: p.y, t: t});\r\n            }\r\n\r\n            for (i = 0; i < n2 + 1; i++) {\r\n                t = i / n2;\r\n                p = Graph.util.pointAtInterval.apply(null, b.concat([t]));\r\n                dots2.push({x: p.x, y: p.y, t: t});\r\n            }\r\n\r\n            for (i = 0; i < n1; i++) {\r\n                for (j = 0; j < n2; j++) {\r\n\r\n                    var di  = dots1[i],\r\n                        di1 = dots1[i + 1],\r\n                        dj  = dots2[j],\r\n                        dj1 = dots2[j + 1],\r\n                        ci  = Math.abs(di1.x - di.x) < .001 ? 'y' : 'x',\r\n                        cj  = Math.abs(dj1.x - dj.x) < .001 ? 'y' : 'x',\r\n                        is  = Graph.util.lineIntersection(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\r\n                    \r\n                    if (is) {\r\n                        \r\n                        if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\r\n                            continue;\r\n                        }\r\n\r\n                        xy[is.x.toFixed(4)] = is.y.toFixed(4);\r\n                        \r\n                        var t1 = di.t + Math.abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\r\n                            t2 = dj.t + Math.abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\r\n                        \r\n                        if (t1 >= 0 && t1 <= 1.001 && t2 >= 0 && t2 <= 1.001) {\r\n                            nres++;\r\n                            // ares.push(is);\r\n                            ares.push({\r\n                                x: is.x,\r\n                                y: is.y,\r\n                                t1: t1,\r\n                                t2: t2\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            return count ? nres : ares;\r\n        },\r\n        \r\n        convexSegment: function(point, prev, next, radius) {\r\n            if ( ! prev || ! next || ! point) {\r\n                return null;\r\n            }\r\n            \r\n            var d1 = Graph.util.pointDistance(point, prev),\r\n                d2 = Graph.util.pointDistance(point, next);\r\n                \r\n            radius = radius || CONVEX_RADIUS;\r\n            \r\n            if (d1 > radius && d2 > radius) {\r\n                \r\n                var c1 = Graph.util.movepoint({x: point.x, y: point.y}, prev, -radius / 2),\r\n                    c2 = Graph.util.movepoint({x: point.x, y: point.y}, next, -radius / 2),\r\n                    dr = Graph.util.pointAlign(prev, next, radius / 2);\r\n                \r\n                var cp;\r\n                \r\n                if (dr == 'h') {\r\n                    cp = {\r\n                        x: point.x - radius, \r\n                        y: point.y\r\n                    };\r\n                } else {\r\n                    c1.y = prev.y;\r\n                    c2.y = next.y;\r\n                    cp = {\r\n                        x: point.x, \r\n                        y: point.y - radius\r\n                    };\r\n                }\r\n                \r\n                return [\r\n                    ['L', c1.x, c1.y],\r\n                    ['Q', cp.x, cp.y, c2.x, c2.y]\r\n                ];\r\n            }\r\n            \r\n            return null;\r\n        },\r\n        \r\n        smoothSegment: function(point, prev, next, radius) {\r\n            if ( ! prev || ! next || ! point) {\r\n                return null;\r\n            }\r\n            \r\n            var d1 = Graph.util.pointDistance(point, prev),\r\n                d2 = Graph.util.pointDistance(point, next);\r\n                \r\n            radius = radius || SMOOTH_RADIUS;\r\n            \r\n            if (d1 > radius && d2 > radius) {\r\n                var c1 = Graph.util.movepoint({x: point.x, y: point.y}, prev, -radius),\r\n                    c2 = Graph.util.movepoint({x: point.x, y: point.y}, next, -radius);\r\n                    \r\n                return [\r\n                    ['L', c1.x, c1.y],\r\n                    ['Q', point.x, point.y, c2.x, c2.y]\r\n                ]\r\n            }\r\n            \r\n            return null;\r\n        }\r\n        \r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Class = Graph.lang.Class = function() {};\r\n\r\n    Class.options = {};\r\n\r\n    Class.prototype.constructor = Class;\r\n    Class.prototype.toString = function() { return 'Graph.lang.Class'; };\r\n\r\n    Class.extend = function(config) {\r\n        var _super, _proto, _constructor, _definition, _class, _classopt;\r\n\r\n        _super = this.prototype;\r\n        _proto = Object.create(_super);\r\n\r\n        _classopt = {};\r\n\r\n        _.forOwn(config, function(v, k){\r\n\r\n            if (_.isFunction(v)) {\r\n                _proto[k] = v;\r\n                if (k == 'constructor') {\r\n                    _constructor = v;\r\n                }\r\n            } else {\r\n                _classopt[k] = v;\r\n            }\r\n        });\r\n\r\n        if ( ! _constructor) {\r\n            _constructor = _super.constructor;\r\n        }\r\n\r\n        _class = function() {\r\n\r\n            if ( ! this.__initialized__) {\r\n                this.__initialized__ = true;\r\n\r\n                this.listeners = {};\r\n\r\n                var _superclass = this.superclass;\r\n                var _superopt, key, val;\r\n\r\n                for (key in _classopt) {\r\n                    this[key] = _.cloneDeep(_classopt[key]);\r\n                }\r\n\r\n                while(_superclass) {\r\n                    _superopt = _superclass.options;\r\n\r\n                    if (_superopt) {\r\n                        for (key in _superopt) {\r\n                            if (this[key] !== undefined) {\r\n                                this[key] = _.merge(_.cloneDeep(_superopt[key]), this[key]);\r\n                            } else {\r\n                                this[key] = _.cloneDeep(_superopt[key]);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    _superclass = _superclass.prototype.superclass;\r\n                }\r\n            }\r\n\r\n            if (_constructor) {\r\n                _constructor.apply(this, arguments);\r\n            }\r\n        }\r\n\r\n        _definition = _constructor.toString().match(/(function)?([^\\{=]+)/);\r\n        _definition = 'function' + _definition[2];\r\n\r\n        _class.toString = function() {\r\n            return _definition;\r\n        };\r\n\r\n        _class.extend = _super.constructor.extend;\r\n        _class.options = _classopt;\r\n\r\n        _class.prototype = _proto;\r\n        _class.prototype.constructor = _class;\r\n        _class.prototype.superclass = _super.constructor;\r\n\r\n        _class.prototype.on = function(eventType, handler, once, priority) {\r\n            if (_.isPlainObject(eventType)) {\r\n                var key, val;\r\n                for (key in eventType) {\r\n                    val = eventType[key];\r\n                    if (_.isFunction(val)) {\r\n                        bind(this, key, val);\r\n                    } else {\r\n                        bind(this, key, val['handler'], val['once'], val['priority']);\r\n                    }\r\n                }\r\n            } else {\r\n                bind(this, eventType, handler, once, priority);\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        _class.prototype.one = function(eventType, handler) {\r\n            if (_.isPlainObject(eventType)) {\r\n                var key, val;\r\n                for (key in eventType) {\r\n                    val = eventType[key];\r\n                    if (_.isFunction(val)) {\r\n                        bind(this, key, val, true);\r\n                    } else {\r\n                        bind(this, key, val['handler'], true, val['priority']);\r\n                    }\r\n                }\r\n            } else {\r\n                bind(this, eventType, handler, true);\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        _class.prototype.off = function(eventType, handler) {\r\n            var batch = eventType.split(/\\s/);\r\n\r\n            if (batch.length > 1) {\r\n                for (var i = 0, ii = batch.length; i < ii; i++) {\r\n                    unbind(this, batch[i]);\r\n                }\r\n            } else {\r\n                unbind(this, eventType, handler);\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        _class.prototype.fire = function(eventType, data) {\r\n            var args = [], onces = [];\r\n            var eventObject, eventNames, eventRoot, listeners,\r\n                eventRegex, cachedRegex, ii, i;\r\n\r\n            data = data || {};\r\n\r\n            if (_.isString(eventType)) {\r\n                eventObject = new Graph.lang.Event(eventType, data);\r\n            } else {\r\n                eventObject = eventType;\r\n                eventObject.originalData = data;\r\n                eventType = eventObject.originalType || eventObject.type;\r\n            }\r\n\r\n            eventObject.publisher = this;\r\n            args.push(eventObject);\r\n\r\n            eventNames = eventType.split(/\\./);\r\n            eventRoot = eventNames.shift();\r\n            listeners = (this.listeners[eventRoot] || []).slice();\r\n\r\n            var cachedRegex = Graph.lookup('Regex.event', eventType);\r\n\r\n            if (cachedRegex.rgex) {\r\n                eventRegex = cachedRegex.rgex;\r\n            } else {\r\n                eventRegex = new RegExp(_.escapeRegExp(eventType), 'i');\r\n                cachedRegex.rgex = eventRegex;\r\n            }\r\n\r\n            if (listeners.length) {\r\n                for (i = 0, ii = listeners.length; i < ii; i++) {\r\n                    if (eventRoot == listeners[i].eventType) {\r\n                        if (listeners[i].once) {\r\n                            onces.push(listeners[i]);\r\n                        }\r\n                        listeners[i].handler.apply(listeners[i].handler, args);\r\n                    } else if (eventRegex.test(listeners[i].eventType)) {\r\n                        if (listeners[i].once) {\r\n                            onces.push(listeners[i]);\r\n                        }\r\n                        listeners[i].handler.apply(listeners[i].handler, args);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (onces.length) {\r\n                for (i = 0, ii = onces.length; i < ii; i++) {\r\n                    this.off(onces[i].eventType, onces[i].original);\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n        return _class;\r\n    };\r\n\r\n    /////////\r\n\r\n    function bind(context, eventType, handler, once, priority) {\r\n        var eventNames = eventType.split(/\\./),\r\n            eventRoot = eventNames.shift();\r\n\r\n        once = _.defaultTo(once, false);\r\n        priority = _.defaultTo(priority, 1500);\r\n\r\n        context.listeners[eventRoot] = context.listeners[eventRoot] || [];\r\n\r\n        context.listeners[eventRoot].push({\r\n            eventType: eventType,\r\n            priority: priority,\r\n            original: handler,\r\n            handler: _.bind(handler, context),\r\n            once: once\r\n        });\r\n    }\r\n\r\n    function unbind(context, eventType, handler) {\r\n        var eventNames = eventType.split(/\\./),\r\n            eventRoot = eventNames.shift(),\r\n            listeners = context.listeners[eventRoot] || [];\r\n\r\n        var eventRegex, cachedRegex;\r\n\r\n        cachedRegex = Graph.lookup('Regex.event', eventType);\r\n\r\n        if (cachedRegex.rgex) {\r\n            eventRegex = cachedRegex.rgex;\r\n        } else {\r\n            eventRegex = new RegExp(_.escapeRegExp(eventType), 'i');\r\n            cachedRegex.rgex = eventRegex;\r\n        }\r\n\r\n        for (var i = listeners.length - 1; i >= 0; i--) {\r\n            if (eventRegex.test(listeners[i].eventType)) {\r\n                if (handler) {\r\n                    if (handler === listeners[i].original) {\r\n                        listeners.splice(i, 1);\r\n                    }\r\n                } else {\r\n                    listeners.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n\r\n        if ( ! listeners.length) {\r\n            delete context.listeners[eventRoot];\r\n        }\r\n    }\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var Err = Graph.lang.Error = function(message) {\r\n        this.message = message;\r\n\r\n        var err = new Error();\r\n        this.stack = err.stack;\r\n\r\n        err = null;\r\n    };\r\n\r\n    Err.options = {\r\n        message: ''\r\n    };\r\n    Err.extend = Graph.lang.Class.extend;\r\n\r\n    Err.prototype = Object.create(Error.prototype);\r\n    Err.prototype.constructor = Err;\r\n    Err.prototype.name = \"Graph.lang.Error\";\r\n    Err.prototype.message = \"\";\r\n\r\n    ///////// SHORTCUT /////////\r\n\r\n    Graph.error = function(message) {\r\n        return new Graph.lang.Error(message);\r\n    };\r\n\r\n    Graph.isError = function(obj) {\r\n        return obj instanceof Graph.lang.Error;\r\n    };\r\n\r\n}());\r\n","\r\n(function(_, $){\r\n\r\n    var Evt = Graph.lang.Event = function(type, data){\r\n        this.type = type;\r\n        this.originalData = null;\r\n        this.cancelBubble = false;\r\n        this.defaultPrevented = false;\r\n        this.propagationStopped = false;\r\n        this.immediatePropagationStopped = false;\r\n\r\n        this.init(data);\r\n    };\r\n\r\n    Evt.options = {\r\n        type: null,\r\n        originalData: null,\r\n        cancelBubble: false,\r\n        defaultPrevented: false,\r\n        propagationStopped: false,\r\n        immediatePropagationStopped: false\r\n    };\r\n\r\n    Evt.extend = Graph.lang.Class.extend;\r\n\r\n    Evt.prototype.constructor = Evt;\r\n\r\n    Evt.prototype.init = function(data) {\r\n        if (data) {\r\n            this.originalData = data;\r\n            _.assign(this, data || {});\r\n        }\r\n    };\r\n\r\n    Evt.prototype.stopPropagation = function() {\r\n        this.cancelBubble = this.propagationStopped = true;\r\n    };\r\n\r\n    Evt.prototype.stopImmediatePropagation = function() {\r\n        this.immediatePropagationStopped = this.propagationStopped = true;\r\n    };\r\n\r\n    Evt.prototype.preventDefault = function() {\r\n        this.defaultPrevented = true;\r\n    };\r\n\r\n    Evt.prototype.toString = function() {\r\n        return 'Graph.lang.Event';\r\n    };\r\n\r\n    ///////// SHORTCUT /////////\r\n\r\n    Graph.event = function(type, data) {\r\n        return new Graph.lang.Event(type, data);\r\n    };\r\n\r\n    Graph.isEvent = function(obj) {\r\n        return obj instanceof Graph.lang.Event;\r\n    };\r\n\r\n    ///////// STATIC /////////\r\n\r\n    Graph.event.ESC = 27;\r\n    Graph.event.ENTER = 13;\r\n    Graph.event.DELETE = 46;\r\n    Graph.event.SHIFT = 16;\r\n    Graph.event.CTRL = 17;\r\n    Graph.event.CMD = 91;\r\n\r\n    Graph.event.C = 67;\r\n    Graph.event.V = 86;\r\n\r\n    Graph.event.fix = function(event) {\r\n        return $.event.fix(event);\r\n    };\r\n\r\n    Graph.event.original = function(event) {\r\n        return event.originalEvent || event;\r\n    };\r\n\r\n    Graph.event.position = function(event) {\r\n        return {\r\n            x: event.clientX,\r\n            y: event.clientY\r\n        };\r\n    };\r\n\r\n    Graph.event.relative = function(event, vector) {\r\n        var position = Graph.event.position(event),\r\n            matrix = vector.matrix().clone().invert(),\r\n            relative = {\r\n                x: matrix.x(position.x, position.y),\r\n                y: matrix.y(position.x, position.y)\r\n            };\r\n\r\n        matrix = null;\r\n\r\n        return relative;\r\n    };\r\n\r\n    Graph.event.isNavigation = function(e) {\r\n        var navs = [\r\n            Graph.event.ENTER,\r\n            Graph.event.DELETE,\r\n            Graph.event.SHIFT,\r\n            Graph.event.CTRL,\r\n            Graph.event.CMD,\r\n            Graph.event.ESC\r\n        ];\r\n\r\n        var code = e.keyCode;\r\n        return _.indexOf(navs, code) !== -1;\r\n    };\r\n\r\n    Graph.event.isPrimaryButton = function(event) {\r\n        var original = Graph.event.original(event);\r\n        return ! original.button;\r\n    };\r\n\r\n    Graph.event.hasPrimaryModifier = function(event) {\r\n        if ( ! Graph.event.isPrimaryButton(event)) {\r\n            return false;\r\n        }\r\n        var original = Graph.event.original(event);\r\n        return Graph.isMac() ? original.metaKey : original.ctrlKey;\r\n    };\r\n\r\n    Graph.event.hasSecondaryModifier = function(event) {\r\n        var original = Graph.event.original(event);\r\n        return Graph.event.isPrimaryButton(event) && original.shiftKey;\r\n    };\r\n\r\n}(_, jQuery));\r\n","\r\n(function(){\r\n\r\n    var Collection = Graph.collection.Point = function(points) {\r\n        this.items = points || [];\r\n    };\r\n\r\n    Collection.prototype.constructor = Collection;\r\n    Collection.prototype.items = [];\r\n\r\n    Collection.prototype.get = function(index) {\r\n        return this.items[index];\r\n    };\r\n\r\n    Collection.prototype.push = function(item) {\r\n        this.items.push(item);\r\n        return item;\r\n    };\r\n\r\n    Collection.prototype.pop = function() {\r\n        var item = this.items.pop();\r\n        return item;\r\n    };\r\n\r\n    Collection.prototype.shift = function() {\r\n        var item = this.items.shift();\r\n        return item;\r\n    };\r\n\r\n    Collection.prototype.first = function() {\r\n        return _.head(this.items);\r\n    };\r\n\r\n    Collection.prototype.last = function() {\r\n        return _.last(this.items);\r\n    };\r\n\r\n    Collection.prototype.clear = function() {\r\n        this.items = [];\r\n        return this;\r\n    },\r\n\r\n    Collection.prototype.modify = function(index, x, y) {\r\n        var item = this.items[index];\r\n        item.props.x = x;\r\n        item.props.y = y;\r\n        return item;\r\n    };\r\n\r\n    Collection.prototype.each = function(iteratee) {\r\n        _.forEach(this.items, iteratee);\r\n    };\r\n\r\n    Collection.prototype.toArray = function() {\r\n        return this.items;\r\n    };\r\n\r\n    Collection.prototype.toJson = function() {\r\n        return _.map(this.items, function(item){\r\n            return item.toJson();\r\n        });\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Line = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(x1, y1, x2, y2) {\r\n            var args = _.toArray(arguments);\r\n\r\n            if (args.length === 1) {\r\n                var start = args[0].start().toJson(),\r\n                    end = args[0].end().toJson();\r\n\r\n                x1 = start.x;\r\n                y1 = start.y;\r\n                x2 = end.x;\r\n                y2 = end.y;\r\n            } else if (args.length === 2) {\r\n                if (Graph.isPoint(args[0])) {\r\n                    x1 = args[0].props.x;\r\n                    y1 = args[0].props.y;\r\n                    x2 = args[1].props.x;\r\n                    y2 = args[1].props.y;\r\n                } else {\r\n                    x1 = args[0].x;\r\n                    y1 = args[0].y;\r\n                    x2 = args[1].x;\r\n                    y2 = args[1].y;\r\n                }\r\n                \r\n            }\r\n\r\n            // this.$super('line', {\r\n            //     x1: _.defaultTo(x1, 0),\r\n            //     y1: _.defaultTo(y1, 0),\r\n            //     x2: _.defaultTo(x2, 0),\r\n            //     y2: _.defaultTo(y2, 0)\r\n            // });\r\n            \r\n            this.superclass.prototype.constructor.call(this, 'line', {\r\n                x1: _.defaultTo(x1, 0),\r\n                y1: _.defaultTo(y1, 0),\r\n                x2: _.defaultTo(x2, 0),\r\n                y2: _.defaultTo(y2, 0)\r\n            });\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Line';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n}());","\r\n(function(){\r\n\r\n    var Curve = Graph.lang.Curve = function(command) {\r\n        this.segments = _.isString(command) ? Graph.util.path2segments(command) : _.cloneDeep(command);\r\n\r\n        if (this.segments[0][0] != 'M') {\r\n            this.segments.unshift(\r\n                ['M', this.segments[0][1], this.segments[0][2]]\r\n            );\r\n        }\r\n\r\n        if (this.segments.length === 1 && this.segments[0][0] === 'M') {\r\n            var x = this.segments[0][1],\r\n                y = this.segments[0][2];\r\n            this.segments.push(['C', x, y, x, y, x, y]);\r\n        }\r\n    };\r\n\r\n    Curve.options = {\r\n        segments: []\r\n    };\r\n\r\n    Curve.extend = Graph.lang.Class.extend;\r\n\r\n    Curve.prototype.constructor = Curve;\r\n\r\n    Curve.prototype.segments = [];\r\n\r\n    Curve.prototype.x = function() {\r\n        return this.segments[1][5];\r\n    };\r\n\r\n    Curve.prototype.y = function() {\r\n        return this.segments[1][6];\r\n    };\r\n\r\n    Curve.prototype.length = function(t) {\r\n        var params = this.segments[0].slice(1).concat(this.segments[1].slice(1)).concat([t]);\r\n        return Graph.util.curveLength.apply(null, params);\r\n    };\r\n\r\n    Curve.prototype.t = function(length) {\r\n        var params = this.segments[0].slice(1).concat(this.segments[1].slice(1)).concat([length]);\r\n        return Graph.util.curveInterval.apply(null, params);\r\n    };\r\n\r\n    Curve.prototype.pointAt = function(t, json) {\r\n        var params = this.segments[0].slice(1).concat(this.segments[1].slice(1)).concat([t]),\r\n            result = Graph.util.pointAtInterval.apply(null, params);\r\n\r\n        if (json) {\r\n            return result;\r\n        } else {\r\n            var point = Graph.point(result.x, result.y);\r\n            result.x = result.y = undefined;\r\n            return _.extend(point, result);\r\n        }\r\n    };\r\n\r\n    Curve.prototype.intersection = function(curve, json) {\r\n        var a = this.segments[0].slice(1).concat(this.segments[1].slice(1)),\r\n            b = curve.segments[0].slice(1).concat(curve.segments[1].slice(1)),\r\n            i = Graph.util.curveIntersection(a, b);\r\n\r\n        if (json) {\r\n            return i;\r\n        } else {\r\n            var points = _.map(i, function(p){ return Graph.point(p.x, p.y); });\r\n            return points;\r\n        }\r\n    };\r\n\r\n    Curve.prototype.intersectnum = function(curve) {\r\n        var a = this.segments[0].slice(1).concat(this.segments[1].slice(1)),\r\n            b = curve.segments[0].slice(1).concat(curve.segments[1].slice(1));\r\n\r\n        return Graph.util.curveIntersection(a, b, true);\r\n    };\r\n\r\n    Curve.prototype.bbox = function() {\r\n        var args = [this.segments[0][1], this.segments[0][2]].concat(this.segments[1].slice(1)),\r\n            bbox = Graph.util.curvebox.apply(null, args);\r\n        return Graph.bbox({\r\n            x: bbox.min.x,\r\n            y: bbox.min.y,\r\n            x2: bbox.max.x,\r\n            y2: bbox.max.y,\r\n            width: bbox.max.x - bbox.min.x,\r\n            height: bbox.max.y - bbox.min.y\r\n        });\r\n    };\r\n\r\n    Curve.prototype.clone = function() {\r\n        var segments = _.cloneDeep(this.segments);\r\n        return new Graph.lang.Curve(segments);\r\n    };\r\n\r\n    Curve.prototype.toValue = function() {\r\n        return Graph.util.segments2path(this.segments);\r\n    };\r\n\r\n    Curve.prototype.toString = function() {\r\n        return 'Graph.lang.Curve';\r\n    };\r\n\r\n    ///////// SHORTCUT /////////\r\n\r\n    Graph.curve = function(command) {\r\n        return new Graph.lang.Curve(command);\r\n    };\r\n\r\n    Graph.isCurve = function(obj) {\r\n        return obj instanceof Graph.lang.Curve;\r\n    };\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var BBox = Graph.lang.BBox = function(bounds) {\r\n        this.props = _.extend({\r\n            x: 0,\r\n            y: 0,\r\n            x2: 0,\r\n            y2: 0,\r\n            width: 0,\r\n            height: 0\r\n        }, bounds || {});\r\n    };\r\n\r\n    BBox.options = {\r\n        props: {\r\n            x: 0,\r\n            y: 0,\r\n            x2: 0,\r\n            y2: 0,\r\n            width: 0,\r\n            height: 0\r\n        }\r\n    };\r\n\r\n    BBox.extend = Graph.lang.Class.extend;\r\n\r\n    BBox.prototype = Object.create(Graph.lang.Class.prototype);\r\n    BBox.prototype.constructor = BBox;\r\n    BBox.prototype.superclass = Graph.lang.Class;\r\n\r\n    BBox.prototype.shape = function() {\r\n        var prop = this.props;\r\n\r\n        return new Graph.lang.Path([\r\n            ['M', prop.x, prop.y],\r\n            ['l', prop.width, 0],\r\n            ['l', 0, prop.height],\r\n            ['l', -prop.width, 0],\r\n            ['z']\r\n        ]);\r\n    };\r\n\r\n    BBox.prototype.origin = function(simple) {\r\n        simple = _.defaultTo(simple, false);\r\n\r\n        var x = this.props.x,\r\n            y = this.props.y;\r\n\r\n        return simple ? {x: x, y: y} : Graph.point(x, y);\r\n    };\r\n\r\n    BBox.prototype.center = function(simple) {\r\n        simple = _.defaultTo(simple, false);\r\n\r\n        var x = this.props.x + this.props.width  / 2,\r\n            y = this.props.y + this.props.height / 2;\r\n\r\n        return simple ? {x: x, y: y} : Graph.point(x, y);\r\n    };\r\n\r\n    BBox.prototype.corner = function(simple) {\r\n        simple = _.defaultTo(simple, false);\r\n\r\n        var x = this.props.x + this.props.width,\r\n            y = this.props.y + this.props.height;\r\n\r\n        return simple ? {x: x, y: y} : Graph.point(x, y);\r\n    };\r\n\r\n    BBox.prototype.width = function() {\r\n        return this.props.width;\r\n    };\r\n\r\n    BBox.prototype.height = function() {\r\n        return this.props.height;\r\n    };\r\n\r\n    BBox.prototype.clone = function() {\r\n        var props = _.extend({}, this.props);\r\n        return new BBox(props);\r\n    };\r\n\r\n    BBox.prototype.contains = function(obj) {\r\n        var contain = true,\r\n            bbox = this.props,\r\n            dots = [];\r\n\r\n        var vbox, papa, mat, dot;\r\n\r\n        if (Graph.isPoint(obj)) {\r\n            dots = [\r\n                [obj.props.x, obj.props.y]\r\n            ];\r\n        } else if (Graph.isVector(obj)) {\r\n            dots = obj.vertices(true);\r\n        } else if (Graph.isBBox(obj)) {\r\n            dots = [\r\n                [obj.props.x, obj.props.y],\r\n                [obj.props.x2, obj.props.y2]\r\n            ];\r\n        } else {\r\n            var args = _.toArray(arguments);\r\n            if (args.length === 2) {\r\n                dots = [args];\r\n            }\r\n        }\r\n\r\n        if (dots.length) {\r\n            var l = dots.length;\r\n            while(l--) {\r\n                dot = dots[l];\r\n                contain = dot[0] >= bbox.x  &&\r\n                          dot[0] <= bbox.x2 &&\r\n                          dot[1] >= bbox.y  &&\r\n                          dot[1] <= bbox.y2;\r\n                if ( ! contain) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return contain;\r\n    };\r\n\r\n    BBox.prototype.expand = function(dx, dy, dw, dh) {\r\n        var ax, ay;\r\n        if (_.isUndefined(dy)) {\r\n            ax = Math.abs(dx);\r\n\r\n            dx = -ax;\r\n            dy = -ax;\r\n            dw = 2 * ax;\r\n            dh = 2 * ax;\r\n        } else {\r\n            ax = Math.abs(dx);\r\n            ay = Math.abs(dy);\r\n\r\n            dx = -ax;\r\n            dy = -ay;\r\n            dw = 2 * ax;\r\n            dh = 2 * ay;\r\n        }\r\n\r\n        this.props.x += dx;\r\n        this.props.y += dy;\r\n        this.props.width  += dw;\r\n        this.props.height += dh;\r\n\r\n        return this;\r\n    };\r\n\r\n    BBox.prototype.translate = function(dx, dy) {\r\n        this.props.x  += dx;\r\n        this.props.y  += dy;\r\n        this.props.x2 += dx;\r\n        this.props.y2 += dy;\r\n\r\n        return this;\r\n    };\r\n\r\n    BBox.prototype.transform = function(matrix) {\r\n        var x = this.props.x,\r\n            y = this.props.y;\r\n\r\n        this.props.x = matrix.x(x, y);\r\n        this.props.y = matrix.y(x, y);\r\n\r\n        x = this.props.x2;\r\n        y = this.props.y2;\r\n\r\n        this.props.x2 = matrix.x(x, y);\r\n        this.props.y2 = matrix.y(x, y);\r\n\r\n        this.props.width  = this.props.x2 - this.props.x;\r\n        this.props.height = this.props.y2 - this.props.y;\r\n\r\n        return this;\r\n    };\r\n\r\n    BBox.prototype.intersect = function(tbox) {\r\n        var me = this,\r\n            bdat = me.props,\r\n            tdat = tbox.toJson();\r\n\r\n        return tbox.contains(bdat.x, bdat.y)\r\n            || tbox.contains(bdat.x2, bdat.y)\r\n            || tbox.contains(bdat.x, bdat.y2)\r\n            || tbox.contains(bdat.x2, bdat.y2)\r\n            || me.contains(tdat.x, tdat.y)\r\n            || me.contains(tdat.x2, tdat.y)\r\n            || me.contains(tdat.x, tdat.y2)\r\n            || me.contains(tdat.x2, tdat.y2)\r\n            || (bdat.x < tdat.x2 && bdat.x > tdat.x || tdat.x < bdat.x2 && tdat.x > bdat.x)\r\n            && (bdat.y < tdat.y2 && bdat.y > tdat.y || tdat.y < bdat.y2 && tdat.y > bdat.y);\r\n    };\r\n\r\n    BBox.prototype.sideNearestPoint = function(point) {\r\n        var px = point.props.x,\r\n            py = point.props.y,\r\n            tx = this.props.x,\r\n            ty = this.props.y,\r\n            tw = this.props.width,\r\n            th = this.props.height;\r\n\r\n        var distToLeft = px - tx;\r\n        var distToRight = (tx + tw) - px;\r\n        var distToTop = py - ty;\r\n        var distToBottom = (ty + th) - py;\r\n        var closest = distToLeft;\r\n        var side = 'left';\r\n\r\n        if (distToRight < closest) {\r\n            closest = distToRight;\r\n            side = 'right';\r\n        }\r\n\r\n        if (distToTop < closest) {\r\n            closest = distToTop;\r\n            side = 'top';\r\n        }\r\n        if (distToBottom < closest) {\r\n            closest = distToBottom;\r\n            side = 'bottom';\r\n        }\r\n\r\n        return side;\r\n    };\r\n\r\n    BBox.prototype.pointNearestPoint = function(point) {\r\n        if (this.contains(point)) {\r\n            var side = this.sideNearestPoint(point);\r\n            switch (side){\r\n                case 'right': return Graph.point(this.props.x + this.props.width, point.props.y);\r\n                case 'left': return Graph.point(this.props.x, point.props.y);\r\n                case 'bottom': return Graph.point(point.props.x, this.props.y + this.props.height);\r\n                case 'top': return Graph.point(point.props.x, this.props.y);\r\n            }\r\n        }\r\n        return point.clone().adhereToBox(this);\r\n    };\r\n\r\n    BBox.prototype.toJson = function() {\r\n        return _.clone(this.props);\r\n    };\r\n\r\n    BBox.prototype.toString = function() {\r\n        return 'Graph.lang.BBox';\r\n    };\r\n\r\n    BBox.prototype.toValue = function() {\r\n        var p = this.props;\r\n        return _.format(\r\n            '{0},{1} {2},{3} {4},{5} {6},{7}',\r\n            p.x, p.y,\r\n            p.x + p.width, p.y,\r\n            p.x + p.width, p.y + p.height,\r\n            p.x, p.y + p.height\r\n        );\r\n    };\r\n\r\n    ///////// EXTENSION /////////\r\n\r\n    Graph.isBBox = function(obj) {\r\n        return obj instanceof Graph.lang.BBox;\r\n    };\r\n\r\n    Graph.bbox = function(bounds) {\r\n        return new Graph.lang.BBox(bounds);\r\n    };\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.svg.Path = Graph.extend(Graph.svg.Vector, {\r\n\r\n        constructor: function(d) {\r\n            if ( ! d) {\r\n                d = [['M', 0, 0]];\r\n            }\r\n\r\n            if (_.isArray(d)) {\r\n                d = Graph.path(Graph.util.segments2path(d)).absolute().toValue();\r\n            } else if (d instanceof Graph.lang.Path) {\r\n                d = d.toValue();\r\n            } else {\r\n                d = Graph.path(d).absolute().toValue();\r\n            }\r\n\r\n            this.superclass.prototype.constructor.call(this, 'path', {\r\n                d: d\r\n            });\r\n        },\r\n\r\n        shape: function() {\r\n            return Graph.path(this.attrs.d)\r\n        },\r\n\r\n        segments: function() {\r\n            return this.shape().segments;\r\n        },\r\n\r\n        intersection: function(path, dots) {\r\n            return this.shape().intersection(path.shape(), dots);\r\n        },\r\n\r\n        intersectnum: function(path) {\r\n            return this.shape().intersectnum(path.shape());\r\n        },\r\n\r\n        angle: function() {\r\n            var segments = _.clone(this.segments()),\r\n                max = segments.length - 1;\r\n\r\n            if (segments[max][0] == 'Z') {\r\n                max--;\r\n                segments.pop();\r\n            }\r\n\r\n            if (segments.length === 1) {\r\n                max++;\r\n                segments.push(['L', segments[0][1], segments[0][2]]);\r\n            }\r\n\r\n            var dx = segments[max][1] - segments[max - 1][1],\r\n                dy = segments[max][2] - segments[max - 1][2];\r\n\r\n            return (180 + Math.atan2(-dy, -dx) * 180 / Math.PI + 360) % 360;\r\n        },\r\n\r\n        slice: function(from, to) {\r\n            return this.shape().slice(from, to);\r\n        },\r\n\r\n        pointAt: function(length) {\r\n            return this.shape().pointAt(length);\r\n        },\r\n\r\n        length: function() {\r\n            return this.shape().length();\r\n        },\r\n\r\n        addVertext: function(vertext) {\r\n            var path = this.shape();\r\n\r\n            path.addVertext(vertext);\r\n            this.attr('d', path.command());\r\n\r\n            return this;\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var ms = this.matrix().clone(),\r\n                mr = matrix.rotate(),\r\n                ro = mr.deg,\r\n                rd = mr.rad,\r\n                si = Math.sin(rd),\r\n                co = Math.cos(rd),\r\n                pa = this.shape(),\r\n                ps = pa.segments,\r\n                rx = ps[0][1],\r\n                ry = ps[0][2];\r\n\r\n            if (ro) {\r\n                ms.rotate(-ro, rx, ry);    \r\n            }\r\n            \r\n            rx = ms.x(ps[0][1], ps[0][2]);\r\n            ry = ms.y(ps[0][1], ps[0][2]);\r\n\r\n            ms.scale(sx, sy, cx, cy);\r\n\r\n            _.forEach(ps, function(seg){\r\n                var ox, oy, nx, ny;\r\n                if (seg[0] != 'Z') {\r\n                    ox = seg[seg.length - 2];\r\n                    oy = seg[seg.length - 1];\r\n\r\n                    nx = ms.x(ox, oy);\r\n                    ny = ms.y(ox, oy);\r\n                    \r\n                    seg[seg.length - 2] = nx;\r\n                    seg[seg.length - 1] = ny;\r\n                }\r\n            });\r\n\r\n            this.reset();\r\n            this.attr('d', pa.command());\r\n\r\n            if (ro) {\r\n                this.rotate(ro, rx, ry).commit(true);    \r\n            }\r\n\r\n            return {\r\n                matrix: ms,\r\n                x: rx,\r\n                y: ry\r\n            };\r\n        },\r\n\r\n        moveTo: function(x, y) {\r\n            var path = this.shape();\r\n            \r\n            path.moveTo(x, y);\r\n            this.attr('d', path.command());\r\n\r\n            return this;\r\n        },\r\n\r\n        lineTo: function(x, y, append) {\r\n            var path = this.shape();\r\n            \r\n            path.lineTo(x, y, append);\r\n            this.attr('d', path.command());\r\n\r\n            return this;\r\n        },\r\n\r\n        tail: function() {\r\n            var segments = this.segments();\r\n            if (segments.length) {\r\n                return Graph.point(segments[0][1], segments[0][2]);\r\n            }\r\n            return null;\r\n        },\r\n\r\n        head: function() {\r\n            var segments = this.segments(), maxs;\r\n            if (segments.length) {\r\n                maxs = segments.length - 1;\r\n                return Graph.point(segments[maxs][1], segments[maxs][2]);\r\n            }\r\n            return null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Path';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Matrix = Graph.lang.Matrix = function(a, b, c, d, e, f) {\r\n        this.props = {};\r\n\r\n        this.props.a = _.defaultTo(a, 1);\r\n        this.props.b = _.defaultTo(b, 0);\r\n        this.props.c = _.defaultTo(c, 0);\r\n        this.props.d = _.defaultTo(d, 1);\r\n        this.props.e = _.defaultTo(e, 0);\r\n        this.props.f = _.defaultTo(f, 0);\r\n    };\r\n\r\n    Matrix.options = {\r\n        props: {\r\n            a: 1,\r\n            b: 0,\r\n            c: 0,\r\n            d: 1,\r\n            e: 0,\r\n            f: 0\r\n        }\r\n    };\r\n\r\n    Matrix.extend = Graph.lang.Class.extend;\r\n\r\n    Matrix.prototype.constructor = Matrix;\r\n\r\n    Matrix.prototype.x = function(x, y) {\r\n        return x * this.props.a + y * this.props.c + this.props.e;\r\n    };\r\n\r\n    Matrix.prototype.y = function(x, y) {\r\n        return x * this.props.b + y * this.props.d + this.props.f;\r\n    };\r\n\r\n    Matrix.prototype.get = function(chr) {\r\n        return +this.props[chr].toFixed(4);\r\n    };\r\n\r\n    Matrix.prototype.multiply = function(a, b, c, d, e, f) {\r\n        var\r\n            result = [[], [], []],\r\n            source = [\r\n                [this.props.a, this.props.c, this.props.e],\r\n                [this.props.b, this.props.d, this.props.f],\r\n                [0, 0, 1]\r\n            ],\r\n            matrix = [\r\n                [a, c, e],\r\n                [b, d, f],\r\n                [0, 0, 1]\r\n            ];\r\n\r\n        var x, y, z, tmp;\r\n        \r\n        if (Graph.isMatrix(a)) {\r\n            matrix = [\r\n                [a.props.a, a.props.c, a.props.e],\r\n                [a.props.b, a.props.d, a.props.f],\r\n                [0, 0, 1]\r\n            ];\r\n        }\r\n\r\n        for (x = 0; x < 3; x++) {\r\n            for (y = 0; y < 3; y++) {\r\n                tmp = 0;\r\n                for (z = 0; z < 3; z++) {\r\n                    tmp += source[x][z] * matrix[z][y];\r\n                }\r\n                result[x][y] = tmp;\r\n            }\r\n        }\r\n\r\n        this.props.a = result[0][0];\r\n        this.props.b = result[1][0];\r\n        this.props.c = result[0][1];\r\n        this.props.d = result[1][1];\r\n        this.props.e = result[0][2];\r\n        this.props.f = result[1][2];\r\n\r\n        return this;\r\n    };\r\n\r\n    Matrix.prototype.invert = function(clone) {\r\n        var x = this.props.a * this.props.d - this.props.b * this.props.c;\r\n        var a, b, c, d, e, f;\r\n\r\n        clone = _.defaultTo(clone, false);\r\n\r\n        a =  this.props.d / x;\r\n        b = -this.props.b / x;\r\n        c = -this.props.c / x;\r\n        d =  this.props.a / x;\r\n        e = (this.props.c * this.props.f - this.props.d * this.props.e) / x;\r\n        f = (this.props.b * this.props.e - this.props.a * this.props.f) / x;\r\n\r\n        if (clone) {\r\n            return new Graph.matrix(a, b, c, d, e, f);\r\n        } else {\r\n            this.props.a = a;\r\n            this.props.b = b;\r\n            this.props.c = c;\r\n            this.props.d = d;\r\n            this.props.e = e;\r\n            this.props.f = f;\r\n\r\n            return this;\r\n        }\r\n    };\r\n\r\n    Matrix.prototype.translate = function(x, y) {\r\n        x = _.defaultTo(x, 0);\r\n        y = _.defaultTo(y, 0);\r\n        this.multiply(1, 0, 0, 1, x, y);\r\n\r\n        return this;\r\n    };\r\n\r\n    // http://stackoverflow.com/questions/16359246/how-to-extract-position-rotation-and-scale-from-matrix-svg\r\n    Matrix.prototype.rotate = function(angle, cx, cy) {\r\n        var args = arguments;\r\n        if ( ! args.length) {\r\n            var px = this.delta(0, 1),\r\n                py = this.delta(1, 0);\r\n\r\n            var deg, rad;\r\n\r\n            deg = 180 / Math.PI * Math.atan2(px.y, px.x) - 90;\r\n            rad = Graph.util.rad(deg);\r\n\r\n            return {\r\n                deg: deg,\r\n                rad: rad,\r\n                sin: Math.sin(rad),\r\n                cos: Math.cos(rad)\r\n            };\r\n        }\r\n\r\n        var radian;\r\n\r\n        radian = Graph.util.rad(angle);\r\n\r\n        cx = _.defaultTo(cx, 0);\r\n        cy = _.defaultTo(cy, 0);\r\n        \r\n        var cos = +Math.cos(radian).toFixed(9),\r\n            sin = +Math.sin(radian).toFixed(9);\r\n            \r\n        this.multiply(cos, sin, -sin, cos, cx, cy);\r\n        this.multiply(1, 0, 0, 1, -cx, -cy);\r\n        \r\n        return this;\r\n    };\r\n\r\n    Matrix.prototype.scale = function(sx, sy, cx, cy) {\r\n        if (sx === undefined) {\r\n            var prop = this.props,\r\n                sx = Graph.util.hypo(prop.a, prop.b),\r\n                sy = Graph.util.hypo(prop.c, prop.d);\r\n\r\n            if (this.determinant() < 0) {\r\n                sx = -sx;\r\n            }\r\n\r\n            return {\r\n                x: sx,\r\n                y: sy\r\n            };\r\n        }\r\n\r\n        sy = _.defaultTo(sy, sx);\r\n\r\n        if (cx || cy) {\r\n            cx = _.defaultTo(cx, 0);\r\n            cy = _.defaultTo(cy, 0);\r\n        }\r\n\r\n        (cx || cy) && this.multiply(1, 0, 0, 1, cx, cy);\r\n        this.multiply(sx, 0, 0, sy, 0, 0);\r\n        (cx || cy) && this.multiply(1, 0, 0, 1, -cx, -cy);\r\n\r\n        return this;\r\n    };\r\n\r\n    Matrix.prototype.determinant = function() {\r\n        return this.props.a * this.props.d - this.props.b * this.props.c;\r\n    };\r\n\r\n    Matrix.prototype.delta = function(x, y) {\r\n        return {\r\n            x: x * this.props.a + y * this.props.c + 0,\r\n            y: x * this.props.b + y * this.props.d + 0\r\n        };\r\n    };\r\n\r\n    Matrix.prototype.data = function() {\r\n        var px = this.delta(0, 1),\r\n            py = this.delta(1, 0),\r\n            skewX = 180 / Math.PI * Math.atan2(px.y, px.x) - 90,\r\n            radSkewX = Graph.util.rad(skewX),\r\n            cosSkewX = Math.cos(radSkewX),\r\n            sinSkewX = Math.sin(radSkewX),\r\n            scaleX = Graph.util.hypo(this.props.a, this.props.b),\r\n            scaleY = Graph.util.hypo(this.props.c, this.props.d),\r\n            radian = Graph.util.rad(skewX);\r\n\r\n        if (this.determinant() < 0) {\r\n            scaleX = -scaleX;\r\n        }\r\n\r\n        return {\r\n            x: this.props.e,\r\n            y: this.props.f,\r\n            dx: (this.props.e * cosSkewX + this.props.f *  sinSkewX) / scaleX,\r\n            dy: (this.props.f * cosSkewX + this.props.e * -sinSkewX) / scaleY,\r\n            skewX: -skewX,\r\n            skewY: 180 / Math.PI * Math.atan2(py.y, py.x),\r\n            scaleX: scaleX,\r\n            scaleY: scaleY,\r\n            // rotate: skewX,\r\n            rotate: this.rotate().deg,\r\n            rad: radian,\r\n            sin: Math.sin(radian),\r\n            cos: Math.cos(radian),\r\n            a: this.props.a,\r\n            b: this.props.b,\r\n            c: this.props.c,\r\n            d: this.props.d,\r\n            e: this.props.e,\r\n            f: this.props.f\r\n        };\r\n    };\r\n\r\n    Matrix.prototype.toFilter = function() {\r\n        return \"progid:DXImageTransform.Microsoft.Matrix(\" +\r\n           \"M11=\" + this.get('a') + \", \" +\r\n           \"M12=\" + this.get('c') + \", \" +\r\n           \"M21=\" + this.get('b') + \", \" +\r\n           \"M22=\" + this.get('d') + \", \" +\r\n           \"Dx=\"  + this.get('e') + \", \" +\r\n           \"Dy=\"  + this.get('f') + \", \" +\r\n           \"sizingmethod='auto expand'\"  +\r\n        \")\";\r\n    };\r\n\r\n    Matrix.prototype.toArray = function() {\r\n        return [\r\n            [this.get('a'), this.get('c'), this.get('e')],\r\n            [this.get('b'), this.get('d'), this.get('f')],\r\n            [0, 0, 1]\r\n        ];\r\n    };\r\n\r\n    Matrix.prototype.toValue = function() {\r\n        return _.format(\r\n            'matrix({0},{1},{2},{3},{4},{5})',\r\n            this.get('a'),\r\n            this.get('b'),\r\n            this.get('c'),\r\n            this.get('d'),\r\n            this.get('e'),\r\n            this.get('f')\r\n        );\r\n    };\r\n\r\n    Matrix.prototype.toString = function() {\r\n        return 'Graph.lang.Matrix';\r\n    };\r\n\r\n    Matrix.prototype.clone = function() {\r\n        return new Matrix(\r\n            this.props.a,\r\n            this.props.b,\r\n            this.props.c,\r\n            this.props.d,\r\n            this.props.e,\r\n            this.props.f\r\n        );\r\n    };\r\n\r\n    ///////// EXTENSION /////////\r\n\r\n    Graph.isMatrix = function(obj) {\r\n        return obj instanceof Graph.lang.Matrix;\r\n    };\r\n\r\n    Graph.matrix = function(a, b, c, d, e, f) {\r\n        return new Graph.lang.Matrix(a, b, c, d, e, f);\r\n    };\r\n\r\n}());\r\n","\r\n(function(){\r\n    \r\n    var storage = {},\r\n        context = {};\r\n\r\n    var Registry = function() {\r\n\r\n    };\r\n\r\n    Registry.prototype.constructor = Registry;\r\n\r\n    Registry.prototype.register = function(vector) {\r\n        var id = vector.guid(), found = this.get(id);\r\n        storage[id] = vector;\r\n    };\r\n\r\n    Registry.prototype.unregister = function(vector) {\r\n        var id = vector.guid();\r\n        if (storage[id]) {\r\n            delete storage[id];\r\n        }\r\n\r\n        if (context[id]) {\r\n            delete context[id];\r\n        }\r\n    };\r\n\r\n    Registry.prototype.setContext = function(id, scope) {\r\n        if (storage[id]) {\r\n            context[id] = scope;\r\n        }\r\n    };\r\n\r\n    Registry.prototype.size = function() {\r\n        return _.keys(storage).length;\r\n    };\r\n\r\n    Registry.prototype.toArray = function() {\r\n        var keys = _.keys(storage);\r\n        return _.map(keys, function(k){\r\n            return storage[k];\r\n        });\r\n    };\r\n\r\n    Registry.prototype.get = function(key) {\r\n\r\n        if (_.isUndefined(key)) {\r\n            return this.toArray();\r\n        }\r\n\r\n        if (key instanceof SVGElement) {\r\n            if (key.tagName == 'tspan') {\r\n                // we only interest to text\r\n                key = key.parentNode;\r\n            }\r\n            key = Graph.$(key).data(Graph.string.ID_VECTOR);\r\n        } else if (key instanceof Graph.dom.Element) {\r\n            key = key.data(Graph.string.ID_VECTOR);\r\n        }\r\n        return storage[key];\r\n    };\r\n\r\n    Registry.prototype.collect = function(scope) {\r\n        var vectors = [];\r\n        for (var id in context) {\r\n            if (context[id] == scope && storage[id]) {\r\n                vectors.push(storage[id]);\r\n            }\r\n        }\r\n        return vectors;\r\n    };\r\n\r\n    Registry.prototype.wipe = function(paper) {\r\n        var pid = paper.guid();\r\n\r\n        for (var id in storage) {\r\n            if (storage.hasOwnProperty(id)) {\r\n                if (storage[id].tree.paper == pid) {\r\n                    delete storage[id];\r\n                }\r\n            }\r\n        }\r\n\r\n        if (storage[pid]) {\r\n            delete storage[pid];\r\n        }\r\n    };\r\n\r\n    Registry.prototype.toString = function() {\r\n        return 'Graph.registry.Vector';\r\n    };\r\n    \r\n    Graph.registry.vector = new Registry();\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Shape = Graph.shape.Shape = Graph.extend({\r\n\r\n        props: {\r\n            id: null,\r\n            guid: null,\r\n            mode: null,\r\n            left: 0,\r\n            top: 0,\r\n            width: 0,\r\n            height: 0,\r\n            rotate: 0,\r\n            label: '',\r\n            alias: '',\r\n            fill: 'rgb(255, 255, 255)',\r\n            stroke: 'rgb(0, 0, 0)',\r\n            strokeWidth: 2\r\n        },\r\n\r\n        params: [],\r\n\r\n        components: {\r\n            shape: null,\r\n            block: null,\r\n            label: null,\r\n            child: null\r\n        },\r\n\r\n        layout: {\r\n            suspended: false\r\n        },\r\n\r\n        tree: {\r\n            paper: null,\r\n            parent: null,\r\n            children: null\r\n        },\r\n\r\n        metadata: {\r\n            type: null,\r\n            icon: Graph.icons.SHAPE,\r\n            style: 'graph-shape',\r\n            tools: null,\r\n            params: []\r\n        },\r\n\r\n        cached: {\r\n\r\n        },\r\n\r\n        plugins: {\r\n            manager: null\r\n        },\r\n\r\n        constructor: function(options) {\r\n            var guid;\r\n\r\n            this.data(options || {});\r\n\r\n            guid = 'graph-shape-' + (++Shape.guid);\r\n\r\n            this.props.guid = guid;\r\n            this.tree.children = new Graph.collection.Shape();\r\n            this.plugins.manager = new Graph.plugin.Manager();\r\n\r\n            this.initComponent();\r\n            this.initMetadata();\r\n\r\n            if (this.components.shape) {\r\n                var style = Graph.styles.SHAPE,\r\n                    shape = this.component();\r\n\r\n                if (this.metadata.style) {\r\n                    style += ' ' + this.metadata.style;\r\n                }\r\n\r\n                shape.addClass(style);\r\n                shape.attr('data-shape', guid);\r\n                \r\n                style = null;\r\n            }\r\n\r\n            Graph.registry.shape.register(this);\r\n\r\n            guid = null;\r\n        },\r\n\r\n        data: function(name, value) {\r\n            if (name === undefined && value === undefined) {\r\n                return this.props;\r\n            }\r\n\r\n            var excludes = {\r\n                type: true,\r\n                client_id: true,\r\n                client_parent: true,\r\n                client_pool: true,\r\n                diagram_id: true,\r\n                parent_id: true\r\n            };\r\n\r\n            var maps = {\r\n                stroke_width: 'strokeWidth'\r\n            };\r\n\r\n            var map, key;\r\n\r\n            if (_.isPlainObject(name)) {\r\n                for (key in name) {\r\n                    if ( ! excludes[key]) {\r\n                        map = maps[key] || key;\r\n                        if (key == 'params') {\r\n                            this.params = name[key];\r\n                        } else {\r\n                            this.props[map] = name[key];\r\n                        }\r\n                    }\r\n                }\r\n                return this;\r\n            }\r\n\r\n            if (value === undefined) {\r\n                return this.props[name];\r\n            }\r\n\r\n            if ( ! excludes[name]) {\r\n                map = maps[name] || name;\r\n                if (name == 'params') {\r\n                    this.params = value;\r\n                } else {\r\n                    this.props[map] = value;        \r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        update: function(data) {\r\n            data = data || {};\r\n\r\n            if (data.props) {\r\n                this.data(data.props);\r\n            }\r\n        },\r\n\r\n        redraw: function(props) {\r\n            var key;\r\n            \r\n            props = props || {};\r\n\r\n            this.suspendLayout();\r\n\r\n            for (key in props) {\r\n                if (this[key] !== undefined && _.isFunction(this[key])) {\r\n                    this[key](props[key]);\r\n                }\r\n            }\r\n\r\n            this.resumeLayout();\r\n            this.refresh();\r\n        },\r\n\r\n        is: function(type) {\r\n            return this.metadata.type == type;\r\n        },\r\n\r\n        initMetadata: function() {\r\n            this.metadata.tools = [\r\n                {\r\n                    name: 'config',\r\n                    icon: Graph.icons.CONFIG,\r\n                    title: Graph._('Click to config shape'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onConfigToolClick, this)\r\n                },\r\n                {\r\n                    name: 'link',\r\n                    icon: Graph.icons.LINK,\r\n                    title: Graph._('Click to start shape linking'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onLinkToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtofront',\r\n                    icon: Graph.icons.SEND_TO_FRONT,\r\n                    title: Graph._('Send to front'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onFrontToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtoback',\r\n                    icon: Graph.icons.SEND_TO_BACK,\r\n                    title: Graph._('Send to back'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBackToolClick, this)\r\n                },\r\n                {\r\n                    name: 'trash',\r\n                    icon: Graph.icons.TRASH,\r\n                    title: Graph._('Click to remove shape'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onTrashToolClick, this)\r\n                }\r\n            ];\r\n        },\r\n\r\n        initComponent: function() {\r\n            var shape = (new Graph.svg.Group());\r\n            this.components.shape = shape.guid();\r\n            shape = null;\r\n        },\r\n\r\n        component: function(name) {\r\n            var manager = Graph.registry.vector;\r\n            if (name === undefined) {\r\n                return manager.get(this.components.shape);\r\n            }\r\n            return manager.get(this.components[name]);\r\n        },\r\n\r\n        invalidate: function() {\r\n            for (var key in this.cached) {\r\n                this.cached[key] = null;\r\n            }\r\n        },\r\n\r\n        connectable: function() {\r\n            return this.plugins.manager.get('network');\r\n        },\r\n\r\n        resizable: function() {\r\n            return this.plugins.manager.get('resizer');\r\n        },\r\n\r\n        draggable: function() {\r\n            return this.plugins.manager.get('dragger');\r\n        },\r\n\r\n        snappable: function() {\r\n            return this.plugins.manager.get('snapper');\r\n        },\r\n\r\n        editable: function() {\r\n            return this.plugins.manager.get('editor');  \r\n        },\r\n\r\n        paper: function() {\r\n            return Graph.registry.vector.get(this.tree.paper);\r\n        },\r\n\r\n        parent: function() {\r\n            return Graph.registry.shape.get(this.tree.parent);\r\n        },\r\n\r\n        children: function() {\r\n            return this.tree.children;\r\n        },\r\n\r\n        hasChild: function(child) {\r\n            return this.children().has(child);\r\n        },\r\n\r\n        addChild: function(child, relocate) {\r\n            var children = this.children(),\r\n                placeTarget = this.component('child'),\r\n                guid = this.guid(),\r\n                me = this;\r\n\r\n            relocate = _.defaultTo(relocate, true);\r\n\r\n            if ( ! _.isArray(child)) {\r\n                child = [child];\r\n            }\r\n\r\n            var beforeDestroyHandler = _.bind(this.onChildBeforeDestroy, this);\r\n\r\n            _.forEach(child, function(shape){\r\n                var parent = shape.parent();\r\n\r\n                if (parent && parent.guid() != guid) {\r\n                    parent.removeChild(shape);\r\n                }\r\n\r\n                if ( ! children.has(shape)) {\r\n                    var shapeComponent = shape.component();\r\n\r\n                    if (relocate) {\r\n                        shapeComponent.relocate(placeTarget);    \r\n                    } else {\r\n                        placeTarget.append(shapeComponent);\r\n                    }\r\n                    \r\n                    shape.cached.beforeDestroyHandler = _.bind(me.onChildBeforeDestroy, me);\r\n                    shape.cached.afterDragHandler = _.bind(me.onChildAfterDrag, me);\r\n                    shape.cached.connectHandler = _.bind(me.onChildConnect, me);\r\n\r\n                    shape.on('beforedestroy', shape.cached.beforeDestroyHandler);\r\n                    shape.on('afterdrag', shape.cached.afterDragHandler);\r\n                    shape.on('connect', shape.cached.connectHandler);\r\n\r\n                    children.push(shape);\r\n                    shape.tree.parent = guid;\r\n\r\n                    // update shape props\r\n                    var matrix = shapeComponent.matrix();\r\n\r\n                    shape.data({\r\n                        left: matrix.props.e,\r\n                        top: matrix.props.f\r\n                    });\r\n                }\r\n            });\r\n\r\n            if (relocate) {\r\n                this.autoResize();    \r\n            }\r\n        },\r\n\r\n        removeChild: function(child) {\r\n            var children = this.children();\r\n\r\n            if (children.has(child)) {\r\n                children.pull(child);\r\n                child.tree.parent = null;\r\n            }\r\n        },\r\n\r\n        guid: function() {\r\n            return this.props.guid;\r\n        },\r\n\r\n        matrix: function() {\r\n            return this.component().matrix();\r\n        },\r\n\r\n        bbox: function() {\r\n            return Graph.bbox({\r\n                 x: this.props.left,\r\n                 y: this.props.top,\r\n                x2: this.props.left + this.props.width,\r\n                y2: this.props.top + this.props.height,\r\n                width: this.props.width,\r\n                height: this.props.height\r\n            });\r\n        },\r\n\r\n        render: function(paper) {\r\n            var guid = this.guid(),\r\n                paperGuid = paper.guid();\r\n\r\n            var component = this.component();\r\n            component && component.render(paper);\r\n            \r\n            // save\r\n            this.tree.paper = paperGuid;\r\n            Graph.registry.shape.setContext(guid, paperGuid);\r\n        },\r\n\r\n        select: function(single) {\r\n            var blockComponent = this.component('block'),\r\n                paper = this.paper();\r\n\r\n            single = _.defaultTo(single, false);\r\n\r\n            if (single && paper) {\r\n                paper.collector().clearCollection();\r\n            }\r\n\r\n            if (blockComponent) {\r\n                blockComponent.select();\r\n            }\r\n        },\r\n\r\n        deselect: function() {\r\n            var blockComponent = this.component('block');\r\n            if (blockComponent) {\r\n                blockComponent.deselect();\r\n            }\r\n        },\r\n\r\n        remove: function() {\r\n            // just fire block removal\r\n            this.component('block').remove();\r\n        },\r\n\r\n        refresh: _.debounce(function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n\r\n            var label = this.component('label'),\r\n                block = this.component('block'),\r\n                bound = block.bbox().toJson();\r\n\r\n            label.attr({\r\n                x: bound.x + bound.width  / 2,\r\n                y: bound.x + bound.height / 2\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n        }, 1),\r\n\r\n        autoResize: function() {\r\n\r\n        },\r\n\r\n        center: function() {\r\n            var bbox = this.component().bboxView().toJson();\r\n            return {\r\n                x: (bbox.x + bbox.x2) / 2,\r\n                y: (bbox.y + bbox.y2) / 2\r\n            };\r\n        },\r\n\r\n        translate: function(dx, dy) {\r\n            var component = this.component();\r\n            component.translate(dx, dy).commit();\r\n\r\n            // update props\r\n            var matrix = component.matrix(),\r\n                left = matrix.props.e,\r\n                top = matrix.props.f;\r\n\r\n            this.data({\r\n                left: left,\r\n                top: top\r\n            });\r\n\r\n            var childComponent = this.component('child');\r\n\r\n            if (childComponent) {\r\n                childComponent.dirty(true);\r\n            }\r\n\r\n        },\r\n\r\n        cascade: function(handler) {\r\n            cascade(this, handler);\r\n        },\r\n\r\n        sendToBack: function() {\r\n            var parent = this.parent(),\r\n                container = parent \r\n                    ? parent.component('child').elem\r\n                    : this.paper().viewport().elem;\r\n\r\n            container && container.prepend(this.component().elem);\r\n        },\r\n\r\n        sendToFront: function() {\r\n            var parent = this.parent(),\r\n                container = parent \r\n                    ? parent.component('child').elem\r\n                    : this.paper().viewport().elem;\r\n\r\n            container && container.append(this.component().elem);\r\n        },\r\n\r\n        suspendLayout: function() {\r\n            this.layout.suspended = true;\r\n        },\r\n\r\n        resumeLayout: function() {\r\n            this.layout.suspended = false;\r\n        },\r\n\r\n        /**\r\n         *  Use this method only for updating `width`, `height`, `left`, `top`\r\n         *  otherwise use data()\r\n         */\r\n        attr: function(name, value) {\r\n            var me = this;\r\n\r\n            if (_.isPlainObject(name)) {\r\n                _.forOwn(name, function(v, k){\r\n                    me.props[k] = v;\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (value === undefined) {\r\n                return this.props[name];\r\n            }\r\n\r\n            this.props[name] = value;\r\n            return this;\r\n        },\r\n\r\n        height: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.height;\r\n            }\r\n\r\n            var block = this.component('block'),\r\n                box = block.bbox().toJson(),\r\n                sx = 1,\r\n                sy = value / this.props.height,\r\n                cx = (box.x + box.x2) / 2,\r\n                cy = box.y,\r\n                dx = 0,\r\n                dy = 0;\r\n\r\n            var resize = block.resize(sx, sy, cx, cy, dx, dy);\r\n            block.fire('afterresize', resize);\r\n            \r\n            this.props.height = value;\r\n            return this;\r\n        },\r\n\r\n        width: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.width;\r\n            }\r\n\r\n            var block = this.component('block'),\r\n                box = block.bbox().toJson(),\r\n                sx = value / this.props.width,\r\n                sy = 1,\r\n                cx = box.x,\r\n                cy = (box.y + box.y2) / 2,\r\n                dx = 0,\r\n                dy = 0;\r\n\r\n            var resize = block.resize(sx, sy, cx, cy, dx, dy);\r\n            block.fire('afterresize', resize);\r\n\r\n            this.props.width = value;\r\n            return this;\r\n        },\r\n\r\n        left: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.left;\r\n            }\r\n\r\n            var shape = this.component(),\r\n                matrix = shape.matrix(),\r\n                dx = value - matrix.props.e,\r\n                dy = 0;\r\n\r\n            shape.translate(dx, dy).commit();\r\n            this.props.left = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        top: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.top;\r\n            }\r\n\r\n            var shape = this.component(),\r\n                matrix = shape.matrix(),\r\n                dx = 0,\r\n                dy = value - matrix.props.f;\r\n\r\n            shape.translate(dx, dy).commit();\r\n            this.props.top = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        rotate: function(value) {\r\n            var block = this.component('block');\r\n            if (block && block.isRotatable()) {\r\n                var center = block.bbox().toJson();\r\n                block.rotate(value, center.x, center.y).commit();\r\n            }\r\n        },\r\n\r\n        label: function(label) {\r\n            if (label === undefined) {\r\n                return this.props.label;\r\n            }\r\n\r\n            var blockComponent = this.component('block'),\r\n                labelComponent = this.component('label');\r\n\r\n            labelComponent.props.text = label;\r\n            blockComponent.data('text', label);\r\n\r\n            this.props.label = label;\r\n            this.refresh();\r\n        },\r\n\r\n        fill: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.fill;\r\n            }\r\n            this.props.fill = value;\r\n            this.component('block').elem.css('fill', value);\r\n        },\r\n\r\n        stroke: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.stroke;\r\n            }\r\n            \r\n            this.props.stroke = value;\r\n            this.component('block').elem.css('stroke', value);\r\n        },\r\n\r\n        strokeWidth: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.strokeWidth;\r\n            }\r\n\r\n            this.props.strokeWidth = value;\r\n            this.component('block').elem.css('stroke-width', value);\r\n        },\r\n\r\n        connect: function(target, start, end, options){\r\n            var sourceNetwork = this.connectable().plugin(),\r\n                targetNetwork = target.connectable().plugin();\r\n\r\n            if (sourceNetwork && targetNetwork) {\r\n                return sourceNetwork.connect(targetNetwork, start, end, options);\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        disconnect: function(target, link) {\r\n            var sourceNetwork = this.connectable().plugin(),\r\n                targetNetwork = target.connectable().plugin();\r\n\r\n            if (sourceNetwork && targetNetwork) {\r\n                return sourceNetwork.disconnect(targetNetwork, link);\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        toJson: function() {\r\n            var blockComponent = this.component('block'),\r\n                paper = this.paper();\r\n\r\n            var shape = {\r\n                metadata: {\r\n\r\n                },\r\n                props: {\r\n                    id: this.props.id,\r\n                    type: this.toString(),\r\n                    mode: this.props.mode,\r\n                    guid: this.props.guid,\r\n                    pool: null,\r\n                    parent: this.tree.parent,\r\n                    label: this.props.label,\r\n                    left: this.props.left,\r\n                    top: this.props.top,\r\n                    width: this.props.width,\r\n                    height: this.props.height,\r\n                    rotate: this.props.rotate,\r\n                    fill: this.props.fill,\r\n                    strokeWidth: this.props.strokeWidth,\r\n                    stroke: this.props.stroke\r\n                },\r\n                params: this.params,\r\n                links: [\r\n                    \r\n                ]\r\n            };\r\n\r\n            var network = this.connectable().plugin();\r\n\r\n            if (network) {\r\n                var connections = network.connections();\r\n\r\n                _.forEach(connections, function(conn){\r\n                    var linkData = conn.link.toJson();\r\n\r\n                    shape.links.push({\r\n                        guid: conn.guid,\r\n                        mode: conn.type,\r\n                        pair: conn.type == 'outgoing' ? linkData.props.target : linkData.props.source\r\n                    });\r\n                });\r\n            }\r\n\r\n            return shape;\r\n        },\r\n\r\n        ///////// PRIVATE OBSERVERS /////////\r\n\r\n        onLabelEdit: function(e) {\r\n            this.label(e.text);\r\n        },\r\n\r\n        onBeforeDrag: function(e) {\r\n            this.fire(e);\r\n            this.paper().diagram().capture();\r\n        },\r\n\r\n        onAfterDrag: function(e) {\r\n            var blockComponent = this.component('block'),\r\n                shapeComponent = this.component('shape'),\r\n                childComponent = this.component('child'),\r\n                blockMatrix = blockComponent.matrix();\r\n\r\n            var shapeMatrix;\r\n\r\n            blockComponent.reset();\r\n\r\n            shapeComponent.matrix().multiply(blockMatrix);\r\n            shapeComponent.attr('transform', shapeComponent.matrix().toValue());\r\n            shapeComponent.dirty(true);\r\n\r\n            if (childComponent) {\r\n                childComponent.dirty(true);\r\n            }\r\n\r\n            // update props\r\n            shapeMatrix = shapeComponent.matrix();\r\n\r\n            this.data({\r\n                left: shapeMatrix.props.e,\r\n                top: shapeMatrix.props.f\r\n            });\r\n\r\n            // forward\r\n            this.fire(e);\r\n        },\r\n\r\n        onAfterRotate: function(e) {\r\n            var shapeComponent = this.component('shape'),\r\n                blockComponent = this.component('block'),\r\n                childComponent = this.component('child');\r\n\r\n            var shapeMatrix = shapeComponent.matrix();\r\n\r\n            shapeMatrix.multiply(blockComponent.matrix());\r\n            shapeComponent.attr('transform', shapeMatrix.toValue());\r\n            shapeComponent.dirty(true);\r\n\r\n            if (childComponent) {\r\n                childComponent.dirty(true);\r\n            }\r\n\r\n            blockComponent.reset();\r\n            blockComponent.rotatable().redraw();\r\n\r\n            if (blockComponent.isResizable() && blockComponent.resizable().props.suspended === false) {\r\n                blockComponent.resizable().redraw();    \r\n            }\r\n\r\n            var shapeRotate = shapeMatrix.rotate();\r\n            this.props.rotate = shapeRotate.deg;\r\n        },\r\n\r\n        onSelect: function(e) {\r\n            this.component('shape').addClass('shape-selected');\r\n            if (e.initial) {\r\n                Graph.topic.publish('shape:select', {shape: this});    \r\n            }\r\n        },\r\n\r\n        onDeselect: function(e) {\r\n            this.component('shape').removeClass('shape-selected');\r\n            if (e.initial) {\r\n                Graph.topic.publish('shape:deselect', {shape: this});\r\n            }\r\n        },\r\n\r\n        onConnect: function(e) {\r\n            var link = e.link,\r\n                sourceVector = link.router.source(),\r\n                targetVector = link.router.target();\r\n\r\n            if (sourceVector && targetVector) {\r\n                var sourceShape = Graph.registry.shape.get(sourceVector),\r\n                    targetShape = Graph.registry.shape.get(targetVector);\r\n\r\n                if (sourceShape && targetShape) {\r\n                    this.fire('connect', {\r\n                        link: link,\r\n                        source: sourceShape,\r\n                        target: targetShape\r\n                    });\r\n                }\r\n            }\r\n        },\r\n\r\n        onAfterResize: function() {\r\n            this.refresh();\r\n        },\r\n\r\n        onBeforeDestroy: function() {\r\n            this.fire('beforedestroy', {shape: this});\r\n        },\r\n\r\n        onAfterDestroy: function() {\r\n            // remove label\r\n            this.component('label').remove();\r\n\r\n            // remove shape\r\n            this.component('shape').remove();\r\n\r\n            for (var name in this.components) {\r\n                this.components[name] = null;\r\n            }\r\n\r\n            this.fire('afterdestroy', {shape: this});\r\n            Graph.registry.shape.unregister(this);\r\n        },\r\n\r\n        onChildConnect: function(e) {\r\n\r\n        },\r\n\r\n        onChildAfterDrag: function(e) {\r\n            var childComponent;\r\n\r\n            if (e.batch) {\r\n                if (e.master) {\r\n                    childComponent = this.component('child');\r\n                    if (childComponent) {\r\n                        childComponent.dirty(true);\r\n                    }\r\n                }\r\n            } else {\r\n                childComponent = this.component('child');\r\n                if (childComponent) {\r\n                    childComponent.dirty(true);\r\n                }\r\n            }\r\n        },\r\n\r\n        onChildBeforeDestroy: function(e) {\r\n            var shape = e.shape;\r\n\r\n            this.children().pull(shape);\r\n\r\n            shape.off('beforedestroy', shape.cached.beforeDestroyHandler);\r\n            shape.off('afterdrag', shape.cached.afterDragHandler);\r\n            shape.off('connect', shape.cached.connectHandler);\r\n\r\n            shape.cached.beforeDestroyHandler = null;\r\n            shape.cached.afterDragHandler = null;\r\n            shape.cached.connectHandler = null;\r\n\r\n            var childComponent = shape.component('child');\r\n\r\n            if (childComponent) {\r\n                childComponent.dirty(true);\r\n            }\r\n        },\r\n\r\n        onConfigToolClick: function(e) {\r\n\r\n        },\r\n\r\n        onTrashToolClick: function(e) {\r\n            this.paper().diagram().capture();\r\n            this.remove();\r\n        },\r\n\r\n        onLinkToolClick: function(e) {\r\n            var paper = this.paper();\r\n\r\n            if (paper) {\r\n                var layout = paper.layout(),\r\n                    linker = paper.plugins.linker,\r\n                    coord  = layout.pointerLocation(e);\r\n\r\n                paper.tool().activate('linker');\r\n                linker.start(this.connectable().component(), coord);\r\n            }\r\n        },\r\n\r\n        onFrontToolClick: function(e) {\r\n            this.sendToFront();\r\n        },\r\n\r\n        onBackToolClick: function(e) {\r\n            this.sendToBack();\r\n        }\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n    Shape.guid = 0;\r\n\r\n    ///////// EXTENSION /////////\r\n\r\n    Graph.isShape = function(obj) {\r\n        return obj instanceof Graph.shape.Shape;\r\n    };\r\n\r\n    ///////// HELPERS /////////\r\n\r\n    function cascade(shape, handler) {\r\n        var child = shape.children().toArray();\r\n        var result;\r\n\r\n        result = handler.call(shape, shape);\r\n        result = _.defaultTo(result, true);\r\n\r\n        if (result && child.length) {\r\n            _.forEach(child, function(curr){\r\n                cascade(curr, handler);\r\n            });\r\n        }\r\n    }\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var Tree = Graph.collection.Tree = function(nodes) {\r\n        var me = this;\r\n\r\n        me.nodes = nodes;\r\n        \r\n        me.key = function(node){ return node; };\r\n\r\n        me.bisect = _.bisector(function(node){ \r\n            return me.key(node); \r\n        }).left;\r\n    };\r\n\r\n    Tree.prototype.get = function(index) {\r\n        return this.nodes[index];\r\n    };\r\n\r\n    Tree.prototype.size = function() {\r\n        return this.nodes.length;\r\n    };\r\n\r\n    Tree.prototype.insert = function(node) {\r\n        var index = this.index(node),\r\n            value = this.key(node);\r\n\r\n        if (this.nodes[index] && value == this.key(this.nodes[index])) {\r\n            return;\r\n        }\r\n\r\n        this.nodes.splice(index, 0, node);\r\n\r\n        return index;\r\n    };\r\n\r\n    Tree.prototype.remove = function(node) {\r\n        var index = this.index(node);\r\n        this.nodes.splice(index, 1);\r\n        \r\n        return index;\r\n    };\r\n\r\n    Tree.prototype.keygen = function(keygen) {\r\n        this.key = keygen;\r\n        return this;\r\n    };\r\n\r\n    Tree.prototype.index = function(node) {\r\n        return this.bisect(this.nodes, this.key(node));\r\n    };\r\n\r\n    Tree.prototype.order = function() {\r\n        this.nodes.sort(_.ascendingKey(this.key));\r\n        return this;\r\n    };\r\n    \r\n    Tree.prototype.root = function() {\r\n        return this.nodes[0];\r\n    };\r\n    \r\n    Tree.prototype.cascade = function(node, iteratee) {\r\n        var index = this.index(node),\r\n            nodes = this.nodes,\r\n            count = this.nodes.length;\r\n        \r\n        var start = 0;\r\n        \r\n        for (var n = index; n < count; n++) {\r\n            iteratee(nodes[n], start);\r\n            start++;\r\n        }\r\n    };\r\n\r\n    Tree.prototype.bubble = function(node, iteratee) {\r\n        var index = this.index(node),\r\n            nodes = this.nodes;\r\n\r\n        var start = 0;\r\n\r\n        for (var n = index; n >= 0; n--) {\r\n            iteratee(nodes[n], start);\r\n            start++;\r\n        }\r\n    };\r\n\r\n    Tree.prototype.toArray = function() {\r\n        return this.nodes.slice();\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Link = Graph.link.Link = Graph.extend({\r\n\r\n        props: {\r\n            id: null,\r\n            guid: null,\r\n            type: 'normal',\r\n            rendered: false,\r\n            selected: false,\r\n            label: '',\r\n            labelDistance: .5,\r\n            source: null,\r\n            target: null,\r\n            connected: false,\r\n            removed: false,\r\n            command: null,\r\n            stroke: '#000' \r\n        },\r\n\r\n        params: [],\r\n\r\n        components: {\r\n            block: null,\r\n            coat: null,\r\n            path: null,\r\n            label: null,\r\n            editor: null\r\n        },\r\n\r\n        cached: {\r\n            bendpoints: null,\r\n            controls: null,\r\n            convex: null\r\n        },\r\n\r\n        handlers: {\r\n            source: null,\r\n            target: null\r\n        },\r\n\r\n        router: null,\r\n\r\n        metadata: {\r\n            icon: Graph.icons.SHAPE_LINK\r\n        },\r\n\r\n        constructor: function(router, options) {\r\n            var guid;\r\n            this.data(options || {});\r\n\r\n            guid = 'graph-link-' + (++Link.guid);\r\n\r\n            this.props.guid = guid;\r\n            this.router = router;\r\n\r\n            this.initComponent();\r\n            this.initMetadata();\r\n\r\n            this.bindResource('source', router.source());\r\n            this.bindResource('target', router.target());\r\n\r\n            this.router.on('route', _.bind(this.onRouterRoute, this));\r\n            this.router.on('reroute', _.bind(this.onRouterReroute, this));\r\n\r\n            Graph.registry.link.register(this);\r\n        },\r\n\r\n        data: function(name, value) {\r\n            if (name === undefined && value === undefined) {\r\n                return this.props;\r\n            }\r\n\r\n            var excludes = {\r\n                type: true,\r\n                router_type: true,\r\n                client_id: true,\r\n                client_source: true,\r\n                client_target: true,\r\n                diagram_id: true,\r\n                source_id: true,\r\n                target_id: true\r\n            };\r\n\r\n            var maps = {\r\n                label_distance: 'labelDistance'\r\n            };\r\n\r\n            var key, map;\r\n\r\n            if (_.isPlainObject(name)) {\r\n                for (var key in name) {\r\n                    if ( ! excludes[key]) { \r\n                        map = maps[key] || key;\r\n                        if (key == 'params') {\r\n                            this.params = name[key];\r\n                        } else {\r\n                            this.props[map] = name[key];        \r\n                        }\r\n                    }\r\n                }\r\n                return this;\r\n            }\r\n\r\n            if (value === undefined) {\r\n                return this.props[name];\r\n            }\r\n\r\n            if ( ! excludes[name]) {\r\n                map = maps[name] || name;\r\n                if (name == 'params') {\r\n                    this.params = value;\r\n                } else {\r\n                    this.props[map] = value;        \r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components;\r\n            var block, coat, path, editor, label;\r\n\r\n            block = (new Graph.svg.Group())\r\n                .addClass('graph-link')\r\n                .selectable(false);\r\n\r\n            block.elem.data(Graph.string.ID_LINK, this.props.guid);\r\n            block.addClass('link-' + this.props.type);\r\n\r\n            coat = (new Graph.svg.Path())\r\n                .addClass('graph-link-coat')\r\n                .render(block);\r\n\r\n            coat.data('text', this.props.label);\r\n            coat.elem.data(Graph.string.ID_LINK, this.props.guid);\r\n\r\n            coat.draggable({\r\n                ghost: true,\r\n                manual: true,\r\n                batchSync: false\r\n            });\r\n\r\n            coat.editable({\r\n                width: 150,\r\n                height: 80,\r\n                offset: 'pointer'\r\n            });\r\n\r\n            coat.on('pointerdown.link', _.bind(this.onCoatClick, this));\r\n            coat.on('select.link', _.bind(this.onCoatSelect, this));\r\n            coat.on('deselect.link', _.bind(this.onCoatDeselect, this));\r\n            coat.on('beforedrag.link', _.bind(this.onCoatBeforeDrag, this));\r\n            coat.on('afterdrag.link', _.bind(this.onCoatAfterDrag, this));\r\n            coat.on('edit.link', _.bind(this.onCoatEdit, this));\r\n            coat.on('beforeedit.link', _.bind(this.onCoatBeforeEdit, this));\r\n            coat.on('afterdestroy.link', _.bind(this.onCoatAfterDestroy, this));\r\n\r\n            path = (new Graph.svg.Path())\r\n                .addClass('graph-link-path')\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .attr('marker-end', 'url(#marker-link-end)')\r\n                .attr('stroke', this.props.stroke || '#000000')\r\n                .render(block);\r\n\r\n            if (this.props.type == 'message') {\r\n                path.attr('marker-start', 'url(#marker-link-start-circle)');\r\n            }\r\n\r\n            path.elem.data(Graph.string.ID_LINK, this.props.guid);\r\n\r\n            label = (new Graph.svg.Text(0, 0, ''))\r\n                .addClass('graph-link-label')\r\n                .selectable(false)\r\n                .render(block);\r\n\r\n            label.draggable({ghost: true});\r\n\r\n            label.on('render.link', _.bind(this.onLabelRender, this));\r\n            label.on('afterdrag.link', _.bind(this.onLabelAfterDrag, this));\r\n\r\n            // enable label doubletap\r\n            var labelVendor = label.interactable().vendor();\r\n            labelVendor.on('doubletap', _.bind(this.onLabelDoubletap, this));\r\n\r\n            editor = (new Graph.svg.Group())\r\n                .selectable(false)\r\n                .render(block);\r\n\r\n            comp.block = block.guid();\r\n            comp.coat = coat.guid();\r\n            comp.path = path.guid();\r\n            comp.label = label.guid();\r\n            comp.editor = editor.guid();\r\n        },\r\n\r\n        initMetadata: function() {\r\n            this.metadata.tools = [\r\n                {\r\n                    name: 'config',\r\n                    icon: Graph.icons.CONFIG,\r\n                    title: Graph._('Click to config link'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onConfigToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtofront',\r\n                    icon: Graph.icons.SEND_TO_FRONT,\r\n                    title: Graph._('Send to front'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onFrontToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtoback',\r\n                    icon: Graph.icons.SEND_TO_BACK,\r\n                    title: Graph._('Send to back'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBackToolClick, this)\r\n                },\r\n                {\r\n                    name: 'trash',\r\n                    icon: Graph.icons.TRASH,\r\n                    title: Graph._('Click to remove link'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onTrashToolClick, this)\r\n                }\r\n            ];\r\n        },\r\n\r\n        unbindResource: function(type) {\r\n            var existing = this.props[type],\r\n                handlers = this.handlers[type];\r\n\r\n            if (existing) {\r\n                var vector = Graph.registry.vector.get(existing);\r\n                if (vector) {\r\n                    if (handlers) {\r\n                        var name, ns;\r\n                        for (name in handlers) {\r\n                            ns = name + '.link';\r\n                            vector.off(ns, handlers[name]);\r\n                            ns = null;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            handlers = null;\r\n\r\n            return this;\r\n        },\r\n\r\n        bindResource: function(type, resource) {\r\n            var router = this.router,\r\n                handlers = this.handlers[type];\r\n\r\n            this.unbindResource(type, resource);\r\n\r\n            handlers = {};\r\n\r\n            handlers.afterresize = _.bind(getHandler(this, type, 'AfterResize'), this);\r\n            handlers.select = _.bind(getHandler(this, type, 'Select'), this);\r\n            handlers.afterrotate = _.bind(getHandler(this, type, 'AfterRotate'), this);\r\n            handlers.beforedrag = _.bind(getHandler(this, type, 'BeforeDrag'), this, _, resource);\r\n            handlers.drag = _.bind(getHandler(this, type, 'Drag'), this);\r\n            handlers.afterdrag = _.bind(getHandler(this, type, 'AfterDrag'), this);\r\n            handlers.beforedestroy = _.bind(getHandler(this, type, 'BeforeDestroy'), this);\r\n            \r\n            this.handlers[type] = handlers;\r\n            this.props[type] = resource.guid();\r\n\r\n            resource.on('afterresize.link', handlers.afterresize);\r\n            resource.on('afterrotate.link', handlers.afterrotate);\r\n            resource.on('beforedestroy.link', handlers.beforedestroy);\r\n            resource.on('select.link', handlers.select);\r\n\r\n            // VERY EXPENSIVE!!!\r\n            if (resource.isDraggable()) {\r\n                resource.on('beforedrag.link', handlers.beforedrag);\r\n                if ( ! resource.draggable().ghost()) {\r\n                    resource.on('drag.link', handlers.drag);\r\n                } else {\r\n                    resource.on('afterdrag.link', handlers.afterdrag);\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        bindSource: function(source) {\r\n            return this.bindResource('source', source);\r\n        },\r\n\r\n        bindTarget: function(target) {\r\n            return this.bindResource('target', target);\r\n        },\r\n\r\n        unbindSource: function(source) {\r\n            return this.unbindResource('source');\r\n        },\r\n\r\n        unbindTarget: function(target) {\r\n            return this.unbindResource('target');\r\n        },\r\n\r\n        component: function(name) {\r\n            if (name === undefined) {\r\n                return Graph.registry.vector.get(this.components.block);\r\n            }\r\n            return Graph.registry.vector.get(this.components[name]);\r\n        },\r\n\r\n        invalidate: function(cache) {\r\n            if (cache !== undefined) {\r\n                this.cached[cache] = null;\r\n            } else {\r\n                this.cached.bendpoints = null;\r\n            }\r\n        },\r\n\r\n        render: function(container) {\r\n            var paper;\r\n\r\n            this.component().render(container);\r\n            paper = container.paper();\r\n\r\n            if (paper) {\r\n                Graph.registry.link.setContext(this.guid(), paper.guid());\r\n            }\r\n        },\r\n\r\n        id: function() {\r\n            return this.props.id;\r\n        },\r\n\r\n        guid: function() {\r\n            return this.props.guid;\r\n        },\r\n\r\n        type: function(type) {\r\n            if (type === undefined) {\r\n                return this.props.type;\r\n            }\r\n\r\n            this.props.type = type;\r\n\r\n            var component = this.component();\r\n\r\n            if (type == 'message') {\r\n                this.component('path').attr('marker-start', 'url(#marker-link-start-circle)');\r\n            } else {\r\n                this.component('path').attr('marker-start', '');\r\n            }\r\n\r\n            component.removeClass('link-normal link-message');\r\n            component.addClass('link-' + type);\r\n        },\r\n\r\n        connect: function(start, end) {\r\n            // already connected ?\r\n            if (this.props.connected) {\r\n                return;\r\n            }\r\n\r\n            this.router.route(start, end);\r\n            this.props.connected = true;\r\n        },\r\n\r\n        connectByCommand: function(command) {\r\n            if (this.props.connected) {\r\n                return;\r\n            }\r\n\r\n            this.router.execute(command);\r\n            this.props.connected = true;\r\n        },\r\n\r\n        disconnect: function(reload) {\r\n            // already disconnected ?\r\n            if ( ! this.props.connected) {\r\n                return;\r\n            }\r\n\r\n            reload = _.defaultTo(reload, true);\r\n\r\n            this.props.connected = false;\r\n\r\n            if (reload) {\r\n                this.router.reset();\r\n                this.reload(this.router.command());    \r\n            }\r\n        },\r\n\r\n        redraw: function(props) {\r\n\r\n        },\r\n\r\n        reload: function(command, silent) {\r\n            silent = _.defaultTo(silent, false);\r\n\r\n            command = command || '';\r\n\r\n            this.component('coat').attr('d', command).dirty(true);\r\n            this.component('path').attr('d', command);\r\n            this.invalidate();\r\n\r\n            if ( ! silent) {\r\n                this.refresh();\r\n                this.fire('change');\r\n                Graph.topic.publish('link:change');\r\n            }\r\n        },\r\n\r\n        reloadConvex: function(convex) {\r\n            this.cached.convex = convex;\r\n        },\r\n\r\n        removeConvex: function() {\r\n            this.cached.convex = null;\r\n        },\r\n\r\n        reset: function(silent) {\r\n            var command = this.router.command();\r\n            this.reload(command, silent);\r\n        },\r\n\r\n        refresh: function() {\r\n\r\n            // TODO: update label position\r\n            if (this.props.label) {\r\n                var label = this.component('label');\r\n\r\n                if (label.props.rendered) {\r\n                    var path = this.router.path();\r\n\r\n                    if (path.segments.length) {\r\n                        var bound = label.bbox().toJson(),\r\n                            distance = this.props.labelDistance || .5,\r\n                            scale = this.router.layout().scale(),\r\n                            path = this.router.path(),\r\n                            dots = path.pointAt(distance * path.length(), true),\r\n                            align = Graph.util.pointAlign(dots.start, dots.end, 10);\r\n\r\n                        if (align == 'h') {\r\n                            dots.x += (bound.width / 2 + (10 / scale.x));\r\n                        } else {\r\n                            dots.y -= (bound.height - (5 / scale.y));\r\n                        }\r\n\r\n                        label.attr({\r\n                            x: dots.x,\r\n                            y: dots.y\r\n                        });\r\n\r\n                        label.arrange();\r\n\r\n                        path = null;\r\n                        dots = null;\r\n\r\n                        label.dirty(true);\r\n                    } else {\r\n                        label.hide();\r\n                    }\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        label: function(text) {\r\n            var path, distance, point, align;\r\n\r\n            if (text === undefined) {\r\n                return this.props.label;\r\n            }\r\n\r\n            this.props.label = text;\r\n            \r\n            var componentLabel = this.component('label'),\r\n                componentCoat = this.component('coat');\r\n\r\n            componentLabel.write(text);\r\n            componentLabel.arrange();\r\n\r\n            componentCoat.data('text', text);\r\n            \r\n            if (componentLabel.props.rendered) {\r\n                this.refresh();\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        select: function(single) {\r\n            var paper = this.router.source().paper();\r\n            single = _.defaultTo(single, false);\r\n            if (single && paper) {\r\n                paper.collector().clearCollection();\r\n            }\r\n\r\n            this.component('coat').select();\r\n        },\r\n\r\n        deselect: function() {\r\n            this.component('coat').deselect();\r\n        },\r\n\r\n        renderControl: function() {\r\n            // TODO: render bends control\r\n        },\r\n\r\n        resumeControl: function() {\r\n            var me = this, editor = me.component('editor');\r\n\r\n            if ( ! me.cached.bendpoints) {\r\n                me.cached.bendpoints = me.router.bendpoints();\r\n                me.renderControl();\r\n            }\r\n\r\n            editor.elem.appendTo(this.component('block').elem);\r\n        },\r\n\r\n        suspendControl: function() {\r\n            this.component('editor').elem.detach();\r\n        },\r\n\r\n        sendToFront: function() {\r\n            var container = this.component().parent();\r\n            this.component().elem.appendTo(container.elem);\r\n        },\r\n\r\n        relocate: function(dx, dy) {\r\n            this.router.relocate(dx, dy);\r\n            this.reload(this.router.command());\r\n        },\r\n\r\n        relocateHead: function(dx, dy) {\r\n            var port = this.router.head();\r\n            if (port) {\r\n                port.x += dx;\r\n                port.y += dy;\r\n                this.router.repair(this.router.target(), port);\r\n            }\r\n        },\r\n\r\n        relocateTail: function(dx, dy) {\r\n            var port = this.router.tail();\r\n            if (port) {\r\n                port.x += dx;\r\n                port.y += dy;\r\n                this.router.repair(this.router.source(), port);\r\n            }\r\n        },\r\n\r\n        remove: function() {\r\n            var me = this;\r\n            var prop;\r\n\r\n            if (this.props.removed) {\r\n                return;\r\n            }\r\n\r\n            // flag\r\n            this.props.removed = true;\r\n\r\n            // disconnect first\r\n            this.disconnect(false);\r\n            \r\n            // unbind resource\r\n            this.unbindSource();\r\n            this.unbindTarget();\r\n\r\n            this.fire('beforedestroy', {link: this});\r\n\r\n            // remove label\r\n            me.component('label').remove();\r\n\r\n            // remove vertexs\r\n            if (me.cached.controls) {\r\n                _.forEach(me.cached.controls, function(id){\r\n                    var c = Graph.registry.vector.get(id);\r\n                    c && c.remove();\r\n                });\r\n                me.cached.controls = null;\r\n            }\r\n\r\n            // remove editor\r\n            me.component('editor').remove();\r\n\r\n            // remove path\r\n            me.component('path').remove();\r\n\r\n            // remove block\r\n            me.component('block').remove();\r\n\r\n            for (prop in me.components) {\r\n                me.components[prop] = null;\r\n            }\r\n\r\n            // clear cache\r\n            for (prop in me.cached) {\r\n                me.cached[prop] = null;\r\n            }\r\n\r\n            me.router.destroy();\r\n            me.router = null;\r\n\r\n            me.fire('afterdestroy');\r\n\r\n            // unregister\r\n            Graph.registry.link.unregister(me);\r\n\r\n            // publish\r\n            Graph.topic.publish('link:afterdestroy');\r\n        },\r\n        isSelected: function() {\r\n            return this.props.selected;\r\n        },\r\n        isConnected: function() {\r\n            return this.props.connected;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.link.Link';\r\n        },\r\n\r\n        toJson: function() {\r\n            var source = this.router.source(),\r\n                target = this.router.target();\r\n\r\n            var sourceShape = Graph.registry.shape.get(source),\r\n                targetShape = Graph.registry.shape.get(target);\r\n\r\n            var link = {\r\n                metadata: {\r\n\r\n                },\r\n                props: {\r\n                    id: this.props.id,\r\n                    guid: this.guid(),\r\n                    type: this.toString(),\r\n                    routerType: this.router.type(),\r\n                    command: this.router.command(),\r\n                    label: this.props.label,\r\n                    labelDistance: this.props.labelDistance,\r\n                    source: sourceShape ? sourceShape.guid() : source.guid(),\r\n                    sourceType: sourceShape ? 'shape' : 'vector',\r\n                    target: targetShape ? targetShape.guid() : target.guid(),\r\n                    targetType: targetShape ? 'shape' : 'vector',\r\n                    convex: 1,\r\n                    smooth: this.props.smooth ? 1 : 0,\r\n                    smoothness: this.props.smoothness,\r\n                    stroke: this.props.stroke\r\n                },\r\n\r\n                params: this.params\r\n            };\r\n\r\n            return link;\r\n        },\r\n\r\n        ///////// OBSERVERS /////////\r\n\r\n        onRouterRoute: function(e) {\r\n            var command = e.command;\r\n            this.reload(command);\r\n        },\r\n\r\n        onRouterReroute: function(e) {\r\n            var source = e.source,\r\n                target = e.target;\r\n\r\n            this.bindResource('source', source);\r\n            this.bindResource('target', target);\r\n\r\n            this.sendToFront();\r\n        },\r\n\r\n        onLabelRender: function(e) {\r\n            if (this.props.label) {\r\n                this.label(this.props.label);\r\n            }\r\n        },\r\n\r\n        onLabelAfterDrag: function(e) {\r\n            var label = this.component('label'),\r\n                matrix = label.matrix(),\r\n                x = label.attrs.x,\r\n                y = label.attrs.y,\r\n                p = {\r\n                    x: matrix.x(x, y),\r\n                    y: matrix.y(x, y)\r\n                }\r\n\r\n            label.attr({\r\n                x: p.x,\r\n                y: p.y\r\n            });\r\n\r\n            label.arrange();\r\n\r\n            // update label distance\r\n            var path = this.router.path(),\r\n                near = path.nearest(p);\r\n\r\n            this.props.labelDistance = near.distance / path.length();\r\n\r\n            label.reset();\r\n            matrix = path = null;\r\n        },\r\n\r\n        onLabelDoubletap: function(e) {\r\n            var coat = this.component('coat');\r\n            coat.editable().startEdit(e);\r\n        },\r\n\r\n        onCoatBeforeEdit: function(e) {\r\n            this.component('label').hide();\r\n            this.component().addClass('editing');\r\n        },\r\n\r\n        onCoatEdit: function(e) {\r\n            this.component().removeClass('editing');\r\n            this.component('label').show();\r\n            this.label(e.text, e.left, e.top);\r\n        },\r\n\r\n        onCoatClick: function(e) {\r\n            var paper = this.component('coat').paper();\r\n            if (paper.state() == 'linking') {\r\n                paper.tool().activate('panzoom');\r\n            }\r\n        },\r\n\r\n        onCoatSelect: function(e) {\r\n            var coat = this.component('coat'),\r\n                showControl = false;\r\n\r\n            if (e.initial) {\r\n                showControl = true;\r\n            }\r\n\r\n            this.props.selected = true;\r\n            this.component().addClass('selected');\r\n\r\n            if (showControl) {\r\n                this.resumeControl();\r\n                Graph.topic.publish('link:select', {link: this});\r\n            }\r\n        },\r\n\r\n        onCoatDeselect: function(e) {\r\n            if (this.props.removed) return;\r\n\r\n            this.props.selected = false;\r\n            this.component().removeClass('selected');\r\n            this.suspendControl();\r\n\r\n            if (e.initial) {\r\n                Graph.topic.publish('link:deselect', {link: this});    \r\n            }\r\n        },\r\n\r\n        onCoatBeforeDrag: function(e) {\r\n            this.suspendControl();\r\n        },\r\n\r\n        onCoatAfterDrag: function(e) {\r\n            this.relocate(e.dx, e.dy);\r\n        },\r\n\r\n        onCoatAfterDestroy: function(e) {\r\n            this.remove();\r\n        },\r\n\r\n        ///////// OBSERVERS /////////\r\n\r\n        onSourceAfterRotate: function(e) {\r\n            var matrix = this.router.source().matrix(),\r\n                oport = this.router.tail(),\r\n                nport = {\r\n                    x: matrix.x(oport.x, oport.y),\r\n                    y: matrix.y(oport.x, oport.y)\r\n                },\r\n                dx = nport.x - oport.x,\r\n                dy = nport.y - oport.y;\r\n\r\n            this.relocateTail(dx, dy);\r\n        },\r\n\r\n        onSourceSelect: function(e) {\r\n            var target = this.router.target();\r\n            if (this.isSelected()) {\r\n                if ( ! target.isSelected()) {\r\n                    this.deselect();\r\n                }\r\n            } else {\r\n                if (target.isSelected()) {\r\n                    this.select();\r\n                }\r\n            }\r\n        },\r\n\r\n        onSourceBeforeDrag: function(e, source) {\r\n            var target = this.router.target();\r\n            if ( ! source.isSelected() || ! target.isSelected()) {\r\n                this.deselect();\r\n            }\r\n            this.cached.convex = null;\r\n        },\r\n\r\n        onSourceDrag: function(e) {\r\n            console.warn('Not yet implemented');\r\n        },\r\n\r\n        onSourceAfterDrag: function(e) {\r\n            var source = this.router.source(),\r\n                target = this.router.target(),\r\n                dx = e.tx,\r\n                dy = e.ty;\r\n\r\n            if (source.isSelected()) {\r\n                if ( ! target.isSelected()) {\r\n                    this.relocateTail(dx, dy);\r\n                }\r\n            } else {\r\n                this.relocateTail(dx, dy);\r\n            }\r\n        },\r\n\r\n        onSourceAfterResize: function(e) {\r\n            this.relocateTail(e.translate.dx, e.translate.dy);\r\n        },\r\n\r\n        onSourceBeforeDestroy: function() {\r\n            if ( ! this.props.removed) {\r\n                this.component('coat').remove();    \r\n            }\r\n        },\r\n\r\n        onTargetAfterRotate: function(e) {\r\n            var matrix = this.router.target().matrix(),\r\n                oport = this.router.head(),\r\n                nport = {\r\n                    x: matrix.x(oport.x, oport.y),\r\n                    y: matrix.y(oport.x, oport.y)\r\n                },\r\n                dx = nport.x - oport.x,\r\n                dy = nport.y - oport.y;\r\n\r\n            this.relocateHead(dx, dy);\r\n        },\r\n\r\n        onTargetSelect: function(e) {\r\n            var source = this.router.source();\r\n            if (this.isSelected()) {\r\n                if ( ! source.isSelected()) {\r\n                    this.deselect();\r\n                }\r\n            } else {\r\n                if (source.isSelected()) {\r\n                    this.select();\r\n                }\r\n            }\r\n        },\r\n\r\n        onTargetBeforeDrag: function(e, target) {\r\n            var source = this.router.source();\r\n            if ( ! source.isSelected() || ! target.isSelected()) {\r\n                this.deselect();\r\n            }\r\n            this.cached.convex = null;\r\n        },\r\n\r\n        onTargetDrag: function(e) {\r\n            console.warn('Not yet implemented');\r\n        },\r\n\r\n        onTargetAfterDrag: function(e) {\r\n            var target = this.router.target(),\r\n                source = this.router.source(),\r\n                dx = e.tx,\r\n                dy = e.ty;\r\n\r\n            if (target.isSelected()) {\r\n                if ( ! source.isSelected()) {\r\n                    this.relocateHead(dx, dy);\r\n                }\r\n            } else {\r\n                this.relocateHead(dx, dy);\r\n            }\r\n        },\r\n\r\n        onTargetAfterResize: function(e) {\r\n            this.relocateHead(e.translate.dx, e.translate.dy);\r\n        },\r\n\r\n        onTargetBeforeDestroy: function() {\r\n            if ( ! this.props.removed) {\r\n                this.component('coat').remove();    \r\n            }\r\n        },  \r\n\r\n        onTrashToolClick: function(e) {\r\n            this.component('coat').remove();\r\n        },\r\n\r\n        onConfigToolClick: function(e) {\r\n\r\n        },\r\n\r\n        onFrontToolClick: function(e) {\r\n            this.sendToFront();\r\n        },\r\n\r\n        onBackToolClick: function(e) {\r\n\r\n        },\r\n\r\n        destroy: function() {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n    Link.guid = 0;\r\n\r\n    ///////// HELPERS /////////\r\n\r\n    function getHandler(scope, resource, handler) {\r\n        var name = 'on' + _.capitalize(resource) + handler,\r\n            func = scope[name];\r\n\r\n        name = null;\r\n        return func;\r\n    }\r\n\r\n}());\r\n","\r\n(function(_, $){\r\n    \r\n    var REGEX_SVG_BUILDER = /^<(svg|g|rect|text|path|line|tspan|circle|polygon|defs|marker)/i;\r\n\r\n    var domParser;\r\n\r\n    ///////// BUILDER /////////\r\n    \r\n    Graph.dom = function(selector, context, query) {\r\n        var fragment, element;\r\n\r\n        if (domParser === undefined) {\r\n            try {\r\n                domParser = new DOMParser();\r\n            } catch(e){\r\n                domParser = null;\r\n            }\r\n        }\r\n\r\n        query = _.defaultTo(query, false);\r\n\r\n        if (context !== undefined) {\r\n            if (Graph.isElement(context)) {\r\n                context = context.node();\r\n            }\r\n        }\r\n\r\n\r\n        if (_.isString(selector)) {\r\n            if (REGEX_SVG_BUILDER.test(selector)) {\r\n                if (domParser) {\r\n                    fragment = '<g xmlns=\"'+ Graph.config.xmlns.svg +'\">' + selector + '</g>';\r\n                    element  = domParser.parseFromString(fragment, 'text/xml').documentElement.childNodes[0];\r\n                    fragment = null;\r\n                    element  = query ? $(element) : element;\r\n                }\r\n            } else {\r\n                element = query ? $(selector, context) : $(selector, context)[0];\r\n            }\r\n        } else {\r\n            if (Graph.isHTML(selector) || Graph.isSVG(selector)) {\r\n                element = query ? $(selector) : selector;\r\n            } else if (Graph.isElement(selector)) {\r\n                element = query ? selector.query : selector.query[0];\r\n            } else {\r\n                // document, window, ...etc\r\n                element = query ? $(selector, context) : selector;\r\n            }\r\n        }\r\n\r\n        context = null;\r\n        return element;\r\n    };  \r\n\r\n    Graph.dom.clone = function(node, deep) {\r\n        return node.cloneNode(deep);\r\n    };\r\n\r\n    ///////// ELEMENT /////////\r\n\r\n    var E = Graph.dom.Element = function(node) {\r\n        this.query = $(node);\r\n    };\r\n\r\n    E.prototype.is = function(pseudo) {\r\n        return this.query.is(pseudo);\r\n    };  \r\n\r\n    E.prototype.node = function() {\r\n        return this.query[0];\r\n    };\r\n\r\n    E.prototype.length = function() {\r\n        return this.query.length;\r\n    };\r\n\r\n    E.prototype.group = function(name) {\r\n        if (name === undefined) {\r\n            return this.query.data('component-group');\r\n        }\r\n        this.query.data('component-group', name);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.belong = function(group) {\r\n        return this.group() == group;\r\n    };\r\n\r\n    E.prototype.attr = function(name, value) {\r\n        if (value === undefined) {\r\n            return this.query.attr(name);\r\n        }\r\n        \r\n        var me = this, node = this.query[0];\r\n\r\n        if (Graph.isHTML(node)) {\r\n            this.query.attr(name, value);\r\n        } else if (Graph.isSVG(node)) {\r\n\r\n            if (_.isPlainObject(name)) {\r\n                _.forOwn(name, function(v, k){\r\n                    me.attr(k, v);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (name.substring(0, 6) == 'xlink:') {\r\n                node.setAttributeNS(Graph.config.xmlns.xlink, name.substring(6), _.toString(value));\r\n            } else {\r\n                node.setAttribute(name, _.toString(value));\r\n            }\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    E.prototype.width = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.width();\r\n        }\r\n        this.query.width(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.outerHeight = function(margin) {\r\n        return this.query.outerHeight(margin);\r\n    };\r\n\r\n    E.prototype.height = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.height();\r\n        }\r\n        this.query.height(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.show = function() {\r\n        this.query.show();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.hide = function() {\r\n        this.query.hide();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.offset = function() {\r\n        var node = this.query[0];\r\n        if (Graph.isSVG(node)) {\r\n            var offset = node.getBoundingClientRect();\r\n            return {\r\n                left: offset.left,\r\n                top: offset.top,\r\n                width: offset.width,\r\n                height: offset.height\r\n            };\r\n        } else {\r\n           return this.query.offset(); \r\n        }\r\n    };\r\n\r\n    E.prototype.position = function() {\r\n        return this.query.position();\r\n    };\r\n\r\n    E.prototype.css = function(name, value) {\r\n        if (value === undefined) {\r\n            return this.query.css(name);\r\n        }\r\n        this.query.css(name, value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.addClass = function(classes) {\r\n        var node = this.query[0];\r\n        if (Graph.isHTML(node)) {\r\n            this.query.addClass(classes);\r\n        } else if (Graph.isSVG(node)) {\r\n            var values = _.chain([])\r\n                .concat(_.split(node.className.baseVal || '', ' '))\r\n                .concat(_.split(classes, ' '))\r\n                .uniq()\r\n                .join(' ')\r\n                .trim()\r\n                .value();\r\n            node.className.baseVal = values;\r\n        }\r\n        return this;\r\n    };\r\n\r\n    E.prototype.removeClass = function(classes) {\r\n        var node = this.query[0];\r\n        if (Graph.isHTML(node)) {\r\n            this.query.removeClass(classes);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    E.prototype.hasClass = function(clazz) {\r\n        var node = this.query[0];\r\n\r\n        if (Graph.isHTML(node)) {\r\n            return this.query.hasClass(clazz); \r\n        } else if (Graph.isSVG(node)) {\r\n            var classes = _.split(node.className.baseVal, ' ');\r\n            return classes.indexOf(clazz) > -1;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    E.prototype.find = function(selector) {\r\n        return new Graph.dom.Element(this.query.find(selector));\r\n    };\r\n\r\n    E.prototype.parent = function() {\r\n        return new Graph.dom.Element(this.query.parent());\r\n    };\r\n\r\n    E.prototype.closest = function(element) {\r\n        return new Graph.dom.Element(this.query.closest(element));\r\n    };\r\n\r\n    E.prototype.append = function(element) {\r\n        if (element.query === undefined) {\r\n            this.query.append(element);\r\n        } else {\r\n            this.query.append(element.query);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    E.prototype.prepend = function(element) {\r\n        this.query.prepend(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.appendTo = function(element) {\r\n        this.query.appendTo(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.prependTo = function(element) {\r\n        this.query.prependTo(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.before = function(element) {\r\n        this.query.before(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.after = function(element) {\r\n        this.query.after(element.query);\r\n        return this;\r\n    };\r\n    \r\n    E.prototype.last = function() {\r\n        return new Graph.dom.Element(this.query.last());\r\n    };\r\n\r\n    E.prototype.remove = function() {\r\n        this.query.remove();\r\n        this.query = null;\r\n        return this;\r\n    };\r\n\r\n    E.prototype.detach = function() {\r\n        this.query = this.query.detach();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.on = function(types, selector, data, fn, /*INTERNAL*/ one) {\r\n        this.query.on.call(this.query, types, selector, data, fn, one);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.off = function(types, selector, fn) {\r\n        this.query.off.call(this.query, types, selector, fn);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.trigger = function(type, data) {\r\n        this.query.trigger(type, data);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.val = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.val();\r\n        }\r\n        this.query.val(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.text = function(text) {\r\n        if (text === undefined) {\r\n            return this.query.text();\r\n        }\r\n        this.query.text(text);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.html = function(html) {\r\n        if (html === undefined) {\r\n            return this.query.html();\r\n        }\r\n        this.query.html(html);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.focus = function(select, delay) {\r\n        var query = this.query, timer;\r\n\r\n        delay = _.defaultTo(delay, 0);\r\n\r\n        if (this.query.attr('contenteditable') !== undefined) {\r\n            timer = _.delay(function(){\r\n                clearTimeout(timer);\r\n                timer = null;\r\n\r\n                query[0].focus();\r\n\r\n                if (document.createRange && window.getSelection) {\r\n                    var range = document.createRange();\r\n                    range.selectNodeContents(query[0]);\r\n                    var selection = window.getSelection();\r\n                    selection.removeAllRanges();\r\n                    selection.addRange(range);\r\n                }\r\n\r\n            }, delay);\r\n            \r\n        } else {\r\n            timer = _.delay(function(){\r\n                clearTimeout(timer);\r\n                timer = null;\r\n\r\n                query.focus();\r\n\r\n                if (select) {\r\n                    query.select();\r\n                }\r\n            }, delay);\r\n        }\r\n        \r\n        return this;\r\n    };\r\n\r\n    E.prototype.contextmenu = function(state) {\r\n        state = _.defaultTo(state, true);\r\n        if ( ! state) {\r\n            this.query.on('contextmenu', function(e){\r\n                return false;\r\n            });\r\n        }\r\n    };\r\n\r\n    E.prototype.each = function(iteratee) {\r\n        this.query.each(iteratee);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.empty = function() {\r\n        this.query.empty();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.data = function(key, value) {\r\n        if (value === undefined) {\r\n            return this.query.data(key);\r\n        }\r\n        this.query.data(key, value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.prop = function(name, value) {\r\n        if (value === undefined) {\r\n            return this.query.data(name);\r\n        }\r\n        this.query.prop(name, value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.scrollTop = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.scrollTop();\r\n        }\r\n        this.query.scrollTop(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.scrollLeft = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.scrollLeft();\r\n        }\r\n        this.query.scrollLeft(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.toString = function() {\r\n        return 'Graph.dom.Element';\r\n    };\r\n\r\n    /// STATICS ///\r\n    \r\n    E.guid = 0;\r\n    \r\n    /// HELPERS ///\r\n\r\n    Graph.$ = function(selector, context) {\r\n        var query = Graph.dom(selector, context, true);\r\n        return new Graph.dom.Element(query);\r\n    };\r\n\r\n}(_, jQuery));","\r\n(function(){\r\n\r\n    Graph.svg.Ellipse = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(cx, cy, rx, ry) {\r\n            \r\n            // this.$super('ellipse', {\r\n            //     cx: cx,\r\n            //     cy: cy,\r\n            //     rx: rx,\r\n            //     ry: ry\r\n            // });\r\n\r\n            this.superclass.prototype.constructor.call(this, 'ellipse', {\r\n                cx: cx,\r\n                cy: cy,\r\n                rx: rx,\r\n                ry: ry\r\n            });\r\n        },\r\n\r\n        shape: function() {\r\n            var a = this.attrs;\r\n\r\n            return Graph.path([\r\n                ['M', a.cx, a.cy],\r\n                ['m', 0, -a.ry],\r\n                ['a', a.rx, a.ry, 0, 1, 1, 0,  2 * a.ry],\r\n                ['a', a.rx, a.ry, 0, 1, 1, 0, -2 * a.ry],\r\n                ['z']\r\n            ]);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.graph.matrix.clone().scale(sx, sy, cx, cy),\r\n                rotate = this.props.rotate;\r\n\r\n            var mx = matrix.x(this.attrs.cx, this.attrs.cy),\r\n                my = matrix.y(this.attrs.cx, this.attrs.cy),\r\n                rx = this.attrs.rx * sx,\r\n                ry = this.attrs.ry * sy;\r\n\r\n            var gx, gy;\r\n\r\n            this.reset();\r\n\r\n            this.attr({\r\n                cx: mx,\r\n                cy: my,\r\n                rx: rx,\r\n                ry: ry\r\n            });\r\n\r\n            if (rotate) {\r\n                this.rotate(rotate, mx, my).commit();    \r\n            }\r\n\r\n            var bb = this.bbox().toJson();\r\n\r\n            gx = mx - rx - dx;\r\n            gy = my - ry - dy;\r\n\r\n            gx = bb.x;\r\n            gy = bb.y;\r\n\r\n            return  {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: mx,\r\n                    cy: my\r\n                },\r\n                magnify: {\r\n                    cx: gx,\r\n                    cy: gy\r\n                }\r\n            };\r\n        },\r\n        toString: function() {\r\n            return 'Graph.svg.Ellipse';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Circle = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(cx, cy, r) {\r\n            var me = this;\r\n            \r\n            if (Graph.isPoint(cx)) {\r\n                r  = cy;\r\n                cy = cx.props.y;\r\n                cx = cx.props.x;\r\n            }\r\n\r\n            // me.$super('circle', {\r\n            //     cx: cx,\r\n            //     cy: cy,\r\n            //     r: r\r\n            // });\r\n\r\n            me.superclass.prototype.constructor.call(me, 'circle', {\r\n                cx: cx,\r\n                cy: cy,\r\n                r: r\r\n            });\r\n            \r\n        },\r\n\r\n        shape: function() {\r\n            var a = this.attrs;\r\n            \r\n            return Graph.path([\r\n                ['M', a.cx, a.cy],\r\n                ['m', 0, -a.r],\r\n                ['a', a.r, a.r, 0, 1, 1, 0,  2 * a.r],\r\n                ['a', a.r, a.r, 0, 1, 1, 0, -2 * a.r],\r\n                ['z']\r\n            ]);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.graph.matrix.clone(),\r\n                rotate = this.props.rotate,\r\n                ax = this.attrs.cx,\r\n                ay = this.attrs.cy,\r\n                ar = this.attrs.r;\r\n\r\n            var x, y, r;\r\n            \r\n            if (sy === 1) {\r\n                r  = ar * sx;\r\n                sy = sx;\r\n            } else if (sx === 1) {\r\n                r  = ar * sy;\r\n                sx = sy;\r\n            } else if (sx < sy) {\r\n                r = ar * sy;\r\n                sx = sy;\r\n            } else if (sx > sy) {\r\n                r  = ar * sx;\r\n                sy = sx;\r\n            }\r\n\r\n            matrix.scale(sx, sy, cx, cy);\r\n\r\n            x = matrix.x(ax, ay);\r\n            y = matrix.y(ax, ay);\r\n\r\n            this.reset();\r\n\r\n            this.attr({\r\n                cx: x,\r\n                cy: y,\r\n                 r: r\r\n            });\r\n            \r\n            if (rotate) {\r\n                this.rotate(rotate, x, y).commit();    \r\n            }\r\n\r\n            return {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: x,\r\n                    cy: y\r\n                }\r\n            };\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Circle';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Rect = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(x, y, width, height, r) {\r\n            var me = this;\r\n            r = _.defaultTo(r, 6);\r\n\r\n            // me.$super('rect', {\r\n            //     x: _.defaultTo(x, 0),\r\n            //     y: _.defaultTo(y, 0),\r\n            //     rx: r,\r\n            //     ry: r,\r\n            //     width: _.defaultTo(width, 0),\r\n            //     height: _.defaultTo(height, 0)\r\n            // });\r\n\r\n            me.superclass.prototype.constructor.call(me, 'rect', {\r\n                x: _.defaultTo(x, 0),\r\n                y: _.defaultTo(y, 0),\r\n                rx: r,\r\n                ry: r,\r\n                width: _.defaultTo(width, 0),\r\n                height: _.defaultTo(height, 0)\r\n            });\r\n            \r\n            me.origpath = me.shape();\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            var result = this.superclass.prototype.attr.apply(this, [name, value]);\r\n\r\n            if (name == 'rx' && value !== undefined) {\r\n                this.attrs.r = this.attrs.rx;    \r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        shape: function() {\r\n            var a = this.attrs, p;\r\n\r\n            if (a.r) {\r\n                p = Graph.path([\r\n                    ['M', a.x + a.r, a.y], \r\n                    ['l', a.width - a.r * 2, 0], \r\n                    ['a', a.r, a.r, 0, 0, 1, a.r, a.r], \r\n                    ['l', 0, a.height - a.r * 2], \r\n                    ['a', a.r, a.r, 0, 0, 1, -a.r, a.r], \r\n                    ['l', a.r * 2 - a.width, 0], \r\n                    ['a', a.r, a.r, 0, 0, 1, -a.r, -a.r], \r\n                    ['l', 0, a.r * 2 - a.height], \r\n                    ['a', a.r, a.r, 0, 0, 1, a.r, -a.r], \r\n                    ['z']\r\n                ]);\r\n            } else {\r\n                p = Graph.path([\r\n                    ['M', a.x, a.y], \r\n                    ['l', a.width, 0], \r\n                    ['l', 0, a.height], \r\n                    ['l', -a.width, 0], \r\n                    ['z']\r\n                ]);\r\n            }\r\n\r\n            return p;\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.matrix().clone(),\r\n                rotate = matrix.rotate().deg;\r\n\r\n            var x, y, w, h;\r\n\r\n            matrix.scale(sx, sy, cx, cy);\r\n\r\n            this.reset();\r\n\r\n            x = matrix.x(this.attrs.x, this.attrs.y);\r\n            y = matrix.y(this.attrs.x, this.attrs.y);\r\n            w = this.attrs.width  * sx;\r\n            h = this.attrs.height * sy;\r\n\r\n            this.attr({\r\n                x: x,\r\n                y: y,\r\n                width: w,\r\n                height: h\r\n            });\r\n\r\n            if (rotate) {\r\n                this.rotate(rotate, x, y).commit();    \r\n            }\r\n            \r\n            return {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: x,\r\n                    cy: y\r\n                }\r\n            };\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Rect';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","(function(){\r\n\r\n    Graph.svg.Polyline = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(points) {\r\n            points = _.defaultTo(points, '');\r\n\r\n            if (_.isArray(points)) {\r\n                if (points.length) {\r\n                    if (_.isPlainObject(points[0])) { \r\n                        points = _.map(points, function(p){ return p.x + ',' + p.y; });\r\n                    }\r\n                    points = _.join(points, ',');\r\n                } else {\r\n                    points = '';\r\n                }\r\n            }\r\n            \r\n            this.superclass.prototype.constructor.call(this, 'polyline', {\r\n                points: points\r\n            });\r\n        },\r\n\r\n        shape: function() {\r\n            var command = Graph.util.polygon2path(this.attrs.points);\r\n            command = command.replace(/Z/i, '');\r\n            return Graph.path(command);\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            if (name == 'points' && _.isArray(value)) {\r\n                value = _.join(_.map(value, function(p){\r\n                    return p[0] + ',' + p[1];\r\n                }), ' ');\r\n            }\r\n            \r\n            return this.superclass.prototype.attr.call(this, name, value); // this.$super(name, value);\r\n        },\r\n        toString: function() {\r\n            return 'Graph.svg.Polyline';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Polygon = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(points) {\r\n            points = _.defaultTo(points, '');\r\n            \r\n            if (_.isArray(points)) {\r\n                if (points.length) {\r\n                    if (_.isPlainObject(points[0])) { \r\n                        points = _.map(points, function(p){ return p.x + ',' + p.y; });\r\n                    }\r\n                    points = _.join(points, ',');\r\n                } else {\r\n                    points = '';\r\n                }\r\n            }\r\n\r\n            this.superclass.prototype.constructor.call(this, 'polygon', {\r\n                points: points\r\n            });\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            if (name == 'points' && _.isArray(value)) {\r\n                value = _.join(value, ',');\r\n            }\r\n            \r\n            return this.superclass.prototype.attr.call(this, name, value); // this.$super(name, value);\r\n        },\r\n\r\n        shape: function() {\r\n            var command = Graph.util.polygon2path(this.attrs.points);\r\n            return Graph.path(command);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.graph.matrix.clone(),\r\n                origin = this.graph.matrix.clone(),\r\n                rotate = this.props.rotate,\r\n                ps = this.shape().segments,\r\n                dt = [],\r\n                rx = ps[0][1],\r\n                ry = ps[0][2];\r\n\r\n            if (rotate) {\r\n                origin.rotate(-rotate, ps[0][1], ps[0][2]); \r\n                rx = origin.x(ps[0][1], ps[0][2]);\r\n                ry = origin.y(ps[0][1], ps[0][2]);\r\n            }\r\n\r\n            origin.scale(sx, sy, cx, cy);\r\n            matrix.scale(sx, sy, cx, cy);\r\n\r\n            _.forEach(ps, function(seg){\r\n                var ox, oy, x, y;\r\n                if (seg[0] != 'Z') {\r\n                    ox = seg[seg.length - 2];\r\n                    oy = seg[seg.length - 1];\r\n                    x = origin.x(ox, oy);\r\n                    y = origin.y(ox, oy);\r\n                    dt.push(x + ',' + y);\r\n                }\r\n            });\r\n\r\n            dt = _.join(dt, ' ');\r\n\r\n            this.reset();\r\n            this.attr('points', dt);\r\n\r\n            if (rotate) {\r\n                this.rotate(rotate, rx, ry).commit();\r\n            }\r\n            \r\n            return {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: rx,\r\n                    cy: ry\r\n                }\r\n            };\r\n        },\r\n        toString: function() {\r\n            return 'Graph.svg.Polygon';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Group = Graph.extend(Graph.svg.Vector, {\r\n\r\n        attrs: {\r\n            'stroke': null,\r\n            'stroke-width': null,\r\n            'class': null,\r\n            'fill': null,\r\n            'style': null\r\n        },\r\n        \r\n        constructor: function(x, y) {\r\n            // this.$super('g');\r\n            this.superclass.prototype.constructor.call(this, 'g');\r\n\r\n            if (x !== undefined && y !== undefined) {\r\n                this.graph.matrix.translate(x, y);\r\n                this.attr('transform', this.graph.matrix.toValue());\r\n            }\r\n        },\r\n\r\n        shape: function() {\r\n            var size = this.dimension();\r\n            \r\n            return new Graph.lang.Path([\r\n                ['M', size.x, size.y], \r\n                ['l', size.width, 0], \r\n                ['l', 0, size.height], \r\n                ['l', -size.width, 0], \r\n                ['z']\r\n            ]);\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Group';\r\n        }\r\n        \r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Text = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        attrs: {\r\n            'text-anchor': 'middle'\r\n        },  \r\n\r\n        props: {\r\n            id: '',\r\n            guid: '',\r\n            text: '',\r\n            type: 'text',\r\n            rotate: 0,\r\n            lineHeight: 1.1,\r\n            fontSize: 12,\r\n            traversable: true,\r\n            focusable: false,\r\n            selectable: true,\r\n            selected: false,\r\n            rendered: false\r\n        },\r\n\r\n        rows: [],\r\n\r\n        constructor: function(x, y, text) {\r\n            // this.$super('text', {\r\n            //     x: _.defaultTo(x, 0),\r\n            //     y: _.defaultTo(y, 0)\r\n            // });\r\n\r\n            this.superclass.prototype.constructor.call(this, 'text', {\r\n                x: _.defaultTo(x, 0),\r\n                y: _.defaultTo(y, 0)\r\n            });\r\n\r\n            this.attr({\r\n                'font-size': Graph.config.font.size\r\n            });\r\n\r\n            if (text) {\r\n                this.write(text);\r\n            }\r\n            \r\n            this.on('render', _.bind(this.onTextRender, this));\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            var result = this.superclass.prototype.attr.apply(this, [name, value]);\r\n            \r\n            if (name == 'font-size' && value !== undefined) {\r\n                this.props.fontSize = _.parseInt(value) || 12;\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        write: function(text) {\r\n            var me = this, parts, span;\r\n\r\n            if (text === undefined) {\r\n                return me.props.text;\r\n            }\r\n\r\n            parts = (text || '').split(\"\\n\");\r\n\r\n            me.empty();\r\n            me.rows = [];\r\n            \r\n            _.forEach(parts, function(t, i){\r\n                me.addSpan(t);\r\n            });\r\n\r\n            me.props.text = text;\r\n            me.cached.bbox = null;\r\n        },\r\n\r\n        addSpan: function(text) {\r\n            var me = this, span;\r\n    \r\n            text = _.defaultTo(text, '');\r\n\r\n            span = Graph.$('<tspan/>');\r\n            span.text(text);\r\n\r\n            me.elem.append(span);\r\n            me.rows.push(span);\r\n\r\n            return span;\r\n        },\r\n\r\n        /**\r\n         * Arrange position\r\n         */\r\n        arrange: function() {\r\n            var rows = this.rows,\r\n                size = this.props.fontSize,\r\n                line = this.props.lineHeight,\r\n                bbox = this.bbox().toJson();\r\n            \r\n            if (rows.length) {\r\n                for (var i = 0, ii = rows.length; i < ii; i++) {\r\n                    if (i) {\r\n                        rows[i].attr('x', this.attrs.x);\r\n                        rows[i].attr('dy', size * line);\r\n                    }\r\n                }\r\n                rows[0].attr('dy', 0);\r\n                this.dirty(true);\r\n            }\r\n        },\r\n\r\n        wrap: function(width) {\r\n            var text = this.props.text,\r\n                words = text.split(/\\s+/).reverse(),\r\n                lines = [],\r\n                lineNo = 0,\r\n                lineHeight = this.props.lineHeight,\r\n                ax = this.attrs.x,\r\n                ay = this.attrs.y,\r\n                dy = 0;\r\n\r\n            var word, span;\r\n\r\n            this.empty();\r\n            this.rows = [];\r\n\r\n            span = this.addSpan();\r\n            span.attr({\r\n                x: ax, \r\n                y: ay, \r\n                dy: dy + 'em'\r\n            });\r\n\r\n            while((word = words.pop())) {\r\n                lines.push(word);\r\n                span.text(lines.join(' '));\r\n                if (span.node().getComputedTextLength() > width) {\r\n                    lines.pop();\r\n                    span.text(lines.join(' '));\r\n                    lines = [word];\r\n                    span = this.addSpan(word);\r\n                    span.attr({\r\n                        x: ax, \r\n                        y: ay, \r\n                        dy: (++lineNo * lineHeight) + 'em'\r\n                    });\r\n                }\r\n            }\r\n        },\r\n\r\n        center: function(target) {\r\n            if (target) {\r\n                var targetBox = target.bbox().toJson(),\r\n                    rotate = this.matrix().rotate();\r\n\r\n                var textBox, dx, dy, cx, cy;\r\n\r\n                this.reset();\r\n\r\n                textBox = this.bbox().toJson();   \r\n\r\n                dx = targetBox.width / 2;\r\n                dy = targetBox.height / 2;\r\n                cx = textBox.x + textBox.width / 2;\r\n                cy = textBox.y + textBox.height / 2;\r\n\r\n                if (rotate.deg) {\r\n                    this.translate(dx, dy).rotate(rotate.deg).commit();\r\n                } else {\r\n                    this.translate(dx, dy).commit();\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        shape: function() {\r\n            var size = this.dimension();\r\n\r\n            return new Graph.lang.Path([\r\n                ['M', size.x, size.y], \r\n                ['l', size.width, 0], \r\n                ['l', 0, size.height], \r\n                ['l', -size.width, 0], \r\n                ['z']\r\n            ]);\r\n\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Text';\r\n        },\r\n\r\n        onTextRender: function() {\r\n            var me = this;\r\n            me.arrange();\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Image = Graph.extend(Graph.svg.Vector, {\r\n\r\n        attrs: {\r\n            preserveAspectRatio: 'none'\r\n        },\r\n\r\n        constructor: function(src, x, y, width, height) {\r\n            var me = this;\r\n\r\n            // me.$super('image', {\r\n            //     'xlink:href': src,\r\n            //     'x': _.defaultTo(x, 0),\r\n            //     'y': _.defaultTo(y, 0),\r\n            //     'width': _.defaultTo(width, 0),\r\n            //     'height': _.defaultTo(height, 0)\r\n            // });\r\n            \r\n            me.superclass.prototype.constructor.call(me, 'image', {\r\n                'xlink:href': src,\r\n                'x': _.defaultTo(x, 0),\r\n                'y': _.defaultTo(y, 0),\r\n                'width': _.defaultTo(width, 0),\r\n                'height': _.defaultTo(height, 0)\r\n            });\r\n            \r\n        },\r\n\r\n        align: function(value, scale) {\r\n            if (value == 'none') {\r\n                this.attr('preserveAspectRatio', 'none');\r\n\r\n                return this;\r\n            }\r\n\r\n            var aspect = this.attrs.preserveAspectRatio,\r\n                align = '';\r\n\r\n            aspect = /(meet|slice)/.test(aspect) \r\n                ? aspect.replace(/(.*)\\s*(meet|slice)/i, '$2')\r\n                : '';\r\n\r\n            scale = _.defaultTo(scale, aspect);\r\n            value = value.replace(/s+/, ' ').toLowerCase();\r\n\r\n            switch(value) {\r\n                case 'top left':\r\n                case 'left top':\r\n                    align = 'xMinYMin';\r\n                    break;\r\n                case 'top center':\r\n                case 'center top':\r\n                    align = 'xMidYMin';\r\n                    break;\r\n                case 'top right':\r\n                case 'right top':\r\n                    align = 'xMaxYMin';\r\n                    break;\r\n                case 'left':\r\n                    align = 'xMinYMid';\r\n                    break;\r\n                case 'center':\r\n                    align = 'xMidYMid';\r\n                    break;\r\n                case 'right':\r\n                    align = 'xMaxYMid';\r\n                    break;\r\n                case 'bottom left':\r\n                case 'left bottom':\r\n                    align = 'xMinYMax';\r\n                    break;\r\n                case 'bottom center':\r\n                case 'center bottom':\r\n                    align = 'xMidYMax';\r\n                    break;\r\n                case 'bottom right':\r\n                case 'right bottom':\r\n                    align = 'xMaxYMax';\r\n                    break;\r\n            }\r\n\r\n            aspect = align + (scale ? ' ' + scale : '');\r\n            this.attr('preserveAspectRatio', aspect);\r\n\r\n            return this;\r\n        },\r\n\r\n        shape: function() {\r\n            var a = this.attrs;\r\n\r\n            return new Graph.lang.Path([\r\n                ['M', a.x, a.y], \r\n                ['l', a.width, 0], \r\n                ['l', 0, a.height], \r\n                ['l', -a.width, 0], \r\n                ['z']\r\n            ]);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var ms = this.graph.matrix.clone().scale(sx, sy, cx, cy),\r\n                ro = this.graph.matrix.rotate();\r\n\r\n            this.reset();\r\n\r\n            var x = ms.x(this.attrs.x, this.attrs.y),\r\n                y = ms.y(this.attrs.x, this.attrs.y),\r\n                w = +this.attrs.width * sx,\r\n                h = +this.attrs.height * sy;\r\n\r\n            this.attr({\r\n                x: x,\r\n                y: y,\r\n                width: w,\r\n                height: h\r\n            });\r\n            \r\n            this.rotate(ro, x, y).commit();\r\n\r\n            return {\r\n                matrix: ms,\r\n                x: x,\r\n                y: y\r\n            };\r\n        },\r\n        toString: function() {\r\n            return 'Graph.svg.Image';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    /**\r\n     * Paper - root viewport\r\n     */\r\n\r\n    var Paper = Graph.svg.Paper = Graph.extend(Graph.svg.Vector, {\r\n\r\n        attrs: {\r\n            'class': Graph.styles.PAPER\r\n        },\r\n\r\n        props: {\r\n            id: null,\r\n            guid: null,\r\n            type: 'paper',\r\n            text: null,\r\n            rotate: 0,\r\n\r\n            traversable: false,\r\n            selectable: false,\r\n            selected: false,\r\n            focusable: false,\r\n\r\n            rendered: false,\r\n            showOrigin: true,\r\n            zoomable: true\r\n        },\r\n\r\n        components: {\r\n            viewport: null\r\n        },\r\n\r\n        diagram: {\r\n            enabled: true,\r\n            manager: null\r\n        },\r\n\r\n        constructor: function (width, height, options) {\r\n            var me = this;\r\n\r\n            me.superclass.prototype.constructor.call(me, 'svg', {\r\n                'xmlns': Graph.config.xmlns.svg,\r\n                'xmlns:link': Graph.config.xmlns.xlink,\r\n                'version': Graph.config.svg.version\r\n                // 'width': _.defaultTo(width, 200),\r\n                // 'height': _.defaultTo(height, 200)\r\n            });\r\n\r\n            _.assign(me.props, options || {});\r\n\r\n            me.style({\r\n                overflow: 'hidden',\r\n                position: 'relative'\r\n            });\r\n\r\n            me.interactable();\r\n            me.initLayout();\r\n\r\n            me.plugins.collector = new Graph.plugin.Collector(me);\r\n            me.plugins.toolmgr.register('collector', 'plugin');\r\n\r\n            me.plugins.linker = new Graph.plugin.Linker(me);\r\n            me.plugins.toolmgr.register('linker', 'plugin');\r\n\r\n            me.plugins.pencil = new Graph.plugin.Pencil(me);\r\n            me.plugins.toolmgr.register('pencil', 'plugin');\r\n\r\n            me.plugins.definer = new Graph.plugin.Definer(me);\r\n\r\n            me.plugins.snapper = new Graph.plugin.Snapper(me);\r\n            me.plugins.toolpad = new Graph.plugin.Toolpad(me);\r\n            me.plugins.clipper = new Graph.plugin.Clipper(me);\r\n\r\n            // diagram feature\r\n            me.diagram.enabled = true;\r\n            me.diagram.manager = new Graph.diagram.Manager(me);\r\n\r\n            // subscribe topics\r\n            Graph.topic.subscribe('link:change', _.bind(me.listenLinkChange, me));\r\n            Graph.topic.subscribe('link:afterdestroy', _.bind(me.listenLinkAfterDestroy, me));\r\n\r\n            if ( ! Paper.defaultInstance) {\r\n                Paper.defaultInstance = me.guid();\r\n            }\r\n        },\r\n\r\n        initLayout: function() {\r\n            // create viewport\r\n            var viewport = (new Graph.svg.Group())\r\n                .addClass(Graph.styles.VIEWPORT)\r\n                .selectable(false);\r\n\r\n            viewport.props.viewport = true;\r\n\r\n            this.components.viewport = viewport.guid();\r\n\r\n            if (this.props.showOrigin) {\r\n                var origin = Graph.$(\r\n                    '<g class=\"graph-elem graph-origin\">' +\r\n                        '<rect class=\"x\" rx=\"1\" ry=\"1\" x=\"-16\" y=\"-1\" height=\"1\" width=\"30\"></rect>' +\r\n                        '<rect class=\"y\" rx=\"1\" ry=\"1\" x=\"-1\" y=\"-16\" height=\"30\" width=\"1\"></rect>' +\r\n                        '<text class=\"t\" x=\"-40\" y=\"-10\">(0, 0)</text>' +\r\n                    '</g>'\r\n                );\r\n\r\n                origin.appendTo(viewport.elem);\r\n                origin = null;\r\n            }\r\n\r\n            // render viewport\r\n            viewport.tree.paper = viewport.tree.parent = this.guid();\r\n            // viewport.translate(0.5, 0.5).commit();\r\n\r\n            this.elem.append(viewport.elem);\r\n            this.children().push(viewport);\r\n\r\n            viewport.on('render', function(){\r\n                viewport.cascade(function(c){\r\n                    if (c !== viewport && ! c.props.rendered) {\r\n                        c.props.rendered = true;\r\n                        c.tree.paper = viewport.tree.paper;\r\n                        c.fire('render');\r\n                    }\r\n                });\r\n            });\r\n\r\n            this.layout('default');\r\n        },\r\n\r\n        layout: function(options) {\r\n            var viewport = this.viewport();\r\n\r\n            if (options === undefined) {\r\n                return viewport.graph.layout;\r\n            }\r\n\r\n            viewport.layout(options);\r\n            return this;\r\n        },\r\n\r\n        shape: function(names, options) {\r\n            var shape = Graph.shape(names, options);\r\n            shape.render(this);\r\n\r\n            return shape;\r\n        },\r\n\r\n        render: function(container) {\r\n            var me = this,\r\n                vp = me.viewport(),\r\n                id = me.guid();\r\n\r\n            if (me.props.rendered) {\r\n                return;\r\n            }\r\n\r\n            container = Graph.$(container);\r\n            container.append(me.elem);\r\n\r\n            me.tree.container = container;\r\n\r\n            me.elem.css({\r\n                width: '100%',\r\n                height: '100%'\r\n            });\r\n\r\n            me.props.rendered = true;\r\n            me.fire('render');\r\n\r\n            vp.props.rendered = true;\r\n            vp.fire('render');\r\n\r\n            if (me.props.zoomable) {\r\n                me.zoomable();\r\n\r\n                var debounce = _.debounce(function(){\r\n                    debounce.flush();\r\n                    debounce = null;\r\n\r\n                    me.tool().activate('panzoom');\r\n                }, 1000);\r\n\r\n                debounce();\r\n            }\r\n\r\n            return me;\r\n        },\r\n\r\n        container: function() {\r\n            return this.tree.container;\r\n        },\r\n\r\n        collector: function() {\r\n            return this.plugins.collector;\r\n        },\r\n\r\n        snapper: function() {\r\n            return this.plugins.snapper;\r\n        },\r\n\r\n        viewport: function() {\r\n            return Graph.registry.vector.get(this.components.viewport);\r\n        },\r\n\r\n        diagram: function() {\r\n            return this.diagram.manager;\r\n        },\r\n\r\n        // @Override\r\n        scale: function(sx, sy, cx, cy) {\r\n            if (sx === undefined) {\r\n                return this.viewport().matrix().scale();\r\n            }\r\n            return this.plugins.transformer.scale(sx, sy, cx, cy);\r\n        },\r\n\r\n        width: function() {\r\n            return this.elem.width();\r\n        },\r\n\r\n        height: function() {\r\n            return this.elem.height();\r\n        },\r\n        \r\n        locateLink: function(guid) {\r\n            var link = Graph.registry.link.get(guid);\r\n            if (link) {\r\n                link.select(false);\r\n            }\r\n        },\r\n\r\n        locateShape: function(guid) {\r\n            var shape = Graph.registry.shape.get(guid);\r\n            if (shape) {\r\n                shape.select(false);\r\n            }\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Paper';\r\n        },\r\n\r\n        ///////// OBSERVERS /////////\r\n        \r\n        ///////// TOPIC LISTENERS /////////\r\n\r\n        listenLinkChange: _.debounce(function() {\r\n            this.layout().arrangeLinks();\r\n        }, 300),\r\n\r\n        listenLinkAfterDestroy: _.debounce(function(){\r\n            this.layout().arrangeLinks();\r\n        }, 10)\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n    Paper.defaultInstance = null;\r\n    \r\n    Paper.getDefaultInstance = function() {\r\n        return Graph.registry.vector.get(Paper.defaultInstance);\r\n    };\r\n\r\n    ///////// EXTENSIONS /////////\r\n\r\n    var vectors = {\r\n        ellipse: 'Ellipse',\r\n        circle: 'Circle',\r\n        rect: 'Rect',\r\n        path: 'Path',\r\n        polyline: 'Polyline',\r\n        polygon: 'Polygon',\r\n        group: 'Group',\r\n        text: 'Text',\r\n        image: 'Image',\r\n        line: 'Line'\r\n    };\r\n\r\n    _.forOwn(vectors, function(name, method){\r\n        (function(name, method){\r\n            Paper.prototype[method] = function() {\r\n                var arg = [name].concat(_.toArray(arguments)),\r\n                    svg = Graph.svg.apply(null, arg);\r\n\r\n                svg.tree.paper = this.guid();\r\n                svg.render(this);\r\n\r\n                arg = null;\r\n                return svg;\r\n            };\r\n        }(name, method));\r\n    });\r\n\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var storage = {};\r\n\r\n    var Registry = function() {\r\n        \r\n    };\r\n    \r\n    Registry.prototype.constructor = Registry;\r\n\r\n    Registry.prototype.register = function(pallet) {\r\n        var id = pallet.guid();\r\n        storage[id] = pallet;\r\n    };\r\n\r\n    Registry.prototype.unregister = function(pallet) {\r\n        var id = pallet.guid();\r\n        if (storage[id]) {\r\n            delete storage[id];\r\n        }\r\n    };\r\n\r\n    Registry.prototype.get = function(key) {\r\n        if (key === undefined) {\r\n            return this.toArray();\r\n        }\r\n        return storage[key];\r\n    };\r\n\r\n    Registry.prototype.toArray = function() {\r\n        var keys = _.keys(storage);\r\n        return _.map(keys, function(k){\r\n            return storage[k];\r\n        });\r\n    };\r\n\r\n    Registry.prototype.toString = function() {\r\n        return 'Graph.registry.Pallet';\r\n    };\r\n\r\n    Graph.registry.pallet = new Registry();\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.layout.Layout = Graph.extend({\r\n        \r\n        props: {\r\n            // view config\r\n            fit: true,\r\n            view: null,\r\n            width: 0,\r\n            height: 0,\r\n\r\n            // router config\r\n            router: {\r\n                type: 'orthogonal'\r\n            },\r\n\r\n            link: {\r\n                smooth: false,\r\n                smoothness: 6\r\n            }\r\n        },\r\n        \r\n        view: null,\r\n\r\n        cached: {\r\n            offset: null,\r\n            position: null\r\n        },\r\n\r\n        constructor: function(view, options) {\r\n            _.assign(this.props, options || {});\r\n            this.props.view = view.guid();\r\n        },\r\n\r\n        view: function() {\r\n            return Graph.registry.vector.get(this.props.view);\r\n        },\r\n\r\n        paper: function() {\r\n            return this.view().paper();\r\n        },\r\n\r\n        invalidate: function() {\r\n            \r\n        },\r\n\r\n        offset: function() {\r\n            // TODO: please fix...\r\n            return this.position();\r\n        },\r\n\r\n        position: function() {\r\n            var position = this.cached.position;\r\n            var view, node;\r\n            \r\n            if ( ! position) {\r\n                view = this.view();\r\n                node = view.isViewport() ? view.parent().node() : view.node();\r\n                position = node.getBoundingClientRect();\r\n                this.cached.position = position;\r\n            }\r\n\r\n            return position;\r\n        },\r\n\r\n        center: function() {\r\n            var center = this.cached.center;\r\n\r\n            if ( ! center) {\r\n                var position = this.position();\r\n\r\n                center = {\r\n                    x: position.width / 2,\r\n                    y: position.height / 2\r\n                };\r\n\r\n                this.cached.center = _.extend({}, center);\r\n            }\r\n            \r\n            return center;\r\n        },\r\n\r\n        scale: function() {\r\n            return this.view().matrix().scale();\r\n        },\r\n\r\n        width: function() {\r\n            var view, bbox, width;\r\n\r\n            view = this.view();\r\n\r\n            if (view.isViewport()) {\r\n                width = this.paper().width();\r\n            } else {\r\n                bbox  = view.bbox();\r\n                width = bbox.width();\r\n            }\r\n\r\n            view = bbox = null;\r\n            return width;\r\n        },\r\n\r\n        height: function() {\r\n            var view, bbox, height;\r\n\r\n            view = this.view();\r\n\r\n            if (view.isViewport()) {\r\n                height = this.paper().height();\r\n            } else {\r\n                bbox   = view.bbox();\r\n                height = bbox.height();\r\n            }\r\n\r\n            view = bbox = null;\r\n            return height;\r\n        },\r\n        \r\n        invalidate: function() {\r\n            this.cached.offset = null;\r\n            this.cached.center = null;\r\n        },\r\n\r\n        grabVector: function(event) {\r\n            return Graph.registry.vector.get(event.target);\r\n        },\r\n\r\n        grabLink: function(event) {\r\n            return Graph.registry.link.get(event.target);\r\n        },\r\n\r\n        pointerLocation: function(pointer) {\r\n            var x = pointer.clientX,\r\n                y = pointer.clientY,\r\n                position = this.position(),\r\n                matrix = this.view().matrix(),\r\n                invert = matrix.clone().invert(),\r\n                scale  = matrix.scale(),\r\n                location = {\r\n                    x: invert.x(x, y),\r\n                    y: invert.y(x, y)\r\n                };\r\n\r\n            location.x -= position.left / scale.x;\r\n            location.y -= position.top / scale.y;\r\n\r\n            matrix = invert = null;\r\n\r\n            return location;\r\n        },\r\n\r\n        screenLocation: function(coord) {\r\n            var screen = this.view().node().getScreenCTM();\r\n                matrix = Graph.matrix(\r\n                    screen.a,\r\n                    screen.b,\r\n                    screen.c,\r\n                    screen.d,\r\n                    screen.e,\r\n                    screen.f\r\n                );\r\n\r\n            var x = matrix.x(coord.x, coord.y),\r\n                y = matrix.y(coord.x, coord.y);\r\n\r\n            coord.x = x;\r\n            coord.y = y;\r\n            \r\n            return coord;\r\n        },\r\n\r\n        dragSnapping: function() {\r\n            return {\r\n                mode: 'anchor',\r\n                x: 1,\r\n                y: 1\r\n            };\r\n        },\r\n\r\n        routerType: function() {\r\n            return this.props.router.type;\r\n        },\r\n        \r\n        createRouter: function(source, target, options) {\r\n            var clazz, router;\r\n\r\n            clazz   = Graph.router[_.capitalize(this.props.router.type)];\r\n            options = _.extend({}, this.props.router, options || {});\r\n            router  = Graph.factory(clazz, [this.view(), source, target, options]);\r\n\r\n            return router;\r\n        },\r\n        \r\n        createLink: function(router, options) {\r\n            var clazz, link;\r\n\r\n            clazz   = Graph.link[_.capitalize(this.props.router.type)];\r\n            options = _.extend({}, this.props.link, options || {});\r\n            link    = Graph.factory(clazz, [router, options]);\r\n\r\n            return link;\r\n        },\r\n\r\n        refresh: function(vector) {\r\n            this.fire('refresh');\r\n        },\r\n\r\n        arrangeLinks: function() {\r\n            var scope = this.view().paper().guid(),\r\n                links = Graph.registry.link.collect(scope);\r\n            \r\n            if (links.length) {\r\n                \r\n                var inspect = [];\r\n                \r\n                _.forEach(links, function(link){\r\n                    if (link.cached.convex) {\r\n                        inspect.push(link.guid());\r\n                    }\r\n                });\r\n                \r\n                // TODO: research for sweepline algorithm\r\n                \r\n                var sweeper = new Graph.util.Sweeplink(links),\r\n                    convex = sweeper.findConvex();\r\n                \r\n                var key, link, idx;\r\n                \r\n                for (key in convex) {\r\n                    link = Graph.registry.link.get(key);\r\n                    \r\n                    link.reloadConvex(convex[key]);\r\n                    link.reset(true);\r\n                    \r\n                    idx = _.indexOf(inspect, key);\r\n                    \r\n                    if (idx > -1) {\r\n                        inspect.splice(idx, 1);\r\n                    }\r\n                }\r\n                \r\n                if (inspect.length) {\r\n                    _.forEach(inspect, function(key){\r\n                        var link = Graph.registry.link.get(key);\r\n                        \r\n                        link.removeConvex();\r\n                        link.reset(true);\r\n                    });\r\n                }\r\n                \r\n                sweeper.destroy();\r\n                sweeper = null;\r\n            }\r\n        },\r\n\r\n        arrangeShapes: function() {\r\n            \r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.layout.Layout';\r\n        }\r\n        \r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.shape.activity.Router = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'Route',\r\n            mode: 'xor', // none | parallel | or | xor | complex | event\r\n            width: 100,\r\n            height: 100,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            type: 'activity.router',\r\n            icon: Graph.icons.ROUTER_NONE,\r\n            style: 'graph-shape-activity-router'\r\n        },\r\n\r\n        constructor: function() {\r\n            if (this.props.mode != 'none') {\r\n                this.props.width = this.props.height = 50;\r\n            }\r\n            this.superclass.prototype.constructor.apply(this, arguments);\r\n        },\r\n\r\n        initMetadata: function() {\r\n            this.metadata.tools = [\r\n                {\r\n                    name: 'mode-none',\r\n                    icon: Graph.icons.ROUTER_NONE,\r\n                    title: Graph._('Change to default mode'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onModeClick, this, _, 'none')\r\n                },\r\n                {\r\n                    name: 'mode-or',\r\n                    icon: Graph.icons.ROUTER_OR,\r\n                    title: Graph._('Change to OR mode'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onModeClick, this, _, 'or')\r\n                },\r\n                {\r\n                    name: 'mode-xor',\r\n                    icon: Graph.icons.ROUTER_XOR,\r\n                    title: Graph._('Change to XOR mode'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onModeClick, this, _, 'xor')\r\n                },\r\n                {\r\n                    name: 'mode-parallel',\r\n                    icon: Graph.icons.ROUTER_PARALLEL,\r\n                    title: Graph._('Change to parallel mode'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onModeClick, this, _, 'parallel')\r\n                },\r\n                {\r\n                    name: 'config',\r\n                    icon: Graph.icons.CONFIG,\r\n                    title: Graph._('Click to config shape'),\r\n                    enabled: true\r\n                },\r\n                {\r\n                    name: 'link',\r\n                    icon: Graph.icons.LINK,\r\n                    title: Graph._('Click to start shape linking'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onLinkToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtofront',\r\n                    icon: Graph.icons.SEND_TO_FRONT,\r\n                    title: Graph._('Send to front'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onFrontToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtoback',\r\n                    icon: Graph.icons.SEND_TO_BACK,\r\n                    title: Graph._('Send to back'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBackToolClick, this)\r\n                },\r\n                {\r\n                    name: 'trash',\r\n                    icon: Graph.icons.TRASH,\r\n                    title: Graph._('Click to remove shape'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onTrashToolClick, this)\r\n                }\r\n            ];\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, label, mode;\r\n\r\n            var points = [\r\n                this.props.width / 2, 0,\r\n                this.props.width, this.props.height / 2,\r\n                this.props.width / 2, this.props.height,\r\n                0, this.props.height / 2\r\n            ];\r\n\r\n            var cx = points[0],\r\n                cy = points[3];\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Polygon(points))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .data('text', this.props.label)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n            \r\n            pmgr.install('dragger', block, {ghost: true, cls: Graph.styles.SHAPE_DRAG});\r\n            pmgr.install('resizer', block);\r\n            pmgr.install('editor',  block);\r\n            pmgr.install('network', block, {wiring: 'v:v'});\r\n            pmgr.install('snapper', block);\r\n\r\n            block.on('edit.shape',      _.bind(this.onLabelEdit, this));\r\n            block.on('beforedrag.shape', _.bind(this.onBeforeDrag, this));\r\n            block.on('afterdrag.shape',   _.bind(this.onAfterDrag, this));\r\n            block.on('afterresize.shape',    _.bind(this.onAfterResize, this));\r\n            block.on('beforedestroy.shape',    _.bind(this.onBeforeDestroy, this));\r\n            block.on('afterdestroy.shape',    _.bind(this.onAfterDestroy, this));\r\n            block.on('select.shape',    _.bind(this.onSelect, this));\r\n            block.on('deselect.shape',  _.bind(this.onDeselect, this));\r\n            block.on('connect.shape', _.bind(this.onConnect, this));\r\n\r\n            label = (new Graph.svg.Text(cx, cy, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n\r\n            shape = block = label = null;\r\n\r\n            this.mode(this.props.mode);\r\n        },\r\n\r\n        mode: function(mode) {\r\n            if (mode === undefined) {\r\n                return this.props.mode;\r\n            }\r\n            \r\n            this.props.mode = mode;\r\n\r\n            var inner;\r\n\r\n            if (this.props.mode != 'none') {\r\n                \r\n                this.component('label').hide();\r\n                this.component('block').resizable().disable();\r\n\r\n                if (this.components.inner) {\r\n                    this.component('inner').remove();\r\n                }\r\n\r\n                var shape = this.component();\r\n\r\n                switch(mode) {\r\n                    case 'parallel':\r\n                        inner = (new Graph.svg.Path('M 10 25 L 25 25 L 25 40 L 25 25 L 40 25 L 25 25 L 25 10'));\r\n                        break;\r\n                    case 'or':\r\n                        inner = (new Graph.svg.Circle(25, 25, 10));\r\n                        break;\r\n                    case 'xor':\r\n                        inner = (new Graph.svg.Path('M 15 15 L 25 25 L 15 35 L 25 25 L 35 35 L 25 25 L 35 15'));\r\n                        break;\r\n                }\r\n\r\n                if (inner) {\r\n                    inner.addClass('comp-inner');\r\n                    inner.selectable(false);\r\n                    inner.clickable(false);\r\n                    inner.render(shape);\r\n\r\n                    this.components.inner = inner.guid();\r\n                }\r\n            } else {\r\n                this.component('label').show();\r\n                this.component('block').resizable().enable();\r\n\r\n                inner = this.component('inner');\r\n\r\n                if (inner) {\r\n                    inner.remove();\r\n                    this.components.inner = null;\r\n                }\r\n\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        width: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.width;\r\n            }\r\n\r\n            var box = this.component('block').bbox().toJson(),\r\n                sx = value / this.props.width,\r\n                sy = 1,\r\n                cx = box.x,\r\n                cy = (box.y + box.y2) / 2,\r\n                dx = 0,\r\n                dy = 0;\r\n\r\n            this.component('block').resize(sx, sy, cx, cy, dx, dy);\r\n            this.component().dirty(true);\r\n\r\n            this.props.width = value;\r\n            return this;\r\n        },\r\n\r\n        height: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.height;\r\n            }\r\n\r\n            var block = this.component('block'),\r\n                box = block.bbox().toJson(),\r\n                sx = 1,\r\n                sy = value / this.props.height,\r\n                cx = (box.x + box.x2) / 2,\r\n                cy = box.y,\r\n                dx = 0,\r\n                dy = 0;\r\n\r\n            var resize = block.resize(sx, sy, cx, cy, dx, dy);\r\n            block.fire('afterresize', resize);\r\n\r\n            this.props.height = value;\r\n            return this;\r\n        },\r\n\r\n        refresh: function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                label = this.component('label');\r\n\r\n            var bound, matrix;\r\n\r\n            bound = block.bbox().toJson();\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            var points = [\r\n                bound.width / 2, 0,\r\n                bound.width, bound.height / 2,\r\n                bound.width / 2, bound.height,\r\n                0, bound.height / 2\r\n            ];\r\n\r\n            block.attr({\r\n                points: _.join(points, ',')\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            label.attr({\r\n                x: bound.width  / 2,\r\n                y: bound.height / 2\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n            // update props\r\n\r\n            matrix = shape.matrix();\r\n\r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            matrix = null;\r\n            bound  = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Router';\r\n        },\r\n\r\n        onModeClick: function(e, mode) {\r\n            this.mode(mode);\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n    \r\n    var Link = Graph.link.Link;\r\n    \r\n    Graph.link.Directed = Graph.extend(Link, {\r\n        \r\n        renderControl: function() {\r\n            var me = this, editor = me.component('editor');\r\n\r\n            if (me.cached.controls) {\r\n                _.forEach(me.cached.controls, function(c){\r\n                    c = Graph.registry.vector.get(c);\r\n                    c.remove();\r\n                });\r\n                me.cached.controls = null;\r\n            }\r\n\r\n            var points = this.cached.bendpoints,\r\n                maxlen = points.length - 1,\r\n                linkid = me.guid(),\r\n                controls = [],\r\n                controlImage = Graph.config.base + 'img/' + Graph.config.resizer.image,\r\n                controlSize = Graph.config.resizer.size;\r\n\r\n            _.forEach(points, function(dot, i){\r\n                \r\n                var control = (new Graph.svg.Image(\r\n                    controlImage,\r\n                    dot.x - controlSize / 2,\r\n                    dot.y - controlSize / 2,\r\n                    controlSize,\r\n                    controlSize\r\n                ));\r\n                \r\n                control.selectable(false);\r\n                control.removeClass(Graph.styles.VECTOR);\r\n                \r\n                if (i === 0) {\r\n                    control.addClass(Graph.styles.LINK_TAIL);\r\n                    control.elem.data('pole', 'tail');\r\n                } else if (i === maxlen) {\r\n                    control.addClass(Graph.styles.LINK_HEAD);\r\n                    control.elem.data('pole', 'head');\r\n                }\r\n                \r\n                control.elem.group('graph-link');\r\n                control.elem.data(Graph.string.ID_LINK, linkid);\r\n                \r\n                var context = {\r\n                    trans: (i === 0 || i === maxlen) ? 'CONNECT' : 'BENDING',\r\n                    index: dot.index,\r\n                    space: dot.space,\r\n                    point: {\r\n                        x: dot.x,\r\n                        y: dot.y\r\n                    },\r\n                    event: {\r\n                        x: dot.x,\r\n                        y: dot.y\r\n                    },\r\n                    range: {\r\n                        start: dot.range[0],\r\n                        end:   dot.range[1]\r\n                    },\r\n                    delta: {\r\n                        x: 0,\r\n                        y: 0\r\n                    },\r\n                    snap: {\r\n                        hor: [],\r\n                        ver: []\r\n                    }\r\n                };\r\n                \r\n                control.draggable({ghost: false});\r\n                control.cursor('default');\r\n                \r\n                control.on('beforedrag', _.bind(me.onControlStart, me, _, context, control));\r\n                control.on('drag',  _.bind(me.onControlMove,  me, _, context, control));\r\n                control.on('afterdrag',   _.bind(me.onControlEnd,   me, _, context, control));\r\n                \r\n                control.render(editor);\r\n                controls.push(control.guid());\r\n            });\r\n            \r\n            me.cached.controls = controls;\r\n            controls = null;\r\n        },\r\n        \r\n        onControlStart: function(e, context, control) {\r\n            this.router.initTrans(context);\r\n            \r\n            if (context.trans == 'CONNECT') {\r\n                var paper = this.component().paper();\r\n                if (paper) {\r\n                    paper.addClass('linking');\r\n                }\r\n            }\r\n\r\n            var snaphor = context.snap.hor,\r\n                snapver = context.snap.ver;\r\n            \r\n            control.draggable().snap([\r\n                function(x, y){\r\n                    var sx = Graph.util.snapValue(x, snapver),\r\n                        sy = Graph.util.snapValue(y, snaphor);\r\n                    \r\n                    return {\r\n                        x: sx,\r\n                        y: sy,\r\n                        range: 10\r\n                    };\r\n                }\r\n            ]);\r\n            \r\n            _.forEach(this.cached.controls, function(id){\r\n                var c = Graph.registry.vector.get(id);\r\n                if (c && c !== control) {\r\n                    c.hide();\r\n                }\r\n            });\r\n            \r\n            control.show();\r\n        },\r\n        \r\n        onControlMove: function(e, context, control) {\r\n            var me = this;\r\n            \r\n            context.delta.x += e.dx;\r\n            context.delta.y += e.dy;\r\n            \r\n            var x1, y1, x2, y2;\r\n            \r\n            x1 = context.event.x,\r\n            y1 = context.event.y;\r\n            \r\n            if (context.trans == 'BENDING') {\r\n                me.router.bending(context, function(result){\r\n                    me.reload(result.command, true);\r\n                });\r\n            } else {\r\n                me.router.connecting(context, function(result){\r\n                    me.reload(result.command, true);\r\n                });\r\n            }\r\n            \r\n            x2 = context.event.x,\r\n            y2 = context.event.y;\r\n            \r\n            // update dragger\r\n            e.originalData.dx = (x2 - x1);\r\n            e.originalData.dy = (y2 - y1);\r\n        },\r\n        \r\n        onControlEnd: function(e, context, control) {\r\n            this.router.stopTrans(context);\r\n\r\n            if (context.trans == 'CONNECT') {\r\n                var paper = this.component().paper();\r\n                if (paper) {\r\n                    paper.removeClass('linking');\r\n                }\r\n            }\r\n\r\n            this.reload(this.router.command());\r\n            this.invalidate();\r\n            this.resumeControl();\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.link.Orthogonal = Graph.extend(Graph.link.Link, {\r\n\r\n        reload: function(command, silent) {\r\n            var convex, smooth, radius, routes, maxlen, segments;\r\n            \r\n            silent = _.defaultTo(silent, false);\r\n            convex = this.cached.convex;\r\n            smooth = this.props.smooth;\r\n\r\n            if (convex) {\r\n                var points = this.router.waypoints();\r\n\r\n                if ( ! points) {\r\n                    return;\r\n                }\r\n\r\n                routes = points.slice();\r\n                maxlen = routes.length - 1;\r\n\r\n                segments = [];\r\n\r\n                _.forEach(routes, function(curr, i){\r\n                    var prev = curr,\r\n                        next = routes[i + 1];\r\n\r\n                    var item;\r\n\r\n                    if (i === 0) {\r\n                        item = ['M', curr.x, curr.y];\r\n                    } else {\r\n                        item = ['L', curr.x, curr.y];\r\n                    }\r\n\r\n                    segments.push(item);\r\n\r\n                    if (convex[i]) {\r\n                        _.forEach(convex[i], function(c){\r\n                            var conseg = Graph.util.convexSegment(c, prev, next);\r\n                            if (conseg) {\r\n                                segments.push(conseg[0], conseg[1]);\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                command = Graph.util.segments2path(segments);\r\n            }\r\n            \r\n            if (smooth) {\r\n                radius = this.props.smoothness || 6;\r\n                segments = segments || Graph.util.path2segments(command).slice();\r\n\r\n                var item, prev, next, curr, i;\r\n                var bend;\r\n\r\n                for (i = 0; i < segments.length; i++) {\r\n                    item = segments[i];\r\n                    next = segments[i + 1];\r\n\r\n                    bend = !!(item[0] == 'L' && next && next[0] != 'Q');\r\n\r\n                    if (bend) {\r\n                        curr = {\r\n                            x: item[item.length - 2],\r\n                            y: item[item.length - 1]\r\n                        };\r\n\r\n                        prev = segments[i - 1];\r\n\r\n                        if (prev && next) {\r\n                            var ss = Graph.util.smoothSegment(\r\n                                curr,\r\n                                { x: prev[prev.length - 2], y: prev[prev.length - 1] },\r\n                                { x: next[next.length - 2], y: next[next.length - 1] },\r\n                                radius\r\n                            );\r\n\r\n                            if (ss) {\r\n                                segments.splice(i, 1, ss[0], ss[1]);\r\n                                i++;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                command = Graph.util.segments2path(segments);\r\n\r\n            }\r\n\r\n            command = command || '';\r\n\r\n            this.component('coat').attr('d', command).dirty(true);\r\n            this.component('path').attr('d', command);\r\n            this.invalidate();\r\n\r\n            if ( ! silent) {\r\n                this.refresh();\r\n                this.fire('change');\r\n                Graph.topic.publish('link:change');\r\n            }\r\n        },\r\n\r\n        renderControl: function() {\r\n            var me = this, editor = me.component('editor');\r\n\r\n            if (me.cached.controls) {\r\n                _.forEach(me.cached.controls, function(c){\r\n                    c = Graph.registry.vector.get(c);\r\n                    c.remove();\r\n                });\r\n                me.cached.controls = null;\r\n            }\r\n\r\n            var points = this.cached.bendpoints,\r\n                linkid = me.guid(),\r\n                maxlen = points.length - 1,\r\n                controls = [],\r\n                controlImage = Graph.config.base + 'img/' + Graph.config.resizer.image,\r\n                controlSize = Graph.config.resizer.size;\r\n\r\n            _.forEach(points, function(dot, i){\r\n                var control, cursor, align, axis, drag;\r\n\r\n                control = (new Graph.svg.Image(\r\n                    controlImage,\r\n                    dot.x - controlSize / 2,\r\n                    dot.y - controlSize / 2,\r\n                    controlSize,\r\n                    controlSize\r\n                ));\r\n\r\n                control.selectable(false);\r\n                control.removeClass(Graph.styles.VECTOR);\r\n                control.elem.group('graph-link');\r\n                control.elem.data(Graph.string.ID_LINK, linkid);\r\n\r\n                drag = {ghost: false};\r\n                axis = null;\r\n                cursor = 'default';\r\n\r\n                if (i === 0) {\r\n                    control.addClass(Graph.styles.LINK_TAIL);\r\n                    control.elem.data('pole', 'tail');\r\n                } else if (i === maxlen) {\r\n                    control.addClass(Graph.styles.LINK_HEAD);\r\n                    control.elem.data('pole', 'head');\r\n                } else {\r\n                    align  = Graph.util.pointAlign(dot.start, dot.end);\r\n                    axis   = align == 'v' ? 'y' : 'x';\r\n                    cursor = axis  == 'x' ? 'ew-resize' : 'ns-resize';\r\n\r\n                    drag = {ghost:false, axis: axis};\r\n                }\r\n\r\n                var context = {\r\n\r\n                    trans: (i === 0 || i === maxlen) ? 'CONNECT' : 'BENDING',\r\n                    index: dot.index,\r\n                    axis: axis,\r\n                    cursor: cursor,\r\n                    point: {\r\n                        x: dot.x,\r\n                        y: dot.y\r\n                    },\r\n\r\n                    ranges: {\r\n                        start: dot.range[0],\r\n                        end:   dot.range[1]\r\n                    },\r\n\r\n                    event: {\r\n                        x: dot.x,\r\n                        y: dot.y\r\n                    },\r\n\r\n                    snap: {\r\n                        hor: [],\r\n                        ver: []\r\n                    },\r\n\r\n                    delta: {\r\n                        x: 0,\r\n                        y: 0\r\n                    }\r\n                };\r\n\r\n\r\n                control.draggable(drag);\r\n                control.cursor(cursor);\r\n\r\n                control.on('beforedrag', _.bind(me.onControlStart, me, _, context, control));\r\n                control.on('drag',  _.bind(me.onControlMove,  me, _, context));\r\n                control.on('afterdrag',   _.bind(me.onControlEnd,   me, _, context, control));\r\n\r\n                control.render(editor);\r\n                controls.push(control.guid());\r\n            });\r\n\r\n            me.cached.controls = controls;\r\n            controls = null;\r\n        },\r\n\r\n        onControlStart: function(e, context, control) {\r\n            this.component('coat').cursor(context.cursor);\r\n            this.router.initTrans(context);\r\n\r\n            if (context.trans == 'CONNECT') {\r\n                var paper = this.component().paper();\r\n                if (paper) {\r\n                    paper.addClass('linking');\r\n                }\r\n            }\r\n\r\n            // snapping\r\n            var snaphor = context.snap.hor,\r\n                snapver = context.snap.ver;\r\n\r\n            control.draggable().snap([\r\n                function(x, y) {\r\n                    var sx = Graph.util.snapValue(x, snapver),\r\n                        sy = Graph.util.snapValue(y, snaphor);\r\n\r\n                    return {\r\n                        x: sx,\r\n                        y: sy,\r\n                        range: 10\r\n                    };\r\n                }\r\n            ]);\r\n\r\n            _.forEach(this.cached.controls, function(id){\r\n                var c = Graph.registry.vector.get(id);\r\n                if (c && c !== control) {\r\n                    c.hide();\r\n                }\r\n            });\r\n\r\n            control.show();\r\n            this.removeConvex();\r\n        },\r\n\r\n        onControlMove: function(e, context) {\r\n            var me = this;\r\n\r\n            context.delta.x += e.dx;\r\n            context.delta.y += e.dy;\r\n\r\n            var x1, y1, x2, y2, dx, dy;\r\n\r\n            x1 = context.event.x;\r\n            y1 = context.event.y;\r\n\r\n            if (context.trans == 'BENDING') {\r\n                me.router.bending(context, function(result){\r\n                    me.reload(result.command, true);\r\n                });\r\n            } else {\r\n                me.router.connecting(context, function(result){\r\n                    me.reload(result.command, true);\r\n                });\r\n            }\r\n\r\n            x2 = context.event.x;\r\n            y2 = context.event.y;\r\n\r\n            dx = x2 - x1;\r\n            dy = y2 - y1;\r\n\r\n            // update dragger\r\n            e.originalData.dx = dx;\r\n            e.originalData.dy = dy;\r\n        },\r\n\r\n        onControlEnd: function(e, context, control) {\r\n            this.component('coat').cursor('pointer');\r\n            this.router.stopTrans(context);\r\n\r\n            if (context.trans == 'CONNECT') {\r\n                var paper = this.component().paper();\r\n                if (paper) {\r\n                    paper.removeClass('linking');\r\n                }\r\n            }\r\n\r\n            this.reload(this.router.command());\r\n            this.invalidate();\r\n            this.resumeControl();\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.link.Orthogonal';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var KEY_TRESHOLD = 1e-9;\r\n    var SLOPE_TRESHOLD = .1;\r\n    \r\n    var Sweeplink = Graph.util.Sweeplink = function(links) {\r\n        \r\n        var me = this;\r\n        \r\n        me.points = [];\r\n        me.queue = [];\r\n        me.lines = [];\r\n        me.found = [];\r\n        me.process = [];\r\n        \r\n        _.forEach(links, function(link){\r\n            var dots = me.extract(link);\r\n            Array.prototype.push.apply(me.points, dots);\r\n        });\r\n\r\n        _.forEach(me.points, function(p, i){\r\n            if (i % 2) me.lines.push(_.sortBy( [p, me.points[i - 1]], 'y' ));\r\n        });\r\n        \r\n        _.forEach(me.lines, function(d, i){\r\n            if (d[0].x == d[1].x) {\r\n                d[0].x += SLOPE_TRESHOLD;\r\n                d[1].x -= SLOPE_TRESHOLD;\r\n            }\r\n\r\n            if (d[0].y == d[1].y) {\r\n                d[0].y -= SLOPE_TRESHOLD;\r\n                d[1].y += SLOPE_TRESHOLD;\r\n            }\r\n\r\n            d[0].line = d;\r\n            d[1].line = d;\r\n        });\r\n        \r\n    };\r\n\r\n    Sweeplink.prototype.constructor = Sweeplink;\r\n\r\n    Sweeplink.prototype.extract = function(link) {\r\n        var segments = link.router.path().curve().segments, \r\n            dots = [];\r\n\r\n        var x, y;\r\n        \r\n        _.forEach(segments, function(s, i){\r\n            var p = i === 0 ? {x: s[1], y: s[2]} : {x: s[5], y: s[6]};\r\n            var q = segments[i + 1];\r\n            \r\n            if (q) {\r\n                \r\n                q = {x: q[5], y: q[6]};\r\n                \r\n                Graph.util.movepoint(p, q, -20);\r\n                Graph.util.movepoint(q, p, -20);\r\n\r\n                p.x = Math.round(p.x, 3);\r\n                p.y = Math.round(p.y, 3);\r\n\r\n                q.x = Math.round(q.x, 3);\r\n                q.y = Math.round(q.y, 3);\r\n\r\n                p.link = link;\r\n                q.link = link;\r\n\r\n                p.range = i;\r\n                q.range = i + 1;\r\n\r\n                dots.push(p, q);\r\n            }\r\n            \r\n        });\r\n\r\n        return dots;\r\n    };\r\n\r\n    Sweeplink.prototype.findConvex = function() {\r\n        var me = this, linesByY;\r\n        \r\n        me.queue = createTree(me.points.slice())\r\n            .key(function(d){ return d.y + KEY_TRESHOLD * d.x; })\r\n            .order();\r\n        \r\n        me.found = [];\r\n        me.process = createTree([]);\r\n\r\n        for (var i = 0; i < me.queue.length && i < 1000; i++) {\r\n            \r\n            var d = me.queue[i];\r\n            var index, indexA, indexB, minIndex;\r\n            \r\n\r\n            if (d.line && d.line[0] == d) {\r\n                d.type = 'insert';\r\n                index = me.process\r\n                    .key(function(e){ return me.intercept(e, d.y - KEY_TRESHOLD / 1000); })\r\n                    .insert(d.line);\r\n                \r\n                me.validate(d.line, me.process[index + 1]);\r\n                me.validate(d.line, me.process[index - 1]);\r\n                \r\n            } else if (d.line) {\r\n                d.type = 'removal';\r\n                index = me.process.findIndex(d.line);\r\n                me.process.remove(d.line);\r\n                \r\n                me.validate(me.process[index - 1], me.process[index]);\r\n            } else if (d.lineA && d.lineB) {\r\n                me.process.key(function(e){ return me.intercept(e, d.y - KEY_TRESHOLD / 1000); });\r\n                \r\n                indexA = me.process.findIndex(d.lineA);\r\n                indexB = me.process.findIndex(d.lineB);\r\n                  \r\n                if (indexA == indexB) indexA = indexA + 1\r\n                  \r\n                me.process[indexA] = d.lineB;\r\n                me.process[indexB] = d.lineA;\r\n\r\n                minIndex = indexA < indexB ? indexA : indexB\r\n\r\n                me.validate(me.process[minIndex - 1], me.process[minIndex])\r\n                me.validate(me.process[minIndex + 1], me.process[minIndex + 2])\r\n            }\r\n        }\r\n        \r\n        var convex = {};\r\n        \r\n        _.forEach(this.found, function(f){\r\n            \r\n            var routes, rangeStart, rangeEnd, segmentAlign, segmentStart, segmentEnd,\r\n                alignA, alignB, line, link, guid;\r\n            \r\n            alignA = Graph.util.pointAlign(f.lineA[0], f.lineA[1], 10);\r\n            alignB = Graph.util.pointAlign(f.lineB[0], f.lineB[1], 10);\r\n            \r\n            if (alignA != alignB) {\r\n                segmentAlign = alignA == 'v' ? alignA : alignB;\r\n                \r\n                line = alignA == 'v' ? f.lineA : f.lineB;\r\n                link = line[0].link;\r\n                guid = link.guid();\r\n                \r\n                routes = link.router.waypoints();\r\n                \r\n                rangeStart = Math.min(line[0].range, line[1].range),\r\n                rangeEnd   = Math.max(line[0].range, line[1].range);\r\n                \r\n                segmentStart = routes[rangeStart];\r\n                segmentEnd = routes[rangeEnd];\r\n                \r\n                if ( ! convex[guid]) {\r\n                    convex[guid] = {};\r\n                }\r\n                \r\n                if ( ! convex[guid][rangeStart]) {\r\n                    convex[guid][rangeStart] = createTree([])\r\n                        .key(function(c){\r\n                            if (c.segmentAlign == 'v') {\r\n                                if (c.segmentStart.x < c.segmentEnd.x) {\r\n                                    return c.x + c.segmentStart.x;\r\n                                } else {\r\n                                    return c.segmentStart.x - c.x;\r\n                                }\r\n                            } else {\r\n                                if (c.segmentStart.y < c.segmentEnd.y) {\r\n                                    return c.y + c.segmentStart.y;\r\n                                } else {\r\n                                    return c.segmentStart.y - c.y;\r\n                                }\r\n                            }\r\n                        });\r\n                }\r\n                \r\n                convex[guid][rangeStart].insert({\r\n                    x: f.x,\r\n                    y: f.y,\r\n                    link: link.guid(),\r\n                    rangeStart: rangeStart,\r\n                    rangeEnd: rangeEnd,\r\n                    segmentAlign: segmentAlign,\r\n                    segmentStart: segmentStart,\r\n                    segmentEnd: segmentEnd\r\n                });\r\n                \r\n            }\r\n            \r\n        });\r\n        \r\n        return convex;\r\n    };\r\n    \r\n    Sweeplink.prototype.intersect = function(a, b, c, d) {\r\n        var det = (a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x),\r\n            l   = a.x * b.y - a.y * b.x,\r\n            m   = c.x * d.y - c.y * d.x,\r\n            ix  = (l * (c.x - d.x) - m * (a.x - b.x)) / det,\r\n            iy  = (l * (c.y - d.y) - m * (a.y - b.y)) / det,\r\n            i   = {x: ix, y: iy};\r\n\r\n        i.isOverlap = (ix == a.x && iy == a.y) || (ix == b.x && iy == b.y)\r\n        i.isIntersection = ! (a.x < ix ^ ix < b.x) && ! (c.x < ix ^ ix < d.x) && ! i.isOverlap && det\r\n        \r\n        // if (isNaN(i.x)) debugger\r\n\r\n        return i;\r\n    };\r\n    \r\n    Sweeplink.prototype.validate = function(a, b) {\r\n        if ( ! a || ! b ) return;\r\n        var i = this.intersect(a[0], a[1], b[0], b[1]);\r\n        \r\n        i.lineA = a;\r\n        i.lineB = b;\r\n        \r\n        if (i.isIntersection) {\r\n            this.found.push(i) && this.queue.insert(i);\r\n        }\r\n    };\r\n\r\n    Sweeplink.prototype.intercept = function(line, y) {\r\n        var a = line[0], \r\n            b = line[1],\r\n            m = (a.y - b.y) / (a.x - b.x);\r\n\r\n        return (y - a.y + m * a.x) / m;\r\n    }\r\n\r\n    Sweeplink.prototype.destroy = function() {\r\n        this.points = null;\r\n        this.lines = null;\r\n        this.found = null;\r\n        this.queue = null;\r\n        this.process = null;\r\n    };\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function createTree(array) {\r\n        var key = function(d){ return d; };\r\n        var bisect = _.bisector(function(d){ return key(d); }).left;\r\n        \r\n        array.insert = function(d) {\r\n            var i = array.findIndex(d);\r\n            var v = key(d);\r\n            if (array[i] && v == key(array[i])) return;\r\n            array.splice(i, 0, d);\r\n            return i;\r\n        };\r\n\r\n        array.remove = function(d) {\r\n            var i = array.findIndex(d);\r\n            array.splice(i, 1);\r\n            return i;\r\n        };\r\n\r\n        array.findIndex = function(d) {\r\n            return bisect(array, key(d));\r\n        };\r\n\r\n        array.key = function(f) {\r\n            key = f;\r\n            return array;\r\n        };\r\n\r\n        array.swap = function() {\r\n\r\n        };\r\n\r\n        array.order = function() {\r\n            array.sort(_.ascendingKey(key));\r\n            return array;\r\n        };\r\n\r\n        return array;\r\n    }\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Plugin = Graph.extend({\r\n\r\n        props: {\r\n            vector: null,\r\n            activator: 'tool'\r\n        },\r\n\r\n        cached: {\r\n            \r\n        },\r\n\r\n        /**\r\n         * Get/set options\r\n         */\r\n        options: function(options) {\r\n\r\n        },\r\n        \r\n        vector: function() {\r\n            return Graph.registry.vector.get(this.props.vector);\r\n        },\r\n\r\n        invalidate: function() {\r\n            \r\n        },\r\n\r\n        enable: function(activator) {},\r\n\r\n        disable: function() {},\r\n\r\n        destroy: function() {}\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Manager = Graph.diagram.Manager = Graph.extend({\r\n\r\n        props: {\r\n            paper: null,\r\n            defaultType: 'activity'\r\n        },\r\n\r\n        pallets: [],\r\n        diagram: null,\r\n        snapshoot: [],\r\n\r\n        constructor: function(paper) {\r\n            this.props.paper = paper.guid();\r\n            paper.on('keynavdown', _.bind(this.onKeynavDown, this));\r\n        },\r\n\r\n        paper: function() {\r\n            return Graph.registry.vector.get(this.props.paper);\r\n        },\r\n\r\n        deselectAll: function() {\r\n            this.paper().collector().clearCollection();\r\n        },\r\n\r\n        removeSelection: function() {\r\n            var selection = this.paper().collector().collection.toArray().slice();\r\n                  \r\n            this.capture();\r\n\r\n            _.forEach(selection, function(vector){\r\n                vector.remove();\r\n            });\r\n        },\r\n\r\n        capture: function() {\r\n            // capture to snapshoot\r\n            if (this.diagram) {\r\n                // var data = this.diagram.toJson();\r\n                // this.snapshoot = [data];\r\n            }\r\n        },\r\n\r\n        undo: function() {\r\n            if (this.snapshoot.length) {\r\n                this.diagram.render(this.snapshoot[0]);\r\n            }\r\n        },\r\n\r\n        redo: function() {\r\n\r\n        },\r\n\r\n        addPallet: function(pallet) {\r\n            var me = this,\r\n                paper = me.paper(),\r\n                layout = paper.layout(),\r\n                scale = layout.scale(),\r\n                drawing = null;\r\n\r\n            me.pallets.push(pallet);\r\n\r\n            pallet.on({\r\n                pick: function(e) {\r\n\r\n                    paper.tool().activate('panzoom');\r\n\r\n                    if ( ! me.diagram) {\r\n                        me.create(me.props.defaultType);\r\n                    }\r\n\r\n                    var origin = layout.pointerLocation({\r\n                        clientX: e.origin.x,\r\n                        clientY: e.origin.y\r\n                    });\r\n\r\n                    var options = {\r\n                        left: origin.x,\r\n                        top: origin.y\r\n                    };\r\n\r\n                    var result = me.diagram.drawShape(e.shape, options);\r\n                    \r\n                    if (result.movable) {\r\n                        drawing = result.shape;\r\n                        scale = paper.layout().scale();\r\n                        drawing.component('block').dirty(true);\r\n                        drawing.component().dirty(true);\r\n                    } else {\r\n                        drawing = null;\r\n                        pallet.stopPicking();\r\n                    }\r\n\r\n                },\r\n                drag: function(e) {\r\n                    if (drawing) {\r\n                        var dx = e.dx,\r\n                            dy = e.dy;\r\n\r\n                        dx /= scale.x;\r\n                        dy /= scale.y;\r\n\r\n                        if (scale.x < 1) {\r\n                            dx += scale.x;\r\n                        }\r\n\r\n                        drawing.translate(dx, dy);\r\n                    }\r\n                },\r\n                drop: function(e) {\r\n                    if (drawing) {\r\n                        drawing = null;\r\n                    }\r\n                }\r\n            });\r\n\r\n        },\r\n\r\n        current: function() {\r\n            return this.diagram;\r\n        },\r\n\r\n        remove: function() {\r\n            if (this.diagram) {\r\n                this.diagram.remove();\r\n                this.diagram = null;\r\n\r\n                this.paper().fire('diagram.destroy');\r\n            }\r\n        },\r\n\r\n        create: function(type, options, silent) {\r\n            type = _.defaultTo(this.props.defaultType);\r\n\r\n            var clazz = Graph.diagram.type[_.capitalize(type)],\r\n                paper = this.paper();\r\n\r\n            this.diagram = Graph.factory(clazz, [paper, options]);\r\n            silent = _.defaultTo(silent, false);\r\n\r\n            if ( ! silent) {\r\n                paper.fire('diagram.create', {\r\n                    diagram: this.diagram\r\n                });\r\n            }\r\n\r\n            return this.diagram;\r\n        },\r\n\r\n        saveAsImage: function(type, filename) {\r\n            var exporter = new Graph.data.Exporter(this.paper());\r\n              \r\n            switch(type) {\r\n                case 'svg':\r\n                    exporter.exportSVG(filename);\r\n                    break;\r\n                case 'png':\r\n                    exporter.exportPNG(filename);\r\n                    break;\r\n                case 'jpg':\r\n                case 'jpeg':\r\n                    exporter.exportJPEG(filename);\r\n                    break;\r\n            }\r\n\r\n            exporter = null;\r\n        },\r\n\r\n        saveAsFile: function(callback) {\r\n            var exporter = new Graph.data.Exporter(this.paper());\r\n            exporter.exportFile(callback);\r\n            exporter = null;\r\n        },\r\n\r\n        saveAsBlob: function(callback) {\r\n            var exporter = new Graph.data.Exporter(this.paper());\r\n            return exporter.exportBlob(callback);\r\n        },\r\n\r\n        onKeynavDown: function(e) {\r\n            switch (e.keyCode) {\r\n                case Graph.event.DELETE:\r\n                    this.removeSelection();\r\n                    e.preventDefault();\r\n                    break;\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Definer = Graph.extend(Graph.plugin.Plugin, {\r\n        props: {\r\n            vector: null\r\n        },\r\n\r\n        definitions: {\r\n\r\n        },\r\n\r\n        components: {\r\n            holder: null\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            this.props.vector = vector.guid();\r\n\r\n            this.components.holder = Graph.$('<defs/>');\r\n            this.components.holder.prependTo(vector.elem);\r\n\r\n            if (vector.isPaper()) {\r\n                this.defineArrowMarker('marker-link-end');\r\n                this.defineCircleMarker('marker-link-start-circle');\r\n            }\r\n\r\n        },\r\n        \r\n        defineArrowMarker: function(id) {\r\n            if (this.definitions[id]) {\r\n                return this.definitions[id];\r\n            }\r\n\r\n            var marker = Graph.$(_.format(\r\n                '<marker id=\"{0}\" refX=\"{1}\" refY=\"{2}\" viewBox=\"{3}\" markerWidth=\"{4}\" markerHeight=\"{5}\" orient=\"{6}\">' + \r\n                    '<path d=\"{7}\" fill=\"{8}\" stroke-width=\"{9}\" stroke-linecap=\"{10}\" stroke-dasharray=\"{11}\">' + \r\n                    '</path>'+\r\n                '</marker>',\r\n                id, '11', '10', '0 0 20 20', '10', '10', 'auto',\r\n                'M 1 5 L 11 10 L 1 15 Z', '#000000', '1', 'round', '10000, 1'\r\n            ));\r\n\r\n            this.definitions[id] = marker;\r\n            this.components.holder.append(marker);\r\n\r\n            return marker;\r\n        },\r\n\r\n        defineCircleMarker: function(id) {\r\n            if (this.definitions[id]) {\r\n                return this.definitions[id];\r\n            }\r\n\r\n            var marker = Graph.$(_.format(\r\n                '<marker id=\"{0}\" refX=\"{1}\" refY=\"{2}\" viewBox=\"{3}\" markerWidth=\"{4}\" markerHeight=\"{5}\" orient=\"{6}\">' + \r\n                    '<circle cx=\"6\" cy=\"6\" r=\"4\" fill=\"none\" stroke=\"#000000\" stroke-width=\"1\" />' + \r\n                '</marker>',\r\n                id, '6', '6', '0 0 20 20', '10', '10', 'auto'\r\n            ));\r\n\r\n            this.definitions[id] = marker;\r\n            this.components.holder.append(marker);\r\n\r\n            return marker;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Definer';\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n    \r\n    // storages\r\n    var vendors = {};\r\n\r\n    var Reactor = Graph.plugin.Reactor = function(vector, listeners) {\r\n\r\n        var me = this,\r\n            node = vector.node(),\r\n            guid = vector.guid();\r\n\r\n        me.props = {\r\n            vector: guid\r\n        };\r\n        \r\n        me.listeners = listeners || {};\r\n\r\n        var vendor = vendors[guid] = interact(node);\r\n\r\n        vendor.on('down', function reactorDown(e){\r\n            if (e.target === node) {\r\n                e.originalType = 'pointerdown';\r\n                Graph.topic.publish('vector:pointerdown', {vector: vector});\r\n                vector.fire(e);\r\n            }\r\n        }, true);\r\n\r\n        vector.elem.on({\r\n            contextmenu: function(e) {\r\n                if (e.currentTarget === node) {\r\n                    vector.fire(e);\r\n                    // e.preventDefault();\r\n                }\r\n            }\r\n        });\r\n\r\n        vendor = null;\r\n\r\n    };\r\n\r\n    Reactor.prototype.constructor = Reactor;\r\n\r\n    Reactor.prototype.fire = function(eventType) {\r\n        var eventObject;\r\n\r\n        switch(eventType) {\r\n            case 'down':\r\n\r\n                eventObject = {\r\n                    type: 'mousedown'\r\n                };\r\n\r\n                break;\r\n        }\r\n\r\n        if (eventObject) {\r\n            // this.vendor().fire(eventObject);\r\n        }\r\n    };\r\n\r\n    Reactor.prototype.vendor = function() {\r\n        return vendors[this.props.vector];\r\n    };\r\n\r\n    Reactor.prototype.draggable = function(options) {\r\n        return this.vendor().draggable(options);\r\n    };\r\n\r\n    Reactor.prototype.dropzone = function(options) {\r\n        return this.vendor().dropzone(options);\r\n    };\r\n\r\n    Reactor.prototype.gesturable = function(options) {\r\n        return this.vendor().gesturable(options);\r\n    };\r\n\r\n    Reactor.prototype.destroy = function() {\r\n        var guid = this.props.vector,\r\n            vendor = vendors[guid];\r\n\r\n        if (vendor) {\r\n            vendor.unset();\r\n        }\r\n\r\n        delete vendors[guid];\r\n    };\r\n\r\n    Reactor.prototype.toString = function() {\r\n        return 'Graph.plugin.Reactor';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Transformer = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            scale: 1,\r\n            rotate: 0\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            this.actions = [];\r\n            this.props.vector = vector.guid();\r\n        },\r\n\r\n        transform: function(command) {\r\n            var me = this, segments = Graph.util.transform2segments(command);\r\n\r\n            _.forEach(segments, function(args){\r\n                var method = args.shift();\r\n                if (me[method] && _.isFunction(me[method])) {\r\n                    (function(){\r\n                        me[method].apply(me, args);\r\n                    }(method, args));    \r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        queue: function() {\r\n            var args = _.toArray(arguments);\r\n            \r\n            this.actions.push({\r\n                name: args.shift(),\r\n                args: args,\r\n                sort: this.actions.length\r\n            });\r\n\r\n            return this;\r\n        },\r\n        translate: function(dx, dy) {\r\n            dx = _.defaultTo(dx, 0);\r\n            dy = _.defaultTo(dy, 0);\r\n            this.queue('translate', dx, dy);\r\n            return this;\r\n        },\r\n        rotate: function(deg, cx, cy) {\r\n            if ( ! _.isUndefined(cx) && ! _.isUndefined(cy)) {\r\n                this.queue('rotate', deg, cx, cy);    \r\n            } else {\r\n                this.queue('rotate', deg);    \r\n            }\r\n            return this;\r\n        },\r\n        scale: function(sx, sy, cx, cy) {\r\n            sy = _.defaultTo(sy, sx);\r\n\r\n            if ( ! _.isUndefined(cx) && ! _.isUndefined(cy)) {\r\n                this.queue('scale', sx, sy, cx, cy);\r\n            } else {\r\n                this.queue('scale', sx, sy);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        matrix: function(a, b, c, d, e, f) {\r\n            this.queue('matrix', a, b, c, d, e, f);\r\n            return this;\r\n        },\r\n\r\n        commit: function(absolute, simulate) {\r\n            var me = this,\r\n                actions = me.actions,\r\n                vector = me.vector(),\r\n                events = {\r\n                    translate: false,\r\n                    rotate: false,\r\n                    scale: false\r\n                };\r\n\r\n            if ( ! actions.length) {\r\n                return;\r\n            }\r\n            \r\n            absolute = _.defaultTo(absolute, false);\r\n            simulate = _.defaultTo(simulate, false);\r\n            \r\n            var deg = 0, \r\n                dx = 0, \r\n                dy = 0, \r\n                sx = 1, \r\n                sy = 1;\r\n                \r\n            var mat = vector.matrix().clone();\r\n            \r\n            _.forEach(actions, function(act){\r\n                var arg = act.args,\r\n                    cmd = act.name,\r\n                    len = arg.length,\r\n                    inv = false;\r\n\r\n                if (absolute) {\r\n                    inv = mat.invert(true);\r\n                }\r\n                \r\n                var x1, y1, x2, y2, bb;\r\n                \r\n                if (cmd == 'translate' && len === 2) {\r\n                    if (absolute) {\r\n                        x1 = inv.x(0, 0);\r\n                        y1 = inv.y(0, 0);\r\n                        x2 = inv.x(arg[0], arg[1]);\r\n                        y2 = inv.y(arg[0], arg[1]);\r\n                        mat.translate(x2 - x1, y2 - y1);\r\n                    } else {\r\n                        mat.translate(arg[0], arg[1]);\r\n                    }\r\n                    events.translate = true;\r\n                } else if (cmd == 'rotate') {\r\n                    if (len == 1) {\r\n                        bb = bb || vector.bboxPristine().toJson();\r\n                        mat.rotate(arg[0], bb.x + bb.width / 2, bb.y + bb.height / 2);\r\n                        deg += arg[0];\r\n                    } else if (len == 3) {\r\n                        if (absolute) {\r\n                            x2 = inv.x(arg[1], arg[2]);\r\n                            y2 = inv.y(arg[1], arg[2]);\r\n                            mat.rotate(arg[0], x2, y2);\r\n                        } else {\r\n                            mat.rotate(arg[0], arg[1], arg[2]);\r\n                        }\r\n                        deg += arg[0];\r\n                    }\r\n                    events.rotate = true;\r\n                } else if (cmd == 'scale') {\r\n                    if (len === 1 || len === 2) {\r\n                        bb = bb || vector.bboxPristine().toJson();\r\n                        mat.scale(arg[0], arg[len - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\r\n                        sx *= arg[0];\r\n                        sy *= arg[len - 1];\r\n                    } else if (len === 4) {\r\n                        if (absolute) {\r\n                            x2 = inv.x(arg[2], arg[3]);\r\n                            y2 = inv.y(arg[2], arg[3]);\r\n                            mat.scale(arg[0], arg[1], x2, y2);\r\n                        } else {\r\n                            mat.scale(arg[0], arg[1], arg[2], arg[3]);\r\n                        }\r\n                        sx *= arg[0];\r\n                        sy *= arg[1];\r\n                    }\r\n                    events.scale = true;\r\n                } else if (cmd == 'matrix') {\r\n                    mat.multiply(arg[0], arg[1], arg[2], arg[3], arg[4], arg[5]);\r\n                }\r\n            });\r\n\r\n            if (simulate) {\r\n                this.actions = [];\r\n                return mat;\r\n            }\r\n            \r\n            vector.graph.matrix = mat;\r\n            vector.attr('transform', mat.toValue());\r\n\r\n\r\n            if (events.translate) {\r\n                events.translate = {\r\n                    dx: mat.e,\r\n                    dy: mat.f\r\n                };\r\n                this.fire('aftertranslate', events.translate);\r\n            }\r\n\r\n            if (events.rotate) {\r\n                events.rotate = {\r\n                    deg: deg\r\n                };\r\n                this.fire('afterrotate', events.rotate);\r\n            }\r\n\r\n            if (events.scale) {\r\n                events.scale = {\r\n                    sx: sx,\r\n                    sy: sy\r\n                };\r\n                this.fire('afterscale', events.scale);\r\n            }\r\n\r\n            this.actions = [];\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Transformer';\r\n        }\r\n    });\r\n    \r\n}());","\r\n(function(){\r\n    var global = this;\r\n\r\n    var Animator = Graph.plugin.Animator = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n\r\n            // default duration\r\n            duration: 1000,\r\n\r\n            // default easing\r\n            easing: 'linier'\r\n        },\r\n\r\n        stacks: [],\r\n\r\n        constructor: function(vector) {\r\n            this.props.vector = vector.guid();\r\n        },\r\n        \r\n        create: function(keyframes, duration, easing, callback) {\r\n            return new Animation(keyframes, duration, easing, callback);\r\n        },\r\n\r\n        animate: function(params, duration, easing, callback) {\r\n            var vector = this.vector(),\r\n                reset = _.extend({}, vector.attrs);\r\n\r\n            var scenes, animation;\r\n\r\n            if (params instanceof Animation ) {\r\n                animation = params;\r\n            } else {\r\n                duration = _.defaultTo(duration, this.props.duration);\r\n\r\n                if (_.isFunction(easing)) {\r\n                    callback = easing;\r\n                    easing = this.props.easing;\r\n                }\r\n\r\n                if ( ! easing) {\r\n                    easing = this.props.easing;\r\n                }\r\n\r\n                scenes = {\r\n                    100: params\r\n                };\r\n\r\n                animation = new Animation(scenes, duration, easing, callback);\r\n            }\r\n\r\n            if ( ! animation.count()) {\r\n                animation = null;\r\n                return;\r\n            }\r\n\r\n            reset.transform = vector.attrs.transform;\r\n            reset.matrix = vector.matrix().clone();\r\n\r\n            this.start(\r\n                animation, \r\n                animation.frame(0), \r\n                reset, \r\n                null\r\n            );\r\n\r\n            animation = null;\r\n\r\n            return this;\r\n        },\r\n\r\n        resume: function() {\r\n\r\n        },\r\n\r\n        pause: function() {\r\n\r\n        },\r\n\r\n        stop: function() {\r\n\r\n        },\r\n\r\n        start: function(animation, frame, reset, status) {\r\n            var asize = animation.count();\r\n\r\n            if ( ! asize) {\r\n                animation = null;\r\n                return;\r\n            }\r\n\r\n            var vector = this.vector(),\r\n                ssize = this.stacks.length,\r\n                origin = {},\r\n                delta = {},\r\n                from = {},\r\n                to = {};\r\n\r\n            var scene, queue, last, time, playing, applied, p, i;\r\n\r\n            if (status) {\r\n                for (i = 0; i < ssize; i++) {\r\n                    p = this.stacks[i];\r\n                    if (p.animation == animation) {\r\n                        if (p.frame != frame) {\r\n                            this.stacks.splice(i, 1);\r\n                            applied = 1;\r\n                        } else {\r\n                            playing = p;\r\n                        }\r\n                        vector.attr(p.reset);\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                status = +to;\r\n            }\r\n\r\n            queue = {\r\n                animation: animation,\r\n                vector: vector\r\n            };\r\n\r\n            time = animation.duration();\r\n            last = animation.at(asize - 1).frame;\r\n\r\n            for (i = 0; i < asize; i++) {\r\n                scene = animation.at(i);\r\n                if (scene.frame == frame || scene.frame > status * last) {\r\n\r\n                    queue.prev = animation.at(i - 1);\r\n                    queue.prev = queue.prev ? queue.prev.frame : 0;\r\n\r\n                    queue.frame = scene.frame;\r\n                    queue.duration = time / last * (queue.frame - queue.prev);\r\n\r\n                    queue.next = animation.at(i + 1);\r\n                    queue.next = queue.next ? queue.next.frame : undefined;\r\n\r\n                    queue.last = last;\r\n                    break;\r\n                } else if (status) {\r\n                    vector.attr(scene.params);\r\n                }\r\n            }\r\n\r\n            if ( ! playing) {\r\n\r\n                time = queue.duration;\r\n\r\n                _.forOwn(scene.params, function(v, k){\r\n                    \r\n                    var able = Animation.animable[k];\r\n                    var plugin, matrix, inverse, segments;\r\n                    var i, j, ii, jj;\r\n\r\n                    if (able) {\r\n                        from[k] = vector.attrs[k];\r\n                        from[k] = _.defaultTo(from[k], able.defaults);\r\n                        to[k]   = v;\r\n\r\n                        switch(able.type) {\r\n                            case 'number':\r\n                                delta[k] = (to[k] - from[k]) / time;\r\n                                break;\r\n\r\n                            case 'transform':\r\n                                var eq = equalizeTransform(vector.attrs[k], v);\r\n\r\n                                if (eq.equal) {\r\n                                    from[k]  = eq.from;\r\n                                    to[k]    = eq.to;\r\n                                    delta[k] = [];\r\n                                    delta[k].semantic = true;\r\n                                    for (i = 0, ii = from[k].length; i < ii; i++) {\r\n                                        delta[k][i] = [from[k][i][0]];\r\n                                        for (j = 1, jj = from[k][i].length; j < jj; j++) {\r\n                                            delta[k][i][j] = (to[k][i][j] - from[k][i][j]) / time;\r\n                                        }\r\n                                    }\r\n                                } else {\r\n                                    plugin = vector.plugins.transformer;\r\n                                    segments = Graph.util.transform2segments(to[k]);\r\n\r\n                                    matrix = vector.matrix();\r\n\r\n                                    from[k] = matrix.clone();\r\n                                    inverse = matrix.invert(true);\r\n\r\n                                    vector.graph.matrix = matrix.multiply(inverse);\r\n\r\n                                    _.forEach(segments, function(s){\r\n                                        var cmd = s[0], args = s.slice(1);\r\n                                        plugin[cmd].apply(plugin, args);\r\n                                    });\r\n\r\n                                    matrix = plugin.commit(false, true);\r\n                                    to[k] = matrix.clone();\r\n\r\n                                    delta[k] = {\r\n                                        a: (to[k].props.a - from[k].props.a) / time,\r\n                                        b: (to[k].props.b - from[k].props.b) / time,\r\n                                        c: (to[k].props.c - from[k].props.c) / time,\r\n                                        d: (to[k].props.d - from[k].props.d) / time,\r\n                                        e: (to[k].props.e - from[k].props.e) / time,\r\n                                        f: (to[k].props.f - from[k].props.f) / time\r\n                                    };\r\n\r\n                                    segments = null;\r\n                                    plugin = null;\r\n                                    matrix = null;\r\n                                }\r\n\r\n                                break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n                var timestamp = +new Date;\r\n\r\n                _.extend(queue, {\r\n                    scene: scene,\r\n                    timestamp: timestamp,\r\n                    start: timestamp + animation.delay(),\r\n\r\n                    reset: reset,\r\n                    from: from,\r\n                    to: to,\r\n                    delta: delta,\r\n\r\n                    status: 0,\r\n                    initstatus: status || 0,\r\n\r\n                    stop: false\r\n                });\r\n\r\n                this.stacks.push(queue);\r\n\r\n                if (status && ! playing && ! applied) {\r\n                    queue.stop = true;\r\n                    queue.start = new Date - scene.duration * status;\r\n                    if (this.stacks.length === 1) {\r\n                        return this.player();\r\n                    }\r\n                }\r\n\r\n                if (applied) {\r\n                    queue.start = new Date - scene.duration * status;\r\n                }\r\n\r\n                if (this.stacks.length === 1) {\r\n                    Animator.play(_.bind(this.player, this));\r\n                }\r\n            } else {\r\n                playing.initstatus = status;\r\n                playing.start = new Date - playing.duration * status;\r\n            }\r\n\r\n            this.fire('animstart');\r\n\r\n        },\r\n\r\n        player: function() {\r\n            var timestamp = +new Date, tick = 0;\r\n            var vector, curr, from, prog, anim, time, able, value, key, type, scene, matrix;\r\n            var plugin, matrix, method, args;\r\n            var key, to, ii, jj, i, j;\r\n\r\n            for (; tick < this.stacks.length; tick++) {\r\n                curr = this.stacks[tick];\r\n\r\n                if (curr.paused) {\r\n                    continue;\r\n                }\r\n                \r\n                prog   = timestamp - curr.start;\r\n\r\n                time   = curr.duration;\r\n                vector = curr.vector;\r\n                scene  = curr.scene;\r\n                from   = curr.from;\r\n                to     = curr.to;\r\n                delta  = curr.delta;\r\n                anim   = curr.animation;\r\n\r\n                if (curr.initstatus) {\r\n                    prog = (curr.initstatus * curr.last - curr.prev) / (curr.frame - curr.prev) * time;\r\n                    curr.status = curr.initstatus;\r\n                    delete curr.initstatus;\r\n                    curr.stop && this.stacks.splice(tick--, 1);\r\n                } else {\r\n                    curr.status = (curr.prev + (curr.frame - curr.prev) * (prog / time)) / curr.last;\r\n                }\r\n\r\n                if (prog < 0) {\r\n                    continue;\r\n                }\r\n\r\n                if (prog < time) {\r\n\r\n                    ease = scene.easing(prog / time);\r\n\r\n                    for (key in from) {\r\n                        \r\n                        able = Animation.animable[key];\r\n\r\n                        switch(able.type) {\r\n                            case 'number':\r\n\r\n                                value = +from[key] + ease * time * delta[key];\r\n                                vector.attr(name, value);\r\n\r\n                                break;\r\n                            case 'transform':\r\n\r\n                                // semantic `rotate,scale,translate`\r\n                                if (delta[key].semantic) {\r\n                                    plugin = vector.plugins.transformer;\r\n\r\n                                    for (i = 0, ii = from[key].length; i < ii; i++) {\r\n                                        method = from[key][i][0];\r\n                                        args = [];\r\n\r\n                                        for (j = 1, jj = from[key][i].length; j < jj; j++) {\r\n                                            args.push(from[key][i][j] + ease * time * delta[key][i][j]);\r\n                                        }\r\n\r\n                                        plugin[method].apply(plugin, args);\r\n                                    }\r\n\r\n                                    matrix = plugin.commit(false, true);\r\n\r\n                                    vector.attr('transform', matrix.toValue());\r\n\r\n\r\n                                    matrix = null;\r\n                                    plugin = null;\r\n\r\n                                } else {\r\n                                    matrix = Graph.matrix(\r\n                                        from[key].props.a + ease * time * delta[key].a,\r\n                                        from[key].props.b + ease * time * delta[key].b,\r\n                                        from[key].props.c + ease * time * delta[key].c,\r\n                                        from[key].props.d + ease * time * delta[key].d,\r\n                                        from[key].props.e + ease * time * delta[key].e,\r\n                                        from[key].props.f + ease * time * delta[key].f\r\n                                    );\r\n                                    vector.attr('transform', matrix.toValue());\r\n                                    matrix = null;\r\n                                }\r\n\r\n                                break;\r\n                        }\r\n                    }\r\n\r\n                } else {\r\n\r\n                    for (key in to) {\r\n                        \r\n                        able = Animation.animable[key];\r\n\r\n                        switch(able.type) {\r\n\r\n                            case 'transform':\r\n\r\n                                if (delta[key].semantic) {\r\n                                    plugin = vector.plugins.transformer;\r\n\r\n                                    _.forEach(to[key], function(v){\r\n                                        var cmd = v[0], args = v.slice(1);\r\n                                        plugin[cmd].apply(plugin, args);\r\n                                    });\r\n\r\n                                    matrix = plugin.commit(false, true);\r\n\r\n                                    vector.graph.matrix = matrix;\r\n                                    vector.attr('transform', matrix.toValue());\r\n                                    \r\n                                    matrix = null;\r\n                                    plugin = null;\r\n                                } else {\r\n                                    matrix = to[key].clone();\r\n\r\n                                    vector.graph.matrix = matrix;\r\n                                    vector.attr('transform', matrix.toValue());\r\n\r\n                                    matrix = null;\r\n                                }\r\n                                break;\r\n                            \r\n                            default:\r\n                                vector.attr(key, to[key]);\r\n                                break;\r\n                        }\r\n                    }\r\n                    \r\n                    scene.played++;\r\n\r\n                    this.stacks.splice(tick--, 1);\r\n\r\n                    var repeat = anim.repeat(), \r\n                        played = scene.played;\r\n\r\n                    if ((repeat > 1 && played < repeat) && ! curr.next ) {\r\n                        _.forOwn(anim.scenes, function(s, k){\r\n                            for (var key in s.params) {\r\n                                if (key == 'transform') {\r\n                                    vector.graph.matrix = curr.reset.matrix;\r\n                                    vector.attr('transform', curr.reset.transform);\r\n                                } else {\r\n                                    vector.attr(k, curr.reset[k]);    \r\n                                }\r\n                            }\r\n                        });\r\n\r\n                        this.start(\r\n                            anim,\r\n                            anim.frame(0),\r\n                            curr.reset,\r\n                            null\r\n                        );\r\n                    }\r\n\r\n                    if (curr.next && ! curr.stop) {\r\n                        this.start(\r\n                            anim,\r\n                            curr.next,\r\n                            curr.reset,\r\n                            null\r\n                        );\r\n                    }\r\n\r\n                    if (played >= repeat) {\r\n                        // ___DONE___?\r\n                        curr = null;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.stacks.length) {\r\n                Animator.play(_.bind(this.player, this));\r\n            } else {\r\n                // ___DONE___\r\n            }\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Animator';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n    Animator.play = (function(g){\r\n        var func = g.requestAnimationFrame || \r\n                   g.webkitRequestAnimationFrame || \r\n                   g.mozRequestAnimationFrame || \r\n                   g.oRequestAnimationFrame || \r\n                   g.msRequestAnimationFrame || \r\n                   function (callback) { \r\n                        setTimeout(callback, 16); \r\n                   };\r\n\r\n        return _.bind(func, g);\r\n    }(global));\r\n\r\n    ///////// INTERNAL ANIMATION /////////\r\n    \r\n    var Animation = Graph.extend({\r\n\r\n        props: {\r\n            easing: 'linier',\r\n            duration: 1000,\r\n            repeat: 1,\r\n            delay: 0\r\n        },\r\n        \r\n        scenes: {},\r\n        frames: [],\r\n\r\n        constructor: function(keyframes, duration, easing, callback) {\r\n            this.props.guid = 'graph-anim-' + (++Animation.guid);\r\n            this.props.duration = duration = _.defaultTo(duration, 1000);\r\n\r\n            if (_.isFunction(easing)) {\r\n                if (callback) {\r\n                    this.props.easing = 'function';\r\n                } else {\r\n                    callback = easing;\r\n                    easing = this.props.easing;\r\n                }\r\n            }\r\n\r\n            if ( ! easing) {\r\n                easing = this.props.easing;\r\n            }\r\n\r\n            if (keyframes) {\r\n                var easing = _.isString(easing) ? Animation.easing[easing] : easing,\r\n                    repeat = this.props.repeat,\r\n                    scenes = this.scenes,\r\n                    frames = this.frames;\r\n\r\n                _.forOwn(keyframes, function(f, key){\r\n                    var params = {}, frame, scene;\r\n\r\n                    frame = _.toNumber(key);\r\n\r\n                    params = _.pickBy(f, function(v, k){\r\n                        return !!Animation.animable[k];\r\n                    });\r\n\r\n                    scene = {\r\n                        frame: frame,\r\n                        params: params,\r\n                        easing: easing,\r\n                        callback: callback,\r\n                        played: 0\r\n                    };\r\n\r\n                    frames.push(frame);\r\n                    scenes[frame] = scene;\r\n                });\r\n\r\n                frames.sort(function(a, b){ return a - b });\r\n            }\r\n        },\r\n\r\n        guid: function() {\r\n            return this.props.guid;\r\n        },\r\n\r\n        duration: function() {\r\n            return this.props.duration;\r\n        },\r\n\r\n        easing: function() {\r\n            return this.props.easing;\r\n        },\r\n\r\n        delay: function(delay) {\r\n\r\n            if (delay === undefined) {\r\n                return this.props.delay;\r\n            }\r\n\r\n            var anim = new Animation();\r\n\r\n            anim.frames = this.frames;\r\n            anim.scenes = _.cloneDeep(this.scenes);\r\n            anim.props  = _.cloneDeep(this.props);\r\n            anim.props.delay = delay || 0;\r\n            \r\n            return anim;\r\n        },\r\n\r\n        repeat: function(times) {\r\n\r\n            if (times === undefined) {\r\n                return this.props.repeat;\r\n            }\r\n\r\n            var anim = new Animation();\r\n\r\n            anim.frames = this.frames.slice();\r\n            anim.scenes = _.cloneDeep(this.scenes);\r\n            anim.props  = _.cloneDeep(this.props);\r\n            anim.props.repeat = Math.floor(Math.max(times, 0)) || 1;\r\n\r\n            // reset to scenes\r\n            _.forOwn(anim.scenes, function(s, f){\r\n                s.played = 0;\r\n            });\r\n\r\n            return anim;\r\n        },\r\n\r\n        count: function() {\r\n            return this.frames.length;\r\n        },\r\n\r\n        at: function(index) {\r\n            var frame = this.frame(index);\r\n            return this.scene(frame);\r\n        },\r\n\r\n        frame: function(index) {\r\n            return this.frames[index];\r\n        },\r\n\r\n        scene: function(frame) {\r\n            return this.scenes[frame];\r\n        },\r\n\r\n        destroy: function() {\r\n            this.scenes = null;\r\n            this.frames = null;\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n    _.extend(Animation, {\r\n        guid: 0,\r\n\r\n        animable: {\r\n             x: { type: 'number', defaults: 0 },\r\n             y: { type: 'number', defaults: 0 },\r\n            cx: { type: 'number', defaults: 0 },\r\n            cy: { type: 'number', defaults: 0 },\r\n            transform: { type: 'transform', defaults: '' }\r\n        },\r\n\r\n        easing: {\r\n            linier: function(n) {\r\n                return n;\r\n            },\r\n\r\n            easeIn: function(n) {\r\n                return Math.pow(n, 1.7);\r\n            },\r\n\r\n            easeOut: function(n) {\r\n                return Math.pow(n, .48);\r\n            },\r\n\r\n            easeInOut: function(n) {\r\n                var q = .48 - n / 1.04,\r\n                    Q = Math.sqrt(.1734 + q * q),\r\n                    x = Q - q,\r\n                    X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\r\n                    y = -Q - q,\r\n                    Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\r\n                    t = X + Y + .5;\r\n                return (1 - t) * 3 * t * t + t * t * t;\r\n            },\r\n\r\n            backIn: function(n) {\r\n                var s = 1.70158;\r\n                return n * n * ((s + 1) * n - s);\r\n            },\r\n\r\n            backOut: function (n) {\r\n                n = n - 1;\r\n                var s = 1.70158;\r\n                return n * n * ((s + 1) * n + s) + 1;\r\n            },\r\n\r\n            elastic: function (n) {\r\n                if (n == !!n) {\r\n                    return n;\r\n                }\r\n                return pow(2, -10 * n) * math.sin((n - .075) * (2 * PI) / .3) + 1;\r\n            },\r\n\r\n            bounce: function (n) {\r\n                var s = 7.5625,\r\n                    p = 2.75,\r\n                    l;\r\n                if (n < (1 / p)) {\r\n                    l = s * n * n;\r\n                } else {\r\n                    if (n < (2 / p)) {\r\n                        n -= (1.5 / p);\r\n                        l = s * n * n + .75;\r\n                    } else {\r\n                        if (n < (2.5 / p)) {\r\n                            n -= (2.25 / p);\r\n                            l = s * n * n + .9375;\r\n                        } else {\r\n                            n -= (2.625 / p);\r\n                            l = s * n * n + .984375;\r\n                        }\r\n                    }\r\n                }\r\n                return l;\r\n            }\r\n        }\r\n    });\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function equalizeTransform (t1, t2) {\r\n        t2 = _.toString(t2).replace(/\\.{3}|\\u2026/g, t1);\r\n        t1 = Graph.util.transform2segments(t1) || [];\r\n        t2 = Graph.util.transform2segments(t2) || [];\r\n        \r\n        var maxlength = Math.max(t1.length, t2.length),\r\n            from = [],\r\n            to = [],\r\n            i = 0, j, jj,\r\n            tt1, tt2;\r\n\r\n        for (; i < maxlength; i++) {\r\n            tt1 = t1[i] || emptyTransform(t2[i]);\r\n            tt2 = t2[i] || emptyTransform(tt1);\r\n\r\n            if ((tt1[0] != tt2[0]) ||\r\n                (tt1[0].toLowerCase() == \"rotate\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3])) ||\r\n                (tt1[0].toLowerCase() == \"scale\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4]))) {\r\n                return {\r\n                    equal: false,\r\n                    from: tt1,\r\n                    to: tt2\r\n                }\r\n            }\r\n            from[i] = [];\r\n            to[i] = [];\r\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\r\n                j in tt1 && (from[i][j] = tt1[j]);\r\n                j in tt2 && (to[i][j] = tt2[j]);\r\n            }\r\n        }\r\n        return {\r\n            equal: true,\r\n            from: from,\r\n            to: to\r\n        };\r\n    }\r\n\r\n    function emptyTransform(item) {\r\n        var l = item[0];\r\n        switch (l.toLowerCase()) {\r\n            case \"translate\": return [l, 0, 0];\r\n            case \"matrix\": return [l, 1, 0, 0, 1, 0, 0];\r\n            case \"rotate\": if (item.length == 4) {\r\n                return [l, 0, item[2], item[3]];\r\n            } else {\r\n                return [l, 0];\r\n            }\r\n            case \"scale\": if (item.length == 5) {\r\n                return [l, 1, 1, item[3], item[4]];\r\n            } else if (item.length == 3) {\r\n                return [l, 1, 1];\r\n            } else {\r\n                return [l, 1];\r\n            }\r\n        }\r\n    }\r\n\r\n}());","\r\n(function(){\r\n    \r\n    Graph.plugin.Resizer = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            vector: null,\r\n            enabled: true,\r\n            suspended: true,\r\n            restriction: null,\r\n            handleImage: null,\r\n            handleSize: null,\r\n            rendered: false\r\n        },\r\n\r\n        components: {\r\n            holder: null,\r\n            helper: null,\r\n            handle: null\r\n        },\r\n\r\n        trans: {\r\n            // original offset\r\n            ox: 0,\r\n            oy: 0,\r\n\r\n            // original\r\n            ow: 0,\r\n            oh: 0,\r\n\r\n            // current\r\n            cw: 0,\r\n            ch: 0,\r\n\r\n            // translation\r\n            dx: 0,\r\n            dy: 0\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var me = this, guid = vector.guid();\r\n            \r\n            options = options || {};\r\n\r\n            _.assign(me.props, options);\r\n\r\n            vector.addClass('graph-resizable');\r\n\r\n            me.props.handleImage = Graph.config.base + 'img/' + Graph.config.resizer.image;\r\n            me.props.handleSize = Graph.config.resizer.size;\r\n\r\n            me.props.vector = guid;\r\n\r\n            me.cached.snapping = null;\r\n            me.cached.vertices = null;\r\n\r\n            me.initComponent();\r\n        },\r\n        \r\n        holder: function() {\r\n            return Graph.registry.vector.get(this.components.holder);\r\n        },\r\n\r\n        helper: function() {\r\n            return Graph.registry.vector.get(this.components.helper);\r\n        },\r\n\r\n        handle: function(dir) {\r\n            return Graph.registry.vector.get(this.components.handle[dir]);\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = me.components;\r\n            var holder, helper;\r\n\r\n            holder = (new Graph.svg.Group())\r\n                .addClass('graph-resizer')\r\n                .removeClass('graph-elem graph-elem-group');\r\n\r\n            holder.elem.group('graph-resizer');\r\n\r\n            holder.on({\r\n                render: _.bind(me.onHolderRender, me)\r\n            });\r\n            \r\n            helper = (new Graph.svg.Rect(0, 0, 0, 0, 0))\r\n                .addClass('graph-resizer-helper')\r\n                .removeClass('graph-elem graph-elem-rect')\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(holder);\r\n\r\n            helper.elem.group('graph-resizer');\r\n\r\n            comp.handle = {};\r\n\r\n            var handle = {\r\n                ne: {ghost: false, cursor: 'nesw-resize'},\r\n                se: {ghost: false, cursor: 'nwse-resize'},\r\n                sw: {ghost: false, cursor: 'nesw-resize'},\r\n                nw: {ghost: false, cursor: 'nwse-resize'},\r\n                 n: {ghost: false, cursor: 'ns-resize', axis: 'y'},\r\n                 e: {ghost: false, cursor: 'ew-resize', axis: 'x'},\r\n                 s: {ghost: false, cursor: 'ns-resize', axis: 'y'},\r\n                 w: {ghost: false, cursor: 'ew-resize', axis: 'x'}\r\n            };\r\n\r\n            _.forOwn(handle, function(c, dir){\r\n                (function(dir){\r\n                    var h = (new Graph.svg.Image(\r\n                        me.props.handleImage,\r\n                        0,\r\n                        0,\r\n                        me.props.handleSize,\r\n                        me.props.handleSize\r\n                    ))\r\n                    .selectable(false)\r\n                    .removeClass('graph-elem graph-elem-image')\r\n                    .addClass('graph-resizer-handle handle-' + dir);\r\n\r\n                    h.elem.group('graph-resizer');\r\n                    h.props.dir = dir;\r\n                    h.draggable(c);\r\n                    \r\n                    h.on('beforedrag', _.bind(me.onHandleBeforeDrag, me));\r\n                    h.on('drag', _.bind(me.onHandleDrag, me));\r\n                    h.on('afterdrag', _.bind(me.onHandleAfterDrag, me));\r\n\r\n                    h.render(holder);\r\n\r\n                    comp.handle[dir] = h.guid();\r\n                    h = null;\r\n                }(dir));\r\n            });\r\n\r\n            comp.holder = holder.guid();\r\n            comp.helper = helper.guid();\r\n\r\n            holder = null;\r\n            helper = null;\r\n            handle = null;\r\n        },\r\n\r\n        invalidate: function()  {\r\n            this.superclass.prototype.invalidate.call(this);\r\n            this.cached.vertices = null;\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.enabled = false;\r\n        },\r\n\r\n        enable: function() {\r\n            this.props.enabled = true;\r\n        },\r\n\r\n        render: function() {\r\n            var me = this;\r\n\r\n            if (me.props.rendered) {\r\n                me.redraw();\r\n                return;\r\n            }\r\n\r\n            me.holder().render(me.vector().parent());\r\n            me.props.rendered = true;\r\n            me.redraw();\r\n        },\r\n\r\n        snap: function(snap) {\r\n            this.cached.snapping = snap;\r\n        },\r\n\r\n        vertices: function() {\r\n            var me = this,\r\n                vector = me.vector(),\r\n                vertices = me.cached.vertices;\r\n\r\n            if ( ! vertices) {\r\n                // get original bounding\r\n                var path, bbox, rotate;\r\n                var ro, cx, cy, ox, oy, hs, hw, hh;\r\n\r\n                path = vector.shape();\r\n                bbox = path.bbox().toJson();\r\n                // rotate = vector.matrixCurrent().rotate();\r\n                rotate = vector.matrix().rotate();\r\n\r\n                ro = rotate.deg;\r\n                cx = 0;\r\n                cy = 0;\r\n                ox = bbox.x;\r\n                oy = bbox.y;\r\n                hs = me.props.handleSize / 2;\r\n                \r\n                if (ro) {\r\n                    var rmatrix = Graph.matrix(),\r\n                        path = vector.shapeRelative();\r\n\r\n                    cx = bbox.x + bbox.width / 2,\r\n                    cy = bbox.y + bbox.height / 2;\r\n\r\n                    rmatrix.rotate(-ro, cx, cy);\r\n\r\n                    path = path.transform(rmatrix);\r\n                    bbox = path.bbox().toJson();\r\n                } else {\r\n                    var vmatrix = vector.matrix();\r\n                    path = path.transform(vmatrix);\r\n                    bbox = path.bbox().toJson();\r\n                }\r\n                \r\n\r\n                hw = bbox.width / 2;\r\n                hh = bbox.height / 2;\r\n\r\n                vertices = {\r\n                    ne: {\r\n                        x: bbox.x + bbox.width - hs,\r\n                        y: bbox.y - hs\r\n                    },\r\n\r\n                    se: {\r\n                        x: bbox.x + bbox.width - hs,\r\n                        y: bbox.y + bbox.height - hs\r\n                    },\r\n\r\n                    sw: {\r\n                        x: bbox.x - hs,\r\n                        y: bbox.y + bbox.height - hs\r\n                    },\r\n\r\n                    nw: {\r\n                        x: bbox.x - hs,\r\n                        y: bbox.y - hs\r\n                    },\r\n\r\n                    n: {\r\n                        x: bbox.x + hw - hs,\r\n                        y: bbox.y - hs\r\n                    },\r\n                    e: {\r\n                        x: bbox.x + bbox.width - hs,\r\n                        y: bbox.y + hh - hs\r\n                    },\r\n                    s: {\r\n                        x: bbox.x + hw - hs,\r\n                        y: bbox.y + bbox.height - hs\r\n                    },\r\n                    w: {\r\n                        x: bbox.x - hs,\r\n                        y: bbox.y + hh - hs\r\n                    },\r\n\r\n                    rotate: {\r\n                        deg: ro,\r\n                        cx: cx,\r\n                        cy: cy\r\n                    },\r\n\r\n                    box: {\r\n                        x: bbox.x,\r\n                        y: bbox.y,\r\n                        width: bbox.width,\r\n                        height: bbox.height\r\n                    },\r\n\r\n                    offset: {\r\n                        x: ox,\r\n                        y: oy\r\n                    }\r\n                };\r\n\r\n                this.cached.vertices = vertices;\r\n            }\r\n\r\n            return vertices;\r\n        },\r\n\r\n        redraw: function() {\r\n            var me = this,\r\n                helper = me.helper(),\r\n                holder = me.holder();\r\n\r\n            var vx;\r\n\r\n            if ( ! holder) {\r\n                return;\r\n            }\r\n\r\n            vx = this.vertices();\r\n\r\n            if ( ! vx) {\r\n                return;\r\n            }\r\n            \r\n            helper.reset();\r\n\r\n            helper.attr({\r\n                x: vx.box.x,\r\n                y: vx.box.y,\r\n                width: vx.box.width,\r\n                height: vx.box.height\r\n            });\r\n\r\n            helper.rotate(vx.rotate.deg, vx.rotate.cx, vx.rotate.cy).commit();\r\n\r\n            _.forOwn(me.components.handle, function(id, dir){\r\n                (function(id, dir){\r\n                    var h = me.handle(dir);\r\n                    h.show();\r\n                    h.reset();\r\n                    h.attr(vx[dir]);\r\n                    h.rotate(vx.rotate.deg, vx.rotate.cx, vx.rotate.cy).commit();\r\n                }(id, dir));\r\n            });\r\n\r\n            me.trans.ox = vx.offset.x;\r\n            me.trans.oy = vx.offset.y;\r\n            me.trans.ow = this.trans.cw = vx.box.width;\r\n            me.trans.oh = this.trans.ch = vx.box.height;\r\n            me.trans.dx = 0;\r\n            me.trans.dy = 0;\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.holder().elem.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            if ( ! this.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            if (this.props.suspended) {\r\n                this.props.suspended = false;\r\n\r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else { \r\n                    this.vector().parent().elem.append(this.holder().elem);\r\n                    this.redraw();\r\n                }\r\n            }\r\n        },\r\n\r\n        restrict: function(options) {\r\n            _.assign(this.props, {\r\n                restriction: options\r\n            });\r\n        },\r\n\r\n        setupRestriction: function(handle) {\r\n            var me = this,\r\n                restriction = this.props.restriction || {},\r\n                vector = me.vector(),\r\n                paper = vector.paper(),\r\n                layout = paper.layout(),\r\n                dir = handle.props.dir,\r\n                width = +restriction.width || 0,\r\n                height = +restriction.height || 0,\r\n                MAX_VALUE = Number.MAX_SAFE_INTEGER;\r\n\r\n            var bounds = {\r\n                top: -MAX_VALUE,\r\n                left: -MAX_VALUE,\r\n                right: MAX_VALUE,\r\n                bottom: MAX_VALUE\r\n            };\r\n\r\n            var origin;\r\n            \r\n            if (restriction.origin === undefined) {\r\n                var box = vector.bboxView().toJson();\r\n                origin = getRestrictOrigin(handle, box);\r\n            } else {\r\n                origin = _.extend({x: 0, y: 0}, restriction.origin);\r\n            }\r\n\r\n            switch(dir) {\r\n                case 'n':\r\n                    bounds.bottom = origin.y - height;\r\n                    break;\r\n                case 'e':\r\n                    bounds.left = origin.x + width;\r\n                    break;\r\n                case 's':\r\n                    bounds.top = origin.y + height;\r\n                    break;\r\n                case 'w':\r\n                    bounds.right = origin.x - width;\r\n                    break;\r\n                case 'ne':\r\n                    bounds.left = origin.x + width;\r\n                    bounds.bottom = origin.y - height;\r\n                    break;\r\n                case 'se':\r\n                    bounds.top = origin.y + height;\r\n                    bounds.left = origin.x + width;\r\n                    break;\r\n                case 'sw':\r\n                    bounds.right = origin.x - width;\r\n                    bounds.top = origin.y + height;\r\n                    break;\r\n                case 'nw':\r\n                    bounds.right = origin.x - width;\r\n                    bounds.bottom = origin.y - height;\r\n                    break;\r\n            }\r\n\r\n            handle.draggable().restrict(bounds);\r\n\r\n        },\r\n        \r\n        onHolderRender: function(e) {\r\n            \r\n        },\r\n\r\n        onHandleBeforeDrag: function(e) {\r\n            var me = this, \r\n                vector = me.vector(), \r\n                handle = e.publisher;\r\n\r\n            me.fire('beforeresize', {\r\n                resizer: this,\r\n                direction: handle.props.dir\r\n            });\r\n\r\n            if (vector.isRotatable()) {\r\n                vector.rotatable().suspend();\r\n            }\r\n\r\n            _.forOwn(me.components.handle, function(id, dir){\r\n                var h = me.handle(dir);\r\n                if (h !== handle) {\r\n                    h.hide();\r\n                }\r\n            });\r\n\r\n            var snapping = this.cached.snapping;\r\n\r\n            if (snapping && handle.draggable().snap() !== snapping) {\r\n                handle.draggable().snap(snapping);    \r\n            }\r\n            \r\n            if (this.props.restriction) {\r\n                this.setupRestriction(handle);    \r\n            }\r\n\r\n            handle.show();\r\n            handle.removeClass('dragging');\r\n        },\r\n\r\n        onHandleDrag: function(e) {\r\n            var me = this, \r\n                helper = me.helper(), \r\n                handle = e.publisher;\r\n            \r\n            var tr = this.trans,\r\n                dx = e.dx,\r\n                dy = e.dy;\r\n\r\n            switch(handle.props.dir) {\r\n                case 'ne':\r\n                    tr.cw += dx;\r\n                    tr.ch -= dy;\r\n\r\n                    me.trans.dy += dy;\r\n                    helper.translate(0, dy).commit();\r\n                    break;\r\n\r\n                case 'se':\r\n                    tr.cw += dx;\r\n                    tr.ch += dy;\r\n\r\n                    break;\r\n\r\n                case 'sw':\r\n                    tr.cw -= dx;\r\n                    tr.ch += dy;\r\n\r\n                    me.trans.dx += dx;\r\n                    helper.translate(dx, 0).commit();\r\n                    break;\r\n\r\n                case 'nw':\r\n                    tr.cw -= dx;\r\n                    tr.ch -= dy;\r\n\r\n                    me.trans.dx += dx;\r\n                    me.trans.dy += dy;\r\n                    helper.translate(dx, dy).commit();\r\n                    break;\r\n\r\n                case 'n':\r\n                    tr.cw += 0;\r\n                    tr.ch -= dy;\r\n\r\n                    me.trans.dy += dy;\r\n                    helper.translate(0, dy).commit();\r\n                    break;\r\n\r\n                case 'e':\r\n                    tr.cw += dx;\r\n                    tr.ch += 0;\r\n\r\n                    break;\r\n\r\n                case 's':\r\n                    tr.cw += 0;\r\n                    tr.ch += dy;\r\n                    break;\r\n\r\n                case 'w':\r\n                    tr.cw -= dx;\r\n                    tr.ch += 0;\r\n\r\n                    me.trans.dx += dx;\r\n                    helper.translate(dx, 0).commit();\r\n                    break;\r\n            }\r\n\r\n            helper.attr({\r\n                width:  tr.cw,\r\n                height: tr.ch\r\n            });\r\n\r\n        },\r\n\r\n        onHandleAfterDrag: function(e) {\r\n            var me = this,\r\n                tr = this.trans,\r\n                handle = e.publisher;\r\n\r\n            var sx, sy, cx, cy, dx, dy;\r\n\r\n            sx = tr.ow > 0 ? (tr.cw / tr.ow) : 1;\r\n            sy = tr.oh > 0 ? (tr.ch / tr.oh) : 1;\r\n            dx = tr.dx;\r\n            dy = tr.dy;\r\n\r\n            switch(handle.props.dir) {\r\n                case 'ne':\r\n                    cx = tr.ox;\r\n                    cy = tr.oy + tr.oh;\r\n                    break;\r\n                case 'se':\r\n                    cx = tr.ox;\r\n                    cy = tr.oy;\r\n                    break;\r\n                case 'sw':\r\n                    cx = tr.ox + tr.ow;\r\n                    cy = tr.oy;\r\n                    break;\r\n                case 'nw':\r\n                    cx = tr.ox + tr.ow;\r\n                    cy = tr.oy + tr.oh;\r\n                    break;\r\n                case 'n':\r\n                    cx = tr.ox + tr.ow / 2;\r\n                    cy = tr.oy + tr.oh;\r\n                    break;\r\n                case 'e':\r\n                    cx = tr.ox;\r\n                    cy = tr.oy + tr.oh / 2;\r\n                    break;\r\n                case 's':\r\n                    cx = tr.ox + tr.ow / 2;\r\n                    cy = tr.oy;\r\n                    break;\r\n                case 'w':\r\n                    cx = tr.ox + tr.ow;\r\n                    cy = tr.oy + tr.oh / 2;\r\n                    break;\r\n            }\r\n\r\n            // track translation\r\n            var vector = me.vector(),\r\n                oldcen = vector.bbox().center().toJson(),\r\n                resize = vector.resize(sx, sy, cx, cy, dx, dy),\r\n                newcen = vector.bbox().center().toJson();\r\n\r\n            var vdx = newcen.x - oldcen.x,\r\n                vdy = newcen.y - oldcen.y;\r\n\r\n            resize.translate.dx = vdx;\r\n            resize.translate.dy = vdy;\r\n            \r\n            me.redraw();\r\n            me.fire('afterresize', resize);\r\n\r\n            if (vector.isRotatable()) {\r\n                vector.rotatable().resume();\r\n            }\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Resizer';\r\n        },\r\n\r\n        destroy: function() {\r\n            // remove handles\r\n            var me = this\r\n\r\n            _.forOwn(me.components.handle, function(id, dir){\r\n                var h = me.handle(dir);\r\n                h.remove();\r\n            });\r\n\r\n            me.components.handle = null;\r\n\r\n            // remove helper\r\n            me.helper().remove();\r\n            me.components.helper = null;\r\n\r\n            // remove holder\r\n            me.holder().remove();\r\n            me.components.holder = null;\r\n\r\n            // remove listeners\r\n            me.listeners = null;\r\n        }\r\n        \r\n    });\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function getRestrictOrigin(handle, box) {\r\n        var origin = {\r\n            x: box.x,\r\n            y: box.y\r\n        };\r\n\r\n        switch(handle.props.dir) {\r\n            case 'n':\r\n                origin.x = (box.x + box.x2) / 2;\r\n                origin.y = box.y2;\r\n                break;\r\n            case 'e':\r\n                origin.x = box.x;\r\n                origin.y = (box.y + box.y2) / 2;\r\n                break;\r\n            case 's':\r\n                origin.x = (box.x + box.x2) / 2;\r\n                origin.y = box.y;\r\n                break;\r\n            case 'w':\r\n                origin.x = box.x2;\r\n                origin.y = (box.y + box.y2) / 2;\r\n                break;\r\n            case 'ne':\r\n                origin.x = box.x;\r\n                origin.y = box.y2;\r\n                break;\r\n            case 'se':\r\n                origin.x = box.x;\r\n                origin.y = box.y;\r\n                break;\r\n            case 'sw':\r\n                origin.x = box.x2;\r\n                origin.y = box.y;\r\n                break;\r\n            case 'nw':\r\n                origin.x = box.x2;\r\n                origin.y = box.y2;\r\n                break;\r\n        }\r\n\r\n        return origin;\r\n    }\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Rotator = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n            enabled: true,\r\n            suspended: true,\r\n            handleImage: null,\r\n            handleSize: null,\r\n            rendered: false\r\n        },\r\n\r\n        components: {\r\n            helper: null,\r\n            handle: null,\r\n            holder: null,\r\n            circle: null,\r\n            radius: null\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var guid = vector.guid();\r\n\r\n            options = options || {};\r\n\r\n            _.assign(this.props, options);\r\n\r\n            this.props.vector = guid;\r\n            this.props.handleImage = Graph.config.base + 'img/' + Graph.config.rotator.image;\r\n            this.props.handleSize = Graph.config.rotator.size;\r\n\r\n            this.initComponent();\r\n        },\r\n\r\n        invalidate: function()  {\r\n            this.superclass.prototype.invalidate.call(this);\r\n        },\r\n\r\n        initComponent: function() {\r\n            var holder, helper, handle, circle, radius;\r\n\r\n            holder = (new Graph.svg.Group())    \r\n                .removeClass(Graph.styles.VECTOR)\r\n                .addClass('graph-rotator');\r\n\r\n            holder.elem.group('graph-rotator');\r\n            holder.on('render.rotator', _.bind(this.setup, this));\r\n\r\n            helper = (new Graph.svg.Rect(0, 0, 0, 0, 0))\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .addClass('graph-rotator-helper')\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(holder);\r\n\r\n            handle = (new Graph.svg.Image(\r\n                this.props.handleImage, \r\n                0, \r\n                0, \r\n                this.props.handleSize - 2, \r\n                this.props.handleSize\r\n            ))\r\n            .selectable(false)\r\n            .removeClass(Graph.styles.VECTOR)\r\n            .addClass('graph-rotator-handle')\r\n            .render(holder);\r\n\r\n            handle.elem.group('graph-rotator');\r\n\r\n            radius = (new Graph.svg.Line())\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .render(holder);\r\n\r\n            circle = (new Graph.svg.Circle(0, 0, 5))\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .render(holder);\r\n\r\n            this.components.helper = helper.guid();\r\n            this.components.handle = handle.guid();\r\n            this.components.holder = holder.guid();\r\n            this.components.circle = circle.guid();\r\n            this.components.radius = radius.guid();\r\n            this.suspendHelper();\r\n\r\n            holder = handle = helper = circle = radius = null;\r\n        },\r\n\r\n        setup: function() {\r\n\r\n            var me = this,\r\n                vector = this.vector(),\r\n                layout = vector.paper().layout(),\r\n                helper = this.helper(),\r\n                handle = this.handle(),\r\n                holder = this.holder(),\r\n                radius = this.radius(),\r\n                handleNode = handle.node();\r\n\r\n            var trans = {\r\n                scale: null,\r\n                center: null,\r\n                translate: null,\r\n                move: null,\r\n                rotate: null,\r\n                snaps: null,\r\n                resizing: null\r\n            };\r\n\r\n            handle.interactable().draggable({\r\n                manualStart: true,\r\n                onstart: function(e) {\r\n\r\n                    var matrix = vector.matrix();\r\n                    var center, radian;\r\n\r\n                    trans.scale = layout.scale();\r\n                    trans.origin = handle.bbox().center().toJson();\r\n                    trans.target = {x: trans.origin.x, y: trans.origin.y};\r\n                    trans.move = {x: 0, y: 0};\r\n                    trans.rotate = matrix.rotate().deg;\r\n                    trans.snaps = [0, 45, 90, -135, -180, -225, -90, -45];\r\n                    trans.resizing = vector.isResizable() && vector.resizable().props.suspended === false;\r\n                    \r\n                    center = helper.bbox().center().toJson();\r\n                    trans.center = center;\r\n\r\n                    radian = holder.matrixCurrent().rotate().rad;\r\n                    trans.radian = {\r\n                        sin: Math.sin(radian),\r\n                        cos: Math.cos(radian)\r\n                    };\r\n\r\n                    if (trans.resizing) {\r\n                        vector.resizable().suspend();\r\n                    }\r\n\r\n                    me.resumeHelper();\r\n                },\r\n                onmove: function(e) {\r\n                    var edx = e.dx,\r\n                        edy = e.dy;\r\n\r\n                    var transform, rad, deg, dx, dy, tx, ty;\r\n\r\n                    trans.matrix = new Graph.lang.Matrix();\r\n\r\n                    // scaling\r\n                    edx /= trans.scale.x;\r\n                    edy /= trans.scale.y;\r\n\r\n                    // radian\r\n                    dx = edx *  trans.radian.cos + edy * trans.radian.sin;\r\n                    dy = edx * -trans.radian.sin + edy * trans.radian.cos;\r\n\r\n                    trans.move.x += dx;\r\n                    trans.move.y += dy;\r\n\r\n                    tx = trans.move.x + trans.origin.x;\r\n                    ty = trans.move.y + trans.origin.y;\r\n\r\n                    trans.target = {x: tx, y: ty};\r\n\r\n                    // rad = Math.atan2((ty - trans.center.y), (tx - trans.center.x));\r\n                    rad = Math.atan2((trans.center.y - ty), (trans.center.x - tx));\r\n                    deg = Math.round(rad * 180 / Math.PI - 90);\r\n\r\n                    // snapping\r\n                    deg = Graph.util.snapValue(deg, trans.snaps, 5);\r\n                    \r\n                    trans.matrix.rotate(deg, trans.center.x, trans.center.y);\r\n                    trans.rotate = deg;\r\n\r\n                    transform = trans.matrix.toValue();\r\n\r\n                    handle.attr('transform', transform);\r\n                    helper.attr('transform', transform);\r\n                    radius.attr('transform', transform);\r\n                },\r\n\r\n                onend: function() {\r\n                    var vmatrix = vector.matrix(),\r\n                        vcenter = vector.bboxPristine().center().toJson(),\r\n                        vrotate = vmatrix.rotate().deg,\r\n                        drotate = trans.rotate - vrotate;\r\n\r\n                    var cx, cy;\r\n\r\n                    cx = vcenter.x;\r\n                    cy = vcenter.y;\r\n\r\n                    vmatrix.rotate(drotate, cx, cy);\r\n                    vector.attr('transform', vmatrix.toValue());\r\n                    vector.dirty(true);\r\n\r\n                    me.redraw();\r\n\r\n                    if (trans.resizing) {\r\n                        vector.resizable().resume();\r\n                    }\r\n\r\n                    me.fire('afterrotate', {\r\n                        deg: trans.rotate - 90,\r\n                        cx: cx,\r\n                        cy: cy\r\n                    });\r\n\r\n                }\r\n            })\r\n            .on('down', function(e){\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            })\r\n            .on('move', function(e){\r\n                if (me.props.enabled) {\r\n                    var i = e.interaction;\r\n                    if (i.pointerIsDown && ! i.interacting()) {\r\n                        var a = {name: 'drag'};\r\n                        i.prepared.name = a.name;\r\n                        i.setEventXY(i.startCoords, i.pointers);\r\n\r\n                        if (e.currentTarget === handleNode) {\r\n                            i.start(a, e.interactable, handleNode);    \r\n                        }\r\n                    }    \r\n                }\r\n            });\r\n        },\r\n\r\n        holder: function() {\r\n            return Graph.registry.vector.get(this.components.holder);\r\n        },\r\n\r\n        helper: function() {\r\n            return Graph.registry.vector.get(this.components.helper);\r\n        },\r\n\r\n        circle: function() {\r\n            return Graph.registry.vector.get(this.components.circle);\r\n        },\r\n\r\n        radius: function() {\r\n            return Graph.registry.vector.get(this.components.radius);\r\n        },\r\n\r\n        handle: function() {\r\n            return Graph.registry.vector.get(this.components.handle);\r\n        },\r\n\r\n        resume: function() {\r\n            if ( ! this.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            if (this.props.suspended) {\r\n                this.props.suspended = false;\r\n\r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else {\r\n                    this.vector().parent().elem.append(this.holder().elem);\r\n                    this.redraw();\r\n                }\r\n            }\r\n        },\r\n\r\n        resumeHelper: function() {\r\n            var vector, key;\r\n            for (key in this.components) {\r\n                if (['holder', 'handle'].indexOf(key) === -1) {\r\n                    vector = this[key]();\r\n                    vector && vector.show();\r\n                }\r\n            }\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.holder().elem.detach();\r\n        },\r\n\r\n        suspendHelper: function() {\r\n            var vector, key;\r\n            for (key in this.components) {\r\n                if (['holder', 'handle'].indexOf(key) === -1) {\r\n                    vector = this[key]();\r\n                    vector && vector.hide();\r\n                }\r\n            }\r\n        },\r\n\r\n        render: function() {\r\n            if (this.props.rendered) {\r\n                this.redraw();\r\n                return;\r\n            }\r\n\r\n            this.props.rendered = true;\r\n            this.holder().render(this.vector().parent());\r\n            this.redraw();\r\n        },\r\n\r\n        redraw: function() {\r\n            \r\n            var vector = this.vector(),\r\n                holder = this.holder(),\r\n                helper = this.helper(),\r\n                handle = this.handle(),\r\n                circle = this.circle(),\r\n                radius = this.radius(),\r\n                rotate = vector.matrix().rotate().deg;\r\n\r\n            var bound = vector.bbox().toJson(),\r\n                edge = 30;\r\n\r\n            var cx, cy;\r\n\r\n            if (rotate) {\r\n                var rmatrix = Graph.matrix(),\r\n                    rpath = vector.shapeRelative();\r\n\r\n                cx = bound.x + bound.width / 2,\r\n                cy = bound.y + bound.height / 2;\r\n\r\n                rmatrix.rotate(-rotate, cx, cy);\r\n\r\n                rpath = rpath.transform(rmatrix);\r\n                bound = rpath.bbox().toJson();\r\n\r\n            } else {\r\n                var vmatrix = vector.matrix(),\r\n                    vpath = vector.shape();\r\n\r\n                vpath = vpath.transform(vmatrix);\r\n                bound = vpath.bbox().toJson();\r\n\r\n                cx = bound.x + bound.width / 2;\r\n                cy = bound.y + bound.height / 2;\r\n            }\r\n\r\n            \r\n\r\n            // reset first\r\n            helper.reset();\r\n            handle.reset();\r\n            radius.reset();\r\n\r\n            helper.attr({\r\n                x: bound.x,\r\n                y: bound.y,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            var hw = (this.props.handleSize - 2) / 2,\r\n                hh = (this.props.handleSize) / 2,\r\n                hx = cx - hw,\r\n                hy = bound.y - edge - hh;\r\n\r\n            circle.attr({\r\n                cx: cx, \r\n                cy: cy\r\n            });\r\n\r\n            handle.attr({\r\n                x: hx, \r\n                y: hy\r\n            });\r\n\r\n            radius.attr({\r\n                x1: cx,\r\n                y1: cy,\r\n                x2: cx,\r\n                y2:  bound.y - edge + hh\r\n            });\r\n\r\n            handle.rotate(rotate, cx, cy).commit();\r\n            helper.rotate(rotate, cx, cy).commit();\r\n            radius.rotate(rotate, cx, cy).commit();\r\n\r\n            holder = helper = bound = handle = radius = circle = null;\r\n        },\r\n\r\n        destroy: function() {\r\n            var key, cmp;\r\n\r\n            for (key in this.components) {\r\n                cmp = this[key]();\r\n                if (cmp) {\r\n                    cmp.remove();\r\n                    this.components[key] = cmp = null;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Collector = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            enabled: false,\r\n            suspended: true,\r\n            rendered: false,\r\n            activator: 'tool',\r\n            ready: false\r\n        },\r\n\r\n        paper: null,\r\n\r\n        collection: [],\r\n\r\n        components: {\r\n            rubber: null\r\n        },\r\n\r\n        collecting: {\r\n            enabled: false\r\n        },\r\n\r\n        constructor: function(paper) {\r\n            var me = this;\r\n\r\n            if ( ! paper.isPaper()) {\r\n                throw Graph.error('Collector tool only available for paper !');\r\n            }\r\n\r\n            me.paper = paper;\r\n            me.components.rubber = Graph.$('<div class=\"graph-rubberband\">');\r\n            me.collection = new Graph.collection.Vector();\r\n\r\n            paper.on('keynavdown', _.bind(me.onKeynavDown, me));\r\n            paper.on('keynavup', _.bind(me.onKeynavUp, me));\r\n\r\n            if (me.paper.props.rendered) {\r\n                me.setup();\r\n            } else {\r\n                me.paper.on('render', function(){\r\n                    me.setup();\r\n                });\r\n            }\r\n        },\r\n\r\n        enable: function(activator) {\r\n            this.props.enabled = true;\r\n            this.props.activator = activator;\r\n\r\n            this.paper.cursor('crosshair');\r\n            this.paper.state('collecting');\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.enabled = false;\r\n            this.paper.cursor('default');\r\n        },\r\n\r\n        setup: function() {\r\n            var me = this;\r\n\r\n            if (me.props.ready) {\r\n                return;\r\n            }\r\n\r\n            me.props.ready = true;\r\n\r\n            var collecting = me.collecting,\r\n                paper = me.paper,\r\n                layout = paper.layout(),\r\n                position = layout.position(),\r\n                rubber = me.components.rubber,\r\n                vendor = paper.interactable().vendor();\r\n\r\n            vendor.styleCursor(false);\r\n\r\n            vendor.draggable({\r\n\r\n                manualStart: true,\r\n\r\n                onstart: function(e) {\r\n                    _.assign(collecting, {\r\n                        enabled: true,\r\n                        start: {\r\n                            x: e.clientX,\r\n                            y: e.clientY,\r\n                        },\r\n                        end: {\r\n                            x: e.clientX,\r\n                            y: e.clientY,\r\n                        },\r\n                        bounds: {}\r\n                    });\r\n\r\n                    rubber.query.css({\r\n                        width: 0,\r\n                        height: 0,\r\n                        transform: 'translate(' + (collecting.start.x - position.left) + 'px, ' + (collecting.start.y - position.top) + 'px)'\r\n                    });\r\n                },\r\n\r\n                onmove: function(e) {\r\n                    var start = collecting.start,\r\n                        end = {\r\n                            x: e.clientX,\r\n                            y: e.clientY\r\n                        };\r\n\r\n                    var bounds;\r\n\r\n                    if ((start.x <= end.x && start.y < end.y) || (start.x < end.x && start.y <= end.y)) {\r\n                        bounds = {\r\n                            x: start.x,\r\n                            y: start.y,\r\n                            width:  end.x - start.x,\r\n                            height: end.y - start.y\r\n                        };\r\n                    } else if ((start.x >= end.x && start.y < end.y) || (start.x > end.x && start.y <= end.y)) {\r\n                        bounds = {\r\n                            x: end.x,\r\n                            y: start.y,\r\n                            width:  start.x - end.x,\r\n                            height: end.y - start.y\r\n                        };\r\n                    } else if ((start.x <= end.x && start.y > end.y) || (start.x < end.x && start.y >= end.y)) {\r\n                        bounds = {\r\n                            x: start.x,\r\n                            y: end.y,\r\n                            width:  end.x - start.x,\r\n                            height: start.y - end.y\r\n                        };\r\n                    } else if ((start.x >= end.x && start.y > end.y) || (start.x > end.x && start.y >= end.y)) {\r\n                        bounds = {\r\n                            x: end.x,\r\n                            y: end.y,\r\n                            width:  start.x - end.x,\r\n                            height: start.y - end.y\r\n                        };\r\n                    } else {\r\n                        bounds = {\r\n                            x: end.x,\r\n                            y: end.y,\r\n                            width:  0,\r\n                            height: 0\r\n                        };\r\n                    }\r\n\r\n                    collecting.bounds = bounds;\r\n\r\n                    rubber.query.css({\r\n                        width:  bounds.width,\r\n                        height: bounds.height,\r\n                        transform: 'translate(' + (bounds.x - position.left) + 'px,' + (bounds.y - position.top) + 'px)'\r\n                    });\r\n                },\r\n\r\n                onend: function() {\r\n                    \r\n                    if ( ! collecting.enabled) return;\r\n                    collecting.enabled = false;\r\n\r\n                    var context = paper.guid(),\r\n                        vectors = Graph.registry.vector.collect(context),\r\n                        bounds = collecting.bounds,\r\n                        scale = layout.scale();\r\n\r\n                    var start = layout.pointerLocation({\r\n                        clientX: bounds.x,\r\n                        clientY: bounds.y\r\n                    });\r\n\r\n                    var end = layout.pointerLocation({\r\n                        clientX: bounds.x + bounds.width,\r\n                        clientY: bounds.y + bounds.height\r\n                    });\r\n\r\n                    var bbox = new Graph.lang.BBox({\r\n                        x: start.x,\r\n                        y: start.y,\r\n                        x2: end.x,\r\n                        y2: end.y,\r\n                        width: end.x - start.x,\r\n                        height: end.y - start.y\r\n                    });\r\n\r\n                    bbox.transform(paper.viewport().matrix());\r\n\r\n                    _.forEach(vectors, function(v){\r\n                        if (v.guid() != context && v.isSelectable() && ! v.isGroup()) {\r\n                            if (bbox.contains(v)) {\r\n                                me.collect(v, true);\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    if (me.props.activator == 'tool') {\r\n                        paper.tool().activate('panzoom');\r\n                    }\r\n\r\n                    bbox = null;\r\n                    me.suspend();\r\n                }\r\n            })\r\n            .on('down', function(e){\r\n                var single = ! (e.ctrlKey || e.shiftKey),\r\n                    vector = Graph.registry.vector.get(e.target);\r\n\r\n                if (vector) {\r\n                    if ( ! vector.isSelectable()) {\r\n                        if ( \r\n                            ! vector.elem.belong('graph-resizer') && \r\n                            ! vector.elem.belong('graph-link') && \r\n                            ! vector.elem.belong('graph-rotator')\r\n                        ) {\r\n                            if (single) {\r\n                                me.clearCollection();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            .on('tap', function(e){\r\n                var vector = Graph.registry.vector.get(e.target),\r\n                    single = ! (e.ctrlKey || e.shiftKey);\r\n\r\n                if (vector && vector.isSelectable()) {\r\n                    if (vector.paper().state() == 'linking') {\r\n                        me.clearCollection();\r\n                        return;\r\n                    }\r\n\r\n                    if (single) {\r\n                        me.clearCollection();\r\n                    }\r\n\r\n                    me.collect(vector);\r\n                }\r\n\r\n            }, true)\r\n            .on('move', function(e){\r\n                var i = e.interaction;\r\n\r\n                if (me.props.enabled) {\r\n                    if (i.pointerIsDown && ! i.interacting()) {\r\n                        var action = {name: 'drag'};\r\n\r\n                        // -- workaround for a bug in v1.2.6 of interact.js\r\n                        i.prepared.name = action.name;\r\n                        i.setEventXY(i.startCoords, i.pointers);\r\n\r\n                        if (e.currentTarget === paper.node()) {\r\n                            if (me.props.suspended) {\r\n                                me.resume();\r\n                            }\r\n                            i.start(action, e.interactable, rubber.node());\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        render: function() {\r\n            var me = this;\r\n\r\n            if (me.props.rendered) {\r\n                return;\r\n            }\r\n\r\n            me.paper.container().append(me.components.rubber);\r\n            me.props.rendered = true;\r\n        },\r\n\r\n        size: function() {\r\n            return this.collection.size();\r\n        },\r\n\r\n        index: function(vector) {\r\n            return this.collection.index(vector);\r\n        },\r\n\r\n        add: function(vector) {\r\n            var offset = this.index(vector);\r\n            vector._collector = this;\r\n            if (offset === -1) {\r\n                this.collection.push(vector);\r\n            }\r\n        },\r\n\r\n        remove: function(vector) {\r\n            delete vector._collector;\r\n            this.collection.pull(vector);\r\n        },\r\n\r\n        collect: function(vector) {\r\n            vector.select();\r\n            Graph.cached.paper = this.paper.guid();\r\n        },\r\n\r\n        decollect: function(vector) {\r\n            vector.deselect();\r\n        },\r\n\r\n        clearCollection: function() {\r\n            var me = this,\r\n                collection = me.collection.toArray().slice();\r\n\r\n            _.forEach(collection, function(vector){\r\n                me.decollect(vector);\r\n            });\r\n\r\n            collection = null;\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.components.rubber.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            if (this.props.suspended) {\r\n                this.props.suspended = false;\r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else {\r\n                    this.paper.container().append(this.components.rubber);\r\n                }\r\n            }\r\n        },\r\n\r\n        syncBeforeDrag: function(master, e) {\r\n            var me = this;\r\n\r\n            me.collection.each(function(v){\r\n                if (v.plugins.dragger && v.plugins.dragger.props.enabled && v !== master) {\r\n                    (function(){\r\n                        // var mat = v.graph.matrix.data(),\r\n                        //     sin = mat.sin,\r\n                        //     cos = mat.cos;\r\n\r\n                        var rotate = v.matrixCurrent().rotate(),\r\n                            rad = rotate.rad,\r\n                            sin = Math.sin(rad),\r\n                            cos = Math.cos(rad);\r\n\r\n                        if (v.plugins.resizer && ! v.plugins.resizer.props.suspended) {\r\n                            v.plugins.resizer.suspend();\r\n                        }\r\n\r\n                        if (v.plugins.rotator && ! v.plugins.rotator.props.suspended) {\r\n                            v.plugins.rotator.suspend();\r\n                        }\r\n\r\n                        if (v.plugins.dragger.props.ghost) {\r\n                            v.plugins.dragger.resume();\r\n                        }\r\n\r\n                        v.syncdrag = {\r\n                            sin: sin,\r\n                            cos: cos,\r\n                            tdx: 0,\r\n                            tdy: 0\r\n                        };\r\n\r\n                        v.addClass('dragging');\r\n\r\n                        v.fire('beforedrag', {\r\n                            dx: e.dx *  cos + e.dy * sin,\r\n                            dy: e.dx * -sin + e.dy * cos,\r\n                            master: false\r\n                        });\r\n\r\n                    }());\r\n                }\r\n            });\r\n\r\n            me.fire('beforedrag');\r\n        },\r\n\r\n        syncDrag: function(master, e) {\r\n            var me = this;\r\n\r\n            me.collection.each(function(v){\r\n                if (v.plugins.dragger && v.plugins.dragger.props.enabled && v !== master) {\r\n                    (function(v, e){\r\n                        var dx = e.tx *  v.syncdrag.cos + e.ty * v.syncdrag.sin,\r\n                            dy = e.tx * -v.syncdrag.sin + e.ty * v.syncdrag.cos;\r\n\r\n                        if (v.plugins.dragger.props.ghost) {\r\n                            v.plugins.dragger.helper().translate(dx, dy).commit();\r\n                        } else {\r\n                            v.translate(dx, dy).commit();\r\n                        }\r\n\r\n                        v.syncdrag.tdx += dx;\r\n                        v.syncdrag.tdy += dy;\r\n\r\n                        v.fire('drag', {\r\n                            dx: dx,\r\n                            dy: dy,\r\n                            master: false\r\n                        });\r\n\r\n                    }(v, e));\r\n                }\r\n            });\r\n\r\n        },\r\n\r\n        syncAfterDrag: function(master, e) {\r\n            var me = this;\r\n\r\n            me.collection.each(function(v){\r\n                if (v.plugins.dragger && v.plugins.dragger.props.enabled && v !== master) {\r\n                    (function(v, e){\r\n                        var batchSync = v.plugins.dragger.props.batchSync,\r\n                            ghost = v.plugins.dragger.props.ghost;\r\n\r\n                        if (ghost) {\r\n                            if (batchSync) {\r\n                                v.translate(v.syncdrag.tdx, v.syncdrag.tdy).commit();\r\n                            }\r\n                            v.plugins.dragger.suspend();\r\n                        }\r\n\r\n                        if ( ! batchSync) {\r\n                            v.dirty(true);\r\n                        }\r\n\r\n                        v.fire('afterdrag', {\r\n                            dx: v.syncdrag.tdx,\r\n                            dy: v.syncdrag.tdy,\r\n                            batch: true,\r\n                            master: false\r\n                        });\r\n\r\n                        v.removeClass('dragging');\r\n\r\n                        delete v.syncdrag;\r\n\r\n                    }(v, e));\r\n                }\r\n            });\r\n\r\n            e.type = 'afterdrag';\r\n            me.fire(e);\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Collector';\r\n        },\r\n\r\n        onKeynavDown: function(e) {\r\n            if (e.keyCode == Graph.event.SHIFT && this.props.activator != 'key') {\r\n                var tool = this.paper.tool(),\r\n                    curr = tool.current();\r\n\r\n                if (curr != 'collector') {\r\n                    tool.activate('collector', 'key');\r\n                }\r\n            }\r\n        },\r\n\r\n        onKeynavUp: function(e) {\r\n            if (e.keyCode == Graph.event.SHIFT) {\r\n                var tool = this.paper.tool(),\r\n                    curr = tool.current();\r\n\r\n                if (curr == 'collector') {\r\n                    this.props.activator = 'tool';\r\n                    tool.activate('panzoom');\r\n                }\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.plugin.Dragger = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            ready: false,\r\n            manual: false,\r\n\r\n            ghost: true,\r\n            vector: null,\r\n            enabled: true,\r\n            rendered: false,\r\n            suspended: true,\r\n            inertia: false,\r\n            bound: false,\r\n            grid: null,\r\n            axis: false,\r\n            cursor: 'move',\r\n\r\n            cls: '',\r\n\r\n            // batching operation\r\n            batchSync: true,\r\n            restriction: false\r\n        },\r\n\r\n        rotation: {\r\n            deg: 0,\r\n            rad: 0,\r\n            sin: 0,\r\n            cos: 1\r\n        },\r\n\r\n        scaling: {\r\n            x: 1,\r\n            y: 1\r\n        },\r\n\r\n        dragging: {\r\n            enabled: false,\r\n            vector: null,\r\n            paper: null,\r\n            helper: null,\r\n            dx: 0,\r\n            dy: 0,\r\n            coord: null\r\n        },\r\n\r\n        components: {\r\n            holder: null,\r\n            helper: null\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var me = this;\r\n\r\n            vector.addClass('graph-draggable');\r\n            me.props.vector = vector.guid();\r\n\r\n            options = _.extend({\r\n                inertia: false\r\n            }, options || {});\r\n\r\n            _.forEach(['axis', 'grid', 'bbox', 'ghost'], function(name){\r\n                if (options[name] !== undefined) {\r\n                    me.props[name] = options[name];\r\n                }\r\n            });\r\n\r\n            _.assign(me.props, options);\r\n\r\n            me.cached.snapping = null;\r\n            me.cached.origin = null;\r\n\r\n            me.initComponent();\r\n            \r\n            vector.on('render.dragger', _.bind(me.onVectorRender, me));\r\n\r\n            if (vector.props.rendered) {\r\n                me.setup();\r\n            }\r\n        },\r\n\r\n        holder: function() {\r\n            return Graph.registry.vector.get(this.components.holder);\r\n        },\r\n\r\n        helper: function() {\r\n            return Graph.registry.vector.get(this.components.helper);\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = me.components;\r\n            var holder, helper;\r\n\r\n            if (me.props.ghost) {\r\n                holder = (new Graph.svg.Group())\r\n                    .addClass('graph-dragger')\r\n                    .removeClass('graph-elem graph-elem-group')\r\n                    .traversable(false)\r\n                    .selectable(false);\r\n\r\n                helper = (new Graph.svg.Rect(0, 0, 0, 0, 0))\r\n                    .addClass('graph-dragger-helper' + ((this.props.cls ? ' ' : '') + this.props.cls ))\r\n                    .removeClass('graph-elem graph-elem-rect')\r\n                    .traversable(false)\r\n                    .selectable(false)\r\n                    .clickable(false)\r\n                    .render(holder);\r\n\r\n                helper.elem.data(Graph.string.ID_VECTOR, this.vector().guid());\r\n\r\n                comp.holder = holder.guid();\r\n                comp.helper = helper.guid();\r\n\r\n                holder = null;\r\n                helper = null;\r\n            } else {\r\n                this.props.cls && (this.vector().addClass(this.props.cls));\r\n            }\r\n        },\r\n\r\n        setup: function() {\r\n            var me, vector, vendor, paper, options;\r\n\r\n            if (this.props.ready) {\r\n                return;\r\n            }\r\n\r\n            me = this;\r\n            vector = me.vector();\r\n            paper = vector.paper();\r\n            options = {};\r\n\r\n            _.extend(options, {\r\n                manualStart: true,\r\n                onstart: _.bind(me.onDragStart, me),\r\n                onmove: _.bind(me.onDragMove, me),\r\n                onend: _.bind(me.onDragEnd, me)\r\n            });\r\n\r\n            vendor = vector.interactable().vendor();\r\n            vendor.draggable(options);\r\n            vendor.styleCursor(false);\r\n\r\n            me.cached.origin = vendor.origin();\r\n            me.cached.snapping = [];\r\n\r\n            vendor.on('down', _.bind(me.onPointerDown, me));\r\n\r\n            if (me.props.grid) {\r\n                me.snap({\r\n                    mode: 'grid',\r\n                    x: me.props.grid[0],\r\n                    y: me.props.grid[1]\r\n                });\r\n            }\r\n\r\n            me.props.ready = true;\r\n        },\r\n\r\n        enable: function() {\r\n            this.props.enabled = true;\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.enabled = false;\r\n        },\r\n\r\n        ghost: function(ghost) {\r\n            if (ghost === undefined) {\r\n                return this.props.ghost;\r\n            }\r\n            \r\n            this.props.ghost = ghost;\r\n            return this;\r\n        },\r\n\r\n        render: function() {\r\n            if (this.props.ghost) {\r\n                if ( ! this.props.rendered) {\r\n                    this.props.rendered = true;\r\n                    this.holder().render(this.vector().parent());\r\n                    this.redraw();\r\n                }\r\n            }\r\n        },\r\n\r\n        suspend: function() {\r\n            if (this.props.ghost) {\r\n                this.props.suspended = true;\r\n                this.holder().elem.detach();    \r\n            }\r\n        },\r\n\r\n        resume: function() {\r\n            if (this.props.ghost) {\r\n                this.props.suspended = false;\r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else {\r\n                    this.vector().parent().elem.append(this.holder().elem);\r\n                    this.redraw();\r\n                }    \r\n            }\r\n        },\r\n\r\n        redraw: function() {\r\n            if (this.props.ghost) {\r\n                var vector = this.vector(),\r\n                    helper = this.helper(),\r\n                    matrix = vector.matrix(),\r\n                    rotate = matrix.rotate().deg,\r\n                    bound = vector.bbox().toJson();\r\n\r\n                var cx, cy;\r\n\r\n                if (rotate) {\r\n                    var rmatrix = Graph.matrix(),\r\n                        rpath = vector.shapeRelative();\r\n\r\n                    cx = bound.x + bound.width / 2,\r\n                    cy = bound.y + bound.height /2;\r\n\r\n                    rmatrix.rotate(-rotate, cx, cy);\r\n\r\n                    rpath = rpath.transform(rmatrix);\r\n                    bound = rpath.bbox().toJson();\r\n                }\r\n\r\n                helper.reset();\r\n\r\n                helper.attr({\r\n                    x: bound.x,\r\n                    y: bound.y,\r\n                    width: bound.width,\r\n                    height: bound.height\r\n                });\r\n\r\n                if (rotate) {\r\n                    helper.rotate(rotate, cx, cy).commit();\r\n                }\r\n            }\r\n        },\r\n\r\n        origin: function(origin) {\r\n            if (origin === undefined) {\r\n                return this.cached.origin;\r\n            }\r\n\r\n            this.cached.origin = origin;\r\n\r\n            var vendor = this.vector().interactable().vendor();\r\n\r\n            if (vendor) {\r\n                vendor.origin(origin);\r\n            }\r\n        },\r\n\r\n        snap: function(snap, end) {\r\n\r\n            if (snap === undefined) {\r\n                return this.cached.snapping;\r\n            }\r\n\r\n            if (end === undefined) {\r\n                end = false;\r\n            }\r\n\r\n            var me = this, snaps = [];\r\n\r\n            // save original request\r\n            this.cached.snapping = snap;\r\n\r\n            if (_.isArray(snap)) {\r\n                _.forEach(snap, function(s){\r\n                    snaps.push(fixsnap(s));\r\n                });\r\n            } else {\r\n                snaps.push(fixsnap(snap));\r\n            }\r\n\r\n            var vendor = this.vector().interactable().vendor();\r\n\r\n            if (vendor) {\r\n                vendor.setOptions('snap', {\r\n                    targets: snaps,\r\n                    endOnly: end\r\n                });\r\n            }\r\n\r\n            /////////\r\n\r\n            function fixsnap(snap) {\r\n\r\n                if (_.isFunction(snap)) {\r\n                    return snap;\r\n                }\r\n\r\n                snap.mode = _.defaultTo(snap.mode, 'anchor');\r\n\r\n                if (snap.mode == 'grid') {\r\n                    if (me.props.axis == 'x') {\r\n                        snap.y = 0;\r\n                    } else if (me.props.axis == 'y') {\r\n                        snap.x = 0;\r\n                    }\r\n                    snap = interact.createSnapGrid({x: snap.x, y: snap.y});\r\n                } else {\r\n                    snap.range = _.defaultTo(snap.range, 20);\r\n                }\r\n                return snap;\r\n            }\r\n        },\r\n\r\n        resetSnap: function() {\r\n            this.snaps = [];\r\n\r\n            this.snap({\r\n                mode: 'grid',\r\n                x: this.props.grid[0],\r\n                y: this.props.grid[1]\r\n            });\r\n        },\r\n\r\n        restrict: function(options) {\r\n            this.props.restriction = options;\r\n        },\r\n\r\n        start: function() {\r\n            var me = this, \r\n                vector = me.vector(),\r\n                vendor = vector.interactable().vendor();\r\n\r\n            if (me.props.manual) {\r\n                return;\r\n            }\r\n\r\n            if (me.dragging.enabled) {\r\n                return;\r\n            }\r\n\r\n            me.dragging.enabled = true;\r\n            me.dragging.moveHandler = _.bind(me.onPointerMove, me, _, vector);\r\n            \r\n            vendor.on('move', me.dragging.moveHandler);\r\n        },\r\n\r\n        onVectorRender: function() {\r\n            this.setup();\r\n        },\r\n\r\n        onPointerDown: function draggerDown(e) {\r\n            e.preventDefault();\r\n            this.start();\r\n        },\r\n\r\n        onPointerMove: function draggerMove(e, vector) {\r\n            var i = e.interaction;\r\n\r\n            if (this.props.enabled) {\r\n                if (i.pointerIsDown && ! i.interacting()) {\r\n                    var paper = vector.paper(),\r\n                        node = vector.node(),\r\n                        action = { name: 'drag' };\r\n\r\n                    // -- workaround for a bug in v1.2.6 of interact.js\r\n                    i.prepared.name = action.name;\r\n                    i.setEventXY(i.startCoords, i.pointers);\r\n\r\n                    if (e.currentTarget === node) {\r\n                        if (paper) {\r\n                            var state = paper.state();\r\n\r\n                            if (state == 'collecting') {\r\n                                if (vector.elem.belong('graph-resizer')) {\r\n                                    paper.tool().activate('panzoom');\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            } else if (state == 'linking') {\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        if (this.props.ghost) {\r\n                            if (this.props.suspended) {\r\n                                this.resume();\r\n                            }\r\n                            i.start(action, e.interactable, this.helper().node());\r\n                        } else {\r\n                            i.start(action, e.interactable, node);\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n            e.preventDefault();\r\n\r\n        },\r\n\r\n        onDragStart: function(e) {\r\n            var vector = this.vector(),\r\n                paper = vector.paper(),\r\n                layout = paper.layout(),\r\n                helper = this.helper();\r\n\r\n            vector.addClass('dragging');\r\n\r\n            paper.cursor(this.props.cursor);\r\n\r\n            this.dragging.vector = vector;\r\n            this.dragging.paper = paper;\r\n            this.dragging.helper = helper;\r\n\r\n            this.dragging.dx = 0;\r\n            this.dragging.dy = 0;\r\n            this.dragging.tx = 0;\r\n            this.dragging.ty = 0;\r\n\r\n            var matrix = vector.matrixCurrent(),\r\n                rotate = matrix.rotate(),\r\n                scale  = matrix.scale();\r\n\r\n            this.dragging.deg = rotate.deg;\r\n            this.dragging.rad = rotate.rad;\r\n            this.dragging.sin = Math.sin(rotate.rad);\r\n            this.dragging.cos = Math.cos(rotate.rad);\r\n            this.dragging.sx = scale.x;\r\n            this.dragging.sy = scale.y;\r\n\r\n            var edata = {\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n                dx: 0,\r\n                dy: 0,\r\n                ghost: this.props.ghost\r\n            };\r\n\r\n            this.fire('beforedrag', edata);\r\n\r\n            var coord = layout.pointerLocation(e);\r\n            this.dragging.coord = coord;\r\n        },\r\n\r\n        onDragMove: function(e) {\r\n\r\n            var dragging = this.dragging,\r\n                paper = dragging.paper,\r\n                vector = dragging.vector,\r\n                helper = dragging.helper,\r\n                ghost = this.props.ghost,\r\n                axs = this.props.axis,\r\n                deg = dragging.deg,\r\n                sin = dragging.sin,\r\n                cos = dragging.cos,\r\n                scaleX = dragging.sx,\r\n                scaleY = dragging.sy;\r\n\r\n            var tx = _.defaultTo(e.dx, 0),\r\n                ty = _.defaultTo(e.dy, 0);\r\n\r\n            var dx, dy, mx, my;\r\n\r\n            dx = dy = mx = my = 0;\r\n\r\n            tx /= scaleX;\r\n            ty /= scaleY;\r\n            \r\n            if (axs == 'x') {\r\n                dx = tx;\r\n                dy = 0;\r\n\r\n                mx = tx *  cos + 0 * sin;\r\n                my = tx * -sin + 0 * cos;\r\n            } else if (axs == 'y') {\r\n                dx = 0;\r\n                dy = ty;\r\n\r\n                mx = 0 *  cos + ty * sin;\r\n                my = 0 * -sin + ty * cos;\r\n            } else {\r\n                dx = mx = tx *  cos + ty * sin;\r\n                dy = my = tx * -sin + ty * cos;\r\n            }\r\n\r\n            // check restriction\r\n            var restriction = this.props.restriction;\r\n\r\n            if (restriction) {\r\n                var coord = this.dragging.coord;\r\n\r\n                coord.x += dx;\r\n                coord.y += dy;\r\n\r\n                if (coord.x < restriction.left || coord.x > restriction.right) {\r\n                    dx = mx = tx = 0;\r\n                }\r\n                \r\n                if (coord.y < restriction.top || coord.y > restriction.bottom) {\r\n                    dy = my = ty = 0;\r\n                }\r\n            }\r\n\r\n            this.dragging.dx += mx;\r\n            this.dragging.dy += my;\r\n            this.dragging.tx += tx;\r\n            this.dragging.ty += ty;\r\n\r\n            var pageX = _.defaultTo(e.pageX, e.x0),\r\n                pageX = _.defaultTo(e.pageY, e.y0);\r\n\r\n            pageX /= scaleX;\r\n            pageX /= scaleY;\r\n\r\n            var event = {\r\n                pageX: pageX,\r\n                pageY: pageX,\r\n\r\n                tx: tx,\r\n                ty: ty,\r\n\r\n                dx: dx,\r\n                dy: dy,\r\n\r\n                ghost: this.props.ghost\r\n            };\r\n\r\n            this.fire('drag', event);\r\n\r\n            if (ghost) {\r\n                helper.translate(event.dx, event.dy).commit();\r\n            } else {\r\n                vector.translate(event.dx, event.dy).commit();\r\n            }\r\n        },\r\n\r\n        onDragEnd: function(e) {\r\n            var dragging = this.dragging,\r\n                paper = dragging.paper,\r\n                vector = dragging.vector,\r\n                helper = dragging.helper,\r\n                ghost = this.props.ghost,\r\n                dx = dragging.dx,\r\n                dy = dragging.dy,\r\n                tx = dragging.tx,\r\n                ty = dragging.ty;\r\n\r\n            if (ghost) {\r\n                vector.translate(dx, dy).commit();\r\n\r\n                this.redraw();\r\n                this.suspend();\r\n            }\r\n\r\n            vector.removeClass('dragging');\r\n            paper.cursor('default');\r\n\r\n            var edata = {\r\n                dx: dx,\r\n                dy: dy,\r\n                tx: tx,\r\n                ty: ty,\r\n                ghost: this.props.ghost\r\n            };\r\n\r\n            var vendor = vector.interactable().vendor();\r\n            vendor.off('move', this.dragging.moveHandler);\r\n            \r\n            this.dragging.moveHandler = null;\r\n            this.dragging.enabled = false;\r\n\r\n            this.fire('afterdrag', edata);\r\n\r\n            for (var key in this.dragging) {\r\n                this.dragging[key] = null;\r\n            }\r\n\r\n        },\r\n\r\n        destroy: function() {\r\n            var me = this;\r\n\r\n            if (me.components.helper) {\r\n                me.helper().remove();\r\n            }\r\n\r\n            me.components.helper = null;\r\n\r\n            if (me.components.holder) {\r\n                me.holder().remove();\r\n            }\r\n\r\n            me.components.holder = null;\r\n            me.listeners = {};\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Dragger';\r\n        }\r\n    });\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.plugin.Dropper = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            overlap: 'center',\r\n            accept: '.graph-draggable'\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var me = this;\r\n\r\n            _.assign(me.props, options || {});\r\n            vector.addClass('graph-dropzone').removeClass('graph-draggable');\r\n\r\n            me.props.vector = vector.guid();    \r\n            \r\n            vector.on({\r\n                render: _.bind(me.onVectorRender, me)\r\n            });\r\n\r\n            if (vector.props.rendered) {\r\n                me.setup();\r\n            }\r\n        },\r\n\r\n        setup: function() {\r\n            var me = this;\r\n\r\n            if (me.plugin) {\r\n                return;\r\n            }\r\n\r\n            var config = _.extend({}, me.props, {\r\n                checker: _.bind(me.onDropValidate, me),\r\n\r\n                ondropactivate: _.bind(me.onDropActivate, me),\r\n                ondropdeactivate: _.bind(me.onDropDeactivate, me),\r\n                ondragenter: _.bind(me.onDragEnter, me),\r\n                ondragleave: _.bind(me.onDragLeave, me),\r\n                ondrop: _.bind(me.onDrop, me)\r\n            });\r\n\r\n            me.plugin = me.vector.interactable().dropzone(config);\r\n        },\r\n\r\n        onDropValidate: function( edrop, edrag, dropped, dropzone, dropel, draggable, dragel ) {\r\n            return dropped;\r\n            /*if (dropped) {\r\n                if (this.config.validate) {\r\n                    var args = _.toArray(arguments);\r\n                    dropped = this.config.validate.apply(this, args);\r\n                }    \r\n            }\r\n            \r\n            return dropped;*/\r\n        },\r\n\r\n        onVectorRender: function() {\r\n            this.setup();\r\n        },\r\n\r\n        onDropActivate: function(e) {\r\n            this.vector().addClass('drop-activate');\r\n        },\r\n\r\n        onDropDeactivate: function(e) {\r\n            this.vector().removeClass('drop-activate');\r\n        },\r\n\r\n        onDragEnter: function(e) {\r\n            this.vector().removeClass('drop-activate').addClass('drop-enter');\r\n            e.type = 'dropenter';\r\n            this.fire(e);\r\n        },\r\n\r\n        onDragLeave: function(e) {\r\n            this.vector().removeClass('drop-enter').addClass('drop-activate');\r\n            e.type = 'dropleave';\r\n            this.fire(e);\r\n        },\r\n\r\n        onDrop: function(e) {\r\n            this.vector().removeClass('drop-activate drop-enter');\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    var CLS_CONNECT_VALID = 'connect-valid',\r\n        CLS_CONNECT_INVALID = 'connect-invalid',\r\n        CLS_CONNECT_RESET = 'connect-valid connect-invalid',\r\n        CLS_CONNECT_CLEAR = 'connect-valid connect-invalid connect-hover',\r\n        CLS_CONNECT_HOVER = 'connect-hover',\r\n\r\n        CONNECT_OUTGOING = 'outgoing',\r\n        CONNECT_INCOMING = 'incoming';\r\n\r\n    Graph.plugin.Network = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n            wiring: 'h:h',\r\n            tuning: true,\r\n            limitIncoming: 0,\r\n            limitOutgoing: 0\r\n        },\r\n\r\n        linking: {\r\n            valid: false,\r\n            router: null,\r\n            source: null,\r\n            target: null,\r\n            link: null,\r\n            pole: null\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var me = this, guid = vector.guid();\r\n\r\n            options = options || {};\r\n\r\n            _.assign(me.props, options);\r\n\r\n            me.props.vector = guid;\r\n\r\n            me.cached.cables = {};\r\n            me.cached.pairs = {};\r\n\r\n            vector.addClass('graph-connectable');\r\n\r\n            // setup link droppable\r\n\r\n            var vendor = vector.interactable().vendor();\r\n\r\n            vendor.dropzone({\r\n                accept: _.format('.{0}, .{1}', Graph.styles.LINK_HEAD, Graph.styles.LINK_TAIL),\r\n                overlap: .2\r\n            })\r\n            .on('dropdeactivate', function(e){\r\n                var v = Graph.registry.vector.get(e.target);\r\n                if (v) {\r\n                    v.removeClass(CLS_CONNECT_CLEAR);\r\n                }\r\n                me.invalidateTrans();\r\n            })\r\n            .on('dropactivate', function(e){\r\n                var v = Graph.registry.vector.get(e.target);\r\n\r\n                if (v) {\r\n                    v.addClass(CLS_CONNECT_HOVER);\r\n                }\r\n\r\n                me.invalidateTrans();\r\n            })\r\n            .on('dragenter', function(e){\r\n                var link = Graph.registry.link.get(e.relatedTarget);\r\n\r\n                if (link) {\r\n                    var pole = Graph.$(e.relatedTarget).data('pole');\r\n                    var valid, source, target;\r\n\r\n                    if (pole == 'head') {\r\n                        source = link.router.source();\r\n                        target = vector;\r\n                    } else {\r\n                        source = vector;\r\n                        target = link.router.target();\r\n                    }\r\n\r\n                    valid  = source.connectable().canConnect(target.connectable(), link);\r\n\r\n                    if (valid) {\r\n                        vector.removeClass(CLS_CONNECT_INVALID);\r\n                        vector.addClass(CLS_CONNECT_VALID);\r\n                    } else {\r\n                        vector.removeClass(CLS_CONNECT_VALID);\r\n                        vector.addClass(CLS_CONNECT_INVALID);\r\n                    }\r\n\r\n                    _.assign(me.linking, {\r\n                        valid: valid,\r\n                        router: link.router,\r\n                        source: source,\r\n                        target: target,\r\n                        pole: pole\r\n                    });\r\n\r\n                    link.router.updateTrans('CONNECT', {\r\n                        valid: valid,\r\n                        source: source,\r\n                        target: target\r\n                    });\r\n                }\r\n            })\r\n            .on('dragleave', function(e){\r\n                var v = Graph.registry.vector.get(e.target);\r\n                if (v) {\r\n                    v.removeClass(CLS_CONNECT_RESET);\r\n                }\r\n\r\n                me.linking.valid = false;\r\n\r\n                if (me.linking.pole == 'head') {\r\n                    me.linking.router.updateTrans('CONNECT', {\r\n                        valid: false,\r\n                        target: null\r\n                    });\r\n                } else {\r\n                    me.linking.router.updateTrans('CONNECT', {\r\n                        valid: false,\r\n                        source: null\r\n                    });\r\n                }\r\n\r\n            })\r\n            .on('drop', function(e){\r\n                var link = Graph.registry.link.get(e.relatedTarget);\r\n\r\n                if (me.linking.valid) {\r\n                    if (me.linking.pole == 'head') {\r\n\r\n                        var oldTarget = me.linking.router.target();\r\n                        \r\n                        if (oldTarget && oldTarget.guid() != vector.guid()) {\r\n                            oldTarget.connectable().removeLink(link);\r\n                        }\r\n\r\n                        me.linking.router.updateTrans('CONNECT', {\r\n                            target: vector\r\n                        });\r\n\r\n                    } else {\r\n\r\n                        var oldSource = me.linking.router.source();\r\n\r\n                        if (oldSource && oldSource.guid() != vector.guid()) {\r\n                            oldSource.connectable().removeLink(link);\r\n                        }\r\n\r\n                        me.linking.router.updateTrans('CONNECT', {\r\n                            source: vector\r\n                        });\r\n\r\n\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        invalidateTrans: function() {\r\n            for (var name in this.linking) {\r\n                this.linking[name] = null;\r\n            }\r\n        },\r\n\r\n        wiring: function() {\r\n            return this.props.wiring;\r\n        },\r\n\r\n        treshold: function() {\r\n            var wiring = this.props.wiring;\r\n\r\n            switch(wiring) {\r\n                case 'h:h':\r\n                case 'v:v':\r\n                    return 20;\r\n                case 'h:v':\r\n                case 'v:h':\r\n                    return -10;\r\n            }\r\n\r\n            return 0;\r\n        },\r\n\r\n        direction: function (network) {\r\n            if (this.props.tuning) {\r\n                var orient = this.orientation(network);\r\n\r\n                switch(orient) {\r\n                    case 'intersect':\r\n                        return null;\r\n                    case 'top':\r\n                    case 'bottom':\r\n                        return 'v:v';\r\n                    case 'left':\r\n                    case 'right':\r\n                        return 'h:h';\r\n                    default:\r\n                        return this.props.wiring;\r\n                }    \r\n            } else {\r\n                return this.props.wiring;\r\n            }\r\n        },\r\n\r\n        orientation: function(network) {\r\n            var sourceBox = this.vector().bboxOriginal().toJson(),\r\n                targetBox = network.vector().bboxOriginal().toJson(),\r\n                orientation = Graph.util.boxOrientation(sourceBox, targetBox, this.treshold());\r\n\r\n            sourceBox = targetBox = null;\r\n            return orientation;\r\n        },\r\n\r\n        isSource: function(link) {\r\n            return link.source().guid() == this.vector().guid();\r\n        },\r\n\r\n        isTarget: function(link) {\r\n            return link.target().guid() == this.vector().guid();\r\n        },\r\n\r\n        connect: function(target, start, end, options) {\r\n            if (this.canConnect(target)) {\r\n\r\n                if (start && ! end) {\r\n                    options = start;\r\n                    start = null;\r\n                    end = null;\r\n                } else {\r\n                    if (start instanceof Graph.lang.Point) {\r\n                        start = start.toJson();\r\n                    }\r\n\r\n                    if (end instanceof Graph.lang.Point) {\r\n                        end = end.toJson();\r\n                    }    \r\n                }\r\n\r\n                options = options || {};\r\n\r\n                var source = this,\r\n                    sourceVector = source.vector(),\r\n                    targetVector = target.vector(),\r\n                    paper = sourceVector.paper(),\r\n                    paperLayout = paper.layout(),\r\n                    router = paperLayout.createRouter(sourceVector, targetVector),\r\n                    link = paperLayout.createLink(router, options);\r\n\r\n                if (options.command !== undefined) {\r\n                    link.connectByCommand(options.command);\r\n                } else {\r\n                    link.connect(start, end);    \r\n                }\r\n\r\n                link.render(paper);\r\n\r\n                link.cached.beforeDestroyHandler = _.bind(this.onLinkBeforeDestroy, this);\r\n                link.on('beforedestroy', link.cached.beforeDestroyHandler);\r\n\r\n                source.addLink(link, CONNECT_OUTGOING, targetVector);\r\n                target.addLink(link, CONNECT_INCOMING, sourceVector);\r\n\r\n                sourceVector.fire('connect', {link: link});\r\n\r\n                return link;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        connectByLinker: function(target, start, end, options) {\r\n            var routerType = this.vector().paper().layout().routerType();\r\n\r\n            if (routerType == 'orthogonal') {\r\n                this.connect(target, null, null, options);\r\n            } else {\r\n                this.connect(target, start, end, options);\r\n            }\r\n        },\r\n\r\n        disconnect: function(target, link) {\r\n            var connections = this.connections(target),\r\n                connectionsLength = connections.length,\r\n                disconnected = 0,\r\n                linkIds = [];\r\n\r\n            if (link !== undefined) {\r\n                if ( ! _.isArray(link)) {\r\n                    linkIds = link ? [link.guid()] : [];\r\n                } else {\r\n                    linkIds = _.map(link, function(l){ return l && l.guid() });\r\n                }\r\n            }\r\n            \r\n            _.forEach(connections, function(conn){\r\n                if (linkIds.length) {\r\n                    if (_.indexOf(linkIds, conn.guid) > -1) {\r\n                        conn.link.disconnect();\r\n                        disconnected++;\r\n                        connectionsLength--;\r\n                    }\r\n                } else {\r\n                    conn.link.disconnect();\r\n                    connectionsLength--;\r\n                }\r\n            });\r\n\r\n            if (linkIds.length) {\r\n                return disconnected === linkIds.length;\r\n            } else {\r\n                return connectionsLength === 0;\r\n            }\r\n\r\n        },\r\n\r\n        addLink: function(link, type, pair) {\r\n            var guid = link.guid(),\r\n                cables = this.cached.cables,\r\n                pairs = this.cached.pairs;\r\n\r\n            pair  = pair.guid();\r\n            pairs = pairs || {};\r\n\r\n            pairs[pair] = pairs[pair] || [];\r\n\r\n            if (_.indexOf(pairs[pair], guid) === -1) {\r\n                pairs[pair].push(guid);\r\n            }\r\n\r\n            cables[guid] = {\r\n                type: type,\r\n                pair: pair\r\n            };\r\n        },\r\n\r\n        removeLink: function(link) {\r\n            var guid, pair;\r\n\r\n            if (_.isString(link)) {\r\n                guid = link;\r\n            } else {\r\n                guid = link.guid();\r\n            }\r\n\r\n            var conn = this.cached.cables[guid];\r\n\r\n            if (conn) {\r\n                if (this.cached.pairs[conn.pair]) {\r\n                    var index = _.indexOf(this.cached.pairs[conn.pair], guid);\r\n\r\n                    if (index > -1) {\r\n                        this.cached.pairs[conn.pair].splice(index, 1);\r\n                    }\r\n\r\n                    if ( ! this.cached.pairs[conn.pair].length) {\r\n                        delete this.cached.pairs[conn.pair];\r\n                    }\r\n                }\r\n            }\r\n\r\n            delete this.cached.cables[guid];\r\n            conn = null;\r\n        },\r\n\r\n        repairLinks: function() {\r\n            console.log('called');\r\n        },\r\n\r\n        hasConnection: function(network) {\r\n            var conn = this.connections(network);\r\n            return conn.length ? conn : false;\r\n        },\r\n\r\n        connections: function(network) {\r\n            var me = this,\r\n                registry = Graph.registry.link,\r\n                current = this.props.vector,\r\n                conns = [];\r\n\r\n            if (network !== undefined) {\r\n\r\n                var pair = network.vector().guid();\r\n\r\n                if (this.cached.pairs[pair]) {\r\n                    _.forEach(me.cached.pairs[pair], function(guid){\r\n                        var link = registry.get(guid),\r\n                            opts = me.cached.cables[guid];\r\n                        if (link && opts) {\r\n                            conns.push({\r\n                                guid: guid,\r\n                                link: link,\r\n                                type: opts.type,\r\n                                source: opts.type == 'outgoing' ? current : pair,\r\n                                target: opts.type == 'outgoing' ? pair : current\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                return conns;\r\n            }\r\n\r\n            var cables = me.cached.cables;\r\n\r\n            _.forOwn(cables, function(opts, guid){\r\n                var link = registry.get(guid);\r\n                if (link) {\r\n                    conns.push({\r\n                        guid: guid,\r\n                        link: link,\r\n                        type: opts.type,\r\n                        source: opts.type == 'outgoing' ? current : opts.pair,\r\n                        target: opts.type == 'outgoing' ? opts.pair : current\r\n                    });\r\n                }\r\n            });\r\n\r\n            return conns;\r\n        },\r\n\r\n        ///////// RULES /////////\r\n\r\n        /**\r\n         * Can connect to target\r\n         */\r\n        canConnect: function(target) {\r\n            if (target instanceof Graph.plugin.Network) {\r\n                var sourceVector = this.vector().guid(),\r\n                    targetVector = target.vector().guid();\r\n\r\n                var connections, outgoing, incoming;\r\n\r\n                // check limit outgoing\r\n                if (this.props.limitOutgoing > 0) {\r\n                    connections = this.connections();\r\n                    outgoing = _.filter(connections, function(conn){\r\n                        return conn.type == 'outgoing';\r\n                    });\r\n\r\n                    if (outgoing.length + 1 > this.props.limitOutgoing) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                if (target.props.limitIncoming > 0) {\r\n                    connections = target.connections();\r\n                    \r\n                    incoming = _.filter(connections, function(conn){\r\n                        return conn.type == 'incoming';\r\n                    });\r\n\r\n                    if (incoming.length + 1 > target.props.limitIncoming) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                if (sourceVector != targetVector) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        destroy: function() {\r\n            var me = this;\r\n\r\n            // collect garbage\r\n            this.cached.cables = null;\r\n            this.cached.pairs  = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Network';\r\n        },\r\n\r\n        onLinkBeforeDestroy: function(e) {\r\n            var link = e.link;\r\n            var vector, network;\r\n\r\n            if ((vector = link.router.source())) {\r\n                vector.connectable().removeLink(link);\r\n            }\r\n\r\n            if ((vector = link.router.target())) {\r\n                vector.connectable().removeLink(link);\r\n            }\r\n\r\n            link.off('beforedestroy', link.cached.beforeDestroyHandler);\r\n            link.cached.beforeDestroyHandler = null;\r\n        }\r\n\r\n    });\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.plugin.History = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            limit: 1,\r\n            index: 0\r\n        },\r\n\r\n        items: {},\r\n\r\n        constructor: function(vector) {\r\n            this.props.vector = vector.guid();\r\n        },\r\n\r\n        save: function(prop, data) {\r\n            var lim = this.props.limit, len;\r\n\r\n            if (len > lim) {\r\n                _.drop(this.items, len - lim);\r\n            }\r\n\r\n            this.items[prop] = this.items[prop] || [];\r\n\r\n            if ((len = this.items[prop].length) > lim - 1) {\r\n                this.items[prop].splice(0, len - lim);\r\n            }\r\n\r\n            this.items[prop].push(data);\r\n        },\r\n\r\n        last: function(prop) {\r\n\r\n        },\r\n\r\n        go: function() {\r\n\r\n        },\r\n\r\n        back: function() {\r\n\r\n        },\r\n\r\n        next: function() {\r\n\r\n        },\r\n\r\n        clear: function() {\r\n\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Panzoom = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            panEnabled: false,\r\n            zoomEnabled: true,\r\n            showToolbox: true,\r\n            vector: null\r\n        },\r\n\r\n        caching: {\r\n            offset: {x: 0, y: 0}\r\n        },\r\n\r\n        scrolling: {\r\n            steps: 10\r\n        },\r\n\r\n        zooming: {\r\n            scale: 1,\r\n            zoom: 1,\r\n            origin: null,\r\n            range: {min: 0.2, max: 4.0}\r\n        },\r\n\r\n        components: {\r\n            toolbox: null\r\n        },\r\n\r\n        panning: {\r\n            start: {x: 0, y: 0},\r\n            moveHandler: null,\r\n            stopHandler: null\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            var me = this, vendor, viewport, scale, bound;\r\n\r\n            // validate vector\r\n            if ( ! vector.isPaper()) {\r\n                throw Graph.error('Panzoom only available for paper !');\r\n            }\r\n\r\n            viewport = vector.viewport();\r\n            scale    = Math.round(viewport.matrix().scale().x, 1000);\r\n            vendor   = vector.interactable().vendor();\r\n\r\n            _.assign(me.props, {\r\n                vector: vector.guid()\r\n            });\r\n\r\n            _.assign(me.zooming, {\r\n                scale: scale,\r\n                zoom: scale\r\n            });\r\n\r\n            me.initComponent(vector);\r\n\r\n            // use native engine\r\n            vendor.on('wheel', _.bind(me.onMouseWheel, me, _, vector, viewport));\r\n            vendor.on('down', _.bind(me.onPointerDown, me, _, vector, viewport));\r\n\r\n            if (vector.props.rendered) {\r\n                me.revalidate(vector);\r\n\r\n                if (me.props.showToolbox) {\r\n                    me.components.toolbox.appendTo(vector.container());\r\n                }\r\n            } else {\r\n                vector.on('render', function(){\r\n                    me.revalidate(vector);\r\n\r\n                    if (me.props.showToolbox) {\r\n                        me.components.toolbox.appendTo(vector.container());\r\n                    }\r\n                });\r\n            }\r\n\r\n            vendor = null;\r\n            vector = null;\r\n        },\r\n\r\n        initComponent: function(vector) {\r\n            var me = this;\r\n            var container, toolbox;\r\n\r\n            if (me.props.showToolbox) {\r\n                container = vector.container();\r\n\r\n                toolbox = me.components.toolbox = Graph.$('<div class=\"graph-zoom-toolbox\">');\r\n                toolbox.html(\r\n                    '<div>' +\r\n                        '<a data-tool=\"zoom-reset\" href=\"javascript:void(0)\" title=\"' + Graph._('Reset zoom') + '\">' +\r\n                            '<i class=\"'+ Graph.icons.ZOOM_RESET +'\"></i>' +\r\n                        '</a>'+\r\n                        '<div class=\"splitter\"></div>'+\r\n                        '<a data-tool=\"zoom-in\" href=\"javascript:void(0)\" title=\"' + Graph._('Zoom in') + '\">' +\r\n                            '<i class=\"'+ Graph.icons.ZOOM_IN +'\"></i>' +\r\n                        '</a>'+\r\n                        '<div class=\"splitter\"></div>'+\r\n                        '<a data-tool=\"zoom-out\" href=\"javascript:void(0)\" title=\"' + Graph._('Zoom out') + '\">' +\r\n                            '<i class=\"'+ Graph.icons.ZOOM_OUT +'\"></i>' +\r\n                        '</a>'+\r\n                    '</div>'\r\n                );\r\n\r\n                toolbox.on('click', '[data-tool]', function(e){\r\n                    e.preventDefault();\r\n                    var tool = Graph.$(this).data('tool');\r\n                    switch(tool) {\r\n                        case 'zoom-reset':\r\n                            me.zoomReset();\r\n                            break;\r\n                        case 'zoom-in':\r\n                            me.zoomIn();\r\n                            break;\r\n                        case 'zoom-out':\r\n                            me.zoomOut();\r\n                            break;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        revalidate: function(vector) {\r\n            var bound = vector.node().getBoundingClientRect();\r\n\r\n            this.caching.offset = {\r\n                x: bound.left,\r\n                y: bound.top\r\n            };\r\n        },\r\n\r\n        enable: function() {\r\n            var vector = this.vector();\r\n\r\n            this.props.panEnabled = true;\r\n            this.props.zoomEnabled = true;\r\n\r\n            vector.cursor('default');\r\n            vector.state('panning');\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.panEnabled = false;\r\n        },\r\n\r\n        zoomReset: function() {\r\n            var viewport = this.vector().viewport();\r\n            var matrix;\r\n\r\n            this.zooming.zoom = 1;\r\n            this.zooming.scale = 1;\r\n\r\n            viewport.reset();\r\n\r\n            matrix = Graph.matrix();\r\n            // matrix.translate(.5, .5);\r\n\r\n            viewport.attr('transform', matrix.toValue());\r\n            viewport.graph.matrix = matrix;\r\n        },\r\n\r\n        zoomIn: function() {\r\n            var paper = this.vector().paper(),\r\n                viewport = paper.viewport(),\r\n                origin = paper.layout().center(),\r\n                direction = 0.1875;\r\n\r\n            this.zoom(paper, viewport, direction, origin);\r\n        },\r\n\r\n        zoomOut: function() {\r\n            var paper = this.vector().paper(),\r\n                viewport = paper.viewport(),\r\n                origin = paper.layout().center(),\r\n                direction = -0.1875;\r\n\r\n            this.zoom(paper, viewport, direction, origin);\r\n        },\r\n\r\n        zoom: function(paper, viewport, direction, origin) {\r\n            var range = this.zooming.range,\r\n                currentZoom = this.zooming.zoom,\r\n                zoomType = direction > 0 ? 'in' : 'out',\r\n                factor = Math.pow(1 + Math.abs(direction), zoomType == 'in' ? 1 : -1),\r\n                zoom = (zoomRange(range, currentZoom * factor)),\r\n                matrix = viewport.matrix(),\r\n                currentScale = matrix.props.a,\r\n                scale = 1 / currentScale * zoom,\r\n                matrixScale = matrix.clone();\r\n\r\n            this.onBeforeZoom(paper);\r\n\r\n            matrixScale.scale(scale, scale, origin.x, origin.y);\r\n\r\n            viewport.attr('transform', matrixScale.toValue());\r\n            viewport.graph.matrix = matrixScale;\r\n\r\n            this.zooming.zoom  = zoom;\r\n            this.zooming.scale = matrixScale.props.a;\r\n\r\n            if (paper.state() == 'panning') {\r\n                paper.cursor(zoomType == 'in' ? 'zoom-in' : 'zoom-out');\r\n            }\r\n\r\n            this.onZoom(paper);\r\n        },\r\n\r\n        scroll: function(paper, viewport, dx, dy) {\r\n            var matrix = viewport.matrix().clone(),\r\n                scale = this.zooming.scale;\r\n\r\n            this.onBeforeScroll(paper);\r\n\r\n            dx /= scale;\r\n            dy /= scale;\r\n\r\n            matrix.translate(dx, dy);\r\n\r\n            viewport.attr('transform', matrix.toValue());\r\n            viewport.graph.matrix = matrix;\r\n\r\n            if (this.zooming.origin) {\r\n                this.zooming.origin.x += dx;\r\n                this.zooming.origin.y += dy;\r\n            }\r\n\r\n            this.onScroll();\r\n        },\r\n\r\n        onMouseWheel: function(e, paper, viewport) {\r\n\r\n            e = Graph.event.fix(e);\r\n            e.preventDefault();\r\n\r\n            var vscroll = Graph.event.hasPrimaryModifier(e),\r\n                hscroll = Graph.event.hasSecondaryModifier(e),\r\n                event   = Graph.event.original(e);\r\n\r\n            var factor, delta, origin, offset, box;\r\n\r\n            if (vscroll || hscroll) {\r\n\r\n                if (Graph.isMac()) {\r\n                    factor = event.deltaMode === 0 ? 1.25 : 50;\r\n                } else {\r\n                    // factor = event.deltaMode === 0 ? 1/40 : 1/2;\r\n                    factor = event.deltaMode === 0 ? 1 : 20;\r\n                }\r\n\r\n                delta = {};\r\n\r\n                if (hscroll) {\r\n                    delta.dx = (factor * (event.deltaX || event.deltaY));\r\n                    delta.dy = 0;\r\n                } else {\r\n                    delta.dx = 0;\r\n                    delta.dy = (factor * event.deltaY);\r\n                }\r\n\r\n                this.scroll(paper, viewport, delta.dx, delta.dy);\r\n\r\n            } else {\r\n                factor = (event.deltaMode === 0 ? 1/40 : 1/2);\r\n                offset = this.caching.offset;\r\n\r\n                origin = {\r\n                    x: event.clientX - offset.x,\r\n                    y: event.clientY - offset.y\r\n                };\r\n\r\n                this.zooming.origin = origin;\r\n\r\n                // console.log(event.deltaY, factor, event.deltaY * factor / (-15));\r\n\r\n                this.zoom(\r\n                    paper,\r\n                    viewport,\r\n                    // event.deltaY * factor / (-5),\r\n                    event.deltaY * factor / (-8),\r\n                    origin\r\n                );\r\n            }\r\n        },\r\n\r\n        onPointerDown: function(e, paper, viewport, vendor) {\r\n            var target = Graph.$(e.target),\r\n                vector = Graph.registry.vector.get(target),\r\n                vendor = paper.interactable().vendor(),\r\n                tool   = paper.tool().current();\r\n\r\n            var offset;\r\n\r\n            if (this.panning.moveHandler) {\r\n                vendor.off('move', this.panning.moveHandler);\r\n                this.panning.moveHandler = null;\r\n            }\r\n\r\n            if (this.panning.stopHandler) {\r\n                vendor.off('up', this.panning.stopHandler);\r\n                this.panning.stopHandler = null;\r\n            }\r\n\r\n            if (' collector pencil '.indexOf(tool) > -1) {\r\n                return;\r\n            }\r\n\r\n            if (vector) {\r\n                // already has drag feature\r\n                if (vector.isDraggable()) {\r\n                    return;\r\n                }\r\n\r\n                // reject non primary button\r\n                if (e.button || e.ctrlKey || e.shiftKey || e.altKey) {\r\n                    return;\r\n                }\r\n\r\n                this.revalidate(paper);\r\n\r\n                offset = this.caching.offset;\r\n\r\n                this.panning.start = {\r\n                    x: e.clientX - offset.x,\r\n                    y: e.clientY - offset.y\r\n                };\r\n\r\n                // install temporary events handler\r\n                this.panning.moveHandler = _.bind(this.onPointerMove, this, _, paper, viewport);\r\n                this.panning.stopHandler = _.bind(this.onPointerStop, this, _, paper, viewport);\r\n\r\n                vendor.on('move', this.panning.moveHandler);\r\n                vendor.on('up', this.panning.stopHandler);\r\n            }\r\n        },\r\n\r\n        onPointerMove: function(e, paper, viewport) {\r\n\r\n            var offset = this.caching.offset,\r\n                start = this.panning.start,\r\n                current = {\r\n                    x: e.clientX - offset.x,\r\n                    y: e.clientY - offset.y\r\n                },\r\n                dx = current.x - start.x,\r\n                dy = current.y - start.y,\r\n                mg = Graph.util.hypo(dx, dy);\r\n\r\n            this.scroll(paper, viewport, dx, dy);\r\n\r\n            this.panning.start = {\r\n                x: e.clientX - offset.x,\r\n                y: e.clientY - offset.y\r\n            };\r\n\r\n            paper.cursor('move');\r\n\r\n            // prevent select\r\n            e.preventDefault();\r\n        },\r\n\r\n        onPointerStop: function(e, paper) {\r\n            var me = this, vendor = paper.interactable().vendor();\r\n            var delay;\r\n\r\n            // wait interact to fire last posible event...\r\n            delay = _.delay(function(){\r\n                clearTimeout(delay);\r\n                delay = null;\r\n\r\n                vendor.off('move', me.panning.moveHandler);\r\n                vendor.off('up', me.panning.stopHandler);\r\n\r\n                me.panning.moveHandler = null;\r\n                me.panning.stopHandler = null;\r\n            }, 0);\r\n\r\n            paper.cursor('default');\r\n        },\r\n\r\n        onBeforeZoom: _.debounce(function(paper){\r\n\r\n            Graph.topic.publish('paper:beforezoom', null, paper);\r\n\r\n        }, 300, {leading: true, trailing: false}),\r\n\r\n        onZoom: _.debounce(function(paper) {\r\n            var state = paper.state();\r\n\r\n            if (state == 'panning') {\r\n                paper.cursor('default');\r\n            }\r\n\r\n        }, 300),\r\n\r\n        onBeforeScroll: _.debounce(function(paper){\r\n\r\n            Graph.topic.publish('paper:beforescroll', null, paper);\r\n\r\n        }, 300, {leading: true, trailing: false}),\r\n\r\n        onScroll: _.debounce(function() {\r\n\r\n        }, 300),\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Panzoom';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// HELPERS /////////\r\n\r\n    function logarithm(num, base) {\r\n        base = base || 10;\r\n        return Math.log(num) / Math.log(base);\r\n    }\r\n\r\n    function stepRange(range, steps) {\r\n        var min = logarithm(range.min),\r\n            max = logarithm(range.max),\r\n            abs = Math.abs(min) + Math.abs(max);\r\n\r\n        return abs / steps;\r\n    }\r\n\r\n    function zoomRange(range, scale) {\r\n        return Math.max(range.min, Math.min(range.max, scale));\r\n    }\r\n\r\n    function onDestroy(event, paper) {\r\n        var offset = paper.node().getBoundingClientRect(),\r\n            x = event.clientX - offset.left,\r\n            y = event.clientY - offset.top;\r\n\r\n        return {\r\n            x: x,\r\n            y: y\r\n        };\r\n    }\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var CLS_CONNECT_VALID = 'connect-valid',\r\n        CLS_CONNECT_INVALID = 'connect-invalid',\r\n        CLS_CONNECT_RESET = 'connect-valid connect-invalid';\r\n\r\n    Graph.plugin.Linker = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n            enabled: false,\r\n            suspended: true,\r\n            rendered: false\r\n        },\r\n\r\n        components: {\r\n            block: null,\r\n            pointer: null,\r\n            path: null\r\n        },\r\n\r\n        linking: {\r\n            treshold: 10,\r\n            enabled: false,\r\n            moveHandler: null,\r\n            stopHandler: null,\r\n            source: null,\r\n            start: null,\r\n            target: null,\r\n            end: null,\r\n            visits: []\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            var me = this, vendor;\r\n\r\n            if ( ! vector.isPaper()) {\r\n                throw Graph.error('Linker plugin is only available for paper !');\r\n            }\r\n\r\n            vendor = vector.interactable().vendor();\r\n            vendor.on('down', _.bind(me.onPointerDown, me, _, vector));\r\n\r\n            vector.on('keynavdown', function(e){\r\n                if (e.keyCode === Graph.event.ESC) {\r\n                    me.invalidate();\r\n                    vector.tool().activate('panzoom');\r\n                }\r\n            });\r\n\r\n            me.props.vector = vector.guid();\r\n            me.initComponent();\r\n        },\r\n        \r\n        initComponent: function() {\r\n            var me = this, \r\n                comp = me.components;\r\n\r\n            var block, pointer, path;\r\n\r\n            block = (new Graph.svg.Group())\r\n                .addClass('graph-linker-path')\r\n                .selectable(false);\r\n\r\n            pointer = (new Graph.svg.Circle())\r\n                .addClass('graph-linker-pointer')\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .selectable(false)\r\n                .render(block);\r\n\r\n            path = (new Graph.svg.Path())\r\n                .addClass('graph-linker-path')\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .selectable(false)\r\n                .render(block)\r\n                .attr('marker-end', 'url(#marker-link-end)');\r\n\r\n            comp.block = block.guid();\r\n            comp.pointer = pointer.guid();\r\n            comp.path = path.guid();\r\n        },\r\n\r\n        component: function(name) {\r\n            if (name === undefined) {\r\n                return Graph.registry.vector.get(this.components.block);\r\n            }\r\n            return Graph.registry.vector.get(this.components[name]);\r\n        },\r\n\r\n        render: function() {\r\n            var paper;\r\n\r\n            if (this.props.rendered) {\r\n                return;\r\n            }\r\n\r\n            paper = this.vector();\r\n            this.component().render(paper);\r\n\r\n            this.props.rendered = true;\r\n        },\r\n\r\n        invalidate: function() {\r\n            var vector, vendor;\r\n\r\n            if (this.linking.enabled) {\r\n                vector = this.vector();\r\n                vendor = vector.interactable().vendor();\r\n                \r\n                if (this.linking.moveHandler) {\r\n                    vendor.off('move', this.linking.moveHandler);\r\n                    this.linking.moveHandler = null;\r\n                }\r\n\r\n                if (this.linking.source) {\r\n                    this.linking.source.removeClass('disallowed');\r\n                }\r\n\r\n                if (this.linking.target) {\r\n                    this.linking.target.removeClass('allowed');\r\n                }\r\n\r\n                _.assign(this.linking, {\r\n                    enabled: false,\r\n                    moveHandler: null,\r\n                    stopHandler: null,\r\n                    source: null,\r\n                    start: null,\r\n                    target: null,\r\n                    end: null\r\n                });\r\n                \r\n                if (this.linking.visits) {\r\n                    _.forEach(this.linking.visits, function(v){\r\n                        v.removeClass('connect-valid connect-invalid');\r\n                    });\r\n                }\r\n                \r\n                this.linking.visits = null;\r\n            }\r\n        },\r\n\r\n        enable: function() {\r\n            var paper = this.vector();\r\n            this.props.enabled = true;\r\n\r\n            paper.state('linking');\r\n            paper.addClass('linking');\r\n        },\r\n\r\n        disable: function() {\r\n            var paper = this.vector();\r\n\r\n            this.props.enabled = false;\r\n            this.invalidate();\r\n            this.suspend();\r\n\r\n            paper.removeClass('linking');\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.component().elem.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            var paper;\r\n\r\n            if ( ! this.props.suspended) {\r\n                return;\r\n            }\r\n\r\n            paper = this.vector();\r\n\r\n            this.props.suspended = false;\r\n            \r\n            if ( ! this.props.rendered) {\r\n                this.render();\r\n            } else {\r\n                this.component().elem.appendTo(paper.viewport().elem);\r\n            }\r\n        },\r\n        \r\n        /**\r\n         *  Start manual linking\r\n         */\r\n        start: function(source, anchor) {\r\n            var paper = this.vector(),\r\n                layout = paper.layout(),\r\n                offset = layout.position();\r\n                \r\n            if (paper.tool().current() != 'linker') {\r\n                return;\r\n            }\r\n            \r\n            if (this.linking.enabled) {\r\n                if (this.linking.source && this.linking.target) {\r\n                    this.build();\r\n                } else {\r\n                    this.invalidate();\r\n                    this.suspend();\r\n                }\r\n                return;\r\n            } else {\r\n                if (source.isPaper()) {\r\n                    this.invalidate();\r\n                    this.suspend();\r\n                    paper.tool().activate('panzoom');\r\n                    return;\r\n                }\r\n            }\r\n            \r\n            this.linking.visits = [];\r\n            \r\n            var vendor, sbox, port;\r\n\r\n            if (source.isConnectable()) {\r\n\r\n                if (this.props.suspended) {\r\n                    this.resume();    \r\n                }\r\n\r\n                var path = this.component('path');\r\n\r\n                this.linking.moveHandler = _.bind(this.onPointerMove, this, _, paper, path);    \r\n                \r\n                vendor = paper.interactable().vendor();\r\n                vendor.on('move', this.linking.moveHandler);\r\n\r\n                this.linking.visits.push(source);    \r\n\r\n                if (source.isConnectable()) {\r\n                    \r\n                    if ( ! this.linking.source) {\r\n                        sbox = source.bboxOriginal();\r\n                        port = sbox.center(true);\r\n\r\n                        this.linking.source = source;\r\n                        this.linking.start  = port;\r\n                        \r\n                        if (anchor) {\r\n                            path.moveTo(port.x, port.y).lineTo(anchor.x, anchor.y, false);\r\n                        } else {\r\n                            path.moveTo(port.x, port.y).lineTo(port.x, port.y, false);\r\n                        }   \r\n\r\n                        sbox = port = null;\r\n                    }\r\n\r\n                }\r\n\r\n                this.linking.enabled = true;\r\n            }\r\n        },\r\n        \r\n        cropping: function(start, end) {\r\n            var source = this.linking.source,\r\n                target = this.linking.target,\r\n                cable = new Graph.lang.Path([['M', start.x, start.y], ['L', end.x, end.y]]);\r\n\r\n            var spath, scrop, tpath, tcrop;\r\n\r\n            if (source) {\r\n                spath = source.shapeView();\r\n                scrop = spath.intersection(cable, true);\r\n            }\r\n\r\n            if (target) {\r\n                tpath = target.shapeView();\r\n                tcrop = tpath.intersection(cable, true);\r\n            }\r\n\r\n            cable = spath = tpath = null;\r\n\r\n            return {\r\n                start: scrop ? scrop[0] : null,\r\n                end:   tcrop ? tcrop[0] : null\r\n            };\r\n        },\r\n\r\n        build: function() {\r\n            var path = this.component('path'),\r\n                tail = path.tail(),\r\n                head = path.head();\r\n\r\n            if (tail && head) {\r\n                var sourceNetwork = this.linking.source.connectable(),\r\n                    targetNetwork = this.linking.target.connectable();\r\n\r\n                sourceNetwork.connectByLinker(targetNetwork, tail, head);\r\n            }\r\n\r\n            this.invalidate();\r\n            this.suspend();\r\n        },\r\n\r\n        onPointerDown: function(e, paper) {\r\n            var layout = paper.layout(),\r\n                source = layout.grabVector(e);\r\n            \r\n            if (source) {\r\n                this.start(source);\r\n            }\r\n            \r\n            layout = source = null;\r\n        },\r\n\r\n        onPointerMove: function(e, paper, path) {\r\n            if (this.linking.enabled) {\r\n\r\n                var layout = paper.layout(),\r\n                    target = layout.grabVector(e);\r\n\r\n                if ( ! target) {\r\n                    return;\r\n                }\r\n\r\n                var source = this.linking.source,\r\n                    valid = false;\r\n\r\n                if (source) {\r\n\r\n                    // track visit\r\n                    if (this.linking.visits.indexOf(target.guid()) === -1) {\r\n                        this.linking.visits.push(target);\r\n                    }\r\n                    \r\n                    var start = this.linking.start,\r\n                        coord = layout.pointerLocation(e),\r\n                        x = coord.x,\r\n                        y = coord.y,\r\n                        rad = Graph.util.rad(Graph.util.theta(start, {x: x, y: y})),\r\n                        sin = Math.sin(rad),\r\n                        cos = Math.cos(rad),\r\n                        tdx = this.linking.treshold * -cos,\r\n                        tdy = this.linking.treshold *  sin;\r\n\r\n                    x += tdx;\r\n                    y += tdy;\r\n\r\n                    if (target.isConnectable()) {\r\n                        \r\n                        var crop, tbox, port;\r\n\r\n                        if (source.connectable().canConnect(target.connectable())) {\r\n                            valid  = true;\r\n\r\n                            target.removeClass(CLS_CONNECT_INVALID);\r\n                            target.addClass(CLS_CONNECT_VALID);\r\n                            \r\n                            tbox = target.bboxOriginal();\r\n                            port = tbox.center(true);\r\n\r\n                            this.linking.target = target;\r\n                            this.linking.end    = port;\r\n\r\n                            crop = this.cropping(start, port);\r\n\r\n                            if (crop.start) {\r\n                                path.moveTo(crop.start.x, crop.start.y);\r\n                            }\r\n\r\n                            if (crop.end) {\r\n                                path.lineTo(crop.end.x, crop.end.y, false);\r\n                            } else {\r\n                                path.lineTo(x, y, false);\r\n                            }\r\n\r\n                            tbox = port = null;\r\n                        } else {\r\n                            target.removeClass(CLS_CONNECT_VALID);\r\n                            target.addClass(CLS_CONNECT_INVALID);\r\n                        }\r\n\r\n                    } else {\r\n                        target.addClass(CLS_CONNECT_INVALID);\r\n                    }\r\n\r\n                    if ( ! valid) {\r\n\r\n                        if (this.linking.target) {\r\n                            this.linking.target.removeClass(CLS_CONNECT_RESET);\r\n                        }\r\n\r\n                        this.linking.target = null;\r\n                        this.linking.end    = null; \r\n\r\n                        crop = this.cropping(start, {x: x, y: y});\r\n\r\n                        if (crop.start) {\r\n                            path.moveTo(crop.start.x, crop.start.y);\r\n                        }\r\n\r\n                        if (crop.end) {\r\n                            path.lineTo(crop.end.x, crop.end.y, false);\r\n                        } else {\r\n                            path.lineTo(x, y, false);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            e.preventDefault();\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Linker';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// HELPER /////////\r\n    \r\n\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.ToolManager = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n            current: null\r\n        },\r\n\r\n        tools: {\r\n\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            var me = this;\r\n\r\n            me.props.vector = vector.guid();\r\n\r\n        },\r\n        \r\n        has: function(tool) {\r\n            return !!this.tools[tool];\r\n        },\r\n\r\n        get: function(name) {\r\n            var data = this.tools[name],\r\n                vector = this.vector();\r\n\r\n            if (data) {\r\n                switch(data.type) {\r\n                    case 'plugin':\r\n                        return vector.plugins[name];\r\n                    case 'util':\r\n                        return vector.utils[name];\r\n                }\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        current: function() {\r\n            return this.props.current;\r\n        },\r\n\r\n        register: function(name, type) {\r\n            type = _.defaultTo(type, 'plugin');\r\n\r\n            this.tools[name] = {\r\n                name: name,\r\n                type: type,\r\n                enabled: false\r\n            };\r\n        },\r\n\r\n        unregister: function(name) {\r\n            if (this.tools[name]) {\r\n                delete this.tools[name];\r\n            }\r\n        },\r\n\r\n        activate: function(name, activator) {\r\n            if (this.props.current != name) {\r\n\r\n                var tool = this.get(name), data;\r\n                \r\n                if (tool) {\r\n                    this.deactivateAll(name);\r\n                    this.props.current = name;\r\n\r\n                    data = this.tools[name];\r\n                    data.enabled = true;\r\n\r\n                    activator = _.defaultTo(activator, 'tool');\r\n                    tool.enable(activator);\r\n\r\n                    this.fire('activate', {\r\n                        name: data.name,\r\n                        enabled: data.enabled\r\n                    });\r\n                }\r\n            }\r\n            \r\n        },\r\n\r\n        deactivate: function(name) {\r\n            var tool = this.get(name), data;\r\n\r\n            if (tool) {\r\n                data = this.tools[name];\r\n                data.enabled = false;\r\n                this.props.current = null;\r\n\r\n                tool.disable();\r\n\r\n                this.fire('deactivate', {\r\n                    name: data.name,\r\n                    enabled: data.enabled\r\n                });\r\n            }\r\n        },\r\n\r\n        deactivateAll: function(except) {\r\n            var vector = this.vector();\r\n\r\n            for(var name in this.tools) {\r\n                if (name != except) {\r\n                    this.deactivate(name);\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        toggle: function(tool) {\r\n            var data = this.tools[tool];\r\n            if (data) {\r\n                if (data.enabled) {\r\n                    this.deactivate(tool);\r\n                } else {\r\n                    this.activate(tool);\r\n                }\r\n            }\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.ToolManager';\r\n        }\r\n\r\n\r\n    });\r\n\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Pencil = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        writing: {\r\n            startHandler: null\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            this.props.vector = vector.guid();\r\n        },\r\n\r\n        enable: function(activator) {\r\n            this.props.enabled = true;\r\n            this.props.activator = activator;\r\n\r\n            var vector = this.vector(),\r\n                vendor = vector.interactable().vendor();\r\n\r\n            vector.cursor('text');\r\n            vector.state('writing');\r\n\r\n            this.writing.startHandler = _.bind(this.onPointerDown, this);\r\n            vendor.on('down', this.writing.startHandler);\r\n\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.enabled = false;\r\n            var vendor = this.vector().interactable().vendor();\r\n            vendor.off('down', this.writing.startHandler);\r\n            this.writing.startHandler = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Pencil';\r\n        },\r\n\r\n        onPointerDown: function(e) {\r\n            var vector = this.vector();\r\n\r\n            if (vector.isPaper()) {\r\n                var offset, options, result;\r\n\r\n                offset = vector.layout().pointerLocation(e);\r\n                options = {\r\n                    left: offset.x,\r\n                    top: offset.y\r\n                };\r\n\r\n                if ( ! vector.diagram().current()) {\r\n                    vector.diagram().create();\r\n                }\r\n                \r\n                result = vector.diagram().current().drawShape(\r\n                    'Graph.shape.common.Label', \r\n                    options\r\n                );\r\n\r\n                if (result.shape) {\r\n                    var t = _.delay(function(e){\r\n                        clearTimeout(t);\r\n                        t = null;\r\n\r\n                        vector.tool().activate('panzoom');\r\n                        result.shape.editable().plugin().startEdit();\r\n\r\n                    }, 10);    \r\n                } else {\r\n                    //vector.tool().activate('panzoom');\r\n                }\r\n                \r\n            }\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    var MIN_BOX_WIDTH  = 150,\r\n        MIN_BOX_HEIGHT = 50,\r\n        OFFSET_TRESHOLD = 10;\r\n\r\n    var Editor = Graph.plugin.Editor = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n            rendered: false,\r\n            suspended: true,\r\n            width: 'auto',\r\n            height: 'auto',\r\n            offset: 'auto',\r\n            align: 'center'\r\n        },\r\n\r\n        editing: {\r\n            commitHandler: null\r\n        },\r\n\r\n        components: {\r\n            editor: null\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var vendor;\r\n\r\n            _.assign(this.props, options || {});\r\n\r\n            this.props.vector = vector.guid();\r\n\r\n            _.assign(this.cached, {\r\n                left: 0,\r\n                top: 0,\r\n                width: 0,\r\n                height: 0\r\n            });\r\n\r\n            vendor = vector.interactable().vendor();\r\n            vendor.on('doubletap', _.bind(this.onDoubleTap, this));\r\n\r\n            this.initComponent();\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = this.components;\r\n            \r\n            comp.editor = Graph.$('<div class=\"graph-editor\" contenteditable=\"true\"></div>');\r\n            comp.editor.css('text-align', this.props.align);\r\n            \r\n            comp.editor.on('keydown', function(e){\r\n                switch(e.keyCode) {\r\n                    case Graph.event.ENTER:\r\n                        me.commit();\r\n                        break;\r\n                    case Graph.event.DELETE:\r\n                    case Graph.event.SHIFT:\r\n                        e.stopPropagation();\r\n                        break;\r\n\r\n                }\r\n            });\r\n        },\r\n        \r\n        commit: function() {\r\n\r\n            var text = this.components.editor.text();\r\n\r\n            this.suspend();\r\n            this.vector().props.text = text;\r\n\r\n            this.fire('edit', {\r\n                text: text,\r\n                left: this.cached.left,\r\n                top: this.cached.top\r\n            });\r\n        },\r\n\r\n        render: function() {\r\n            if (this.props.rendered) {\r\n                this.redraw();\r\n                return;\r\n            }\r\n            \r\n            this.vector().paper().container().append(this.components.editor);\r\n            this.props.rendered = true;\r\n            this.redraw();\r\n        },\r\n\r\n        suspend: function() {\r\n\r\n            this.props.suspended = true;\r\n            this.components.editor.detach();\r\n\r\n            if (this.editing.commitHandler) {\r\n                Graph.topic.unsubscribe('paper:beforezoom', this.editing.commitHandler);\r\n                Graph.topic.unsubscribe('paper:beforescroll', this.editing.commitHandler);\r\n                Graph.topic.unsubscribe('vector:pointerdown', this.editing.commitHandler);\r\n\r\n                this.editing.commitHandler = null;\r\n            }\r\n        },\r\n\r\n        resume: function() {\r\n            var container;\r\n\r\n            if ( ! this.props.rendered) {\r\n                this.render();\r\n            } else {\r\n                if (this.props.suspended) {\r\n                    this.props.suspended = false;\r\n                    container = this.vector().paper().container();\r\n                    container.append(this.components.editor);\r\n                }\r\n                this.redraw();\r\n            }\r\n\r\n        },\r\n\r\n        redraw: function() {\r\n            var editor = this.components.editor,\r\n                vector = this.vector(),\r\n                matrix = vector.matrixCurrent(),\r\n                scale  = matrix.scale();\r\n\r\n            var vbox = vector.bbox().clone().transform(matrix).toJson();\r\n            var left, top, width, height;\r\n            \r\n            width  = vbox.width;\r\n            height = vbox.height;\r\n            left = vbox.x;\r\n            top  = vbox.y;\r\n\r\n            if (this.props.width != 'auto') {\r\n                width = Math.max(this.props.width, MIN_BOX_WIDTH);\r\n                width = Math.max(width * scale.x, width);\r\n                left = vbox.x;\r\n            } else {\r\n                width = width - 8 * scale.x;\r\n                left = left + 4 * scale.x;\r\n            }   \r\n\r\n            if (this.props.height != 'auto') {\r\n                height = Math.max(this.props.height, MIN_BOX_HEIGHT);\r\n                height = Math.max(height * scale.y, height);\r\n                top = vbox.y;\r\n            } else {\r\n                height = height - 8 * scale.y;\r\n                top = top + 4 * scale.y;\r\n            }\r\n\r\n            editor.css({\r\n                left: left,\r\n                top:  top,\r\n                width: width,\r\n                height: height\r\n            });\r\n\r\n            _.assign(this.cached, {\r\n                left: left,\r\n                top: top,\r\n                width: width,\r\n                height: height\r\n            });\r\n\r\n            editor.text((vector.props.text || ''));\r\n            editor.focus();\r\n\r\n            vbox = null;\r\n        },\r\n\r\n        startEdit: function(e) {\r\n            var me = this, vector = me.vector();\r\n\r\n            vector.deselect();\r\n\r\n            if (vector.paper()) {\r\n                if (vector.paper().tool().current() == 'linker') {\r\n                    vector.paper().tool().activate('panzoom');\r\n                }        \r\n            }\r\n\r\n            me.fire('beforeedit');\r\n            me.resume();\r\n\r\n            if (e && this.props.offset == 'pointer') {\r\n                var editor = me.components.editor,\r\n                    paper = vector.paper(),\r\n                    layout = paper.layout(),\r\n                    scale = layout.scale();\r\n\r\n                var offset, coords, screen;\r\n\r\n                if (paper) {\r\n                    offset = paper.position();\r\n                    coords = layout.pointerLocation(e);\r\n                    \r\n                    if (this.props.align == 'center') {\r\n                        screen = {\r\n                            x: e.clientX - offset.left,\r\n                            y: e.clientY - offset.top\r\n                        };\r\n\r\n                        editor.css({\r\n                            left: screen.x - editor.width() / 2,\r\n                            top: screen.y - editor.height() / 2\r\n                        });\r\n                    } else {\r\n                        screen = vector.bboxView().toJson();\r\n                        screen = layout.screenLocation({x: screen.x, y: screen.y});\r\n\r\n                        editor.css({\r\n                            left: screen.x - offset.left,\r\n                            top: screen.y - offset.top\r\n                        });\r\n                    }\r\n\r\n                    editor.focus(true);\r\n\r\n                    me.cached.left = coords.x;\r\n                    me.cached.top  = coords.y;\r\n                }\r\n            }\r\n\r\n            if ( ! me.editing.commitHandler) {\r\n                me.editing.commitHandler = function() {\r\n                    me.commit();\r\n                };\r\n\r\n                Graph.topic.subscribe('paper:beforezoom', me.editing.commitHandler);\r\n                Graph.topic.subscribe('paper:beforescroll', me.editing.commitHandler);\r\n                Graph.topic.subscribe('vector:pointerdown', me.editing.commitHandler);\r\n            }\r\n        },\r\n\r\n        onDoubleTap: function(e) {\r\n            this.startEdit(e);\r\n            e.preventDefault();\r\n        },\r\n\r\n        destroy: function() {\r\n            if (this.editing.commitHandler) {\r\n                Graph.topic.unsubscribe('paper:beforezoom', this.editing.commitHandler);\r\n                Graph.topic.unsubscribe('paper:beforescroll', this.editing.commitHandler);\r\n                Graph.topic.unsubscribe('vector:pointerdown', this.editing.commitHandler);\r\n\r\n                this.editing.commitHandler = null;\r\n            }\r\n\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Editor';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n    \r\n    \r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Snapper = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            enabled: true,\r\n            suspended: true,\r\n            rendered: false,\r\n            vector: null\r\n        },\r\n\r\n        clients: {\r\n\r\n        },\r\n\r\n        components: {\r\n            block: null,\r\n            stubx: null,\r\n            stuby: null\r\n        },\r\n\r\n        // trans\r\n        snapping: {\r\n            coords: null,\r\n            vector: null,\r\n            offset: null,\r\n            stubx: null,\r\n            stuby: null\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            options = options || {};\r\n\r\n            if ( ! vector.isPaper()) {\r\n                throw Graph.error(\"Snapper plugin only available for paper\");\r\n            }\r\n\r\n            _.assign(this.props, options);\r\n\r\n            this.props.vector  = vector.guid();\r\n\r\n            this.initComponent(vector);\r\n            this.snapping.coords = {};\r\n        },\r\n\r\n        invalidate: function() {\r\n            for (var key in this.snapping) {\r\n                this.snapping[key] = null;\r\n            }\r\n\r\n            this.snapping.coords = {};\r\n            this.clients = {};\r\n        },\r\n\r\n        initComponent: function(vector) {\r\n            var block, stubx, stuby;\r\n\r\n            block = (new Graph.svg.Group())\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .addClass('graph-snapper');\r\n\r\n            stubx = (new Graph.svg.Path('M 0 0 L 0 0'))\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(block);\r\n\r\n            stuby = (new Graph.svg.Path('M 0 0 L 0 0'))\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(block);\r\n\r\n            this.components.block = block.guid();\r\n            this.components.stuby = stuby.guid();\r\n            this.components.stubx = stubx.guid();\r\n\r\n        },\r\n\r\n        component: function(name) {\r\n            if (name === undefined) {\r\n                return Graph.registry.vector.get(this.components.block);\r\n            }\r\n            return Graph.registry.vector.get(this.components[name]);\r\n        },\r\n\r\n        render: function() {\r\n            if (this.props.rendered) {\r\n                return;\r\n            }\r\n            this.component().render(this.vector());\r\n            this.props.rendered = true;\r\n        },\r\n\r\n        enable: function() {\r\n            this.props.enabled = true;\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.enabled = false;\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.component().elem.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            if (this.props.suspended) {\r\n                this.props.suspended = false;\r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else {\r\n                    var block = this.component(),\r\n                        viewport = this.vector().viewport();\r\n                    block.elem.appendTo(viewport.elem);\r\n                }\r\n            }\r\n        },\r\n\r\n        refresh: function(clientId) {\r\n            if (this.props.enabled) {\r\n                var key, client, center, token;\r\n\r\n                if (clientId !== undefined) {\r\n                    var options = this.clients[clientId];\r\n\r\n                    if (options) {\r\n                        if (this.snapping.coords[options.coords]) {\r\n                            delete this.snapping.coords[options.coords];\r\n                        }\r\n                        client = Graph.registry.vector.get(clientId);    \r\n                        if (client) {\r\n                            center = this.getClientCenter(client);\r\n                            token = center.x + '_' + center.y;\r\n                            this.snapping.coords[token] = center;\r\n                            this.clients[clientId].coords = token;\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.snapping.coords = {};    \r\n                    for (key in this.clients) {\r\n                        client = Graph.registry.vector.get(key);\r\n                        if (client) {\r\n                            center = this.getClientCenter(client);\r\n                            token = center.x + '_' + center.y;\r\n                            this.snapping.coords[token] = center;\r\n                            this.clients[key].coords = token;\r\n                        }\r\n                    }  \r\n                }\r\n            }\r\n        },\r\n\r\n        setup: function(client, options) {\r\n\r\n            if ( ! this.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            var me = this,\r\n                clientId = client.guid();\r\n\r\n            var key;\r\n\r\n            if (me.clients[clientId]) {\r\n                client.off('beforedrag', me.clients[clientId].beforeDragHandler);\r\n                client.off('afterdrag',  me.clients[clientId].afterDragHandler);\r\n                client.off('afterdestroy',  me.clients[clientId].afterDestroyHandler);\r\n\r\n                if (me.clients[clientId].coords) {\r\n                    delete me.snapping.coords[me.clients[clientId].coords];\r\n                }\r\n\r\n                delete me.clients[clientId];\r\n            }\r\n\r\n            if (options.enabled) {\r\n\r\n                var dragger = client.draggable();\r\n\r\n                me.clients[clientId] = {\r\n                    coords: null,\r\n                    osnaps: dragger.snap(),\r\n                    beforeDragHandler: _.bind(me.onClientBeforeDrag, me, _, client),\r\n                    afterDragHandler: _.bind(me.onClientAfterDrag, me, _, client),\r\n                    afterDestroyHandler: _.bind(me.onClientAfterDestroy, me, _, client)\r\n                };\r\n\r\n                client.on('beforedrag', me.clients[clientId].beforeDragHandler);\r\n                client.on('afterdrag', me.clients[clientId].afterDragHandler);\r\n                client.on('afterdestroy',  me.clients[clientId].afterDestroyHandler);\r\n\r\n                var center = me.getClientCenter(client),\r\n                    coords = this.snapping.coords;\r\n\r\n                // this.vector().circle(center.x, center.y, 5);\r\n\r\n                key = center.x + '_' + center.y;\r\n\r\n                if ( ! coords[key]) {\r\n                    coords[key] = center;\r\n                    me.clients[clientId].coords = key;\r\n                }\r\n\r\n                key = null;\r\n            }\r\n        },\r\n\r\n        repairClient: function(client) {\r\n            console.log(client);\r\n        },\r\n\r\n        getClientCenter: function(client) {\r\n            var bbox = client.bboxView(),\r\n                center = bbox.center(true);\r\n\r\n            return center;\r\n        },\r\n\r\n        showStub: function(axis, value) {\r\n            var snapping = this.snapping;\r\n            var command;\r\n\r\n            if (axis == 'x') {\r\n                command = 'M ' + value + ' -100000 L ' + value + ' 100000';\r\n\r\n                snapping.stubx.attr('d', command);\r\n                snapping.stubx.addClass('visible');\r\n            }\r\n\r\n            if (axis == 'y') {\r\n                command = 'M -100000 ' + value + ' L 100000 ' + value;\r\n\r\n                snapping.stuby.attr('d', command);\r\n                snapping.stuby.addClass('visible');\r\n            }\r\n\r\n            command = null;\r\n        },\r\n\r\n        hideStub: function(axis) {\r\n            var stub = axis == 'x' ? 'stubx' : 'stuby';\r\n            this.snapping[stub].removeClass('visible');\r\n        },\r\n\r\n        onClientBeforeDrag: function(e, client) {\r\n\r\n            if ( ! this.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            var me = this,\r\n                paper = me.vector(),\r\n                viewport = paper.viewport(),\r\n                layout = paper.layout(),\r\n                offset = layout.position(),\r\n                center = me.getClientCenter(client);\r\n\r\n            var snapping = this.snapping,\r\n                coords = snapping.coords;\r\n\r\n            snapping.stubx = this.component('stubx');\r\n            snapping.stuby = this.component('stuby');\r\n\r\n            var left = offset.left,\r\n                top = offset.top,\r\n                ma = viewport.matrix(),\r\n                pt = layout.pointerLocation({clientX: e.x, clientY: e.y}),\r\n                diffx = center.x - pt.x,\r\n                diffy = center.y - pt.y,\r\n                snapx = [],\r\n                snapy = [];\r\n\r\n            _.forOwn(coords, function(c){\r\n                var mx, my, vx, vy;\r\n\r\n                mx = ma.x(c.x - diffx, c.y - diffy);\r\n                my = ma.y(c.x - diffx, c.y - diffy);\r\n\r\n                vx = mx + left;\r\n\r\n                if (_.indexOf(snapx, vx) === -1) {\r\n                    snapx.push(vx);\r\n                }\r\n\r\n                vy = my + top;\r\n\r\n                if (_.indexOf(snapy, vy) === -1) {\r\n                    snapy.push(vy);\r\n                }\r\n            });\r\n\r\n            client.draggable().snap([\r\n                function(x, y) {\r\n                    var rx, ry, x1, y1, pt;\r\n\r\n                    rx = snapValue(x, snapx);\r\n                    ry = snapValue(y, snapy);\r\n\r\n                    x1 = rx.value;\r\n                    y1 = ry.value;\r\n\r\n                    pt = layout.pointerLocation({\r\n                        clientX: x1,\r\n                        clientY: y1\r\n                    });\r\n\r\n                    if (rx.snapped) {\r\n                        me.showStub('x', pt.x + diffx);\r\n                    } else {\r\n                        me.hideStub('x');\r\n                    }\r\n\r\n                    if (ry.snapped) {\r\n                        me.showStub('y', pt.y + diffy);\r\n                    } else {\r\n                        me.hideStub('y');\r\n                    }\r\n\r\n                    return {\r\n                        x: x1,\r\n                        y: y1\r\n                    };\r\n                }\r\n            ]);\r\n\r\n            me.resume();\r\n        },\r\n\r\n        onClientAfterDrag: function(e, client) {\r\n\r\n            if ( ! this.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            var snapping = this.snapping,\r\n                options = this.clients[client.guid()];\r\n\r\n            if (options) {\r\n                var dragger = client.draggable();\r\n\r\n                if (options.osnaps) {\r\n                    dragger.snap(options.osnaps);\r\n                }\r\n\r\n                var token, center;\r\n\r\n                if (options.coords) {\r\n                    delete snapping.coords[options.coords];\r\n                }\r\n\r\n                center = this.getClientCenter(client);\r\n                token = center.x + '_' + center.y;\r\n\r\n                if ( ! snapping.coords[token]) {\r\n                    snapping.coords[token] = center;\r\n                    options.coords = token;\r\n                }\r\n\r\n                token = null;\r\n                center = null;\r\n            }\r\n\r\n            this.suspend();\r\n\r\n            _.assign(this.snapping, {\r\n                stubx: null,\r\n                stuby: null\r\n            });\r\n        },\r\n\r\n        onClientAfterDestroy: function(e, client) {\r\n            var guid = client.guid(),\r\n                options = this.clients[guid],\r\n                snapping = this.snapping;\r\n\r\n            if (options) {\r\n                if (options.coords) {\r\n                    if (snapping.coords[options.coords]) {\r\n                        delete snapping.coords[options.coords];\r\n                    }\r\n                }\r\n                delete this.clients[guid];\r\n            }\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Snapper';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// HELPERS /////////\r\n\r\n    function snapValue(value, snaps, range) {\r\n        range = _.defaultTo(range, 10);\r\n\r\n        var i = snaps.length, v;\r\n\r\n        while(i--) {\r\n            v = Math.abs(snaps[i] - value);\r\n            if (v <= range) {\r\n                return {\r\n                    snapped: true,\r\n                    value: snaps[i]\r\n                };\r\n            }\r\n        }\r\n\r\n        return {\r\n            snapped: false,\r\n            value: value\r\n        };\r\n    }\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.plugin.Toolpad = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            vector: null,\r\n            rendered: false,\r\n            suspended: true\r\n        },\r\n        \r\n        components: {\r\n            pad: null\r\n        },  \r\n    \r\n        constructor: function(paper) {\r\n            \r\n            this.props.vector = paper.guid();\r\n            this.initComponent(paper);\r\n\r\n            this.cached.tools = null;\r\n            this.cached.shape = null;\r\n            this.cached.link  = null;\r\n            \r\n            Graph.topic.subscribe('shape:select', _.bind(this.onShapeSelect, this));\r\n            Graph.topic.subscribe('shape:deselect', _.bind(this.onShapeDeselect, this));\r\n            \r\n            Graph.topic.subscribe('link:select', _.bind(this.onLinkSelect, this));\r\n            Graph.topic.subscribe('link:deselect', _.bind(this.onLinkDeselect, this));\r\n        },\r\n        \r\n        initComponent: function(paper) {\r\n            \r\n            var pad = '<div class=\"graph-toolpad\">' + \r\n                            '<div class=\"pad-header\"></div>' + \r\n                            '<div class=\"pad-splitter\"></div>' + \r\n                            '<div class=\"pad-body\">x</div>'+\r\n                      '</div>';\r\n\r\n            pad = Graph.$(pad);\r\n\r\n            pad.on('click', '[data-shape-tool]', _.bind(this.onShapeToolClick, this));\r\n            pad.on('click', '[data-link-tool]', _.bind(this.onLinkToolClick, this));\r\n            \r\n            this.components.pad = pad;\r\n        },\r\n        \r\n        render: function() {\r\n            if (this.props.rendered) {\r\n                return;\r\n            }\r\n            \r\n            this.components.pad.appendTo(this.vector().container());\r\n            this.props.rendered = true;\r\n        },\r\n        \r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.components.pad.detach();\r\n        },\r\n        \r\n        resume: function() {\r\n            if (this.props.suspended) {\r\n                \r\n                this.props.suspended = false;\r\n                \r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else {\r\n                    this.components.pad.appendTo(this.vector().container());\r\n                }\r\n            }\r\n        },\r\n        \r\n        onShapeSelect: function(e) {\r\n            var shape = e.shape,\r\n                meta = shape.metadata,\r\n                pad = this.components.pad;\r\n\r\n            var body = '';\r\n\r\n            // pad.find('.pad-header').html('<a href=\"javascript:void(0);\"><i class=\"' + meta.icon + '\"></i></a>');            \r\n            pad.find('.pad-header').html('<a href=\"javascript:void(0);\"><i class=\"ion-navicon-round\"></i></a>');            \r\n            \r\n            _.forEach(meta.tools, function(tool, index){\r\n                if (tool.enabled) {\r\n                    body += '<div class=\"splitter\"></div>';\r\n                    body += '<a data-shape-tool=\"' + tool.name + '\" href=\"javascript:void(0)\" title=\"' + tool.title + '\"><i class=\"' + tool.icon + '\"></i></a>';\r\n                }\r\n            });\r\n            \r\n            pad.find('.pad-body').html(body);\r\n\r\n            this.cached.tools = meta.tools;\r\n            this.cached.shape = shape;\r\n\r\n            this.resume();\r\n        },\r\n        \r\n        onShapeDeselect: function(e) {\r\n            this.suspend();\r\n        },\r\n        \r\n\r\n        onLinkSelect: function(e) {\r\n            var link = e.link,\r\n                meta = link.metadata,\r\n                pad = this.components.pad;\r\n            \r\n            // pad.find('.pad-header').html('<a><i class=\"' + meta.icon + '\"></i></a>');\r\n            pad.find('.pad-header').html('<a><i class=\"ion-navicon-round\"></i></a>');\r\n            \r\n            var body = '';\r\n            \r\n            _.forEach(meta.tools, function(tool, index){\r\n                if (tool.enabled) {\r\n                    body += '<div class=\"splitter\"></div>';    \r\n                    body += '<a data-link-tool=\"' + tool.name + '\" href=\"#\" title=\"' + tool.title + '\"><i class=\"' + tool.icon + '\"></i></a>';\r\n                    \r\n                }\r\n            });\r\n            \r\n            pad.find('.pad-body').html(body);\r\n            \r\n            this.cached.tools = meta.tools;\r\n            this.cached.link = link;\r\n            this.resume();\r\n        },\r\n\r\n        onLinkDeselect: function(e) {\r\n            this.suspend();\r\n        },\r\n        \r\n        onShapeToolClick: function(e) {\r\n            var target = Graph.$(e.currentTarget),\r\n                name = target.data('shapeTool');\r\n\r\n            var tool = _.find(this.cached.tools, function(t){\r\n                return t.name == name;\r\n            });\r\n\r\n            if (tool) {\r\n                if (tool.name == 'config') {\r\n                    var paper = this.vector();\r\n                    paper.fire('shapetoolclick', {\r\n                        shape: this.cached.shape\r\n                    });\r\n                } else if (tool.handler) {\r\n                    tool.handler(e);\r\n                }\r\n            }\r\n            \r\n            e.preventDefault();\r\n        },\r\n\r\n        onLinkToolClick: function(e) {\r\n            var target = Graph.$(e.currentTarget),\r\n                name = target.data('linkTool');\r\n            \r\n            var tool = _.find(this.cached.tools, function(t){\r\n                return t.name == name;\r\n            });\r\n\r\n            if (tool) {\r\n                if (tool.name == 'config') {\r\n                    var paper = this.vector();\r\n                    paper.fire('linktoolclick', {\r\n                        link: this.cached.link\r\n                    });\r\n                } else if (tool.handler) {\r\n                    tool.handler(e);\r\n                }\r\n            }\r\n            \r\n            e.preventDefault();  \r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Toolpad';\r\n        }\r\n        \r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Clipper = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            var me = this,\r\n                guid = vector.guid();\r\n\r\n            me.props.vector = guid;\r\n\r\n            if (vector.isPaper()) {\r\n                vector.on('keycopy', function(e){\r\n                    me.copy();\r\n                });\r\n\r\n                vector.on('keypaste', function(e){\r\n                    me.paste();\r\n                });\r\n            }\r\n\r\n            me.cached.clips = null;\r\n            me.cached.paste = 1;\r\n        },\r\n\r\n        vector: function() {\r\n            return Graph.registry.vector.get(this.props.vector);\r\n        },\r\n\r\n        invalidate: function() {\r\n            this.cached.clips = null;\r\n        },\r\n\r\n        cut: function() {\r\n\r\n        },\r\n\r\n        copy: function() {\r\n            var me = this,\r\n                paper = this.vector(),\r\n                selection = paper.collector().collection.toArray().slice();\r\n\r\n            me.cached.paste = 1;\r\n\r\n            if (selection.length) {\r\n                var clips = [],\r\n                    excludes = { \r\n                        guid: true,\r\n                        id: true\r\n                    };\r\n\r\n                _.forEach(selection, function(vector){\r\n                    var shape = Graph.registry.shape.get(vector);\r\n                    if (shape) {\r\n                        var data = shape.toJson(),\r\n                            clip = {};\r\n                        var key, val;\r\n\r\n                        for (key in data.props) {\r\n                            val = data.props[key];\r\n                            if ( ! excludes[key]) {\r\n                                clip[key] = val;\r\n                            }\r\n                        }\r\n                        clips.push(clip);\r\n                    }\r\n                });\r\n                this.cached.clips = clips;\r\n            } else {\r\n                this.cached.clips = null;\r\n            }\r\n        },\r\n\r\n        paste: function() {\r\n            var me = this,\r\n                clips = this.cached.clips,\r\n                paper = this.vector(),\r\n                scale = paper.layout().scale(),\r\n                collector = paper.collector();\r\n\r\n            if (clips && clips.length) {\r\n\r\n                collector.clearCollection();\r\n\r\n                _.forEach(clips, function(clip){\r\n                    var prop = _.cloneDeep(clip);  \r\n\r\n                    if (prop.left !== undefined) {\r\n                        prop.left += me.cached.paste * 20 / scale.x;\r\n                    }\r\n\r\n                    if (prop.top !== undefined) {\r\n                        prop.top += me.cached.paste * 20 / scale.y;\r\n                    }\r\n\r\n                    var shape = Graph.factory(Graph.ns(clip.type), [prop]);\r\n                    shape.render(paper);\r\n                    shape.select();\r\n                });\r\n\r\n                me.cached.paste++;\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.ns('Graph.shape.activity');\r\n\r\n    Graph.shape.activity.Start = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'Start',\r\n            width: 60,\r\n            height: 60,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            type: 'activity.start',\r\n            style: 'graph-shape-activity-start'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, label;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            var cx = this.props.width / 2,\r\n                cy = this.props.height / 2;\r\n\r\n            block = (new Graph.svg.Ellipse(cx, cy, cx, cy))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .style({\r\n                    fill: this.props.fill,\r\n                    stroke: this.props.stroke,\r\n                    strokeWidth: this.props.strokeWidth\r\n                })\r\n                .data('text', this.props.label)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            pmgr.install('dragger', block, {ghost: true, cls: Graph.styles.SHAPE_DRAG});\r\n            pmgr.install('network', block, {wiring: 'h:v'});\r\n            pmgr.install('resizer', block);\r\n            pmgr.install('editor',  block);\r\n            pmgr.install('snapper', block);\r\n\r\n            block.on('edit.shape',      _.bind(this.onLabelEdit, this));\r\n            block.on('beforedrag.shape', _.bind(this.onBeforeDrag, this));\r\n            block.on('afterdrag.shape',   _.bind(this.onAfterDrag, this));\r\n            block.on('afterresize.shape',    _.bind(this.onAfterResize, this));\r\n            block.on('beforedestroy.shape',    _.bind(this.onBeforeDestroy, this));\r\n            block.on('afterdestroy.shape',    _.bind(this.onAfterDestroy, this));\r\n            block.on('select.shape',    _.bind(this.onSelect, this));\r\n            block.on('deselect.shape',  _.bind(this.onDeselect, this));\r\n            block.on('connect.shape', _.bind(this.onConnect, this));\r\n\r\n            label = (new Graph.svg.Text(cx, cy, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n\r\n            shape = block = label = null;\r\n        },\r\n\r\n        refresh: function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n            \r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                label = this.component('label');\r\n\r\n            var matrix, bound, cx, cy;\r\n\r\n            bound  = block.bbox().toJson(),\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            cx = bound.width  / 2;\r\n            cy = bound.height / 2;\r\n\r\n            block.attr({\r\n                cx: cx,\r\n                cy: cy\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            label.attr({\r\n                x: cx,\r\n                y: cy\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n            // update props\r\n\r\n            matrix = shape.matrix();\r\n\r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Start';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.shape.activity.Final = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'End',\r\n            width: 60,\r\n            height: 60,\r\n            left: 0,\r\n            top: 0,\r\n            fill: '#FF4081'\r\n        },\r\n\r\n        metadata: {\r\n            type: 'activity.final',\r\n            style: 'graph-shape-activity-final'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, inner, label;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            var cx = this.props.width / 2,\r\n                cy = this.props.height / 2;\r\n\r\n            block = (new Graph.svg.Ellipse(cx, cy, cx, cy))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .style({\r\n                    stroke: this.props.stroke,\r\n                    strokeWidth: this.props.strokeWidth\r\n                })\r\n                .data('text', this.props.label)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            pmgr.install('dragger', block, {ghost: true, cls: Graph.styles.SHAPE_DRAG});\r\n            pmgr.install('network', block, {wiring: 'h:v'});\r\n            pmgr.install('resizer', block);\r\n            pmgr.install('editor',  block);\r\n            pmgr.install('snapper', block);\r\n\r\n            block.on('edit.shape',      _.bind(this.onLabelEdit, this));\r\n            block.on('beforedrag.shape', _.bind(this.onBeforeDrag, this));\r\n            block.on('afterdrag.shape',   _.bind(this.onAfterDrag, this));\r\n            block.on('afterresize.shape',    _.bind(this.onAfterResize, this));\r\n            block.on('beforedestroy.shape',    _.bind(this.onBeforeDestroy, this));\r\n            block.on('afterdestroy.shape',    _.bind(this.onAfterDestroy, this));\r\n            block.on('select.shape',    _.bind(this.onSelect, this));\r\n            block.on('deselect.shape',  _.bind(this.onDeselect, this));\r\n            block.on('connect.shape', _.bind(this.onConnect, this));\r\n\r\n            inner = (new Graph.svg.Ellipse(cx, cy, cx - 6, cy - 6))\r\n                .addClass('comp-inner')\r\n                .style({\r\n                    fill: this.props.fill\r\n                })\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            label = (new Graph.svg.Text(cx, cy, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .addClass('comp-label')\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n            comp.inner = inner.guid();\r\n\r\n            shape = block = label = inner = null;\r\n        },\r\n\r\n        fill: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.value;\r\n            }\r\n\r\n            this.component('inner').elem.css('fill', value);\r\n            this.props.fill = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        refresh: function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                inner = this.component('inner'),\r\n                label = this.component('label');\r\n\r\n            var matrix, bound, cx, cy;\r\n\r\n            bound  = block.bbox().toJson(),\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            cx = bound.width / 2,\r\n            cy = bound.height / 2;\r\n\r\n            block.attr({\r\n                cx: cx,\r\n                cy: cy\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            label.attr({\r\n                x: cx,\r\n                y: cy\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n            inner.attr({\r\n                cx: cx,\r\n                cy: cy,\r\n                rx: cx - 6,\r\n                ry: cy - 6\r\n            });\r\n\r\n            // update props\r\n            matrix = shape.matrix();\r\n\r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Final';\r\n        },\r\n\r\n        onAfterDestroy: function() {\r\n            // remove label\r\n            this.component('label').remove();\r\n\r\n            // remove inner\r\n            this.component('inner').remove();\r\n\r\n            // remove shape\r\n            this.component('shape').remove();\r\n\r\n            for (var name in this.components) {\r\n                this.components[name] = null;\r\n            }\r\n\r\n            Graph.registry.shape.unregister(this);\r\n            \r\n            this.fire('afterdestroy');\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.shape.activity.Action = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'Action',\r\n            width: 140,\r\n            height: 60,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            type: 'activity.action',\r\n            icon: Graph.icons.SHAPE_ACTION,\r\n            style: 'graph-shape-activity-action'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, label;\r\n\r\n            var cx = this.props.width / 2,\r\n                cy = this.props.height / 2;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Rect(0, 0, this.props.width, this.props.height))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .style({\r\n                    fill: this.props.fill,\r\n                    stroke: this.props.stroke,\r\n                    strokeWidth: this.props.strokeWidth\r\n                })\r\n                .data('text', this.props.label)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            pmgr.install('dragger', block, {ghost: true, cls: Graph.styles.SHAPE_DRAG});\r\n            pmgr.install('resizer', block);\r\n            pmgr.install('editor',  block);\r\n            pmgr.install('network', block, {wiring: 'h:v'});\r\n            pmgr.install('snapper', block);\r\n            pmgr.install('rotator', block);\r\n\r\n            block.on('edit.shape', _.bind(this.onLabelEdit, this));\r\n            block.on('beforedrag.shape', _.bind(this.onBeforeDrag, this));\r\n            block.on('afterdrag.shape', _.bind(this.onAfterDrag, this));\r\n            block.on('afterresize.shape', _.bind(this.onAfterResize, this));\r\n            block.on('beforedestroy.shape', _.bind(this.onBeforeDestroy, this));\r\n            block.on('afterdestroy.shape', _.bind(this.onAfterDestroy, this));\r\n            block.on('select.shape', _.bind(this.onSelect, this));\r\n            block.on('deselect.shape', _.bind(this.onDeselect, this));\r\n            block.on('connect.shape', _.bind(this.onConnect, this));\r\n            block.on('afterrotate.shape', _.bind(this.onAfterRotate, this));\r\n\r\n            label = (new Graph.svg.Text(cx, cy, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n\r\n            if (this.props.rotate) {\r\n                this.rotate(this.props.rotate);\r\n            }\r\n\r\n            shape = block = label = null;\r\n        },\r\n        \r\n        refresh: function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n            \r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                label = this.component('label');\r\n\r\n            var bound, matrix;\r\n\r\n            bound = block.bbox().toJson();\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            block.attr({\r\n                x: 0,\r\n                y: 0\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            label.attr({\r\n                x: bound.width  / 2,\r\n                y: bound.height / 2\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n            // update props\r\n\r\n\r\n            matrix = shape.matrix();\r\n            \r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        onAfterResize: function() {\r\n            this.refresh();\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Action';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.shape.activity.Fork = Graph.extend(Graph.shape.Shape, {\r\n        props: {\r\n            width: 300,\r\n            height: 15,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            type: 'activity.fork',\r\n            style: 'graph-shape-activity-fork'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, label;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Rect(0, 0, this.props.width, this.props.height, 0))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            pmgr.install('dragger', block, {ghost: true, cls: Graph.styles.SHAPE_DRAG});\r\n            pmgr.install('resizer', block);\r\n            pmgr.install('snapper', block);\r\n            pmgr.install('network', block, {\r\n                wiring: 'v:v', \r\n                tuning: false,\r\n                limitIncoming: 1,\r\n                limitOutgoing: 0\r\n            });\r\n\r\n            block.on('beforedrag.shape', _.bind(this.onBeforeDrag, this));\r\n            block.on('afterdrag.shape',   _.bind(this.onAfterDrag, this));\r\n            block.on('afterresize.shape',    _.bind(this.onAfterResize, this));\r\n            block.on('beforedestroy.shape',    _.bind(this.onBeforeDestroy, this));\r\n            block.on('afterdestroy.shape',    _.bind(this.onAfterDestroy, this));\r\n            block.on('select.shape',    _.bind(this.onSelect, this));\r\n            block.on('deselect.shape',  _.bind(this.onDeselect, this));\r\n            block.on('connect.shape', _.bind(this.onConnect, this));\r\n            \r\n            label = (new Graph.svg.Text(0, 0, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n        },\r\n\r\n        refresh: function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n            \r\n            var block = this.component('block'),\r\n                shape = this.component('shape');\r\n\r\n            var bound, matrix;\r\n\r\n            bound = block.bbox().toJson();\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            block.attr({\r\n                x: 0,\r\n                y: 0\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            matrix = shape.matrix();\r\n\r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Join';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.shape.activity.Join = Graph.extend(Graph.shape.Shape, {\r\n        props: {\r\n            width: 300,\r\n            height: 15,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            type: 'activity.join',\r\n            style: 'graph-shape-activity-join'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, label;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Rect(0, 0, this.props.width, this.props.height, 0))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            pmgr.install('dragger', block, {ghost: true, cls: Graph.styles.SHAPE_DRAG});\r\n            pmgr.install('resizer', block);\r\n            pmgr.install('snapper', block);\r\n            pmgr.install('network', block, {\r\n                wiring: 'v:v', \r\n                tuning: false,\r\n                limitIncoming: 0,\r\n                limitOutgoing: 1\r\n            });\r\n\r\n            block.on('beforedrag.shape', _.bind(this.onBeforeDrag, this));\r\n            block.on('afterdrag.shape',   _.bind(this.onAfterDrag, this));\r\n            block.on('afterresize.shape',    _.bind(this.onAfterResize, this));\r\n            block.on('beforedestroy.shape',    _.bind(this.onBeforeDestroy, this));\r\n            block.on('afterdestroy.shape',    _.bind(this.onAfterDestroy, this));\r\n            block.on('select.shape',    _.bind(this.onSelect, this));\r\n            block.on('deselect.shape',  _.bind(this.onDeselect, this));\r\n            block.on('connect.shape', _.bind(this.onConnect, this));\r\n            \r\n            label = (new Graph.svg.Text(0, 0, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n        },\r\n\r\n        refresh: function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n            \r\n            var block = this.component('block'),\r\n                shape = this.component('shape');\r\n\r\n            var bound, matrix;\r\n\r\n            bound = block.bbox().toJson();\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            block.attr({\r\n                x: 0,\r\n                y: 0\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            matrix = shape.matrix();\r\n\r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Join';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var TRANSFER_RECEIVE = 'receive',\r\n        TRANSFER_DISPOSE = 'dispose';\r\n\r\n    Graph.shape.activity.Lane = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'Participant Role',\r\n            width: 1000,\r\n            height: 200,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        components: {\r\n            header: null\r\n        },\r\n\r\n        tree: {\r\n            pool: null\r\n        },\r\n\r\n        transfer: null,\r\n\r\n        resizing: null,\r\n\r\n        metadata: {\r\n            type: 'activity.lane',\r\n            icon: Graph.icons.SHAPE_LANE,\r\n            style: 'graph-shape-activity-lane'\r\n        },\r\n\r\n        constructor: function(options) {\r\n            this.superclass.prototype.constructor.call(this, options);\r\n            this.initDropzone();\r\n        },\r\n\r\n        initMetadata: function() {\r\n            this.metadata.tools = [\r\n                {\r\n                    name: 'config',\r\n                    icon: Graph.icons.CONFIG,\r\n                    title: Graph._('Click to config shape'),\r\n                    enabled: true\r\n                },\r\n                {\r\n                    name: 'above',\r\n                    icon: Graph.icons.LANE_ABOVE,\r\n                    title: Graph._('Add shape above'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onAboveToolClick, this)\r\n                },\r\n                {\r\n                    name: 'below',\r\n                    icon: Graph.icons.LANE_BELOW,\r\n                    title: Graph._('Add shape below'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBelowToolClick, this)\r\n                },\r\n                {\r\n                    name: 'moveup',\r\n                    icon: Graph.icons.MOVE_UP,\r\n                    title: Graph._('Move up'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onUpToolClick, this)\r\n                },\r\n                {\r\n                    name: 'movedown',\r\n                    icon: Graph.icons.MOVE_DOWN,\r\n                    title: Graph._('Move down'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onDownToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtofront',\r\n                    icon: Graph.icons.SEND_TO_FRONT,\r\n                    title: Graph._('Send to front'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onFrontToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtoback',\r\n                    icon: Graph.icons.SEND_TO_BACK,\r\n                    title: Graph._('Send to back'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBackToolClick, this)\r\n                },\r\n                {\r\n                    name: 'trash',\r\n                    icon: Graph.icons.TRASH,\r\n                    title: Graph._('Click to remove shape'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onTrashToolClick, this)\r\n                }\r\n            ];\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, header, label, child;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Rect(0, 0, this.props.width, this.props.height, 0))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            pmgr.install('resizer', block, {restriction: { width: 200, height: 100 }});\r\n            pmgr.install('dragger', block, {ghost: true, batchSync: false, cls: Graph.styles.SHAPE_DRAG});\r\n\r\n            block.on('beforedrag.shape', _.bind(this.onBeforeDrag, this));\r\n            block.on('afterdrag.shape',   _.bind(this.onAfterDrag, this));\r\n            block.on('beforeresize.shape', _.bind(this.onBeforeResize, this));\r\n            block.on('afterresize.shape',    _.bind(this.onAfterResize, this));\r\n            block.on('beforedestroy.shape',    _.bind(this.onBeforeDestroy, this));\r\n            block.on('afterdestroy.shape',    _.bind(this.onAfterDestroy, this));\r\n            block.on('select.shape',    _.bind(this.onSelect, this));\r\n            block.on('deselect.shape',  _.bind(this.onDeselect, this));\r\n\r\n            header = (new Graph.svg.Rect(0, 0, 30, this.props.height, 0))\r\n                .addClass(Graph.styles.SHAPE_HEADER)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            header.data('text', this.props.label);\r\n\r\n            pmgr.install('editor', header, {\r\n                width: 200, \r\n                height: 100,\r\n                offset: 'pointer'\r\n            });\r\n\r\n            header.on('edit.shape', _.bind(this.onLabelEdit, this));\r\n\r\n            var tx = 15,\r\n                ty = this.props.height / 2;\r\n\r\n            label = (new Graph.svg.Text(tx, ty, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(shape);\r\n\r\n            label.rotate(270, tx, ty).commit();\r\n\r\n            child = (new Graph.svg.Group())\r\n                .addClass(Graph.styles.SHAPE_CHILD)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            child.translate(50, 0).commit();\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.header = header.guid();\r\n            comp.label = label.guid();\r\n            comp.child = child.guid();\r\n\r\n            // set virtual pool\r\n            this.tree.pool = new Graph.shape.activity.Pool();\r\n            this.tree.pool.insert(this);\r\n\r\n            shape = block = header = label = null;\r\n        },\r\n\r\n        initDropzone: function() {\r\n            var me = this,\r\n                comp = me.component(),\r\n                block = me.component('block'),\r\n                children = me.children();\r\n\r\n            block.interactable().dropzone({\r\n                accept: '.shape-draggable',\r\n                overlap: .2\r\n            })\r\n            .on('dragenter', function laneDragEnter(e){\r\n                var poolGuid = me.pool().guid,\r\n                    laneGuid = me.guid();\r\n\r\n                var vector, shape, batch;\r\n\r\n                if ( ! me.transfer) {\r\n                    vector = Graph.registry.vector.get(e.relatedTarget);\r\n\r\n                    if (vector) {\r\n\r\n                        shape = Graph.registry.shape.get(vector);\r\n\r\n                        if (shape) {\r\n\r\n                            if (\r\n                                (shape.guid() == laneGuid) || \r\n                                (shape.is('activity.lane') && shape.pool().guid == poolGuid)\r\n                            ) {\r\n                                return;\r\n                            }\r\n\r\n                            me.transfer = {\r\n                                shape: shape,\r\n                                batch: []\r\n                            };\r\n\r\n                            me.transfer.shape.on('afterdrag', onTransferEnd);\r\n                            me.transfer.batch = [shape];\r\n\r\n                            var collector = vector.collector();\r\n\r\n                            if (collector) {\r\n                                batch = collector.collection.toArray().slice();\r\n                                \r\n                                _.forEach(batch, function(v){\r\n                                    var s = Graph.registry.shape.get(v);\r\n                                    if (s && s.guid() != shape.guid()) {\r\n                                        me.transfer.batch.push(s);\r\n                                    }\r\n                                });\r\n\r\n                                batch = null;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (me.transfer) {\r\n                    comp.addClass('receiving');\r\n                }\r\n            })\r\n            .on('dragleave', function laneDragLeave(e){\r\n                comp.removeClass('receiving');\r\n            })\r\n            .on('drop', function laneDrop(e){\r\n                if (me.transfer) {\r\n                    var delay;\r\n\r\n                    delay = _.delay(function(){\r\n                        clearTimeout(delay);\r\n                        delay = null;\r\n\r\n                        // takeout lane from batch\r\n                        var appended = [],\r\n                            lanes = [],\r\n                            poolGuid = me.pool().guid,\r\n                            laneGuid = me.guid();\r\n\r\n                        _.forEach(me.transfer.batch, function(shape){\r\n                            if (shape.is('activity.lane')) {\r\n                                if (shape.guid() != laneGuid && shape.pool().guid != poolGuid) {\r\n                                    lanes.push(shape);\r\n                                }\r\n                            } else {\r\n                                appended.push(shape);\r\n                            }\r\n                        });\r\n\r\n                        if (appended.length) {\r\n                            me.addChild(appended);\r\n                        }\r\n\r\n                        if (lanes.length) {\r\n                            me.addSiblingBellow(lanes);\r\n                        }\r\n\r\n                    }, 0);\r\n\r\n                }\r\n\r\n                comp.removeClass('receiving');\r\n            });\r\n\r\n            block = null;\r\n\r\n            /////////\r\n\r\n            function onTransferEnd() {\r\n                var delay;\r\n\r\n                delay = _.delay(function(){\r\n\r\n                    clearTimeout(delay);\r\n                    delay = null;\r\n\r\n                    me.transfer.shape.off('afterdrag', onTransferEnd);\r\n                    me.transfer = null;\r\n\r\n                }, 0);\r\n            }\r\n        },\r\n\r\n        pool: function() {\r\n            return this.tree.pool;\r\n        },\r\n\r\n        // @Override\r\n        render: function(paper, method, sibling) {\r\n            var component = this.component();\r\n\r\n            method = _.defaultTo(method, 'prepend');\r\n\r\n            component.render(paper, method, sibling);\r\n\r\n            // save\r\n            this.tree.paper = paper.guid();\r\n            Graph.registry.shape.setContext(this.guid(), paper.guid());\r\n        },\r\n\r\n        sendToBack: function() {\r\n            var paper = this.paper();\r\n        },\r\n\r\n        sendToFront: function() {\r\n            this.pool().bringToFront(this);\r\n        },\r\n\r\n        refresh: function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                child = this.component('child'),\r\n                header = this.component('header'),\r\n                label = this.component('label');\r\n\r\n            var matrix, bound;\r\n\r\n            bound  = block.bbox().toJson();\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n            shape.dirty(true);\r\n            child.dirty(true);\r\n\r\n            block.attr({\r\n                x: 0,\r\n                y: 0\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            header.attr({\r\n                x: 0,\r\n                y: 0,\r\n                height: bound.height\r\n            });\r\n\r\n            header.dirty(true);\r\n\r\n            var tx = 15,\r\n                ty = bound.height / 2;\r\n\r\n            label.graph.matrix = Graph.matrix();\r\n            label.attr('transform', '');\r\n\r\n            label.attr({\r\n                x: tx,\r\n                y: ty\r\n            });\r\n\r\n            label.wrap(bound.height - 10);\r\n            label.rotate(270, tx, ty).commit();\r\n\r\n            // update props\r\n\r\n            matrix = shape.matrix();\r\n\r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            var result = this.superclass.prototype.attr.call(this, name, value),\r\n                maps = {\r\n                    width: 'width',\r\n                    height: 'height',\r\n                    left: 'x',\r\n                    top: 'y'\r\n                };\r\n\r\n            var block, key, val;\r\n\r\n            if (_.isPlainObject(name)) {\r\n\r\n                block = this.component('block');\r\n\r\n                for (key in name) {\r\n                    if (maps[key]) {\r\n                        val = name[key];\r\n                        block.attr(maps[key], val);\r\n                    }\r\n                }\r\n\r\n                this.refresh();\r\n\r\n            } else if (value !== undefined) {\r\n                block = this.component('block');\r\n\r\n                if (maps[name]) {\r\n                    block.attr(maps[name], value);\r\n                }\r\n\r\n                this.refresh();\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        height: function(value) {\r\n            if (value !== undefined) {\r\n                var childBox = this.component('child').bbox().toJson();\r\n                value = Math.max(value, (childBox.y + childBox.height + 20));    \r\n            }\r\n\r\n            return this.superclass.prototype.height.call(this, value);\r\n        },\r\n\r\n        width: function(value) {\r\n            if (value !== undefined) {\r\n                var childBox = this.component('child').bbox().toJson();\r\n                value = Math.max(value, (childBox.x + childBox.width + 20));\r\n            }\r\n\r\n            return this.superclass.prototype.width.call(this, value);\r\n        },\r\n\r\n        stroke: function(value) {\r\n            var result = this.superclass.prototype.stroke.call(this, value);\r\n            if (value !== undefined) {\r\n                this.component('header').elem.css('stroke', this.props.stroke);\r\n            }\r\n            return result;\r\n        },\r\n\r\n        addChild: function(child, redraw) {\r\n            this.superclass.prototype.addChild.call(this, child, redraw);\r\n            this.pool().invalidate();\r\n        },\r\n\r\n        removeChild: function(child) {\r\n            this.superclass.prototype.removeChild.call(this, child);\r\n            this.pool().invalidate();\r\n        },\r\n\r\n        addSiblingBellow: function(lanes) {\r\n            if ( ! _.isArray(lanes)) {\r\n                lanes = [lanes];\r\n            }\r\n\r\n            var pool = this.pool(),\r\n                height = _.reduce(\r\n                    _.map(lanes, function(lane){\r\n                        return lane.height();\r\n                    }),\r\n                    function(result, curr) {\r\n                        return result + curr;\r\n                    },\r\n                    0\r\n                ),\r\n                offsetWidth = this.width(),\r\n                offsetLeft = this.left(),\r\n                offsetTop = (this.top() + this.height());\r\n\r\n            pool.createSpaceBellow(this, height);\r\n\r\n            _.forEach(lanes, function(lane){\r\n\r\n                var boxBefore = lane.component().bboxView().clone().toJson();\r\n                var boxAfter, dx, dy;\r\n\r\n                lane.component().reset();\r\n\r\n                lane.attr({\r\n                    width: offsetWidth,\r\n                    left: offsetLeft,\r\n                    top: offsetTop\r\n                });\r\n\r\n                height = lane.height();\r\n                offsetTop += height;\r\n                \r\n                lane.tree.pool = pool;\r\n                pool.insert(lane);\r\n\r\n                lane.children().each(function(c){\r\n                    var netcom = c.connectable().component();\r\n                    netcom && (netcom.dirty(true));\r\n                });\r\n\r\n                boxAfter = lane.component().bboxView().toJson();\r\n\r\n                dx = boxAfter.x - boxBefore.x;\r\n                dy = boxAfter.y - boxBefore.y;\r\n\r\n                pool.relocateLinks(dx, dy, lane);\r\n                \r\n            });\r\n\r\n            pool.invalidate();\r\n            this.refreshSnapper();\r\n            \r\n        },\r\n\r\n        createSiblingAbove: function(options) {\r\n            var sibling = new Graph.shape.activity.Lane(options),\r\n                paper = this.paper(),\r\n                pool = this.pool();\r\n\r\n            // create space above\r\n            pool.createSpaceAbove(this, sibling.height());\r\n\r\n            // sync position 'above'\r\n            var top = (this.top() - sibling.height());\r\n\r\n            sibling.attr({\r\n                width: this.props.width,\r\n                left: this.props.left,\r\n                top: top\r\n            });\r\n\r\n            // sync pool\r\n            sibling.tree.pool = pool;\r\n\r\n            var result = pool.insert(sibling);\r\n\r\n            if (result !== undefined) {\r\n                sibling.render(paper, 'before', this.component());\r\n                pool.invalidate();\r\n                this.refreshSnapper();\r\n            }\r\n\r\n            return sibling;\r\n        },\r\n\r\n        createSiblingBellow: function(options) {\r\n            var sibling = new Graph.shape.activity.Lane(options),\r\n                paper = this.paper(),\r\n                pool = this.pool();\r\n\r\n            // create space\r\n            pool.createSpaceBellow(this, sibling.height());\r\n\r\n            // sync position 'bellow'\r\n            var bottom = (this.top() + this.height());\r\n\r\n            sibling.attr({\r\n                width: this.props.width,\r\n                left: this.props.left,\r\n                top: bottom\r\n            });\r\n\r\n            // sync pool\r\n            sibling.tree.pool = pool;\r\n\r\n            var result = pool.insert(sibling);\r\n\r\n            if (result !== undefined) {\r\n                sibling.render(paper, 'after', this.component());\r\n                pool.invalidate();\r\n                this.refreshSnapper();\r\n            }\r\n\r\n            return sibling;\r\n        },\r\n\r\n        refreshSnapper: function() {\r\n            this.paper().snapper().refresh();\r\n        },\r\n\r\n        autoResize: function() {\r\n\r\n            var shapeComponent = this.component(),\r\n                blockComponent = this.component('block');\r\n\r\n            if (blockComponent.isSelected()) {\r\n                blockComponent.deselect();\r\n            }\r\n\r\n            var bbox = this.bbox().toJson(),\r\n                actualBBox = shapeComponent.bbox().toJson(),\r\n                blockComponent = this.component('block'),\r\n                padding = {\r\n                    top: 20,\r\n                    bottom: 20,\r\n                    left: 40,\r\n                    right: 20\r\n                };\r\n\r\n            var bounds = _.extend({}, bbox);\r\n\r\n            if (actualBBox.y + padding.top - bbox.y < padding.top) {\r\n                bounds.y = actualBBox.y - padding.top;\r\n            }\r\n\r\n            if (actualBBox.x + padding.left - bbox.x < padding.left) {\r\n                bounds.x = actualBBox.x - padding.left;\r\n            }\r\n\r\n            if (bbox.x2 - actualBBox.x2 + padding.right < padding.right) {\r\n                bounds.x2 = actualBBox.x2 + padding.right;\r\n            }\r\n\r\n            if (bbox.y2 - actualBBox.y2 + padding.bottom < padding.bottom) {\r\n                bounds.y2 = actualBBox.y2 + padding.bottom;\r\n            }\r\n\r\n            var dx = bounds.x - bbox.x,\r\n                dy = bounds.y - bbox.y;\r\n\r\n            var width = bounds.x2 - bounds.x,\r\n                height = bounds.y2 - bounds.y;\r\n\r\n            var pool = this.pool(),\r\n                curr = this.guid(),\r\n                lanes = pool.populateChildren(),\r\n                childOffsets = {};\r\n\r\n            lanes.each(function(lane){\r\n                var childBox = lane.component('child').bboxView().toJson();\r\n                childOffsets[lane.guid()] = {\r\n                    x: childBox.x,\r\n                    y: childBox.y\r\n                };\r\n            });\r\n\r\n            this.translate(dx, dy);\r\n\r\n            this.attr({\r\n                width: width,\r\n                height: height\r\n            });\r\n\r\n            pool.resizeBy(this);\r\n\r\n            lanes.each(function(lane){\r\n                var child = lane.component('child'),\r\n                    childBox = child.bboxView().toJson(),\r\n                    offset = childOffsets[lane.guid()]\r\n\r\n                if (offset) {\r\n                    var dx = offset.x - childBox.x,\r\n                        dy = offset.y - childBox.y;\r\n\r\n                    child.translate(dx, dy).commit();\r\n                }\r\n\r\n            });\r\n\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Lane';\r\n        },\r\n\r\n        toJson: function() {\r\n            var result = this.superclass.prototype.toJson.call(this);\r\n            result.props.pool = this.pool().guid;\r\n            return result;\r\n        },\r\n\r\n        onAfterDestroy: function() {\r\n            var me = this, guid = this.guid();\r\n\r\n            me.cascade(function(shape){\r\n                if (shape.guid() != guid) {\r\n                    shape.remove();\r\n                }\r\n            });\r\n\r\n            this.pool().remove(this);\r\n\r\n            // remove child\r\n            this.component('child').remove();\r\n\r\n            // remove label\r\n            this.component('label').remove();\r\n\r\n            // remove header\r\n            this.component('header').remove();\r\n\r\n            // remove shape\r\n            this.component('shape').remove();\r\n\r\n            for (var name in this.components) {\r\n                this.components[name] = null;\r\n            }\r\n\r\n            Graph.registry.shape.unregister(this);\r\n            this.fire('afterdestroy');\r\n        },\r\n\r\n        onChildConnect: function(e) {\r\n            var sourceParent = e.source.parent(),\r\n                targetParent = e.target.parent();\r\n\r\n            if (sourceParent && targetParent) {\r\n                var sourcePool = sourceParent.pool(),\r\n                    targetPool = targetParent.pool();\r\n\r\n                if (sourcePool.guid != targetPool.guid) {\r\n                    e.link.type('message');\r\n                }\r\n            }\r\n        },\r\n\r\n        onChildBeforeDestroy: function(e) {\r\n            this.superclass.prototype.onChildBeforeDestroy.call(this, e);\r\n            this.pool().invalidate();\r\n        },\r\n\r\n        onSelect: function(e) {\r\n            var me = this, guid = me.guid();\r\n\r\n            var delay = _.delay(function(){\r\n\r\n                clearTimeout(delay);\r\n                delay = null;\r\n\r\n                me.cascade(function(curr){\r\n                    if (curr.guid() != guid) {\r\n                        var vector, network;\r\n\r\n                        // deselect shape\r\n                        vector = curr.draggable().component();\r\n\r\n                        if (vector) {\r\n                            vector.deselect();\r\n                        }\r\n\r\n                        // deselect links\r\n                        network = curr.connectable().plugin();\r\n\r\n                        if (network) {\r\n                            var connections = network.connections();\r\n                            _.forEach(connections, function(conn){\r\n                                conn.link.deselect();\r\n                            });\r\n                        }\r\n                        \r\n                    }\r\n                });\r\n\r\n                me.component('shape').addClass('shape-selected');\r\n                Graph.topic.publish('shape:select', {shape: me});\r\n\r\n            }, 0);\r\n        },\r\n\r\n        onBeforeDrag: function(e) {\r\n            if (e.master) {\r\n\r\n                this.fire(e);\r\n                this.paper().diagram().capture();\r\n\r\n                var links = this.pool().populateLinks();\r\n                var link, key;\r\n\r\n                for (key in links.isolated) {\r\n                    link = links.isolated[key].link;\r\n                    link.deselect();\r\n                }\r\n\r\n                for (key in links.separated) {\r\n                    link = links.separated[key].link;\r\n                    link.deselect();\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        onAfterDrag: function(e) {\r\n            if (e.master) {\r\n                var blockComponent = this.component('block'),\r\n                    shapeComponent = this.component('shape'),\r\n                    childComponent = this.component('child'),\r\n                    blockMatrix = blockComponent.matrix(),\r\n                    pool = this.pool();\r\n\r\n                var shapeMatrix;\r\n\r\n                blockComponent.reset();\r\n\r\n                shapeComponent.matrix().multiply(blockMatrix);\r\n                shapeComponent.attr('transform', shapeComponent.matrix().toValue());\r\n                shapeComponent.dirty(true);\r\n                childComponent.dirty(true);\r\n\r\n                // update props\r\n                shapeMatrix = shapeComponent.matrix();\r\n\r\n                this.data({\r\n                    left: shapeMatrix.props.e,\r\n                    top: shapeMatrix.props.f\r\n                });\r\n\r\n                // forward\r\n                this.fire(e);\r\n\r\n                // sync other\r\n                pool.relocateSiblings(this, e.dx, e.dy);\r\n                pool.refreshContents();\r\n\r\n                // sync links\r\n                pool.relocateLinks(e.dx, e.dy);\r\n                pool.refreshChildren();\r\n\r\n                this.refreshSnapper();\r\n            }\r\n\r\n        },\r\n\r\n        onBeforeResize: function(e){\r\n            this.resizing = {\r\n                childOffsets: {}\r\n            };\r\n\r\n            // set resize restriction\r\n            // calculate max children bound for all lanes\r\n            var bounds = this.component('child').bboxView().toJson(),\r\n                lanes = this.pool().populateChildren(),\r\n                resizing = this.resizing;\r\n\r\n            lanes.each(function(lane){\r\n                var laneChildComponent = lane.component('child'),\r\n                    laneChildBox = laneChildComponent.bboxView().toJson();\r\n\r\n                resizing.childOffsets[lane.guid()] = {\r\n                    x: laneChildBox.x,\r\n                    y: laneChildBox.y\r\n                };\r\n\r\n                if (laneChildBox.x < bounds.x) {\r\n                    bounds.x = laneChildBox.x;\r\n                }\r\n\r\n                if (bounds.x2 < laneChildBox.x2) {\r\n                    bounds.x2 = laneChildBox.x2;\r\n                }\r\n\r\n            });\r\n\r\n            var resizer = e.resizer,\r\n                direction = e.direction,\r\n                origin = {\r\n                    x: bounds.x, \r\n                    y: bounds.y\r\n                },\r\n                padding = {\r\n                    top: 10,\r\n                    left: 40,\r\n                    right: 10,\r\n                    bottom: 10\r\n                };\r\n\r\n            switch(direction) {\r\n                case 'n':\r\n                    origin.x = (bounds.x + bounds.x2) / 2;\r\n                    origin.y = bounds.y2 - padding.bottom;\r\n                    break;\r\n                case 'e':\r\n                    origin.x = bounds.x + padding.right;\r\n                    origin.y = (bounds.y + bounds.y2) / 2;\r\n                    break;\r\n                case 's':\r\n                    origin.x = (bounds.x + bounds.x2) / 2;\r\n                    origin.y = bounds.y + padding.top;\r\n                    break;\r\n                case 'w':\r\n                    origin.x = bounds.x2 - padding.left;\r\n                    origin.y = (bounds.y + bounds.y2) / 2;\r\n                    break;\r\n                case 'ne':\r\n                    origin.x = bounds.x + padding.right;\r\n                    origin.y = bounds.y2 - padding.bottom;\r\n                    break;\r\n                case 'se':\r\n                    origin.x = bounds.x + padding.right;\r\n                    origin.y = bounds.y + padding.top;\r\n                    break;\r\n                case 'sw':\r\n                    origin.x = bounds.x2 - padding.left;\r\n                    origin.y = bounds.y + padding.top;\r\n                    break;\r\n                case 'nw':\r\n                    origin.x = bounds.x2 - padding.left;\r\n                    origin.y = bounds.y2 - padding.bottom;\r\n                    break;\r\n            }\r\n\r\n            var width = bounds.x2 - bounds.x,\r\n                height = bounds.y2 - bounds.y;\r\n\r\n            if (width <= 0) {\r\n                width = 200;\r\n            }\r\n\r\n            if (height <= 0) {\r\n                height = 100;\r\n            }\r\n\r\n            resizer.restrict({\r\n                width: width,\r\n                height: height,\r\n                origin: origin\r\n            });\r\n\r\n        },\r\n\r\n        onAfterResize: function(e) {\r\n            this.superclass.prototype.onAfterResize.call(this, e);\r\n\r\n            var pool = this.pool();\r\n            pool.resizeBy(this);\r\n\r\n            if (this.resizing) {\r\n                var lanes = pool.populateChildren(),\r\n                    resizing = this.resizing;\r\n\r\n                lanes.each(function(lane){\r\n                    var child = lane.component('child'),\r\n                        childBox = child.bboxView().toJson(),\r\n                        offset = resizing.childOffsets[lane.guid()];\r\n\r\n                    if (offset) {\r\n                        var dx = offset.x - childBox.x,\r\n                            dy = offset.y - childBox.y;\r\n\r\n                        child.translate(dx, dy).commit();\r\n                    }\r\n\r\n                });\r\n\r\n                this.resizing = resizing = null;\r\n            }\r\n\r\n        },\r\n\r\n        onAboveToolClick: function(e) {\r\n            this.createSiblingAbove();\r\n        },\r\n\r\n        onBelowToolClick: function(e) {\r\n            this.createSiblingBellow();\r\n        },\r\n\r\n        onUpToolClick: function(e) {\r\n            this.pool().moveUp(this);\r\n            this.refreshSnapper();\r\n        },\r\n\r\n        onDownToolClick: function(e) {\r\n            this.pool().moveDown(this);\r\n            this.refreshSnapper();\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    /**\r\n     * Virtual pool for lanes\r\n     */\r\n\r\n    var Pool = Graph.shape.activity.Pool = function() {\r\n        this.guid = 'pool-' + (++Pool.guid);\r\n\r\n        // tree nodes\r\n        this.lanes = (new Graph.collection.Tree([]))\r\n            .keygen(function(lane){\r\n                return lane.bbox.y;\r\n                // return (lane.bbox.y + (1e-9 * lane.bbox.x));\r\n            });\r\n\r\n        this.cached = {\r\n            nodes: {},\r\n            contents: null\r\n        };\r\n    };\r\n\r\n    Pool.prototype.invalidate = function() {\r\n        this.cached.contents = null;\r\n    };\r\n\r\n    Pool.prototype.populateChildren = function() {\r\n        var children = [];\r\n\r\n        _.forEach(this.lanes.toArray(), function(node){\r\n            var lane = Graph.registry.shape.get(node.lane);\r\n            children.push(lane);\r\n        });\r\n\r\n        return new Graph.collection.Shape(children);\r\n    };\r\n\r\n    Pool.prototype.bbox = function() {\r\n        var nodes = this.lanes.toArray(),\r\n             x = [],\r\n             y = [],\r\n            x2 = [],\r\n            y2 = [];\r\n\r\n        var bbox;\r\n\r\n        for (var i = nodes.length - 1; i >= 0; i--) {\r\n            bbox = nodes[i].bbox;\r\n\r\n            x.push(bbox.x);\r\n            y.push(bbox.y);\r\n\r\n            x2.push(bbox.x + bbox.width);\r\n            y2.push(bbox.y + bbox.height);\r\n        }\r\n\r\n         x = _.min(x);\r\n         y = _.min(y);\r\n        x2 = _.max(x2);\r\n        y2 = _.max(y2);\r\n\r\n        nodes = null;\r\n\r\n        return Graph.bbox({\r\n            x: x,\r\n            y: y,\r\n            x2: x2,\r\n            y2: y2,\r\n            width: x2 - x,\r\n            height: y2 - y\r\n        });\r\n    };\r\n\r\n    Pool.prototype.get = function(index) {\r\n        var data = this.lanes.get(index);\r\n        if (data) {\r\n            return Graph.registry.shape.get(data.lane);\r\n        }\r\n        return null;\r\n    };\r\n\r\n    Pool.prototype.prev = function(lane) {\r\n        var index = this.index(lane),\r\n            prev = this.lanes.get(index - 1);\r\n\r\n        if (prev) {\r\n            return Graph.registry.shape.get(prev.lane);\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    Pool.prototype.last = function() {\r\n        var index = this.size() - 1,\r\n            last = this.lanes.get(index);\r\n\r\n        if (last) {\r\n            return Graph.registry.shape.get(last.lane);\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Create new space\r\n     */\r\n    Pool.prototype.createSpaceAbove = function(lane, height) {\r\n        var laneIndex = this.index(lane),\r\n            prev = this.lanes.get(laneIndex - 1),\r\n            me = this;\r\n\r\n        if (prev) {\r\n            this.lanes.bubble(prev, function(curr){\r\n                var shape = Graph.registry.shape.get(curr.lane);\r\n                if (shape) {\r\n                    shape.translate(0, -height);\r\n                    curr.bbox = shape.bbox().toJson();\r\n\r\n                    shape.children().each(function(c){\r\n                        var comnet = c.connectable().component();\r\n                        comnet && (comnet.dirty(true));\r\n                    });\r\n\r\n                    me.relocateLinks(0, -height, shape);\r\n                }\r\n            });\r\n            this.lanes.order();\r\n        }\r\n    };\r\n\r\n    Pool.prototype.createSpaceBellow = function(lane, height) {\r\n        var laneIndex = this.index(lane),\r\n            next = this.lanes.get(laneIndex + 1),\r\n            me = this;\r\n\r\n        if (next) {\r\n            this.lanes.cascade(next, function(curr){\r\n                var shape = Graph.registry.shape.get(curr.lane);\r\n                if (shape) {\r\n                    shape.translate(0, height);\r\n                    curr.bbox = shape.bbox().toJson();\r\n\r\n                    shape.children().each(function(c){\r\n                        var comnet = c.connectable().component();\r\n                        comnet && (comnet.dirty(true));\r\n                    });\r\n\r\n                    me.relocateLinks(0, height, shape);\r\n                }\r\n            });\r\n            this.lanes.order();\r\n        }\r\n    };\r\n\r\n    Pool.prototype.relocateSiblings = function(lane, dx, dy) {\r\n        var root = this.lanes.root(),\r\n            guid = lane.guid();\r\n\r\n        if (root) {\r\n            this.lanes.cascade(root, function(curr){\r\n                if (curr.lane == guid) {\r\n                    curr.bbox = lane.bbox().toJson();\r\n                } else {\r\n                    var shape = Graph.registry.shape.get(curr.lane);\r\n                    if (shape) {\r\n                        shape.translate(dx, dy);\r\n                        curr.bbox = shape.bbox().toJson();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    Pool.prototype.resizeBy = function(lane) {\r\n        var guid = lane.guid(),\r\n            bbox = lane.bbox().toJson(),\r\n            root = this.lanes.root(),\r\n            index = this.index(lane);\r\n\r\n        if (root) {\r\n\r\n            // sample\r\n            var prev, next, dx1, dx2, dy1, dy2;\r\n\r\n            prev = this.lanes.get(index - 1);\r\n            next = this.lanes.get(index + 1);\r\n\r\n            dx1 = 0;\r\n            dy1 = 0;\r\n\r\n            dx2 = 0\r\n            dy2 = 0;\r\n\r\n            if (prev) {\r\n                dx1 = bbox.x - prev.bbox.x;\r\n                dy1 = bbox.y - (prev.bbox.y + prev.bbox.height);\r\n            }\r\n\r\n            if (next) {\r\n                dx2 = bbox.x - next.bbox.x;\r\n                dy2 = (bbox.y + bbox.height) - next.bbox.y;\r\n            }\r\n\r\n            this.lanes.cascade(root, function(curr, i){\r\n                if (curr.lane == guid) {\r\n                    curr.bbox = bbox;\r\n                } else {\r\n                    var shape = Graph.registry.shape.get(curr.lane);\r\n                    if (shape) {\r\n\r\n                        var group = shape.component(),\r\n                            block = shape.component('block');\r\n\r\n                        // up\r\n                        if (index > i) {\r\n                            shape.translate(dx1, dy1);\r\n                        }\r\n                        // down\r\n                        else if (index < i) {\r\n                            shape.translate(dx2, dy2);\r\n                        }\r\n\r\n                        block.attr({\r\n                            width: bbox.width\r\n                        });\r\n\r\n                        block.dirty(true);\r\n                        shape.refresh();\r\n\r\n                        curr.bbox = shape.bbox().toJson();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        bbox = null;\r\n    };\r\n\r\n    Pool.prototype.bringToFront = function(lane) {\r\n        var sets = Graph.$('[data-pool=\"' + this.guid + '\"]'),\r\n            last = sets.last();\r\n\r\n        if (last.length()) {\r\n            if (last.node() != lane.component().node()) {\r\n                last.after(lane.component().elem);\r\n            }\r\n        }\r\n    };\r\n\r\n    Pool.prototype.moveUp = function(lane) {\r\n        var index = this.index(lane),\r\n            prev  = this.get(index - 1),\r\n            laneNode = this.lanes.get(index),\r\n            prevNode = this.lanes.get(index - 1);\r\n\r\n        if (prev) {\r\n            var laneBox = lane.bbox().toJson(),\r\n                prevBox = prev.bbox().toJson();\r\n\r\n            var dx1 = 0,\r\n                dy1 = prevBox.y - laneBox.y,\r\n                dx2 = 0,\r\n                dy2 = laneBox.height;\r\n\r\n            laneNode.bbox.y  += dy1;\r\n            laneNode.bbox.y2 += dy1;\r\n\r\n            prevNode.bbox.y  += dy2;\r\n            prevNode.bbox.y2 += dy2;\r\n\r\n            lane.translate(dx1, dy1);\r\n            prev.translate(dx2, dy2);\r\n\r\n            this.lanes.order();\r\n\r\n            lane.children().each(function(c){\r\n                var comnet = c.connectable().component();\r\n                comnet && (comnet.dirty(true));\r\n            });\r\n\r\n            prev.children().each(function(c){\r\n                var comnet = c.connectable().component();\r\n                comnet && (comnet.dirty(true));\r\n            });\r\n\r\n            this.relocateLinks(dx1, dy1, lane);\r\n            this.relocateLinks(dx2, dy2, prev);\r\n        }\r\n    };\r\n\r\n    Pool.prototype.moveDown = function(lane) {\r\n        var index = this.index(lane),\r\n            next  = this.get(index + 1),\r\n            laneNode = this.lanes.get(index),\r\n            nextNode = this.lanes.get(index + 1);\r\n\r\n        if (next) {\r\n            var laneBox = lane.bbox().toJson(),\r\n                nextBox = next.bbox().toJson();\r\n\r\n            var dx1 = 0,\r\n                dy1 = nextBox.height,\r\n                dx2 = 0,\r\n                dy2 = laneBox.y - nextBox.y;\r\n\r\n            laneNode.bbox.y  += dy1;\r\n            laneNode.bbox.y2 += dy1;\r\n\r\n            nextNode.bbox.y  += dy2;\r\n            nextNode.bbox.y2 += dy2;\r\n\r\n            lane.translate(dx1, dy1);\r\n            next.translate(dx2, dy2);\r\n\r\n            this.lanes.order();\r\n\r\n            lane.children().each(function(c){\r\n                var comnet = c.connectable().component();\r\n                comnet && (comnet.dirty(true));\r\n            });\r\n\r\n            next.children().each(function(c){\r\n                var comnet = c.connectable().component();\r\n                comnet && (comnet.dirty(true));\r\n            });\r\n\r\n            this.relocateLinks(dx1, dy1, lane);\r\n            this.relocateLinks(dx2, dy2, next);\r\n        }\r\n    };\r\n\r\n    Pool.prototype.refreshChildren = function() {\r\n        var children = this.populateChildren();\r\n\r\n        children.each(function(lane){\r\n            lane.component('child').dirty(true);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Populate lanes children\r\n     */\r\n    Pool.prototype.populateContents = function(lane) {\r\n        var contents;\r\n        if (lane !== undefined) {\r\n            contents = new Graph.collection.Shape(lane.children().toArray());\r\n        } else {\r\n            contents = this.cached.contents;\r\n            if ( ! contents) {\r\n                contents = [];\r\n                _.forEach(this.lanes.toArray(), function(node){\r\n                    var lane = Graph.registry.shape.get(node.lane);\r\n                    if (lane) {\r\n                        contents = _.concat(contents, lane.children().toArray());\r\n                    }\r\n                });\r\n\r\n                contents = new Graph.collection.Shape(contents);\r\n                this.cached.contents = contents;\r\n            }    \r\n        }\r\n\r\n        return contents;\r\n    };\r\n\r\n    Pool.prototype.refreshContents = function() {\r\n        var contents = this.populateContents();\r\n\r\n        contents.each(function(shape){\r\n            var connectableBlock = shape.connectable().component();\r\n            if (connectableBlock) {\r\n                connectableBlock.dirty(true);\r\n            }\r\n        });\r\n    };\r\n\r\n    Pool.prototype.populateLinks = function(lane) {\r\n        var me = this, \r\n            contents = me.populateContents(lane),\r\n            contentKeys = contents.keys(),\r\n            result = {\r\n                isolated: {},\r\n                separated: {}\r\n            };\r\n\r\n        contents.each(function(shape){\r\n            var network = shape.connectable().plugin(),\r\n                connections = (network && network.connections()) || [];\r\n\r\n            var pairVector, pairShape;\r\n\r\n            _.forEach(connections, function(conn){\r\n                pairVector = Graph.registry.vector.get((conn.type == 'incoming' ? conn.source : conn.target));\r\n                if (pairVector) {\r\n                    pairShape = Graph.registry.shape.get(pairVector);\r\n                    if (pairShape) {\r\n                        if (_.indexOf(contentKeys, pairShape.guid()) > -1) {\r\n                            if ( ! result.isolated[conn.guid]) {\r\n                                result.isolated[conn.guid] = conn;\r\n                            }\r\n                        } else {\r\n                            if ( ! result.separated[conn.guid]) {\r\n                                result.separated[conn.guid] = conn;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n    Pool.prototype.relocateLinks = function(dx, dy, lane) {\r\n        var links = this.populateLinks(lane);\r\n        var key, conn, router;\r\n        \r\n        for (key in links.isolated) {\r\n            conn = links.isolated[key];\r\n            conn.link.invalidate('convex');\r\n            conn.link.relocate(dx, dy);\r\n        }\r\n        \r\n        for (key in links.separated) {\r\n            conn = links.separated[key];\r\n            conn.link.invalidate('convex');\r\n            \r\n            if (conn.type == 'incoming') {\r\n                conn.link.relocateHead(dx, dy);\r\n            } else {\r\n                conn.link.invalidate('convex');\r\n                conn.link.relocateTail(dx, dy);\r\n            }\r\n        }\r\n        \r\n        links = null;\r\n    };\r\n\r\n\r\n    Pool.prototype.size = function() {\r\n        return this.lanes.size();\r\n    };\r\n\r\n    Pool.prototype.insert = function(lane) {\r\n        var guid = lane.guid();\r\n        var node, index;\r\n\r\n        node = {\r\n            lane: guid,\r\n            bbox: lane.bbox().toJson()\r\n        };\r\n\r\n        index = this.lanes.insert(node);\r\n\r\n        if (index !== undefined) {\r\n            this.cached.nodes[guid] = node;\r\n            lane.component().elem.attr('data-pool', this.guid);\r\n        }\r\n\r\n        node = null;\r\n        return index;\r\n    };\r\n\r\n    Pool.prototype.remove = function(lane) {\r\n        var guid = lane.guid(),\r\n            node = this.cached.nodes[guid];\r\n\r\n        var index = this.lanes.remove(node);\r\n        \r\n        if (index !== undefined) {\r\n            // shrink pool (direction: up)\r\n            var prev = this.lanes.get(index - 1),\r\n                next = this.lanes.get(index),\r\n                me = this;\r\n            \r\n            if (next) {\r\n                var dx = 0,\r\n                    dy = -node.bbox.height;\r\n\r\n                this.lanes.cascade(next, function(node){\r\n                    var lane = Graph.registry.shape.get(node.lane);\r\n                    if (lane) {\r\n                        lane.translate(dx, dy);\r\n                        node.bbox = lane.bbox().toJson();\r\n\r\n                        lane.children().each(function(c){\r\n                            var comnet = c.connectable().component();\r\n                            comnet && (comnet.dirty(true));\r\n                        });\r\n\r\n                        me.relocateLinks(dx, dy, lane);\r\n                    }\r\n                });\r\n\r\n                this.lanes.order();\r\n            }\r\n\r\n            delete this.cached.nodes[guid];\r\n        }\r\n\r\n        node = null;\r\n\r\n        return index;\r\n    };\r\n\r\n    Pool.prototype.index = function(lane) {\r\n        var guid = lane.guid(),\r\n            node = this.cached.nodes[guid];\r\n\r\n        var index = this.lanes.index(node);\r\n\r\n        node = null;\r\n\r\n        return index;\r\n    };\r\n\r\n    ///////// STATIC /////////\r\n\r\n    Pool.guid = 0;\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.shape.common.Label = Graph.extend(Graph.shape.Shape, {\r\n        props: {\r\n            label: 'untitled',\r\n            align: 'left',\r\n            fontSize: 16,\r\n            lineHeight: 1.1\r\n        },\r\n        metadata: {\r\n            type: 'common.label',\r\n            icon: 'ion-android-create'\r\n        },\r\n        initComponent: function() {\r\n            var pmgr = this.plugins.manager;\r\n            var shape, block, label;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Rect(0, 0, 0, 0, 0))\r\n                .data('text', this.props.label)\r\n                .render(shape);\r\n\r\n            block.style({\r\n                fill: 'rgba(255,255,255,0)',\r\n                'stroke-width': 0\r\n            });\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            pmgr.install('dragger', block, {cls: Graph.styles.SHAPE_DRAG});\r\n            pmgr.install('editor',  block, {width: 300, height: 75, align: 'left', offset: 'pointer'});\r\n\r\n            block.on('edit.shape', _.bind(this.onLabelEdit, this));\r\n            block.on('afterdrag.shape', _.bind(this.onAfterDrag, this));\r\n            block.on('select.shape', _.bind(this.onSelect, this));\r\n            block.on('deselect.shape', _.bind(this.onDeselect, this));\r\n            block.on('beforedestroy.shape',    _.bind(this.onBeforeDestroy, this));\r\n            block.on('afterdestroy.shape',    _.bind(this.onAfterDestroy, this));\r\n\r\n            label = (new Graph.svg.Text(0, (this.props.lineHeight * this.props.fontSize) , this.props.label))\r\n                .attr('font-size', this.props.fontSize)\r\n                .attr('text-anchor', this.props.align)\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            label.on('render.shape', _.bind(this.onLabelRender, this));\r\n\r\n            _.assign(this.components, {\r\n                shape: shape.guid(),\r\n                block: block.guid(),\r\n                label: label.guid()\r\n            });\r\n        },\r\n\r\n        initMetadata: function() {\r\n            this.metadata.tools = [\r\n                {\r\n                    name: 'sendtofront',\r\n                    icon: Graph.icons.SEND_TO_FRONT,\r\n                    title: Graph._('Send to front'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onFrontToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtoback',\r\n                    icon: Graph.icons.SEND_TO_BACK,\r\n                    title: Graph._('Send to back'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBackToolClick, this)\r\n                },\r\n                {\r\n                    name: 'trash',\r\n                    icon: Graph.icons.TRASH,\r\n                    title: Graph._('Click to remove shape'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onTrashToolClick, this)\r\n                }\r\n            ];\r\n        },\r\n\r\n        refresh: _.debounce(function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n\r\n            var label = this.component('label'),\r\n                block = this.component('block');\r\n\r\n            label.write(this.props.label);\r\n            label.dirty(true);\r\n            \r\n            var labelBox = label.bbox().toJson();\r\n\r\n            block.attr({\r\n                width: labelBox.width\r\n            });\r\n\r\n            block.dirty(true);\r\n            \r\n        }, 1),\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.common.Label';\r\n        },\r\n\r\n        onLabelRender: function() {\r\n\r\n            var label = this.component('label'),\r\n                block = this.component('block'),\r\n                labelBox = label.bbox().toJson();\r\n\r\n            block.attr({\r\n                width: labelBox.width,\r\n                height: labelBox.height\r\n            });\r\n        },\r\n\r\n        onLabelEdit: function(e) {\r\n            var text = e.text;\r\n\r\n            if (text) {\r\n                this.component('label').props.text = text;\r\n                this.props.label = text;\r\n                this.refresh();    \r\n            } else {\r\n                this.remove();\r\n            }\r\n        },\r\n\r\n        onAfterDrag: function(e) {\r\n            var blockComponent = this.component('block'),\r\n                shapeComponent = this.component('shape'),\r\n                blockMatrix = blockComponent.matrix();\r\n\r\n            var shapeMatrix;\r\n\r\n            blockComponent.reset();\r\n\r\n            shapeComponent.matrix().multiply(blockMatrix);\r\n            shapeComponent.attr('transform', shapeComponent.matrix().toValue());\r\n            shapeComponent.dirty(true);\r\n\r\n            shapeMatrix = shapeComponent.matrix();\r\n\r\n            this.data({\r\n                left: shapeMatrix.props.e,\r\n                top: shapeMatrix.props.f\r\n            });\r\n\r\n            this.fire(e);\r\n        },\r\n\r\n        onSelect: function(e) {\r\n            this.component().addClass('label-selected');\r\n            if (e.initial) {\r\n                Graph.topic.publish('shape:select', {shape: this});\r\n            }\r\n        },\r\n\r\n        onDeselect: function(e) {\r\n            this.component().removeClass('label-selected');\r\n            if (e.initial) {\r\n                Graph.topic.publish('shape:deselect', {shape: this});\r\n            }\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n    \r\n    var XMLDOC = '<?xml version=\"1.0\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\" [<!ENTITY nbsp \"&#160;\">]>';\r\n    \r\n    var Exporter = Graph.data.Exporter = function(vector, options){\r\n        \r\n        this.options = _.extend({}, Exporter.defaults, options || {});\r\n        this.element = vector.node();\r\n        \r\n        var bounds, width, height, scale;\r\n        \r\n        if (vector.isPaper()) {\r\n            bounds = vector.viewport().bbox().toJson();\r\n            height = Math.max((bounds.y + bounds.height + 100), vector.elem.height());\r\n            width  = Math.max((bounds.x + bounds.width), vector.elem.width());\r\n            scale  = vector.layout().scale();\r\n        } else {\r\n            bounds = vector.bbox().toJson();\r\n            width  = bounds.width;\r\n            height = bounds.height;\r\n            scale  = vector.matrixCurrent().scale();\r\n        }\r\n        \r\n        _.assign(this.options, {\r\n            width: width,\r\n            height: height,\r\n            scaleX: scale.x,\r\n            scaleY: scale.y\r\n        });\r\n    };\r\n    \r\n    Exporter.defaults = {\r\n        width: 0,\r\n        height: 0,\r\n        \r\n        scaleX: 1,\r\n        scaleY: 1\r\n    };\r\n\r\n    Exporter.prototype.exportDataURI = function() {\r\n        \r\n    };\r\n    \r\n    Exporter.prototype.exportSVG = function(filename, compression) {\r\n        var options = _.extend({}, this.options);\r\n        \r\n        options.encoder = 'application/svg+xml';\r\n        options.compression = 1;\r\n        options.background = '#ffffff';\r\n\r\n        var uri = createDataURI(this.element, options);\r\n        var link = document.createElement('a');\r\n        var click;\r\n\r\n        link.setAttribute('download', filename);\r\n        link.setAttribute('href', uri);\r\n\r\n        if (document.createEvent) {\r\n            click = document.createEvent('MouseEvents');\r\n            click.initEvent('click', true, false);\r\n            link.dispatchEvent(click);\r\n        } else if (document.createEventObject) {\r\n            link.fireEvent('onclick');\r\n        }\r\n\r\n        link = click = null;\r\n    };\r\n\r\n    Exporter.prototype.exportJPEG = function(filename, compression) {\r\n        var options = _.extend({}, this.options);\r\n        \r\n        options.encoder = 'image/jpeg';\r\n        options.compression = compression || 1;\r\n        options.background = '#ffffff';\r\n        \r\n        filename = _.defaultTo(filename, 'download.jpg');\r\n        \r\n        exportImage(this.element, options, function(result){\r\n            if (result) {\r\n                download(filename, result);\r\n            }\r\n        });\r\n    };\r\n\r\n    Exporter.prototype.exportPNG = function(filename, compression) {\r\n        var options = _.extend({}, this.options);\r\n        \r\n        filename = _.defaultTo(filename, 'download.png');\r\n        \r\n        options.encoder = 'image/png';\r\n        options.compression = compression || 0.8;\r\n        \r\n        exportImage(this.element, options, function(result){\r\n            if (result) {\r\n                download(filename, result);\r\n            }\r\n        });\r\n    };\r\n\r\n    Exporter.prototype.exportFile = function(callback) {\r\n        var options = _.extend({}, this.options);\r\n        \r\n        options.encoder = 'image/jpeg';\r\n        options.compression = 1;\r\n        options.background = '#ffffff';\r\n\r\n        exportImage(this.element, options, function(result){\r\n            if (result) {\r\n                var blob = createBlob(result);\r\n                callback && callback(blob);\r\n            } else {\r\n                callback && callback(false);\r\n            }\r\n        });\r\n    };\r\n\r\n    Exporter.prototype.exportBlob = function(callback) {\r\n        var options = _.extend({}, this.options);\r\n        \r\n        options.encoder = 'image/jpeg';\r\n        options.compression = 1;\r\n        options.background = '#ffffff';\r\n\r\n        exportImage(this.element, options, function(result){\r\n            if (result) {\r\n                var blob = createBlob(result);\r\n                callback && callback(blob);\r\n            } else {\r\n                callback && callback(false);\r\n            }\r\n        });\r\n    };\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function repair(data) {\r\n        var encoded = encodeURIComponent(data);\r\n        \r\n        encoded = encoded.replace(/%([0-9A-F]{2})/g, function(match, p1) {\r\n            var c = String.fromCharCode('0x'+p1);\r\n            return c === '%' ? '%25' : c;\r\n        });\r\n        \r\n        return decodeURIComponent(encoded);\r\n    }\r\n    \r\n    function download(name, uri) {\r\n        if (navigator.msSaveOrOpenBlob) {\r\n            var blob = createBlob(uri);\r\n            navigator.msSaveOrOpenBlob(blob, name);\r\n            blob = null;\r\n        } else {\r\n            var link = Graph.dom('<a/>');\r\n            \r\n            if ('download' in link) {\r\n                link.download = name;\r\n                link.href = uri;\r\n                link.style.display = 'none';\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                document.body.removeChild(link);\r\n            } else {\r\n                window.open(uri, '_download', 'menubar=no,toolbar=no,status=no');\r\n            }\r\n            \r\n            link = null;\r\n        }\r\n    }\r\n    \r\n    function createBlob(uri) {\r\n        var byteString = window.atob(uri.split(',')[1]),\r\n            mimeString = uri.split(',')[0].split(':')[1].split(';')[0],\r\n            buffer = new ArrayBuffer(byteString.length),\r\n            intArray = new Uint8Array(buffer);\r\n        \r\n        for (var i = 0, ii = byteString.length; i < ii; i++) {\r\n            intArray[i] = byteString.charCodeAt(i);\r\n        }\r\n        \r\n        return new Blob([buffer], {type: mimeString});\r\n    }\r\n    \r\n    function exportImage(element, options, callback) {\r\n        var data = createDataURI(element, options),\r\n            image = new Image();\r\n        \r\n        image.onload = function() {\r\n            var canvas, context, result;\r\n            \r\n            canvas = document.createElement('canvas');\r\n            canvas.width  = image.width;\r\n            canvas.height = image.height;\r\n            \r\n            context = canvas.getContext('2d');\r\n\r\n            if (options.background) {\r\n                context.fillStyle = options.background;\r\n                context.fillRect(0, 0, canvas.width, canvas.height);\r\n            }\r\n\r\n            context.drawImage(image, 0, 0);\r\n            \r\n            try {\r\n                result = canvas.toDataURL(options.encoder, options.compression);\r\n            } catch(e) {\r\n                result = false;\r\n            }\r\n            \r\n            canvas = context = null;\r\n            callback(result);\r\n        };\r\n        \r\n        image.onerror = function() {\r\n            callback(false);\r\n        };\r\n        \r\n        image.src = data; // DOMURL.createObjectURL(blob);\r\n    }\r\n\r\n    function createData(element, options) {\r\n        var holder = Graph.dom('<div/>'),\r\n            cloned = element.cloneNode(true);\r\n        \r\n        var css, sty, svg, xml, uri;\r\n            \r\n        if (cloned.tagName == 'svg') {\r\n            cloned.setAttribute('width',  options.width);\r\n            cloned.setAttribute('height', options.height);\r\n        } else {\r\n            svg = Graph.dom('<svg/>');\r\n            \r\n            svg.setAttribute('xmlns', Graph.config.xmlns.svg);\r\n            svg.setAttribute('xmlns:xlink', Graph.config.xmlns.xlink);\r\n            svg.setAttribute('version', Graph.config.svg.version);\r\n            svg.setAttribute('width',  options.width);\r\n            svg.setAttribute('height', options.height);\r\n            \r\n            svg.appendChild(cloned);\r\n            cloned = svg;\r\n        }\r\n        \r\n        holder.appendChild(cloned);\r\n        \r\n        css = getElementStyles(element);\r\n        sty = Graph.dom('<style/>');\r\n        sty.setAttribute('type', 'text/css');\r\n        sty.innerHTML = \"<![CDATA[\\n\" + css + \"\\n]]>\";\r\n        \r\n        var first = cloned.childNodes[0];\r\n        \r\n        if (first) {\r\n            cloned.insertBefore(sty, first);\r\n        } else {\r\n            cloned.appendChild(sty);\r\n        }\r\n        \r\n        xml = XMLDOC + holder.innerHTML;\r\n        holder = cloned = null;\r\n        return xml;\r\n    }\r\n    \r\n    function createDataURI(element, options) {\r\n        var xml = createData(element, options),\r\n            uri = 'data:image/svg+xml;base64,' + window.btoa(repair(xml));\r\n\r\n        return uri;\r\n    }\r\n    \r\n    function getElementStyles(element) {\r\n        var styles = document.styleSheets,\r\n            result = '';\r\n            \r\n        var rules, rule, found;\r\n        \r\n        for (var i = 0, ii = styles.length; i < ii; i++) {\r\n            \r\n            rules = styles[i].cssRules;\r\n            \r\n            if (rules != null) {\r\n                \r\n                for (var j = 0, jj = rules.length; j < jj; j++, found = null) {\r\n                    \r\n                    rule = rules[j];\r\n                    \r\n                    if (rule.style !== undefined) {\r\n                        if (rule.selectorText) {\r\n\r\n                            // BUG: https://github.com/exupero/saveSvgAsPng/issues/11\r\n                            \r\n                            try {\r\n                                found = element.querySelector(rule.selectorText);\r\n\r\n                                if (found) {\r\n                                    result += rule.selectorText + \" { \" + rule.style.cssText + \" }\\n\";\r\n                                } else if(rule.cssText.match(/^@font-face/)) {\r\n                                    result += rule.cssText + '\\n';\r\n                                }\r\n                            } catch(e) {\r\n                                // console.log(e);\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n}());","\r\n(function(){\r\n    var Parser = Graph.diagram.Parser = function(data) {\r\n        data = data || {};\r\n\r\n        this._props  = data.props || {};\r\n        this._shapes = data.shapes || [];\r\n        this._links  = data.links || [];\r\n        this._tree   = {};\r\n\r\n        this.parse();\r\n    };\r\n\r\n    Parser.prototype.constructor = Parser;\r\n\r\n    Parser.prototype.parse = function() {\r\n        var shapes = this._shapes,\r\n            tree = {},\r\n            nodes = {},\r\n            total = shapes.length;\r\n\r\n        _.forEach(shapes, function(shape, idx){\r\n            nodes[shape.props.id] = {\r\n                id: shape.props.id,\r\n                parent_id: shape.props.parent_id,\r\n                index: idx,\r\n                total: total\r\n            };\r\n        });\r\n\r\n        var key, node;\r\n\r\n        for (key in nodes) {\r\n            node = nodes[key];\r\n            if ( ! node.parent_id) {\r\n                tree[key] = node;\r\n            } else {\r\n                if (nodes[node.parent_id].children === undefined) {\r\n                    nodes[node.parent_id].children = {};\r\n                }\r\n                nodes[node.parent_id].children[node.id] = node;\r\n            }\r\n        }\r\n\r\n        this._tree = tree;\r\n    };\r\n\r\n    Parser.prototype.shapes = function() {\r\n        var shapes = this._shapes,\r\n            tree = this._tree;\r\n\r\n        return {\r\n            total: shapes.length,\r\n            each: function(callback) {\r\n                traverse(tree, shapes, callback);\r\n            }\r\n        };\r\n    };\r\n\r\n    Parser.prototype.links = function() {\r\n        var links = this._links;\r\n        return {\r\n            total: links.length,\r\n            each: function(callback) {\r\n                _.forEach(links, callback);\r\n            }\r\n        }\r\n    };\r\n\r\n    Parser.prototype.props = function() {\r\n        var props = this._props;\r\n        return {\r\n            each: function(callback) {\r\n                _.forOwn(props, callback);\r\n            }\r\n        }\r\n    };\r\n\r\n    Parser.prototype.destroy = function() {\r\n        this._shapes = null;\r\n        this._links = null;\r\n        this._tree = null;\r\n        this._props = null;\r\n    };\r\n\r\n    function traverse(nodes, shapes, callback) {\r\n        var key, node;\r\n        for (key in nodes) {\r\n            node = nodes[key];\r\n            callback(shapes[node.index], node.index, node.total);\r\n            if (node.children !== undefined) {\r\n                traverse(node.children, shapes, callback);\r\n            }\r\n        }\r\n    }\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var Pallet = Graph.diagram.pallet.Activity = Graph.extend({\r\n        \r\n        props: {\r\n            guid: null,\r\n            rendered: false\r\n        },\r\n        \r\n        components: {\r\n            pallet: null\r\n        },\r\n        \r\n        cached: {\r\n            \r\n        },\r\n\r\n        picking: {\r\n            enabled: false,\r\n            target: null,\r\n            matrix: null,\r\n            shape: null,\r\n            begin: false,\r\n            start: null\r\n        },\r\n        \r\n        constructor: function(options) {\r\n            _.assign(this.props, options || {});\r\n            this.props.guid = 'pallet-' + (++Pallet);\r\n            this.initComponent();\r\n\r\n            Graph.registry.pallet.register(this);\r\n        },\r\n\r\n        guid: function() {\r\n            return this.props.guid;\r\n        },\r\n\r\n        initComponent: function() {\r\n            var template, pallet;\r\n            \r\n            template = _.format(\r\n                '<svg class=\"graph-pallet\" xmlns=\"{0}\" xmlns:xlink=\"{1}\" version=\"{2}\" style=\"width: 100%; height: 100%\">' + \r\n                    '<defs>' + \r\n                        '<marker id=\"marker-arrow-pallet\" refX=\"11\" refY=\"10\" viewBox=\"0 0 20 20\" markerWidth=\"10\" markerHeight=\"10\" orient=\"auto\">' + \r\n                            '<path d=\"M 1 5 L 11 10 L 1 15 Z\" fill=\"#30D0C6\" stroke-linecap=\"round\" stroke-dasharray=\"10000, 1\"/>' + \r\n                        '</marker>' + \r\n                    '</defs>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"Graph.shape.activity.Start\" transform=\"matrix(1,0,0,1,40,0)\">' + \r\n                        '<circle cx=\"32\" cy=\"32\" r=\"30\"/>' +\r\n                        '<text x=\"32\" y=\"36\">Start</text>' + \r\n                    '</g>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"Graph.shape.activity.Final\" transform=\"matrix(1,0,0,1,40,80)\">' + \r\n                        '<circle cx=\"32\" cy=\"32\" r=\"30\"/>' + \r\n                        '<circle cx=\"32\" cy=\"32\" r=\"24\" class=\"full\"/>' + \r\n                        '<text x=\"32\" y=\"36\">End</text>' + \r\n                    '</g>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"Graph.shape.activity.Action\" transform=\"matrix(1,0,0,1,40,160)\">' + \r\n                        '<rect x=\"2\" y=\"2\" width=\"60\" height=\"60\" rx=\"7\" ry=\"7\"/>' + \r\n                        '<text x=\"32\" y=\"34\">Action</text>' + \r\n                    '</g>' + \r\n                    /*'<g class=\"graph-pallet-item\" data-shape=\"Graph.shape.activity.Router\" transform=\"matrix(1,0,0,1,40,250)\">' + \r\n                        '<rect x=\"4\" y=\"4\" width=\"54\" height=\"54\" transform=\"rotate(45,32,32)\"/>' + \r\n                        '<text x=\"30\" y=\"34\">Route</text>' + \r\n                    '</g>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"Graph.shape.activity.Join\" transform=\"matrix(1,0,0,1,40,340)\">' + \r\n                        '<rect x=\"2\" width=\"60\" height=\"58\" rx=\"0\" ry=\"0\" style=\"fill: rgba(255,255,255,0); stroke-width: 0\" />' + \r\n                        '<rect x=\"2\" y=\"28\" width=\"60\" height=\"6\" rx=\"0\" ry=\"0\" pointer-events=\"none\" class=\"full\"/>' + \r\n                        '<path d=\"M 10  0 L 10 28\" pointer-events=\"none\" ></path>' + \r\n                        '<path d=\"M 54  0 L 54 28\" pointer-events=\"none\" ></path>' + \r\n                        '<path d=\"M 32 34 L 32 60\" marker-end=\"url(#marker-arrow-pallet)\" pointer-events=\"none\" ></path>' + \r\n                        '<text x=\"32\" y=\"20\">Join</text>' + \r\n                    '</g>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"Graph.shape.activity.Fork\" transform=\"matrix(1,0,0,1,40,420)\">' + \r\n                        '<rect x=\"2\" width=\"60\" height=\"58\" rx=\"0\" ry=\"0\" pointer-events=\"none\" style=\"fill: rgba(255,255,255,0); stroke-width: 0\" />' + \r\n                        '<rect x=\"2\" y=\"28\" width=\"60\" height=\"6\" rx=\"0\" ry=\"0\" class=\"full\"/>' + \r\n                        '<path d=\"M 10 34 L 10 60\" marker-end=\"url(#marker-arrow-pallet)\" pointer-events=\"none\" ></path>' + \r\n                        '<path d=\"M 54 34 L 54 60\" marker-end=\"url(#marker-arrow-pallet)\" pointer-events=\"none\" ></path>' + \r\n                        '<path d=\"M 32  0 L 32 28\" pointer-events=\"none\" ></path>' + \r\n                        '<text x=\"32\" y=\"50\">Fork</text>' + \r\n                    '</g>' + */\r\n                    '<g class=\"graph-pallet-item\" data-shape=\"Graph.shape.activity.Lane\" transform=\"matrix(1,0,0,1,40,250)\">' + \r\n                        '<rect x=\"2\" y=\"2\" width=\"60\" height=\"60\" rx=\"0\" ry=\"0\"/>' + \r\n                        '<rect x=\"2\" y=\"2\" width=\"10\" height=\"60\" rx=\"0\" ry=\"0\"/>' + \r\n                        '<text x=\"32\" y=\"34\">Role</text>' + \r\n                    '</g>' + \r\n                '</svg>',\r\n                Graph.config.xmlns.svg,\r\n                Graph.config.xmlns.xlink,\r\n                Graph.config.svg.version\r\n            );\r\n            \r\n            pallet = Graph.$(template);\r\n            this.components.pallet = pallet;\r\n        },\r\n\r\n        stopPicking: function() {\r\n            if (this.picking.enabled) {\r\n                this.picking.target.remove();\r\n                _.assign(this.picking, {\r\n                    target: null,\r\n                    matrix: null,\r\n                    offset: null,\r\n                    enabled: false,\r\n                    shape: null,\r\n                    start: false\r\n                });\r\n            }\r\n        },\r\n\r\n        render: function(container) {\r\n            if (this.props.rendered) {\r\n                return;\r\n            }\r\n\r\n            var me = this, \r\n                pallet = this.components.pallet;\r\n\r\n            this.props.rendered = true;\r\n\r\n            container = Graph.$(container);\r\n            container.prepend(pallet);\r\n            container = null;\r\n\r\n            interact('.graph-pallet-item')\r\n                .on('down', function(e){\r\n                    dragStart(e);\r\n                })\r\n                .on('move', function(e){\r\n                    dragMove(e);\r\n                })\r\n                .on('up', function(e){\r\n                    dragStop(e);\r\n                });\r\n\r\n            /////////\r\n            \r\n            pallet.on('mouseleave', function(e){\r\n                dragStop(e);\r\n            });\r\n\r\n            function dragStart(e) {\r\n                var target = Graph.$(e.currentTarget);\r\n\r\n                if (me.picking.enabled) {\r\n                    dragStop(e);\r\n                }\r\n\r\n                if (target.data('shape') !== undefined) {\r\n                    var transform = Graph.util.transform2segments(target.attr('transform'));\r\n                    transform = transform[0].slice(1);\r\n\r\n                    me.picking.enabled = true;\r\n                    me.picking.matrix = Graph.factory(Graph.lang.Matrix, transform);\r\n                    me.picking.target = Graph.$(e.currentTarget.cloneNode(true));\r\n                    me.picking.target.addClass('grabbing');\r\n                    me.picking.shape = target.data('shape');\r\n\r\n                    pallet.append(me.picking.target);\r\n\r\n                    me.fire('pick', {\r\n                        shape: me.picking.shape,\r\n                        origin: {\r\n                            x: e.clientX,\r\n                            y: e.clientY\r\n                        }\r\n                    });\r\n\r\n                    transform = null;\r\n\r\n                }\r\n            }\r\n\r\n            function dragMove(e) {\r\n                var i = e.interaction;\r\n\r\n                if (i.pointerIsDown && me.picking.target) {\r\n                    e.preventDefault();\r\n                    \r\n                    var current = {\r\n                        x: e.clientX,\r\n                        y: e.clientY\r\n                    };\r\n\r\n                    if ( ! me.picking.offset) {\r\n                        me.picking.offset = current;\r\n                    }\r\n\r\n                    var dx = current.x - me.picking.offset.x,\r\n                        dy = current.y - me.picking.offset.y;\r\n\r\n                    me.picking.matrix.translate(dx, dy);\r\n                    me.picking.target.attr('transform', me.picking.matrix.toValue());\r\n\r\n                    me.fire('drag', {\r\n                        dx: dx,\r\n                        dy: dy\r\n                    }); \r\n\r\n                    me.picking.offset = current;\r\n                }\r\n            }\r\n\r\n            function dragStop(e) {\r\n                if (me.picking.enabled) {\r\n                    me.fire('drop', {\r\n                        clientX: e.clientX,\r\n                        clientY: e.clientY\r\n                    });\r\n                }\r\n                me.stopPicking();\r\n            }\r\n\r\n        },\r\n        \r\n        toString: function() {\r\n            return 'Graph.diagram.pallet.Activity';\r\n        }\r\n\r\n    });\r\n\r\n    Pallet.guid = 0;\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.popup.Dialog = Graph.extend({\r\n\r\n        props: {\r\n            opened: false\r\n        },\r\n\r\n        components: {\r\n            element: null,\r\n            backdrop: null\r\n        },\r\n\r\n        handlers: {\r\n            backdrop_click: null\r\n        },\r\n\r\n        constructor: function(element, options) {\r\n            var me = this, \r\n                comp = me.components,\r\n                handlers = me.handlers;\r\n\r\n            comp.element = Graph.$(element);\r\n\r\n            if (options.buttons) {\r\n                _.forEach(options.buttons, function(button, index){\r\n                    var element = Graph.$(button.element, comp.element);\r\n                    if (element.length()) {\r\n                        var name = 'button' + index,\r\n                            func = name + '_click';\r\n\r\n                        comp[name] = element;\r\n\r\n                        if (_.isFunction(button.onclick)) {\r\n                            handlers[func] = _.bind(function(e){\r\n                                button.onclick.call(me, e);\r\n                            }, me);\r\n                            element.on('click', handlers[func]);\r\n                        }\r\n                        name = func = null;\r\n                    }\r\n                    element = null;\r\n                });\r\n            }\r\n        },\r\n\r\n        element: function() {\r\n            return this.components.element;\r\n        },\r\n\r\n        open: function() {\r\n            if (this.props.opened) {\r\n                return;\r\n            }\r\n\r\n            this.element().addClass('open');\r\n            this.props.opened = true;\r\n\r\n            this.center();\r\n            this.backdrop();\r\n        },\r\n\r\n        close: function() {\r\n            var me = this,\r\n                comp = this.components,\r\n                handlers = this.handlers,\r\n                backdrop = comp.backdrop;\r\n\r\n            this.element().removeClass('open');\r\n            this.props.opened = false;\r\n\r\n            if (handlers.backdrop_click) {\r\n                backdrop.off('click', handlers.backdrop_click);\r\n                handlers.backdrop_click = null;\r\n\r\n                var backdropUser = +backdrop.data('user');\r\n\r\n                backdropUser--;\r\n\r\n                if (backdropUser <= 0) {\r\n                    backdropUser = 0;\r\n                    backdrop.detach();\r\n                }\r\n\r\n                backdrop.data('user', backdropUser);\r\n            }\r\n\r\n            _.forOwn(handlers, function(handler, name){\r\n                var tmp = _.split(name, '_'),\r\n                    key = tmp[0],\r\n                    evt = tmp[1];\r\n\r\n                if (handler && comp[key] && evt) {\r\n                    comp[key].off(evt, handler);\r\n                    handlers[name] = null;\r\n                }\r\n                \r\n                tmp = key = evt = null;\r\n            });\r\n\r\n            this.fire('close');\r\n        },\r\n\r\n        center: _.debounce(function() {\r\n            var element = this.element(),\r\n                width = element.width(),\r\n                height = element.height();\r\n\r\n            element.css({\r\n                'top': '50%',\r\n                'left': '50%',\r\n                'margin-top': -height / 2,\r\n                'margin-left': -width / 2\r\n            });\r\n        }, 0),\r\n\r\n        backdrop: function() {\r\n            var me = this,\r\n                backdrop = Graph.$('.graph-dialog-backdrop');\r\n\r\n            if ( ! backdrop.length()) {\r\n                backdrop = Graph.$('<div class=\"graph-dialog-backdrop\"/>');\r\n                backdrop.data('user', 0);\r\n                backdrop.on('click', function(e){\r\n                    e.stopPropagation();\r\n                });\r\n            }\r\n\r\n            me.handlers.backdrop_click = function() {\r\n                me.close();\r\n            };\r\n\r\n            backdrop.on('click', me.handlers.backdrop_click);\r\n\r\n            var backdropUser = +backdrop.data('user');\r\n\r\n            backdropUser++;\r\n            backdrop.data('user', backdropUser);\r\n\r\n            me.components.element.before(backdrop);\r\n            me.components.backdrop = backdrop;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.popup.Dialog';\r\n        },\r\n\r\n        destroy: function() {\r\n            this.components.element = null;\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n    ///////// SHORTCUT /////////\r\n    \r\n    Graph.dialog = function(element, options){\r\n        return new Graph.popup.Dialog(element, options);\r\n    };\r\n\r\n}());"]}