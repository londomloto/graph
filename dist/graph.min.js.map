{"version":3,"sources":["poly.js","core.js","util.js","class.js","error.js","event.js","point.js","line.js","curve.js","bbox.js","path.js","matrix.js","vector.js","shape.js","tree.js","link.js","element.js","ellipse.js","circle.js","rect.js","polyline.js","polygon.js","group.js","text.js","image.js","paper.js","pallet.js","layout.js","router.js","directed.js","orthogonal.js","sweeplink.js","plugin.js","manager.js","definer.js","reactor.js","transformer.js","animator.js","resizer.js","rotator.js","collector.js","dragger.js","dropper.js","network.js","history.js","panzoom.js","linker.js","toolmanager.js","pencil.js","editor.js","snapper.js","toolpad.js","clipper.js","start.js","final.js","action.js","fork.js","join.js","lane.js","pool.js","label.js","exporter.js","parser.js","activity.js","Diagram.js","Activity.js","dialog.js"],"names":["ascending","a","b","NaN","bisector","compare","left","x","lo","hi","arguments","length","mid","right","_","float","parseFloat","gcd","array","t","i","r","len","lcm","format","params","toArray","shift","replace","match","number","insert","index","Array","prototype","splice","apply","concat","move","from","to","size","k","push","undefined","permute","permuter","isFunction","reduce","result","value","key","isArray","f","d","ascendingKey","isIE","na","global","navigator","ua","userAgent","toLowerCase","ie","indexOf","parseInt","substring","GLOBAL","window","Math","self","Function","DOCUMENT","document","NAVIGATOR","location","CACHE_SIZE","MEMO_SIZE","readyFn","Graph","ready","VERSION","AUTHOR","cached","config","base","locale","svg","version","xmlns","xlink","html","font","family","line","resizer","image","rotator","setup","name","isPlainObject","extend","string","ID_VECTOR","ID_SHAPE","ID_LINK","ID_PORT","styles","VECTOR","PAPER","VIEWPORT","SHAPE","SHAPE_BLOCK","SHAPE_LABEL","SHAPE_HEADER","SHAPE_CHILD","SHAPE_DRAG","LINK_HEAD","LINK_TAIL","icons","ZOOM_IN","ZOOM_OUT","ZOOM_RESET","SHAPE_LANE","SHAPE_LINK","SHAPE_ACTION","SHAPE_ROUTER","LANE_ABOVE","LANE_BELOW","CONFIG","LINK","TRASH","SEND_TO_BACK","SEND_TO_FRONT","MOVE_UP","MOVE_DOWN","ROUTER_OR","ROUTER_XOR","ROUTER_NONE","ROUTER_PARALLEL","doc","isHTML","obj","HTMLElement","isSVG","SVGElement","isElement","dom","Element","isMac","test","platform","ns","namespace","lookup","clazz","current","parts","split","parent","uuid","c","random","v","toString","hash","str","l","hval","charCodeAt","substr","create","superclass","props","factory","args","bind","expand","target","source","scope","tproto","constructor","sproto","defaultTo","forOwn","isUndefined","lang","Class","mixin","this","group","token","credit","join","remove","debounce","memoize","func","memo","param","cache","saved","ii","defer","$","Deferred","when","paper","width","height","options","Paper","type","capitalize","shape","names","chunk","lastIndexOf","layout","router","link","plugin","proto","diagram","util","pallet","topic","subscribers","publish","message","subs","lsnr","forEach","handler","call","subscribe","unsub","h","s","sub","unsubscribe","find","u","graphConfig","on","e","vector","data","registry","get","guid","event","isNavigation","originalType","fire","ctrlKey","cmdKey","keyCode","C","V","evt","timer","removeEventListener","readyState","loaded","inspect","delay","clearTimeout","addEventListener","REGEX_PATH_STR","REGEX_PATH_VAL","REGEX_PATH_CMD","REGEX_POLY_STR","REGEX_TRAN_STR","REGEX_TRAN_SUB","CONVEX_RADIUS","SMOOTH_RADIUS","LEGENDRE_N","LEGENDRE_T","LEGENDRE_C","deg","rad","round","PI","angle","dx","dy","y","atan2","theta","toFixed","taxicab","hypo","va","vb","sqrt","sign","num","quadrant","gradient","Infinity","snapValue","snaps","range","abs","rem","pointbox","padding","x1","y1","x2","y2","pointAlign","treshold","pointDistance","isPointEquals","isPointOnLine","p","det","dis","polar2point","distance","radian","origin","point","cos","sin","isBoxContainsPoint","box","isBoxIntersect","fn","boxOrientation","box1","box2","top","rgt","btm","lft","ver","hor","expandBox","groupBox","boxes","min","max","midpoint","movepoint","tr","lineBendpoints","dir","xm","ym","points","lineIntersection","x3","y3","x4","y4","nx","ny","denominator","px","py","px2","py2","perpendicular","m1","m2","tt","hp","atan","mx","my","iy","points2path","segments","map","cmd","segments2path","path2points","command","path2segments","sizes","m","q","z","cloneDeep","val","polygon2dots","$0","polygon2path","dots","transform2segments","valid","matrix","translate","rotate","scale","skewX","skewY","transform","matches","curvebox","x0","y0","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","j","jlen","curveLength","sum","ct","xb","curvePolynom","yb","co","n1","n2","n3","n4","curveInterval","step","pointAtInterval","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","t13","pow","t12","t3","ax","ay","cx","cy","alpha","n","start","end","curveIntersection","count","bon1","bon2","nres","ares","l1","l2","dots1","dots2","xy","di","di1","dj","dj1","ci","cj","is","convexSegment","prev","next","radius","d1","d2","cp","c1","c2","dr","smoothSegment","context","eventType","once","priority","eventNames","eventRoot","listeners","original","unbind","eventRegex","cachedRegex","rgex","RegExp","escapeRegExp","_super","_proto","_constructor","_definition","_class","_classopt","Object","__initialized__","_superopt","_superclass","merge","one","off","batch","eventObject","onces","isString","Event","originalData","publisher","slice","Err","Error","err","stack","error","isError","Evt","cancelBubble","defaultPrevented","propagationStopped","immediatePropagationStopped","init","assign","stopPropagation","stopImmediatePropagation","preventDefault","isEvent","ESC","ENTER","DELETE","SHIFT","CTRL","CMD","fix","originalEvent","position","clientX","clientY","relative","clone","invert","navs","code","isPrimaryButton","button","hasPrimaryModifier","metaKey","hasSecondaryModifier","shiftKey","jQuery","snap","Point","tmp","trim","toNumber","manhattan","toJson","triangle","difference","alignment","bbox","bearing","Line","bear","dec","equals","polar","adhereToBox","contains","stringify","sep","toValue","isPoint","lat1","lat2","lon1","lon2","deltaLon","intersect","intersection","isLine","Curve","unshift","pointAt","json","curve","intersectnum","isCurve","BBox","prop","Path","simple","center","corner","dot","contain","isVector","vertices","isBBox","dw","dh","tbox","me","bdat","tdat","sideNearestPoint","tx","ty","tw","th","distToLeft","distToRight","distToTop","distToBottom","closest","side","pointNearestPoint","fixsegment","segment","attr","tq","T","Q","qx","qy","X","Y","arc2curve","bx","by","quad2curve","line2curve","cat2bezier","def","_13","_23","rx","ry","large_arc_flag","sweep_flag","recursive","_120","res","f1","f2","rx2","ry2","asin","df","f2old","x2old","y2old","s1","s2","tan","hx","hy","m3","m4","path1","path2","x1m","y1m","x2m","y2m","bz1","bz2","cv1","cv2","si","sj","inter","ss1","ln1","ss2","ln2","kk","segment1","segment2","bezier1","bezier2","isPath","absolute","seg","itm","toUpperCase","toUpper","jj","pop","ll","head","tail","toLower","fixarc","pi","com","curve2curve","fixarc2","com1","com2","p1","p2","fixmove2","segments1","segments2","a1","a2","attrs2","pcom","fixArc2","xmin","ymin","xmax","ymax","lengthAt","ps","segmentAt","total","sp","path","vs","addVertext","vertext","isSimple","vx","vy","nearest","best","bestlen","currpoint","currdist","tolerance","bestdist","prevlen","nextlen","prevdist","nextdist","moveTo","lineTo","append","maxs","Matrix","chr","multiply","isMatrix","delta","sx","sy","determinant","radSkewX","cosSkewX","sinSkewX","scaleX","scaleY","toFilter","Collection","collection","items","item","first","last","clear","modify","each","iteratee","Vector","vectors","has","id","not","filter","o","offset","pull","reverse","methods","method","Shape","shapes","keys","identity","component","Tree","nodes","node","bisect","keygen","order","sort","root","cascade","bubble","Link","links","domParser","REGEX_SVG_BUILDER","selector","query","fragment","element","DOMParser","parseFromString","documentElement","childNodes","deep","cloneNode","E","pseudo","belong","setAttributeNS","setAttribute","outerHeight","margin","show","hide","getBoundingClientRect","css","addClass","classes","values","chain","className","baseVal","uniq","removeClass","hasClass","prepend","appendTo","prependTo","before","after","detach","types","trigger","text","focus","select","createRange","getSelection","selectNodeContents","selection","removeAllRanges","addRange","contextmenu","state","empty","scrollTop","scrollLeft","child","children","curr","parentNode","nodeName","tree","container","traversable","selectable","focusable","snappable","selected","rendered","attrs","style","class","plugins","transformer","collector","definer","animator","reactor","dragger","dropper","network","history","panzoom","toolmgr","toolpad","snapper","editor","graph","bboxView","bboxPristine","bboxOriginal","matrixCurrent","matrixView","shapeOriginal","shapeView","elem","createElementNS","Transformer","onTransformerAfterTranslate","onTransformerAfterRotate","onTransformerAfterScale","isPaper","ToolManager","onActivateTool","onDeactivateTool","register","viewport","viewportGuid","native","getCTM","refresh","reset","removeAttr","dirty","invalidate","interactable","Reactor","animable","Animator","animstart","animating","animend","resizable","Resizer","beforeresize","onResizerBeforeResize","afterresize","onResizerAfterResize","rotatable","Rotator","afterrotate","onRotatorAfterRotate","draggable","Dragger","beforedrag","onDraggerStart","drag","onDraggerMove","afterdrag","onDraggerEnd","zoomable","Panzoom","droppable","Dropper","dropenter","onDropperEnter","dropleave","onDropperLeave","connectable","Network","clickable","editable","Editor","beforeedit","edit","isBoolean","enabled","getDefaultInstance","removeAttribute","cursor","predicate","added","removed","removal","pullAll","vmatrix","vrotate","rmatrix","rcenter","shapeRelative","parentMatrix","ma","pa","dt","dimension","getBBox","clientLeft","clientTop","clientWidth","clientHeight","bottom","nbox","pbox","elems","render","sibling","isViewport","setContext","attach","isContainer","isRendered","isTraversable","relocate","resetMatrix","targetMatrix","applyMatrix","ancestors","descendants","deselect","destroy","unregister","initial","add","isResizable","resume","isRotatable","suspend","_collector","animate","duration","easing","callback","label","sendToFront","sendToBack","resize","isGroup","isSelectable","isDraggable","isConnectable","isSnappable","isSelected","tool","master","syncBeforeDrag","syncDrag","syncAfterDrag","Ellipse","gx","gy","commit","bb","magnify","Circle","ar","Rect","origpath","w","ms","mr","ro","rd","ox","oy","Polyline","Polygon","Group","stroke","stroke-width","fill","Text","text-anchor","lineHeight","fontSize","rows","font-size","write","onTextRender","addSpan","span","arrange","wrap","word","words","lines","lineNo","getComputedTextLength","textBox","targetBox","Image","preserveAspectRatio","src","xlink:href","align","aspect","showOrigin","components","manager","xmlns:link","overflow","initLayout","Collector","linker","Linker","pencil","Pencil","Definer","Snapper","Toolpad","clipper","Clipper","Manager","listenLinkChange","listenLinkAfterDestroy","defaultInstance","vp","flush","activate","locateLink","locateShape","arrangeLinks","ellipse","circle","rect","polyline","polygon","arg","storage","Registry","tagName","collect","wipe","pid","hasOwnProperty","Layout","fit","view","smooth","smoothness","grabVector","grabLink","pointerLocation","pointer","screenLocation","coord","screen","getScreenCTM","dragSnapping","mode","routerType","createRouter","createLink","convex","idx","sweeper","Sweeplink","findConvex","reloadConvex","removeConvex","arrangeShapes","Router","domain","waypoints","bendpoints","bending","connect","execute","route","repair","port","initTrans","updateTrans","trans","connecting","stopTrans","portCentering","axis","porting","routes","cable","sortIntersection","isRepairable","getSegmentIndex","sortBy","floor","getClosestIntersect","repairBendpoint","bend","oldport","newport","repairRoutes","bound1","bound2","clonedRoutes","tidyRoutes","Directed","space","sourceNetwork","sourceBBox","sourceBox","targetNetwork","targetBBox","orient","orientation","direct","direction","tuneup","sdot","edot","maxlen","sourcePath","targetPath","rangeStart","rangeEnd","segmentStart","segmentEnd","oldSource","oldTarget","align1","align2","cropBinding","srcport","tarport","cropped","cropConnect","changed","Orthogonal","croping","bends","repaired","ranges","snapH","snapV","sourceBound","targetBound","segmentAlign","q1","q2","newStart","newEnd","sourceOrient","targetOrient","dotlen","newRangeStart","cropBending","getHandler","resource","labelDistance","connected","block","coat","controls","handlers","metadata","icon","initComponent","initMetadata","bindResource","onRouterRoute","onRouterReroute","excludes","router_type","client_id","client_source","client_target","diagram_id","source_id","target_id","maps","label_distance","comp","ghost","manual","batchSync","onCoatClick","onCoatSelect","onCoatDeselect","onCoatBeforeDrag","onCoatAfterDrag","onCoatEdit","onCoatBeforeEdit","onCoatAfterDestroy","onLabelRender","onLabelAfterDrag","labelVendor","vendor","onLabelDoubletap","tools","title","onConfigToolClick","onFrontToolClick","onBackToolClick","onTrashToolClick","unbindResource","existing","beforedestroy","bindSource","bindTarget","unbindSource","unbindTarget","connectByCommand","disconnect","reload","redraw","silent","bound","componentLabel","componentCoat","single","clearCollection","renderControl","resumeControl","suspendControl","relocateHead","relocateTail","isConnected","sourceShape","targetShape","sourceType","targetType","near","startEdit","showControl","onSourceAfterRotate","oport","nport","onSourceSelect","onSourceBeforeDrag","onSourceDrag","console","warn","onSourceAfterDrag","onSourceAfterResize","onSourceBeforeDestroy","onTargetAfterRotate","onTargetSelect","onTargetBeforeDrag","onTargetDrag","onTargetAfterDrag","onTargetAfterResize","onTargetBeforeDestroy","linkid","controlImage","controlSize","control","onControlStart","onControlMove","onControlEnd","snaphor","snapver","conseg","ss","createTree","findIndex","swap","KEY_TRESHOLD","SLOPE_TRESHOLD","queue","found","process","extract","indexA","indexB","minIndex","intercept","validate","lineA","lineB","alignA","alignB","ix","isOverlap","isIntersection","Plugin","activator","enable","disable","installed","install","getPluginHandler","uninstall","definitions","holder","defineArrowMarker","defineCircleMarker","marker","vendors","interact","currentTarget","dropzone","gesturable","unset","actions","simulate","events","mat","act","inv","equalizeTransform","tt1","tt2","maxlength","emptyTransform","equal","stacks","keyframes","Animation","scenes","animation","100","frame","pause","stop","status","asize","scene","time","playing","applied","ssize","at","initstatus","Date","inverse","able","defaults","eq","semantic","timestamp","player","play","prog","anim","tick","paused","ease","played","repeat","g","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","frames","pickBy","times","linier","easeIn","easeOut","easeInOut","backIn","backOut","elastic","math","bounce","getRestrictOrigin","handle","suspended","restriction","handleImage","handleSize","helper","ow","oh","cw","ch","snapping","onHolderRender","ne","se","sw","nw","onHandleBeforeDrag","onHandleDrag","onHandleAfterDrag","hs","hw","hh","restrict","setupRestriction","MAX_VALUE","Number","MAX_SAFE_INTEGER","oldcen","newcen","vdx","vdy","suspendHelper","handleNode","resizing","manualStart","onstart","resumeHelper","onmove","edx","edy","onend","vcenter","drotate","interaction","pointerIsDown","interacting","prepared","setEventXY","startCoords","pointers","edge","rpath","vpath","cmp","rubber","collecting","onKeynavDown","onKeynavUp","styleCursor","action","decollect","syncdrag","tdx","tdy","inertia","grid","cls","rotation","scaling","dragging","onVectorRender","onDragStart","onDragMove","onDragEnd","onPointerDown","fixsnap","createSnapGrid","setOptions","targets","endOnly","resetSnap","moveHandler","onPointerMove","edata","axs","pageX","pageY","overlap","accept","checker","onDropValidate","ondropactivate","onDropActivate","ondropdeactivate","onDropDeactivate","ondragenter","onDragEnter","ondragleave","onDragLeave","ondrop","onDrop","edrop","edrag","dropped","dropel","dragel","CLS_CONNECT_VALID","CLS_CONNECT_INVALID","CLS_CONNECT_RESET","CLS_CONNECT_CLEAR","CLS_CONNECT_HOVER","CONNECT_OUTGOING","CONNECT_INCOMING","wiring","tuning","limitIncoming","limitOutgoing","linking","pole","cables","pairs","invalidateTrans","relatedTarget","canConnect","removeLink","isSource","isTarget","sourceVector","targetVector","paperLayout","beforeDestroyHandler","onLinkBeforeDestroy","addLink","connectByLinker","connections","connectionsLength","disconnected","linkIds","conn","pair","repairLinks","log","hasConnection","conns","opts","outgoing","incoming","History","limit","save","lim","drop","go","back","zoomRange","panEnabled","zoomEnabled","showToolbox","caching","scrolling","steps","zooming","zoom","toolbox","panning","stopHandler","onMouseWheel","revalidate","zoomReset","zoomIn","zoomOut","currentZoom","zoomType","factor","currentScale","matrixScale","onBeforeZoom","onZoom","scroll","onBeforeScroll","onScroll","vscroll","hscroll","deltaMode","deltaX","deltaY","altKey","onPointerStop","leading","trailing","visits","anchor","build","sbox","cropping","spath","scrop","tpath","tcrop","crop","utils","deactivateAll","deactivate","except","toggle","writing","startHandler","drawShape","MIN_BOX_WIDTH","MIN_BOX_HEIGHT","editing","commitHandler","onDoubleTap","vbox","coords","snapped","clients","stubx","stuby","clientId","client","getClientCenter","beforeDragHandler","afterDragHandler","afterDestroyHandler","osnaps","onClientBeforeDrag","onClientAfterDrag","onClientAfterDestroy","repairClient","showStub","hideStub","stub","pt","diffx","diffy","snapx","snapy","pad","onShapeSelect","onShapeDeselect","onLinkSelect","onLinkDeselect","onShapeToolClick","onLinkToolClick","meta","body","copy","paste","clips","cut","clip","alias","strokeWidth","client_parent","client_pool","parent_id","stroke_width","update","suspendLayout","resumeLayout","hasChild","addChild","placeTarget","onChildBeforeDestroy","removeChild","shapeComponent","onChildAfterDrag","connectHandler","onChildConnect","autoResize","paperGuid","blockComponent","childComponent","labelComponent","pool","linkData","onLabelEdit","onBeforeDrag","capture","onAfterDrag","shapeMatrix","blockMatrix","onAfterRotate","shapeRotate","onSelect","onDeselect","onConnect","onAfterResize","onBeforeDestroy","onAfterDestroy","isShape","activity","Start","pmgr","Final","inner","Action","onModeClick","Fork","Join","Lane","header","transfer","initDropzone","onAboveToolClick","onBelowToolClick","onUpToolClick","onDownToolClick","onBeforeResize","Pool","onTransferEnd","poolGuid","laneGuid","appended","lanes","addSiblingBellow","bringToFront","childBox","lane","offsetWidth","offsetLeft","offsetTop","createSpaceBellow","boxAfter","boxBefore","netcom","relocateLinks","refreshSnapper","createSiblingAbove","createSpaceAbove","createSiblingBellow","actualBBox","populateChildren","childOffsets","resizeBy","sourceParent","targetParent","sourcePool","targetPool","populateLinks","isolated","separated","relocateSiblings","refreshContents","refreshChildren","laneChildComponent","laneChildBox","moveUp","moveDown","contents","laneIndex","comnet","dx1","dx2","dy1","dy2","sets","laneNode","prevNode","laneBox","prevBox","nextNode","nextBox","populateContents","connectableBlock","contentKeys","pairVector","pairShape","common","Label","labelBox","encoded","encodeURIComponent","String","fromCharCode","decodeURIComponent","download","uri","msSaveOrOpenBlob","blob","createBlob","href","display","appendChild","click","open","byteString","atob","mimeString","buffer","ArrayBuffer","intArray","Uint8Array","Blob","exportImage","createDataURI","onload","canvas","createElement","getContext","background","fillStyle","fillRect","drawImage","toDataURL","encoder","compression","onerror","createData","sty","xml","cloned","getElementStyles","innerHTML","insertBefore","XMLDOC","btoa","rules","rule","styleSheets","cssRules","selectorText","querySelector","cssText","Exporter","exportDataURI","exportSVG","filename","createEvent","initEvent","dispatchEvent","createEventObject","fireEvent","exportJPEG","exportPNG","exportFile","exportBlob","defaultType","pallets","snapshoot","deselectAll","removeSelection","undo","redo","addPallet","drawing","pick","movable","stopPicking","saveAsImage","exporter","saveAsFile","saveAsBlob","traverse","Parser","_props","_shapes","_links","_tree","parse","Pallet","Activity","picking","begin","template","dragStart","dragStop","dragMove","Diagram","parser","getShapeBy","getLinkBy","getShapes","getLinks","indexes","findShapeBy","description","cover","rendering","active","beforeDrag","afterDrag","hasLane","snappcomp","pools","JSON","resolve","promise","then","popup","Dialog","opened","backdrop","backdrop_click","buttons","onclick","close","backdropUser","margin-top","margin-left","dialog"],"mappings":"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","file":"graph.min.js","sourcesContent":["\r\n(function(){\r\n\r\n    /**\r\n     * Lodash polyfill\r\n     */\r\n\r\n    _.float = parseFloat;\r\n\r\n    _.gcd = function(array) {\r\n        if (array.length === 2) {\r\n            var a = array[0], b = array[1], t;\r\n\r\n            while (b > 0) {\r\n                t = b;\r\n                b = a % b;\r\n                a = t;\r\n            }\r\n\r\n            return a;\r\n        } else {\r\n            var r = array[0], len = array.length, i;\r\n            for (i = 1; i < len; i++) {\r\n                r = _.gcd([r, array[i]]);\r\n            }\r\n            return r;\r\n        }\r\n    };\r\n\r\n    _.lcm = function(array) {\r\n        if (array.length === 2) {\r\n            var a = array[0], b = array[1];\r\n            return a * (b / _.gcd([a, b]));\r\n        } else {\r\n            var r = array[0], len = array.length, i;\r\n            for (i = 1; i < len; i++) {\r\n                r = _.lcm([r, array[i]]);\r\n            }\r\n            return r;\r\n        }\r\n    };\r\n\r\n    _.format = function() {\r\n        var params = _.toArray(arguments),\r\n            format = params.shift();\r\n        return format.replace(/{(\\d+)}/g, function(match, number) {\r\n            return typeof params[number] != 'undefined'\r\n                ? params[number]\r\n                : match;\r\n        });\r\n    }\r\n\r\n    _.insert = function(array, index, insert) {\r\n        Array.prototype.splice.apply(array, [index, 0].concat(insert));\r\n        return array;\r\n    };\r\n\r\n    /**\r\n     * Array move (swap)\r\n     * http://stackoverflow.com/questions/5306680/move-an-array-element-from-one-array-position-to-another/5306832#5306832\r\n     */\r\n    _.move = function(array, from, to) {\r\n        var size = array.length;\r\n        \r\n        while(from < 0) {\r\n            from += size;\r\n        }\r\n        \r\n        while(to < 0) {\r\n            to += size;\r\n        }\r\n\r\n        if (to >= size) {\r\n            var k = to - size;\r\n            while((k--) + 1) {\r\n                array.push(undefined);\r\n            }\r\n        }\r\n\r\n        array.splice(to, 0, array.splice(from, 1)[0]);\r\n        return array;\r\n    };\r\n\r\n    /**\r\n     * Array permutation\r\n     * https://github.com/lodash/lodash/issues/1701\r\n     */\r\n    _.permute = function(array, permuter) {\r\n        if(_.isFunction(permuter)) {\r\n            return _.reduce(array, function(result, value, key){\r\n                result[permuter(key, value)] = value;\r\n                return result;\r\n            }, []);\r\n        } else if (_.isArray(permuter)) {\r\n            return _.reduce(permuter, function(result, value, key){\r\n                result[key] = array[permuter[key]];\r\n                return result;\r\n            }, []);\r\n        }\r\n        return array;\r\n    };  \r\n    \r\n    /**\r\n     *  Bisector\r\n     *  https://github.com/d3/d3-array/blob/master/src/bisector.js\r\n     */\r\n    function ascending(a, b) {\r\n        return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\r\n    }\r\n\r\n    function descending(a, b) {\r\n        return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\r\n    }\r\n\r\n    function bisector(compare) {\r\n        return {\r\n            left: function(a, x, lo, hi) {\r\n                if (arguments.length < 3) lo = 0;\r\n                if (arguments.length < 4) hi = a.length;\r\n                while (lo < hi) {\r\n                    var mid = lo + hi >>> 1;\r\n                    if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\r\n                }\r\n                return lo;\r\n            },\r\n            right: function(a, x, lo, hi) {\r\n                if (arguments.length < 3) lo = 0;\r\n                if (arguments.length < 4) hi = a.length;\r\n                while (lo < hi) {\r\n                    var mid = lo + hi >>> 1;\r\n                    if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\r\n                }\r\n                return lo;\r\n            }\r\n        };\r\n    }\r\n\r\n    _.bisector = function(f) {\r\n        return bisector(f.length === 1 ? function(d, x){\r\n            return ascending(f(d), x);\r\n        } : f);\r\n    };\r\n    \r\n    /** \r\n     *  Sorter\r\n     *  https://github.com/gka/d3-jetpack/blob/master/d3-jetpack.js\r\n     */\r\n    _.ascendingKey = function(key) {\r\n        return typeof key == 'function' ? function (a, b) {\r\n            return key(a) < key(b) ? -1 : key(a) > key(b) ? 1 : key(a) >= key(b) ? 0 : NaN;\r\n        } : function (a, b) {\r\n            return a[key] < b[key] ? -1 : a[key] > b[key] ? 1 : a[key] >= b[key] ? 0 : NaN;\r\n        };\r\n    };\r\n\r\n    _.isIE = function() {\r\n        var na = global.navigator,\r\n            ua = (na && na.userAgent || '').toLowerCase(),\r\n            ie = ua.indexOf('MSIE ');\r\n\r\n        if (ie > 0 || !!ua.match(/Trident.*rv\\:11\\./)) {\r\n            return parseInt(ua.substring(ie + 5, ua.indexOf('.', ie)));\r\n        }\r\n        return false;\r\n    };\r\n\r\n}());","\r\n//////////////////////////////////////////////////////////////////\r\n/*\r\n * Graph - SVG Library\r\n * Documentation visit: https://github.com/londomloto/graph\r\n *\r\n * @author londomloto <roso.sasongko@gmail.com>\r\n * @author londomloto <roso@kct.co.id>\r\n */\r\n//////////////////////////////////////////////////////////////////\r\n\r\n(function(){\r\n\r\n    var GLOBAL = typeof window != 'undefined' && \r\n                 window.Math == Math \r\n                    ? window \r\n                    : (typeof self != 'undefined' && self.Math == Math \r\n                        ? self \r\n                        : Function('return this')());\r\n\r\n    var DOCUMENT  = document;\r\n    var LOCATION  = location;\r\n    var NAVIGATOR = navigator;\r\n\r\n    /**\r\n     * Size for cached result\r\n     */\r\n    var CACHE_SIZE = 100;\r\n\r\n    /**\r\n     * Size for memoize function\r\n     */\r\n    var MEMO_SIZE = 1000;\r\n\r\n    //--------------------------------------------------------------------//\r\n    \r\n    var readyFn = [];\r\n\r\n    /**\r\n     * Banner\r\n     */\r\n    GLOBAL.Graph = function(ready) {\r\n        readyFn.push(ready);\r\n    };\r\n\r\n    Graph.VERSION = '1.0.0';\r\n    \r\n    Graph.AUTHOR = 'Kreasindo Cipta Teknologi';\r\n    \r\n    /**\r\n     * Config\r\n     */\r\n    Graph.cached = {};\r\n\r\n    Graph.config = {\r\n        base: '../',\r\n        locale: 'id',\r\n        svg: {\r\n            version: '1.1'\r\n        },\r\n        xmlns: {\r\n            svg: 'http://www.w3.org/2000/svg',\r\n            xlink: 'http://www.w3.org/1999/xlink',\r\n            html: 'http://www.w3.org/1999/xhtml'\r\n        },\r\n        font: {\r\n            family: 'Segoe UI',\r\n            size: '12px',\r\n            line: 1\r\n        },\r\n        resizer: {\r\n            image: 'resize-control.png',\r\n            size: 17\r\n        },\r\n        rotator: {\r\n            image: 'rotator.png',\r\n            size: 21\r\n        }\r\n    };\r\n\r\n    Graph.setup = function(name, value) {\r\n        if (_.isPlainObject(name)) {\r\n            _.extend(Graph.config, name);\r\n        } else {\r\n            Graph.config[name] = value;\r\n        }\r\n    };\r\n\r\n    // Graph.toString = function() {\r\n    //     return 'SVG Library presented by ' + Graph.AUTHOR;\r\n    // }\r\n    \r\n\r\n    /**\r\n     * String params\r\n     */\r\n    Graph.string = {\r\n        ID_VECTOR: 'graph-vector-id',\r\n        ID_SHAPE: 'graph-shape-id',\r\n        ID_LINK: 'graph-link-id',\r\n        ID_PORT: 'graph-port-id'\r\n    };\r\n\r\n    /**\r\n     * Style params\r\n     */\r\n    Graph.styles = {\r\n        VECTOR: 'graph-elem',\r\n        PAPER: 'graph-paper',\r\n        VIEWPORT: 'graph-viewport',\r\n\r\n        SHAPE: 'graph-shape',\r\n        SHAPE_BLOCK: 'comp-block',\r\n        SHAPE_LABEL: 'comp-label',\r\n        SHAPE_HEADER: 'comp-header',\r\n        SHAPE_CHILD: 'comp-child',\r\n        SHAPE_DRAG: 'shape-draggable',\r\n\r\n        LINK_HEAD: 'graph-link-head',\r\n        LINK_TAIL: 'graph-link-tail'\r\n    };\r\n\r\n    /**\r\n     * Icon params\r\n     */\r\n    Graph.icons = {\r\n        ZOOM_IN: 'ion-android-add',\r\n        ZOOM_OUT: 'ion-android-remove',\r\n        ZOOM_RESET: 'ion-pinpoint',\r\n\r\n        SHAPE: 'bpmn-icon-start-event-none',\r\n        SHAPE_LANE: 'bpmn-icon-participant',\r\n        SHAPE_LINK: 'ion-android-share-alt',\r\n        SHAPE_ACTION: 'bpmn-icon-task',\r\n        SHAPE_ROUTER: 'bpmn-icon-gateway-none',\r\n\r\n        LANE_ABOVE: 'bpmn-icon-lane-insert-above',\r\n        LANE_BELOW: 'bpmn-icon-lane-insert-below',\r\n\r\n        CONFIG: 'bpmn-icon-screw-wrench',\r\n        LINK: 'bpmn-icon-connection-multi',\r\n        TRASH: 'bpmn-icon-trash',\r\n\r\n        SEND_TO_BACK: 'font-icon-send-back',\r\n        SEND_TO_FRONT: 'font-icon-bring-front',\r\n\r\n        MOVE_UP: 'ion-android-arrow-up',\r\n        MOVE_DOWN: 'ion-android-arrow-down',\r\n\r\n        ROUTER_OR: 'bpmn-icon-gateway-or',\r\n        ROUTER_XOR: 'bpmn-icon-gateway-xor',\r\n        ROUTER_NONE: 'bpmn-icon-gateway-none',\r\n        ROUTER_PARALLEL: 'bpmn-icon-gateway-parallel'\r\n    };\r\n\r\n    Graph.doc = function() {\r\n        \r\n    };\r\n\r\n    Graph.global = function() {\r\n        \r\n    };  \r\n\r\n    /**\r\n     * Language & Core helper\r\n     */\r\n    \r\n    Graph.isHTML = function(obj) {\r\n        return obj instanceof HTMLElement;\r\n    };\r\n\r\n    Graph.isSVG = function(obj) {\r\n        return obj instanceof SVGElement;\r\n    };\r\n\r\n    Graph.isElement = function(obj) {\r\n        return obj instanceof Graph.dom.Element;\r\n    };\r\n\r\n    Graph.isMac = function() {\r\n        return (/mac/i).test(NAVIGATOR.platform);    \r\n    };\r\n\r\n    Graph.ns = function(namespace) {\r\n        var cached = Graph.lookup('Graph', 'ns', namespace);\r\n\r\n        if (cached.clazz) {\r\n            return cached.clazz;\r\n        }\r\n\r\n        var parts = _.split(namespace, '.'),\r\n            parent = GLOBAL,\r\n            len = parts.length,\r\n            current,\r\n            i;\r\n\r\n        for (i = 0; i < len; i++) {\r\n            current = parts[i];\r\n            parent[current] = parent[current] || {};\r\n            parent = parent[current];\r\n        }\r\n\r\n        if (_.isFunction(parent)) {\r\n            cached.clazz = parent;\r\n        }\r\n\r\n        return parent;\r\n    };\r\n\r\n    Graph.uuid = function() {\r\n        // credit: http://stackoverflow.com/posts/2117523/revisions\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n            var r = Math.random() * 16|0;\r\n            var v = c == 'x' ? r : (r&0x3|0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Simple hashing\r\n     * http://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript-jquery\r\n     */\r\n    Graph.hash = function(str) {\r\n        var hval = 0x811c9dc5, i, l;\r\n        \r\n        for (i = 0, l = str.length; i < l; i++) {\r\n            hval ^= str.charCodeAt(i);\r\n            hval += (hval << 1) + (hval << 4) + (hval << 7) + (hval << 8) + (hval << 24);\r\n        }\r\n\r\n        return ('0000000' + (hval >>> 0).toString(16)).substr(-8);\r\n\r\n        // var hash = 0, chr, len, i;\r\n        \r\n        // if ( ! str.length) {\r\n        //     return hash;\r\n        // }\r\n\r\n        // for (i = 0, len = str.length; i < len; i++) {\r\n        //     chr   = str.charCodeAt(i);\r\n        //     hash  = ((hash << 5) - hash) + chr;\r\n        //     hash |= 0;\r\n        // }\r\n\r\n        // return hash;\r\n    };\r\n\r\n    // prepare for prototypal factory\r\n    Graph.create = function(superclass, props) {\r\n        \r\n    };\r\n\r\n    Graph.factory = function(clazz, args) {\r\n        args = [clazz].concat(args);\r\n        return new (Function.prototype.bind.apply(clazz, args));\r\n    };\r\n\r\n    Graph.expand = function(target, source, scope) {\r\n        var tproto = target.constructor.prototype,\r\n            sproto = source.constructor.prototype;\r\n\r\n        scope = _.defaultTo(source);\r\n\r\n        _.forOwn(sproto, function(value, key){\r\n            if (_.isFunction(value) && _.isUndefined(tproto[key])) {\r\n                (function(key, value){\r\n                    tproto[key] = _.bind(value, scope);\r\n                }(key, value));    \r\n            }\r\n        });\r\n    };\r\n\r\n    Graph.extend = function(clazz, props) {\r\n        if (_.isPlainObject(clazz)) {\r\n            props = clazz;\r\n            clazz = Graph.lang.Class;\r\n        }\r\n        return clazz.extend(props);\r\n    };\r\n\r\n    Graph.mixin = function(target, source) {\r\n        this.extend(target, source, target);\r\n    };\r\n\r\n    Graph.lookup = function(group, token) {\r\n        var args = _.toArray(arguments), cached, credit;\r\n\r\n        group  = args.shift();\r\n        token  = _.join(args, '|');\r\n        cached = Graph.cached[group] = Graph.cached[group] || {};\r\n        credit = group == 'Regex.event' ? null : CACHE_SIZE;\r\n\r\n        if (cached[token]) {\r\n            cached[token].credit = credit;\r\n        } else {\r\n            cached[token] = {\r\n                credit: credit,\r\n                remove: (function(group, token){\r\n                    return function() {\r\n                        delete Graph.cached[group][token];    \r\n                    };\r\n                }(group, token))\r\n            }\r\n        }\r\n\r\n        _.debounce(function(t){\r\n            _.forOwn(cached, function(v, k){\r\n                if (k != t) {\r\n                    if (cached[k].credit !== null) {\r\n                        cached[k].credit--;\r\n                        if (cached[k].credit <= 0) {\r\n                            delete cached[k];\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        })(token);\r\n\r\n        return cached[token];\r\n    };\r\n\r\n    Graph.memoize = function(func) {\r\n        return function memo() {\r\n            var param = _.toArray(arguments),\r\n                token = _.join(param, \"\\u2400\"),\r\n                cache = memo.cache = memo.cache || {},\r\n                saved = memo.saved = memo.saved || [];\r\n\r\n            if ( ! _.isUndefined(cache[token])) {\r\n                for (var i = 0, ii = saved.length; i < ii; i++) {\r\n                    if (saved[i] == token) {\r\n                        saved.push(saved.splice(i, 1)[0]);\r\n                        break;\r\n                    }\r\n                }\r\n                return cache[token];\r\n            }\r\n\r\n            if (saved.length >= MEMO_SIZE) {\r\n                delete cache[saved.shift()];\r\n            }\r\n\r\n            saved.push(token);\r\n            cache[token] = func.apply(this, param);\r\n\r\n            return cache[token];\r\n        }\r\n    };\r\n\r\n    Graph.defer = function() {\r\n        return $.Deferred();\r\n    };\r\n\r\n    Graph.when = $.when;\r\n\r\n    /**\r\n     * Vector\r\n     */\r\n    Graph.paper = function(width, height, options) {\r\n        return Graph.factory(Graph.svg.Paper, [width, height, options]);\r\n    };\r\n\r\n    Graph.svg = function(type) {\r\n        var args = _.toArray(arguments), svg;\r\n\r\n        type = args.shift();\r\n        svg = Graph.factory(Graph.svg[_.capitalize(type)], args);\r\n        args = null;\r\n        \r\n        return svg;\r\n    };\r\n\r\n    Graph.shape = function(names, options) {\r\n        var clazz, shape, chunk;\r\n\r\n        chunk = names.lastIndexOf('.');\r\n        names = names.substr(0, chunk) + '.' + _.capitalize(names.substr(chunk + 1));\r\n        clazz = Graph.ns('Graph.shape.' + names);\r\n        shape = Graph.factory(clazz, options);\r\n\r\n        chunk = names = clazz = null;\r\n        return shape;\r\n    };\r\n\r\n    /**\r\n     * Layout\r\n     */\r\n    Graph.layout = function(type) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Router\r\n     */\r\n    Graph.router = function(type) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Link / Connector\r\n     */\r\n    Graph.link = function(type) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Plugin\r\n     */\r\n    Graph.plugin = function(proto) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Diagram\r\n     */\r\n    Graph.diagram = function(name, options) {\r\n        var clazz, diagram;\r\n        clazz = Graph.diagram.type[_.capitalize(name)];\r\n        return Graph.factory(clazz, [options]);\r\n    };\r\n\r\n    Graph.diagram.type = {};\r\n    Graph.diagram.util = {};\r\n    Graph.diagram.pallet = {};\r\n\r\n    /**\r\n     * Pallet\r\n     */\r\n    Graph.pallet = function(type, options) {\r\n        var clazz;\r\n        clazz = Graph.diagram.pallet[_.capitalize(type)];\r\n        return Graph.factory(clazz, [options]);\r\n    };\r\n    \r\n    /**\r\n     * Topic\r\n     */\r\n    Graph.topic = {\r\n        subscribers: {\r\n\r\n        },\r\n        publish: function(topic, message, scope) {\r\n            var subs = Graph.topic.subscribers,\r\n                lsnr = subs[topic] || [];\r\n\r\n            _.forEach(lsnr, function(handler){\r\n                if (handler) {\r\n                    handler.call(null, message, scope);  \r\n                }\r\n            });\r\n        },\r\n\r\n        subscribe: function(topic, handler) {\r\n\r\n            if (_.isPlainObject(topic)) {\r\n                var unsub = [];\r\n\r\n                _.forOwn(topic, function(h, t){\r\n                    (function(t, h){\r\n                        var s = Graph.topic.subscribe(t, h);\r\n                        unsub.push({topic: t, sub: s});\r\n                    }(t, h));\r\n                });\r\n\r\n                return {\r\n                    unsubscribe: (function(unsub){\r\n                        return function(topic) {\r\n                            if (topic) {\r\n                                var f = _.find(unsub, function(u){\r\n                                    return u.topic == topic;\r\n                                });\r\n                                f && f.sub.unsubscribe();\r\n                            } else {\r\n                                _.forEach(unsub, function(u){\r\n                                    u.sub.unsubscribe();\r\n                                });\r\n                            }\r\n                        };\r\n                    }(unsub))\r\n                };\r\n            }\r\n\r\n            var subs = Graph.topic.subscribers, data;\r\n\r\n            subs[topic] = subs[topic] || [];\r\n            subs[topic].push(handler);\r\n\r\n            return {\r\n                unsubscribe: (function(topic, handler){\r\n                    return function() {\r\n                        Graph.topic.unsubscribe(topic, handler);\r\n                    };\r\n                }(topic, handler))\r\n            };\r\n        },\r\n\r\n        unsubscribe: function(topic, handler) {\r\n            var subs = Graph.topic.subscribers, \r\n                lsnr = subs[topic] || [];\r\n\r\n            for (var i = lsnr.length - 1; i >= 0; i--) {\r\n                if (lsnr[i] === handler) {\r\n                    lsnr.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    Graph.message = function(message, type) {\r\n        type = _.defaultTo(type, 'info');\r\n        \r\n        Graph.topic.publish('graph:message', {\r\n            type: type,\r\n            message: message\r\n        });\r\n    };\r\n\r\n    ///////////////////////////// LOAD CONFIG /////////////////////////////\r\n    \r\n    if (GLOBAL.graphConfig) {\r\n        Graph.setup(GLOBAL.graphConfig);\r\n    }\r\n\r\n    ///////////////////////////// I18N /////////////////////////////\r\n    \r\n    Graph._ = function(message) {\r\n        return message;\r\n    };\r\n\r\n    /////////////////////////// CORE NAMESPACES ////////////////////////////\r\n    \r\n    Graph.ns('Graph.lang');\r\n    Graph.ns('Graph.collection');\r\n    Graph.ns('Graph.registry');\r\n    Graph.ns('Graph.data');\r\n    Graph.ns('Graph.popup');\r\n    Graph.ns('Graph.shape.activity');\r\n    Graph.ns('Graph.shape.common');\r\n\r\n    ///////////////////////// HOOK DOCUMENT CLICK /////////////////////////\r\n    \r\n    Graph(function(){\r\n        var doc = $(DOCUMENT);\r\n\r\n        doc.on('mousedown', function(e){\r\n            var target = $(e.target),\r\n                vector = target.data(Graph.string.ID_VECTOR);\r\n\r\n            var paper;\r\n\r\n            if (vector) {\r\n                vector = Graph.registry.vector.get(vector);\r\n                paper = vector.paper();\r\n                Graph.cached.paper = paper ? paper.guid() : null;\r\n            }\r\n\r\n            vector = paper = null;\r\n        });\r\n\r\n        doc.on('keydown', function(e){\r\n            var paper;\r\n\r\n            if (Graph.event.isNavigation(e)) {\r\n                paper = Graph.cached.paper;\r\n\r\n                if (paper) {\r\n                    paper = Graph.registry.vector.get(paper);\r\n                    e.originalType = 'keynavdown';\r\n                    paper.fire(e);\r\n                }\r\n            } else if (e.ctrlKey || e.cmdKey) {\r\n                paper = Graph.cached.paper;\r\n                \r\n                if (paper) {\r\n                    paper = Graph.registry.vector.get(paper);\r\n                    if (e.keyCode === Graph.event.C) {\r\n                        e.originalType = 'keycopy';\r\n                        paper.fire(e);\r\n                    } else if (e.keyCode === Graph.event.V) {\r\n                        e.originalType = 'keypaste';\r\n                        paper.fire(e);\r\n                    }\r\n                }   \r\n            }\r\n        });\r\n\r\n        doc.on('keyup', function(e){\r\n            if (Graph.event.isNavigation(e)) {\r\n                var paper = Graph.cached.paper;\r\n                if (paper) {\r\n                    paper = Graph.registry.vector.get(paper);\r\n                    e.originalType = 'keynavup';\r\n                    paper.fire(e);\r\n                }\r\n            }\r\n        });\r\n\r\n        doc = null;\r\n    });\r\n\r\n    ///////////////////////// LISTEN DOCUMENT READY ////////////////////////\r\n    \r\n    (function(doc, evt){\r\n        var timer;\r\n\r\n        var handler = function() {\r\n            doc.removeEventListener(evt, handler, false);\r\n            doc.readyState = 'complete';\r\n        };\r\n\r\n        var loaded = function() {\r\n            _.forEach(readyFn, function(f){\r\n                f();\r\n            });\r\n        };\r\n\r\n        var inspect = function() {\r\n            if (doc.readyState != 'complete') {\r\n                timer = _.delay(function(){\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n\r\n                    inspect();\r\n                }, 10);\r\n            } else {\r\n                loaded();\r\n            }\r\n        };\r\n\r\n        if (doc.readyState == null && doc.addEventListener) {\r\n            doc.addEventListener(evt, handler, false);\r\n            doc.readyState = 'loading';\r\n        }\r\n\r\n        inspect();\r\n        \r\n    }(DOCUMENT, 'DOMContentLoaded'));\r\n\r\n    ///////////////////////////////////////////////////////////////////////\r\n    \r\n}());","\r\n(function(){\r\n\r\n    var REGEX_PATH_STR = /([achlmrqstvz])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig;\r\n    var REGEX_PATH_VAL = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/ig;\r\n    var REGEX_PATH_CMD = /,?([achlmqrstvxz]),?/gi;\r\n    var REGEX_POLY_STR = /(\\-?[0-9.]+)\\s*,\\s*(\\-?[0-9.]+)/g;\r\n    var REGEX_TRAN_STR = /((matrix|translate|rotate|scale|skewX|skewY)*\\((\\-?\\d+\\.?\\d*e?\\-?\\d*[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+\\))+/g;\r\n    var REGEX_TRAN_SUB = /[\\w\\.\\-]+/g;\r\n    var REGEX_POLY_STR = /(\\-?[0-9.]+)\\s*,\\s*(\\-?[0-9.]+)/g;\r\n    \r\n    var CONVEX_RADIUS  = 10;\r\n    var SMOOTH_RADIUS  = 6;\r\n\r\n    /**\r\n     * Legendre Gauss (Quadratic Curve)\r\n     * https://pomax.github.io/bezierinfo/legendre-gauss.html\r\n     */\r\n    \r\n    var LEGENDRE_N = 12;\r\n    var LEGENDRE_T = [-0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873, -0.7699, 0.7699, -0.9041, 0.9041, -0.9816, 0.9816];\r\n    var LEGENDRE_C = [ 0.2491, 0.2491,  0.2335, 0.2335,  0.2032, 0.2032,  0.1601, 0.1601,  0.1069, 0.1069,  0.0472, 0.0472];\r\n    \r\n    Graph.util = {\r\n        \r\n        // --------MATH-------- //\r\n        \r\n        deg: function(rad) {\r\n            return Math.round ((rad * 180 / Math.PI % 360) * 1000) / 1000;\r\n        },  \r\n        \r\n        rad: function(deg) {\r\n            return deg % 360 * Math.PI / 180;\r\n        },\r\n        \r\n        angle: function(a, b) {\r\n            var dx = a.x - b.x,\r\n                dy = a.y - b.y;\r\n\r\n            if ( ! dx && ! dy) {\r\n                return 0;\r\n            }\r\n\r\n            return (180 + Math.atan2(-dy, -dx) * 180 / Math.PI + 360) % 360;\r\n        },\r\n\r\n        theta: function(a, b) {\r\n            var dy = -(b.y - a.y),\r\n                dx =   b.x - a.x;\r\n\r\n            var rad, deg;\r\n\r\n            if (dy.toFixed(10) == 0 && dx.toFixed(10) == 0) {\r\n                rad = 0;\r\n            } else {\r\n                rad = Math.atan2(dy, dx);\r\n            }\r\n\r\n            if (rad < 0) {\r\n                rad = 2 * Math.PI + rad;\r\n            }\r\n\r\n            deg = 180 * rad / Math.PI;\r\n            deg = (deg % 360) + (deg < 0 ? 360 : 0);\r\n\r\n            return deg;\r\n        },\r\n\r\n        taxicab: function(a, b) {\r\n            var dx = a.x - b.x,\r\n                dy = a.y - b.y;\r\n            return dx * dx + dy * dy;\r\n        },\r\n\r\n        /**\r\n         * Get vector hypotenuse (magnitude)\r\n         */\r\n        hypo: function(va, vb) {\r\n            return Math.sqrt(va * va + vb * vb);\r\n        },\r\n        \r\n        /**\r\n         * Get sign of number\r\n         */\r\n        sign: function(num) {\r\n            return num < 0 ? -1 : 1;\r\n        },\r\n            \r\n        quadrant: function(x, y) {\r\n            return x >= 0 && y >= 0 ? 1 : (x >= 0 && y < 0 ? 4 : (x < 0 && y < 0 ? 3 : 2));\r\n        },\r\n        \r\n        // slope\r\n        gradient: function(a, b) {\r\n            // parallel\r\n            if (b.x == a.x) {\r\n                return b.y > a.y ? Infinity : -Infinity\r\n            } else if (b.y == a.y) {\r\n                return b.x > a.x ? 0 : -0;\r\n            } else {\r\n                return (b.y - a.y) / (b.x - a.x);\r\n            }\r\n        },\r\n        \r\n        snapValue: function (value, snaps, range) {\r\n            range = _.defaultTo(range, 10);\r\n            \r\n            if (_.isArray(snaps)) {\r\n                var i = snaps.length;\r\n                while(i--) {\r\n                    if (Math.abs(snaps[i] - value) <= range) {\r\n                        return snaps[i];\r\n                    }\r\n                }\r\n            } else {\r\n                snaps = +snaps;\r\n                \r\n                var rem = value % snaps;\r\n                \r\n                if (rem < range) {\r\n                    return value - rem;\r\n                }\r\n                \r\n                if (rem > value - range) {\r\n                    return value - rem + snaps;\r\n                }\r\n            }\r\n            return value;\r\n        },\r\n        \r\n        // --------POINT-------- //\r\n        \r\n        pointbox: function(x, y, padding) {\r\n            if (_.isPlainObject(x)) {\r\n                padding = y;\r\n                y = x.y;\r\n                x = x.x;\r\n            }\r\n            \r\n            padding = padding || 0;\r\n            \r\n            var x1 = x - padding,\r\n                y1 = y - padding,\r\n                x2 = x + padding,\r\n                y2 = y + padding,\r\n                width = x2 - x1,\r\n                height = y2 - y1;\r\n            \r\n            return {\r\n                x: x1,\r\n                y: y1,\r\n                x2: x2,\r\n                y2: y2,\r\n                width: width,\r\n                height: height\r\n            };\r\n        },\r\n        \r\n        pointAlign: function(a, b, treshold) {\r\n            if ( ! a || ! b) {\r\n                return false;\r\n            }\r\n            \r\n            treshold = treshold || 2;\r\n            \r\n            if (Math.abs(a.x - b.x) <= treshold) {\r\n                return 'h';\r\n            };\r\n\r\n            if (Math.abs(a.y - b.y) <= treshold) {\r\n                return 'v';\r\n            }\r\n\r\n            return false;\r\n        },\r\n        \r\n        pointDistance: function (a, b) {\r\n            if ( ! a || ! b) {\r\n                return -1;\r\n            }\r\n            return Graph.util.hypo((a.x - b.x), (a.y - b.y));\r\n        },\r\n        \r\n        isPointEquals: function (a, b) {\r\n            return a.x == b.x && a.y == b.y;\r\n        },\r\n        \r\n        // http://stackoverflow.com/a/907491/412190\r\n        isPointOnLine: function(a, b, p) {\r\n            if ( ! a || ! b || ! p) {\r\n                return false;\r\n            }\r\n            \r\n            var det = (b.x - a.x) * (p.y - a.y) - (b.y - a.y) * (p.x - a.x),\r\n                dis = Graph.util.pointDistance(a, b);\r\n            \r\n            return Math.abs(det / dis) < 2;\r\n        },\r\n        \r\n        polar2point: function(distance, radian, origin) {\r\n            var x, y, d;\r\n\r\n            if (_.isUndefined(origin)) {\r\n                origin = Graph.point(0, 0);\r\n            }\r\n\r\n            x = Math.abs(distance * Math.cos(radian));\r\n            y = Math.abs(distance * Math.sin(radian));\r\n            d = Graph.util.deg(radian);\r\n\r\n            if (d < 90) {\r\n                y = -y;\r\n            } else if (d < 180) {\r\n                x = -x;\r\n                y = -y;\r\n            } else if (d < 270) {\r\n                x = -x;\r\n            }\r\n\r\n            return Graph.point(origin.props.x + x, origin.props.y + y);\r\n        },\r\n        \r\n        // --------BOUNDING-------- //\r\n\r\n        isBoxContainsPoint: function(box, p) {\r\n            return p.x >= box.x && p.x <= box.x2 && p.y >= box.y && p.y <= box.y2;\r\n        },\r\n\r\n        isBoxIntersect: function(a, b) {\r\n            var fn = Graph.util.isBoxContainsPoint;\r\n\r\n            return fn(b, {x: a.x,  y: a.y})  ||\r\n                   fn(b, {x: a.x2, y: a.y})  || \r\n                   fn(b, {x: a.x,  y: a.y2}) || \r\n                   fn(b, {x: a.x2, y: a.y2}) || \r\n                   fn(a, {x: b.x,  y: b.y})  ||\r\n                   fn(a, {x: b.x2, y: b.y})  || \r\n                   fn(a, {x: b.x,  y: b.y2}) || \r\n                   fn(a, {x: b.x2, y: b.y2}) || \r\n                   (a.x < b.x2 && a.x > b.x  ||  b.x < a.x2 && b.x > a.x) && \r\n                   (a.y < b.y2 && a.y > b.y  ||  b.y < a.y2 && b.y > a.y);\r\n        },\r\n\r\n        boxOrientation: function(box1, box2, dx, dy) {\r\n            // treshold\r\n            dx = _.defaultTo(dx, 0);\r\n            dy = _.defaultTo(dy, dx);\r\n            \r\n            var top = box1.y2 + dy <= box2.y,\r\n                rgt = box1.x  - dx >= box2.x2,\r\n                btm = box1.y  - dy >= box2.y2,\r\n                lft = box1.x2 + dx <= box2.x;\r\n\r\n            var ver = top ? 'top' : (btm ? 'bottom' : null),\r\n                hor = lft ? 'left' : (rgt ? 'right' : null);\r\n\r\n            if (hor && ver) {\r\n                return ver + '-' + hor;\r\n            } else {\r\n                return hor || ver || 'intersect';\r\n            }\r\n        },\r\n\r\n        expandBox: function(box, dx, dy) {\r\n            dx = _.defaultTo(dx, 0);\r\n            dy = _.defaultTo(dy, 0);\r\n\r\n            box.x  -= dx;\r\n            box.x2 += dx;\r\n            box.y  -= dy;\r\n            box.y2 += dy;\r\n            box.width = box.x2 - box.x;\r\n            box.height = box.y2 - box.y;\r\n\r\n            return box;\r\n        },\r\n\r\n        groupBox: function(boxes) {\r\n            var x  = [], \r\n                y  = [], \r\n                x2 = [], \r\n                y2 = [];\r\n\r\n            if (boxes.length) {\r\n                _.forEach(boxes, function(box){\r\n                    x.push(box.x);\r\n                    y.push(box.y);\r\n                    x2.push(box.x + box.width);\r\n                    y2.push(box.y + box.height);\r\n                });\r\n\r\n                x  = _.min(x);\r\n                y  = _.min(y);\r\n                x2 = _.max(x2);\r\n                y2 = _.max(y2);\r\n\r\n                return {\r\n                    x: x,\r\n                    y: y,\r\n                    x2: x2,\r\n                    y2: y2,\r\n                    width: (x2 - x),\r\n                    height: (y2 - y)\r\n                };\r\n            } else {\r\n                return {\r\n                    x: 0,\r\n                    y: 0,\r\n                    x2: 0,\r\n                    y2: 0,\r\n                    width: 0,\r\n                    height: 0\r\n                }\r\n            }\r\n        },\r\n        \r\n        // -------LINE------ //\r\n        \r\n        midpoint: function(a, b) {\r\n            return {\r\n                x: (a.x + b.x) / 2,\r\n                y: (a.y + b.y) / 2\r\n            };\r\n        },\r\n        \r\n        /** \r\n         * Move point `a` to `b` as far as distance \r\n         */\r\n        movepoint: function(a, b, distance) {\r\n            var tr =  Graph.util.rad(Graph.util.theta(b, a)),\r\n                dx =  Math.cos(tr) * distance,\r\n                dy = -Math.sin(tr) * distance;\r\n            \r\n            a.x += dx;\r\n            a.y += dy;\r\n            \r\n            return a;\r\n        },\r\n        \r\n        lineBendpoints: function(a, b, dir) {\r\n            var points = [],\r\n                x1 = a.x,\r\n                y1 = a.y,\r\n                x2 = b.x,\r\n                y2 = b.y;\r\n               \r\n            var xm, ym;\r\n            \r\n            dir = dir || 'h:h';\r\n            \r\n            if (dir == 'h:v') {\r\n                points = [\r\n                    { x: x2, y: y1 }\r\n                ];\r\n            } else if (dir == 'v:h') {\r\n                points = [\r\n                    { x: x1, y: y2 }\r\n                ];\r\n            } else if (dir == 'h:h') {\r\n                xm = Math.round((x2 - x1) / 2 + x1);\r\n                points = [\r\n                    { x: xm, y: y1 },\r\n                    { x: xm, y: y2 }\r\n                ];\r\n            } else if (dir == 'v:v') {\r\n                ym = Math.round((y2 - y1) / 2 + y1);\r\n                points = [\r\n                    { x: x1, y: ym },\r\n                    { x: x2, y: ym }\r\n                ];\r\n            } else {\r\n                points = [];\r\n            }\r\n            \r\n            return points;\r\n        },\r\n        \r\n        lineIntersection: function (x1, y1, x2, y2, x3, y3, x4, y4) {\r\n            if (\r\n                Math.max(x1, x2) < Math.min(x3, x4) ||\r\n                Math.min(x1, x2) > Math.max(x3, x4) ||\r\n                Math.max(y1, y2) < Math.min(y3, y4) ||\r\n                Math.min(y1, y2) > Math.max(y3, y4)\r\n            ) {\r\n                return null;\r\n            }\r\n\r\n            var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\r\n                ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\r\n                denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\r\n\r\n            if ( ! denominator) {\r\n                return null;\r\n            }\r\n\r\n            var px = nx / denominator,\r\n                py = ny / denominator,\r\n                px2 = +px.toFixed(2),\r\n                py2 = +py.toFixed(2);\r\n\r\n            if (\r\n                px2 < +Math.min(x1, x2).toFixed(2) ||\r\n                px2 > +Math.max(x1, x2).toFixed(2) ||\r\n                px2 < +Math.min(x3, x4).toFixed(2) ||\r\n                px2 > +Math.max(x3, x4).toFixed(2) ||\r\n                py2 < +Math.min(y1, y2).toFixed(2) ||\r\n                py2 > +Math.max(y1, y2).toFixed(2) ||\r\n                py2 < +Math.min(y3, y4).toFixed(2) ||\r\n                py2 > +Math.max(y3, y4).toFixed(2)\r\n            ) {\r\n                return null;\r\n            }\r\n\r\n            return {\r\n                x: px, \r\n                y: py\r\n            };\r\n        },\r\n        \r\n        perpendicular: function(a, b, h) {\r\n            var m1, m2, tt, hp;\r\n\r\n            m1 = Graph.util.gradient(a, b);\r\n            m2 = m1 === 0 ? 0 : ( -1 / m1 );\r\n            tt = Math.atan(m2);\r\n            // si = Math.sin(tt),\r\n            // co = Math.cos(tt);\r\n\r\n            var hp = h * Math.cos(tt);\r\n            // var hy = h * si;\r\n\r\n            // find `middle point`\r\n            var mx = (a.x + b.x) / 2,\r\n                my = (a.y + b.y) / 2;\r\n\r\n            // find `y` intercept\r\n            var iy = my - (mx * m2)\r\n\r\n            var x3 = mx + hp,\r\n                y3 = m2 * x3 + iy;\r\n\r\n            return {\r\n                from: {\r\n                    x: mx,\r\n                    y: my\r\n                },\r\n                to: {\r\n                    x: x3,\r\n                    y: y3\r\n                }\r\n            };\r\n        },\r\n        \r\n        // -------SHAPE/PATH------ //\r\n        \r\n        points2path: function (points) {\r\n            var segments = _.map(points, function(p, i){\r\n                var cmd = i === 0 ? 'M' : 'L';\r\n                return [cmd, p.x, p.y];\r\n            });\r\n            return Graph.util.segments2path(segments);\r\n        },\r\n        \r\n        path2points: function(command) {\r\n            var segments = Graph.util.path2segments(command);\r\n            return _.map(segments, function(s, i){\r\n                if (s[0] == 'M' || s[0] == 'L') {\r\n                    return {x: s[1], y: s[2]};\r\n                } else {\r\n                    return {x: s[5], y: s[6]};\r\n                }\r\n            });\r\n        },\r\n\r\n        segments2path: function(segments) {\r\n            return _.join(segments || [], ',').replace(REGEX_PATH_CMD, '$1');\r\n        },\r\n\r\n        path2segments: function(command) {\r\n            if ( ! command) {\r\n                return [];\r\n            }\r\n\r\n            var cached = Graph.lookup('Graph.util', 'path2segments', command),\r\n                sizes = {a: 7, c: 6, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, z: 0},\r\n                segments = [];\r\n            \r\n            if (cached.segments) {\r\n                return _.cloneDeep(cached.segments);\r\n            }\r\n\r\n            command.replace(REGEX_PATH_STR, function(match, cmd, val){\r\n                var \r\n                    params = [],\r\n                    name = cmd.toLowerCase();\r\n\r\n                val.replace(REGEX_PATH_VAL, function(match, v){\r\n                    if (v) {\r\n                        params.push(+v);\r\n                    }\r\n                });\r\n\r\n                if (name == 'm' && params.length > 2) {\r\n                    segments.push(_.concat([cmd], params.splice(0, 2)));\r\n                    name = 'l';\r\n                    cmd = cmd == 'm' ? 'l' : 'L';\r\n                }\r\n\r\n                if (name == 'r') {\r\n                    segments.push(_.concat([cmd], params));\r\n                } else while (params.length >= sizes[name]) {\r\n                    segments.push(_.concat([cmd], params.splice(0, sizes[name])));\r\n                    if ( ! sizes[name]) {\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n            \r\n            cached.segments = _.cloneDeep(segments);\r\n            return segments;\r\n        },\r\n\r\n        polygon2dots: function(command) {\r\n            var array = [];\r\n            command.replace(REGEX_POLY_STR, function($0, x, y){\r\n                array.push([_.float(x), _.float(y)]);\r\n            });\r\n            return array;\r\n        },\r\n\r\n        polygon2path: function(command) {\r\n            var dots = Graph.util.polygon2dots(command);\r\n\r\n            if ( ! dots.length) {\r\n                return 'M0,0';\r\n            }\r\n            \r\n            var command = 'M' + dots[0][0] + ',' + dots[0][1];\r\n\r\n            for (var i = 1, ii = dots.length; i < ii; i++) {\r\n                command += 'L' + dots[i][0] + ',' + dots[i][1] + ',';\r\n            }\r\n            \r\n            command  = command.substring(0, command.length - 1);\r\n            command += 'Z';\r\n\r\n            return command;\r\n        },\r\n\r\n        transform2segments: Graph.memoize(function(command) {\r\n            var valid = {\r\n                matrix: true,\r\n                translate: true,\r\n                rotate: true,\r\n                scale: true,\r\n                skewX: true,\r\n                skewY: true\r\n            };\r\n\r\n            command += '';\r\n\r\n            var transform = [], matches = command.match(REGEX_TRAN_STR);\r\n\r\n            if (matches) {\r\n                _.forEach(matches, function(sub){\r\n                    var args = sub.match(REGEX_TRAN_SUB),\r\n                        name = args.shift();\r\n                    if (valid[name]) {\r\n                        args = _.map(args, function(v){ return +v; })\r\n                        transform.push([name].concat(args));    \r\n                    }\r\n                });  \r\n            }\r\n\r\n            return transform;\r\n        }),\r\n        \r\n        // --------CURVE-------- //\r\n        \r\n        curvebox: Graph.memoize(function(x0, y0, x1, y1, x2, y2, x3, y3) {\r\n            var token = _.join(arguments, '_'),\r\n                cached = Graph.lookup('Graph.util', 'curvebox', token);\r\n\r\n            token = null;\r\n\r\n            if (cached.curvebox) {\r\n                return cached.curvebox;\r\n            }\r\n\r\n            var tvalues = [],\r\n                bounds  = [[], []];\r\n\r\n            var a, b, c, t, t1, t2, b2ac, sqrtb2ac;\r\n\r\n            for (var i = 0; i < 2; ++i) {\r\n                if (i == 0) {\r\n                    b =  6 * x0 - 12 * x1 + 6 * x2;\r\n                    a = -3 * x0 +  9 * x1 - 9 * x2 + 3 * x3;\r\n                    c =  3 * x1 -  3 * x0;\r\n                } else {\r\n                    b =  6 * y0 - 12 * y1 + 6 * y2;\r\n                    a = -3 * y0 +  9 * y1 - 9 * y2 + 3 * y3;\r\n                    c =  3 * y1 -  3 * y0;\r\n                }\r\n\r\n                if (Math.abs(a) < 1e-12) {\r\n                    if (Math.abs(b) < 1e-12) {\r\n                        continue;\r\n                    }\r\n                    t = -c / b;\r\n                    if (0 < t && t < 1) {\r\n                        tvalues.push(t);\r\n                    }\r\n                    continue;\r\n                }\r\n\r\n                b2ac = b * b - 4 * c * a;\r\n                sqrtb2ac = Math.sqrt(b2ac);\r\n                \r\n                if (b2ac < 0) {\r\n                    continue;\r\n                }\r\n                \r\n                t1 = (-b + sqrtb2ac) / (2 * a);\r\n                \r\n                if (0 < t1 && t1 < 1) {\r\n                    tvalues.push(t1);\r\n                }\r\n\r\n                t2 = (-b - sqrtb2ac) / (2 * a);\r\n                \r\n                if (0 < t2 && t2 < 1) {\r\n                    tvalues.push(t2);\r\n                }\r\n            }\r\n\r\n            var x, y, j = tvalues.length,\r\n                jlen = j,\r\n                mt;\r\n\r\n            while (j--) {\r\n                t = tvalues[j];\r\n                mt = 1 - t;\r\n                bounds[0][j] = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\r\n                bounds[1][j] = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\r\n            }\r\n\r\n            bounds[0][jlen] = x0;\r\n            bounds[1][jlen] = y0;\r\n            bounds[0][jlen + 1] = x3;\r\n            bounds[1][jlen + 1] = y3;\r\n            bounds[0].length = bounds[1].length = jlen + 2;\r\n\r\n            cached.curvebox = {\r\n                min: {x: Math.min.apply(0, bounds[0]), y: Math.min.apply(0, bounds[1])},\r\n                max: {x: Math.max.apply(0, bounds[0]), y: Math.max.apply(0, bounds[1])}\r\n            };\r\n\r\n            return cached.curvebox;\r\n        }),\r\n        \r\n        curveLength: function(x1, y1, x2, y2, x3, y3, x4, y4, t) {\r\n            t = _.defaultTo(t, 1);\r\n            t = t > 1 ? 1 : t < 0 ? 0 : t;\r\n\r\n            var h = t / 2,\r\n                sum = 0;\r\n\r\n            for (var i = 0; i < LEGENDRE_N; i++) {\r\n                var ct = h * LEGENDRE_T[i] + h,\r\n\r\n                    xb = Graph.util.curvePolynom(ct, x1, x2, x3, x4),\r\n                    yb = Graph.util.curvePolynom(ct, y1, y2, y3, y4),\r\n                    co = xb * xb + yb * yb;\r\n\r\n                sum += LEGENDRE_C[i] * Math.sqrt(co);\r\n            }\r\n\r\n            return h * sum;\r\n        },\r\n\r\n        curvePolynom: function(t, n1, n2, n3, n4) {\r\n            var t1 = -3 * n1 + 9 * n2 -  9 * n3 + 3 * n4,\r\n                t2 =  t * t1 + 6 * n1 - 12 * n2 + 6 * n3;\r\n            return t * t2 - 3 * n1 + 3 * n2;\r\n        },\r\n        \r\n        curveInterval: function(x1, y1, x2, y2, x3, y3, x4, y4, length) {\r\n\r\n            if (length < 0 || Graph.util.curveLength(x1, y1, x2, y2, x3, y3, x4, y4) < length) {\r\n                return;\r\n            }\r\n\r\n            var t = 1,\r\n                step = t / 2,\r\n                t2 = t - step,\r\n                l,\r\n                e = .01;\r\n\r\n            l = Graph.util.curveLength(x1, y1, x2, y2, x3, y3, x4, y4, t2);\r\n\r\n            while (Math.abs(l - length) > e) {\r\n                step /= 2;\r\n                t2 += (l < length ? 1 : -1) * step;\r\n                l = Graph.util.curveLength(x1, y1, x2, y2, x3, y3, x4, y4, t2);\r\n            }\r\n\r\n            return t2;\r\n        },\r\n\r\n        pointAtInterval: function(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\r\n            var t1 = 1 - t,\r\n                t13 = Math.pow(t1, 3),\r\n                t12 = Math.pow(t1, 2),\r\n                t2 = t * t,\r\n                t3 = t2 * t,\r\n                x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\r\n                y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\r\n                mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\r\n                my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\r\n                nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\r\n                ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\r\n                ax = t1 * p1x + t * c1x,\r\n                ay = t1 * p1y + t * c1y,\r\n                cx = t1 * c2x + t * p2x,\r\n                cy = t1 * c2y + t * p2y,\r\n                alpha = (90 - Math.atan2(mx - nx, my - ny) * 180 / Math.PI);\r\n            \r\n            alpha = (90 - Math.atan2(nx - mx, ny - my) * 180 / Math.PI);\r\n\r\n            // (mx > nx || my < ny) && (alpha += 180);\r\n\r\n            // if (isNaN(x) || isNaN(y)) {\r\n            //     return null;\r\n            // }\r\n\r\n            return {\r\n                x: x,\r\n                y: y,\r\n                m: {x: mx, y: my},\r\n                n: {x: nx, y: ny},\r\n                start: {x: ax, y: ay},\r\n                end:   {x: cx, y: cy},\r\n                alpha: alpha\r\n            };\r\n        },\r\n\r\n        curveIntersection: function(a, b, count) {\r\n            var bon1 = Graph.util.curvebox.apply(null, a),\r\n                bon2 = Graph.util.curvebox.apply(null, b),\r\n                nres = 0,\r\n                ares = [];\r\n\r\n            var box1 = {x: bon1.min.x, y: bon1.min.y, x2: bon1.max.x, y2: bon1.max.y},\r\n                box2 = {x: bon2.min.x, y: bon2.min.y, x2: bon2.max.x, y2: bon2.max.y};\r\n                \r\n            if ( ! Graph.util.isBoxIntersect(box1, box2)) {\r\n                return count ? 0 : [];\r\n            }\r\n\r\n            var l1 = Graph.util.curveLength.apply(null, a),\r\n                l2 = Graph.util.curveLength.apply(null, b);\r\n            \r\n            var // n1 = ~~(l1 / 8),\r\n                // n2 = ~~(l2 / 8),\r\n                n1 = ~~(l1 / 10),\r\n                n2 = ~~(l2 / 10),\r\n                dots1 = [],\r\n                dots2 = [],\r\n                xy = {};\r\n\r\n            var i, j, t, p;\r\n\r\n            for (i = 0; i < n1 + 1; i++) {\r\n                t = i / n1;\r\n                p = Graph.util.pointAtInterval.apply(null, a.concat([t]));\r\n                dots1.push({x: p.x, y: p.y, t: t});\r\n            }\r\n\r\n            for (i = 0; i < n2 + 1; i++) {\r\n                t = i / n2;\r\n                p = Graph.util.pointAtInterval.apply(null, b.concat([t]));\r\n                dots2.push({x: p.x, y: p.y, t: t});\r\n            }\r\n\r\n            for (i = 0; i < n1; i++) {\r\n                for (j = 0; j < n2; j++) {\r\n\r\n                    var di  = dots1[i],\r\n                        di1 = dots1[i + 1],\r\n                        dj  = dots2[j],\r\n                        dj1 = dots2[j + 1],\r\n                        ci  = Math.abs(di1.x - di.x) < .001 ? 'y' : 'x',\r\n                        cj  = Math.abs(dj1.x - dj.x) < .001 ? 'y' : 'x',\r\n                        is  = Graph.util.lineIntersection(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\r\n                    \r\n                    if (is) {\r\n                        \r\n                        if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\r\n                            continue;\r\n                        }\r\n\r\n                        xy[is.x.toFixed(4)] = is.y.toFixed(4);\r\n                        \r\n                        var t1 = di.t + Math.abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\r\n                            t2 = dj.t + Math.abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\r\n                        \r\n                        if (t1 >= 0 && t1 <= 1.001 && t2 >= 0 && t2 <= 1.001) {\r\n                            nres++;\r\n                            // ares.push(is);\r\n                            ares.push({\r\n                                x: is.x,\r\n                                y: is.y,\r\n                                t1: t1,\r\n                                t2: t2\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            return count ? nres : ares;\r\n        },\r\n        \r\n        convexSegment: function(point, prev, next, radius) {\r\n            if ( ! prev || ! next || ! point) {\r\n                return null;\r\n            }\r\n            \r\n            var d1 = Graph.util.pointDistance(point, prev),\r\n                d2 = Graph.util.pointDistance(point, next);\r\n                \r\n            radius = radius || CONVEX_RADIUS;\r\n            \r\n            if (d1 > radius && d2 > radius) {\r\n                \r\n                var c1 = Graph.util.movepoint({x: point.x, y: point.y}, prev, -radius / 2),\r\n                    c2 = Graph.util.movepoint({x: point.x, y: point.y}, next, -radius / 2),\r\n                    dr = Graph.util.pointAlign(prev, next, radius / 2);\r\n                \r\n                var cp;\r\n                \r\n                if (dr == 'h') {\r\n                    cp = {\r\n                        x: point.x - radius, \r\n                        y: point.y\r\n                    };\r\n                } else {\r\n                    c1.y = prev.y;\r\n                    c2.y = next.y;\r\n                    cp = {\r\n                        x: point.x, \r\n                        y: point.y - radius\r\n                    };\r\n                }\r\n                \r\n                return [\r\n                    ['L', c1.x, c1.y],\r\n                    ['Q', cp.x, cp.y, c2.x, c2.y]\r\n                ];\r\n            }\r\n            \r\n            return null;\r\n        },\r\n        \r\n        smoothSegment: function(point, prev, next, radius) {\r\n            if ( ! prev || ! next || ! point) {\r\n                return null;\r\n            }\r\n            \r\n            var d1 = Graph.util.pointDistance(point, prev),\r\n                d2 = Graph.util.pointDistance(point, next);\r\n                \r\n            radius = radius || SMOOTH_RADIUS;\r\n            \r\n            if (d1 > radius && d2 > radius) {\r\n                var c1 = Graph.util.movepoint({x: point.x, y: point.y}, prev, -radius),\r\n                    c2 = Graph.util.movepoint({x: point.x, y: point.y}, next, -radius);\r\n                    \r\n                return [\r\n                    ['L', c1.x, c1.y],\r\n                    ['Q', point.x, point.y, c2.x, c2.y]\r\n                ]\r\n            }\r\n            \r\n            return null;\r\n        }\r\n        \r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Class = Graph.lang.Class = function() {};\r\n\r\n    Class.options = {};\r\n\r\n    Class.prototype.constructor = Class;\r\n    Class.prototype.toString = function() { return 'Graph.lang.Class'; };\r\n\r\n    Class.extend = function(config) {\r\n        var _super, _proto, _constructor, _definition, _class, _classopt;\r\n\r\n        _super = this.prototype;\r\n        _proto = Object.create(_super);\r\n\r\n        _classopt = {};\r\n\r\n        _.forOwn(config, function(v, k){\r\n\r\n            if (_.isFunction(v)) {\r\n                _proto[k] = v;\r\n                if (k == 'constructor') {\r\n                    _constructor = v;\r\n                }\r\n            } else {\r\n                _classopt[k] = v;\r\n            }\r\n        });\r\n\r\n        if ( ! _constructor) {\r\n            _constructor = _super.constructor;\r\n        }\r\n\r\n        _class = function() {\r\n\r\n            if ( ! this.__initialized__) {\r\n                this.__initialized__ = true;\r\n\r\n                this.listeners = {};\r\n\r\n                var _superclass = this.superclass;\r\n                var _superopt, key, val;\r\n\r\n                for (key in _classopt) {\r\n                    this[key] = _.cloneDeep(_classopt[key]);\r\n                }\r\n\r\n                while(_superclass) {\r\n                    _superopt = _superclass.options;\r\n\r\n                    if (_superopt) {\r\n                        for (key in _superopt) {\r\n                            if (this[key] !== undefined) {\r\n                                this[key] = _.merge(_.cloneDeep(_superopt[key]), this[key]);\r\n                            } else {\r\n                                this[key] = _.cloneDeep(_superopt[key]);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    _superclass = _superclass.prototype.superclass;\r\n                }\r\n            }\r\n\r\n            if (_constructor) {\r\n                _constructor.apply(this, arguments);\r\n            }\r\n        }\r\n\r\n        _definition = _constructor.toString().match(/(function)?([^\\{=]+)/);\r\n        _definition = 'function' + _definition[2];\r\n\r\n        _class.toString = function() {\r\n            return _definition;\r\n        };\r\n\r\n        _class.extend = _super.constructor.extend;\r\n        _class.options = _classopt;\r\n\r\n        _class.prototype = _proto;\r\n        _class.prototype.constructor = _class;\r\n        _class.prototype.superclass = _super.constructor;\r\n\r\n        _class.prototype.on = function(eventType, handler, once, priority) {\r\n            if (_.isPlainObject(eventType)) {\r\n                var key, val;\r\n                for (key in eventType) {\r\n                    val = eventType[key];\r\n                    if (_.isFunction(val)) {\r\n                        bind(this, key, val);\r\n                    } else {\r\n                        bind(this, key, val['handler'], val['once'], val['priority']);\r\n                    }\r\n                }\r\n            } else {\r\n                bind(this, eventType, handler, once, priority);\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        _class.prototype.one = function(eventType, handler) {\r\n            if (_.isPlainObject(eventType)) {\r\n                var key, val;\r\n                for (key in eventType) {\r\n                    val = eventType[key];\r\n                    if (_.isFunction(val)) {\r\n                        bind(this, key, val, true);\r\n                    } else {\r\n                        bind(this, key, val['handler'], true, val['priority']);\r\n                    }\r\n                }\r\n            } else {\r\n                bind(this, eventType, handler, true);\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        _class.prototype.off = function(eventType, handler) {\r\n            var batch = eventType.split(/\\s/);\r\n\r\n            if (batch.length > 1) {\r\n                for (var i = 0, ii = batch.length; i < ii; i++) {\r\n                    unbind(this, batch[i]);\r\n                }\r\n            } else {\r\n                unbind(this, eventType, handler);\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        _class.prototype.fire = function(eventType, data) {\r\n            var args = [], onces = [];\r\n            var eventObject, eventNames, eventRoot, listeners,\r\n                eventRegex, cachedRegex, ii, i;\r\n\r\n            data = data || {};\r\n\r\n            if (_.isString(eventType)) {\r\n                eventObject = new Graph.lang.Event(eventType, data);\r\n            } else {\r\n                eventObject = eventType;\r\n                eventObject.originalData = data;\r\n                eventType = eventObject.originalType || eventObject.type;\r\n            }\r\n\r\n            eventObject.publisher = this;\r\n            args.push(eventObject);\r\n\r\n            eventNames = eventType.split(/\\./);\r\n            eventRoot = eventNames.shift();\r\n            listeners = (this.listeners[eventRoot] || []).slice();\r\n\r\n            var cachedRegex = Graph.lookup('Regex.event', eventType);\r\n\r\n            if (cachedRegex.rgex) {\r\n                eventRegex = cachedRegex.rgex;\r\n            } else {\r\n                eventRegex = new RegExp(_.escapeRegExp(eventType), 'i');\r\n                cachedRegex.rgex = eventRegex;\r\n            }\r\n\r\n            if (listeners.length) {\r\n                for (i = 0, ii = listeners.length; i < ii; i++) {\r\n                    if (eventRoot == listeners[i].eventType) {\r\n                        if (listeners[i].once) {\r\n                            onces.push(listeners[i]);\r\n                        }\r\n                        listeners[i].handler.apply(listeners[i].handler, args);\r\n                    } else if (eventRegex.test(listeners[i].eventType)) {\r\n                        if (listeners[i].once) {\r\n                            onces.push(listeners[i]);\r\n                        }\r\n                        listeners[i].handler.apply(listeners[i].handler, args);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (onces.length) {\r\n                for (i = 0, ii = onces.length; i < ii; i++) {\r\n                    this.off(onces[i].eventType, onces[i].original);\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n        return _class;\r\n    };\r\n\r\n    /////////\r\n\r\n    function bind(context, eventType, handler, once, priority) {\r\n        var eventNames = eventType.split(/\\./),\r\n            eventRoot = eventNames.shift();\r\n\r\n        once = _.defaultTo(once, false);\r\n        priority = _.defaultTo(priority, 1500);\r\n\r\n        context.listeners[eventRoot] = context.listeners[eventRoot] || [];\r\n\r\n        context.listeners[eventRoot].push({\r\n            eventType: eventType,\r\n            priority: priority,\r\n            original: handler,\r\n            handler: _.bind(handler, context),\r\n            once: once\r\n        });\r\n    }\r\n\r\n    function unbind(context, eventType, handler) {\r\n        var eventNames = eventType.split(/\\./),\r\n            eventRoot = eventNames.shift(),\r\n            listeners = context.listeners[eventRoot] || [];\r\n\r\n        var eventRegex, cachedRegex;\r\n\r\n        cachedRegex = Graph.lookup('Regex.event', eventType);\r\n\r\n        if (cachedRegex.rgex) {\r\n            eventRegex = cachedRegex.rgex;\r\n        } else {\r\n            eventRegex = new RegExp(_.escapeRegExp(eventType), 'i');\r\n            cachedRegex.rgex = eventRegex;\r\n        }\r\n\r\n        for (var i = listeners.length - 1; i >= 0; i--) {\r\n            if (eventRegex.test(listeners[i].eventType)) {\r\n                if (handler) {\r\n                    if (handler === listeners[i].original) {\r\n                        listeners.splice(i, 1);\r\n                    }\r\n                } else {\r\n                    listeners.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n\r\n        if ( ! listeners.length) {\r\n            delete context.listeners[eventRoot];\r\n        }\r\n    }\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var Err = Graph.lang.Error = function(message) {\r\n        this.message = message;\r\n\r\n        var err = new Error();\r\n        this.stack = err.stack;\r\n\r\n        err = null;\r\n    };\r\n\r\n    Err.options = {\r\n        message: ''\r\n    };\r\n    Err.extend = Graph.lang.Class.extend;\r\n\r\n    Err.prototype = Object.create(Error.prototype);\r\n    Err.prototype.constructor = Err;\r\n    Err.prototype.name = \"Graph.lang.Error\";\r\n    Err.prototype.message = \"\";\r\n\r\n    ///////// SHORTCUT /////////\r\n\r\n    Graph.error = function(message) {\r\n        return new Graph.lang.Error(message);\r\n    };\r\n\r\n    Graph.isError = function(obj) {\r\n        return obj instanceof Graph.lang.Error;\r\n    };\r\n\r\n}());\r\n","\r\n(function(_, $){\r\n\r\n    var Evt = Graph.lang.Event = function(type, data){\r\n        this.type = type;\r\n        this.originalData = null;\r\n        this.cancelBubble = false;\r\n        this.defaultPrevented = false;\r\n        this.propagationStopped = false;\r\n        this.immediatePropagationStopped = false;\r\n\r\n        this.init(data);\r\n    };\r\n\r\n    Evt.options = {\r\n        type: null,\r\n        originalData: null,\r\n        cancelBubble: false,\r\n        defaultPrevented: false,\r\n        propagationStopped: false,\r\n        immediatePropagationStopped: false\r\n    };\r\n\r\n    Evt.extend = Graph.lang.Class.extend;\r\n\r\n    Evt.prototype.constructor = Evt;\r\n\r\n    Evt.prototype.init = function(data) {\r\n        if (data) {\r\n            this.originalData = data;\r\n            _.assign(this, data || {});\r\n        }\r\n    };\r\n\r\n    Evt.prototype.stopPropagation = function() {\r\n        this.cancelBubble = this.propagationStopped = true;\r\n    };\r\n\r\n    Evt.prototype.stopImmediatePropagation = function() {\r\n        this.immediatePropagationStopped = this.propagationStopped = true;\r\n    };\r\n\r\n    Evt.prototype.preventDefault = function() {\r\n        this.defaultPrevented = true;\r\n    };\r\n\r\n    Evt.prototype.toString = function() {\r\n        return 'Graph.lang.Event';\r\n    };\r\n\r\n    ///////// SHORTCUT /////////\r\n\r\n    Graph.event = function(type, data) {\r\n        return new Graph.lang.Event(type, data);\r\n    };\r\n\r\n    Graph.isEvent = function(obj) {\r\n        return obj instanceof Graph.lang.Event;\r\n    };\r\n\r\n    ///////// STATIC /////////\r\n\r\n    Graph.event.ESC = 27;\r\n    Graph.event.ENTER = 13;\r\n    Graph.event.DELETE = 46;\r\n    Graph.event.SHIFT = 16;\r\n    Graph.event.CTRL = 17;\r\n    Graph.event.CMD = 91;\r\n\r\n    Graph.event.C = 67;\r\n    Graph.event.V = 86;\r\n\r\n    Graph.event.fix = function(event) {\r\n        return $.event.fix(event);\r\n    };\r\n\r\n    Graph.event.original = function(event) {\r\n        return event.originalEvent || event;\r\n    };\r\n\r\n    Graph.event.position = function(event) {\r\n        return {\r\n            x: event.clientX,\r\n            y: event.clientY\r\n        };\r\n    };\r\n\r\n    Graph.event.relative = function(event, vector) {\r\n        var position = Graph.event.position(event),\r\n            matrix = vector.matrix().clone().invert(),\r\n            relative = {\r\n                x: matrix.x(position.x, position.y),\r\n                y: matrix.y(position.x, position.y)\r\n            };\r\n\r\n        matrix = null;\r\n\r\n        return relative;\r\n    };\r\n\r\n    Graph.event.isNavigation = function(e) {\r\n        var navs = [\r\n            Graph.event.ENTER,\r\n            Graph.event.DELETE,\r\n            Graph.event.SHIFT,\r\n            Graph.event.CTRL,\r\n            Graph.event.CMD,\r\n            Graph.event.ESC\r\n        ];\r\n\r\n        var code = e.keyCode;\r\n        return _.indexOf(navs, code) !== -1;\r\n    };\r\n\r\n    Graph.event.isPrimaryButton = function(event) {\r\n        var original = Graph.event.original(event);\r\n        return ! original.button;\r\n    };\r\n\r\n    Graph.event.hasPrimaryModifier = function(event) {\r\n        if ( ! Graph.event.isPrimaryButton(event)) {\r\n            return false;\r\n        }\r\n        var original = Graph.event.original(event);\r\n        return Graph.isMac() ? original.metaKey : original.ctrlKey;\r\n    };\r\n\r\n    Graph.event.hasSecondaryModifier = function(event) {\r\n        var original = Graph.event.original(event);\r\n        return Graph.event.isPrimaryButton(event) && original.shiftKey;\r\n    };\r\n\r\n}(_, jQuery));\r\n","\r\n(function(){\r\n\r\n    var Collection = Graph.collection.Point = function(points) {\r\n        this.items = points || [];\r\n    };\r\n\r\n    Collection.prototype.constructor = Collection;\r\n    Collection.prototype.items = [];\r\n\r\n    Collection.prototype.get = function(index) {\r\n        return this.items[index];\r\n    };\r\n\r\n    Collection.prototype.push = function(item) {\r\n        this.items.push(item);\r\n        return item;\r\n    };\r\n\r\n    Collection.prototype.pop = function() {\r\n        var item = this.items.pop();\r\n        return item;\r\n    };\r\n\r\n    Collection.prototype.shift = function() {\r\n        var item = this.items.shift();\r\n        return item;\r\n    };\r\n\r\n    Collection.prototype.first = function() {\r\n        return _.head(this.items);\r\n    };\r\n\r\n    Collection.prototype.last = function() {\r\n        return _.last(this.items);\r\n    };\r\n\r\n    Collection.prototype.clear = function() {\r\n        this.items = [];\r\n        return this;\r\n    },\r\n\r\n    Collection.prototype.modify = function(index, x, y) {\r\n        var item = this.items[index];\r\n        item.props.x = x;\r\n        item.props.y = y;\r\n        return item;\r\n    };\r\n\r\n    Collection.prototype.each = function(iteratee) {\r\n        _.forEach(this.items, iteratee);\r\n    };\r\n\r\n    Collection.prototype.toArray = function() {\r\n        return this.items;\r\n    };\r\n\r\n    Collection.prototype.toJson = function() {\r\n        return _.map(this.items, function(item){\r\n            return item.toJson();\r\n        });\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Line = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(x1, y1, x2, y2) {\r\n            var args = _.toArray(arguments);\r\n\r\n            if (args.length === 1) {\r\n                var start = args[0].start().toJson(),\r\n                    end = args[0].end().toJson();\r\n\r\n                x1 = start.x;\r\n                y1 = start.y;\r\n                x2 = end.x;\r\n                y2 = end.y;\r\n            } else if (args.length === 2) {\r\n                if (Graph.isPoint(args[0])) {\r\n                    x1 = args[0].props.x;\r\n                    y1 = args[0].props.y;\r\n                    x2 = args[1].props.x;\r\n                    y2 = args[1].props.y;\r\n                } else {\r\n                    x1 = args[0].x;\r\n                    y1 = args[0].y;\r\n                    x2 = args[1].x;\r\n                    y2 = args[1].y;\r\n                }\r\n                \r\n            }\r\n\r\n            // this.$super('line', {\r\n            //     x1: _.defaultTo(x1, 0),\r\n            //     y1: _.defaultTo(y1, 0),\r\n            //     x2: _.defaultTo(x2, 0),\r\n            //     y2: _.defaultTo(y2, 0)\r\n            // });\r\n            \r\n            this.superclass.prototype.constructor.call(this, 'line', {\r\n                x1: _.defaultTo(x1, 0),\r\n                y1: _.defaultTo(y1, 0),\r\n                x2: _.defaultTo(x2, 0),\r\n                y2: _.defaultTo(y2, 0)\r\n            });\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Line';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n}());","\r\n(function(){\r\n\r\n    var Curve = Graph.lang.Curve = function(command) {\r\n        this.segments = _.isString(command) ? Graph.util.path2segments(command) : _.cloneDeep(command);\r\n\r\n        if (this.segments[0][0] != 'M') {\r\n            this.segments.unshift(\r\n                ['M', this.segments[0][1], this.segments[0][2]]\r\n            );\r\n        }\r\n\r\n        if (this.segments.length === 1 && this.segments[0][0] === 'M') {\r\n            var x = this.segments[0][1],\r\n                y = this.segments[0][2];\r\n            this.segments.push(['C', x, y, x, y, x, y]);\r\n        }\r\n    };\r\n\r\n    Curve.options = {\r\n        segments: []\r\n    };\r\n\r\n    Curve.extend = Graph.lang.Class.extend;\r\n\r\n    Curve.prototype.constructor = Curve;\r\n\r\n    Curve.prototype.segments = [];\r\n\r\n    Curve.prototype.x = function() {\r\n        return this.segments[1][5];\r\n    };\r\n\r\n    Curve.prototype.y = function() {\r\n        return this.segments[1][6];\r\n    };\r\n\r\n    Curve.prototype.length = function(t) {\r\n        var params = this.segments[0].slice(1).concat(this.segments[1].slice(1)).concat([t]);\r\n        return Graph.util.curveLength.apply(null, params);\r\n    };\r\n\r\n    Curve.prototype.t = function(length) {\r\n        var params = this.segments[0].slice(1).concat(this.segments[1].slice(1)).concat([length]);\r\n        return Graph.util.curveInterval.apply(null, params);\r\n    };\r\n\r\n    Curve.prototype.pointAt = function(t, json) {\r\n        var params = this.segments[0].slice(1).concat(this.segments[1].slice(1)).concat([t]),\r\n            result = Graph.util.pointAtInterval.apply(null, params);\r\n\r\n        if (json) {\r\n            return result;\r\n        } else {\r\n            var point = Graph.point(result.x, result.y);\r\n            result.x = result.y = undefined;\r\n            return _.extend(point, result);\r\n        }\r\n    };\r\n\r\n    Curve.prototype.intersection = function(curve, json) {\r\n        var a = this.segments[0].slice(1).concat(this.segments[1].slice(1)),\r\n            b = curve.segments[0].slice(1).concat(curve.segments[1].slice(1)),\r\n            i = Graph.util.curveIntersection(a, b);\r\n\r\n        if (json) {\r\n            return i;\r\n        } else {\r\n            var points = _.map(i, function(p){ return Graph.point(p.x, p.y); });\r\n            return points;\r\n        }\r\n    };\r\n\r\n    Curve.prototype.intersectnum = function(curve) {\r\n        var a = this.segments[0].slice(1).concat(this.segments[1].slice(1)),\r\n            b = curve.segments[0].slice(1).concat(curve.segments[1].slice(1));\r\n\r\n        return Graph.util.curveIntersection(a, b, true);\r\n    };\r\n\r\n    Curve.prototype.bbox = function() {\r\n        var args = [this.segments[0][1], this.segments[0][2]].concat(this.segments[1].slice(1)),\r\n            bbox = Graph.util.curvebox.apply(null, args);\r\n        return Graph.bbox({\r\n            x: bbox.min.x,\r\n            y: bbox.min.y,\r\n            x2: bbox.max.x,\r\n            y2: bbox.max.y,\r\n            width: bbox.max.x - bbox.min.x,\r\n            height: bbox.max.y - bbox.min.y\r\n        });\r\n    };\r\n\r\n    Curve.prototype.clone = function() {\r\n        var segments = _.cloneDeep(this.segments);\r\n        return new Graph.lang.Curve(segments);\r\n    };\r\n\r\n    Curve.prototype.toValue = function() {\r\n        return Graph.util.segments2path(this.segments);\r\n    };\r\n\r\n    Curve.prototype.toString = function() {\r\n        return 'Graph.lang.Curve';\r\n    };\r\n\r\n    ///////// SHORTCUT /////////\r\n\r\n    Graph.curve = function(command) {\r\n        return new Graph.lang.Curve(command);\r\n    };\r\n\r\n    Graph.isCurve = function(obj) {\r\n        return obj instanceof Graph.lang.Curve;\r\n    };\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var BBox = Graph.lang.BBox = function(bounds) {\r\n        this.props = _.extend({\r\n            x: 0,\r\n            y: 0,\r\n            x2: 0,\r\n            y2: 0,\r\n            width: 0,\r\n            height: 0\r\n        }, bounds || {});\r\n    };\r\n\r\n    BBox.options = {\r\n        props: {\r\n            x: 0,\r\n            y: 0,\r\n            x2: 0,\r\n            y2: 0,\r\n            width: 0,\r\n            height: 0\r\n        }\r\n    };\r\n\r\n    BBox.extend = Graph.lang.Class.extend;\r\n\r\n    BBox.prototype = Object.create(Graph.lang.Class.prototype);\r\n    BBox.prototype.constructor = BBox;\r\n    BBox.prototype.superclass = Graph.lang.Class;\r\n\r\n    BBox.prototype.shape = function() {\r\n        var prop = this.props;\r\n\r\n        return new Graph.lang.Path([\r\n            ['M', prop.x, prop.y],\r\n            ['l', prop.width, 0],\r\n            ['l', 0, prop.height],\r\n            ['l', -prop.width, 0],\r\n            ['z']\r\n        ]);\r\n    };\r\n\r\n    BBox.prototype.origin = function(simple) {\r\n        simple = _.defaultTo(simple, false);\r\n\r\n        var x = this.props.x,\r\n            y = this.props.y;\r\n\r\n        return simple ? {x: x, y: y} : Graph.point(x, y);\r\n    };\r\n\r\n    BBox.prototype.center = function(simple) {\r\n        simple = _.defaultTo(simple, false);\r\n\r\n        var x = this.props.x + this.props.width  / 2,\r\n            y = this.props.y + this.props.height / 2;\r\n\r\n        return simple ? {x: x, y: y} : Graph.point(x, y);\r\n    };\r\n\r\n    BBox.prototype.corner = function(simple) {\r\n        simple = _.defaultTo(simple, false);\r\n\r\n        var x = this.props.x + this.props.width,\r\n            y = this.props.y + this.props.height;\r\n\r\n        return simple ? {x: x, y: y} : Graph.point(x, y);\r\n    };\r\n\r\n    BBox.prototype.width = function() {\r\n        return this.props.width;\r\n    };\r\n\r\n    BBox.prototype.height = function() {\r\n        return this.props.height;\r\n    };\r\n\r\n    BBox.prototype.clone = function() {\r\n        var props = _.extend({}, this.props);\r\n        return new BBox(props);\r\n    };\r\n\r\n    BBox.prototype.contains = function(obj) {\r\n        var contain = true,\r\n            bbox = this.props,\r\n            dots = [];\r\n\r\n        var vbox, papa, mat, dot;\r\n\r\n        if (Graph.isPoint(obj)) {\r\n            dots = [\r\n                [obj.props.x, obj.props.y]\r\n            ];\r\n        } else if (Graph.isVector(obj)) {\r\n            dots = obj.vertices(true);\r\n        } else if (Graph.isBBox(obj)) {\r\n            dots = [\r\n                [obj.props.x, obj.props.y],\r\n                [obj.props.x2, obj.props.y2]\r\n            ];\r\n        } else {\r\n            var args = _.toArray(arguments);\r\n            if (args.length === 2) {\r\n                dots = [args];\r\n            }\r\n        }\r\n\r\n        if (dots.length) {\r\n            var l = dots.length;\r\n            while(l--) {\r\n                dot = dots[l];\r\n                contain = dot[0] >= bbox.x  &&\r\n                          dot[0] <= bbox.x2 &&\r\n                          dot[1] >= bbox.y  &&\r\n                          dot[1] <= bbox.y2;\r\n                if ( ! contain) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return contain;\r\n    };\r\n\r\n    BBox.prototype.expand = function(dx, dy, dw, dh) {\r\n        var ax, ay;\r\n        if (_.isUndefined(dy)) {\r\n            ax = Math.abs(dx);\r\n\r\n            dx = -ax;\r\n            dy = -ax;\r\n            dw = 2 * ax;\r\n            dh = 2 * ax;\r\n        } else {\r\n            ax = Math.abs(dx);\r\n            ay = Math.abs(dy);\r\n\r\n            dx = -ax;\r\n            dy = -ay;\r\n            dw = 2 * ax;\r\n            dh = 2 * ay;\r\n        }\r\n\r\n        this.props.x += dx;\r\n        this.props.y += dy;\r\n        this.props.width  += dw;\r\n        this.props.height += dh;\r\n\r\n        return this;\r\n    };\r\n\r\n    BBox.prototype.translate = function(dx, dy) {\r\n        this.props.x  += dx;\r\n        this.props.y  += dy;\r\n        this.props.x2 += dx;\r\n        this.props.y2 += dy;\r\n\r\n        return this;\r\n    };\r\n\r\n    BBox.prototype.transform = function(matrix) {\r\n        var x = this.props.x,\r\n            y = this.props.y;\r\n\r\n        this.props.x = matrix.x(x, y);\r\n        this.props.y = matrix.y(x, y);\r\n\r\n        x = this.props.x2;\r\n        y = this.props.y2;\r\n\r\n        this.props.x2 = matrix.x(x, y);\r\n        this.props.y2 = matrix.y(x, y);\r\n\r\n        this.props.width  = this.props.x2 - this.props.x;\r\n        this.props.height = this.props.y2 - this.props.y;\r\n\r\n        return this;\r\n    };\r\n\r\n    BBox.prototype.intersect = function(tbox) {\r\n        var me = this,\r\n            bdat = me.props,\r\n            tdat = tbox.toJson();\r\n\r\n        return tbox.contains(bdat.x, bdat.y)\r\n            || tbox.contains(bdat.x2, bdat.y)\r\n            || tbox.contains(bdat.x, bdat.y2)\r\n            || tbox.contains(bdat.x2, bdat.y2)\r\n            || me.contains(tdat.x, tdat.y)\r\n            || me.contains(tdat.x2, tdat.y)\r\n            || me.contains(tdat.x, tdat.y2)\r\n            || me.contains(tdat.x2, tdat.y2)\r\n            || (bdat.x < tdat.x2 && bdat.x > tdat.x || tdat.x < bdat.x2 && tdat.x > bdat.x)\r\n            && (bdat.y < tdat.y2 && bdat.y > tdat.y || tdat.y < bdat.y2 && tdat.y > bdat.y);\r\n    };\r\n\r\n    BBox.prototype.sideNearestPoint = function(point) {\r\n        var px = point.props.x,\r\n            py = point.props.y,\r\n            tx = this.props.x,\r\n            ty = this.props.y,\r\n            tw = this.props.width,\r\n            th = this.props.height;\r\n\r\n        var distToLeft = px - tx;\r\n        var distToRight = (tx + tw) - px;\r\n        var distToTop = py - ty;\r\n        var distToBottom = (ty + th) - py;\r\n        var closest = distToLeft;\r\n        var side = 'left';\r\n\r\n        if (distToRight < closest) {\r\n            closest = distToRight;\r\n            side = 'right';\r\n        }\r\n\r\n        if (distToTop < closest) {\r\n            closest = distToTop;\r\n            side = 'top';\r\n        }\r\n        if (distToBottom < closest) {\r\n            closest = distToBottom;\r\n            side = 'bottom';\r\n        }\r\n\r\n        return side;\r\n    };\r\n\r\n    BBox.prototype.pointNearestPoint = function(point) {\r\n        if (this.contains(point)) {\r\n            var side = this.sideNearestPoint(point);\r\n            switch (side){\r\n                case 'right': return Graph.point(this.props.x + this.props.width, point.props.y);\r\n                case 'left': return Graph.point(this.props.x, point.props.y);\r\n                case 'bottom': return Graph.point(point.props.x, this.props.y + this.props.height);\r\n                case 'top': return Graph.point(point.props.x, this.props.y);\r\n            }\r\n        }\r\n        return point.clone().adhereToBox(this);\r\n    };\r\n\r\n    BBox.prototype.toJson = function() {\r\n        return _.clone(this.props);\r\n    };\r\n\r\n    BBox.prototype.toString = function() {\r\n        return 'Graph.lang.BBox';\r\n    };\r\n\r\n    BBox.prototype.toValue = function() {\r\n        var p = this.props;\r\n        return _.format(\r\n            '{0},{1} {2},{3} {4},{5} {6},{7}',\r\n            p.x, p.y,\r\n            p.x + p.width, p.y,\r\n            p.x + p.width, p.y + p.height,\r\n            p.x, p.y + p.height\r\n        );\r\n    };\r\n\r\n    ///////// EXTENSION /////////\r\n\r\n    Graph.isBBox = function(obj) {\r\n        return obj instanceof Graph.lang.BBox;\r\n    };\r\n\r\n    Graph.bbox = function(bounds) {\r\n        return new Graph.lang.BBox(bounds);\r\n    };\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.svg.Path = Graph.extend(Graph.svg.Vector, {\r\n\r\n        constructor: function(d) {\r\n            if ( ! d) {\r\n                d = [['M', 0, 0]];\r\n            }\r\n\r\n            if (_.isArray(d)) {\r\n                d = Graph.path(Graph.util.segments2path(d)).absolute().toValue();\r\n            } else if (d instanceof Graph.lang.Path) {\r\n                d = d.toValue();\r\n            } else {\r\n                d = Graph.path(d).absolute().toValue();\r\n            }\r\n\r\n            this.superclass.prototype.constructor.call(this, 'path', {\r\n                d: d\r\n            });\r\n        },\r\n\r\n        shape: function() {\r\n            return Graph.path(this.attrs.d)\r\n        },\r\n\r\n        segments: function() {\r\n            return this.shape().segments;\r\n        },\r\n\r\n        intersection: function(path, dots) {\r\n            return this.shape().intersection(path.shape(), dots);\r\n        },\r\n\r\n        intersectnum: function(path) {\r\n            return this.shape().intersectnum(path.shape());\r\n        },\r\n\r\n        angle: function() {\r\n            var segments = _.clone(this.segments()),\r\n                max = segments.length - 1;\r\n\r\n            if (segments[max][0] == 'Z') {\r\n                max--;\r\n                segments.pop();\r\n            }\r\n\r\n            if (segments.length === 1) {\r\n                max++;\r\n                segments.push(['L', segments[0][1], segments[0][2]]);\r\n            }\r\n\r\n            var dx = segments[max][1] - segments[max - 1][1],\r\n                dy = segments[max][2] - segments[max - 1][2];\r\n\r\n            return (180 + Math.atan2(-dy, -dx) * 180 / Math.PI + 360) % 360;\r\n        },\r\n\r\n        slice: function(from, to) {\r\n            return this.shape().slice(from, to);\r\n        },\r\n\r\n        pointAt: function(length) {\r\n            return this.shape().pointAt(length);\r\n        },\r\n\r\n        length: function() {\r\n            return this.shape().length();\r\n        },\r\n\r\n        addVertext: function(vertext) {\r\n            var path = this.shape();\r\n\r\n            path.addVertext(vertext);\r\n            this.attr('d', path.command());\r\n\r\n            return this;\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var ms = this.matrix().clone(),\r\n                mr = matrix.rotate(),\r\n                ro = mr.deg,\r\n                rd = mr.rad,\r\n                si = Math.sin(rd),\r\n                co = Math.cos(rd),\r\n                pa = this.shape(),\r\n                ps = pa.segments,\r\n                rx = ps[0][1],\r\n                ry = ps[0][2];\r\n\r\n            if (ro) {\r\n                ms.rotate(-ro, rx, ry);    \r\n            }\r\n            \r\n            rx = ms.x(ps[0][1], ps[0][2]);\r\n            ry = ms.y(ps[0][1], ps[0][2]);\r\n\r\n            ms.scale(sx, sy, cx, cy);\r\n\r\n            _.forEach(ps, function(seg){\r\n                var ox, oy, nx, ny;\r\n                if (seg[0] != 'Z') {\r\n                    ox = seg[seg.length - 2];\r\n                    oy = seg[seg.length - 1];\r\n\r\n                    nx = ms.x(ox, oy);\r\n                    ny = ms.y(ox, oy);\r\n                    \r\n                    seg[seg.length - 2] = nx;\r\n                    seg[seg.length - 1] = ny;\r\n                }\r\n            });\r\n\r\n            this.reset();\r\n            this.attr('d', pa.command());\r\n\r\n            if (ro) {\r\n                this.rotate(ro, rx, ry).commit(true);    \r\n            }\r\n\r\n            return {\r\n                matrix: ms,\r\n                x: rx,\r\n                y: ry\r\n            };\r\n        },\r\n\r\n        moveTo: function(x, y) {\r\n            var path = this.shape();\r\n            \r\n            path.moveTo(x, y);\r\n            this.attr('d', path.command());\r\n\r\n            return this;\r\n        },\r\n\r\n        lineTo: function(x, y, append) {\r\n            var path = this.shape();\r\n            \r\n            path.lineTo(x, y, append);\r\n            this.attr('d', path.command());\r\n\r\n            return this;\r\n        },\r\n\r\n        tail: function() {\r\n            var segments = this.segments();\r\n            if (segments.length) {\r\n                return Graph.point(segments[0][1], segments[0][2]);\r\n            }\r\n            return null;\r\n        },\r\n\r\n        head: function() {\r\n            var segments = this.segments(), maxs;\r\n            if (segments.length) {\r\n                maxs = segments.length - 1;\r\n                return Graph.point(segments[maxs][1], segments[maxs][2]);\r\n            }\r\n            return null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Path';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Matrix = Graph.lang.Matrix = function(a, b, c, d, e, f) {\r\n        this.props = {};\r\n\r\n        this.props.a = _.defaultTo(a, 1);\r\n        this.props.b = _.defaultTo(b, 0);\r\n        this.props.c = _.defaultTo(c, 0);\r\n        this.props.d = _.defaultTo(d, 1);\r\n        this.props.e = _.defaultTo(e, 0);\r\n        this.props.f = _.defaultTo(f, 0);\r\n    };\r\n\r\n    Matrix.options = {\r\n        props: {\r\n            a: 1,\r\n            b: 0,\r\n            c: 0,\r\n            d: 1,\r\n            e: 0,\r\n            f: 0\r\n        }\r\n    };\r\n\r\n    Matrix.extend = Graph.lang.Class.extend;\r\n\r\n    Matrix.prototype.constructor = Matrix;\r\n\r\n    Matrix.prototype.x = function(x, y) {\r\n        return x * this.props.a + y * this.props.c + this.props.e;\r\n    };\r\n\r\n    Matrix.prototype.y = function(x, y) {\r\n        return x * this.props.b + y * this.props.d + this.props.f;\r\n    };\r\n\r\n    Matrix.prototype.get = function(chr) {\r\n        return +this.props[chr].toFixed(4);\r\n    };\r\n\r\n    Matrix.prototype.multiply = function(a, b, c, d, e, f) {\r\n        var\r\n            result = [[], [], []],\r\n            source = [\r\n                [this.props.a, this.props.c, this.props.e],\r\n                [this.props.b, this.props.d, this.props.f],\r\n                [0, 0, 1]\r\n            ],\r\n            matrix = [\r\n                [a, c, e],\r\n                [b, d, f],\r\n                [0, 0, 1]\r\n            ];\r\n\r\n        var x, y, z, tmp;\r\n        \r\n        if (Graph.isMatrix(a)) {\r\n            matrix = [\r\n                [a.props.a, a.props.c, a.props.e],\r\n                [a.props.b, a.props.d, a.props.f],\r\n                [0, 0, 1]\r\n            ];\r\n        }\r\n\r\n        for (x = 0; x < 3; x++) {\r\n            for (y = 0; y < 3; y++) {\r\n                tmp = 0;\r\n                for (z = 0; z < 3; z++) {\r\n                    tmp += source[x][z] * matrix[z][y];\r\n                }\r\n                result[x][y] = tmp;\r\n            }\r\n        }\r\n\r\n        this.props.a = result[0][0];\r\n        this.props.b = result[1][0];\r\n        this.props.c = result[0][1];\r\n        this.props.d = result[1][1];\r\n        this.props.e = result[0][2];\r\n        this.props.f = result[1][2];\r\n\r\n        return this;\r\n    };\r\n\r\n    Matrix.prototype.invert = function(clone) {\r\n        var x = this.props.a * this.props.d - this.props.b * this.props.c;\r\n        var a, b, c, d, e, f;\r\n\r\n        clone = _.defaultTo(clone, false);\r\n\r\n        a =  this.props.d / x;\r\n        b = -this.props.b / x;\r\n        c = -this.props.c / x;\r\n        d =  this.props.a / x;\r\n        e = (this.props.c * this.props.f - this.props.d * this.props.e) / x;\r\n        f = (this.props.b * this.props.e - this.props.a * this.props.f) / x;\r\n\r\n        if (clone) {\r\n            return new Graph.matrix(a, b, c, d, e, f);\r\n        } else {\r\n            this.props.a = a;\r\n            this.props.b = b;\r\n            this.props.c = c;\r\n            this.props.d = d;\r\n            this.props.e = e;\r\n            this.props.f = f;\r\n\r\n            return this;\r\n        }\r\n    };\r\n\r\n    Matrix.prototype.translate = function(x, y) {\r\n        x = _.defaultTo(x, 0);\r\n        y = _.defaultTo(y, 0);\r\n        this.multiply(1, 0, 0, 1, x, y);\r\n\r\n        return this;\r\n    };\r\n\r\n    // http://stackoverflow.com/questions/16359246/how-to-extract-position-rotation-and-scale-from-matrix-svg\r\n    Matrix.prototype.rotate = function(angle, cx, cy) {\r\n        var args = arguments;\r\n        if ( ! args.length) {\r\n            var px = this.delta(0, 1),\r\n                py = this.delta(1, 0);\r\n\r\n            var deg, rad;\r\n\r\n            deg = 180 / Math.PI * Math.atan2(px.y, px.x) - 90;\r\n            rad = Graph.util.rad(deg);\r\n\r\n            return {\r\n                deg: deg,\r\n                rad: rad,\r\n                sin: Math.sin(rad),\r\n                cos: Math.cos(rad)\r\n            };\r\n        }\r\n\r\n        var radian;\r\n\r\n        radian = Graph.util.rad(angle);\r\n\r\n        cx = _.defaultTo(cx, 0);\r\n        cy = _.defaultTo(cy, 0);\r\n        \r\n        var cos = +Math.cos(radian).toFixed(9),\r\n            sin = +Math.sin(radian).toFixed(9);\r\n            \r\n        this.multiply(cos, sin, -sin, cos, cx, cy);\r\n        this.multiply(1, 0, 0, 1, -cx, -cy);\r\n        \r\n        return this;\r\n    };\r\n\r\n    Matrix.prototype.scale = function(sx, sy, cx, cy) {\r\n        if (sx === undefined) {\r\n            var prop = this.props,\r\n                sx = Graph.util.hypo(prop.a, prop.b),\r\n                sy = Graph.util.hypo(prop.c, prop.d);\r\n\r\n            if (this.determinant() < 0) {\r\n                sx = -sx;\r\n            }\r\n\r\n            return {\r\n                x: sx,\r\n                y: sy\r\n            };\r\n        }\r\n\r\n        sy = _.defaultTo(sy, sx);\r\n\r\n        if (cx || cy) {\r\n            cx = _.defaultTo(cx, 0);\r\n            cy = _.defaultTo(cy, 0);\r\n        }\r\n\r\n        (cx || cy) && this.multiply(1, 0, 0, 1, cx, cy);\r\n        this.multiply(sx, 0, 0, sy, 0, 0);\r\n        (cx || cy) && this.multiply(1, 0, 0, 1, -cx, -cy);\r\n\r\n        return this;\r\n    };\r\n\r\n    Matrix.prototype.determinant = function() {\r\n        return this.props.a * this.props.d - this.props.b * this.props.c;\r\n    };\r\n\r\n    Matrix.prototype.delta = function(x, y) {\r\n        return {\r\n            x: x * this.props.a + y * this.props.c + 0,\r\n            y: x * this.props.b + y * this.props.d + 0\r\n        };\r\n    };\r\n\r\n    Matrix.prototype.data = function() {\r\n        var px = this.delta(0, 1),\r\n            py = this.delta(1, 0),\r\n            skewX = 180 / Math.PI * Math.atan2(px.y, px.x) - 90,\r\n            radSkewX = Graph.util.rad(skewX),\r\n            cosSkewX = Math.cos(radSkewX),\r\n            sinSkewX = Math.sin(radSkewX),\r\n            scaleX = Graph.util.hypo(this.props.a, this.props.b),\r\n            scaleY = Graph.util.hypo(this.props.c, this.props.d),\r\n            radian = Graph.util.rad(skewX);\r\n\r\n        if (this.determinant() < 0) {\r\n            scaleX = -scaleX;\r\n        }\r\n\r\n        return {\r\n            x: this.props.e,\r\n            y: this.props.f,\r\n            dx: (this.props.e * cosSkewX + this.props.f *  sinSkewX) / scaleX,\r\n            dy: (this.props.f * cosSkewX + this.props.e * -sinSkewX) / scaleY,\r\n            skewX: -skewX,\r\n            skewY: 180 / Math.PI * Math.atan2(py.y, py.x),\r\n            scaleX: scaleX,\r\n            scaleY: scaleY,\r\n            // rotate: skewX,\r\n            rotate: this.rotate().deg,\r\n            rad: radian,\r\n            sin: Math.sin(radian),\r\n            cos: Math.cos(radian),\r\n            a: this.props.a,\r\n            b: this.props.b,\r\n            c: this.props.c,\r\n            d: this.props.d,\r\n            e: this.props.e,\r\n            f: this.props.f\r\n        };\r\n    };\r\n\r\n    Matrix.prototype.toFilter = function() {\r\n        return \"progid:DXImageTransform.Microsoft.Matrix(\" +\r\n           \"M11=\" + this.get('a') + \", \" +\r\n           \"M12=\" + this.get('c') + \", \" +\r\n           \"M21=\" + this.get('b') + \", \" +\r\n           \"M22=\" + this.get('d') + \", \" +\r\n           \"Dx=\"  + this.get('e') + \", \" +\r\n           \"Dy=\"  + this.get('f') + \", \" +\r\n           \"sizingmethod='auto expand'\"  +\r\n        \")\";\r\n    };\r\n\r\n    Matrix.prototype.toArray = function() {\r\n        return [\r\n            [this.get('a'), this.get('c'), this.get('e')],\r\n            [this.get('b'), this.get('d'), this.get('f')],\r\n            [0, 0, 1]\r\n        ];\r\n    };\r\n\r\n    Matrix.prototype.toValue = function() {\r\n        return _.format(\r\n            'matrix({0},{1},{2},{3},{4},{5})',\r\n            this.get('a'),\r\n            this.get('b'),\r\n            this.get('c'),\r\n            this.get('d'),\r\n            this.get('e'),\r\n            this.get('f')\r\n        );\r\n    };\r\n\r\n    Matrix.prototype.toString = function() {\r\n        return 'Graph.lang.Matrix';\r\n    };\r\n\r\n    Matrix.prototype.clone = function() {\r\n        return new Matrix(\r\n            this.props.a,\r\n            this.props.b,\r\n            this.props.c,\r\n            this.props.d,\r\n            this.props.e,\r\n            this.props.f\r\n        );\r\n    };\r\n\r\n    ///////// EXTENSION /////////\r\n\r\n    Graph.isMatrix = function(obj) {\r\n        return obj instanceof Graph.lang.Matrix;\r\n    };\r\n\r\n    Graph.matrix = function(a, b, c, d, e, f) {\r\n        return new Graph.lang.Matrix(a, b, c, d, e, f);\r\n    };\r\n\r\n}());\r\n","\r\n(function(){\r\n    \r\n    var storage = {},\r\n        context = {};\r\n\r\n    var Registry = function() {\r\n\r\n    };\r\n\r\n    Registry.prototype.constructor = Registry;\r\n\r\n    Registry.prototype.register = function(vector) {\r\n        var id = vector.guid(), found = this.get(id);\r\n        storage[id] = vector;\r\n    };\r\n\r\n    Registry.prototype.unregister = function(vector) {\r\n        var id = vector.guid();\r\n        if (storage[id]) {\r\n            delete storage[id];\r\n        }\r\n\r\n        if (context[id]) {\r\n            delete context[id];\r\n        }\r\n    };\r\n\r\n    Registry.prototype.setContext = function(id, scope) {\r\n        if (storage[id]) {\r\n            context[id] = scope;\r\n        }\r\n    };\r\n\r\n    Registry.prototype.size = function() {\r\n        return _.keys(storage).length;\r\n    };\r\n\r\n    Registry.prototype.toArray = function() {\r\n        var keys = _.keys(storage);\r\n        return _.map(keys, function(k){\r\n            return storage[k];\r\n        });\r\n    };\r\n\r\n    Registry.prototype.get = function(key) {\r\n\r\n        if (_.isUndefined(key)) {\r\n            return this.toArray();\r\n        }\r\n\r\n        if (key instanceof SVGElement) {\r\n            if (key.tagName == 'tspan') {\r\n                // we only interest to text\r\n                key = key.parentNode;\r\n            }\r\n            key = Graph.$(key).data(Graph.string.ID_VECTOR);\r\n        } else if (key instanceof Graph.dom.Element) {\r\n            key = key.data(Graph.string.ID_VECTOR);\r\n        }\r\n        return storage[key];\r\n    };\r\n\r\n    Registry.prototype.collect = function(scope) {\r\n        var vectors = [];\r\n        for (var id in context) {\r\n            if (context[id] == scope && storage[id]) {\r\n                vectors.push(storage[id]);\r\n            }\r\n        }\r\n        return vectors;\r\n    };\r\n\r\n    Registry.prototype.wipe = function(paper) {\r\n        var pid = paper.guid();\r\n\r\n        for (var id in storage) {\r\n            if (storage.hasOwnProperty(id)) {\r\n                if (storage[id].tree.paper == pid) {\r\n                    delete storage[id];\r\n                }\r\n            }\r\n        }\r\n\r\n        if (storage[pid]) {\r\n            delete storage[pid];\r\n        }\r\n    };\r\n\r\n    Registry.prototype.toString = function() {\r\n        return 'Graph.registry.Vector';\r\n    };\r\n    \r\n    Graph.registry.vector = new Registry();\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Shape = Graph.shape.Shape = Graph.extend({\r\n\r\n        props: {\r\n            id: null,\r\n            guid: null,\r\n            mode: null,\r\n            left: 0,\r\n            top: 0,\r\n            width: 0,\r\n            height: 0,\r\n            rotate: 0,\r\n            label: '',\r\n            alias: '',\r\n            fill: 'rgb(255, 255, 255)',\r\n            stroke: 'rgb(0, 0, 0)',\r\n            strokeWidth: 2\r\n        },\r\n\r\n        params: [],\r\n\r\n        components: {\r\n            shape: null,\r\n            block: null,\r\n            label: null,\r\n            child: null\r\n        },\r\n\r\n        layout: {\r\n            suspended: false\r\n        },\r\n\r\n        tree: {\r\n            paper: null,\r\n            parent: null,\r\n            children: null\r\n        },\r\n\r\n        metadata: {\r\n            type: null,\r\n            icon: Graph.icons.SHAPE,\r\n            style: 'graph-shape',\r\n            tools: null,\r\n            params: []\r\n        },\r\n\r\n        cached: {\r\n\r\n        },\r\n\r\n        plugins: {\r\n            manager: null\r\n        },\r\n\r\n        constructor: function(options) {\r\n            var guid;\r\n\r\n            this.data(options || {});\r\n\r\n            guid = 'graph-shape-' + (++Shape.guid);\r\n\r\n            this.props.guid = guid;\r\n            this.tree.children = new Graph.collection.Shape();\r\n            this.plugins.manager = new Graph.plugin.Manager();\r\n\r\n            this.initComponent();\r\n            this.initMetadata();\r\n\r\n            if (this.components.shape) {\r\n                var style = Graph.styles.SHAPE,\r\n                    shape = this.component();\r\n\r\n                if (this.metadata.style) {\r\n                    style += ' ' + this.metadata.style;\r\n                }\r\n\r\n                shape.addClass(style);\r\n                shape.attr('data-shape', guid);\r\n                \r\n                style = null;\r\n            }\r\n\r\n            Graph.registry.shape.register(this);\r\n\r\n            guid = null;\r\n        },\r\n\r\n        data: function(name, value) {\r\n            if (name === undefined && value === undefined) {\r\n                return this.props;\r\n            }\r\n\r\n            var excludes = {\r\n                type: true,\r\n                client_id: true,\r\n                client_parent: true,\r\n                client_pool: true,\r\n                diagram_id: true,\r\n                parent_id: true\r\n            };\r\n\r\n            var maps = {\r\n                stroke_width: 'strokeWidth'\r\n            };\r\n\r\n            var map, key;\r\n\r\n            if (_.isPlainObject(name)) {\r\n                for (key in name) {\r\n                    if ( ! excludes[key]) {\r\n                        map = maps[key] || key;\r\n                        if (key == 'params') {\r\n                            this.params = name[key];\r\n                        } else {\r\n                            this.props[map] = name[key];\r\n                        }\r\n                    }\r\n                }\r\n                return this;\r\n            }\r\n\r\n            if (value === undefined) {\r\n                return this.props[name];\r\n            }\r\n\r\n            if ( ! excludes[name]) {\r\n                map = maps[name] || name;\r\n                if (name == 'params') {\r\n                    this.params = value;\r\n                } else {\r\n                    this.props[map] = value;        \r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        update: function(data) {\r\n            data = data || {};\r\n\r\n            if (data.props) {\r\n                this.data(data.props);\r\n            }\r\n        },\r\n\r\n        redraw: function(props) {\r\n            var key;\r\n            \r\n            props = props || {};\r\n\r\n            this.suspendLayout();\r\n\r\n            for (key in props) {\r\n                if (this[key] !== undefined && _.isFunction(this[key])) {\r\n                    this[key](props[key]);\r\n                }\r\n            }\r\n\r\n            this.resumeLayout();\r\n            this.refresh();\r\n        },\r\n\r\n        is: function(type) {\r\n            return this.metadata.type == type;\r\n        },\r\n\r\n        initMetadata: function() {\r\n            this.metadata.tools = [\r\n                {\r\n                    name: 'config',\r\n                    icon: Graph.icons.CONFIG,\r\n                    title: Graph._('Click to config shape'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onConfigToolClick, this)\r\n                },\r\n                {\r\n                    name: 'link',\r\n                    icon: Graph.icons.LINK,\r\n                    title: Graph._('Click to start shape linking'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onLinkToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtofront',\r\n                    icon: Graph.icons.SEND_TO_FRONT,\r\n                    title: Graph._('Send to front'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onFrontToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtoback',\r\n                    icon: Graph.icons.SEND_TO_BACK,\r\n                    title: Graph._('Send to back'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBackToolClick, this)\r\n                },\r\n                {\r\n                    name: 'trash',\r\n                    icon: Graph.icons.TRASH,\r\n                    title: Graph._('Click to remove shape'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onTrashToolClick, this)\r\n                }\r\n            ];\r\n        },\r\n\r\n        initComponent: function() {\r\n            var shape = (new Graph.svg.Group());\r\n            this.components.shape = shape.guid();\r\n            shape = null;\r\n        },\r\n\r\n        component: function(name) {\r\n            var manager = Graph.registry.vector;\r\n            if (name === undefined) {\r\n                return manager.get(this.components.shape);\r\n            }\r\n            return manager.get(this.components[name]);\r\n        },\r\n\r\n        invalidate: function() {\r\n            for (var key in this.cached) {\r\n                this.cached[key] = null;\r\n            }\r\n        },\r\n\r\n        connectable: function() {\r\n            return this.plugins.manager.get('network');\r\n        },\r\n\r\n        resizable: function() {\r\n            return this.plugins.manager.get('resizer');\r\n        },\r\n\r\n        draggable: function() {\r\n            return this.plugins.manager.get('dragger');\r\n        },\r\n\r\n        snappable: function() {\r\n            return this.plugins.manager.get('snapper');\r\n        },\r\n\r\n        editable: function() {\r\n            return this.plugins.manager.get('editor');  \r\n        },\r\n\r\n        paper: function() {\r\n            return Graph.registry.vector.get(this.tree.paper);\r\n        },\r\n\r\n        parent: function() {\r\n            return Graph.registry.shape.get(this.tree.parent);\r\n        },\r\n\r\n        children: function() {\r\n            return this.tree.children;\r\n        },\r\n\r\n        hasChild: function(child) {\r\n            return this.children().has(child);\r\n        },\r\n\r\n        addChild: function(child, relocate) {\r\n            var children = this.children(),\r\n                placeTarget = this.component('child'),\r\n                guid = this.guid(),\r\n                me = this;\r\n\r\n            relocate = _.defaultTo(relocate, true);\r\n\r\n            if ( ! _.isArray(child)) {\r\n                child = [child];\r\n            }\r\n\r\n            var beforeDestroyHandler = _.bind(this.onChildBeforeDestroy, this);\r\n\r\n            _.forEach(child, function(shape){\r\n                var parent = shape.parent();\r\n\r\n                if (parent && parent.guid() != guid) {\r\n                    parent.removeChild(shape);\r\n                }\r\n\r\n                if ( ! children.has(shape)) {\r\n                    var shapeComponent = shape.component();\r\n\r\n                    if (relocate) {\r\n                        shapeComponent.relocate(placeTarget);    \r\n                    } else {\r\n                        placeTarget.append(shapeComponent);\r\n                    }\r\n                    \r\n                    shape.cached.beforeDestroyHandler = _.bind(me.onChildBeforeDestroy, me);\r\n                    shape.cached.afterDragHandler = _.bind(me.onChildAfterDrag, me);\r\n                    shape.cached.connectHandler = _.bind(me.onChildConnect, me);\r\n\r\n                    shape.on('beforedestroy', shape.cached.beforeDestroyHandler);\r\n                    shape.on('afterdrag', shape.cached.afterDragHandler);\r\n                    shape.on('connect', shape.cached.connectHandler);\r\n\r\n                    children.push(shape);\r\n                    shape.tree.parent = guid;\r\n\r\n                    // update shape props\r\n                    var matrix = shapeComponent.matrix();\r\n\r\n                    shape.data({\r\n                        left: matrix.props.e,\r\n                        top: matrix.props.f\r\n                    });\r\n                }\r\n            });\r\n\r\n            if (relocate) {\r\n                this.autoResize();    \r\n            }\r\n        },\r\n\r\n        removeChild: function(child) {\r\n            var children = this.children();\r\n\r\n            if (children.has(child)) {\r\n                children.pull(child);\r\n                child.tree.parent = null;\r\n            }\r\n        },\r\n\r\n        guid: function() {\r\n            return this.props.guid;\r\n        },\r\n\r\n        matrix: function() {\r\n            return this.component().matrix();\r\n        },\r\n\r\n        bbox: function() {\r\n            return Graph.bbox({\r\n                 x: this.props.left,\r\n                 y: this.props.top,\r\n                x2: this.props.left + this.props.width,\r\n                y2: this.props.top + this.props.height,\r\n                width: this.props.width,\r\n                height: this.props.height\r\n            });\r\n        },\r\n\r\n        render: function(paper) {\r\n            var guid = this.guid(),\r\n                paperGuid = paper.guid();\r\n\r\n            var component = this.component();\r\n            component && component.render(paper);\r\n            \r\n            // save\r\n            this.tree.paper = paperGuid;\r\n            Graph.registry.shape.setContext(guid, paperGuid);\r\n        },\r\n\r\n        select: function(single) {\r\n            var blockComponent = this.component('block'),\r\n                paper = this.paper();\r\n\r\n            single = _.defaultTo(single, false);\r\n\r\n            if (single && paper) {\r\n                paper.collector().clearCollection();\r\n            }\r\n\r\n            if (blockComponent) {\r\n                blockComponent.select();\r\n            }\r\n        },\r\n\r\n        deselect: function() {\r\n            var blockComponent = this.component('block');\r\n            if (blockComponent) {\r\n                blockComponent.deselect();\r\n            }\r\n        },\r\n\r\n        remove: function() {\r\n            // just fire block removal\r\n            this.component('block').remove();\r\n        },\r\n\r\n        refresh: _.debounce(function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n\r\n            var label = this.component('label'),\r\n                block = this.component('block'),\r\n                bound = block.bbox().toJson();\r\n\r\n            label.attr({\r\n                x: bound.x + bound.width  / 2,\r\n                y: bound.x + bound.height / 2\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n        }, 1),\r\n\r\n        autoResize: function() {\r\n\r\n        },\r\n\r\n        center: function() {\r\n            var bbox = this.component().bboxView().toJson();\r\n            return {\r\n                x: (bbox.x + bbox.x2) / 2,\r\n                y: (bbox.y + bbox.y2) / 2\r\n            };\r\n        },\r\n\r\n        translate: function(dx, dy) {\r\n            var component = this.component();\r\n            component.translate(dx, dy).commit();\r\n\r\n            // update props\r\n            var matrix = component.matrix(),\r\n                left = matrix.props.e,\r\n                top = matrix.props.f;\r\n\r\n            this.data({\r\n                left: left,\r\n                top: top\r\n            });\r\n\r\n            var childComponent = this.component('child');\r\n\r\n            if (childComponent) {\r\n                childComponent.dirty(true);\r\n            }\r\n\r\n        },\r\n\r\n        cascade: function(handler) {\r\n            cascade(this, handler);\r\n        },\r\n\r\n        sendToBack: function() {\r\n            var parent = this.parent(),\r\n                container = parent \r\n                    ? parent.component('child').elem\r\n                    : this.paper().viewport().elem;\r\n\r\n            container && container.prepend(this.component().elem);\r\n        },\r\n\r\n        sendToFront: function() {\r\n            var parent = this.parent(),\r\n                container = parent \r\n                    ? parent.component('child').elem\r\n                    : this.paper().viewport().elem;\r\n\r\n            container && container.append(this.component().elem);\r\n        },\r\n\r\n        suspendLayout: function() {\r\n            this.layout.suspended = true;\r\n        },\r\n\r\n        resumeLayout: function() {\r\n            this.layout.suspended = false;\r\n        },\r\n\r\n        /**\r\n         *  Use this method only for updating `width`, `height`, `left`, `top`\r\n         *  otherwise use data()\r\n         */\r\n        attr: function(name, value) {\r\n            var me = this;\r\n\r\n            if (_.isPlainObject(name)) {\r\n                _.forOwn(name, function(v, k){\r\n                    me.props[k] = v;\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (value === undefined) {\r\n                return this.props[name];\r\n            }\r\n\r\n            this.props[name] = value;\r\n            return this;\r\n        },\r\n\r\n        height: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.height;\r\n            }\r\n\r\n            var block = this.component('block'),\r\n                box = block.bbox().toJson(),\r\n                sx = 1,\r\n                sy = value / this.props.height,\r\n                cx = (box.x + box.x2) / 2,\r\n                cy = box.y,\r\n                dx = 0,\r\n                dy = 0;\r\n\r\n            var resize = block.resize(sx, sy, cx, cy, dx, dy);\r\n            block.fire('afterresize', resize);\r\n            \r\n            this.props.height = value;\r\n            return this;\r\n        },\r\n\r\n        width: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.width;\r\n            }\r\n\r\n            var block = this.component('block'),\r\n                box = block.bbox().toJson(),\r\n                sx = value / this.props.width,\r\n                sy = 1,\r\n                cx = box.x,\r\n                cy = (box.y + box.y2) / 2,\r\n                dx = 0,\r\n                dy = 0;\r\n\r\n            var resize = block.resize(sx, sy, cx, cy, dx, dy);\r\n            block.fire('afterresize', resize);\r\n\r\n            this.props.width = value;\r\n            return this;\r\n        },\r\n\r\n        left: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.left;\r\n            }\r\n\r\n            var shape = this.component(),\r\n                matrix = shape.matrix(),\r\n                dx = value - matrix.props.e,\r\n                dy = 0;\r\n\r\n            shape.translate(dx, dy).commit();\r\n            this.props.left = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        top: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.top;\r\n            }\r\n\r\n            var shape = this.component(),\r\n                matrix = shape.matrix(),\r\n                dx = 0,\r\n                dy = value - matrix.props.f;\r\n\r\n            shape.translate(dx, dy).commit();\r\n            this.props.top = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        rotate: function(value) {\r\n            var block = this.component('block');\r\n            if (block && block.isRotatable()) {\r\n                var center = block.bbox().toJson();\r\n                block.rotate(value, center.x, center.y).commit();\r\n            }\r\n        },\r\n\r\n        label: function(label) {\r\n            if (label === undefined) {\r\n                return this.props.label;\r\n            }\r\n\r\n            var blockComponent = this.component('block'),\r\n                labelComponent = this.component('label');\r\n\r\n            labelComponent.props.text = label;\r\n            blockComponent.data('text', label);\r\n\r\n            this.props.label = label;\r\n            this.refresh();\r\n        },\r\n\r\n        fill: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.fill;\r\n            }\r\n            this.props.fill = value;\r\n            this.component('block').elem.css('fill', value);\r\n        },\r\n\r\n        stroke: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.stroke;\r\n            }\r\n            \r\n            this.props.stroke = value;\r\n            this.component('block').elem.css('stroke', value);\r\n        },\r\n\r\n        strokeWidth: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.strokeWidth;\r\n            }\r\n\r\n            this.props.strokeWidth = value;\r\n            this.component('block').elem.css('stroke-width', value);\r\n        },\r\n\r\n        connect: function(target, start, end, options){\r\n            var sourceNetwork = this.connectable().plugin(),\r\n                targetNetwork = target.connectable().plugin();\r\n\r\n            if (sourceNetwork && targetNetwork) {\r\n                return sourceNetwork.connect(targetNetwork, start, end, options);\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        disconnect: function(target, link) {\r\n            var sourceNetwork = this.connectable().plugin(),\r\n                targetNetwork = target.connectable().plugin();\r\n\r\n            if (sourceNetwork && targetNetwork) {\r\n                return sourceNetwork.disconnect(targetNetwork, link);\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        toJson: function() {\r\n            var blockComponent = this.component('block'),\r\n                paper = this.paper();\r\n\r\n            var shape = {\r\n                metadata: {\r\n\r\n                },\r\n                props: {\r\n                    id: this.props.id,\r\n                    type: this.toString(),\r\n                    mode: this.props.mode,\r\n                    guid: this.props.guid,\r\n                    pool: null,\r\n                    parent: this.tree.parent,\r\n                    label: this.props.label,\r\n                    left: this.props.left,\r\n                    top: this.props.top,\r\n                    width: this.props.width,\r\n                    height: this.props.height,\r\n                    rotate: this.props.rotate,\r\n                    fill: this.props.fill,\r\n                    strokeWidth: this.props.strokeWidth,\r\n                    stroke: this.props.stroke\r\n                },\r\n                params: this.params,\r\n                links: [\r\n                    \r\n                ]\r\n            };\r\n\r\n            var network = this.connectable().plugin();\r\n\r\n            if (network) {\r\n                var connections = network.connections();\r\n\r\n                _.forEach(connections, function(conn){\r\n                    var linkData = conn.link.toJson();\r\n\r\n                    shape.links.push({\r\n                        guid: conn.guid,\r\n                        mode: conn.type,\r\n                        pair: conn.type == 'outgoing' ? linkData.props.target : linkData.props.source\r\n                    });\r\n                });\r\n            }\r\n\r\n            return shape;\r\n        },\r\n\r\n        ///////// PRIVATE OBSERVERS /////////\r\n\r\n        onLabelEdit: function(e) {\r\n            this.label(e.text);\r\n        },\r\n\r\n        onBeforeDrag: function(e) {\r\n            this.fire(e);\r\n            this.paper().diagram().capture();\r\n        },\r\n\r\n        onAfterDrag: function(e) {\r\n            var blockComponent = this.component('block'),\r\n                shapeComponent = this.component('shape'),\r\n                childComponent = this.component('child'),\r\n                blockMatrix = blockComponent.matrix();\r\n\r\n            var shapeMatrix;\r\n\r\n            blockComponent.reset();\r\n\r\n            shapeComponent.matrix().multiply(blockMatrix);\r\n            shapeComponent.attr('transform', shapeComponent.matrix().toValue());\r\n            shapeComponent.dirty(true);\r\n\r\n            if (childComponent) {\r\n                childComponent.dirty(true);\r\n            }\r\n\r\n            // update props\r\n            shapeMatrix = shapeComponent.matrix();\r\n\r\n            this.data({\r\n                left: shapeMatrix.props.e,\r\n                top: shapeMatrix.props.f\r\n            });\r\n\r\n            // forward\r\n            this.fire(e);\r\n        },\r\n\r\n        onAfterRotate: function(e) {\r\n            var shapeComponent = this.component('shape'),\r\n                blockComponent = this.component('block'),\r\n                childComponent = this.component('child');\r\n\r\n            var shapeMatrix = shapeComponent.matrix();\r\n\r\n            shapeMatrix.multiply(blockComponent.matrix());\r\n            shapeComponent.attr('transform', shapeMatrix.toValue());\r\n            shapeComponent.dirty(true);\r\n\r\n            if (childComponent) {\r\n                childComponent.dirty(true);\r\n            }\r\n\r\n            blockComponent.reset();\r\n            blockComponent.rotatable().redraw();\r\n\r\n            if (blockComponent.isResizable() && blockComponent.resizable().props.suspended === false) {\r\n                blockComponent.resizable().redraw();    \r\n            }\r\n\r\n            var shapeRotate = shapeMatrix.rotate();\r\n            this.props.rotate = shapeRotate.deg;\r\n        },\r\n\r\n        onSelect: function(e) {\r\n            this.component('shape').addClass('shape-selected');\r\n            if (e.initial) {\r\n                Graph.topic.publish('shape:select', {shape: this});    \r\n            }\r\n        },\r\n\r\n        onDeselect: function(e) {\r\n            this.component('shape').removeClass('shape-selected');\r\n            if (e.initial) {\r\n                Graph.topic.publish('shape:deselect', {shape: this});\r\n            }\r\n        },\r\n\r\n        onConnect: function(e) {\r\n            var link = e.link,\r\n                sourceVector = link.router.source(),\r\n                targetVector = link.router.target();\r\n\r\n            if (sourceVector && targetVector) {\r\n                var sourceShape = Graph.registry.shape.get(sourceVector),\r\n                    targetShape = Graph.registry.shape.get(targetVector);\r\n\r\n                if (sourceShape && targetShape) {\r\n                    this.fire('connect', {\r\n                        link: link,\r\n                        source: sourceShape,\r\n                        target: targetShape\r\n                    });\r\n                }\r\n            }\r\n        },\r\n\r\n        onAfterResize: function() {\r\n            this.refresh();\r\n        },\r\n\r\n        onBeforeDestroy: function() {\r\n            this.fire('beforedestroy', {shape: this});\r\n        },\r\n\r\n        onAfterDestroy: function() {\r\n            // remove label\r\n            this.component('label').remove();\r\n\r\n            // remove shape\r\n            this.component('shape').remove();\r\n\r\n            for (var name in this.components) {\r\n                this.components[name] = null;\r\n            }\r\n\r\n            this.fire('afterdestroy', {shape: this});\r\n            Graph.registry.shape.unregister(this);\r\n        },\r\n\r\n        onChildConnect: function(e) {\r\n\r\n        },\r\n\r\n        onChildAfterDrag: function(e) {\r\n            var childComponent;\r\n\r\n            if (e.batch) {\r\n                if (e.master) {\r\n                    childComponent = this.component('child');\r\n                    if (childComponent) {\r\n                        childComponent.dirty(true);\r\n                    }\r\n                }\r\n            } else {\r\n                childComponent = this.component('child');\r\n                if (childComponent) {\r\n                    childComponent.dirty(true);\r\n                }\r\n            }\r\n        },\r\n\r\n        onChildBeforeDestroy: function(e) {\r\n            var shape = e.shape;\r\n\r\n            this.children().pull(shape);\r\n\r\n            shape.off('beforedestroy', shape.cached.beforeDestroyHandler);\r\n            shape.off('afterdrag', shape.cached.afterDragHandler);\r\n            shape.off('connect', shape.cached.connectHandler);\r\n\r\n            shape.cached.beforeDestroyHandler = null;\r\n            shape.cached.afterDragHandler = null;\r\n            shape.cached.connectHandler = null;\r\n\r\n            var childComponent = shape.component('child');\r\n\r\n            if (childComponent) {\r\n                childComponent.dirty(true);\r\n            }\r\n        },\r\n\r\n        onConfigToolClick: function(e) {\r\n\r\n        },\r\n\r\n        onTrashToolClick: function(e) {\r\n            this.paper().diagram().capture();\r\n            this.remove();\r\n        },\r\n\r\n        onLinkToolClick: function(e) {\r\n            var paper = this.paper();\r\n\r\n            if (paper) {\r\n                var layout = paper.layout(),\r\n                    linker = paper.plugins.linker,\r\n                    coord  = layout.pointerLocation(e);\r\n\r\n                paper.tool().activate('linker');\r\n                linker.start(this.connectable().component(), coord);\r\n            }\r\n        },\r\n\r\n        onFrontToolClick: function(e) {\r\n            this.sendToFront();\r\n        },\r\n\r\n        onBackToolClick: function(e) {\r\n            this.sendToBack();\r\n        }\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n    Shape.guid = 0;\r\n\r\n    ///////// EXTENSION /////////\r\n\r\n    Graph.isShape = function(obj) {\r\n        return obj instanceof Graph.shape.Shape;\r\n    };\r\n\r\n    ///////// HELPERS /////////\r\n\r\n    function cascade(shape, handler) {\r\n        var child = shape.children().toArray();\r\n        var result;\r\n\r\n        result = handler.call(shape, shape);\r\n        result = _.defaultTo(result, true);\r\n\r\n        if (result && child.length) {\r\n            _.forEach(child, function(curr){\r\n                cascade(curr, handler);\r\n            });\r\n        }\r\n    }\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var Tree = Graph.collection.Tree = function(nodes) {\r\n        var me = this;\r\n\r\n        me.nodes = nodes;\r\n        \r\n        me.key = function(node){ return node; };\r\n\r\n        me.bisect = _.bisector(function(node){ \r\n            return me.key(node); \r\n        }).left;\r\n    };\r\n\r\n    Tree.prototype.get = function(index) {\r\n        return this.nodes[index];\r\n    };\r\n\r\n    Tree.prototype.size = function() {\r\n        return this.nodes.length;\r\n    };\r\n\r\n    Tree.prototype.insert = function(node) {\r\n        var index = this.index(node),\r\n            value = this.key(node);\r\n\r\n        if (this.nodes[index] && value == this.key(this.nodes[index])) {\r\n            return;\r\n        }\r\n\r\n        this.nodes.splice(index, 0, node);\r\n\r\n        return index;\r\n    };\r\n\r\n    Tree.prototype.remove = function(node) {\r\n        var index = this.index(node);\r\n        this.nodes.splice(index, 1);\r\n        \r\n        return index;\r\n    };\r\n\r\n    Tree.prototype.keygen = function(keygen) {\r\n        this.key = keygen;\r\n        return this;\r\n    };\r\n\r\n    Tree.prototype.index = function(node) {\r\n        return this.bisect(this.nodes, this.key(node));\r\n    };\r\n\r\n    Tree.prototype.order = function() {\r\n        this.nodes.sort(_.ascendingKey(this.key));\r\n        return this;\r\n    };\r\n    \r\n    Tree.prototype.root = function() {\r\n        return this.nodes[0];\r\n    };\r\n    \r\n    Tree.prototype.cascade = function(node, iteratee) {\r\n        var index = this.index(node),\r\n            nodes = this.nodes,\r\n            count = this.nodes.length;\r\n        \r\n        var start = 0;\r\n        \r\n        for (var n = index; n < count; n++) {\r\n            iteratee(nodes[n], start);\r\n            start++;\r\n        }\r\n    };\r\n\r\n    Tree.prototype.bubble = function(node, iteratee) {\r\n        var index = this.index(node),\r\n            nodes = this.nodes;\r\n\r\n        var start = 0;\r\n\r\n        for (var n = index; n >= 0; n--) {\r\n            iteratee(nodes[n], start);\r\n            start++;\r\n        }\r\n    };\r\n\r\n    Tree.prototype.toArray = function() {\r\n        return this.nodes.slice();\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Link = Graph.link.Link = Graph.extend({\r\n\r\n        props: {\r\n            id: null,\r\n            guid: null,\r\n            type: 'normal',\r\n            rendered: false,\r\n            selected: false,\r\n            label: '',\r\n            labelDistance: .5,\r\n            source: null,\r\n            target: null,\r\n            connected: false,\r\n            removed: false,\r\n            command: null,\r\n            stroke: '#000' \r\n        },\r\n\r\n        params: [],\r\n\r\n        components: {\r\n            block: null,\r\n            coat: null,\r\n            path: null,\r\n            label: null,\r\n            editor: null\r\n        },\r\n\r\n        cached: {\r\n            bendpoints: null,\r\n            controls: null,\r\n            convex: null\r\n        },\r\n\r\n        handlers: {\r\n            source: null,\r\n            target: null\r\n        },\r\n\r\n        router: null,\r\n\r\n        metadata: {\r\n            icon: Graph.icons.SHAPE_LINK\r\n        },\r\n\r\n        constructor: function(router, options) {\r\n            var guid;\r\n            this.data(options || {});\r\n\r\n            guid = 'graph-link-' + (++Link.guid);\r\n\r\n            this.props.guid = guid;\r\n            this.router = router;\r\n\r\n            this.initComponent();\r\n            this.initMetadata();\r\n\r\n            this.bindResource('source', router.source());\r\n            this.bindResource('target', router.target());\r\n\r\n            this.router.on('route', _.bind(this.onRouterRoute, this));\r\n            this.router.on('reroute', _.bind(this.onRouterReroute, this));\r\n\r\n            Graph.registry.link.register(this);\r\n        },\r\n\r\n        data: function(name, value) {\r\n            if (name === undefined && value === undefined) {\r\n                return this.props;\r\n            }\r\n\r\n            var excludes = {\r\n                type: true,\r\n                router_type: true,\r\n                client_id: true,\r\n                client_source: true,\r\n                client_target: true,\r\n                diagram_id: true,\r\n                source_id: true,\r\n                target_id: true\r\n            };\r\n\r\n            var maps = {\r\n                label_distance: 'labelDistance'\r\n            };\r\n\r\n            var key, map;\r\n\r\n            if (_.isPlainObject(name)) {\r\n                for (var key in name) {\r\n                    if ( ! excludes[key]) { \r\n                        map = maps[key] || key;\r\n                        if (key == 'params') {\r\n                            this.params = name[key];\r\n                        } else {\r\n                            this.props[map] = name[key];        \r\n                        }\r\n                    }\r\n                }\r\n                return this;\r\n            }\r\n\r\n            if (value === undefined) {\r\n                return this.props[name];\r\n            }\r\n\r\n            if ( ! excludes[name]) {\r\n                map = maps[name] || name;\r\n                if (name == 'params') {\r\n                    this.params = value;\r\n                } else {\r\n                    this.props[map] = value;        \r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components;\r\n            var block, coat, path, editor, label;\r\n\r\n            block = (new Graph.svg.Group())\r\n                .addClass('graph-link')\r\n                .selectable(false);\r\n\r\n            block.elem.data(Graph.string.ID_LINK, this.props.guid);\r\n            block.addClass('link-' + this.props.type);\r\n\r\n            coat = (new Graph.svg.Path())\r\n                .addClass('graph-link-coat')\r\n                .render(block);\r\n\r\n            coat.data('text', this.props.label);\r\n            coat.elem.data(Graph.string.ID_LINK, this.props.guid);\r\n\r\n            coat.draggable({\r\n                ghost: true,\r\n                manual: true,\r\n                batchSync: false\r\n            });\r\n\r\n            coat.editable({\r\n                width: 150,\r\n                height: 80,\r\n                offset: 'pointer'\r\n            });\r\n\r\n            coat.on('pointerdown.link', _.bind(this.onCoatClick, this));\r\n            coat.on('select.link', _.bind(this.onCoatSelect, this));\r\n            coat.on('deselect.link', _.bind(this.onCoatDeselect, this));\r\n            coat.on('beforedrag.link', _.bind(this.onCoatBeforeDrag, this));\r\n            coat.on('afterdrag.link', _.bind(this.onCoatAfterDrag, this));\r\n            coat.on('edit.link', _.bind(this.onCoatEdit, this));\r\n            coat.on('beforeedit.link', _.bind(this.onCoatBeforeEdit, this));\r\n            coat.on('afterdestroy.link', _.bind(this.onCoatAfterDestroy, this));\r\n\r\n            path = (new Graph.svg.Path())\r\n                .addClass('graph-link-path')\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .attr('marker-end', 'url(#marker-link-end)')\r\n                .attr('stroke', this.props.stroke || '#000000')\r\n                .render(block);\r\n\r\n            if (this.props.type == 'message') {\r\n                path.attr('marker-start', 'url(#marker-link-start-circle)');\r\n            }\r\n\r\n            path.elem.data(Graph.string.ID_LINK, this.props.guid);\r\n\r\n            label = (new Graph.svg.Text(0, 0, ''))\r\n                .addClass('graph-link-label')\r\n                .selectable(false)\r\n                .render(block);\r\n\r\n            label.draggable({ghost: true});\r\n\r\n            label.on('render.link', _.bind(this.onLabelRender, this));\r\n            label.on('afterdrag.link', _.bind(this.onLabelAfterDrag, this));\r\n\r\n            // enable label doubletap\r\n            var labelVendor = label.interactable().vendor();\r\n            labelVendor.on('doubletap', _.bind(this.onLabelDoubletap, this));\r\n\r\n            editor = (new Graph.svg.Group())\r\n                .selectable(false)\r\n                .render(block);\r\n\r\n            comp.block = block.guid();\r\n            comp.coat = coat.guid();\r\n            comp.path = path.guid();\r\n            comp.label = label.guid();\r\n            comp.editor = editor.guid();\r\n        },\r\n\r\n        initMetadata: function() {\r\n            this.metadata.tools = [\r\n                {\r\n                    name: 'config',\r\n                    icon: Graph.icons.CONFIG,\r\n                    title: Graph._('Click to config link'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onConfigToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtofront',\r\n                    icon: Graph.icons.SEND_TO_FRONT,\r\n                    title: Graph._('Send to front'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onFrontToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtoback',\r\n                    icon: Graph.icons.SEND_TO_BACK,\r\n                    title: Graph._('Send to back'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBackToolClick, this)\r\n                },\r\n                {\r\n                    name: 'trash',\r\n                    icon: Graph.icons.TRASH,\r\n                    title: Graph._('Click to remove link'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onTrashToolClick, this)\r\n                }\r\n            ];\r\n        },\r\n\r\n        unbindResource: function(type) {\r\n            var existing = this.props[type],\r\n                handlers = this.handlers[type];\r\n\r\n            if (existing) {\r\n                var vector = Graph.registry.vector.get(existing);\r\n                if (vector) {\r\n                    if (handlers) {\r\n                        var name, ns;\r\n                        for (name in handlers) {\r\n                            ns = name + '.link';\r\n                            vector.off(ns, handlers[name]);\r\n                            ns = null;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            handlers = null;\r\n\r\n            return this;\r\n        },\r\n\r\n        bindResource: function(type, resource) {\r\n            var router = this.router,\r\n                handlers = this.handlers[type];\r\n\r\n            this.unbindResource(type, resource);\r\n\r\n            handlers = {};\r\n\r\n            handlers.afterresize = _.bind(getHandler(this, type, 'AfterResize'), this);\r\n            handlers.select = _.bind(getHandler(this, type, 'Select'), this);\r\n            handlers.afterrotate = _.bind(getHandler(this, type, 'AfterRotate'), this);\r\n            handlers.beforedrag = _.bind(getHandler(this, type, 'BeforeDrag'), this, _, resource);\r\n            handlers.drag = _.bind(getHandler(this, type, 'Drag'), this);\r\n            handlers.afterdrag = _.bind(getHandler(this, type, 'AfterDrag'), this);\r\n            handlers.beforedestroy = _.bind(getHandler(this, type, 'BeforeDestroy'), this);\r\n            \r\n            this.handlers[type] = handlers;\r\n            this.props[type] = resource.guid();\r\n\r\n            resource.on('afterresize.link', handlers.afterresize);\r\n            resource.on('afterrotate.link', handlers.afterrotate);\r\n            resource.on('beforedestroy.link', handlers.beforedestroy);\r\n            resource.on('select.link', handlers.select);\r\n\r\n            // VERY EXPENSIVE!!!\r\n            if (resource.isDraggable()) {\r\n                resource.on('beforedrag.link', handlers.beforedrag);\r\n                if ( ! resource.draggable().ghost()) {\r\n                    resource.on('drag.link', handlers.drag);\r\n                } else {\r\n                    resource.on('afterdrag.link', handlers.afterdrag);\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        bindSource: function(source) {\r\n            return this.bindResource('source', source);\r\n        },\r\n\r\n        bindTarget: function(target) {\r\n            return this.bindResource('target', target);\r\n        },\r\n\r\n        unbindSource: function(source) {\r\n            return this.unbindResource('source');\r\n        },\r\n\r\n        unbindTarget: function(target) {\r\n            return this.unbindResource('target');\r\n        },\r\n\r\n        component: function(name) {\r\n            if (name === undefined) {\r\n                return Graph.registry.vector.get(this.components.block);\r\n            }\r\n            return Graph.registry.vector.get(this.components[name]);\r\n        },\r\n\r\n        invalidate: function(cache) {\r\n            if (cache !== undefined) {\r\n                this.cached[cache] = null;\r\n            } else {\r\n                this.cached.bendpoints = null;\r\n            }\r\n        },\r\n\r\n        render: function(container) {\r\n            var paper;\r\n\r\n            this.component().render(container);\r\n            paper = container.paper();\r\n\r\n            if (paper) {\r\n                Graph.registry.link.setContext(this.guid(), paper.guid());\r\n            }\r\n        },\r\n\r\n        id: function() {\r\n            return this.props.id;\r\n        },\r\n\r\n        guid: function() {\r\n            return this.props.guid;\r\n        },\r\n\r\n        type: function(type) {\r\n            if (type === undefined) {\r\n                return this.props.type;\r\n            }\r\n\r\n            this.props.type = type;\r\n\r\n            var component = this.component();\r\n\r\n            if (type == 'message') {\r\n                this.component('path').attr('marker-start', 'url(#marker-link-start-circle)');\r\n            } else {\r\n                this.component('path').attr('marker-start', '');\r\n            }\r\n\r\n            component.removeClass('link-normal link-message');\r\n            component.addClass('link-' + type);\r\n        },\r\n\r\n        connect: function(start, end) {\r\n            // already connected ?\r\n            if (this.props.connected) {\r\n                return;\r\n            }\r\n\r\n            this.router.route(start, end);\r\n            this.props.connected = true;\r\n        },\r\n\r\n        connectByCommand: function(command) {\r\n            if (this.props.connected) {\r\n                return;\r\n            }\r\n\r\n            this.router.execute(command);\r\n            this.props.connected = true;\r\n        },\r\n\r\n        disconnect: function(reload) {\r\n            // already disconnected ?\r\n            if ( ! this.props.connected) {\r\n                return;\r\n            }\r\n\r\n            reload = _.defaultTo(reload, true);\r\n\r\n            this.props.connected = false;\r\n\r\n            if (reload) {\r\n                this.router.reset();\r\n                this.reload(this.router.command());    \r\n            }\r\n        },\r\n\r\n        redraw: function(props) {\r\n\r\n        },\r\n\r\n        reload: function(command, silent) {\r\n            silent = _.defaultTo(silent, false);\r\n\r\n            command = command || '';\r\n\r\n            this.component('coat').attr('d', command).dirty(true);\r\n            this.component('path').attr('d', command);\r\n            this.invalidate();\r\n\r\n            if ( ! silent) {\r\n                this.refresh();\r\n                this.fire('change');\r\n                Graph.topic.publish('link:change');\r\n            }\r\n        },\r\n\r\n        reloadConvex: function(convex) {\r\n            this.cached.convex = convex;\r\n        },\r\n\r\n        removeConvex: function() {\r\n            this.cached.convex = null;\r\n        },\r\n\r\n        reset: function(silent) {\r\n            var command = this.router.command();\r\n            this.reload(command, silent);\r\n        },\r\n\r\n        refresh: function() {\r\n\r\n            // TODO: update label position\r\n            if (this.props.label) {\r\n                var label = this.component('label');\r\n\r\n                if (label.props.rendered) {\r\n                    var path = this.router.path();\r\n\r\n                    if (path.segments.length) {\r\n                        var bound = label.bbox().toJson(),\r\n                            distance = this.props.labelDistance || .5,\r\n                            scale = this.router.layout().scale(),\r\n                            path = this.router.path(),\r\n                            dots = path.pointAt(distance * path.length(), true),\r\n                            align = Graph.util.pointAlign(dots.start, dots.end, 10);\r\n\r\n                        if (align == 'h') {\r\n                            dots.x += (bound.width / 2 + (10 / scale.x));\r\n                        } else {\r\n                            dots.y -= (bound.height - (5 / scale.y));\r\n                        }\r\n\r\n                        label.attr({\r\n                            x: dots.x,\r\n                            y: dots.y\r\n                        });\r\n\r\n                        label.arrange();\r\n\r\n                        path = null;\r\n                        dots = null;\r\n\r\n                        label.dirty(true);\r\n                    } else {\r\n                        label.hide();\r\n                    }\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        label: function(text) {\r\n            var path, distance, point, align;\r\n\r\n            if (text === undefined) {\r\n                return this.props.label;\r\n            }\r\n\r\n            this.props.label = text;\r\n            \r\n            var componentLabel = this.component('label'),\r\n                componentCoat = this.component('coat');\r\n\r\n            componentLabel.write(text);\r\n            componentLabel.arrange();\r\n\r\n            componentCoat.data('text', text);\r\n            \r\n            if (componentLabel.props.rendered) {\r\n                this.refresh();\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        select: function(single) {\r\n            var paper = this.router.source().paper();\r\n            single = _.defaultTo(single, false);\r\n            if (single && paper) {\r\n                paper.collector().clearCollection();\r\n            }\r\n\r\n            this.component('coat').select();\r\n        },\r\n\r\n        deselect: function() {\r\n            this.component('coat').deselect();\r\n        },\r\n\r\n        renderControl: function() {\r\n            // TODO: render bends control\r\n        },\r\n\r\n        resumeControl: function() {\r\n            var me = this, editor = me.component('editor');\r\n\r\n            if ( ! me.cached.bendpoints) {\r\n                me.cached.bendpoints = me.router.bendpoints();\r\n                me.renderControl();\r\n            }\r\n\r\n            editor.elem.appendTo(this.component('block').elem);\r\n        },\r\n\r\n        suspendControl: function() {\r\n            this.component('editor').elem.detach();\r\n        },\r\n\r\n        sendToFront: function() {\r\n            var container = this.component().parent();\r\n            this.component().elem.appendTo(container.elem);\r\n        },\r\n\r\n        relocate: function(dx, dy) {\r\n            this.router.relocate(dx, dy);\r\n            this.reload(this.router.command());\r\n        },\r\n\r\n        relocateHead: function(dx, dy) {\r\n            var port = this.router.head();\r\n            if (port) {\r\n                port.x += dx;\r\n                port.y += dy;\r\n                this.router.repair(this.router.target(), port);\r\n            }\r\n        },\r\n\r\n        relocateTail: function(dx, dy) {\r\n            var port = this.router.tail();\r\n            if (port) {\r\n                port.x += dx;\r\n                port.y += dy;\r\n                this.router.repair(this.router.source(), port);\r\n            }\r\n        },\r\n\r\n        remove: function() {\r\n            var me = this;\r\n            var prop;\r\n\r\n            if (this.props.removed) {\r\n                return;\r\n            }\r\n\r\n            // flag\r\n            this.props.removed = true;\r\n\r\n            // disconnect first\r\n            this.disconnect(false);\r\n            \r\n            // unbind resource\r\n            this.unbindSource();\r\n            this.unbindTarget();\r\n\r\n            this.fire('beforedestroy', {link: this});\r\n\r\n            // remove label\r\n            me.component('label').remove();\r\n\r\n            // remove vertexs\r\n            if (me.cached.controls) {\r\n                _.forEach(me.cached.controls, function(id){\r\n                    var c = Graph.registry.vector.get(id);\r\n                    c && c.remove();\r\n                });\r\n                me.cached.controls = null;\r\n            }\r\n\r\n            // remove editor\r\n            me.component('editor').remove();\r\n\r\n            // remove path\r\n            me.component('path').remove();\r\n\r\n            // remove block\r\n            me.component('block').remove();\r\n\r\n            for (prop in me.components) {\r\n                me.components[prop] = null;\r\n            }\r\n\r\n            // clear cache\r\n            for (prop in me.cached) {\r\n                me.cached[prop] = null;\r\n            }\r\n\r\n            me.router.destroy();\r\n            me.router = null;\r\n\r\n            me.fire('afterdestroy');\r\n\r\n            // unregister\r\n            Graph.registry.link.unregister(me);\r\n\r\n            // publish\r\n            Graph.topic.publish('link:afterdestroy');\r\n        },\r\n        isSelected: function() {\r\n            return this.props.selected;\r\n        },\r\n        isConnected: function() {\r\n            return this.props.connected;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.link.Link';\r\n        },\r\n\r\n        toJson: function() {\r\n            var source = this.router.source(),\r\n                target = this.router.target();\r\n\r\n            var sourceShape = Graph.registry.shape.get(source),\r\n                targetShape = Graph.registry.shape.get(target);\r\n\r\n            var link = {\r\n                metadata: {\r\n\r\n                },\r\n                props: {\r\n                    id: this.props.id,\r\n                    guid: this.guid(),\r\n                    type: this.toString(),\r\n                    routerType: this.router.type(),\r\n                    command: this.router.command(),\r\n                    label: this.props.label,\r\n                    labelDistance: this.props.labelDistance,\r\n                    source: sourceShape ? sourceShape.guid() : source.guid(),\r\n                    sourceType: sourceShape ? 'shape' : 'vector',\r\n                    target: targetShape ? targetShape.guid() : target.guid(),\r\n                    targetType: targetShape ? 'shape' : 'vector',\r\n                    convex: 1,\r\n                    smooth: this.props.smooth ? 1 : 0,\r\n                    smoothness: this.props.smoothness,\r\n                    stroke: this.props.stroke\r\n                },\r\n\r\n                params: this.params\r\n            };\r\n\r\n            return link;\r\n        },\r\n\r\n        ///////// OBSERVERS /////////\r\n\r\n        onRouterRoute: function(e) {\r\n            var command = e.command;\r\n            this.reload(command);\r\n        },\r\n\r\n        onRouterReroute: function(e) {\r\n            var source = e.source,\r\n                target = e.target;\r\n\r\n            this.bindResource('source', source);\r\n            this.bindResource('target', target);\r\n\r\n            this.sendToFront();\r\n        },\r\n\r\n        onLabelRender: function(e) {\r\n            if (this.props.label) {\r\n                this.label(this.props.label);\r\n            }\r\n        },\r\n\r\n        onLabelAfterDrag: function(e) {\r\n            var label = this.component('label'),\r\n                matrix = label.matrix(),\r\n                x = label.attrs.x,\r\n                y = label.attrs.y,\r\n                p = {\r\n                    x: matrix.x(x, y),\r\n                    y: matrix.y(x, y)\r\n                }\r\n\r\n            label.attr({\r\n                x: p.x,\r\n                y: p.y\r\n            });\r\n\r\n            label.arrange();\r\n\r\n            // update label distance\r\n            var path = this.router.path(),\r\n                near = path.nearest(p);\r\n\r\n            this.props.labelDistance = near.distance / path.length();\r\n\r\n            label.reset();\r\n            matrix = path = null;\r\n        },\r\n\r\n        onLabelDoubletap: function(e) {\r\n            var coat = this.component('coat');\r\n            coat.editable().startEdit(e);\r\n        },\r\n\r\n        onCoatBeforeEdit: function(e) {\r\n            this.component('label').hide();\r\n            this.component().addClass('editing');\r\n        },\r\n\r\n        onCoatEdit: function(e) {\r\n            this.component().removeClass('editing');\r\n            this.component('label').show();\r\n            this.label(e.text, e.left, e.top);\r\n        },\r\n\r\n        onCoatClick: function(e) {\r\n            var paper = this.component('coat').paper();\r\n            if (paper.state() == 'linking') {\r\n                paper.tool().activate('panzoom');\r\n            }\r\n        },\r\n\r\n        onCoatSelect: function(e) {\r\n            var coat = this.component('coat'),\r\n                showControl = false;\r\n\r\n            if (e.initial) {\r\n                showControl = true;\r\n            }\r\n\r\n            this.props.selected = true;\r\n            this.component().addClass('selected');\r\n\r\n            if (showControl) {\r\n                this.resumeControl();\r\n                Graph.topic.publish('link:select', {link: this});\r\n            }\r\n        },\r\n\r\n        onCoatDeselect: function(e) {\r\n            if (this.props.removed) return;\r\n\r\n            this.props.selected = false;\r\n            this.component().removeClass('selected');\r\n            this.suspendControl();\r\n\r\n            if (e.initial) {\r\n                Graph.topic.publish('link:deselect', {link: this});    \r\n            }\r\n        },\r\n\r\n        onCoatBeforeDrag: function(e) {\r\n            this.suspendControl();\r\n        },\r\n\r\n        onCoatAfterDrag: function(e) {\r\n            this.relocate(e.dx, e.dy);\r\n        },\r\n\r\n        onCoatAfterDestroy: function(e) {\r\n            this.remove();\r\n        },\r\n\r\n        ///////// OBSERVERS /////////\r\n\r\n        onSourceAfterRotate: function(e) {\r\n            var matrix = this.router.source().matrix(),\r\n                oport = this.router.tail(),\r\n                nport = {\r\n                    x: matrix.x(oport.x, oport.y),\r\n                    y: matrix.y(oport.x, oport.y)\r\n                },\r\n                dx = nport.x - oport.x,\r\n                dy = nport.y - oport.y;\r\n\r\n            this.relocateTail(dx, dy);\r\n        },\r\n\r\n        onSourceSelect: function(e) {\r\n            var target = this.router.target();\r\n            if (this.isSelected()) {\r\n                if ( ! target.isSelected()) {\r\n                    this.deselect();\r\n                }\r\n            } else {\r\n                if (target.isSelected()) {\r\n                    this.select();\r\n                }\r\n            }\r\n        },\r\n\r\n        onSourceBeforeDrag: function(e, source) {\r\n            var target = this.router.target();\r\n            if ( ! source.isSelected() || ! target.isSelected()) {\r\n                this.deselect();\r\n            }\r\n            this.cached.convex = null;\r\n        },\r\n\r\n        onSourceDrag: function(e) {\r\n            console.warn('Not yet implemented');\r\n        },\r\n\r\n        onSourceAfterDrag: function(e) {\r\n            var source = this.router.source(),\r\n                target = this.router.target(),\r\n                dx = e.tx,\r\n                dy = e.ty;\r\n\r\n            if (source.isSelected()) {\r\n                if ( ! target.isSelected()) {\r\n                    this.relocateTail(dx, dy);\r\n                }\r\n            } else {\r\n                this.relocateTail(dx, dy);\r\n            }\r\n        },\r\n\r\n        onSourceAfterResize: function(e) {\r\n            this.relocateTail(e.translate.dx, e.translate.dy);\r\n        },\r\n\r\n        onSourceBeforeDestroy: function() {\r\n            if ( ! this.props.removed) {\r\n                this.component('coat').remove();    \r\n            }\r\n        },\r\n\r\n        onTargetAfterRotate: function(e) {\r\n            var matrix = this.router.target().matrix(),\r\n                oport = this.router.head(),\r\n                nport = {\r\n                    x: matrix.x(oport.x, oport.y),\r\n                    y: matrix.y(oport.x, oport.y)\r\n                },\r\n                dx = nport.x - oport.x,\r\n                dy = nport.y - oport.y;\r\n\r\n            this.relocateHead(dx, dy);\r\n        },\r\n\r\n        onTargetSelect: function(e) {\r\n            var source = this.router.source();\r\n            if (this.isSelected()) {\r\n                if ( ! source.isSelected()) {\r\n                    this.deselect();\r\n                }\r\n            } else {\r\n                if (source.isSelected()) {\r\n                    this.select();\r\n                }\r\n            }\r\n        },\r\n\r\n        onTargetBeforeDrag: function(e, target) {\r\n            var source = this.router.source();\r\n            if ( ! source.isSelected() || ! target.isSelected()) {\r\n                this.deselect();\r\n            }\r\n            this.cached.convex = null;\r\n        },\r\n\r\n        onTargetDrag: function(e) {\r\n            console.warn('Not yet implemented');\r\n        },\r\n\r\n        onTargetAfterDrag: function(e) {\r\n            var target = this.router.target(),\r\n                source = this.router.source(),\r\n                dx = e.tx,\r\n                dy = e.ty;\r\n\r\n            if (target.isSelected()) {\r\n                if ( ! source.isSelected()) {\r\n                    this.relocateHead(dx, dy);\r\n                }\r\n            } else {\r\n                this.relocateHead(dx, dy);\r\n            }\r\n        },\r\n\r\n        onTargetAfterResize: function(e) {\r\n            this.relocateHead(e.translate.dx, e.translate.dy);\r\n        },\r\n\r\n        onTargetBeforeDestroy: function() {\r\n            if ( ! this.props.removed) {\r\n                this.component('coat').remove();    \r\n            }\r\n        },  \r\n\r\n        onTrashToolClick: function(e) {\r\n            this.component('coat').remove();\r\n        },\r\n\r\n        onConfigToolClick: function(e) {\r\n\r\n        },\r\n\r\n        onFrontToolClick: function(e) {\r\n            this.sendToFront();\r\n        },\r\n\r\n        onBackToolClick: function(e) {\r\n\r\n        },\r\n\r\n        destroy: function() {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n    Link.guid = 0;\r\n\r\n    ///////// HELPERS /////////\r\n\r\n    function getHandler(scope, resource, handler) {\r\n        var name = 'on' + _.capitalize(resource) + handler,\r\n            func = scope[name];\r\n\r\n        name = null;\r\n        return func;\r\n    }\r\n\r\n}());\r\n","\r\n(function(_, $){\r\n    \r\n    var REGEX_SVG_BUILDER = /^<(svg|g|rect|text|path|line|tspan|circle|polygon|defs|marker)/i;\r\n\r\n    var domParser;\r\n\r\n    ///////// BUILDER /////////\r\n    \r\n    Graph.dom = function(selector, context, query) {\r\n        var fragment, element;\r\n\r\n        if (domParser === undefined) {\r\n            try {\r\n                domParser = new DOMParser();\r\n            } catch(e){\r\n                domParser = null;\r\n            }\r\n        }\r\n\r\n        query = _.defaultTo(query, false);\r\n\r\n        if (context !== undefined) {\r\n            if (Graph.isElement(context)) {\r\n                context = context.node();\r\n            }\r\n        }\r\n\r\n\r\n        if (_.isString(selector)) {\r\n            if (REGEX_SVG_BUILDER.test(selector)) {\r\n                if (domParser) {\r\n                    fragment = '<g xmlns=\"'+ Graph.config.xmlns.svg +'\">' + selector + '</g>';\r\n                    element  = domParser.parseFromString(fragment, 'text/xml').documentElement.childNodes[0];\r\n                    fragment = null;\r\n                    element  = query ? $(element) : element;\r\n                }\r\n            } else {\r\n                element = query ? $(selector, context) : $(selector, context)[0];\r\n            }\r\n        } else {\r\n            if (Graph.isHTML(selector) || Graph.isSVG(selector)) {\r\n                element = query ? $(selector) : selector;\r\n            } else if (Graph.isElement(selector)) {\r\n                element = query ? selector.query : selector.query[0];\r\n            } else {\r\n                // document, window, ...etc\r\n                element = query ? $(selector, context) : selector;\r\n            }\r\n        }\r\n\r\n        context = null;\r\n        return element;\r\n    };  \r\n\r\n    Graph.dom.clone = function(node, deep) {\r\n        return node.cloneNode(deep);\r\n    };\r\n\r\n    ///////// ELEMENT /////////\r\n\r\n    var E = Graph.dom.Element = function(node) {\r\n        this.query = $(node);\r\n    };\r\n\r\n    E.prototype.is = function(pseudo) {\r\n        return this.query.is(pseudo);\r\n    };  \r\n\r\n    E.prototype.node = function() {\r\n        return this.query[0];\r\n    };\r\n\r\n    E.prototype.length = function() {\r\n        return this.query.length;\r\n    };\r\n\r\n    E.prototype.group = function(name) {\r\n        if (name === undefined) {\r\n            return this.query.data('component-group');\r\n        }\r\n        this.query.data('component-group', name);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.belong = function(group) {\r\n        return this.group() == group;\r\n    };\r\n\r\n    E.prototype.attr = function(name, value) {\r\n        if (value === undefined) {\r\n            return this.query.attr(name);\r\n        }\r\n        \r\n        var me = this, node = this.query[0];\r\n\r\n        if (Graph.isHTML(node)) {\r\n            this.query.attr(name, value);\r\n        } else if (Graph.isSVG(node)) {\r\n\r\n            if (_.isPlainObject(name)) {\r\n                _.forOwn(name, function(v, k){\r\n                    me.attr(k, v);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (name.substring(0, 6) == 'xlink:') {\r\n                node.setAttributeNS(Graph.config.xmlns.xlink, name.substring(6), _.toString(value));\r\n            } else {\r\n                node.setAttribute(name, _.toString(value));\r\n            }\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    E.prototype.width = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.width();\r\n        }\r\n        this.query.width(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.outerHeight = function(margin) {\r\n        return this.query.outerHeight(margin);\r\n    };\r\n\r\n    E.prototype.height = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.height();\r\n        }\r\n        this.query.height(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.show = function() {\r\n        this.query.show();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.hide = function() {\r\n        this.query.hide();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.offset = function() {\r\n        var node = this.query[0];\r\n        if (Graph.isSVG(node)) {\r\n            var offset = node.getBoundingClientRect();\r\n            return {\r\n                left: offset.left,\r\n                top: offset.top,\r\n                width: offset.width,\r\n                height: offset.height\r\n            };\r\n        } else {\r\n           return this.query.offset(); \r\n        }\r\n    };\r\n\r\n    E.prototype.position = function() {\r\n        return this.query.position();\r\n    };\r\n\r\n    E.prototype.css = function(name, value) {\r\n        if (value === undefined) {\r\n            return this.query.css(name);\r\n        }\r\n        this.query.css(name, value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.addClass = function(classes) {\r\n        var node = this.query[0];\r\n        if (Graph.isHTML(node)) {\r\n            this.query.addClass(classes);\r\n        } else if (Graph.isSVG(node)) {\r\n            var values = _.chain([])\r\n                .concat(_.split(node.className.baseVal || '', ' '))\r\n                .concat(_.split(classes, ' '))\r\n                .uniq()\r\n                .join(' ')\r\n                .trim()\r\n                .value();\r\n            node.className.baseVal = values;\r\n        }\r\n        return this;\r\n    };\r\n\r\n    E.prototype.removeClass = function(classes) {\r\n        var node = this.query[0];\r\n        if (Graph.isHTML(node)) {\r\n            this.query.removeClass(classes);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    E.prototype.hasClass = function(clazz) {\r\n        var node = this.query[0];\r\n\r\n        if (Graph.isHTML(node)) {\r\n            return this.query.hasClass(clazz); \r\n        } else if (Graph.isSVG(node)) {\r\n            var classes = _.split(node.className.baseVal, ' ');\r\n            return classes.indexOf(clazz) > -1;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    E.prototype.find = function(selector) {\r\n        return new Graph.dom.Element(this.query.find(selector));\r\n    };\r\n\r\n    E.prototype.parent = function() {\r\n        return new Graph.dom.Element(this.query.parent());\r\n    };\r\n\r\n    E.prototype.closest = function(element) {\r\n        return new Graph.dom.Element(this.query.closest(element));\r\n    };\r\n\r\n    E.prototype.append = function(element) {\r\n        if (element.query === undefined) {\r\n            this.query.append(element);\r\n        } else {\r\n            this.query.append(element.query);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    E.prototype.prepend = function(element) {\r\n        this.query.prepend(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.appendTo = function(element) {\r\n        this.query.appendTo(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.prependTo = function(element) {\r\n        this.query.prependTo(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.before = function(element) {\r\n        this.query.before(element.query);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.after = function(element) {\r\n        this.query.after(element.query);\r\n        return this;\r\n    };\r\n    \r\n    E.prototype.last = function() {\r\n        return new Graph.dom.Element(this.query.last());\r\n    };\r\n\r\n    E.prototype.remove = function() {\r\n        this.query.remove();\r\n        this.query = null;\r\n        return this;\r\n    };\r\n\r\n    E.prototype.detach = function() {\r\n        this.query = this.query.detach();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.on = function(types, selector, data, fn, /*INTERNAL*/ one) {\r\n        this.query.on.call(this.query, types, selector, data, fn, one);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.off = function(types, selector, fn) {\r\n        this.query.off.call(this.query, types, selector, fn);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.trigger = function(type, data) {\r\n        this.query.trigger(type, data);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.val = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.val();\r\n        }\r\n        this.query.val(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.text = function(text) {\r\n        if (text === undefined) {\r\n            return this.query.text();\r\n        }\r\n        this.query.text(text);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.html = function(html) {\r\n        if (html === undefined) {\r\n            return this.query.html();\r\n        }\r\n        this.query.html(html);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.focus = function(select, delay) {\r\n        var query = this.query, timer;\r\n\r\n        delay = _.defaultTo(delay, 0);\r\n\r\n        if (this.query.attr('contenteditable') !== undefined) {\r\n            timer = _.delay(function(){\r\n                clearTimeout(timer);\r\n                timer = null;\r\n\r\n                query[0].focus();\r\n\r\n                if (document.createRange && window.getSelection) {\r\n                    var range = document.createRange();\r\n                    range.selectNodeContents(query[0]);\r\n                    var selection = window.getSelection();\r\n                    selection.removeAllRanges();\r\n                    selection.addRange(range);\r\n                }\r\n\r\n            }, delay);\r\n            \r\n        } else {\r\n            timer = _.delay(function(){\r\n                clearTimeout(timer);\r\n                timer = null;\r\n\r\n                query.focus();\r\n\r\n                if (select) {\r\n                    query.select();\r\n                }\r\n            }, delay);\r\n        }\r\n        \r\n        return this;\r\n    };\r\n\r\n    E.prototype.contextmenu = function(state) {\r\n        state = _.defaultTo(state, true);\r\n        if ( ! state) {\r\n            this.query.on('contextmenu', function(e){\r\n                return false;\r\n            });\r\n        }\r\n    };\r\n\r\n    E.prototype.each = function(iteratee) {\r\n        this.query.each(iteratee);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.empty = function() {\r\n        this.query.empty();\r\n        return this;\r\n    };\r\n\r\n    E.prototype.data = function(key, value) {\r\n        if (value === undefined) {\r\n            return this.query.data(key);\r\n        }\r\n        this.query.data(key, value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.prop = function(name, value) {\r\n        if (value === undefined) {\r\n            return this.query.data(name);\r\n        }\r\n        this.query.prop(name, value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.scrollTop = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.scrollTop();\r\n        }\r\n        this.query.scrollTop(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.scrollLeft = function(value) {\r\n        if (value === undefined) {\r\n            return this.query.scrollLeft();\r\n        }\r\n        this.query.scrollLeft(value);\r\n        return this;\r\n    };\r\n\r\n    E.prototype.toString = function() {\r\n        return 'Graph.dom.Element';\r\n    };\r\n\r\n    /// STATICS ///\r\n    \r\n    E.guid = 0;\r\n    \r\n    /// HELPERS ///\r\n\r\n    Graph.$ = function(selector, context) {\r\n        var query = Graph.dom(selector, context, true);\r\n        return new Graph.dom.Element(query);\r\n    };\r\n\r\n}(_, jQuery));","\r\n(function(){\r\n\r\n    Graph.svg.Ellipse = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(cx, cy, rx, ry) {\r\n            \r\n            // this.$super('ellipse', {\r\n            //     cx: cx,\r\n            //     cy: cy,\r\n            //     rx: rx,\r\n            //     ry: ry\r\n            // });\r\n\r\n            this.superclass.prototype.constructor.call(this, 'ellipse', {\r\n                cx: cx,\r\n                cy: cy,\r\n                rx: rx,\r\n                ry: ry\r\n            });\r\n        },\r\n\r\n        shape: function() {\r\n            var a = this.attrs;\r\n\r\n            return Graph.path([\r\n                ['M', a.cx, a.cy],\r\n                ['m', 0, -a.ry],\r\n                ['a', a.rx, a.ry, 0, 1, 1, 0,  2 * a.ry],\r\n                ['a', a.rx, a.ry, 0, 1, 1, 0, -2 * a.ry],\r\n                ['z']\r\n            ]);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.graph.matrix.clone().scale(sx, sy, cx, cy),\r\n                rotate = this.props.rotate;\r\n\r\n            var mx = matrix.x(this.attrs.cx, this.attrs.cy),\r\n                my = matrix.y(this.attrs.cx, this.attrs.cy),\r\n                rx = this.attrs.rx * sx,\r\n                ry = this.attrs.ry * sy;\r\n\r\n            var gx, gy;\r\n\r\n            this.reset();\r\n\r\n            this.attr({\r\n                cx: mx,\r\n                cy: my,\r\n                rx: rx,\r\n                ry: ry\r\n            });\r\n\r\n            if (rotate) {\r\n                this.rotate(rotate, mx, my).commit();    \r\n            }\r\n\r\n            var bb = this.bbox().toJson();\r\n\r\n            gx = mx - rx - dx;\r\n            gy = my - ry - dy;\r\n\r\n            gx = bb.x;\r\n            gy = bb.y;\r\n\r\n            return  {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: mx,\r\n                    cy: my\r\n                },\r\n                magnify: {\r\n                    cx: gx,\r\n                    cy: gy\r\n                }\r\n            };\r\n        },\r\n        toString: function() {\r\n            return 'Graph.svg.Ellipse';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Circle = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(cx, cy, r) {\r\n            var me = this;\r\n            \r\n            if (Graph.isPoint(cx)) {\r\n                r  = cy;\r\n                cy = cx.props.y;\r\n                cx = cx.props.x;\r\n            }\r\n\r\n            // me.$super('circle', {\r\n            //     cx: cx,\r\n            //     cy: cy,\r\n            //     r: r\r\n            // });\r\n\r\n            me.superclass.prototype.constructor.call(me, 'circle', {\r\n                cx: cx,\r\n                cy: cy,\r\n                r: r\r\n            });\r\n            \r\n        },\r\n\r\n        shape: function() {\r\n            var a = this.attrs;\r\n            \r\n            return Graph.path([\r\n                ['M', a.cx, a.cy],\r\n                ['m', 0, -a.r],\r\n                ['a', a.r, a.r, 0, 1, 1, 0,  2 * a.r],\r\n                ['a', a.r, a.r, 0, 1, 1, 0, -2 * a.r],\r\n                ['z']\r\n            ]);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.graph.matrix.clone(),\r\n                rotate = this.props.rotate,\r\n                ax = this.attrs.cx,\r\n                ay = this.attrs.cy,\r\n                ar = this.attrs.r;\r\n\r\n            var x, y, r;\r\n            \r\n            if (sy === 1) {\r\n                r  = ar * sx;\r\n                sy = sx;\r\n            } else if (sx === 1) {\r\n                r  = ar * sy;\r\n                sx = sy;\r\n            } else if (sx < sy) {\r\n                r = ar * sy;\r\n                sx = sy;\r\n            } else if (sx > sy) {\r\n                r  = ar * sx;\r\n                sy = sx;\r\n            }\r\n\r\n            matrix.scale(sx, sy, cx, cy);\r\n\r\n            x = matrix.x(ax, ay);\r\n            y = matrix.y(ax, ay);\r\n\r\n            this.reset();\r\n\r\n            this.attr({\r\n                cx: x,\r\n                cy: y,\r\n                 r: r\r\n            });\r\n            \r\n            if (rotate) {\r\n                this.rotate(rotate, x, y).commit();    \r\n            }\r\n\r\n            return {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: x,\r\n                    cy: y\r\n                }\r\n            };\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Circle';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Rect = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(x, y, width, height, r) {\r\n            var me = this;\r\n            r = _.defaultTo(r, 6);\r\n\r\n            // me.$super('rect', {\r\n            //     x: _.defaultTo(x, 0),\r\n            //     y: _.defaultTo(y, 0),\r\n            //     rx: r,\r\n            //     ry: r,\r\n            //     width: _.defaultTo(width, 0),\r\n            //     height: _.defaultTo(height, 0)\r\n            // });\r\n\r\n            me.superclass.prototype.constructor.call(me, 'rect', {\r\n                x: _.defaultTo(x, 0),\r\n                y: _.defaultTo(y, 0),\r\n                rx: r,\r\n                ry: r,\r\n                width: _.defaultTo(width, 0),\r\n                height: _.defaultTo(height, 0)\r\n            });\r\n            \r\n            me.origpath = me.shape();\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            var result = this.superclass.prototype.attr.apply(this, [name, value]);\r\n\r\n            if (name == 'rx' && value !== undefined) {\r\n                this.attrs.r = this.attrs.rx;    \r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        shape: function() {\r\n            var a = this.attrs, p;\r\n\r\n            if (a.r) {\r\n                p = Graph.path([\r\n                    ['M', a.x + a.r, a.y], \r\n                    ['l', a.width - a.r * 2, 0], \r\n                    ['a', a.r, a.r, 0, 0, 1, a.r, a.r], \r\n                    ['l', 0, a.height - a.r * 2], \r\n                    ['a', a.r, a.r, 0, 0, 1, -a.r, a.r], \r\n                    ['l', a.r * 2 - a.width, 0], \r\n                    ['a', a.r, a.r, 0, 0, 1, -a.r, -a.r], \r\n                    ['l', 0, a.r * 2 - a.height], \r\n                    ['a', a.r, a.r, 0, 0, 1, a.r, -a.r], \r\n                    ['z']\r\n                ]);\r\n            } else {\r\n                p = Graph.path([\r\n                    ['M', a.x, a.y], \r\n                    ['l', a.width, 0], \r\n                    ['l', 0, a.height], \r\n                    ['l', -a.width, 0], \r\n                    ['z']\r\n                ]);\r\n            }\r\n\r\n            return p;\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.matrix().clone(),\r\n                rotate = matrix.rotate().deg;\r\n\r\n            var x, y, w, h;\r\n\r\n            matrix.scale(sx, sy, cx, cy);\r\n\r\n            this.reset();\r\n\r\n            x = matrix.x(this.attrs.x, this.attrs.y);\r\n            y = matrix.y(this.attrs.x, this.attrs.y);\r\n            w = this.attrs.width  * sx;\r\n            h = this.attrs.height * sy;\r\n\r\n            this.attr({\r\n                x: x,\r\n                y: y,\r\n                width: w,\r\n                height: h\r\n            });\r\n\r\n            if (rotate) {\r\n                this.rotate(rotate, x, y).commit();    \r\n            }\r\n            \r\n            return {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: x,\r\n                    cy: y\r\n                }\r\n            };\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Rect';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","(function(){\r\n\r\n    Graph.svg.Polyline = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(points) {\r\n            points = _.defaultTo(points, '');\r\n\r\n            if (_.isArray(points)) {\r\n                if (points.length) {\r\n                    if (_.isPlainObject(points[0])) { \r\n                        points = _.map(points, function(p){ return p.x + ',' + p.y; });\r\n                    }\r\n                    points = _.join(points, ',');\r\n                } else {\r\n                    points = '';\r\n                }\r\n            }\r\n            \r\n            this.superclass.prototype.constructor.call(this, 'polyline', {\r\n                points: points\r\n            });\r\n        },\r\n\r\n        shape: function() {\r\n            var command = Graph.util.polygon2path(this.attrs.points);\r\n            command = command.replace(/Z/i, '');\r\n            return Graph.path(command);\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            if (name == 'points' && _.isArray(value)) {\r\n                value = _.join(_.map(value, function(p){\r\n                    return p[0] + ',' + p[1];\r\n                }), ' ');\r\n            }\r\n            \r\n            return this.superclass.prototype.attr.call(this, name, value); // this.$super(name, value);\r\n        },\r\n        toString: function() {\r\n            return 'Graph.svg.Polyline';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Polygon = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        constructor: function(points) {\r\n            points = _.defaultTo(points, '');\r\n            \r\n            if (_.isArray(points)) {\r\n                if (points.length) {\r\n                    if (_.isPlainObject(points[0])) { \r\n                        points = _.map(points, function(p){ return p.x + ',' + p.y; });\r\n                    }\r\n                    points = _.join(points, ',');\r\n                } else {\r\n                    points = '';\r\n                }\r\n            }\r\n\r\n            this.superclass.prototype.constructor.call(this, 'polygon', {\r\n                points: points\r\n            });\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            if (name == 'points' && _.isArray(value)) {\r\n                value = _.join(value, ',');\r\n            }\r\n            \r\n            return this.superclass.prototype.attr.call(this, name, value); // this.$super(name, value);\r\n        },\r\n\r\n        shape: function() {\r\n            var command = Graph.util.polygon2path(this.attrs.points);\r\n            return Graph.path(command);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var matrix = this.graph.matrix.clone(),\r\n                origin = this.graph.matrix.clone(),\r\n                rotate = this.props.rotate,\r\n                ps = this.shape().segments,\r\n                dt = [],\r\n                rx = ps[0][1],\r\n                ry = ps[0][2];\r\n\r\n            if (rotate) {\r\n                origin.rotate(-rotate, ps[0][1], ps[0][2]); \r\n                rx = origin.x(ps[0][1], ps[0][2]);\r\n                ry = origin.y(ps[0][1], ps[0][2]);\r\n            }\r\n\r\n            origin.scale(sx, sy, cx, cy);\r\n            matrix.scale(sx, sy, cx, cy);\r\n\r\n            _.forEach(ps, function(seg){\r\n                var ox, oy, x, y;\r\n                if (seg[0] != 'Z') {\r\n                    ox = seg[seg.length - 2];\r\n                    oy = seg[seg.length - 1];\r\n                    x = origin.x(ox, oy);\r\n                    y = origin.y(ox, oy);\r\n                    dt.push(x + ',' + y);\r\n                }\r\n            });\r\n\r\n            dt = _.join(dt, ' ');\r\n\r\n            this.reset();\r\n            this.attr('points', dt);\r\n\r\n            if (rotate) {\r\n                this.rotate(rotate, rx, ry).commit();\r\n            }\r\n            \r\n            return {\r\n                matrix: matrix,\r\n                translate: {\r\n                    dx: dx,\r\n                    dy: dy\r\n                },\r\n                scale: {\r\n                    sx: sx,\r\n                    sy: sy,\r\n                    cx: cx,\r\n                    cy: cy\r\n                },\r\n                rotate: {\r\n                    deg: rotate,\r\n                    cx: rx,\r\n                    cy: ry\r\n                }\r\n            };\r\n        },\r\n        toString: function() {\r\n            return 'Graph.svg.Polygon';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Group = Graph.extend(Graph.svg.Vector, {\r\n\r\n        attrs: {\r\n            'stroke': null,\r\n            'stroke-width': null,\r\n            'class': null,\r\n            'fill': null,\r\n            'style': null\r\n        },\r\n        \r\n        constructor: function(x, y) {\r\n            // this.$super('g');\r\n            this.superclass.prototype.constructor.call(this, 'g');\r\n\r\n            if (x !== undefined && y !== undefined) {\r\n                this.graph.matrix.translate(x, y);\r\n                this.attr('transform', this.graph.matrix.toValue());\r\n            }\r\n        },\r\n\r\n        shape: function() {\r\n            var size = this.dimension();\r\n            \r\n            return new Graph.lang.Path([\r\n                ['M', size.x, size.y], \r\n                ['l', size.width, 0], \r\n                ['l', 0, size.height], \r\n                ['l', -size.width, 0], \r\n                ['z']\r\n            ]);\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Group';\r\n        }\r\n        \r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Text = Graph.extend(Graph.svg.Vector, {\r\n        \r\n        attrs: {\r\n            'text-anchor': 'middle'\r\n        },  \r\n\r\n        props: {\r\n            id: '',\r\n            guid: '',\r\n            text: '',\r\n            type: 'text',\r\n            rotate: 0,\r\n            lineHeight: 1.1,\r\n            fontSize: 12,\r\n            traversable: true,\r\n            focusable: false,\r\n            selectable: true,\r\n            selected: false,\r\n            rendered: false\r\n        },\r\n\r\n        rows: [],\r\n\r\n        constructor: function(x, y, text) {\r\n            // this.$super('text', {\r\n            //     x: _.defaultTo(x, 0),\r\n            //     y: _.defaultTo(y, 0)\r\n            // });\r\n\r\n            this.superclass.prototype.constructor.call(this, 'text', {\r\n                x: _.defaultTo(x, 0),\r\n                y: _.defaultTo(y, 0)\r\n            });\r\n\r\n            this.attr({\r\n                'font-size': Graph.config.font.size\r\n            });\r\n\r\n            if (text) {\r\n                this.write(text);\r\n            }\r\n            \r\n            this.on('render', _.bind(this.onTextRender, this));\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            var result = this.superclass.prototype.attr.apply(this, [name, value]);\r\n            \r\n            if (name == 'font-size' && value !== undefined) {\r\n                this.props.fontSize = _.parseInt(value) || 12;\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        write: function(text) {\r\n            var me = this, parts, span;\r\n\r\n            if (text === undefined) {\r\n                return me.props.text;\r\n            }\r\n\r\n            parts = (text || '').split(\"\\n\");\r\n\r\n            me.empty();\r\n            me.rows = [];\r\n            \r\n            _.forEach(parts, function(t, i){\r\n                me.addSpan(t);\r\n            });\r\n\r\n            me.props.text = text;\r\n            me.cached.bbox = null;\r\n        },\r\n\r\n        addSpan: function(text) {\r\n            var me = this, span;\r\n    \r\n            text = _.defaultTo(text, '');\r\n\r\n            span = Graph.$('<tspan/>');\r\n            span.text(text);\r\n\r\n            me.elem.append(span);\r\n            me.rows.push(span);\r\n\r\n            return span;\r\n        },\r\n\r\n        /**\r\n         * Arrange position\r\n         */\r\n        arrange: function() {\r\n            var rows = this.rows,\r\n                size = this.props.fontSize,\r\n                line = this.props.lineHeight,\r\n                bbox = this.bbox().toJson();\r\n            \r\n            if (rows.length) {\r\n                for (var i = 0, ii = rows.length; i < ii; i++) {\r\n                    if (i) {\r\n                        rows[i].attr('x', this.attrs.x);\r\n                        rows[i].attr('dy', size * line);\r\n                    }\r\n                }\r\n                rows[0].attr('dy', 0);\r\n                this.dirty(true);\r\n            }\r\n        },\r\n\r\n        wrap: function(width) {\r\n            var text = this.props.text,\r\n                words = text.split(/\\s+/).reverse(),\r\n                lines = [],\r\n                lineNo = 0,\r\n                lineHeight = this.props.lineHeight,\r\n                ax = this.attrs.x,\r\n                ay = this.attrs.y,\r\n                dy = 0;\r\n\r\n            var word, span;\r\n\r\n            this.empty();\r\n            this.rows = [];\r\n\r\n            span = this.addSpan();\r\n            span.attr({\r\n                x: ax, \r\n                y: ay, \r\n                dy: dy + 'em'\r\n            });\r\n\r\n            while((word = words.pop())) {\r\n                lines.push(word);\r\n                span.text(lines.join(' '));\r\n                if (span.node().getComputedTextLength() > width) {\r\n                    lines.pop();\r\n                    span.text(lines.join(' '));\r\n                    lines = [word];\r\n                    span = this.addSpan(word);\r\n                    span.attr({\r\n                        x: ax, \r\n                        y: ay, \r\n                        dy: (++lineNo * lineHeight) + 'em'\r\n                    });\r\n                }\r\n            }\r\n        },\r\n\r\n        center: function(target) {\r\n            if (target) {\r\n                var targetBox = target.bbox().toJson(),\r\n                    rotate = this.matrix().rotate();\r\n\r\n                var textBox, dx, dy, cx, cy;\r\n\r\n                this.reset();\r\n\r\n                textBox = this.bbox().toJson();   \r\n\r\n                dx = targetBox.width / 2;\r\n                dy = targetBox.height / 2;\r\n                cx = textBox.x + textBox.width / 2;\r\n                cy = textBox.y + textBox.height / 2;\r\n\r\n                if (rotate.deg) {\r\n                    this.translate(dx, dy).rotate(rotate.deg).commit();\r\n                } else {\r\n                    this.translate(dx, dy).commit();\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        shape: function() {\r\n            var size = this.dimension();\r\n\r\n            return new Graph.lang.Path([\r\n                ['M', size.x, size.y], \r\n                ['l', size.width, 0], \r\n                ['l', 0, size.height], \r\n                ['l', -size.width, 0], \r\n                ['z']\r\n            ]);\r\n\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Text';\r\n        },\r\n\r\n        onTextRender: function() {\r\n            var me = this;\r\n            me.arrange();\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n    \r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.svg.Image = Graph.extend(Graph.svg.Vector, {\r\n\r\n        attrs: {\r\n            preserveAspectRatio: 'none'\r\n        },\r\n\r\n        constructor: function(src, x, y, width, height) {\r\n            var me = this;\r\n\r\n            // me.$super('image', {\r\n            //     'xlink:href': src,\r\n            //     'x': _.defaultTo(x, 0),\r\n            //     'y': _.defaultTo(y, 0),\r\n            //     'width': _.defaultTo(width, 0),\r\n            //     'height': _.defaultTo(height, 0)\r\n            // });\r\n            \r\n            me.superclass.prototype.constructor.call(me, 'image', {\r\n                'xlink:href': src,\r\n                'x': _.defaultTo(x, 0),\r\n                'y': _.defaultTo(y, 0),\r\n                'width': _.defaultTo(width, 0),\r\n                'height': _.defaultTo(height, 0)\r\n            });\r\n            \r\n        },\r\n\r\n        align: function(value, scale) {\r\n            if (value == 'none') {\r\n                this.attr('preserveAspectRatio', 'none');\r\n\r\n                return this;\r\n            }\r\n\r\n            var aspect = this.attrs.preserveAspectRatio,\r\n                align = '';\r\n\r\n            aspect = /(meet|slice)/.test(aspect) \r\n                ? aspect.replace(/(.*)\\s*(meet|slice)/i, '$2')\r\n                : '';\r\n\r\n            scale = _.defaultTo(scale, aspect);\r\n            value = value.replace(/s+/, ' ').toLowerCase();\r\n\r\n            switch(value) {\r\n                case 'top left':\r\n                case 'left top':\r\n                    align = 'xMinYMin';\r\n                    break;\r\n                case 'top center':\r\n                case 'center top':\r\n                    align = 'xMidYMin';\r\n                    break;\r\n                case 'top right':\r\n                case 'right top':\r\n                    align = 'xMaxYMin';\r\n                    break;\r\n                case 'left':\r\n                    align = 'xMinYMid';\r\n                    break;\r\n                case 'center':\r\n                    align = 'xMidYMid';\r\n                    break;\r\n                case 'right':\r\n                    align = 'xMaxYMid';\r\n                    break;\r\n                case 'bottom left':\r\n                case 'left bottom':\r\n                    align = 'xMinYMax';\r\n                    break;\r\n                case 'bottom center':\r\n                case 'center bottom':\r\n                    align = 'xMidYMax';\r\n                    break;\r\n                case 'bottom right':\r\n                case 'right bottom':\r\n                    align = 'xMaxYMax';\r\n                    break;\r\n            }\r\n\r\n            aspect = align + (scale ? ' ' + scale : '');\r\n            this.attr('preserveAspectRatio', aspect);\r\n\r\n            return this;\r\n        },\r\n\r\n        shape: function() {\r\n            var a = this.attrs;\r\n\r\n            return new Graph.lang.Path([\r\n                ['M', a.x, a.y], \r\n                ['l', a.width, 0], \r\n                ['l', 0, a.height], \r\n                ['l', -a.width, 0], \r\n                ['z']\r\n            ]);\r\n        },\r\n        \r\n        resize: function(sx, sy, cx, cy, dx, dy) {\r\n            var ms = this.graph.matrix.clone().scale(sx, sy, cx, cy),\r\n                ro = this.graph.matrix.rotate();\r\n\r\n            this.reset();\r\n\r\n            var x = ms.x(this.attrs.x, this.attrs.y),\r\n                y = ms.y(this.attrs.x, this.attrs.y),\r\n                w = +this.attrs.width * sx,\r\n                h = +this.attrs.height * sy;\r\n\r\n            this.attr({\r\n                x: x,\r\n                y: y,\r\n                width: w,\r\n                height: h\r\n            });\r\n            \r\n            this.rotate(ro, x, y).commit();\r\n\r\n            return {\r\n                matrix: ms,\r\n                x: x,\r\n                y: y\r\n            };\r\n        },\r\n        toString: function() {\r\n            return 'Graph.svg.Image';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    /**\r\n     * Paper - root viewport\r\n     */\r\n\r\n    var Paper = Graph.svg.Paper = Graph.extend(Graph.svg.Vector, {\r\n\r\n        attrs: {\r\n            'class': Graph.styles.PAPER\r\n        },\r\n\r\n        props: {\r\n            id: null,\r\n            guid: null,\r\n            type: 'paper',\r\n            text: null,\r\n            rotate: 0,\r\n\r\n            traversable: false,\r\n            selectable: false,\r\n            selected: false,\r\n            focusable: false,\r\n\r\n            rendered: false,\r\n            showOrigin: true,\r\n            zoomable: true\r\n        },\r\n\r\n        components: {\r\n            viewport: null\r\n        },\r\n\r\n        diagram: {\r\n            enabled: true,\r\n            manager: null\r\n        },\r\n\r\n        constructor: function (width, height, options) {\r\n            var me = this;\r\n\r\n            me.superclass.prototype.constructor.call(me, 'svg', {\r\n                'xmlns': Graph.config.xmlns.svg,\r\n                'xmlns:link': Graph.config.xmlns.xlink,\r\n                'version': Graph.config.svg.version\r\n                // 'width': _.defaultTo(width, 200),\r\n                // 'height': _.defaultTo(height, 200)\r\n            });\r\n\r\n            _.assign(me.props, options || {});\r\n\r\n            me.style({\r\n                overflow: 'hidden',\r\n                position: 'relative'\r\n            });\r\n\r\n            me.interactable();\r\n            me.initLayout();\r\n\r\n            me.plugins.collector = new Graph.plugin.Collector(me);\r\n            me.plugins.toolmgr.register('collector', 'plugin');\r\n\r\n            me.plugins.linker = new Graph.plugin.Linker(me);\r\n            me.plugins.toolmgr.register('linker', 'plugin');\r\n\r\n            me.plugins.pencil = new Graph.plugin.Pencil(me);\r\n            me.plugins.toolmgr.register('pencil', 'plugin');\r\n\r\n            me.plugins.definer = new Graph.plugin.Definer(me);\r\n\r\n            me.plugins.snapper = new Graph.plugin.Snapper(me);\r\n            me.plugins.toolpad = new Graph.plugin.Toolpad(me);\r\n            me.plugins.clipper = new Graph.plugin.Clipper(me);\r\n\r\n            // diagram feature\r\n            me.diagram.enabled = true;\r\n            me.diagram.manager = new Graph.diagram.Manager(me);\r\n\r\n            // subscribe topics\r\n            Graph.topic.subscribe('link:change', _.bind(me.listenLinkChange, me));\r\n            Graph.topic.subscribe('link:afterdestroy', _.bind(me.listenLinkAfterDestroy, me));\r\n\r\n            if ( ! Paper.defaultInstance) {\r\n                Paper.defaultInstance = me.guid();\r\n            }\r\n        },\r\n\r\n        initLayout: function() {\r\n            // create viewport\r\n            var viewport = (new Graph.svg.Group())\r\n                .addClass(Graph.styles.VIEWPORT)\r\n                .selectable(false);\r\n\r\n            viewport.props.viewport = true;\r\n\r\n            this.components.viewport = viewport.guid();\r\n\r\n            if (this.props.showOrigin) {\r\n                var origin = Graph.$(\r\n                    '<g class=\"graph-elem graph-origin\">' +\r\n                        '<rect class=\"x\" rx=\"1\" ry=\"1\" x=\"-16\" y=\"-1\" height=\"1\" width=\"30\"></rect>' +\r\n                        '<rect class=\"y\" rx=\"1\" ry=\"1\" x=\"-1\" y=\"-16\" height=\"30\" width=\"1\"></rect>' +\r\n                        '<text class=\"t\" x=\"-40\" y=\"-10\">(0, 0)</text>' +\r\n                    '</g>'\r\n                );\r\n\r\n                origin.appendTo(viewport.elem);\r\n                origin = null;\r\n            }\r\n\r\n            // render viewport\r\n            viewport.tree.paper = viewport.tree.parent = this.guid();\r\n            // viewport.translate(0.5, 0.5).commit();\r\n\r\n            this.elem.append(viewport.elem);\r\n            this.children().push(viewport);\r\n\r\n            viewport.on('render', function(){\r\n                viewport.cascade(function(c){\r\n                    if (c !== viewport && ! c.props.rendered) {\r\n                        c.props.rendered = true;\r\n                        c.tree.paper = viewport.tree.paper;\r\n                        c.fire('render');\r\n                    }\r\n                });\r\n            });\r\n\r\n            this.layout('default');\r\n        },\r\n\r\n        layout: function(options) {\r\n            var viewport = this.viewport();\r\n\r\n            if (options === undefined) {\r\n                return viewport.graph.layout;\r\n            }\r\n\r\n            viewport.layout(options);\r\n            return this;\r\n        },\r\n\r\n        shape: function(names, options) {\r\n            var shape = Graph.shape(names, options);\r\n            shape.render(this);\r\n\r\n            return shape;\r\n        },\r\n\r\n        render: function(container) {\r\n            var me = this,\r\n                vp = me.viewport(),\r\n                id = me.guid();\r\n\r\n            if (me.props.rendered) {\r\n                return;\r\n            }\r\n\r\n            container = Graph.$(container);\r\n            container.append(me.elem);\r\n\r\n            me.tree.container = container;\r\n\r\n            me.elem.css({\r\n                width: '100%',\r\n                height: '100%'\r\n            });\r\n\r\n            me.props.rendered = true;\r\n            me.fire('render');\r\n\r\n            vp.props.rendered = true;\r\n            vp.fire('render');\r\n\r\n            if (me.props.zoomable) {\r\n                me.zoomable();\r\n\r\n                var debounce = _.debounce(function(){\r\n                    debounce.flush();\r\n                    debounce = null;\r\n\r\n                    me.tool().activate('panzoom');\r\n                }, 1000);\r\n\r\n                debounce();\r\n            }\r\n\r\n            return me;\r\n        },\r\n\r\n        container: function() {\r\n            return this.tree.container;\r\n        },\r\n\r\n        collector: function() {\r\n            return this.plugins.collector;\r\n        },\r\n\r\n        snapper: function() {\r\n            return this.plugins.snapper;\r\n        },\r\n\r\n        viewport: function() {\r\n            return Graph.registry.vector.get(this.components.viewport);\r\n        },\r\n\r\n        diagram: function() {\r\n            return this.diagram.manager;\r\n        },\r\n\r\n        // @Override\r\n        scale: function(sx, sy, cx, cy) {\r\n            if (sx === undefined) {\r\n                return this.viewport().matrix().scale();\r\n            }\r\n            return this.plugins.transformer.scale(sx, sy, cx, cy);\r\n        },\r\n\r\n        width: function() {\r\n            return this.elem.width();\r\n        },\r\n\r\n        height: function() {\r\n            return this.elem.height();\r\n        },\r\n        \r\n        locateLink: function(guid) {\r\n            var link = Graph.registry.link.get(guid);\r\n            if (link) {\r\n                link.select(false);\r\n            }\r\n        },\r\n\r\n        locateShape: function(guid) {\r\n            var shape = Graph.registry.shape.get(guid);\r\n            if (shape) {\r\n                shape.select(false);\r\n            }\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.svg.Paper';\r\n        },\r\n\r\n        ///////// OBSERVERS /////////\r\n        \r\n        ///////// TOPIC LISTENERS /////////\r\n\r\n        listenLinkChange: _.debounce(function() {\r\n            this.layout().arrangeLinks();\r\n        }, 300),\r\n\r\n        listenLinkAfterDestroy: _.debounce(function(){\r\n            this.layout().arrangeLinks();\r\n        }, 10)\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n    Paper.defaultInstance = null;\r\n    \r\n    Paper.getDefaultInstance = function() {\r\n        return Graph.registry.vector.get(Paper.defaultInstance);\r\n    };\r\n\r\n    ///////// EXTENSIONS /////////\r\n\r\n    var vectors = {\r\n        ellipse: 'Ellipse',\r\n        circle: 'Circle',\r\n        rect: 'Rect',\r\n        path: 'Path',\r\n        polyline: 'Polyline',\r\n        polygon: 'Polygon',\r\n        group: 'Group',\r\n        text: 'Text',\r\n        image: 'Image',\r\n        line: 'Line'\r\n    };\r\n\r\n    _.forOwn(vectors, function(name, method){\r\n        (function(name, method){\r\n            Paper.prototype[method] = function() {\r\n                var arg = [name].concat(_.toArray(arguments)),\r\n                    svg = Graph.svg.apply(null, arg);\r\n\r\n                svg.tree.paper = this.guid();\r\n                svg.render(this);\r\n\r\n                arg = null;\r\n                return svg;\r\n            };\r\n        }(name, method));\r\n    });\r\n\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var storage = {};\r\n\r\n    var Registry = function() {\r\n        \r\n    };\r\n    \r\n    Registry.prototype.constructor = Registry;\r\n\r\n    Registry.prototype.register = function(pallet) {\r\n        var id = pallet.guid();\r\n        storage[id] = pallet;\r\n    };\r\n\r\n    Registry.prototype.unregister = function(pallet) {\r\n        var id = pallet.guid();\r\n        if (storage[id]) {\r\n            delete storage[id];\r\n        }\r\n    };\r\n\r\n    Registry.prototype.get = function(key) {\r\n        if (key === undefined) {\r\n            return this.toArray();\r\n        }\r\n        return storage[key];\r\n    };\r\n\r\n    Registry.prototype.toArray = function() {\r\n        var keys = _.keys(storage);\r\n        return _.map(keys, function(k){\r\n            return storage[k];\r\n        });\r\n    };\r\n\r\n    Registry.prototype.toString = function() {\r\n        return 'Graph.registry.Pallet';\r\n    };\r\n\r\n    Graph.registry.pallet = new Registry();\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.layout.Layout = Graph.extend({\r\n        \r\n        props: {\r\n            // view config\r\n            fit: true,\r\n            view: null,\r\n            width: 0,\r\n            height: 0,\r\n\r\n            // router config\r\n            router: {\r\n                type: 'orthogonal'\r\n            },\r\n\r\n            link: {\r\n                smooth: false,\r\n                smoothness: 6\r\n            }\r\n        },\r\n        \r\n        view: null,\r\n\r\n        cached: {\r\n            offset: null,\r\n            position: null\r\n        },\r\n\r\n        constructor: function(view, options) {\r\n            _.assign(this.props, options || {});\r\n            this.props.view = view.guid();\r\n        },\r\n\r\n        view: function() {\r\n            return Graph.registry.vector.get(this.props.view);\r\n        },\r\n\r\n        paper: function() {\r\n            return this.view().paper();\r\n        },\r\n\r\n        invalidate: function() {\r\n            \r\n        },\r\n\r\n        offset: function() {\r\n            // TODO: please fix...\r\n            return this.position();\r\n        },\r\n\r\n        position: function() {\r\n            var position = this.cached.position;\r\n            var view, node;\r\n            \r\n            if ( ! position) {\r\n                view = this.view();\r\n                node = view.isViewport() ? view.parent().node() : view.node();\r\n                position = node.getBoundingClientRect();\r\n                this.cached.position = position;\r\n            }\r\n\r\n            return position;\r\n        },\r\n\r\n        center: function() {\r\n            var center = this.cached.center;\r\n\r\n            if ( ! center) {\r\n                var position = this.position();\r\n\r\n                center = {\r\n                    x: position.width / 2,\r\n                    y: position.height / 2\r\n                };\r\n\r\n                this.cached.center = _.extend({}, center);\r\n            }\r\n            \r\n            return center;\r\n        },\r\n\r\n        scale: function() {\r\n            return this.view().matrix().scale();\r\n        },\r\n\r\n        width: function() {\r\n            var view, bbox, width;\r\n\r\n            view = this.view();\r\n\r\n            if (view.isViewport()) {\r\n                width = this.paper().width();\r\n            } else {\r\n                bbox  = view.bbox();\r\n                width = bbox.width();\r\n            }\r\n\r\n            view = bbox = null;\r\n            return width;\r\n        },\r\n\r\n        height: function() {\r\n            var view, bbox, height;\r\n\r\n            view = this.view();\r\n\r\n            if (view.isViewport()) {\r\n                height = this.paper().height();\r\n            } else {\r\n                bbox   = view.bbox();\r\n                height = bbox.height();\r\n            }\r\n\r\n            view = bbox = null;\r\n            return height;\r\n        },\r\n        \r\n        invalidate: function() {\r\n            this.cached.offset = null;\r\n            this.cached.center = null;\r\n        },\r\n\r\n        grabVector: function(event) {\r\n            return Graph.registry.vector.get(event.target);\r\n        },\r\n\r\n        grabLink: function(event) {\r\n            return Graph.registry.link.get(event.target);\r\n        },\r\n\r\n        pointerLocation: function(pointer) {\r\n            var x = pointer.clientX,\r\n                y = pointer.clientY,\r\n                position = this.position(),\r\n                matrix = this.view().matrix(),\r\n                invert = matrix.clone().invert(),\r\n                scale  = matrix.scale(),\r\n                location = {\r\n                    x: invert.x(x, y),\r\n                    y: invert.y(x, y)\r\n                };\r\n\r\n            location.x -= position.left / scale.x;\r\n            location.y -= position.top / scale.y;\r\n\r\n            matrix = invert = null;\r\n\r\n            return location;\r\n        },\r\n\r\n        screenLocation: function(coord) {\r\n            var screen = this.view().node().getScreenCTM();\r\n                matrix = Graph.matrix(\r\n                    screen.a,\r\n                    screen.b,\r\n                    screen.c,\r\n                    screen.d,\r\n                    screen.e,\r\n                    screen.f\r\n                );\r\n\r\n            var x = matrix.x(coord.x, coord.y),\r\n                y = matrix.y(coord.x, coord.y);\r\n\r\n            coord.x = x;\r\n            coord.y = y;\r\n            \r\n            return coord;\r\n        },\r\n\r\n        dragSnapping: function() {\r\n            return {\r\n                mode: 'anchor',\r\n                x: 1,\r\n                y: 1\r\n            };\r\n        },\r\n\r\n        routerType: function() {\r\n            return this.props.router.type;\r\n        },\r\n        \r\n        createRouter: function(source, target, options) {\r\n            var clazz, router;\r\n\r\n            clazz   = Graph.router[_.capitalize(this.props.router.type)];\r\n            options = _.extend({}, this.props.router, options || {});\r\n            router  = Graph.factory(clazz, [this.view(), source, target, options]);\r\n\r\n            return router;\r\n        },\r\n        \r\n        createLink: function(router, options) {\r\n            var clazz, link;\r\n\r\n            clazz   = Graph.link[_.capitalize(this.props.router.type)];\r\n            options = _.extend({}, this.props.link, options || {});\r\n            link    = Graph.factory(clazz, [router, options]);\r\n\r\n            return link;\r\n        },\r\n\r\n        refresh: function(vector) {\r\n            this.fire('refresh');\r\n        },\r\n\r\n        arrangeLinks: function() {\r\n            var scope = this.view().paper().guid(),\r\n                links = Graph.registry.link.collect(scope);\r\n            \r\n            if (links.length) {\r\n                \r\n                var inspect = [];\r\n                \r\n                _.forEach(links, function(link){\r\n                    if (link.cached.convex) {\r\n                        inspect.push(link.guid());\r\n                    }\r\n                });\r\n                \r\n                // TODO: research for sweepline algorithm\r\n                \r\n                var sweeper = new Graph.util.Sweeplink(links),\r\n                    convex = sweeper.findConvex();\r\n                \r\n                var key, link, idx;\r\n                \r\n                for (key in convex) {\r\n                    link = Graph.registry.link.get(key);\r\n                    \r\n                    link.reloadConvex(convex[key]);\r\n                    link.reset(true);\r\n                    \r\n                    idx = _.indexOf(inspect, key);\r\n                    \r\n                    if (idx > -1) {\r\n                        inspect.splice(idx, 1);\r\n                    }\r\n                }\r\n                \r\n                if (inspect.length) {\r\n                    _.forEach(inspect, function(key){\r\n                        var link = Graph.registry.link.get(key);\r\n                        \r\n                        link.removeConvex();\r\n                        link.reset(true);\r\n                    });\r\n                }\r\n                \r\n                sweeper.destroy();\r\n                sweeper = null;\r\n            }\r\n        },\r\n\r\n        arrangeShapes: function() {\r\n            \r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.layout.Layout';\r\n        }\r\n        \r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.shape.activity.Router = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'Route',\r\n            mode: 'xor', // none | parallel | or | xor | complex | event\r\n            width: 100,\r\n            height: 100,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            type: 'activity.router',\r\n            icon: Graph.icons.ROUTER_NONE,\r\n            style: 'graph-shape-activity-router'\r\n        },\r\n\r\n        constructor: function() {\r\n            if (this.props.mode != 'none') {\r\n                this.props.width = this.props.height = 50;\r\n            }\r\n            this.superclass.prototype.constructor.apply(this, arguments);\r\n        },\r\n\r\n        initMetadata: function() {\r\n            this.metadata.tools = [\r\n                {\r\n                    name: 'mode-none',\r\n                    icon: Graph.icons.ROUTER_NONE,\r\n                    title: Graph._('Change to default mode'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onModeClick, this, _, 'none')\r\n                },\r\n                {\r\n                    name: 'mode-or',\r\n                    icon: Graph.icons.ROUTER_OR,\r\n                    title: Graph._('Change to OR mode'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onModeClick, this, _, 'or')\r\n                },\r\n                {\r\n                    name: 'mode-xor',\r\n                    icon: Graph.icons.ROUTER_XOR,\r\n                    title: Graph._('Change to XOR mode'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onModeClick, this, _, 'xor')\r\n                },\r\n                {\r\n                    name: 'mode-parallel',\r\n                    icon: Graph.icons.ROUTER_PARALLEL,\r\n                    title: Graph._('Change to parallel mode'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onModeClick, this, _, 'parallel')\r\n                },\r\n                {\r\n                    name: 'config',\r\n                    icon: Graph.icons.CONFIG,\r\n                    title: Graph._('Click to config shape'),\r\n                    enabled: true\r\n                },\r\n                {\r\n                    name: 'link',\r\n                    icon: Graph.icons.LINK,\r\n                    title: Graph._('Click to start shape linking'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onLinkToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtofront',\r\n                    icon: Graph.icons.SEND_TO_FRONT,\r\n                    title: Graph._('Send to front'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onFrontToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtoback',\r\n                    icon: Graph.icons.SEND_TO_BACK,\r\n                    title: Graph._('Send to back'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBackToolClick, this)\r\n                },\r\n                {\r\n                    name: 'trash',\r\n                    icon: Graph.icons.TRASH,\r\n                    title: Graph._('Click to remove shape'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onTrashToolClick, this)\r\n                }\r\n            ];\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, label, mode;\r\n\r\n            var points = [\r\n                this.props.width / 2, 0,\r\n                this.props.width, this.props.height / 2,\r\n                this.props.width / 2, this.props.height,\r\n                0, this.props.height / 2\r\n            ];\r\n\r\n            var cx = points[0],\r\n                cy = points[3];\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Polygon(points))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .data('text', this.props.label)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n            \r\n            pmgr.install('dragger', block, {ghost: true, cls: Graph.styles.SHAPE_DRAG});\r\n            pmgr.install('resizer', block);\r\n            pmgr.install('editor',  block);\r\n            pmgr.install('network', block, {wiring: 'v:v'});\r\n            pmgr.install('snapper', block);\r\n\r\n            block.on('edit.shape',      _.bind(this.onLabelEdit, this));\r\n            block.on('beforedrag.shape', _.bind(this.onBeforeDrag, this));\r\n            block.on('afterdrag.shape',   _.bind(this.onAfterDrag, this));\r\n            block.on('afterresize.shape',    _.bind(this.onAfterResize, this));\r\n            block.on('beforedestroy.shape',    _.bind(this.onBeforeDestroy, this));\r\n            block.on('afterdestroy.shape',    _.bind(this.onAfterDestroy, this));\r\n            block.on('select.shape',    _.bind(this.onSelect, this));\r\n            block.on('deselect.shape',  _.bind(this.onDeselect, this));\r\n            block.on('connect.shape', _.bind(this.onConnect, this));\r\n\r\n            label = (new Graph.svg.Text(cx, cy, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n\r\n            shape = block = label = null;\r\n\r\n            this.mode(this.props.mode);\r\n        },\r\n\r\n        mode: function(mode) {\r\n            if (mode === undefined) {\r\n                return this.props.mode;\r\n            }\r\n            \r\n            this.props.mode = mode;\r\n\r\n            var inner;\r\n\r\n            if (this.props.mode != 'none') {\r\n                \r\n                this.component('label').hide();\r\n                this.component('block').resizable().disable();\r\n\r\n                if (this.components.inner) {\r\n                    this.component('inner').remove();\r\n                }\r\n\r\n                var shape = this.component();\r\n\r\n                switch(mode) {\r\n                    case 'parallel':\r\n                        inner = (new Graph.svg.Path('M 10 25 L 25 25 L 25 40 L 25 25 L 40 25 L 25 25 L 25 10'));\r\n                        break;\r\n                    case 'or':\r\n                        inner = (new Graph.svg.Circle(25, 25, 10));\r\n                        break;\r\n                    case 'xor':\r\n                        inner = (new Graph.svg.Path('M 15 15 L 25 25 L 15 35 L 25 25 L 35 35 L 25 25 L 35 15'));\r\n                        break;\r\n                }\r\n\r\n                if (inner) {\r\n                    inner.addClass('comp-inner');\r\n                    inner.selectable(false);\r\n                    inner.clickable(false);\r\n                    inner.render(shape);\r\n\r\n                    this.components.inner = inner.guid();\r\n                }\r\n            } else {\r\n                this.component('label').show();\r\n                this.component('block').resizable().enable();\r\n\r\n                inner = this.component('inner');\r\n\r\n                if (inner) {\r\n                    inner.remove();\r\n                    this.components.inner = null;\r\n                }\r\n\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        width: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.width;\r\n            }\r\n\r\n            var box = this.component('block').bbox().toJson(),\r\n                sx = value / this.props.width,\r\n                sy = 1,\r\n                cx = box.x,\r\n                cy = (box.y + box.y2) / 2,\r\n                dx = 0,\r\n                dy = 0;\r\n\r\n            this.component('block').resize(sx, sy, cx, cy, dx, dy);\r\n            this.component().dirty(true);\r\n\r\n            this.props.width = value;\r\n            return this;\r\n        },\r\n\r\n        height: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.height;\r\n            }\r\n\r\n            var block = this.component('block'),\r\n                box = block.bbox().toJson(),\r\n                sx = 1,\r\n                sy = value / this.props.height,\r\n                cx = (box.x + box.x2) / 2,\r\n                cy = box.y,\r\n                dx = 0,\r\n                dy = 0;\r\n\r\n            var resize = block.resize(sx, sy, cx, cy, dx, dy);\r\n            block.fire('afterresize', resize);\r\n\r\n            this.props.height = value;\r\n            return this;\r\n        },\r\n\r\n        refresh: function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                label = this.component('label');\r\n\r\n            var bound, matrix;\r\n\r\n            bound = block.bbox().toJson();\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            var points = [\r\n                bound.width / 2, 0,\r\n                bound.width, bound.height / 2,\r\n                bound.width / 2, bound.height,\r\n                0, bound.height / 2\r\n            ];\r\n\r\n            block.attr({\r\n                points: _.join(points, ',')\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            label.attr({\r\n                x: bound.width  / 2,\r\n                y: bound.height / 2\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n            // update props\r\n\r\n            matrix = shape.matrix();\r\n\r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            matrix = null;\r\n            bound  = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Router';\r\n        },\r\n\r\n        onModeClick: function(e, mode) {\r\n            this.mode(mode);\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n    \r\n    var Link = Graph.link.Link;\r\n    \r\n    Graph.link.Directed = Graph.extend(Link, {\r\n        \r\n        renderControl: function() {\r\n            var me = this, editor = me.component('editor');\r\n\r\n            if (me.cached.controls) {\r\n                _.forEach(me.cached.controls, function(c){\r\n                    c = Graph.registry.vector.get(c);\r\n                    c.remove();\r\n                });\r\n                me.cached.controls = null;\r\n            }\r\n\r\n            var points = this.cached.bendpoints,\r\n                maxlen = points.length - 1,\r\n                linkid = me.guid(),\r\n                controls = [],\r\n                controlImage = Graph.config.base + 'img/' + Graph.config.resizer.image,\r\n                controlSize = Graph.config.resizer.size;\r\n\r\n            _.forEach(points, function(dot, i){\r\n                \r\n                var control = (new Graph.svg.Image(\r\n                    controlImage,\r\n                    dot.x - controlSize / 2,\r\n                    dot.y - controlSize / 2,\r\n                    controlSize,\r\n                    controlSize\r\n                ));\r\n                \r\n                control.selectable(false);\r\n                control.removeClass(Graph.styles.VECTOR);\r\n                \r\n                if (i === 0) {\r\n                    control.addClass(Graph.styles.LINK_TAIL);\r\n                    control.elem.data('pole', 'tail');\r\n                } else if (i === maxlen) {\r\n                    control.addClass(Graph.styles.LINK_HEAD);\r\n                    control.elem.data('pole', 'head');\r\n                }\r\n                \r\n                control.elem.group('graph-link');\r\n                control.elem.data(Graph.string.ID_LINK, linkid);\r\n                \r\n                var context = {\r\n                    trans: (i === 0 || i === maxlen) ? 'CONNECT' : 'BENDING',\r\n                    index: dot.index,\r\n                    space: dot.space,\r\n                    point: {\r\n                        x: dot.x,\r\n                        y: dot.y\r\n                    },\r\n                    event: {\r\n                        x: dot.x,\r\n                        y: dot.y\r\n                    },\r\n                    range: {\r\n                        start: dot.range[0],\r\n                        end:   dot.range[1]\r\n                    },\r\n                    delta: {\r\n                        x: 0,\r\n                        y: 0\r\n                    },\r\n                    snap: {\r\n                        hor: [],\r\n                        ver: []\r\n                    }\r\n                };\r\n                \r\n                control.draggable({ghost: false});\r\n                control.cursor('default');\r\n                \r\n                control.on('beforedrag', _.bind(me.onControlStart, me, _, context, control));\r\n                control.on('drag',  _.bind(me.onControlMove,  me, _, context, control));\r\n                control.on('afterdrag',   _.bind(me.onControlEnd,   me, _, context, control));\r\n                \r\n                control.render(editor);\r\n                controls.push(control.guid());\r\n            });\r\n            \r\n            me.cached.controls = controls;\r\n            controls = null;\r\n        },\r\n        \r\n        onControlStart: function(e, context, control) {\r\n            this.router.initTrans(context);\r\n            \r\n            if (context.trans == 'CONNECT') {\r\n                var paper = this.component().paper();\r\n                if (paper) {\r\n                    paper.addClass('linking');\r\n                }\r\n            }\r\n\r\n            var snaphor = context.snap.hor,\r\n                snapver = context.snap.ver;\r\n            \r\n            control.draggable().snap([\r\n                function(x, y){\r\n                    var sx = Graph.util.snapValue(x, snapver),\r\n                        sy = Graph.util.snapValue(y, snaphor);\r\n                    \r\n                    return {\r\n                        x: sx,\r\n                        y: sy,\r\n                        range: 10\r\n                    };\r\n                }\r\n            ]);\r\n            \r\n            _.forEach(this.cached.controls, function(id){\r\n                var c = Graph.registry.vector.get(id);\r\n                if (c && c !== control) {\r\n                    c.hide();\r\n                }\r\n            });\r\n            \r\n            control.show();\r\n        },\r\n        \r\n        onControlMove: function(e, context, control) {\r\n            var me = this;\r\n            \r\n            context.delta.x += e.dx;\r\n            context.delta.y += e.dy;\r\n            \r\n            var x1, y1, x2, y2;\r\n            \r\n            x1 = context.event.x,\r\n            y1 = context.event.y;\r\n            \r\n            if (context.trans == 'BENDING') {\r\n                me.router.bending(context, function(result){\r\n                    me.reload(result.command, true);\r\n                });\r\n            } else {\r\n                me.router.connecting(context, function(result){\r\n                    me.reload(result.command, true);\r\n                });\r\n            }\r\n            \r\n            x2 = context.event.x,\r\n            y2 = context.event.y;\r\n            \r\n            // update dragger\r\n            e.originalData.dx = (x2 - x1);\r\n            e.originalData.dy = (y2 - y1);\r\n        },\r\n        \r\n        onControlEnd: function(e, context, control) {\r\n            this.router.stopTrans(context);\r\n\r\n            if (context.trans == 'CONNECT') {\r\n                var paper = this.component().paper();\r\n                if (paper) {\r\n                    paper.removeClass('linking');\r\n                }\r\n            }\r\n\r\n            this.reload(this.router.command());\r\n            this.invalidate();\r\n            this.resumeControl();\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.link.Orthogonal = Graph.extend(Graph.link.Link, {\r\n\r\n        reload: function(command, silent) {\r\n            var convex, smooth, radius, routes, maxlen, segments;\r\n            \r\n            silent = _.defaultTo(silent, false);\r\n            convex = this.cached.convex;\r\n            smooth = this.props.smooth;\r\n\r\n            if (convex) {\r\n                var points = this.router.waypoints();\r\n\r\n                if ( ! points) {\r\n                    return;\r\n                }\r\n\r\n                routes = points.slice();\r\n                maxlen = routes.length - 1;\r\n\r\n                segments = [];\r\n\r\n                _.forEach(routes, function(curr, i){\r\n                    var prev = curr,\r\n                        next = routes[i + 1];\r\n\r\n                    var item;\r\n\r\n                    if (i === 0) {\r\n                        item = ['M', curr.x, curr.y];\r\n                    } else {\r\n                        item = ['L', curr.x, curr.y];\r\n                    }\r\n\r\n                    segments.push(item);\r\n\r\n                    if (convex[i]) {\r\n                        _.forEach(convex[i], function(c){\r\n                            var conseg = Graph.util.convexSegment(c, prev, next);\r\n                            if (conseg) {\r\n                                segments.push(conseg[0], conseg[1]);\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                command = Graph.util.segments2path(segments);\r\n            }\r\n            \r\n            if (smooth) {\r\n                radius = this.props.smoothness || 6;\r\n                segments = segments || Graph.util.path2segments(command).slice();\r\n\r\n                var item, prev, next, curr, i;\r\n                var bend;\r\n\r\n                for (i = 0; i < segments.length; i++) {\r\n                    item = segments[i];\r\n                    next = segments[i + 1];\r\n\r\n                    bend = !!(item[0] == 'L' && next && next[0] != 'Q');\r\n\r\n                    if (bend) {\r\n                        curr = {\r\n                            x: item[item.length - 2],\r\n                            y: item[item.length - 1]\r\n                        };\r\n\r\n                        prev = segments[i - 1];\r\n\r\n                        if (prev && next) {\r\n                            var ss = Graph.util.smoothSegment(\r\n                                curr,\r\n                                { x: prev[prev.length - 2], y: prev[prev.length - 1] },\r\n                                { x: next[next.length - 2], y: next[next.length - 1] },\r\n                                radius\r\n                            );\r\n\r\n                            if (ss) {\r\n                                segments.splice(i, 1, ss[0], ss[1]);\r\n                                i++;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                command = Graph.util.segments2path(segments);\r\n\r\n            }\r\n\r\n            command = command || '';\r\n\r\n            this.component('coat').attr('d', command).dirty(true);\r\n            this.component('path').attr('d', command);\r\n            this.invalidate();\r\n\r\n            if ( ! silent) {\r\n                this.refresh();\r\n                this.fire('change');\r\n                Graph.topic.publish('link:change');\r\n            }\r\n        },\r\n\r\n        renderControl: function() {\r\n            var me = this, editor = me.component('editor');\r\n\r\n            if (me.cached.controls) {\r\n                _.forEach(me.cached.controls, function(c){\r\n                    c = Graph.registry.vector.get(c);\r\n                    c.remove();\r\n                });\r\n                me.cached.controls = null;\r\n            }\r\n\r\n            var points = this.cached.bendpoints,\r\n                linkid = me.guid(),\r\n                maxlen = points.length - 1,\r\n                controls = [],\r\n                controlImage = Graph.config.base + 'img/' + Graph.config.resizer.image,\r\n                controlSize = Graph.config.resizer.size;\r\n\r\n            _.forEach(points, function(dot, i){\r\n                var control, cursor, align, axis, drag;\r\n\r\n                control = (new Graph.svg.Image(\r\n                    controlImage,\r\n                    dot.x - controlSize / 2,\r\n                    dot.y - controlSize / 2,\r\n                    controlSize,\r\n                    controlSize\r\n                ));\r\n\r\n                control.selectable(false);\r\n                control.removeClass(Graph.styles.VECTOR);\r\n                control.elem.group('graph-link');\r\n                control.elem.data(Graph.string.ID_LINK, linkid);\r\n\r\n                drag = {ghost: false};\r\n                axis = null;\r\n                cursor = 'default';\r\n\r\n                if (i === 0) {\r\n                    control.addClass(Graph.styles.LINK_TAIL);\r\n                    control.elem.data('pole', 'tail');\r\n                } else if (i === maxlen) {\r\n                    control.addClass(Graph.styles.LINK_HEAD);\r\n                    control.elem.data('pole', 'head');\r\n                } else {\r\n                    align  = Graph.util.pointAlign(dot.start, dot.end);\r\n                    axis   = align == 'v' ? 'y' : 'x';\r\n                    cursor = axis  == 'x' ? 'ew-resize' : 'ns-resize';\r\n\r\n                    drag = {ghost:false, axis: axis};\r\n                }\r\n\r\n                var context = {\r\n\r\n                    trans: (i === 0 || i === maxlen) ? 'CONNECT' : 'BENDING',\r\n                    index: dot.index,\r\n                    axis: axis,\r\n                    cursor: cursor,\r\n                    point: {\r\n                        x: dot.x,\r\n                        y: dot.y\r\n                    },\r\n\r\n                    ranges: {\r\n                        start: dot.range[0],\r\n                        end:   dot.range[1]\r\n                    },\r\n\r\n                    event: {\r\n                        x: dot.x,\r\n                        y: dot.y\r\n                    },\r\n\r\n                    snap: {\r\n                        hor: [],\r\n                        ver: []\r\n                    },\r\n\r\n                    delta: {\r\n                        x: 0,\r\n                        y: 0\r\n                    }\r\n                };\r\n\r\n\r\n                control.draggable(drag);\r\n                control.cursor(cursor);\r\n\r\n                control.on('beforedrag', _.bind(me.onControlStart, me, _, context, control));\r\n                control.on('drag',  _.bind(me.onControlMove,  me, _, context));\r\n                control.on('afterdrag',   _.bind(me.onControlEnd,   me, _, context, control));\r\n\r\n                control.render(editor);\r\n                controls.push(control.guid());\r\n            });\r\n\r\n            me.cached.controls = controls;\r\n            controls = null;\r\n        },\r\n\r\n        onControlStart: function(e, context, control) {\r\n            this.component('coat').cursor(context.cursor);\r\n            this.router.initTrans(context);\r\n\r\n            if (context.trans == 'CONNECT') {\r\n                var paper = this.component().paper();\r\n                if (paper) {\r\n                    paper.addClass('linking');\r\n                }\r\n            }\r\n\r\n            // snapping\r\n            var snaphor = context.snap.hor,\r\n                snapver = context.snap.ver;\r\n\r\n            control.draggable().snap([\r\n                function(x, y) {\r\n                    var sx = Graph.util.snapValue(x, snapver),\r\n                        sy = Graph.util.snapValue(y, snaphor);\r\n\r\n                    return {\r\n                        x: sx,\r\n                        y: sy,\r\n                        range: 10\r\n                    };\r\n                }\r\n            ]);\r\n\r\n            _.forEach(this.cached.controls, function(id){\r\n                var c = Graph.registry.vector.get(id);\r\n                if (c && c !== control) {\r\n                    c.hide();\r\n                }\r\n            });\r\n\r\n            control.show();\r\n            this.removeConvex();\r\n        },\r\n\r\n        onControlMove: function(e, context) {\r\n            var me = this;\r\n\r\n            context.delta.x += e.dx;\r\n            context.delta.y += e.dy;\r\n\r\n            var x1, y1, x2, y2, dx, dy;\r\n\r\n            x1 = context.event.x;\r\n            y1 = context.event.y;\r\n\r\n            if (context.trans == 'BENDING') {\r\n                me.router.bending(context, function(result){\r\n                    me.reload(result.command, true);\r\n                });\r\n            } else {\r\n                me.router.connecting(context, function(result){\r\n                    me.reload(result.command, true);\r\n                });\r\n            }\r\n\r\n            x2 = context.event.x;\r\n            y2 = context.event.y;\r\n\r\n            dx = x2 - x1;\r\n            dy = y2 - y1;\r\n\r\n            // update dragger\r\n            e.originalData.dx = dx;\r\n            e.originalData.dy = dy;\r\n        },\r\n\r\n        onControlEnd: function(e, context, control) {\r\n            this.component('coat').cursor('pointer');\r\n            this.router.stopTrans(context);\r\n\r\n            if (context.trans == 'CONNECT') {\r\n                var paper = this.component().paper();\r\n                if (paper) {\r\n                    paper.removeClass('linking');\r\n                }\r\n            }\r\n\r\n            this.reload(this.router.command());\r\n            this.invalidate();\r\n            this.resumeControl();\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.link.Orthogonal';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var KEY_TRESHOLD = 1e-9;\r\n    var SLOPE_TRESHOLD = .1;\r\n    \r\n    var Sweeplink = Graph.util.Sweeplink = function(links) {\r\n        \r\n        var me = this;\r\n        \r\n        me.points = [];\r\n        me.queue = [];\r\n        me.lines = [];\r\n        me.found = [];\r\n        me.process = [];\r\n        \r\n        _.forEach(links, function(link){\r\n            var dots = me.extract(link);\r\n            Array.prototype.push.apply(me.points, dots);\r\n        });\r\n\r\n        _.forEach(me.points, function(p, i){\r\n            if (i % 2) me.lines.push(_.sortBy( [p, me.points[i - 1]], 'y' ));\r\n        });\r\n        \r\n        _.forEach(me.lines, function(d, i){\r\n            if (d[0].x == d[1].x) {\r\n                d[0].x += SLOPE_TRESHOLD;\r\n                d[1].x -= SLOPE_TRESHOLD;\r\n            }\r\n\r\n            if (d[0].y == d[1].y) {\r\n                d[0].y -= SLOPE_TRESHOLD;\r\n                d[1].y += SLOPE_TRESHOLD;\r\n            }\r\n\r\n            d[0].line = d;\r\n            d[1].line = d;\r\n        });\r\n        \r\n    };\r\n\r\n    Sweeplink.prototype.constructor = Sweeplink;\r\n\r\n    Sweeplink.prototype.extract = function(link) {\r\n        var segments = link.router.path().curve().segments, \r\n            dots = [];\r\n\r\n        var x, y;\r\n        \r\n        _.forEach(segments, function(s, i){\r\n            var p = i === 0 ? {x: s[1], y: s[2]} : {x: s[5], y: s[6]};\r\n            var q = segments[i + 1];\r\n            \r\n            if (q) {\r\n                \r\n                q = {x: q[5], y: q[6]};\r\n                \r\n                Graph.util.movepoint(p, q, -20);\r\n                Graph.util.movepoint(q, p, -20);\r\n\r\n                p.x = Math.round(p.x, 3);\r\n                p.y = Math.round(p.y, 3);\r\n\r\n                q.x = Math.round(q.x, 3);\r\n                q.y = Math.round(q.y, 3);\r\n\r\n                p.link = link;\r\n                q.link = link;\r\n\r\n                p.range = i;\r\n                q.range = i + 1;\r\n\r\n                dots.push(p, q);\r\n            }\r\n            \r\n        });\r\n\r\n        return dots;\r\n    };\r\n\r\n    Sweeplink.prototype.findConvex = function() {\r\n        var me = this, linesByY;\r\n        \r\n        me.queue = createTree(me.points.slice())\r\n            .key(function(d){ return d.y + KEY_TRESHOLD * d.x; })\r\n            .order();\r\n        \r\n        me.found = [];\r\n        me.process = createTree([]);\r\n\r\n        for (var i = 0; i < me.queue.length && i < 1000; i++) {\r\n            \r\n            var d = me.queue[i];\r\n            var index, indexA, indexB, minIndex;\r\n            \r\n\r\n            if (d.line && d.line[0] == d) {\r\n                d.type = 'insert';\r\n                index = me.process\r\n                    .key(function(e){ return me.intercept(e, d.y - KEY_TRESHOLD / 1000); })\r\n                    .insert(d.line);\r\n                \r\n                me.validate(d.line, me.process[index + 1]);\r\n                me.validate(d.line, me.process[index - 1]);\r\n                \r\n            } else if (d.line) {\r\n                d.type = 'removal';\r\n                index = me.process.findIndex(d.line);\r\n                me.process.remove(d.line);\r\n                \r\n                me.validate(me.process[index - 1], me.process[index]);\r\n            } else if (d.lineA && d.lineB) {\r\n                me.process.key(function(e){ return me.intercept(e, d.y - KEY_TRESHOLD / 1000); });\r\n                \r\n                indexA = me.process.findIndex(d.lineA);\r\n                indexB = me.process.findIndex(d.lineB);\r\n                  \r\n                if (indexA == indexB) indexA = indexA + 1\r\n                  \r\n                me.process[indexA] = d.lineB;\r\n                me.process[indexB] = d.lineA;\r\n\r\n                minIndex = indexA < indexB ? indexA : indexB\r\n\r\n                me.validate(me.process[minIndex - 1], me.process[minIndex])\r\n                me.validate(me.process[minIndex + 1], me.process[minIndex + 2])\r\n            }\r\n        }\r\n        \r\n        var convex = {};\r\n        \r\n        _.forEach(this.found, function(f){\r\n            \r\n            var routes, rangeStart, rangeEnd, segmentAlign, segmentStart, segmentEnd,\r\n                alignA, alignB, line, link, guid;\r\n            \r\n            alignA = Graph.util.pointAlign(f.lineA[0], f.lineA[1], 10);\r\n            alignB = Graph.util.pointAlign(f.lineB[0], f.lineB[1], 10);\r\n            \r\n            if (alignA != alignB) {\r\n                segmentAlign = alignA == 'v' ? alignA : alignB;\r\n                \r\n                line = alignA == 'v' ? f.lineA : f.lineB;\r\n                link = line[0].link;\r\n                guid = link.guid();\r\n                \r\n                routes = link.router.waypoints();\r\n                \r\n                rangeStart = Math.min(line[0].range, line[1].range),\r\n                rangeEnd   = Math.max(line[0].range, line[1].range);\r\n                \r\n                segmentStart = routes[rangeStart];\r\n                segmentEnd = routes[rangeEnd];\r\n                \r\n                if ( ! convex[guid]) {\r\n                    convex[guid] = {};\r\n                }\r\n                \r\n                if ( ! convex[guid][rangeStart]) {\r\n                    convex[guid][rangeStart] = createTree([])\r\n                        .key(function(c){\r\n                            if (c.segmentAlign == 'v') {\r\n                                if (c.segmentStart.x < c.segmentEnd.x) {\r\n                                    return c.x + c.segmentStart.x;\r\n                                } else {\r\n                                    return c.segmentStart.x - c.x;\r\n                                }\r\n                            } else {\r\n                                if (c.segmentStart.y < c.segmentEnd.y) {\r\n                                    return c.y + c.segmentStart.y;\r\n                                } else {\r\n                                    return c.segmentStart.y - c.y;\r\n                                }\r\n                            }\r\n                        });\r\n                }\r\n                \r\n                convex[guid][rangeStart].insert({\r\n                    x: f.x,\r\n                    y: f.y,\r\n                    link: link.guid(),\r\n                    rangeStart: rangeStart,\r\n                    rangeEnd: rangeEnd,\r\n                    segmentAlign: segmentAlign,\r\n                    segmentStart: segmentStart,\r\n                    segmentEnd: segmentEnd\r\n                });\r\n                \r\n            }\r\n            \r\n        });\r\n        \r\n        return convex;\r\n    };\r\n    \r\n    Sweeplink.prototype.intersect = function(a, b, c, d) {\r\n        var det = (a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x),\r\n            l   = a.x * b.y - a.y * b.x,\r\n            m   = c.x * d.y - c.y * d.x,\r\n            ix  = (l * (c.x - d.x) - m * (a.x - b.x)) / det,\r\n            iy  = (l * (c.y - d.y) - m * (a.y - b.y)) / det,\r\n            i   = {x: ix, y: iy};\r\n\r\n        i.isOverlap = (ix == a.x && iy == a.y) || (ix == b.x && iy == b.y)\r\n        i.isIntersection = ! (a.x < ix ^ ix < b.x) && ! (c.x < ix ^ ix < d.x) && ! i.isOverlap && det\r\n        \r\n        // if (isNaN(i.x)) debugger\r\n\r\n        return i;\r\n    };\r\n    \r\n    Sweeplink.prototype.validate = function(a, b) {\r\n        if ( ! a || ! b ) return;\r\n        var i = this.intersect(a[0], a[1], b[0], b[1]);\r\n        \r\n        i.lineA = a;\r\n        i.lineB = b;\r\n        \r\n        if (i.isIntersection) {\r\n            this.found.push(i) && this.queue.insert(i);\r\n        }\r\n    };\r\n\r\n    Sweeplink.prototype.intercept = function(line, y) {\r\n        var a = line[0], \r\n            b = line[1],\r\n            m = (a.y - b.y) / (a.x - b.x);\r\n\r\n        return (y - a.y + m * a.x) / m;\r\n    }\r\n\r\n    Sweeplink.prototype.destroy = function() {\r\n        this.points = null;\r\n        this.lines = null;\r\n        this.found = null;\r\n        this.queue = null;\r\n        this.process = null;\r\n    };\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function createTree(array) {\r\n        var key = function(d){ return d; };\r\n        var bisect = _.bisector(function(d){ return key(d); }).left;\r\n        \r\n        array.insert = function(d) {\r\n            var i = array.findIndex(d);\r\n            var v = key(d);\r\n            if (array[i] && v == key(array[i])) return;\r\n            array.splice(i, 0, d);\r\n            return i;\r\n        };\r\n\r\n        array.remove = function(d) {\r\n            var i = array.findIndex(d);\r\n            array.splice(i, 1);\r\n            return i;\r\n        };\r\n\r\n        array.findIndex = function(d) {\r\n            return bisect(array, key(d));\r\n        };\r\n\r\n        array.key = function(f) {\r\n            key = f;\r\n            return array;\r\n        };\r\n\r\n        array.swap = function() {\r\n\r\n        };\r\n\r\n        array.order = function() {\r\n            array.sort(_.ascendingKey(key));\r\n            return array;\r\n        };\r\n\r\n        return array;\r\n    }\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Plugin = Graph.extend({\r\n\r\n        props: {\r\n            vector: null,\r\n            activator: 'tool'\r\n        },\r\n\r\n        cached: {\r\n            \r\n        },\r\n\r\n        /**\r\n         * Get/set options\r\n         */\r\n        options: function(options) {\r\n\r\n        },\r\n        \r\n        vector: function() {\r\n            return Graph.registry.vector.get(this.props.vector);\r\n        },\r\n\r\n        invalidate: function() {\r\n            \r\n        },\r\n\r\n        enable: function(activator) {},\r\n\r\n        disable: function() {},\r\n\r\n        destroy: function() {}\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    var Manager = Graph.diagram.Manager = Graph.extend({\r\n\r\n        props: {\r\n            paper: null,\r\n            defaultType: 'activity'\r\n        },\r\n\r\n        pallets: [],\r\n        diagram: null,\r\n        snapshoot: [],\r\n\r\n        constructor: function(paper) {\r\n            this.props.paper = paper.guid();\r\n            paper.on('keynavdown', _.bind(this.onKeynavDown, this));\r\n        },\r\n\r\n        paper: function() {\r\n            return Graph.registry.vector.get(this.props.paper);\r\n        },\r\n\r\n        deselectAll: function() {\r\n            this.paper().collector().clearCollection();\r\n        },\r\n\r\n        removeSelection: function() {\r\n            var selection = this.paper().collector().collection.toArray().slice();\r\n                  \r\n            this.capture();\r\n\r\n            _.forEach(selection, function(vector){\r\n                vector.remove();\r\n            });\r\n        },\r\n\r\n        capture: function() {\r\n            // capture to snapshoot\r\n            if (this.diagram) {\r\n                // var data = this.diagram.toJson();\r\n                // this.snapshoot = [data];\r\n            }\r\n        },\r\n\r\n        undo: function() {\r\n            if (this.snapshoot.length) {\r\n                this.diagram.render(this.snapshoot[0]);\r\n            }\r\n        },\r\n\r\n        redo: function() {\r\n\r\n        },\r\n\r\n        addPallet: function(pallet) {\r\n            var me = this,\r\n                paper = me.paper(),\r\n                layout = paper.layout(),\r\n                scale = layout.scale(),\r\n                drawing = null;\r\n\r\n            me.pallets.push(pallet);\r\n\r\n            pallet.on({\r\n                pick: function(e) {\r\n\r\n                    paper.tool().activate('panzoom');\r\n\r\n                    if ( ! me.diagram) {\r\n                        me.create(me.props.defaultType);\r\n                    }\r\n\r\n                    var origin = layout.pointerLocation({\r\n                        clientX: e.origin.x,\r\n                        clientY: e.origin.y\r\n                    });\r\n\r\n                    var options = {\r\n                        left: origin.x,\r\n                        top: origin.y\r\n                    };\r\n\r\n                    var result = me.diagram.drawShape(e.shape, options);\r\n                    \r\n                    if (result.movable) {\r\n                        drawing = result.shape;\r\n                        scale = paper.layout().scale();\r\n                        drawing.component('block').dirty(true);\r\n                        drawing.component().dirty(true);\r\n                    } else {\r\n                        drawing = null;\r\n                        pallet.stopPicking();\r\n                    }\r\n\r\n                },\r\n                drag: function(e) {\r\n                    if (drawing) {\r\n                        var dx = e.dx,\r\n                            dy = e.dy;\r\n\r\n                        dx /= scale.x;\r\n                        dy /= scale.y;\r\n\r\n                        if (scale.x < 1) {\r\n                            dx += scale.x;\r\n                        }\r\n\r\n                        drawing.translate(dx, dy);\r\n                    }\r\n                },\r\n                drop: function(e) {\r\n                    if (drawing) {\r\n                        drawing = null;\r\n                    }\r\n                }\r\n            });\r\n\r\n        },\r\n\r\n        current: function() {\r\n            return this.diagram;\r\n        },\r\n\r\n        remove: function() {\r\n            if (this.diagram) {\r\n                this.diagram.remove();\r\n                this.diagram = null;\r\n\r\n                this.paper().fire('diagram.destroy');\r\n            }\r\n        },\r\n\r\n        create: function(type, options, silent) {\r\n            type = _.defaultTo(this.props.defaultType);\r\n\r\n            var clazz = Graph.diagram.type[_.capitalize(type)],\r\n                paper = this.paper();\r\n\r\n            this.diagram = Graph.factory(clazz, [paper, options]);\r\n            silent = _.defaultTo(silent, false);\r\n\r\n            if ( ! silent) {\r\n                paper.fire('diagram.create', {\r\n                    diagram: this.diagram\r\n                });\r\n            }\r\n\r\n            return this.diagram;\r\n        },\r\n\r\n        saveAsImage: function(type, filename) {\r\n            var exporter = new Graph.data.Exporter(this.paper());\r\n              \r\n            switch(type) {\r\n                case 'svg':\r\n                    exporter.exportSVG(filename);\r\n                    break;\r\n                case 'png':\r\n                    exporter.exportPNG(filename);\r\n                    break;\r\n                case 'jpg':\r\n                case 'jpeg':\r\n                    exporter.exportJPEG(filename);\r\n                    break;\r\n            }\r\n\r\n            exporter = null;\r\n        },\r\n\r\n        saveAsFile: function(callback) {\r\n            var exporter = new Graph.data.Exporter(this.paper());\r\n            exporter.exportFile(callback);\r\n            exporter = null;\r\n        },\r\n\r\n        saveAsBlob: function(callback) {\r\n            var exporter = new Graph.data.Exporter(this.paper());\r\n            return exporter.exportBlob(callback);\r\n        },\r\n\r\n        onKeynavDown: function(e) {\r\n            switch (e.keyCode) {\r\n                case Graph.event.DELETE:\r\n                    this.removeSelection();\r\n                    e.preventDefault();\r\n                    break;\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Definer = Graph.extend(Graph.plugin.Plugin, {\r\n        props: {\r\n            vector: null\r\n        },\r\n\r\n        definitions: {\r\n\r\n        },\r\n\r\n        components: {\r\n            holder: null\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            this.props.vector = vector.guid();\r\n\r\n            this.components.holder = Graph.$('<defs/>');\r\n            this.components.holder.prependTo(vector.elem);\r\n\r\n            if (vector.isPaper()) {\r\n                this.defineArrowMarker('marker-link-end');\r\n                this.defineCircleMarker('marker-link-start-circle');\r\n            }\r\n\r\n        },\r\n        \r\n        defineArrowMarker: function(id) {\r\n            if (this.definitions[id]) {\r\n                return this.definitions[id];\r\n            }\r\n\r\n            var marker = Graph.$(_.format(\r\n                '<marker id=\"{0}\" refX=\"{1}\" refY=\"{2}\" viewBox=\"{3}\" markerWidth=\"{4}\" markerHeight=\"{5}\" orient=\"{6}\">' + \r\n                    '<path d=\"{7}\" fill=\"{8}\" stroke-width=\"{9}\" stroke-linecap=\"{10}\" stroke-dasharray=\"{11}\">' + \r\n                    '</path>'+\r\n                '</marker>',\r\n                id, '11', '10', '0 0 20 20', '10', '10', 'auto',\r\n                'M 1 5 L 11 10 L 1 15 Z', '#000000', '1', 'round', '10000, 1'\r\n            ));\r\n\r\n            this.definitions[id] = marker;\r\n            this.components.holder.append(marker);\r\n\r\n            return marker;\r\n        },\r\n\r\n        defineCircleMarker: function(id) {\r\n            if (this.definitions[id]) {\r\n                return this.definitions[id];\r\n            }\r\n\r\n            var marker = Graph.$(_.format(\r\n                '<marker id=\"{0}\" refX=\"{1}\" refY=\"{2}\" viewBox=\"{3}\" markerWidth=\"{4}\" markerHeight=\"{5}\" orient=\"{6}\">' + \r\n                    '<circle cx=\"6\" cy=\"6\" r=\"4\" fill=\"none\" stroke=\"#000000\" stroke-width=\"1\" />' + \r\n                '</marker>',\r\n                id, '6', '6', '0 0 20 20', '10', '10', 'auto'\r\n            ));\r\n\r\n            this.definitions[id] = marker;\r\n            this.components.holder.append(marker);\r\n\r\n            return marker;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Definer';\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n    \r\n    // storages\r\n    var vendors = {};\r\n\r\n    var Reactor = Graph.plugin.Reactor = function(vector, listeners) {\r\n\r\n        var me = this,\r\n            node = vector.node(),\r\n            guid = vector.guid();\r\n\r\n        me.props = {\r\n            vector: guid\r\n        };\r\n        \r\n        me.listeners = listeners || {};\r\n\r\n        var vendor = vendors[guid] = interact(node);\r\n\r\n        vendor.on('down', function reactorDown(e){\r\n            if (e.target === node) {\r\n                e.originalType = 'pointerdown';\r\n                Graph.topic.publish('vector:pointerdown', {vector: vector});\r\n                vector.fire(e);\r\n            }\r\n        }, true);\r\n\r\n        vector.elem.on({\r\n            contextmenu: function(e) {\r\n                if (e.currentTarget === node) {\r\n                    vector.fire(e);\r\n                    // e.preventDefault();\r\n                }\r\n            }\r\n        });\r\n\r\n        vendor = null;\r\n\r\n    };\r\n\r\n    Reactor.prototype.constructor = Reactor;\r\n\r\n    Reactor.prototype.fire = function(eventType) {\r\n        var eventObject;\r\n\r\n        switch(eventType) {\r\n            case 'down':\r\n\r\n                eventObject = {\r\n                    type: 'mousedown'\r\n                };\r\n\r\n                break;\r\n        }\r\n\r\n        if (eventObject) {\r\n            // this.vendor().fire(eventObject);\r\n        }\r\n    };\r\n\r\n    Reactor.prototype.vendor = function() {\r\n        return vendors[this.props.vector];\r\n    };\r\n\r\n    Reactor.prototype.draggable = function(options) {\r\n        return this.vendor().draggable(options);\r\n    };\r\n\r\n    Reactor.prototype.dropzone = function(options) {\r\n        return this.vendor().dropzone(options);\r\n    };\r\n\r\n    Reactor.prototype.gesturable = function(options) {\r\n        return this.vendor().gesturable(options);\r\n    };\r\n\r\n    Reactor.prototype.destroy = function() {\r\n        var guid = this.props.vector,\r\n            vendor = vendors[guid];\r\n\r\n        if (vendor) {\r\n            vendor.unset();\r\n        }\r\n\r\n        delete vendors[guid];\r\n    };\r\n\r\n    Reactor.prototype.toString = function() {\r\n        return 'Graph.plugin.Reactor';\r\n    };\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Transformer = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            scale: 1,\r\n            rotate: 0\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            this.actions = [];\r\n            this.props.vector = vector.guid();\r\n        },\r\n\r\n        transform: function(command) {\r\n            var me = this, segments = Graph.util.transform2segments(command);\r\n\r\n            _.forEach(segments, function(args){\r\n                var method = args.shift();\r\n                if (me[method] && _.isFunction(me[method])) {\r\n                    (function(){\r\n                        me[method].apply(me, args);\r\n                    }(method, args));    \r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        queue: function() {\r\n            var args = _.toArray(arguments);\r\n            \r\n            this.actions.push({\r\n                name: args.shift(),\r\n                args: args,\r\n                sort: this.actions.length\r\n            });\r\n\r\n            return this;\r\n        },\r\n        translate: function(dx, dy) {\r\n            dx = _.defaultTo(dx, 0);\r\n            dy = _.defaultTo(dy, 0);\r\n            this.queue('translate', dx, dy);\r\n            return this;\r\n        },\r\n        rotate: function(deg, cx, cy) {\r\n            if ( ! _.isUndefined(cx) && ! _.isUndefined(cy)) {\r\n                this.queue('rotate', deg, cx, cy);    \r\n            } else {\r\n                this.queue('rotate', deg);    \r\n            }\r\n            return this;\r\n        },\r\n        scale: function(sx, sy, cx, cy) {\r\n            sy = _.defaultTo(sy, sx);\r\n\r\n            if ( ! _.isUndefined(cx) && ! _.isUndefined(cy)) {\r\n                this.queue('scale', sx, sy, cx, cy);\r\n            } else {\r\n                this.queue('scale', sx, sy);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        matrix: function(a, b, c, d, e, f) {\r\n            this.queue('matrix', a, b, c, d, e, f);\r\n            return this;\r\n        },\r\n\r\n        commit: function(absolute, simulate) {\r\n            var me = this,\r\n                actions = me.actions,\r\n                vector = me.vector(),\r\n                events = {\r\n                    translate: false,\r\n                    rotate: false,\r\n                    scale: false\r\n                };\r\n\r\n            if ( ! actions.length) {\r\n                return;\r\n            }\r\n            \r\n            absolute = _.defaultTo(absolute, false);\r\n            simulate = _.defaultTo(simulate, false);\r\n            \r\n            var deg = 0, \r\n                dx = 0, \r\n                dy = 0, \r\n                sx = 1, \r\n                sy = 1;\r\n                \r\n            var mat = vector.matrix().clone();\r\n            \r\n            _.forEach(actions, function(act){\r\n                var arg = act.args,\r\n                    cmd = act.name,\r\n                    len = arg.length,\r\n                    inv = false;\r\n\r\n                if (absolute) {\r\n                    inv = mat.invert(true);\r\n                }\r\n                \r\n                var x1, y1, x2, y2, bb;\r\n                \r\n                if (cmd == 'translate' && len === 2) {\r\n                    if (absolute) {\r\n                        x1 = inv.x(0, 0);\r\n                        y1 = inv.y(0, 0);\r\n                        x2 = inv.x(arg[0], arg[1]);\r\n                        y2 = inv.y(arg[0], arg[1]);\r\n                        mat.translate(x2 - x1, y2 - y1);\r\n                    } else {\r\n                        mat.translate(arg[0], arg[1]);\r\n                    }\r\n                    events.translate = true;\r\n                } else if (cmd == 'rotate') {\r\n                    if (len == 1) {\r\n                        bb = bb || vector.bboxPristine().toJson();\r\n                        mat.rotate(arg[0], bb.x + bb.width / 2, bb.y + bb.height / 2);\r\n                        deg += arg[0];\r\n                    } else if (len == 3) {\r\n                        if (absolute) {\r\n                            x2 = inv.x(arg[1], arg[2]);\r\n                            y2 = inv.y(arg[1], arg[2]);\r\n                            mat.rotate(arg[0], x2, y2);\r\n                        } else {\r\n                            mat.rotate(arg[0], arg[1], arg[2]);\r\n                        }\r\n                        deg += arg[0];\r\n                    }\r\n                    events.rotate = true;\r\n                } else if (cmd == 'scale') {\r\n                    if (len === 1 || len === 2) {\r\n                        bb = bb || vector.bboxPristine().toJson();\r\n                        mat.scale(arg[0], arg[len - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\r\n                        sx *= arg[0];\r\n                        sy *= arg[len - 1];\r\n                    } else if (len === 4) {\r\n                        if (absolute) {\r\n                            x2 = inv.x(arg[2], arg[3]);\r\n                            y2 = inv.y(arg[2], arg[3]);\r\n                            mat.scale(arg[0], arg[1], x2, y2);\r\n                        } else {\r\n                            mat.scale(arg[0], arg[1], arg[2], arg[3]);\r\n                        }\r\n                        sx *= arg[0];\r\n                        sy *= arg[1];\r\n                    }\r\n                    events.scale = true;\r\n                } else if (cmd == 'matrix') {\r\n                    mat.multiply(arg[0], arg[1], arg[2], arg[3], arg[4], arg[5]);\r\n                }\r\n            });\r\n\r\n            if (simulate) {\r\n                this.actions = [];\r\n                return mat;\r\n            }\r\n            \r\n            vector.graph.matrix = mat;\r\n            vector.attr('transform', mat.toValue());\r\n\r\n\r\n            if (events.translate) {\r\n                events.translate = {\r\n                    dx: mat.e,\r\n                    dy: mat.f\r\n                };\r\n                this.fire('aftertranslate', events.translate);\r\n            }\r\n\r\n            if (events.rotate) {\r\n                events.rotate = {\r\n                    deg: deg\r\n                };\r\n                this.fire('afterrotate', events.rotate);\r\n            }\r\n\r\n            if (events.scale) {\r\n                events.scale = {\r\n                    sx: sx,\r\n                    sy: sy\r\n                };\r\n                this.fire('afterscale', events.scale);\r\n            }\r\n\r\n            this.actions = [];\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Transformer';\r\n        }\r\n    });\r\n    \r\n}());","\r\n(function(){\r\n    var global = this;\r\n\r\n    var Animator = Graph.plugin.Animator = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n\r\n            // default duration\r\n            duration: 1000,\r\n\r\n            // default easing\r\n            easing: 'linier'\r\n        },\r\n\r\n        stacks: [],\r\n\r\n        constructor: function(vector) {\r\n            this.props.vector = vector.guid();\r\n        },\r\n        \r\n        create: function(keyframes, duration, easing, callback) {\r\n            return new Animation(keyframes, duration, easing, callback);\r\n        },\r\n\r\n        animate: function(params, duration, easing, callback) {\r\n            var vector = this.vector(),\r\n                reset = _.extend({}, vector.attrs);\r\n\r\n            var scenes, animation;\r\n\r\n            if (params instanceof Animation ) {\r\n                animation = params;\r\n            } else {\r\n                duration = _.defaultTo(duration, this.props.duration);\r\n\r\n                if (_.isFunction(easing)) {\r\n                    callback = easing;\r\n                    easing = this.props.easing;\r\n                }\r\n\r\n                if ( ! easing) {\r\n                    easing = this.props.easing;\r\n                }\r\n\r\n                scenes = {\r\n                    100: params\r\n                };\r\n\r\n                animation = new Animation(scenes, duration, easing, callback);\r\n            }\r\n\r\n            if ( ! animation.count()) {\r\n                animation = null;\r\n                return;\r\n            }\r\n\r\n            reset.transform = vector.attrs.transform;\r\n            reset.matrix = vector.matrix().clone();\r\n\r\n            this.start(\r\n                animation, \r\n                animation.frame(0), \r\n                reset, \r\n                null\r\n            );\r\n\r\n            animation = null;\r\n\r\n            return this;\r\n        },\r\n\r\n        resume: function() {\r\n\r\n        },\r\n\r\n        pause: function() {\r\n\r\n        },\r\n\r\n        stop: function() {\r\n\r\n        },\r\n\r\n        start: function(animation, frame, reset, status) {\r\n            var asize = animation.count();\r\n\r\n            if ( ! asize) {\r\n                animation = null;\r\n                return;\r\n            }\r\n\r\n            var vector = this.vector(),\r\n                ssize = this.stacks.length,\r\n                origin = {},\r\n                delta = {},\r\n                from = {},\r\n                to = {};\r\n\r\n            var scene, queue, last, time, playing, applied, p, i;\r\n\r\n            if (status) {\r\n                for (i = 0; i < ssize; i++) {\r\n                    p = this.stacks[i];\r\n                    if (p.animation == animation) {\r\n                        if (p.frame != frame) {\r\n                            this.stacks.splice(i, 1);\r\n                            applied = 1;\r\n                        } else {\r\n                            playing = p;\r\n                        }\r\n                        vector.attr(p.reset);\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                status = +to;\r\n            }\r\n\r\n            queue = {\r\n                animation: animation,\r\n                vector: vector\r\n            };\r\n\r\n            time = animation.duration();\r\n            last = animation.at(asize - 1).frame;\r\n\r\n            for (i = 0; i < asize; i++) {\r\n                scene = animation.at(i);\r\n                if (scene.frame == frame || scene.frame > status * last) {\r\n\r\n                    queue.prev = animation.at(i - 1);\r\n                    queue.prev = queue.prev ? queue.prev.frame : 0;\r\n\r\n                    queue.frame = scene.frame;\r\n                    queue.duration = time / last * (queue.frame - queue.prev);\r\n\r\n                    queue.next = animation.at(i + 1);\r\n                    queue.next = queue.next ? queue.next.frame : undefined;\r\n\r\n                    queue.last = last;\r\n                    break;\r\n                } else if (status) {\r\n                    vector.attr(scene.params);\r\n                }\r\n            }\r\n\r\n            if ( ! playing) {\r\n\r\n                time = queue.duration;\r\n\r\n                _.forOwn(scene.params, function(v, k){\r\n                    \r\n                    var able = Animation.animable[k];\r\n                    var plugin, matrix, inverse, segments;\r\n                    var i, j, ii, jj;\r\n\r\n                    if (able) {\r\n                        from[k] = vector.attrs[k];\r\n                        from[k] = _.defaultTo(from[k], able.defaults);\r\n                        to[k]   = v;\r\n\r\n                        switch(able.type) {\r\n                            case 'number':\r\n                                delta[k] = (to[k] - from[k]) / time;\r\n                                break;\r\n\r\n                            case 'transform':\r\n                                var eq = equalizeTransform(vector.attrs[k], v);\r\n\r\n                                if (eq.equal) {\r\n                                    from[k]  = eq.from;\r\n                                    to[k]    = eq.to;\r\n                                    delta[k] = [];\r\n                                    delta[k].semantic = true;\r\n                                    for (i = 0, ii = from[k].length; i < ii; i++) {\r\n                                        delta[k][i] = [from[k][i][0]];\r\n                                        for (j = 1, jj = from[k][i].length; j < jj; j++) {\r\n                                            delta[k][i][j] = (to[k][i][j] - from[k][i][j]) / time;\r\n                                        }\r\n                                    }\r\n                                } else {\r\n                                    plugin = vector.plugins.transformer;\r\n                                    segments = Graph.util.transform2segments(to[k]);\r\n\r\n                                    matrix = vector.matrix();\r\n\r\n                                    from[k] = matrix.clone();\r\n                                    inverse = matrix.invert(true);\r\n\r\n                                    vector.graph.matrix = matrix.multiply(inverse);\r\n\r\n                                    _.forEach(segments, function(s){\r\n                                        var cmd = s[0], args = s.slice(1);\r\n                                        plugin[cmd].apply(plugin, args);\r\n                                    });\r\n\r\n                                    matrix = plugin.commit(false, true);\r\n                                    to[k] = matrix.clone();\r\n\r\n                                    delta[k] = {\r\n                                        a: (to[k].props.a - from[k].props.a) / time,\r\n                                        b: (to[k].props.b - from[k].props.b) / time,\r\n                                        c: (to[k].props.c - from[k].props.c) / time,\r\n                                        d: (to[k].props.d - from[k].props.d) / time,\r\n                                        e: (to[k].props.e - from[k].props.e) / time,\r\n                                        f: (to[k].props.f - from[k].props.f) / time\r\n                                    };\r\n\r\n                                    segments = null;\r\n                                    plugin = null;\r\n                                    matrix = null;\r\n                                }\r\n\r\n                                break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n                var timestamp = +new Date;\r\n\r\n                _.extend(queue, {\r\n                    scene: scene,\r\n                    timestamp: timestamp,\r\n                    start: timestamp + animation.delay(),\r\n\r\n                    reset: reset,\r\n                    from: from,\r\n                    to: to,\r\n                    delta: delta,\r\n\r\n                    status: 0,\r\n                    initstatus: status || 0,\r\n\r\n                    stop: false\r\n                });\r\n\r\n                this.stacks.push(queue);\r\n\r\n                if (status && ! playing && ! applied) {\r\n                    queue.stop = true;\r\n                    queue.start = new Date - scene.duration * status;\r\n                    if (this.stacks.length === 1) {\r\n                        return this.player();\r\n                    }\r\n                }\r\n\r\n                if (applied) {\r\n                    queue.start = new Date - scene.duration * status;\r\n                }\r\n\r\n                if (this.stacks.length === 1) {\r\n                    Animator.play(_.bind(this.player, this));\r\n                }\r\n            } else {\r\n                playing.initstatus = status;\r\n                playing.start = new Date - playing.duration * status;\r\n            }\r\n\r\n            this.fire('animstart');\r\n\r\n        },\r\n\r\n        player: function() {\r\n            var timestamp = +new Date, tick = 0;\r\n            var vector, curr, from, prog, anim, time, able, value, key, type, scene, matrix;\r\n            var plugin, matrix, method, args;\r\n            var key, to, ii, jj, i, j;\r\n\r\n            for (; tick < this.stacks.length; tick++) {\r\n                curr = this.stacks[tick];\r\n\r\n                if (curr.paused) {\r\n                    continue;\r\n                }\r\n                \r\n                prog   = timestamp - curr.start;\r\n\r\n                time   = curr.duration;\r\n                vector = curr.vector;\r\n                scene  = curr.scene;\r\n                from   = curr.from;\r\n                to     = curr.to;\r\n                delta  = curr.delta;\r\n                anim   = curr.animation;\r\n\r\n                if (curr.initstatus) {\r\n                    prog = (curr.initstatus * curr.last - curr.prev) / (curr.frame - curr.prev) * time;\r\n                    curr.status = curr.initstatus;\r\n                    delete curr.initstatus;\r\n                    curr.stop && this.stacks.splice(tick--, 1);\r\n                } else {\r\n                    curr.status = (curr.prev + (curr.frame - curr.prev) * (prog / time)) / curr.last;\r\n                }\r\n\r\n                if (prog < 0) {\r\n                    continue;\r\n                }\r\n\r\n                if (prog < time) {\r\n\r\n                    ease = scene.easing(prog / time);\r\n\r\n                    for (key in from) {\r\n                        \r\n                        able = Animation.animable[key];\r\n\r\n                        switch(able.type) {\r\n                            case 'number':\r\n\r\n                                value = +from[key] + ease * time * delta[key];\r\n                                vector.attr(name, value);\r\n\r\n                                break;\r\n                            case 'transform':\r\n\r\n                                // semantic `rotate,scale,translate`\r\n                                if (delta[key].semantic) {\r\n                                    plugin = vector.plugins.transformer;\r\n\r\n                                    for (i = 0, ii = from[key].length; i < ii; i++) {\r\n                                        method = from[key][i][0];\r\n                                        args = [];\r\n\r\n                                        for (j = 1, jj = from[key][i].length; j < jj; j++) {\r\n                                            args.push(from[key][i][j] + ease * time * delta[key][i][j]);\r\n                                        }\r\n\r\n                                        plugin[method].apply(plugin, args);\r\n                                    }\r\n\r\n                                    matrix = plugin.commit(false, true);\r\n\r\n                                    vector.attr('transform', matrix.toValue());\r\n\r\n\r\n                                    matrix = null;\r\n                                    plugin = null;\r\n\r\n                                } else {\r\n                                    matrix = Graph.matrix(\r\n                                        from[key].props.a + ease * time * delta[key].a,\r\n                                        from[key].props.b + ease * time * delta[key].b,\r\n                                        from[key].props.c + ease * time * delta[key].c,\r\n                                        from[key].props.d + ease * time * delta[key].d,\r\n                                        from[key].props.e + ease * time * delta[key].e,\r\n                                        from[key].props.f + ease * time * delta[key].f\r\n                                    );\r\n                                    vector.attr('transform', matrix.toValue());\r\n                                    matrix = null;\r\n                                }\r\n\r\n                                break;\r\n                        }\r\n                    }\r\n\r\n                } else {\r\n\r\n                    for (key in to) {\r\n                        \r\n                        able = Animation.animable[key];\r\n\r\n                        switch(able.type) {\r\n\r\n                            case 'transform':\r\n\r\n                                if (delta[key].semantic) {\r\n                                    plugin = vector.plugins.transformer;\r\n\r\n                                    _.forEach(to[key], function(v){\r\n                                        var cmd = v[0], args = v.slice(1);\r\n                                        plugin[cmd].apply(plugin, args);\r\n                                    });\r\n\r\n                                    matrix = plugin.commit(false, true);\r\n\r\n                                    vector.graph.matrix = matrix;\r\n                                    vector.attr('transform', matrix.toValue());\r\n                                    \r\n                                    matrix = null;\r\n                                    plugin = null;\r\n                                } else {\r\n                                    matrix = to[key].clone();\r\n\r\n                                    vector.graph.matrix = matrix;\r\n                                    vector.attr('transform', matrix.toValue());\r\n\r\n                                    matrix = null;\r\n                                }\r\n                                break;\r\n                            \r\n                            default:\r\n                                vector.attr(key, to[key]);\r\n                                break;\r\n                        }\r\n                    }\r\n                    \r\n                    scene.played++;\r\n\r\n                    this.stacks.splice(tick--, 1);\r\n\r\n                    var repeat = anim.repeat(), \r\n                        played = scene.played;\r\n\r\n                    if ((repeat > 1 && played < repeat) && ! curr.next ) {\r\n                        _.forOwn(anim.scenes, function(s, k){\r\n                            for (var key in s.params) {\r\n                                if (key == 'transform') {\r\n                                    vector.graph.matrix = curr.reset.matrix;\r\n                                    vector.attr('transform', curr.reset.transform);\r\n                                } else {\r\n                                    vector.attr(k, curr.reset[k]);    \r\n                                }\r\n                            }\r\n                        });\r\n\r\n                        this.start(\r\n                            anim,\r\n                            anim.frame(0),\r\n                            curr.reset,\r\n                            null\r\n                        );\r\n                    }\r\n\r\n                    if (curr.next && ! curr.stop) {\r\n                        this.start(\r\n                            anim,\r\n                            curr.next,\r\n                            curr.reset,\r\n                            null\r\n                        );\r\n                    }\r\n\r\n                    if (played >= repeat) {\r\n                        // ___DONE___?\r\n                        curr = null;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.stacks.length) {\r\n                Animator.play(_.bind(this.player, this));\r\n            } else {\r\n                // ___DONE___\r\n            }\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Animator';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n    Animator.play = (function(g){\r\n        var func = g.requestAnimationFrame || \r\n                   g.webkitRequestAnimationFrame || \r\n                   g.mozRequestAnimationFrame || \r\n                   g.oRequestAnimationFrame || \r\n                   g.msRequestAnimationFrame || \r\n                   function (callback) { \r\n                        setTimeout(callback, 16); \r\n                   };\r\n\r\n        return _.bind(func, g);\r\n    }(global));\r\n\r\n    ///////// INTERNAL ANIMATION /////////\r\n    \r\n    var Animation = Graph.extend({\r\n\r\n        props: {\r\n            easing: 'linier',\r\n            duration: 1000,\r\n            repeat: 1,\r\n            delay: 0\r\n        },\r\n        \r\n        scenes: {},\r\n        frames: [],\r\n\r\n        constructor: function(keyframes, duration, easing, callback) {\r\n            this.props.guid = 'graph-anim-' + (++Animation.guid);\r\n            this.props.duration = duration = _.defaultTo(duration, 1000);\r\n\r\n            if (_.isFunction(easing)) {\r\n                if (callback) {\r\n                    this.props.easing = 'function';\r\n                } else {\r\n                    callback = easing;\r\n                    easing = this.props.easing;\r\n                }\r\n            }\r\n\r\n            if ( ! easing) {\r\n                easing = this.props.easing;\r\n            }\r\n\r\n            if (keyframes) {\r\n                var easing = _.isString(easing) ? Animation.easing[easing] : easing,\r\n                    repeat = this.props.repeat,\r\n                    scenes = this.scenes,\r\n                    frames = this.frames;\r\n\r\n                _.forOwn(keyframes, function(f, key){\r\n                    var params = {}, frame, scene;\r\n\r\n                    frame = _.toNumber(key);\r\n\r\n                    params = _.pickBy(f, function(v, k){\r\n                        return !!Animation.animable[k];\r\n                    });\r\n\r\n                    scene = {\r\n                        frame: frame,\r\n                        params: params,\r\n                        easing: easing,\r\n                        callback: callback,\r\n                        played: 0\r\n                    };\r\n\r\n                    frames.push(frame);\r\n                    scenes[frame] = scene;\r\n                });\r\n\r\n                frames.sort(function(a, b){ return a - b });\r\n            }\r\n        },\r\n\r\n        guid: function() {\r\n            return this.props.guid;\r\n        },\r\n\r\n        duration: function() {\r\n            return this.props.duration;\r\n        },\r\n\r\n        easing: function() {\r\n            return this.props.easing;\r\n        },\r\n\r\n        delay: function(delay) {\r\n\r\n            if (delay === undefined) {\r\n                return this.props.delay;\r\n            }\r\n\r\n            var anim = new Animation();\r\n\r\n            anim.frames = this.frames;\r\n            anim.scenes = _.cloneDeep(this.scenes);\r\n            anim.props  = _.cloneDeep(this.props);\r\n            anim.props.delay = delay || 0;\r\n            \r\n            return anim;\r\n        },\r\n\r\n        repeat: function(times) {\r\n\r\n            if (times === undefined) {\r\n                return this.props.repeat;\r\n            }\r\n\r\n            var anim = new Animation();\r\n\r\n            anim.frames = this.frames.slice();\r\n            anim.scenes = _.cloneDeep(this.scenes);\r\n            anim.props  = _.cloneDeep(this.props);\r\n            anim.props.repeat = Math.floor(Math.max(times, 0)) || 1;\r\n\r\n            // reset to scenes\r\n            _.forOwn(anim.scenes, function(s, f){\r\n                s.played = 0;\r\n            });\r\n\r\n            return anim;\r\n        },\r\n\r\n        count: function() {\r\n            return this.frames.length;\r\n        },\r\n\r\n        at: function(index) {\r\n            var frame = this.frame(index);\r\n            return this.scene(frame);\r\n        },\r\n\r\n        frame: function(index) {\r\n            return this.frames[index];\r\n        },\r\n\r\n        scene: function(frame) {\r\n            return this.scenes[frame];\r\n        },\r\n\r\n        destroy: function() {\r\n            this.scenes = null;\r\n            this.frames = null;\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n    _.extend(Animation, {\r\n        guid: 0,\r\n\r\n        animable: {\r\n             x: { type: 'number', defaults: 0 },\r\n             y: { type: 'number', defaults: 0 },\r\n            cx: { type: 'number', defaults: 0 },\r\n            cy: { type: 'number', defaults: 0 },\r\n            transform: { type: 'transform', defaults: '' }\r\n        },\r\n\r\n        easing: {\r\n            linier: function(n) {\r\n                return n;\r\n            },\r\n\r\n            easeIn: function(n) {\r\n                return Math.pow(n, 1.7);\r\n            },\r\n\r\n            easeOut: function(n) {\r\n                return Math.pow(n, .48);\r\n            },\r\n\r\n            easeInOut: function(n) {\r\n                var q = .48 - n / 1.04,\r\n                    Q = Math.sqrt(.1734 + q * q),\r\n                    x = Q - q,\r\n                    X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\r\n                    y = -Q - q,\r\n                    Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\r\n                    t = X + Y + .5;\r\n                return (1 - t) * 3 * t * t + t * t * t;\r\n            },\r\n\r\n            backIn: function(n) {\r\n                var s = 1.70158;\r\n                return n * n * ((s + 1) * n - s);\r\n            },\r\n\r\n            backOut: function (n) {\r\n                n = n - 1;\r\n                var s = 1.70158;\r\n                return n * n * ((s + 1) * n + s) + 1;\r\n            },\r\n\r\n            elastic: function (n) {\r\n                if (n == !!n) {\r\n                    return n;\r\n                }\r\n                return pow(2, -10 * n) * math.sin((n - .075) * (2 * PI) / .3) + 1;\r\n            },\r\n\r\n            bounce: function (n) {\r\n                var s = 7.5625,\r\n                    p = 2.75,\r\n                    l;\r\n                if (n < (1 / p)) {\r\n                    l = s * n * n;\r\n                } else {\r\n                    if (n < (2 / p)) {\r\n                        n -= (1.5 / p);\r\n                        l = s * n * n + .75;\r\n                    } else {\r\n                        if (n < (2.5 / p)) {\r\n                            n -= (2.25 / p);\r\n                            l = s * n * n + .9375;\r\n                        } else {\r\n                            n -= (2.625 / p);\r\n                            l = s * n * n + .984375;\r\n                        }\r\n                    }\r\n                }\r\n                return l;\r\n            }\r\n        }\r\n    });\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function equalizeTransform (t1, t2) {\r\n        t2 = _.toString(t2).replace(/\\.{3}|\\u2026/g, t1);\r\n        t1 = Graph.util.transform2segments(t1) || [];\r\n        t2 = Graph.util.transform2segments(t2) || [];\r\n        \r\n        var maxlength = Math.max(t1.length, t2.length),\r\n            from = [],\r\n            to = [],\r\n            i = 0, j, jj,\r\n            tt1, tt2;\r\n\r\n        for (; i < maxlength; i++) {\r\n            tt1 = t1[i] || emptyTransform(t2[i]);\r\n            tt2 = t2[i] || emptyTransform(tt1);\r\n\r\n            if ((tt1[0] != tt2[0]) ||\r\n                (tt1[0].toLowerCase() == \"rotate\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3])) ||\r\n                (tt1[0].toLowerCase() == \"scale\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4]))) {\r\n                return {\r\n                    equal: false,\r\n                    from: tt1,\r\n                    to: tt2\r\n                }\r\n            }\r\n            from[i] = [];\r\n            to[i] = [];\r\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\r\n                j in tt1 && (from[i][j] = tt1[j]);\r\n                j in tt2 && (to[i][j] = tt2[j]);\r\n            }\r\n        }\r\n        return {\r\n            equal: true,\r\n            from: from,\r\n            to: to\r\n        };\r\n    }\r\n\r\n    function emptyTransform(item) {\r\n        var l = item[0];\r\n        switch (l.toLowerCase()) {\r\n            case \"translate\": return [l, 0, 0];\r\n            case \"matrix\": return [l, 1, 0, 0, 1, 0, 0];\r\n            case \"rotate\": if (item.length == 4) {\r\n                return [l, 0, item[2], item[3]];\r\n            } else {\r\n                return [l, 0];\r\n            }\r\n            case \"scale\": if (item.length == 5) {\r\n                return [l, 1, 1, item[3], item[4]];\r\n            } else if (item.length == 3) {\r\n                return [l, 1, 1];\r\n            } else {\r\n                return [l, 1];\r\n            }\r\n        }\r\n    }\r\n\r\n}());","\r\n(function(){\r\n    \r\n    Graph.plugin.Resizer = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            vector: null,\r\n            enabled: true,\r\n            suspended: true,\r\n            restriction: null,\r\n            handleImage: null,\r\n            handleSize: null,\r\n            rendered: false\r\n        },\r\n\r\n        components: {\r\n            holder: null,\r\n            helper: null,\r\n            handle: null\r\n        },\r\n\r\n        trans: {\r\n            // original offset\r\n            ox: 0,\r\n            oy: 0,\r\n\r\n            // original\r\n            ow: 0,\r\n            oh: 0,\r\n\r\n            // current\r\n            cw: 0,\r\n            ch: 0,\r\n\r\n            // translation\r\n            dx: 0,\r\n            dy: 0\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var me = this, guid = vector.guid();\r\n            \r\n            options = options || {};\r\n\r\n            _.assign(me.props, options);\r\n\r\n            vector.addClass('graph-resizable');\r\n\r\n            me.props.handleImage = Graph.config.base + 'img/' + Graph.config.resizer.image;\r\n            me.props.handleSize = Graph.config.resizer.size;\r\n\r\n            me.props.vector = guid;\r\n\r\n            me.cached.snapping = null;\r\n            me.cached.vertices = null;\r\n\r\n            me.initComponent();\r\n        },\r\n        \r\n        holder: function() {\r\n            return Graph.registry.vector.get(this.components.holder);\r\n        },\r\n\r\n        helper: function() {\r\n            return Graph.registry.vector.get(this.components.helper);\r\n        },\r\n\r\n        handle: function(dir) {\r\n            return Graph.registry.vector.get(this.components.handle[dir]);\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = me.components;\r\n            var holder, helper;\r\n\r\n            holder = (new Graph.svg.Group())\r\n                .addClass('graph-resizer')\r\n                .removeClass('graph-elem graph-elem-group');\r\n\r\n            holder.elem.group('graph-resizer');\r\n\r\n            holder.on({\r\n                render: _.bind(me.onHolderRender, me)\r\n            });\r\n            \r\n            helper = (new Graph.svg.Rect(0, 0, 0, 0, 0))\r\n                .addClass('graph-resizer-helper')\r\n                .removeClass('graph-elem graph-elem-rect')\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(holder);\r\n\r\n            helper.elem.group('graph-resizer');\r\n\r\n            comp.handle = {};\r\n\r\n            var handle = {\r\n                ne: {ghost: false, cursor: 'nesw-resize'},\r\n                se: {ghost: false, cursor: 'nwse-resize'},\r\n                sw: {ghost: false, cursor: 'nesw-resize'},\r\n                nw: {ghost: false, cursor: 'nwse-resize'},\r\n                 n: {ghost: false, cursor: 'ns-resize', axis: 'y'},\r\n                 e: {ghost: false, cursor: 'ew-resize', axis: 'x'},\r\n                 s: {ghost: false, cursor: 'ns-resize', axis: 'y'},\r\n                 w: {ghost: false, cursor: 'ew-resize', axis: 'x'}\r\n            };\r\n\r\n            _.forOwn(handle, function(c, dir){\r\n                (function(dir){\r\n                    var h = (new Graph.svg.Image(\r\n                        me.props.handleImage,\r\n                        0,\r\n                        0,\r\n                        me.props.handleSize,\r\n                        me.props.handleSize\r\n                    ))\r\n                    .selectable(false)\r\n                    .removeClass('graph-elem graph-elem-image')\r\n                    .addClass('graph-resizer-handle handle-' + dir);\r\n\r\n                    h.elem.group('graph-resizer');\r\n                    h.props.dir = dir;\r\n                    h.draggable(c);\r\n                    \r\n                    h.on('beforedrag', _.bind(me.onHandleBeforeDrag, me));\r\n                    h.on('drag', _.bind(me.onHandleDrag, me));\r\n                    h.on('afterdrag', _.bind(me.onHandleAfterDrag, me));\r\n\r\n                    h.render(holder);\r\n\r\n                    comp.handle[dir] = h.guid();\r\n                    h = null;\r\n                }(dir));\r\n            });\r\n\r\n            comp.holder = holder.guid();\r\n            comp.helper = helper.guid();\r\n\r\n            holder = null;\r\n            helper = null;\r\n            handle = null;\r\n        },\r\n\r\n        invalidate: function()  {\r\n            this.superclass.prototype.invalidate.call(this);\r\n            this.cached.vertices = null;\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.enabled = false;\r\n        },\r\n\r\n        enable: function() {\r\n            this.props.enabled = true;\r\n        },\r\n\r\n        render: function() {\r\n            var me = this;\r\n\r\n            if (me.props.rendered) {\r\n                me.redraw();\r\n                return;\r\n            }\r\n\r\n            me.holder().render(me.vector().parent());\r\n            me.props.rendered = true;\r\n            me.redraw();\r\n        },\r\n\r\n        snap: function(snap) {\r\n            this.cached.snapping = snap;\r\n        },\r\n\r\n        vertices: function() {\r\n            var me = this,\r\n                vector = me.vector(),\r\n                vertices = me.cached.vertices;\r\n\r\n            if ( ! vertices) {\r\n                // get original bounding\r\n                var path, bbox, rotate;\r\n                var ro, cx, cy, ox, oy, hs, hw, hh;\r\n\r\n                path = vector.shape();\r\n                bbox = path.bbox().toJson();\r\n                // rotate = vector.matrixCurrent().rotate();\r\n                rotate = vector.matrix().rotate();\r\n\r\n                ro = rotate.deg;\r\n                cx = 0;\r\n                cy = 0;\r\n                ox = bbox.x;\r\n                oy = bbox.y;\r\n                hs = me.props.handleSize / 2;\r\n                \r\n                if (ro) {\r\n                    var rmatrix = Graph.matrix(),\r\n                        path = vector.shapeRelative();\r\n\r\n                    cx = bbox.x + bbox.width / 2,\r\n                    cy = bbox.y + bbox.height / 2;\r\n\r\n                    rmatrix.rotate(-ro, cx, cy);\r\n\r\n                    path = path.transform(rmatrix);\r\n                    bbox = path.bbox().toJson();\r\n                } else {\r\n                    var vmatrix = vector.matrix();\r\n                    path = path.transform(vmatrix);\r\n                    bbox = path.bbox().toJson();\r\n                }\r\n                \r\n\r\n                hw = bbox.width / 2;\r\n                hh = bbox.height / 2;\r\n\r\n                vertices = {\r\n                    ne: {\r\n                        x: bbox.x + bbox.width - hs,\r\n                        y: bbox.y - hs\r\n                    },\r\n\r\n                    se: {\r\n                        x: bbox.x + bbox.width - hs,\r\n                        y: bbox.y + bbox.height - hs\r\n                    },\r\n\r\n                    sw: {\r\n                        x: bbox.x - hs,\r\n                        y: bbox.y + bbox.height - hs\r\n                    },\r\n\r\n                    nw: {\r\n                        x: bbox.x - hs,\r\n                        y: bbox.y - hs\r\n                    },\r\n\r\n                    n: {\r\n                        x: bbox.x + hw - hs,\r\n                        y: bbox.y - hs\r\n                    },\r\n                    e: {\r\n                        x: bbox.x + bbox.width - hs,\r\n                        y: bbox.y + hh - hs\r\n                    },\r\n                    s: {\r\n                        x: bbox.x + hw - hs,\r\n                        y: bbox.y + bbox.height - hs\r\n                    },\r\n                    w: {\r\n                        x: bbox.x - hs,\r\n                        y: bbox.y + hh - hs\r\n                    },\r\n\r\n                    rotate: {\r\n                        deg: ro,\r\n                        cx: cx,\r\n                        cy: cy\r\n                    },\r\n\r\n                    box: {\r\n                        x: bbox.x,\r\n                        y: bbox.y,\r\n                        width: bbox.width,\r\n                        height: bbox.height\r\n                    },\r\n\r\n                    offset: {\r\n                        x: ox,\r\n                        y: oy\r\n                    }\r\n                };\r\n\r\n                this.cached.vertices = vertices;\r\n            }\r\n\r\n            return vertices;\r\n        },\r\n\r\n        redraw: function() {\r\n            var me = this,\r\n                helper = me.helper(),\r\n                holder = me.holder();\r\n\r\n            var vx;\r\n\r\n            if ( ! holder) {\r\n                return;\r\n            }\r\n\r\n            vx = this.vertices();\r\n\r\n            if ( ! vx) {\r\n                return;\r\n            }\r\n            \r\n            helper.reset();\r\n\r\n            helper.attr({\r\n                x: vx.box.x,\r\n                y: vx.box.y,\r\n                width: vx.box.width,\r\n                height: vx.box.height\r\n            });\r\n\r\n            helper.rotate(vx.rotate.deg, vx.rotate.cx, vx.rotate.cy).commit();\r\n\r\n            _.forOwn(me.components.handle, function(id, dir){\r\n                (function(id, dir){\r\n                    var h = me.handle(dir);\r\n                    h.show();\r\n                    h.reset();\r\n                    h.attr(vx[dir]);\r\n                    h.rotate(vx.rotate.deg, vx.rotate.cx, vx.rotate.cy).commit();\r\n                }(id, dir));\r\n            });\r\n\r\n            me.trans.ox = vx.offset.x;\r\n            me.trans.oy = vx.offset.y;\r\n            me.trans.ow = this.trans.cw = vx.box.width;\r\n            me.trans.oh = this.trans.ch = vx.box.height;\r\n            me.trans.dx = 0;\r\n            me.trans.dy = 0;\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.holder().elem.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            if ( ! this.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            if (this.props.suspended) {\r\n                this.props.suspended = false;\r\n\r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else { \r\n                    this.vector().parent().elem.append(this.holder().elem);\r\n                    this.redraw();\r\n                }\r\n            }\r\n        },\r\n\r\n        restrict: function(options) {\r\n            _.assign(this.props, {\r\n                restriction: options\r\n            });\r\n        },\r\n\r\n        setupRestriction: function(handle) {\r\n            var me = this,\r\n                restriction = this.props.restriction || {},\r\n                vector = me.vector(),\r\n                paper = vector.paper(),\r\n                layout = paper.layout(),\r\n                dir = handle.props.dir,\r\n                width = +restriction.width || 0,\r\n                height = +restriction.height || 0,\r\n                MAX_VALUE = Number.MAX_SAFE_INTEGER;\r\n\r\n            var bounds = {\r\n                top: -MAX_VALUE,\r\n                left: -MAX_VALUE,\r\n                right: MAX_VALUE,\r\n                bottom: MAX_VALUE\r\n            };\r\n\r\n            var origin;\r\n            \r\n            if (restriction.origin === undefined) {\r\n                var box = vector.bboxView().toJson();\r\n                origin = getRestrictOrigin(handle, box);\r\n            } else {\r\n                origin = _.extend({x: 0, y: 0}, restriction.origin);\r\n            }\r\n\r\n            switch(dir) {\r\n                case 'n':\r\n                    bounds.bottom = origin.y - height;\r\n                    break;\r\n                case 'e':\r\n                    bounds.left = origin.x + width;\r\n                    break;\r\n                case 's':\r\n                    bounds.top = origin.y + height;\r\n                    break;\r\n                case 'w':\r\n                    bounds.right = origin.x - width;\r\n                    break;\r\n                case 'ne':\r\n                    bounds.left = origin.x + width;\r\n                    bounds.bottom = origin.y - height;\r\n                    break;\r\n                case 'se':\r\n                    bounds.top = origin.y + height;\r\n                    bounds.left = origin.x + width;\r\n                    break;\r\n                case 'sw':\r\n                    bounds.right = origin.x - width;\r\n                    bounds.top = origin.y + height;\r\n                    break;\r\n                case 'nw':\r\n                    bounds.right = origin.x - width;\r\n                    bounds.bottom = origin.y - height;\r\n                    break;\r\n            }\r\n\r\n            handle.draggable().restrict(bounds);\r\n\r\n        },\r\n        \r\n        onHolderRender: function(e) {\r\n            \r\n        },\r\n\r\n        onHandleBeforeDrag: function(e) {\r\n            var me = this, \r\n                vector = me.vector(), \r\n                handle = e.publisher;\r\n\r\n            me.fire('beforeresize', {\r\n                resizer: this,\r\n                direction: handle.props.dir\r\n            });\r\n\r\n            if (vector.isRotatable()) {\r\n                vector.rotatable().suspend();\r\n            }\r\n\r\n            _.forOwn(me.components.handle, function(id, dir){\r\n                var h = me.handle(dir);\r\n                if (h !== handle) {\r\n                    h.hide();\r\n                }\r\n            });\r\n\r\n            var snapping = this.cached.snapping;\r\n\r\n            if (snapping && handle.draggable().snap() !== snapping) {\r\n                handle.draggable().snap(snapping);    \r\n            }\r\n            \r\n            if (this.props.restriction) {\r\n                this.setupRestriction(handle);    \r\n            }\r\n\r\n            handle.show();\r\n            handle.removeClass('dragging');\r\n        },\r\n\r\n        onHandleDrag: function(e) {\r\n            var me = this, \r\n                helper = me.helper(), \r\n                handle = e.publisher;\r\n            \r\n            var tr = this.trans,\r\n                dx = e.dx,\r\n                dy = e.dy;\r\n\r\n            switch(handle.props.dir) {\r\n                case 'ne':\r\n                    tr.cw += dx;\r\n                    tr.ch -= dy;\r\n\r\n                    me.trans.dy += dy;\r\n                    helper.translate(0, dy).commit();\r\n                    break;\r\n\r\n                case 'se':\r\n                    tr.cw += dx;\r\n                    tr.ch += dy;\r\n\r\n                    break;\r\n\r\n                case 'sw':\r\n                    tr.cw -= dx;\r\n                    tr.ch += dy;\r\n\r\n                    me.trans.dx += dx;\r\n                    helper.translate(dx, 0).commit();\r\n                    break;\r\n\r\n                case 'nw':\r\n                    tr.cw -= dx;\r\n                    tr.ch -= dy;\r\n\r\n                    me.trans.dx += dx;\r\n                    me.trans.dy += dy;\r\n                    helper.translate(dx, dy).commit();\r\n                    break;\r\n\r\n                case 'n':\r\n                    tr.cw += 0;\r\n                    tr.ch -= dy;\r\n\r\n                    me.trans.dy += dy;\r\n                    helper.translate(0, dy).commit();\r\n                    break;\r\n\r\n                case 'e':\r\n                    tr.cw += dx;\r\n                    tr.ch += 0;\r\n\r\n                    break;\r\n\r\n                case 's':\r\n                    tr.cw += 0;\r\n                    tr.ch += dy;\r\n                    break;\r\n\r\n                case 'w':\r\n                    tr.cw -= dx;\r\n                    tr.ch += 0;\r\n\r\n                    me.trans.dx += dx;\r\n                    helper.translate(dx, 0).commit();\r\n                    break;\r\n            }\r\n\r\n            helper.attr({\r\n                width:  tr.cw,\r\n                height: tr.ch\r\n            });\r\n\r\n        },\r\n\r\n        onHandleAfterDrag: function(e) {\r\n            var me = this,\r\n                tr = this.trans,\r\n                handle = e.publisher;\r\n\r\n            var sx, sy, cx, cy, dx, dy;\r\n\r\n            sx = tr.ow > 0 ? (tr.cw / tr.ow) : 1;\r\n            sy = tr.oh > 0 ? (tr.ch / tr.oh) : 1;\r\n            dx = tr.dx;\r\n            dy = tr.dy;\r\n\r\n            switch(handle.props.dir) {\r\n                case 'ne':\r\n                    cx = tr.ox;\r\n                    cy = tr.oy + tr.oh;\r\n                    break;\r\n                case 'se':\r\n                    cx = tr.ox;\r\n                    cy = tr.oy;\r\n                    break;\r\n                case 'sw':\r\n                    cx = tr.ox + tr.ow;\r\n                    cy = tr.oy;\r\n                    break;\r\n                case 'nw':\r\n                    cx = tr.ox + tr.ow;\r\n                    cy = tr.oy + tr.oh;\r\n                    break;\r\n                case 'n':\r\n                    cx = tr.ox + tr.ow / 2;\r\n                    cy = tr.oy + tr.oh;\r\n                    break;\r\n                case 'e':\r\n                    cx = tr.ox;\r\n                    cy = tr.oy + tr.oh / 2;\r\n                    break;\r\n                case 's':\r\n                    cx = tr.ox + tr.ow / 2;\r\n                    cy = tr.oy;\r\n                    break;\r\n                case 'w':\r\n                    cx = tr.ox + tr.ow;\r\n                    cy = tr.oy + tr.oh / 2;\r\n                    break;\r\n            }\r\n\r\n            // track translation\r\n            var vector = me.vector(),\r\n                oldcen = vector.bbox().center().toJson(),\r\n                resize = vector.resize(sx, sy, cx, cy, dx, dy),\r\n                newcen = vector.bbox().center().toJson();\r\n\r\n            var vdx = newcen.x - oldcen.x,\r\n                vdy = newcen.y - oldcen.y;\r\n\r\n            resize.translate.dx = vdx;\r\n            resize.translate.dy = vdy;\r\n            \r\n            me.redraw();\r\n            me.fire('afterresize', resize);\r\n\r\n            if (vector.isRotatable()) {\r\n                vector.rotatable().resume();\r\n            }\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Resizer';\r\n        },\r\n\r\n        destroy: function() {\r\n            // remove handles\r\n            var me = this\r\n\r\n            _.forOwn(me.components.handle, function(id, dir){\r\n                var h = me.handle(dir);\r\n                h.remove();\r\n            });\r\n\r\n            me.components.handle = null;\r\n\r\n            // remove helper\r\n            me.helper().remove();\r\n            me.components.helper = null;\r\n\r\n            // remove holder\r\n            me.holder().remove();\r\n            me.components.holder = null;\r\n\r\n            // remove listeners\r\n            me.listeners = null;\r\n        }\r\n        \r\n    });\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function getRestrictOrigin(handle, box) {\r\n        var origin = {\r\n            x: box.x,\r\n            y: box.y\r\n        };\r\n\r\n        switch(handle.props.dir) {\r\n            case 'n':\r\n                origin.x = (box.x + box.x2) / 2;\r\n                origin.y = box.y2;\r\n                break;\r\n            case 'e':\r\n                origin.x = box.x;\r\n                origin.y = (box.y + box.y2) / 2;\r\n                break;\r\n            case 's':\r\n                origin.x = (box.x + box.x2) / 2;\r\n                origin.y = box.y;\r\n                break;\r\n            case 'w':\r\n                origin.x = box.x2;\r\n                origin.y = (box.y + box.y2) / 2;\r\n                break;\r\n            case 'ne':\r\n                origin.x = box.x;\r\n                origin.y = box.y2;\r\n                break;\r\n            case 'se':\r\n                origin.x = box.x;\r\n                origin.y = box.y;\r\n                break;\r\n            case 'sw':\r\n                origin.x = box.x2;\r\n                origin.y = box.y;\r\n                break;\r\n            case 'nw':\r\n                origin.x = box.x2;\r\n                origin.y = box.y2;\r\n                break;\r\n        }\r\n\r\n        return origin;\r\n    }\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Rotator = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n            enabled: true,\r\n            suspended: true,\r\n            handleImage: null,\r\n            handleSize: null,\r\n            rendered: false\r\n        },\r\n\r\n        components: {\r\n            helper: null,\r\n            handle: null,\r\n            holder: null,\r\n            circle: null,\r\n            radius: null\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var guid = vector.guid();\r\n\r\n            options = options || {};\r\n\r\n            _.assign(this.props, options);\r\n\r\n            this.props.vector = guid;\r\n            this.props.handleImage = Graph.config.base + 'img/' + Graph.config.rotator.image;\r\n            this.props.handleSize = Graph.config.rotator.size;\r\n\r\n            this.initComponent();\r\n        },\r\n\r\n        invalidate: function()  {\r\n            this.superclass.prototype.invalidate.call(this);\r\n        },\r\n\r\n        initComponent: function() {\r\n            var holder, helper, handle, circle, radius;\r\n\r\n            holder = (new Graph.svg.Group())    \r\n                .removeClass(Graph.styles.VECTOR)\r\n                .addClass('graph-rotator');\r\n\r\n            holder.elem.group('graph-rotator');\r\n            holder.on('render.rotator', _.bind(this.setup, this));\r\n\r\n            helper = (new Graph.svg.Rect(0, 0, 0, 0, 0))\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .addClass('graph-rotator-helper')\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(holder);\r\n\r\n            handle = (new Graph.svg.Image(\r\n                this.props.handleImage, \r\n                0, \r\n                0, \r\n                this.props.handleSize - 2, \r\n                this.props.handleSize\r\n            ))\r\n            .selectable(false)\r\n            .removeClass(Graph.styles.VECTOR)\r\n            .addClass('graph-rotator-handle')\r\n            .render(holder);\r\n\r\n            handle.elem.group('graph-rotator');\r\n\r\n            radius = (new Graph.svg.Line())\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .render(holder);\r\n\r\n            circle = (new Graph.svg.Circle(0, 0, 5))\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .render(holder);\r\n\r\n            this.components.helper = helper.guid();\r\n            this.components.handle = handle.guid();\r\n            this.components.holder = holder.guid();\r\n            this.components.circle = circle.guid();\r\n            this.components.radius = radius.guid();\r\n            this.suspendHelper();\r\n\r\n            holder = handle = helper = circle = radius = null;\r\n        },\r\n\r\n        setup: function() {\r\n\r\n            var me = this,\r\n                vector = this.vector(),\r\n                layout = vector.paper().layout(),\r\n                helper = this.helper(),\r\n                handle = this.handle(),\r\n                holder = this.holder(),\r\n                radius = this.radius(),\r\n                handleNode = handle.node();\r\n\r\n            var trans = {\r\n                scale: null,\r\n                center: null,\r\n                translate: null,\r\n                move: null,\r\n                rotate: null,\r\n                snaps: null,\r\n                resizing: null\r\n            };\r\n\r\n            handle.interactable().draggable({\r\n                manualStart: true,\r\n                onstart: function(e) {\r\n\r\n                    var matrix = vector.matrix();\r\n                    var center, radian;\r\n\r\n                    trans.scale = layout.scale();\r\n                    trans.origin = handle.bbox().center().toJson();\r\n                    trans.target = {x: trans.origin.x, y: trans.origin.y};\r\n                    trans.move = {x: 0, y: 0};\r\n                    trans.rotate = matrix.rotate().deg;\r\n                    trans.snaps = [0, 45, 90, -135, -180, -225, -90, -45];\r\n                    trans.resizing = vector.isResizable() && vector.resizable().props.suspended === false;\r\n                    \r\n                    center = helper.bbox().center().toJson();\r\n                    trans.center = center;\r\n\r\n                    radian = holder.matrixCurrent().rotate().rad;\r\n                    trans.radian = {\r\n                        sin: Math.sin(radian),\r\n                        cos: Math.cos(radian)\r\n                    };\r\n\r\n                    if (trans.resizing) {\r\n                        vector.resizable().suspend();\r\n                    }\r\n\r\n                    me.resumeHelper();\r\n                },\r\n                onmove: function(e) {\r\n                    var edx = e.dx,\r\n                        edy = e.dy;\r\n\r\n                    var transform, rad, deg, dx, dy, tx, ty;\r\n\r\n                    trans.matrix = new Graph.lang.Matrix();\r\n\r\n                    // scaling\r\n                    edx /= trans.scale.x;\r\n                    edy /= trans.scale.y;\r\n\r\n                    // radian\r\n                    dx = edx *  trans.radian.cos + edy * trans.radian.sin;\r\n                    dy = edx * -trans.radian.sin + edy * trans.radian.cos;\r\n\r\n                    trans.move.x += dx;\r\n                    trans.move.y += dy;\r\n\r\n                    tx = trans.move.x + trans.origin.x;\r\n                    ty = trans.move.y + trans.origin.y;\r\n\r\n                    trans.target = {x: tx, y: ty};\r\n\r\n                    // rad = Math.atan2((ty - trans.center.y), (tx - trans.center.x));\r\n                    rad = Math.atan2((trans.center.y - ty), (trans.center.x - tx));\r\n                    deg = Math.round(rad * 180 / Math.PI - 90);\r\n\r\n                    // snapping\r\n                    deg = Graph.util.snapValue(deg, trans.snaps, 5);\r\n                    \r\n                    trans.matrix.rotate(deg, trans.center.x, trans.center.y);\r\n                    trans.rotate = deg;\r\n\r\n                    transform = trans.matrix.toValue();\r\n\r\n                    handle.attr('transform', transform);\r\n                    helper.attr('transform', transform);\r\n                    radius.attr('transform', transform);\r\n                },\r\n\r\n                onend: function() {\r\n                    var vmatrix = vector.matrix(),\r\n                        vcenter = vector.bboxPristine().center().toJson(),\r\n                        vrotate = vmatrix.rotate().deg,\r\n                        drotate = trans.rotate - vrotate;\r\n\r\n                    var cx, cy;\r\n\r\n                    cx = vcenter.x;\r\n                    cy = vcenter.y;\r\n\r\n                    vmatrix.rotate(drotate, cx, cy);\r\n                    vector.attr('transform', vmatrix.toValue());\r\n                    vector.dirty(true);\r\n\r\n                    me.redraw();\r\n\r\n                    if (trans.resizing) {\r\n                        vector.resizable().resume();\r\n                    }\r\n\r\n                    me.fire('afterrotate', {\r\n                        deg: trans.rotate - 90,\r\n                        cx: cx,\r\n                        cy: cy\r\n                    });\r\n\r\n                }\r\n            })\r\n            .on('down', function(e){\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            })\r\n            .on('move', function(e){\r\n                if (me.props.enabled) {\r\n                    var i = e.interaction;\r\n                    if (i.pointerIsDown && ! i.interacting()) {\r\n                        var a = {name: 'drag'};\r\n                        i.prepared.name = a.name;\r\n                        i.setEventXY(i.startCoords, i.pointers);\r\n\r\n                        if (e.currentTarget === handleNode) {\r\n                            i.start(a, e.interactable, handleNode);    \r\n                        }\r\n                    }    \r\n                }\r\n            });\r\n        },\r\n\r\n        holder: function() {\r\n            return Graph.registry.vector.get(this.components.holder);\r\n        },\r\n\r\n        helper: function() {\r\n            return Graph.registry.vector.get(this.components.helper);\r\n        },\r\n\r\n        circle: function() {\r\n            return Graph.registry.vector.get(this.components.circle);\r\n        },\r\n\r\n        radius: function() {\r\n            return Graph.registry.vector.get(this.components.radius);\r\n        },\r\n\r\n        handle: function() {\r\n            return Graph.registry.vector.get(this.components.handle);\r\n        },\r\n\r\n        resume: function() {\r\n            if ( ! this.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            if (this.props.suspended) {\r\n                this.props.suspended = false;\r\n\r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else {\r\n                    this.vector().parent().elem.append(this.holder().elem);\r\n                    this.redraw();\r\n                }\r\n            }\r\n        },\r\n\r\n        resumeHelper: function() {\r\n            var vector, key;\r\n            for (key in this.components) {\r\n                if (['holder', 'handle'].indexOf(key) === -1) {\r\n                    vector = this[key]();\r\n                    vector && vector.show();\r\n                }\r\n            }\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.holder().elem.detach();\r\n        },\r\n\r\n        suspendHelper: function() {\r\n            var vector, key;\r\n            for (key in this.components) {\r\n                if (['holder', 'handle'].indexOf(key) === -1) {\r\n                    vector = this[key]();\r\n                    vector && vector.hide();\r\n                }\r\n            }\r\n        },\r\n\r\n        render: function() {\r\n            if (this.props.rendered) {\r\n                this.redraw();\r\n                return;\r\n            }\r\n\r\n            this.props.rendered = true;\r\n            this.holder().render(this.vector().parent());\r\n            this.redraw();\r\n        },\r\n\r\n        redraw: function() {\r\n            \r\n            var vector = this.vector(),\r\n                holder = this.holder(),\r\n                helper = this.helper(),\r\n                handle = this.handle(),\r\n                circle = this.circle(),\r\n                radius = this.radius(),\r\n                rotate = vector.matrix().rotate().deg;\r\n\r\n            var bound = vector.bbox().toJson(),\r\n                edge = 30;\r\n\r\n            var cx, cy;\r\n\r\n            if (rotate) {\r\n                var rmatrix = Graph.matrix(),\r\n                    rpath = vector.shapeRelative();\r\n\r\n                cx = bound.x + bound.width / 2,\r\n                cy = bound.y + bound.height / 2;\r\n\r\n                rmatrix.rotate(-rotate, cx, cy);\r\n\r\n                rpath = rpath.transform(rmatrix);\r\n                bound = rpath.bbox().toJson();\r\n\r\n            } else {\r\n                var vmatrix = vector.matrix(),\r\n                    vpath = vector.shape();\r\n\r\n                vpath = vpath.transform(vmatrix);\r\n                bound = vpath.bbox().toJson();\r\n\r\n                cx = bound.x + bound.width / 2;\r\n                cy = bound.y + bound.height / 2;\r\n            }\r\n\r\n            \r\n\r\n            // reset first\r\n            helper.reset();\r\n            handle.reset();\r\n            radius.reset();\r\n\r\n            helper.attr({\r\n                x: bound.x,\r\n                y: bound.y,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            var hw = (this.props.handleSize - 2) / 2,\r\n                hh = (this.props.handleSize) / 2,\r\n                hx = cx - hw,\r\n                hy = bound.y - edge - hh;\r\n\r\n            circle.attr({\r\n                cx: cx, \r\n                cy: cy\r\n            });\r\n\r\n            handle.attr({\r\n                x: hx, \r\n                y: hy\r\n            });\r\n\r\n            radius.attr({\r\n                x1: cx,\r\n                y1: cy,\r\n                x2: cx,\r\n                y2:  bound.y - edge + hh\r\n            });\r\n\r\n            handle.rotate(rotate, cx, cy).commit();\r\n            helper.rotate(rotate, cx, cy).commit();\r\n            radius.rotate(rotate, cx, cy).commit();\r\n\r\n            holder = helper = bound = handle = radius = circle = null;\r\n        },\r\n\r\n        destroy: function() {\r\n            var key, cmp;\r\n\r\n            for (key in this.components) {\r\n                cmp = this[key]();\r\n                if (cmp) {\r\n                    cmp.remove();\r\n                    this.components[key] = cmp = null;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Collector = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            enabled: false,\r\n            suspended: true,\r\n            rendered: false,\r\n            activator: 'tool',\r\n            ready: false\r\n        },\r\n\r\n        paper: null,\r\n\r\n        collection: [],\r\n\r\n        components: {\r\n            rubber: null\r\n        },\r\n\r\n        collecting: {\r\n            enabled: false\r\n        },\r\n\r\n        constructor: function(paper) {\r\n            var me = this;\r\n\r\n            if ( ! paper.isPaper()) {\r\n                throw Graph.error('Collector tool only available for paper !');\r\n            }\r\n\r\n            me.paper = paper;\r\n            me.components.rubber = Graph.$('<div class=\"graph-rubberband\">');\r\n            me.collection = new Graph.collection.Vector();\r\n\r\n            paper.on('keynavdown', _.bind(me.onKeynavDown, me));\r\n            paper.on('keynavup', _.bind(me.onKeynavUp, me));\r\n\r\n            if (me.paper.props.rendered) {\r\n                me.setup();\r\n            } else {\r\n                me.paper.on('render', function(){\r\n                    me.setup();\r\n                });\r\n            }\r\n        },\r\n\r\n        enable: function(activator) {\r\n            this.props.enabled = true;\r\n            this.props.activator = activator;\r\n\r\n            this.paper.cursor('crosshair');\r\n            this.paper.state('collecting');\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.enabled = false;\r\n            this.paper.cursor('default');\r\n        },\r\n\r\n        setup: function() {\r\n            var me = this;\r\n\r\n            if (me.props.ready) {\r\n                return;\r\n            }\r\n\r\n            me.props.ready = true;\r\n\r\n            var collecting = me.collecting,\r\n                paper = me.paper,\r\n                layout = paper.layout(),\r\n                position = layout.position(),\r\n                rubber = me.components.rubber,\r\n                vendor = paper.interactable().vendor();\r\n\r\n            vendor.styleCursor(false);\r\n\r\n            vendor.draggable({\r\n\r\n                manualStart: true,\r\n\r\n                onstart: function(e) {\r\n                    _.assign(collecting, {\r\n                        enabled: true,\r\n                        start: {\r\n                            x: e.clientX,\r\n                            y: e.clientY,\r\n                        },\r\n                        end: {\r\n                            x: e.clientX,\r\n                            y: e.clientY,\r\n                        },\r\n                        bounds: {}\r\n                    });\r\n\r\n                    rubber.query.css({\r\n                        width: 0,\r\n                        height: 0,\r\n                        transform: 'translate(' + (collecting.start.x - position.left) + 'px, ' + (collecting.start.y - position.top) + 'px)'\r\n                    });\r\n                },\r\n\r\n                onmove: function(e) {\r\n                    var start = collecting.start,\r\n                        end = {\r\n                            x: e.clientX,\r\n                            y: e.clientY\r\n                        };\r\n\r\n                    var bounds;\r\n\r\n                    if ((start.x <= end.x && start.y < end.y) || (start.x < end.x && start.y <= end.y)) {\r\n                        bounds = {\r\n                            x: start.x,\r\n                            y: start.y,\r\n                            width:  end.x - start.x,\r\n                            height: end.y - start.y\r\n                        };\r\n                    } else if ((start.x >= end.x && start.y < end.y) || (start.x > end.x && start.y <= end.y)) {\r\n                        bounds = {\r\n                            x: end.x,\r\n                            y: start.y,\r\n                            width:  start.x - end.x,\r\n                            height: end.y - start.y\r\n                        };\r\n                    } else if ((start.x <= end.x && start.y > end.y) || (start.x < end.x && start.y >= end.y)) {\r\n                        bounds = {\r\n                            x: start.x,\r\n                            y: end.y,\r\n                            width:  end.x - start.x,\r\n                            height: start.y - end.y\r\n                        };\r\n                    } else if ((start.x >= end.x && start.y > end.y) || (start.x > end.x && start.y >= end.y)) {\r\n                        bounds = {\r\n                            x: end.x,\r\n                            y: end.y,\r\n                            width:  start.x - end.x,\r\n                            height: start.y - end.y\r\n                        };\r\n                    } else {\r\n                        bounds = {\r\n                            x: end.x,\r\n                            y: end.y,\r\n                            width:  0,\r\n                            height: 0\r\n                        };\r\n                    }\r\n\r\n                    collecting.bounds = bounds;\r\n\r\n                    rubber.query.css({\r\n                        width:  bounds.width,\r\n                        height: bounds.height,\r\n                        transform: 'translate(' + (bounds.x - position.left) + 'px,' + (bounds.y - position.top) + 'px)'\r\n                    });\r\n                },\r\n\r\n                onend: function() {\r\n                    \r\n                    if ( ! collecting.enabled) return;\r\n                    collecting.enabled = false;\r\n\r\n                    var context = paper.guid(),\r\n                        vectors = Graph.registry.vector.collect(context),\r\n                        bounds = collecting.bounds,\r\n                        scale = layout.scale();\r\n\r\n                    var start = layout.pointerLocation({\r\n                        clientX: bounds.x,\r\n                        clientY: bounds.y\r\n                    });\r\n\r\n                    var end = layout.pointerLocation({\r\n                        clientX: bounds.x + bounds.width,\r\n                        clientY: bounds.y + bounds.height\r\n                    });\r\n\r\n                    var bbox = new Graph.lang.BBox({\r\n                        x: start.x,\r\n                        y: start.y,\r\n                        x2: end.x,\r\n                        y2: end.y,\r\n                        width: end.x - start.x,\r\n                        height: end.y - start.y\r\n                    });\r\n\r\n                    bbox.transform(paper.viewport().matrix());\r\n\r\n                    _.forEach(vectors, function(v){\r\n                        if (v.guid() != context && v.isSelectable() && ! v.isGroup()) {\r\n                            if (bbox.contains(v)) {\r\n                                me.collect(v, true);\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    if (me.props.activator == 'tool') {\r\n                        paper.tool().activate('panzoom');\r\n                    }\r\n\r\n                    bbox = null;\r\n                    me.suspend();\r\n                }\r\n            })\r\n            .on('down', function(e){\r\n                var single = ! (e.ctrlKey || e.shiftKey),\r\n                    vector = Graph.registry.vector.get(e.target);\r\n\r\n                if (vector) {\r\n                    if ( ! vector.isSelectable()) {\r\n                        if ( \r\n                            ! vector.elem.belong('graph-resizer') && \r\n                            ! vector.elem.belong('graph-link') && \r\n                            ! vector.elem.belong('graph-rotator')\r\n                        ) {\r\n                            if (single) {\r\n                                me.clearCollection();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            .on('tap', function(e){\r\n                var vector = Graph.registry.vector.get(e.target),\r\n                    single = ! (e.ctrlKey || e.shiftKey);\r\n\r\n                if (vector && vector.isSelectable()) {\r\n                    if (vector.paper().state() == 'linking') {\r\n                        me.clearCollection();\r\n                        return;\r\n                    }\r\n\r\n                    if (single) {\r\n                        me.clearCollection();\r\n                    }\r\n\r\n                    me.collect(vector);\r\n                }\r\n\r\n            }, true)\r\n            .on('move', function(e){\r\n                var i = e.interaction;\r\n\r\n                if (me.props.enabled) {\r\n                    if (i.pointerIsDown && ! i.interacting()) {\r\n                        var action = {name: 'drag'};\r\n\r\n                        // -- workaround for a bug in v1.2.6 of interact.js\r\n                        i.prepared.name = action.name;\r\n                        i.setEventXY(i.startCoords, i.pointers);\r\n\r\n                        if (e.currentTarget === paper.node()) {\r\n                            if (me.props.suspended) {\r\n                                me.resume();\r\n                            }\r\n                            i.start(action, e.interactable, rubber.node());\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        render: function() {\r\n            var me = this;\r\n\r\n            if (me.props.rendered) {\r\n                return;\r\n            }\r\n\r\n            me.paper.container().append(me.components.rubber);\r\n            me.props.rendered = true;\r\n        },\r\n\r\n        size: function() {\r\n            return this.collection.size();\r\n        },\r\n\r\n        index: function(vector) {\r\n            return this.collection.index(vector);\r\n        },\r\n\r\n        add: function(vector) {\r\n            var offset = this.index(vector);\r\n            vector._collector = this;\r\n            if (offset === -1) {\r\n                this.collection.push(vector);\r\n            }\r\n        },\r\n\r\n        remove: function(vector) {\r\n            delete vector._collector;\r\n            this.collection.pull(vector);\r\n        },\r\n\r\n        collect: function(vector) {\r\n            vector.select();\r\n            Graph.cached.paper = this.paper.guid();\r\n        },\r\n\r\n        decollect: function(vector) {\r\n            vector.deselect();\r\n        },\r\n\r\n        clearCollection: function() {\r\n            var me = this,\r\n                collection = me.collection.toArray().slice();\r\n\r\n            _.forEach(collection, function(vector){\r\n                me.decollect(vector);\r\n            });\r\n\r\n            collection = null;\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.components.rubber.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            if (this.props.suspended) {\r\n                this.props.suspended = false;\r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else {\r\n                    this.paper.container().append(this.components.rubber);\r\n                }\r\n            }\r\n        },\r\n\r\n        syncBeforeDrag: function(master, e) {\r\n            var me = this;\r\n\r\n            me.collection.each(function(v){\r\n                if (v.plugins.dragger && v.plugins.dragger.props.enabled && v !== master) {\r\n                    (function(){\r\n                        // var mat = v.graph.matrix.data(),\r\n                        //     sin = mat.sin,\r\n                        //     cos = mat.cos;\r\n\r\n                        var rotate = v.matrixCurrent().rotate(),\r\n                            rad = rotate.rad,\r\n                            sin = Math.sin(rad),\r\n                            cos = Math.cos(rad);\r\n\r\n                        if (v.plugins.resizer && ! v.plugins.resizer.props.suspended) {\r\n                            v.plugins.resizer.suspend();\r\n                        }\r\n\r\n                        if (v.plugins.rotator && ! v.plugins.rotator.props.suspended) {\r\n                            v.plugins.rotator.suspend();\r\n                        }\r\n\r\n                        if (v.plugins.dragger.props.ghost) {\r\n                            v.plugins.dragger.resume();\r\n                        }\r\n\r\n                        v.syncdrag = {\r\n                            sin: sin,\r\n                            cos: cos,\r\n                            tdx: 0,\r\n                            tdy: 0\r\n                        };\r\n\r\n                        v.addClass('dragging');\r\n\r\n                        v.fire('beforedrag', {\r\n                            dx: e.dx *  cos + e.dy * sin,\r\n                            dy: e.dx * -sin + e.dy * cos,\r\n                            master: false\r\n                        });\r\n\r\n                    }());\r\n                }\r\n            });\r\n\r\n            me.fire('beforedrag');\r\n        },\r\n\r\n        syncDrag: function(master, e) {\r\n            var me = this;\r\n\r\n            me.collection.each(function(v){\r\n                if (v.plugins.dragger && v.plugins.dragger.props.enabled && v !== master) {\r\n                    (function(v, e){\r\n                        var dx = e.tx *  v.syncdrag.cos + e.ty * v.syncdrag.sin,\r\n                            dy = e.tx * -v.syncdrag.sin + e.ty * v.syncdrag.cos;\r\n\r\n                        if (v.plugins.dragger.props.ghost) {\r\n                            v.plugins.dragger.helper().translate(dx, dy).commit();\r\n                        } else {\r\n                            v.translate(dx, dy).commit();\r\n                        }\r\n\r\n                        v.syncdrag.tdx += dx;\r\n                        v.syncdrag.tdy += dy;\r\n\r\n                        v.fire('drag', {\r\n                            dx: dx,\r\n                            dy: dy,\r\n                            master: false\r\n                        });\r\n\r\n                    }(v, e));\r\n                }\r\n            });\r\n\r\n        },\r\n\r\n        syncAfterDrag: function(master, e) {\r\n            var me = this;\r\n\r\n            me.collection.each(function(v){\r\n                if (v.plugins.dragger && v.plugins.dragger.props.enabled && v !== master) {\r\n                    (function(v, e){\r\n                        var batchSync = v.plugins.dragger.props.batchSync,\r\n                            ghost = v.plugins.dragger.props.ghost;\r\n\r\n                        if (ghost) {\r\n                            if (batchSync) {\r\n                                v.translate(v.syncdrag.tdx, v.syncdrag.tdy).commit();\r\n                            }\r\n                            v.plugins.dragger.suspend();\r\n                        }\r\n\r\n                        if ( ! batchSync) {\r\n                            v.dirty(true);\r\n                        }\r\n\r\n                        v.fire('afterdrag', {\r\n                            dx: v.syncdrag.tdx,\r\n                            dy: v.syncdrag.tdy,\r\n                            batch: true,\r\n                            master: false\r\n                        });\r\n\r\n                        v.removeClass('dragging');\r\n\r\n                        delete v.syncdrag;\r\n\r\n                    }(v, e));\r\n                }\r\n            });\r\n\r\n            e.type = 'afterdrag';\r\n            me.fire(e);\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Collector';\r\n        },\r\n\r\n        onKeynavDown: function(e) {\r\n            if (e.keyCode == Graph.event.SHIFT && this.props.activator != 'key') {\r\n                var tool = this.paper.tool(),\r\n                    curr = tool.current();\r\n\r\n                if (curr != 'collector') {\r\n                    tool.activate('collector', 'key');\r\n                }\r\n            }\r\n        },\r\n\r\n        onKeynavUp: function(e) {\r\n            if (e.keyCode == Graph.event.SHIFT) {\r\n                var tool = this.paper.tool(),\r\n                    curr = tool.current();\r\n\r\n                if (curr == 'collector') {\r\n                    this.props.activator = 'tool';\r\n                    tool.activate('panzoom');\r\n                }\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.plugin.Dragger = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            ready: false,\r\n            manual: false,\r\n\r\n            ghost: true,\r\n            vector: null,\r\n            enabled: true,\r\n            rendered: false,\r\n            suspended: true,\r\n            inertia: false,\r\n            bound: false,\r\n            grid: null,\r\n            axis: false,\r\n            cursor: 'move',\r\n\r\n            cls: '',\r\n\r\n            // batching operation\r\n            batchSync: true,\r\n            restriction: false\r\n        },\r\n\r\n        rotation: {\r\n            deg: 0,\r\n            rad: 0,\r\n            sin: 0,\r\n            cos: 1\r\n        },\r\n\r\n        scaling: {\r\n            x: 1,\r\n            y: 1\r\n        },\r\n\r\n        dragging: {\r\n            enabled: false,\r\n            vector: null,\r\n            paper: null,\r\n            helper: null,\r\n            dx: 0,\r\n            dy: 0,\r\n            coord: null\r\n        },\r\n\r\n        components: {\r\n            holder: null,\r\n            helper: null\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var me = this;\r\n\r\n            vector.addClass('graph-draggable');\r\n            me.props.vector = vector.guid();\r\n\r\n            options = _.extend({\r\n                inertia: false\r\n            }, options || {});\r\n\r\n            _.forEach(['axis', 'grid', 'bbox', 'ghost'], function(name){\r\n                if (options[name] !== undefined) {\r\n                    me.props[name] = options[name];\r\n                }\r\n            });\r\n\r\n            _.assign(me.props, options);\r\n\r\n            me.cached.snapping = null;\r\n            me.cached.origin = null;\r\n\r\n            me.initComponent();\r\n            \r\n            vector.on('render.dragger', _.bind(me.onVectorRender, me));\r\n\r\n            if (vector.props.rendered) {\r\n                me.setup();\r\n            }\r\n        },\r\n\r\n        holder: function() {\r\n            return Graph.registry.vector.get(this.components.holder);\r\n        },\r\n\r\n        helper: function() {\r\n            return Graph.registry.vector.get(this.components.helper);\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = me.components;\r\n            var holder, helper;\r\n\r\n            if (me.props.ghost) {\r\n                holder = (new Graph.svg.Group())\r\n                    .addClass('graph-dragger')\r\n                    .removeClass('graph-elem graph-elem-group')\r\n                    .traversable(false)\r\n                    .selectable(false);\r\n\r\n                helper = (new Graph.svg.Rect(0, 0, 0, 0, 0))\r\n                    .addClass('graph-dragger-helper' + ((this.props.cls ? ' ' : '') + this.props.cls ))\r\n                    .removeClass('graph-elem graph-elem-rect')\r\n                    .traversable(false)\r\n                    .selectable(false)\r\n                    .clickable(false)\r\n                    .render(holder);\r\n\r\n                helper.elem.data(Graph.string.ID_VECTOR, this.vector().guid());\r\n\r\n                comp.holder = holder.guid();\r\n                comp.helper = helper.guid();\r\n\r\n                holder = null;\r\n                helper = null;\r\n            } else {\r\n                this.props.cls && (this.vector().addClass(this.props.cls));\r\n            }\r\n        },\r\n\r\n        setup: function() {\r\n            var me, vector, vendor, paper, options;\r\n\r\n            if (this.props.ready) {\r\n                return;\r\n            }\r\n\r\n            me = this;\r\n            vector = me.vector();\r\n            paper = vector.paper();\r\n            options = {};\r\n\r\n            _.extend(options, {\r\n                manualStart: true,\r\n                onstart: _.bind(me.onDragStart, me),\r\n                onmove: _.bind(me.onDragMove, me),\r\n                onend: _.bind(me.onDragEnd, me)\r\n            });\r\n\r\n            vendor = vector.interactable().vendor();\r\n            vendor.draggable(options);\r\n            vendor.styleCursor(false);\r\n\r\n            me.cached.origin = vendor.origin();\r\n            me.cached.snapping = [];\r\n\r\n            vendor.on('down', _.bind(me.onPointerDown, me));\r\n\r\n            if (me.props.grid) {\r\n                me.snap({\r\n                    mode: 'grid',\r\n                    x: me.props.grid[0],\r\n                    y: me.props.grid[1]\r\n                });\r\n            }\r\n\r\n            me.props.ready = true;\r\n        },\r\n\r\n        enable: function() {\r\n            this.props.enabled = true;\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.enabled = false;\r\n        },\r\n\r\n        ghost: function(ghost) {\r\n            if (ghost === undefined) {\r\n                return this.props.ghost;\r\n            }\r\n            \r\n            this.props.ghost = ghost;\r\n            return this;\r\n        },\r\n\r\n        render: function() {\r\n            if (this.props.ghost) {\r\n                if ( ! this.props.rendered) {\r\n                    this.props.rendered = true;\r\n                    this.holder().render(this.vector().parent());\r\n                    this.redraw();\r\n                }\r\n            }\r\n        },\r\n\r\n        suspend: function() {\r\n            if (this.props.ghost) {\r\n                this.props.suspended = true;\r\n                this.holder().elem.detach();    \r\n            }\r\n        },\r\n\r\n        resume: function() {\r\n            if (this.props.ghost) {\r\n                this.props.suspended = false;\r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else {\r\n                    this.vector().parent().elem.append(this.holder().elem);\r\n                    this.redraw();\r\n                }    \r\n            }\r\n        },\r\n\r\n        redraw: function() {\r\n            if (this.props.ghost) {\r\n                var vector = this.vector(),\r\n                    helper = this.helper(),\r\n                    matrix = vector.matrix(),\r\n                    rotate = matrix.rotate().deg,\r\n                    bound = vector.bbox().toJson();\r\n\r\n                var cx, cy;\r\n\r\n                if (rotate) {\r\n                    var rmatrix = Graph.matrix(),\r\n                        rpath = vector.shapeRelative();\r\n\r\n                    cx = bound.x + bound.width / 2,\r\n                    cy = bound.y + bound.height /2;\r\n\r\n                    rmatrix.rotate(-rotate, cx, cy);\r\n\r\n                    rpath = rpath.transform(rmatrix);\r\n                    bound = rpath.bbox().toJson();\r\n                }\r\n\r\n                helper.reset();\r\n\r\n                helper.attr({\r\n                    x: bound.x,\r\n                    y: bound.y,\r\n                    width: bound.width,\r\n                    height: bound.height\r\n                });\r\n\r\n                if (rotate) {\r\n                    helper.rotate(rotate, cx, cy).commit();\r\n                }\r\n            }\r\n        },\r\n\r\n        origin: function(origin) {\r\n            if (origin === undefined) {\r\n                return this.cached.origin;\r\n            }\r\n\r\n            this.cached.origin = origin;\r\n\r\n            var vendor = this.vector().interactable().vendor();\r\n\r\n            if (vendor) {\r\n                vendor.origin(origin);\r\n            }\r\n        },\r\n\r\n        snap: function(snap, end) {\r\n\r\n            if (snap === undefined) {\r\n                return this.cached.snapping;\r\n            }\r\n\r\n            if (end === undefined) {\r\n                end = false;\r\n            }\r\n\r\n            var me = this, snaps = [];\r\n\r\n            // save original request\r\n            this.cached.snapping = snap;\r\n\r\n            if (_.isArray(snap)) {\r\n                _.forEach(snap, function(s){\r\n                    snaps.push(fixsnap(s));\r\n                });\r\n            } else {\r\n                snaps.push(fixsnap(snap));\r\n            }\r\n\r\n            var vendor = this.vector().interactable().vendor();\r\n\r\n            if (vendor) {\r\n                vendor.setOptions('snap', {\r\n                    targets: snaps,\r\n                    endOnly: end\r\n                });\r\n            }\r\n\r\n            /////////\r\n\r\n            function fixsnap(snap) {\r\n\r\n                if (_.isFunction(snap)) {\r\n                    return snap;\r\n                }\r\n\r\n                snap.mode = _.defaultTo(snap.mode, 'anchor');\r\n\r\n                if (snap.mode == 'grid') {\r\n                    if (me.props.axis == 'x') {\r\n                        snap.y = 0;\r\n                    } else if (me.props.axis == 'y') {\r\n                        snap.x = 0;\r\n                    }\r\n                    snap = interact.createSnapGrid({x: snap.x, y: snap.y});\r\n                } else {\r\n                    snap.range = _.defaultTo(snap.range, 20);\r\n                }\r\n                return snap;\r\n            }\r\n        },\r\n\r\n        resetSnap: function() {\r\n            this.snaps = [];\r\n\r\n            this.snap({\r\n                mode: 'grid',\r\n                x: this.props.grid[0],\r\n                y: this.props.grid[1]\r\n            });\r\n        },\r\n\r\n        restrict: function(options) {\r\n            this.props.restriction = options;\r\n        },\r\n\r\n        start: function() {\r\n            var me = this, \r\n                vector = me.vector(),\r\n                vendor = vector.interactable().vendor();\r\n\r\n            if (me.props.manual) {\r\n                return;\r\n            }\r\n\r\n            if (me.dragging.enabled) {\r\n                return;\r\n            }\r\n\r\n            me.dragging.enabled = true;\r\n            me.dragging.moveHandler = _.bind(me.onPointerMove, me, _, vector);\r\n            \r\n            vendor.on('move', me.dragging.moveHandler);\r\n        },\r\n\r\n        onVectorRender: function() {\r\n            this.setup();\r\n        },\r\n\r\n        onPointerDown: function draggerDown(e) {\r\n            e.preventDefault();\r\n            this.start();\r\n        },\r\n\r\n        onPointerMove: function draggerMove(e, vector) {\r\n            var i = e.interaction;\r\n\r\n            if (this.props.enabled) {\r\n                if (i.pointerIsDown && ! i.interacting()) {\r\n                    var paper = vector.paper(),\r\n                        node = vector.node(),\r\n                        action = { name: 'drag' };\r\n\r\n                    // -- workaround for a bug in v1.2.6 of interact.js\r\n                    i.prepared.name = action.name;\r\n                    i.setEventXY(i.startCoords, i.pointers);\r\n\r\n                    if (e.currentTarget === node) {\r\n                        if (paper) {\r\n                            var state = paper.state();\r\n\r\n                            if (state == 'collecting') {\r\n                                if (vector.elem.belong('graph-resizer')) {\r\n                                    paper.tool().activate('panzoom');\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            } else if (state == 'linking') {\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        if (this.props.ghost) {\r\n                            if (this.props.suspended) {\r\n                                this.resume();\r\n                            }\r\n                            i.start(action, e.interactable, this.helper().node());\r\n                        } else {\r\n                            i.start(action, e.interactable, node);\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n            e.preventDefault();\r\n\r\n        },\r\n\r\n        onDragStart: function(e) {\r\n            var vector = this.vector(),\r\n                paper = vector.paper(),\r\n                layout = paper.layout(),\r\n                helper = this.helper();\r\n\r\n            vector.addClass('dragging');\r\n\r\n            paper.cursor(this.props.cursor);\r\n\r\n            this.dragging.vector = vector;\r\n            this.dragging.paper = paper;\r\n            this.dragging.helper = helper;\r\n\r\n            this.dragging.dx = 0;\r\n            this.dragging.dy = 0;\r\n            this.dragging.tx = 0;\r\n            this.dragging.ty = 0;\r\n\r\n            var matrix = vector.matrixCurrent(),\r\n                rotate = matrix.rotate(),\r\n                scale  = matrix.scale();\r\n\r\n            this.dragging.deg = rotate.deg;\r\n            this.dragging.rad = rotate.rad;\r\n            this.dragging.sin = Math.sin(rotate.rad);\r\n            this.dragging.cos = Math.cos(rotate.rad);\r\n            this.dragging.sx = scale.x;\r\n            this.dragging.sy = scale.y;\r\n\r\n            var edata = {\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n                dx: 0,\r\n                dy: 0,\r\n                ghost: this.props.ghost\r\n            };\r\n\r\n            this.fire('beforedrag', edata);\r\n\r\n            var coord = layout.pointerLocation(e);\r\n            this.dragging.coord = coord;\r\n        },\r\n\r\n        onDragMove: function(e) {\r\n\r\n            var dragging = this.dragging,\r\n                paper = dragging.paper,\r\n                vector = dragging.vector,\r\n                helper = dragging.helper,\r\n                ghost = this.props.ghost,\r\n                axs = this.props.axis,\r\n                deg = dragging.deg,\r\n                sin = dragging.sin,\r\n                cos = dragging.cos,\r\n                scaleX = dragging.sx,\r\n                scaleY = dragging.sy;\r\n\r\n            var tx = _.defaultTo(e.dx, 0),\r\n                ty = _.defaultTo(e.dy, 0);\r\n\r\n            var dx, dy, mx, my;\r\n\r\n            dx = dy = mx = my = 0;\r\n\r\n            tx /= scaleX;\r\n            ty /= scaleY;\r\n            \r\n            if (axs == 'x') {\r\n                dx = tx;\r\n                dy = 0;\r\n\r\n                mx = tx *  cos + 0 * sin;\r\n                my = tx * -sin + 0 * cos;\r\n            } else if (axs == 'y') {\r\n                dx = 0;\r\n                dy = ty;\r\n\r\n                mx = 0 *  cos + ty * sin;\r\n                my = 0 * -sin + ty * cos;\r\n            } else {\r\n                dx = mx = tx *  cos + ty * sin;\r\n                dy = my = tx * -sin + ty * cos;\r\n            }\r\n\r\n            // check restriction\r\n            var restriction = this.props.restriction;\r\n\r\n            if (restriction) {\r\n                var coord = this.dragging.coord;\r\n\r\n                coord.x += dx;\r\n                coord.y += dy;\r\n\r\n                if (coord.x < restriction.left || coord.x > restriction.right) {\r\n                    dx = mx = tx = 0;\r\n                }\r\n                \r\n                if (coord.y < restriction.top || coord.y > restriction.bottom) {\r\n                    dy = my = ty = 0;\r\n                }\r\n            }\r\n\r\n            this.dragging.dx += mx;\r\n            this.dragging.dy += my;\r\n            this.dragging.tx += tx;\r\n            this.dragging.ty += ty;\r\n\r\n            var pageX = _.defaultTo(e.pageX, e.x0),\r\n                pageX = _.defaultTo(e.pageY, e.y0);\r\n\r\n            pageX /= scaleX;\r\n            pageX /= scaleY;\r\n\r\n            var event = {\r\n                pageX: pageX,\r\n                pageY: pageX,\r\n\r\n                tx: tx,\r\n                ty: ty,\r\n\r\n                dx: dx,\r\n                dy: dy,\r\n\r\n                ghost: this.props.ghost\r\n            };\r\n\r\n            this.fire('drag', event);\r\n\r\n            if (ghost) {\r\n                helper.translate(event.dx, event.dy).commit();\r\n            } else {\r\n                vector.translate(event.dx, event.dy).commit();\r\n            }\r\n        },\r\n\r\n        onDragEnd: function(e) {\r\n            var dragging = this.dragging,\r\n                paper = dragging.paper,\r\n                vector = dragging.vector,\r\n                helper = dragging.helper,\r\n                ghost = this.props.ghost,\r\n                dx = dragging.dx,\r\n                dy = dragging.dy,\r\n                tx = dragging.tx,\r\n                ty = dragging.ty;\r\n\r\n            if (ghost) {\r\n                vector.translate(dx, dy).commit();\r\n\r\n                this.redraw();\r\n                this.suspend();\r\n            }\r\n\r\n            vector.removeClass('dragging');\r\n            paper.cursor('default');\r\n\r\n            var edata = {\r\n                dx: dx,\r\n                dy: dy,\r\n                tx: tx,\r\n                ty: ty,\r\n                ghost: this.props.ghost\r\n            };\r\n\r\n            var vendor = vector.interactable().vendor();\r\n            vendor.off('move', this.dragging.moveHandler);\r\n            \r\n            this.dragging.moveHandler = null;\r\n            this.dragging.enabled = false;\r\n\r\n            this.fire('afterdrag', edata);\r\n\r\n            for (var key in this.dragging) {\r\n                this.dragging[key] = null;\r\n            }\r\n\r\n        },\r\n\r\n        destroy: function() {\r\n            var me = this;\r\n\r\n            if (me.components.helper) {\r\n                me.helper().remove();\r\n            }\r\n\r\n            me.components.helper = null;\r\n\r\n            if (me.components.holder) {\r\n                me.holder().remove();\r\n            }\r\n\r\n            me.components.holder = null;\r\n            me.listeners = {};\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Dragger';\r\n        }\r\n    });\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.plugin.Dropper = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            overlap: 'center',\r\n            accept: '.graph-draggable'\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var me = this;\r\n\r\n            _.assign(me.props, options || {});\r\n            vector.addClass('graph-dropzone').removeClass('graph-draggable');\r\n\r\n            me.props.vector = vector.guid();    \r\n            \r\n            vector.on({\r\n                render: _.bind(me.onVectorRender, me)\r\n            });\r\n\r\n            if (vector.props.rendered) {\r\n                me.setup();\r\n            }\r\n        },\r\n\r\n        setup: function() {\r\n            var me = this;\r\n\r\n            if (me.plugin) {\r\n                return;\r\n            }\r\n\r\n            var config = _.extend({}, me.props, {\r\n                checker: _.bind(me.onDropValidate, me),\r\n\r\n                ondropactivate: _.bind(me.onDropActivate, me),\r\n                ondropdeactivate: _.bind(me.onDropDeactivate, me),\r\n                ondragenter: _.bind(me.onDragEnter, me),\r\n                ondragleave: _.bind(me.onDragLeave, me),\r\n                ondrop: _.bind(me.onDrop, me)\r\n            });\r\n\r\n            me.plugin = me.vector.interactable().dropzone(config);\r\n        },\r\n\r\n        onDropValidate: function( edrop, edrag, dropped, dropzone, dropel, draggable, dragel ) {\r\n            return dropped;\r\n            /*if (dropped) {\r\n                if (this.config.validate) {\r\n                    var args = _.toArray(arguments);\r\n                    dropped = this.config.validate.apply(this, args);\r\n                }    \r\n            }\r\n            \r\n            return dropped;*/\r\n        },\r\n\r\n        onVectorRender: function() {\r\n            this.setup();\r\n        },\r\n\r\n        onDropActivate: function(e) {\r\n            this.vector().addClass('drop-activate');\r\n        },\r\n\r\n        onDropDeactivate: function(e) {\r\n            this.vector().removeClass('drop-activate');\r\n        },\r\n\r\n        onDragEnter: function(e) {\r\n            this.vector().removeClass('drop-activate').addClass('drop-enter');\r\n            e.type = 'dropenter';\r\n            this.fire(e);\r\n        },\r\n\r\n        onDragLeave: function(e) {\r\n            this.vector().removeClass('drop-enter').addClass('drop-activate');\r\n            e.type = 'dropleave';\r\n            this.fire(e);\r\n        },\r\n\r\n        onDrop: function(e) {\r\n            this.vector().removeClass('drop-activate drop-enter');\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    var CLS_CONNECT_VALID = 'connect-valid',\r\n        CLS_CONNECT_INVALID = 'connect-invalid',\r\n        CLS_CONNECT_RESET = 'connect-valid connect-invalid',\r\n        CLS_CONNECT_CLEAR = 'connect-valid connect-invalid connect-hover',\r\n        CLS_CONNECT_HOVER = 'connect-hover',\r\n\r\n        CONNECT_OUTGOING = 'outgoing',\r\n        CONNECT_INCOMING = 'incoming';\r\n\r\n    Graph.plugin.Network = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n            wiring: 'h:h',\r\n            tuning: true,\r\n            limitIncoming: 0,\r\n            limitOutgoing: 0\r\n        },\r\n\r\n        linking: {\r\n            valid: false,\r\n            router: null,\r\n            source: null,\r\n            target: null,\r\n            link: null,\r\n            pole: null\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var me = this, guid = vector.guid();\r\n\r\n            options = options || {};\r\n\r\n            _.assign(me.props, options);\r\n\r\n            me.props.vector = guid;\r\n\r\n            me.cached.cables = {};\r\n            me.cached.pairs = {};\r\n\r\n            vector.addClass('graph-connectable');\r\n\r\n            // setup link droppable\r\n\r\n            var vendor = vector.interactable().vendor();\r\n\r\n            vendor.dropzone({\r\n                accept: _.format('.{0}, .{1}', Graph.styles.LINK_HEAD, Graph.styles.LINK_TAIL),\r\n                overlap: .2\r\n            })\r\n            .on('dropdeactivate', function(e){\r\n                var v = Graph.registry.vector.get(e.target);\r\n                if (v) {\r\n                    v.removeClass(CLS_CONNECT_CLEAR);\r\n                }\r\n                me.invalidateTrans();\r\n            })\r\n            .on('dropactivate', function(e){\r\n                var v = Graph.registry.vector.get(e.target);\r\n\r\n                if (v) {\r\n                    v.addClass(CLS_CONNECT_HOVER);\r\n                }\r\n\r\n                me.invalidateTrans();\r\n            })\r\n            .on('dragenter', function(e){\r\n                var link = Graph.registry.link.get(e.relatedTarget);\r\n\r\n                if (link) {\r\n                    var pole = Graph.$(e.relatedTarget).data('pole');\r\n                    var valid, source, target;\r\n\r\n                    if (pole == 'head') {\r\n                        source = link.router.source();\r\n                        target = vector;\r\n                    } else {\r\n                        source = vector;\r\n                        target = link.router.target();\r\n                    }\r\n\r\n                    valid  = source.connectable().canConnect(target.connectable(), link);\r\n\r\n                    if (valid) {\r\n                        vector.removeClass(CLS_CONNECT_INVALID);\r\n                        vector.addClass(CLS_CONNECT_VALID);\r\n                    } else {\r\n                        vector.removeClass(CLS_CONNECT_VALID);\r\n                        vector.addClass(CLS_CONNECT_INVALID);\r\n                    }\r\n\r\n                    _.assign(me.linking, {\r\n                        valid: valid,\r\n                        router: link.router,\r\n                        source: source,\r\n                        target: target,\r\n                        pole: pole\r\n                    });\r\n\r\n                    link.router.updateTrans('CONNECT', {\r\n                        valid: valid,\r\n                        source: source,\r\n                        target: target\r\n                    });\r\n                }\r\n            })\r\n            .on('dragleave', function(e){\r\n                var v = Graph.registry.vector.get(e.target);\r\n                if (v) {\r\n                    v.removeClass(CLS_CONNECT_RESET);\r\n                }\r\n\r\n                me.linking.valid = false;\r\n\r\n                if (me.linking.pole == 'head') {\r\n                    me.linking.router.updateTrans('CONNECT', {\r\n                        valid: false,\r\n                        target: null\r\n                    });\r\n                } else {\r\n                    me.linking.router.updateTrans('CONNECT', {\r\n                        valid: false,\r\n                        source: null\r\n                    });\r\n                }\r\n\r\n            })\r\n            .on('drop', function(e){\r\n                var link = Graph.registry.link.get(e.relatedTarget);\r\n\r\n                if (me.linking.valid) {\r\n                    if (me.linking.pole == 'head') {\r\n\r\n                        var oldTarget = me.linking.router.target();\r\n                        \r\n                        if (oldTarget && oldTarget.guid() != vector.guid()) {\r\n                            oldTarget.connectable().removeLink(link);\r\n                        }\r\n\r\n                        me.linking.router.updateTrans('CONNECT', {\r\n                            target: vector\r\n                        });\r\n\r\n                    } else {\r\n\r\n                        var oldSource = me.linking.router.source();\r\n\r\n                        if (oldSource && oldSource.guid() != vector.guid()) {\r\n                            oldSource.connectable().removeLink(link);\r\n                        }\r\n\r\n                        me.linking.router.updateTrans('CONNECT', {\r\n                            source: vector\r\n                        });\r\n\r\n\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        invalidateTrans: function() {\r\n            for (var name in this.linking) {\r\n                this.linking[name] = null;\r\n            }\r\n        },\r\n\r\n        wiring: function() {\r\n            return this.props.wiring;\r\n        },\r\n\r\n        treshold: function() {\r\n            var wiring = this.props.wiring;\r\n\r\n            switch(wiring) {\r\n                case 'h:h':\r\n                case 'v:v':\r\n                    return 20;\r\n                case 'h:v':\r\n                case 'v:h':\r\n                    return -10;\r\n            }\r\n\r\n            return 0;\r\n        },\r\n\r\n        direction: function (network) {\r\n            if (this.props.tuning) {\r\n                var orient = this.orientation(network);\r\n\r\n                switch(orient) {\r\n                    case 'intersect':\r\n                        return null;\r\n                    case 'top':\r\n                    case 'bottom':\r\n                        return 'v:v';\r\n                    case 'left':\r\n                    case 'right':\r\n                        return 'h:h';\r\n                    default:\r\n                        return this.props.wiring;\r\n                }    \r\n            } else {\r\n                return this.props.wiring;\r\n            }\r\n        },\r\n\r\n        orientation: function(network) {\r\n            var sourceBox = this.vector().bboxOriginal().toJson(),\r\n                targetBox = network.vector().bboxOriginal().toJson(),\r\n                orientation = Graph.util.boxOrientation(sourceBox, targetBox, this.treshold());\r\n\r\n            sourceBox = targetBox = null;\r\n            return orientation;\r\n        },\r\n\r\n        isSource: function(link) {\r\n            return link.source().guid() == this.vector().guid();\r\n        },\r\n\r\n        isTarget: function(link) {\r\n            return link.target().guid() == this.vector().guid();\r\n        },\r\n\r\n        connect: function(target, start, end, options) {\r\n            if (this.canConnect(target)) {\r\n\r\n                if (start && ! end) {\r\n                    options = start;\r\n                    start = null;\r\n                    end = null;\r\n                } else {\r\n                    if (start instanceof Graph.lang.Point) {\r\n                        start = start.toJson();\r\n                    }\r\n\r\n                    if (end instanceof Graph.lang.Point) {\r\n                        end = end.toJson();\r\n                    }    \r\n                }\r\n\r\n                options = options || {};\r\n\r\n                var source = this,\r\n                    sourceVector = source.vector(),\r\n                    targetVector = target.vector(),\r\n                    paper = sourceVector.paper(),\r\n                    paperLayout = paper.layout(),\r\n                    router = paperLayout.createRouter(sourceVector, targetVector),\r\n                    link = paperLayout.createLink(router, options);\r\n\r\n                if (options.command !== undefined) {\r\n                    link.connectByCommand(options.command);\r\n                } else {\r\n                    link.connect(start, end);    \r\n                }\r\n\r\n                link.render(paper);\r\n\r\n                link.cached.beforeDestroyHandler = _.bind(this.onLinkBeforeDestroy, this);\r\n                link.on('beforedestroy', link.cached.beforeDestroyHandler);\r\n\r\n                source.addLink(link, CONNECT_OUTGOING, targetVector);\r\n                target.addLink(link, CONNECT_INCOMING, sourceVector);\r\n\r\n                sourceVector.fire('connect', {link: link});\r\n\r\n                return link;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        connectByLinker: function(target, start, end, options) {\r\n            var routerType = this.vector().paper().layout().routerType();\r\n\r\n            if (routerType == 'orthogonal') {\r\n                this.connect(target, null, null, options);\r\n            } else {\r\n                this.connect(target, start, end, options);\r\n            }\r\n        },\r\n\r\n        disconnect: function(target, link) {\r\n            var connections = this.connections(target),\r\n                connectionsLength = connections.length,\r\n                disconnected = 0,\r\n                linkIds = [];\r\n\r\n            if (link !== undefined) {\r\n                if ( ! _.isArray(link)) {\r\n                    linkIds = link ? [link.guid()] : [];\r\n                } else {\r\n                    linkIds = _.map(link, function(l){ return l && l.guid() });\r\n                }\r\n            }\r\n            \r\n            _.forEach(connections, function(conn){\r\n                if (linkIds.length) {\r\n                    if (_.indexOf(linkIds, conn.guid) > -1) {\r\n                        conn.link.disconnect();\r\n                        disconnected++;\r\n                        connectionsLength--;\r\n                    }\r\n                } else {\r\n                    conn.link.disconnect();\r\n                    connectionsLength--;\r\n                }\r\n            });\r\n\r\n            if (linkIds.length) {\r\n                return disconnected === linkIds.length;\r\n            } else {\r\n                return connectionsLength === 0;\r\n            }\r\n\r\n        },\r\n\r\n        addLink: function(link, type, pair) {\r\n            var guid = link.guid(),\r\n                cables = this.cached.cables,\r\n                pairs = this.cached.pairs;\r\n\r\n            pair  = pair.guid();\r\n            pairs = pairs || {};\r\n\r\n            pairs[pair] = pairs[pair] || [];\r\n\r\n            if (_.indexOf(pairs[pair], guid) === -1) {\r\n                pairs[pair].push(guid);\r\n            }\r\n\r\n            cables[guid] = {\r\n                type: type,\r\n                pair: pair\r\n            };\r\n        },\r\n\r\n        removeLink: function(link) {\r\n            var guid, pair;\r\n\r\n            if (_.isString(link)) {\r\n                guid = link;\r\n            } else {\r\n                guid = link.guid();\r\n            }\r\n\r\n            var conn = this.cached.cables[guid];\r\n\r\n            if (conn) {\r\n                if (this.cached.pairs[conn.pair]) {\r\n                    var index = _.indexOf(this.cached.pairs[conn.pair], guid);\r\n\r\n                    if (index > -1) {\r\n                        this.cached.pairs[conn.pair].splice(index, 1);\r\n                    }\r\n\r\n                    if ( ! this.cached.pairs[conn.pair].length) {\r\n                        delete this.cached.pairs[conn.pair];\r\n                    }\r\n                }\r\n            }\r\n\r\n            delete this.cached.cables[guid];\r\n            conn = null;\r\n        },\r\n\r\n        repairLinks: function() {\r\n            console.log('called');\r\n        },\r\n\r\n        hasConnection: function(network) {\r\n            var conn = this.connections(network);\r\n            return conn.length ? conn : false;\r\n        },\r\n\r\n        connections: function(network) {\r\n            var me = this,\r\n                registry = Graph.registry.link,\r\n                current = this.props.vector,\r\n                conns = [];\r\n\r\n            if (network !== undefined) {\r\n\r\n                var pair = network.vector().guid();\r\n\r\n                if (this.cached.pairs[pair]) {\r\n                    _.forEach(me.cached.pairs[pair], function(guid){\r\n                        var link = registry.get(guid),\r\n                            opts = me.cached.cables[guid];\r\n                        if (link && opts) {\r\n                            conns.push({\r\n                                guid: guid,\r\n                                link: link,\r\n                                type: opts.type,\r\n                                source: opts.type == 'outgoing' ? current : pair,\r\n                                target: opts.type == 'outgoing' ? pair : current\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                return conns;\r\n            }\r\n\r\n            var cables = me.cached.cables;\r\n\r\n            _.forOwn(cables, function(opts, guid){\r\n                var link = registry.get(guid);\r\n                if (link) {\r\n                    conns.push({\r\n                        guid: guid,\r\n                        link: link,\r\n                        type: opts.type,\r\n                        source: opts.type == 'outgoing' ? current : opts.pair,\r\n                        target: opts.type == 'outgoing' ? opts.pair : current\r\n                    });\r\n                }\r\n            });\r\n\r\n            return conns;\r\n        },\r\n\r\n        ///////// RULES /////////\r\n\r\n        /**\r\n         * Can connect to target\r\n         */\r\n        canConnect: function(target) {\r\n            if (target instanceof Graph.plugin.Network) {\r\n                var sourceVector = this.vector().guid(),\r\n                    targetVector = target.vector().guid();\r\n\r\n                var connections, outgoing, incoming;\r\n\r\n                // check limit outgoing\r\n                if (this.props.limitOutgoing > 0) {\r\n                    connections = this.connections();\r\n                    outgoing = _.filter(connections, function(conn){\r\n                        return conn.type == 'outgoing';\r\n                    });\r\n\r\n                    if (outgoing.length + 1 > this.props.limitOutgoing) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                if (target.props.limitIncoming > 0) {\r\n                    connections = target.connections();\r\n                    \r\n                    incoming = _.filter(connections, function(conn){\r\n                        return conn.type == 'incoming';\r\n                    });\r\n\r\n                    if (incoming.length + 1 > target.props.limitIncoming) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                if (sourceVector != targetVector) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        destroy: function() {\r\n            var me = this;\r\n\r\n            // collect garbage\r\n            this.cached.cables = null;\r\n            this.cached.pairs  = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Network';\r\n        },\r\n\r\n        onLinkBeforeDestroy: function(e) {\r\n            var link = e.link;\r\n            var vector, network;\r\n\r\n            if ((vector = link.router.source())) {\r\n                vector.connectable().removeLink(link);\r\n            }\r\n\r\n            if ((vector = link.router.target())) {\r\n                vector.connectable().removeLink(link);\r\n            }\r\n\r\n            link.off('beforedestroy', link.cached.beforeDestroyHandler);\r\n            link.cached.beforeDestroyHandler = null;\r\n        }\r\n\r\n    });\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.plugin.History = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            limit: 1,\r\n            index: 0\r\n        },\r\n\r\n        items: {},\r\n\r\n        constructor: function(vector) {\r\n            this.props.vector = vector.guid();\r\n        },\r\n\r\n        save: function(prop, data) {\r\n            var lim = this.props.limit, len;\r\n\r\n            if (len > lim) {\r\n                _.drop(this.items, len - lim);\r\n            }\r\n\r\n            this.items[prop] = this.items[prop] || [];\r\n\r\n            if ((len = this.items[prop].length) > lim - 1) {\r\n                this.items[prop].splice(0, len - lim);\r\n            }\r\n\r\n            this.items[prop].push(data);\r\n        },\r\n\r\n        last: function(prop) {\r\n\r\n        },\r\n\r\n        go: function() {\r\n\r\n        },\r\n\r\n        back: function() {\r\n\r\n        },\r\n\r\n        next: function() {\r\n\r\n        },\r\n\r\n        clear: function() {\r\n\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Panzoom = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            panEnabled: false,\r\n            zoomEnabled: true,\r\n            showToolbox: true,\r\n            vector: null\r\n        },\r\n\r\n        caching: {\r\n            offset: {x: 0, y: 0}\r\n        },\r\n\r\n        scrolling: {\r\n            steps: 10\r\n        },\r\n\r\n        zooming: {\r\n            scale: 1,\r\n            zoom: 1,\r\n            origin: null,\r\n            range: {min: 0.2, max: 4.0}\r\n        },\r\n\r\n        components: {\r\n            toolbox: null\r\n        },\r\n\r\n        panning: {\r\n            start: {x: 0, y: 0},\r\n            moveHandler: null,\r\n            stopHandler: null\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            var me = this, vendor, viewport, scale, bound;\r\n\r\n            // validate vector\r\n            if ( ! vector.isPaper()) {\r\n                throw Graph.error('Panzoom only available for paper !');\r\n            }\r\n\r\n            viewport = vector.viewport();\r\n            scale    = Math.round(viewport.matrix().scale().x, 1000);\r\n            vendor   = vector.interactable().vendor();\r\n\r\n            _.assign(me.props, {\r\n                vector: vector.guid()\r\n            });\r\n\r\n            _.assign(me.zooming, {\r\n                scale: scale,\r\n                zoom: scale\r\n            });\r\n\r\n            me.initComponent(vector);\r\n\r\n            // use native engine\r\n            vendor.on('wheel', _.bind(me.onMouseWheel, me, _, vector, viewport));\r\n            vendor.on('down', _.bind(me.onPointerDown, me, _, vector, viewport));\r\n\r\n            if (vector.props.rendered) {\r\n                me.revalidate(vector);\r\n\r\n                if (me.props.showToolbox) {\r\n                    me.components.toolbox.appendTo(vector.container());\r\n                }\r\n            } else {\r\n                vector.on('render', function(){\r\n                    me.revalidate(vector);\r\n\r\n                    if (me.props.showToolbox) {\r\n                        me.components.toolbox.appendTo(vector.container());\r\n                    }\r\n                });\r\n            }\r\n\r\n            vendor = null;\r\n            vector = null;\r\n        },\r\n\r\n        initComponent: function(vector) {\r\n            var me = this;\r\n            var container, toolbox;\r\n\r\n            if (me.props.showToolbox) {\r\n                container = vector.container();\r\n\r\n                toolbox = me.components.toolbox = Graph.$('<div class=\"graph-zoom-toolbox\">');\r\n                toolbox.html(\r\n                    '<div>' +\r\n                        '<a data-tool=\"zoom-reset\" href=\"javascript:void(0)\" title=\"' + Graph._('Reset zoom') + '\">' +\r\n                            '<i class=\"'+ Graph.icons.ZOOM_RESET +'\"></i>' +\r\n                        '</a>'+\r\n                        '<div class=\"splitter\"></div>'+\r\n                        '<a data-tool=\"zoom-in\" href=\"javascript:void(0)\" title=\"' + Graph._('Zoom in') + '\">' +\r\n                            '<i class=\"'+ Graph.icons.ZOOM_IN +'\"></i>' +\r\n                        '</a>'+\r\n                        '<div class=\"splitter\"></div>'+\r\n                        '<a data-tool=\"zoom-out\" href=\"javascript:void(0)\" title=\"' + Graph._('Zoom out') + '\">' +\r\n                            '<i class=\"'+ Graph.icons.ZOOM_OUT +'\"></i>' +\r\n                        '</a>'+\r\n                    '</div>'\r\n                );\r\n\r\n                toolbox.on('click', '[data-tool]', function(e){\r\n                    e.preventDefault();\r\n                    var tool = Graph.$(this).data('tool');\r\n                    switch(tool) {\r\n                        case 'zoom-reset':\r\n                            me.zoomReset();\r\n                            break;\r\n                        case 'zoom-in':\r\n                            me.zoomIn();\r\n                            break;\r\n                        case 'zoom-out':\r\n                            me.zoomOut();\r\n                            break;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        revalidate: function(vector) {\r\n            var bound = vector.node().getBoundingClientRect();\r\n\r\n            this.caching.offset = {\r\n                x: bound.left,\r\n                y: bound.top\r\n            };\r\n        },\r\n\r\n        enable: function() {\r\n            var vector = this.vector();\r\n\r\n            this.props.panEnabled = true;\r\n            this.props.zoomEnabled = true;\r\n\r\n            vector.cursor('default');\r\n            vector.state('panning');\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.panEnabled = false;\r\n        },\r\n\r\n        zoomReset: function() {\r\n            var viewport = this.vector().viewport();\r\n            var matrix;\r\n\r\n            this.zooming.zoom = 1;\r\n            this.zooming.scale = 1;\r\n\r\n            viewport.reset();\r\n\r\n            matrix = Graph.matrix();\r\n            // matrix.translate(.5, .5);\r\n\r\n            viewport.attr('transform', matrix.toValue());\r\n            viewport.graph.matrix = matrix;\r\n        },\r\n\r\n        zoomIn: function() {\r\n            var paper = this.vector().paper(),\r\n                viewport = paper.viewport(),\r\n                origin = paper.layout().center(),\r\n                direction = 0.1875;\r\n\r\n            this.zoom(paper, viewport, direction, origin);\r\n        },\r\n\r\n        zoomOut: function() {\r\n            var paper = this.vector().paper(),\r\n                viewport = paper.viewport(),\r\n                origin = paper.layout().center(),\r\n                direction = -0.1875;\r\n\r\n            this.zoom(paper, viewport, direction, origin);\r\n        },\r\n\r\n        zoom: function(paper, viewport, direction, origin) {\r\n            var range = this.zooming.range,\r\n                currentZoom = this.zooming.zoom,\r\n                zoomType = direction > 0 ? 'in' : 'out',\r\n                factor = Math.pow(1 + Math.abs(direction), zoomType == 'in' ? 1 : -1),\r\n                zoom = (zoomRange(range, currentZoom * factor)),\r\n                matrix = viewport.matrix(),\r\n                currentScale = matrix.props.a,\r\n                scale = 1 / currentScale * zoom,\r\n                matrixScale = matrix.clone();\r\n\r\n            this.onBeforeZoom(paper);\r\n\r\n            matrixScale.scale(scale, scale, origin.x, origin.y);\r\n\r\n            viewport.attr('transform', matrixScale.toValue());\r\n            viewport.graph.matrix = matrixScale;\r\n\r\n            this.zooming.zoom  = zoom;\r\n            this.zooming.scale = matrixScale.props.a;\r\n\r\n            if (paper.state() == 'panning') {\r\n                paper.cursor(zoomType == 'in' ? 'zoom-in' : 'zoom-out');\r\n            }\r\n\r\n            this.onZoom(paper);\r\n        },\r\n\r\n        scroll: function(paper, viewport, dx, dy) {\r\n            var matrix = viewport.matrix().clone(),\r\n                scale = this.zooming.scale;\r\n\r\n            this.onBeforeScroll(paper);\r\n\r\n            dx /= scale;\r\n            dy /= scale;\r\n\r\n            matrix.translate(dx, dy);\r\n\r\n            viewport.attr('transform', matrix.toValue());\r\n            viewport.graph.matrix = matrix;\r\n\r\n            if (this.zooming.origin) {\r\n                this.zooming.origin.x += dx;\r\n                this.zooming.origin.y += dy;\r\n            }\r\n\r\n            this.onScroll();\r\n        },\r\n\r\n        onMouseWheel: function(e, paper, viewport) {\r\n\r\n            e = Graph.event.fix(e);\r\n            e.preventDefault();\r\n\r\n            var vscroll = Graph.event.hasPrimaryModifier(e),\r\n                hscroll = Graph.event.hasSecondaryModifier(e),\r\n                event   = Graph.event.original(e);\r\n\r\n            var factor, delta, origin, offset, box;\r\n\r\n            if (vscroll || hscroll) {\r\n\r\n                if (Graph.isMac()) {\r\n                    factor = event.deltaMode === 0 ? 1.25 : 50;\r\n                } else {\r\n                    // factor = event.deltaMode === 0 ? 1/40 : 1/2;\r\n                    factor = event.deltaMode === 0 ? 1 : 20;\r\n                }\r\n\r\n                delta = {};\r\n\r\n                if (hscroll) {\r\n                    delta.dx = (factor * (event.deltaX || event.deltaY));\r\n                    delta.dy = 0;\r\n                } else {\r\n                    delta.dx = 0;\r\n                    delta.dy = (factor * event.deltaY);\r\n                }\r\n\r\n                this.scroll(paper, viewport, delta.dx, delta.dy);\r\n\r\n            } else {\r\n                factor = (event.deltaMode === 0 ? 1/40 : 1/2);\r\n                offset = this.caching.offset;\r\n\r\n                origin = {\r\n                    x: event.clientX - offset.x,\r\n                    y: event.clientY - offset.y\r\n                };\r\n\r\n                this.zooming.origin = origin;\r\n\r\n                // console.log(event.deltaY, factor, event.deltaY * factor / (-15));\r\n\r\n                this.zoom(\r\n                    paper,\r\n                    viewport,\r\n                    // event.deltaY * factor / (-5),\r\n                    event.deltaY * factor / (-8),\r\n                    origin\r\n                );\r\n            }\r\n        },\r\n\r\n        onPointerDown: function(e, paper, viewport, vendor) {\r\n            var target = Graph.$(e.target),\r\n                vector = Graph.registry.vector.get(target),\r\n                vendor = paper.interactable().vendor(),\r\n                tool   = paper.tool().current();\r\n\r\n            var offset;\r\n\r\n            if (this.panning.moveHandler) {\r\n                vendor.off('move', this.panning.moveHandler);\r\n                this.panning.moveHandler = null;\r\n            }\r\n\r\n            if (this.panning.stopHandler) {\r\n                vendor.off('up', this.panning.stopHandler);\r\n                this.panning.stopHandler = null;\r\n            }\r\n\r\n            if (' collector pencil '.indexOf(tool) > -1) {\r\n                return;\r\n            }\r\n\r\n            if (vector) {\r\n                // already has drag feature\r\n                if (vector.isDraggable()) {\r\n                    return;\r\n                }\r\n\r\n                // reject non primary button\r\n                if (e.button || e.ctrlKey || e.shiftKey || e.altKey) {\r\n                    return;\r\n                }\r\n\r\n                this.revalidate(paper);\r\n\r\n                offset = this.caching.offset;\r\n\r\n                this.panning.start = {\r\n                    x: e.clientX - offset.x,\r\n                    y: e.clientY - offset.y\r\n                };\r\n\r\n                // install temporary events handler\r\n                this.panning.moveHandler = _.bind(this.onPointerMove, this, _, paper, viewport);\r\n                this.panning.stopHandler = _.bind(this.onPointerStop, this, _, paper, viewport);\r\n\r\n                vendor.on('move', this.panning.moveHandler);\r\n                vendor.on('up', this.panning.stopHandler);\r\n            }\r\n        },\r\n\r\n        onPointerMove: function(e, paper, viewport) {\r\n\r\n            var offset = this.caching.offset,\r\n                start = this.panning.start,\r\n                current = {\r\n                    x: e.clientX - offset.x,\r\n                    y: e.clientY - offset.y\r\n                },\r\n                dx = current.x - start.x,\r\n                dy = current.y - start.y,\r\n                mg = Graph.util.hypo(dx, dy);\r\n\r\n            this.scroll(paper, viewport, dx, dy);\r\n\r\n            this.panning.start = {\r\n                x: e.clientX - offset.x,\r\n                y: e.clientY - offset.y\r\n            };\r\n\r\n            paper.cursor('move');\r\n\r\n            // prevent select\r\n            e.preventDefault();\r\n        },\r\n\r\n        onPointerStop: function(e, paper) {\r\n            var me = this, vendor = paper.interactable().vendor();\r\n            var delay;\r\n\r\n            // wait interact to fire last posible event...\r\n            delay = _.delay(function(){\r\n                clearTimeout(delay);\r\n                delay = null;\r\n\r\n                vendor.off('move', me.panning.moveHandler);\r\n                vendor.off('up', me.panning.stopHandler);\r\n\r\n                me.panning.moveHandler = null;\r\n                me.panning.stopHandler = null;\r\n            }, 0);\r\n\r\n            paper.cursor('default');\r\n        },\r\n\r\n        onBeforeZoom: _.debounce(function(paper){\r\n\r\n            Graph.topic.publish('paper:beforezoom', null, paper);\r\n\r\n        }, 300, {leading: true, trailing: false}),\r\n\r\n        onZoom: _.debounce(function(paper) {\r\n            var state = paper.state();\r\n\r\n            if (state == 'panning') {\r\n                paper.cursor('default');\r\n            }\r\n\r\n        }, 300),\r\n\r\n        onBeforeScroll: _.debounce(function(paper){\r\n\r\n            Graph.topic.publish('paper:beforescroll', null, paper);\r\n\r\n        }, 300, {leading: true, trailing: false}),\r\n\r\n        onScroll: _.debounce(function() {\r\n\r\n        }, 300),\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Panzoom';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// HELPERS /////////\r\n\r\n    function logarithm(num, base) {\r\n        base = base || 10;\r\n        return Math.log(num) / Math.log(base);\r\n    }\r\n\r\n    function stepRange(range, steps) {\r\n        var min = logarithm(range.min),\r\n            max = logarithm(range.max),\r\n            abs = Math.abs(min) + Math.abs(max);\r\n\r\n        return abs / steps;\r\n    }\r\n\r\n    function zoomRange(range, scale) {\r\n        return Math.max(range.min, Math.min(range.max, scale));\r\n    }\r\n\r\n    function onDestroy(event, paper) {\r\n        var offset = paper.node().getBoundingClientRect(),\r\n            x = event.clientX - offset.left,\r\n            y = event.clientY - offset.top;\r\n\r\n        return {\r\n            x: x,\r\n            y: y\r\n        };\r\n    }\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var CLS_CONNECT_VALID = 'connect-valid',\r\n        CLS_CONNECT_INVALID = 'connect-invalid',\r\n        CLS_CONNECT_RESET = 'connect-valid connect-invalid';\r\n\r\n    Graph.plugin.Linker = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n            enabled: false,\r\n            suspended: true,\r\n            rendered: false\r\n        },\r\n\r\n        components: {\r\n            block: null,\r\n            pointer: null,\r\n            path: null\r\n        },\r\n\r\n        linking: {\r\n            treshold: 10,\r\n            enabled: false,\r\n            moveHandler: null,\r\n            stopHandler: null,\r\n            source: null,\r\n            start: null,\r\n            target: null,\r\n            end: null,\r\n            visits: []\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            var me = this, vendor;\r\n\r\n            if ( ! vector.isPaper()) {\r\n                throw Graph.error('Linker plugin is only available for paper !');\r\n            }\r\n\r\n            vendor = vector.interactable().vendor();\r\n            vendor.on('down', _.bind(me.onPointerDown, me, _, vector));\r\n\r\n            vector.on('keynavdown', function(e){\r\n                if (e.keyCode === Graph.event.ESC) {\r\n                    me.invalidate();\r\n                    vector.tool().activate('panzoom');\r\n                }\r\n            });\r\n\r\n            me.props.vector = vector.guid();\r\n            me.initComponent();\r\n        },\r\n        \r\n        initComponent: function() {\r\n            var me = this, \r\n                comp = me.components;\r\n\r\n            var block, pointer, path;\r\n\r\n            block = (new Graph.svg.Group())\r\n                .addClass('graph-linker-path')\r\n                .selectable(false);\r\n\r\n            pointer = (new Graph.svg.Circle())\r\n                .addClass('graph-linker-pointer')\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .selectable(false)\r\n                .render(block);\r\n\r\n            path = (new Graph.svg.Path())\r\n                .addClass('graph-linker-path')\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .selectable(false)\r\n                .render(block)\r\n                .attr('marker-end', 'url(#marker-link-end)');\r\n\r\n            comp.block = block.guid();\r\n            comp.pointer = pointer.guid();\r\n            comp.path = path.guid();\r\n        },\r\n\r\n        component: function(name) {\r\n            if (name === undefined) {\r\n                return Graph.registry.vector.get(this.components.block);\r\n            }\r\n            return Graph.registry.vector.get(this.components[name]);\r\n        },\r\n\r\n        render: function() {\r\n            var paper;\r\n\r\n            if (this.props.rendered) {\r\n                return;\r\n            }\r\n\r\n            paper = this.vector();\r\n            this.component().render(paper);\r\n\r\n            this.props.rendered = true;\r\n        },\r\n\r\n        invalidate: function() {\r\n            var vector, vendor;\r\n\r\n            if (this.linking.enabled) {\r\n                vector = this.vector();\r\n                vendor = vector.interactable().vendor();\r\n                \r\n                if (this.linking.moveHandler) {\r\n                    vendor.off('move', this.linking.moveHandler);\r\n                    this.linking.moveHandler = null;\r\n                }\r\n\r\n                if (this.linking.source) {\r\n                    this.linking.source.removeClass('disallowed');\r\n                }\r\n\r\n                if (this.linking.target) {\r\n                    this.linking.target.removeClass('allowed');\r\n                }\r\n\r\n                _.assign(this.linking, {\r\n                    enabled: false,\r\n                    moveHandler: null,\r\n                    stopHandler: null,\r\n                    source: null,\r\n                    start: null,\r\n                    target: null,\r\n                    end: null\r\n                });\r\n                \r\n                if (this.linking.visits) {\r\n                    _.forEach(this.linking.visits, function(v){\r\n                        v.removeClass('connect-valid connect-invalid');\r\n                    });\r\n                }\r\n                \r\n                this.linking.visits = null;\r\n            }\r\n        },\r\n\r\n        enable: function() {\r\n            var paper = this.vector();\r\n            this.props.enabled = true;\r\n\r\n            paper.state('linking');\r\n            paper.addClass('linking');\r\n        },\r\n\r\n        disable: function() {\r\n            var paper = this.vector();\r\n\r\n            this.props.enabled = false;\r\n            this.invalidate();\r\n            this.suspend();\r\n\r\n            paper.removeClass('linking');\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.component().elem.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            var paper;\r\n\r\n            if ( ! this.props.suspended) {\r\n                return;\r\n            }\r\n\r\n            paper = this.vector();\r\n\r\n            this.props.suspended = false;\r\n            \r\n            if ( ! this.props.rendered) {\r\n                this.render();\r\n            } else {\r\n                this.component().elem.appendTo(paper.viewport().elem);\r\n            }\r\n        },\r\n        \r\n        /**\r\n         *  Start manual linking\r\n         */\r\n        start: function(source, anchor) {\r\n            var paper = this.vector(),\r\n                layout = paper.layout(),\r\n                offset = layout.position();\r\n                \r\n            if (paper.tool().current() != 'linker') {\r\n                return;\r\n            }\r\n            \r\n            if (this.linking.enabled) {\r\n                if (this.linking.source && this.linking.target) {\r\n                    this.build();\r\n                } else {\r\n                    this.invalidate();\r\n                    this.suspend();\r\n                }\r\n                return;\r\n            } else {\r\n                if (source.isPaper()) {\r\n                    this.invalidate();\r\n                    this.suspend();\r\n                    paper.tool().activate('panzoom');\r\n                    return;\r\n                }\r\n            }\r\n            \r\n            this.linking.visits = [];\r\n            \r\n            var vendor, sbox, port;\r\n\r\n            if (source.isConnectable()) {\r\n\r\n                if (this.props.suspended) {\r\n                    this.resume();    \r\n                }\r\n\r\n                var path = this.component('path');\r\n\r\n                this.linking.moveHandler = _.bind(this.onPointerMove, this, _, paper, path);    \r\n                \r\n                vendor = paper.interactable().vendor();\r\n                vendor.on('move', this.linking.moveHandler);\r\n\r\n                this.linking.visits.push(source);    \r\n\r\n                if (source.isConnectable()) {\r\n                    \r\n                    if ( ! this.linking.source) {\r\n                        sbox = source.bboxOriginal();\r\n                        port = sbox.center(true);\r\n\r\n                        this.linking.source = source;\r\n                        this.linking.start  = port;\r\n                        \r\n                        if (anchor) {\r\n                            path.moveTo(port.x, port.y).lineTo(anchor.x, anchor.y, false);\r\n                        } else {\r\n                            path.moveTo(port.x, port.y).lineTo(port.x, port.y, false);\r\n                        }   \r\n\r\n                        sbox = port = null;\r\n                    }\r\n\r\n                }\r\n\r\n                this.linking.enabled = true;\r\n            }\r\n        },\r\n        \r\n        cropping: function(start, end) {\r\n            var source = this.linking.source,\r\n                target = this.linking.target,\r\n                cable = new Graph.lang.Path([['M', start.x, start.y], ['L', end.x, end.y]]);\r\n\r\n            var spath, scrop, tpath, tcrop;\r\n\r\n            if (source) {\r\n                spath = source.shapeView();\r\n                scrop = spath.intersection(cable, true);\r\n            }\r\n\r\n            if (target) {\r\n                tpath = target.shapeView();\r\n                tcrop = tpath.intersection(cable, true);\r\n            }\r\n\r\n            cable = spath = tpath = null;\r\n\r\n            return {\r\n                start: scrop ? scrop[0] : null,\r\n                end:   tcrop ? tcrop[0] : null\r\n            };\r\n        },\r\n\r\n        build: function() {\r\n            var path = this.component('path'),\r\n                tail = path.tail(),\r\n                head = path.head();\r\n\r\n            if (tail && head) {\r\n                var sourceNetwork = this.linking.source.connectable(),\r\n                    targetNetwork = this.linking.target.connectable();\r\n\r\n                sourceNetwork.connectByLinker(targetNetwork, tail, head);\r\n            }\r\n\r\n            this.invalidate();\r\n            this.suspend();\r\n        },\r\n\r\n        onPointerDown: function(e, paper) {\r\n            var layout = paper.layout(),\r\n                source = layout.grabVector(e);\r\n            \r\n            if (source) {\r\n                this.start(source);\r\n            }\r\n            \r\n            layout = source = null;\r\n        },\r\n\r\n        onPointerMove: function(e, paper, path) {\r\n            if (this.linking.enabled) {\r\n\r\n                var layout = paper.layout(),\r\n                    target = layout.grabVector(e);\r\n\r\n                if ( ! target) {\r\n                    return;\r\n                }\r\n\r\n                var source = this.linking.source,\r\n                    valid = false;\r\n\r\n                if (source) {\r\n\r\n                    // track visit\r\n                    if (this.linking.visits.indexOf(target.guid()) === -1) {\r\n                        this.linking.visits.push(target);\r\n                    }\r\n                    \r\n                    var start = this.linking.start,\r\n                        coord = layout.pointerLocation(e),\r\n                        x = coord.x,\r\n                        y = coord.y,\r\n                        rad = Graph.util.rad(Graph.util.theta(start, {x: x, y: y})),\r\n                        sin = Math.sin(rad),\r\n                        cos = Math.cos(rad),\r\n                        tdx = this.linking.treshold * -cos,\r\n                        tdy = this.linking.treshold *  sin;\r\n\r\n                    x += tdx;\r\n                    y += tdy;\r\n\r\n                    if (target.isConnectable()) {\r\n                        \r\n                        var crop, tbox, port;\r\n\r\n                        if (source.connectable().canConnect(target.connectable())) {\r\n                            valid  = true;\r\n\r\n                            target.removeClass(CLS_CONNECT_INVALID);\r\n                            target.addClass(CLS_CONNECT_VALID);\r\n                            \r\n                            tbox = target.bboxOriginal();\r\n                            port = tbox.center(true);\r\n\r\n                            this.linking.target = target;\r\n                            this.linking.end    = port;\r\n\r\n                            crop = this.cropping(start, port);\r\n\r\n                            if (crop.start) {\r\n                                path.moveTo(crop.start.x, crop.start.y);\r\n                            }\r\n\r\n                            if (crop.end) {\r\n                                path.lineTo(crop.end.x, crop.end.y, false);\r\n                            } else {\r\n                                path.lineTo(x, y, false);\r\n                            }\r\n\r\n                            tbox = port = null;\r\n                        } else {\r\n                            target.removeClass(CLS_CONNECT_VALID);\r\n                            target.addClass(CLS_CONNECT_INVALID);\r\n                        }\r\n\r\n                    } else {\r\n                        target.addClass(CLS_CONNECT_INVALID);\r\n                    }\r\n\r\n                    if ( ! valid) {\r\n\r\n                        if (this.linking.target) {\r\n                            this.linking.target.removeClass(CLS_CONNECT_RESET);\r\n                        }\r\n\r\n                        this.linking.target = null;\r\n                        this.linking.end    = null; \r\n\r\n                        crop = this.cropping(start, {x: x, y: y});\r\n\r\n                        if (crop.start) {\r\n                            path.moveTo(crop.start.x, crop.start.y);\r\n                        }\r\n\r\n                        if (crop.end) {\r\n                            path.lineTo(crop.end.x, crop.end.y, false);\r\n                        } else {\r\n                            path.lineTo(x, y, false);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            e.preventDefault();\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Linker';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// HELPER /////////\r\n    \r\n\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.ToolManager = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n            current: null\r\n        },\r\n\r\n        tools: {\r\n\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            var me = this;\r\n\r\n            me.props.vector = vector.guid();\r\n\r\n        },\r\n        \r\n        has: function(tool) {\r\n            return !!this.tools[tool];\r\n        },\r\n\r\n        get: function(name) {\r\n            var data = this.tools[name],\r\n                vector = this.vector();\r\n\r\n            if (data) {\r\n                switch(data.type) {\r\n                    case 'plugin':\r\n                        return vector.plugins[name];\r\n                    case 'util':\r\n                        return vector.utils[name];\r\n                }\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        current: function() {\r\n            return this.props.current;\r\n        },\r\n\r\n        register: function(name, type) {\r\n            type = _.defaultTo(type, 'plugin');\r\n\r\n            this.tools[name] = {\r\n                name: name,\r\n                type: type,\r\n                enabled: false\r\n            };\r\n        },\r\n\r\n        unregister: function(name) {\r\n            if (this.tools[name]) {\r\n                delete this.tools[name];\r\n            }\r\n        },\r\n\r\n        activate: function(name, activator) {\r\n            if (this.props.current != name) {\r\n\r\n                var tool = this.get(name), data;\r\n                \r\n                if (tool) {\r\n                    this.deactivateAll(name);\r\n                    this.props.current = name;\r\n\r\n                    data = this.tools[name];\r\n                    data.enabled = true;\r\n\r\n                    activator = _.defaultTo(activator, 'tool');\r\n                    tool.enable(activator);\r\n\r\n                    this.fire('activate', {\r\n                        name: data.name,\r\n                        enabled: data.enabled\r\n                    });\r\n                }\r\n            }\r\n            \r\n        },\r\n\r\n        deactivate: function(name) {\r\n            var tool = this.get(name), data;\r\n\r\n            if (tool) {\r\n                data = this.tools[name];\r\n                data.enabled = false;\r\n                this.props.current = null;\r\n\r\n                tool.disable();\r\n\r\n                this.fire('deactivate', {\r\n                    name: data.name,\r\n                    enabled: data.enabled\r\n                });\r\n            }\r\n        },\r\n\r\n        deactivateAll: function(except) {\r\n            var vector = this.vector();\r\n\r\n            for(var name in this.tools) {\r\n                if (name != except) {\r\n                    this.deactivate(name);\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        toggle: function(tool) {\r\n            var data = this.tools[tool];\r\n            if (data) {\r\n                if (data.enabled) {\r\n                    this.deactivate(tool);\r\n                } else {\r\n                    this.activate(tool);\r\n                }\r\n            }\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.ToolManager';\r\n        }\r\n\r\n\r\n    });\r\n\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Pencil = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        writing: {\r\n            startHandler: null\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            this.props.vector = vector.guid();\r\n        },\r\n\r\n        enable: function(activator) {\r\n            this.props.enabled = true;\r\n            this.props.activator = activator;\r\n\r\n            var vector = this.vector(),\r\n                vendor = vector.interactable().vendor();\r\n\r\n            vector.cursor('text');\r\n            vector.state('writing');\r\n\r\n            this.writing.startHandler = _.bind(this.onPointerDown, this);\r\n            vendor.on('down', this.writing.startHandler);\r\n\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.enabled = false;\r\n            var vendor = this.vector().interactable().vendor();\r\n            vendor.off('down', this.writing.startHandler);\r\n            this.writing.startHandler = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Pencil';\r\n        },\r\n\r\n        onPointerDown: function(e) {\r\n            var vector = this.vector();\r\n\r\n            if (vector.isPaper()) {\r\n                var offset, options, result;\r\n\r\n                offset = vector.layout().pointerLocation(e);\r\n                options = {\r\n                    left: offset.x,\r\n                    top: offset.y\r\n                };\r\n\r\n                if ( ! vector.diagram().current()) {\r\n                    vector.diagram().create();\r\n                }\r\n                \r\n                result = vector.diagram().current().drawShape(\r\n                    'Graph.shape.common.Label', \r\n                    options\r\n                );\r\n\r\n                if (result.shape) {\r\n                    var t = _.delay(function(e){\r\n                        clearTimeout(t);\r\n                        t = null;\r\n\r\n                        vector.tool().activate('panzoom');\r\n                        result.shape.editable().plugin().startEdit();\r\n\r\n                    }, 10);    \r\n                } else {\r\n                    //vector.tool().activate('panzoom');\r\n                }\r\n                \r\n            }\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    var MIN_BOX_WIDTH  = 150,\r\n        MIN_BOX_HEIGHT = 50,\r\n        OFFSET_TRESHOLD = 10;\r\n\r\n    var Editor = Graph.plugin.Editor = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null,\r\n            rendered: false,\r\n            suspended: true,\r\n            width: 'auto',\r\n            height: 'auto',\r\n            offset: 'auto',\r\n            align: 'center'\r\n        },\r\n\r\n        editing: {\r\n            commitHandler: null\r\n        },\r\n\r\n        components: {\r\n            editor: null\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            var vendor;\r\n\r\n            _.assign(this.props, options || {});\r\n\r\n            this.props.vector = vector.guid();\r\n\r\n            _.assign(this.cached, {\r\n                left: 0,\r\n                top: 0,\r\n                width: 0,\r\n                height: 0\r\n            });\r\n\r\n            vendor = vector.interactable().vendor();\r\n            vendor.on('doubletap', _.bind(this.onDoubleTap, this));\r\n\r\n            this.initComponent();\r\n        },\r\n\r\n        initComponent: function() {\r\n            var me = this, comp = this.components;\r\n            \r\n            comp.editor = Graph.$('<div class=\"graph-editor\" contenteditable=\"true\"></div>');\r\n            comp.editor.css('text-align', this.props.align);\r\n            \r\n            comp.editor.on('keydown', function(e){\r\n                switch(e.keyCode) {\r\n                    case Graph.event.ENTER:\r\n                        me.commit();\r\n                        break;\r\n                    case Graph.event.DELETE:\r\n                    case Graph.event.SHIFT:\r\n                        e.stopPropagation();\r\n                        break;\r\n\r\n                }\r\n            });\r\n        },\r\n        \r\n        commit: function() {\r\n\r\n            var text = this.components.editor.text();\r\n\r\n            this.suspend();\r\n            this.vector().props.text = text;\r\n\r\n            this.fire('edit', {\r\n                text: text,\r\n                left: this.cached.left,\r\n                top: this.cached.top\r\n            });\r\n        },\r\n\r\n        render: function() {\r\n            if (this.props.rendered) {\r\n                this.redraw();\r\n                return;\r\n            }\r\n            \r\n            this.vector().paper().container().append(this.components.editor);\r\n            this.props.rendered = true;\r\n            this.redraw();\r\n        },\r\n\r\n        suspend: function() {\r\n\r\n            this.props.suspended = true;\r\n            this.components.editor.detach();\r\n\r\n            if (this.editing.commitHandler) {\r\n                Graph.topic.unsubscribe('paper:beforezoom', this.editing.commitHandler);\r\n                Graph.topic.unsubscribe('paper:beforescroll', this.editing.commitHandler);\r\n                Graph.topic.unsubscribe('vector:pointerdown', this.editing.commitHandler);\r\n\r\n                this.editing.commitHandler = null;\r\n            }\r\n        },\r\n\r\n        resume: function() {\r\n            var container;\r\n\r\n            if ( ! this.props.rendered) {\r\n                this.render();\r\n            } else {\r\n                if (this.props.suspended) {\r\n                    this.props.suspended = false;\r\n                    container = this.vector().paper().container();\r\n                    container.append(this.components.editor);\r\n                }\r\n                this.redraw();\r\n            }\r\n\r\n        },\r\n\r\n        redraw: function() {\r\n            var editor = this.components.editor,\r\n                vector = this.vector(),\r\n                matrix = vector.matrixCurrent(),\r\n                scale  = matrix.scale();\r\n\r\n            var vbox = vector.bbox().clone().transform(matrix).toJson();\r\n            var left, top, width, height;\r\n            \r\n            width  = vbox.width;\r\n            height = vbox.height;\r\n            left = vbox.x;\r\n            top  = vbox.y;\r\n\r\n            if (this.props.width != 'auto') {\r\n                width = Math.max(this.props.width, MIN_BOX_WIDTH);\r\n                width = Math.max(width * scale.x, width);\r\n                left = vbox.x;\r\n            } else {\r\n                width = width - 8 * scale.x;\r\n                left = left + 4 * scale.x;\r\n            }   \r\n\r\n            if (this.props.height != 'auto') {\r\n                height = Math.max(this.props.height, MIN_BOX_HEIGHT);\r\n                height = Math.max(height * scale.y, height);\r\n                top = vbox.y;\r\n            } else {\r\n                height = height - 8 * scale.y;\r\n                top = top + 4 * scale.y;\r\n            }\r\n\r\n            editor.css({\r\n                left: left,\r\n                top:  top,\r\n                width: width,\r\n                height: height\r\n            });\r\n\r\n            _.assign(this.cached, {\r\n                left: left,\r\n                top: top,\r\n                width: width,\r\n                height: height\r\n            });\r\n\r\n            editor.text((vector.props.text || ''));\r\n            editor.focus();\r\n\r\n            vbox = null;\r\n        },\r\n\r\n        startEdit: function(e) {\r\n            var me = this, vector = me.vector();\r\n\r\n            vector.deselect();\r\n\r\n            if (vector.paper()) {\r\n                if (vector.paper().tool().current() == 'linker') {\r\n                    vector.paper().tool().activate('panzoom');\r\n                }        \r\n            }\r\n\r\n            me.fire('beforeedit');\r\n            me.resume();\r\n\r\n            if (e && this.props.offset == 'pointer') {\r\n                var editor = me.components.editor,\r\n                    paper = vector.paper(),\r\n                    layout = paper.layout(),\r\n                    scale = layout.scale();\r\n\r\n                var offset, coords, screen;\r\n\r\n                if (paper) {\r\n                    offset = paper.position();\r\n                    coords = layout.pointerLocation(e);\r\n                    \r\n                    if (this.props.align == 'center') {\r\n                        screen = {\r\n                            x: e.clientX - offset.left,\r\n                            y: e.clientY - offset.top\r\n                        };\r\n\r\n                        editor.css({\r\n                            left: screen.x - editor.width() / 2,\r\n                            top: screen.y - editor.height() / 2\r\n                        });\r\n                    } else {\r\n                        screen = vector.bboxView().toJson();\r\n                        screen = layout.screenLocation({x: screen.x, y: screen.y});\r\n\r\n                        editor.css({\r\n                            left: screen.x - offset.left,\r\n                            top: screen.y - offset.top\r\n                        });\r\n                    }\r\n\r\n                    editor.focus(true);\r\n\r\n                    me.cached.left = coords.x;\r\n                    me.cached.top  = coords.y;\r\n                }\r\n            }\r\n\r\n            if ( ! me.editing.commitHandler) {\r\n                me.editing.commitHandler = function() {\r\n                    me.commit();\r\n                };\r\n\r\n                Graph.topic.subscribe('paper:beforezoom', me.editing.commitHandler);\r\n                Graph.topic.subscribe('paper:beforescroll', me.editing.commitHandler);\r\n                Graph.topic.subscribe('vector:pointerdown', me.editing.commitHandler);\r\n            }\r\n        },\r\n\r\n        onDoubleTap: function(e) {\r\n            this.startEdit(e);\r\n            e.preventDefault();\r\n        },\r\n\r\n        destroy: function() {\r\n            if (this.editing.commitHandler) {\r\n                Graph.topic.unsubscribe('paper:beforezoom', this.editing.commitHandler);\r\n                Graph.topic.unsubscribe('paper:beforescroll', this.editing.commitHandler);\r\n                Graph.topic.unsubscribe('vector:pointerdown', this.editing.commitHandler);\r\n\r\n                this.editing.commitHandler = null;\r\n            }\r\n\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Editor';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n    \r\n    \r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Snapper = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            enabled: true,\r\n            suspended: true,\r\n            rendered: false,\r\n            vector: null\r\n        },\r\n\r\n        clients: {\r\n\r\n        },\r\n\r\n        components: {\r\n            block: null,\r\n            stubx: null,\r\n            stuby: null\r\n        },\r\n\r\n        // trans\r\n        snapping: {\r\n            coords: null,\r\n            vector: null,\r\n            offset: null,\r\n            stubx: null,\r\n            stuby: null\r\n        },\r\n\r\n        constructor: function(vector, options) {\r\n            options = options || {};\r\n\r\n            if ( ! vector.isPaper()) {\r\n                throw Graph.error(\"Snapper plugin only available for paper\");\r\n            }\r\n\r\n            _.assign(this.props, options);\r\n\r\n            this.props.vector  = vector.guid();\r\n\r\n            this.initComponent(vector);\r\n            this.snapping.coords = {};\r\n        },\r\n\r\n        invalidate: function() {\r\n            for (var key in this.snapping) {\r\n                this.snapping[key] = null;\r\n            }\r\n\r\n            this.snapping.coords = {};\r\n            this.clients = {};\r\n        },\r\n\r\n        initComponent: function(vector) {\r\n            var block, stubx, stuby;\r\n\r\n            block = (new Graph.svg.Group())\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .addClass('graph-snapper');\r\n\r\n            stubx = (new Graph.svg.Path('M 0 0 L 0 0'))\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(block);\r\n\r\n            stuby = (new Graph.svg.Path('M 0 0 L 0 0'))\r\n                .removeClass(Graph.styles.VECTOR)\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(block);\r\n\r\n            this.components.block = block.guid();\r\n            this.components.stuby = stuby.guid();\r\n            this.components.stubx = stubx.guid();\r\n\r\n        },\r\n\r\n        component: function(name) {\r\n            if (name === undefined) {\r\n                return Graph.registry.vector.get(this.components.block);\r\n            }\r\n            return Graph.registry.vector.get(this.components[name]);\r\n        },\r\n\r\n        render: function() {\r\n            if (this.props.rendered) {\r\n                return;\r\n            }\r\n            this.component().render(this.vector());\r\n            this.props.rendered = true;\r\n        },\r\n\r\n        enable: function() {\r\n            this.props.enabled = true;\r\n        },\r\n\r\n        disable: function() {\r\n            this.props.enabled = false;\r\n        },\r\n\r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.component().elem.detach();\r\n        },\r\n\r\n        resume: function() {\r\n            if (this.props.suspended) {\r\n                this.props.suspended = false;\r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else {\r\n                    var block = this.component(),\r\n                        viewport = this.vector().viewport();\r\n                    block.elem.appendTo(viewport.elem);\r\n                }\r\n            }\r\n        },\r\n\r\n        refresh: function(clientId) {\r\n            if (this.props.enabled) {\r\n                var key, client, center, token;\r\n\r\n                if (clientId !== undefined) {\r\n                    var options = this.clients[clientId];\r\n\r\n                    if (options) {\r\n                        if (this.snapping.coords[options.coords]) {\r\n                            delete this.snapping.coords[options.coords];\r\n                        }\r\n                        client = Graph.registry.vector.get(clientId);    \r\n                        if (client) {\r\n                            center = this.getClientCenter(client);\r\n                            token = center.x + '_' + center.y;\r\n                            this.snapping.coords[token] = center;\r\n                            this.clients[clientId].coords = token;\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.snapping.coords = {};    \r\n                    for (key in this.clients) {\r\n                        client = Graph.registry.vector.get(key);\r\n                        if (client) {\r\n                            center = this.getClientCenter(client);\r\n                            token = center.x + '_' + center.y;\r\n                            this.snapping.coords[token] = center;\r\n                            this.clients[key].coords = token;\r\n                        }\r\n                    }  \r\n                }\r\n            }\r\n        },\r\n\r\n        setup: function(client, options) {\r\n\r\n            if ( ! this.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            var me = this,\r\n                clientId = client.guid();\r\n\r\n            var key;\r\n\r\n            if (me.clients[clientId]) {\r\n                client.off('beforedrag', me.clients[clientId].beforeDragHandler);\r\n                client.off('afterdrag',  me.clients[clientId].afterDragHandler);\r\n                client.off('afterdestroy',  me.clients[clientId].afterDestroyHandler);\r\n\r\n                if (me.clients[clientId].coords) {\r\n                    delete me.snapping.coords[me.clients[clientId].coords];\r\n                }\r\n\r\n                delete me.clients[clientId];\r\n            }\r\n\r\n            if (options.enabled) {\r\n\r\n                var dragger = client.draggable();\r\n\r\n                me.clients[clientId] = {\r\n                    coords: null,\r\n                    osnaps: dragger.snap(),\r\n                    beforeDragHandler: _.bind(me.onClientBeforeDrag, me, _, client),\r\n                    afterDragHandler: _.bind(me.onClientAfterDrag, me, _, client),\r\n                    afterDestroyHandler: _.bind(me.onClientAfterDestroy, me, _, client)\r\n                };\r\n\r\n                client.on('beforedrag', me.clients[clientId].beforeDragHandler);\r\n                client.on('afterdrag', me.clients[clientId].afterDragHandler);\r\n                client.on('afterdestroy',  me.clients[clientId].afterDestroyHandler);\r\n\r\n                var center = me.getClientCenter(client),\r\n                    coords = this.snapping.coords;\r\n\r\n                // this.vector().circle(center.x, center.y, 5);\r\n\r\n                key = center.x + '_' + center.y;\r\n\r\n                if ( ! coords[key]) {\r\n                    coords[key] = center;\r\n                    me.clients[clientId].coords = key;\r\n                }\r\n\r\n                key = null;\r\n            }\r\n        },\r\n\r\n        repairClient: function(client) {\r\n            console.log(client);\r\n        },\r\n\r\n        getClientCenter: function(client) {\r\n            var bbox = client.bboxView(),\r\n                center = bbox.center(true);\r\n\r\n            return center;\r\n        },\r\n\r\n        showStub: function(axis, value) {\r\n            var snapping = this.snapping;\r\n            var command;\r\n\r\n            if (axis == 'x') {\r\n                command = 'M ' + value + ' -100000 L ' + value + ' 100000';\r\n\r\n                snapping.stubx.attr('d', command);\r\n                snapping.stubx.addClass('visible');\r\n            }\r\n\r\n            if (axis == 'y') {\r\n                command = 'M -100000 ' + value + ' L 100000 ' + value;\r\n\r\n                snapping.stuby.attr('d', command);\r\n                snapping.stuby.addClass('visible');\r\n            }\r\n\r\n            command = null;\r\n        },\r\n\r\n        hideStub: function(axis) {\r\n            var stub = axis == 'x' ? 'stubx' : 'stuby';\r\n            this.snapping[stub].removeClass('visible');\r\n        },\r\n\r\n        onClientBeforeDrag: function(e, client) {\r\n\r\n            if ( ! this.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            var me = this,\r\n                paper = me.vector(),\r\n                viewport = paper.viewport(),\r\n                layout = paper.layout(),\r\n                offset = layout.position(),\r\n                center = me.getClientCenter(client);\r\n\r\n            var snapping = this.snapping,\r\n                coords = snapping.coords;\r\n\r\n            snapping.stubx = this.component('stubx');\r\n            snapping.stuby = this.component('stuby');\r\n\r\n            var left = offset.left,\r\n                top = offset.top,\r\n                ma = viewport.matrix(),\r\n                pt = layout.pointerLocation({clientX: e.x, clientY: e.y}),\r\n                diffx = center.x - pt.x,\r\n                diffy = center.y - pt.y,\r\n                snapx = [],\r\n                snapy = [];\r\n\r\n            _.forOwn(coords, function(c){\r\n                var mx, my, vx, vy;\r\n\r\n                mx = ma.x(c.x - diffx, c.y - diffy);\r\n                my = ma.y(c.x - diffx, c.y - diffy);\r\n\r\n                vx = mx + left;\r\n\r\n                if (_.indexOf(snapx, vx) === -1) {\r\n                    snapx.push(vx);\r\n                }\r\n\r\n                vy = my + top;\r\n\r\n                if (_.indexOf(snapy, vy) === -1) {\r\n                    snapy.push(vy);\r\n                }\r\n            });\r\n\r\n            client.draggable().snap([\r\n                function(x, y) {\r\n                    var rx, ry, x1, y1, pt;\r\n\r\n                    rx = snapValue(x, snapx);\r\n                    ry = snapValue(y, snapy);\r\n\r\n                    x1 = rx.value;\r\n                    y1 = ry.value;\r\n\r\n                    pt = layout.pointerLocation({\r\n                        clientX: x1,\r\n                        clientY: y1\r\n                    });\r\n\r\n                    if (rx.snapped) {\r\n                        me.showStub('x', pt.x + diffx);\r\n                    } else {\r\n                        me.hideStub('x');\r\n                    }\r\n\r\n                    if (ry.snapped) {\r\n                        me.showStub('y', pt.y + diffy);\r\n                    } else {\r\n                        me.hideStub('y');\r\n                    }\r\n\r\n                    return {\r\n                        x: x1,\r\n                        y: y1\r\n                    };\r\n                }\r\n            ]);\r\n\r\n            me.resume();\r\n        },\r\n\r\n        onClientAfterDrag: function(e, client) {\r\n\r\n            if ( ! this.props.enabled) {\r\n                return;\r\n            }\r\n\r\n            var snapping = this.snapping,\r\n                options = this.clients[client.guid()];\r\n\r\n            if (options) {\r\n                var dragger = client.draggable();\r\n\r\n                if (options.osnaps) {\r\n                    dragger.snap(options.osnaps);\r\n                }\r\n\r\n                var token, center;\r\n\r\n                if (options.coords) {\r\n                    delete snapping.coords[options.coords];\r\n                }\r\n\r\n                center = this.getClientCenter(client);\r\n                token = center.x + '_' + center.y;\r\n\r\n                if ( ! snapping.coords[token]) {\r\n                    snapping.coords[token] = center;\r\n                    options.coords = token;\r\n                }\r\n\r\n                token = null;\r\n                center = null;\r\n            }\r\n\r\n            this.suspend();\r\n\r\n            _.assign(this.snapping, {\r\n                stubx: null,\r\n                stuby: null\r\n            });\r\n        },\r\n\r\n        onClientAfterDestroy: function(e, client) {\r\n            var guid = client.guid(),\r\n                options = this.clients[guid],\r\n                snapping = this.snapping;\r\n\r\n            if (options) {\r\n                if (options.coords) {\r\n                    if (snapping.coords[options.coords]) {\r\n                        delete snapping.coords[options.coords];\r\n                    }\r\n                }\r\n                delete this.clients[guid];\r\n            }\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Snapper';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// HELPERS /////////\r\n\r\n    function snapValue(value, snaps, range) {\r\n        range = _.defaultTo(range, 10);\r\n\r\n        var i = snaps.length, v;\r\n\r\n        while(i--) {\r\n            v = Math.abs(snaps[i] - value);\r\n            if (v <= range) {\r\n                return {\r\n                    snapped: true,\r\n                    value: snaps[i]\r\n                };\r\n            }\r\n        }\r\n\r\n        return {\r\n            snapped: false,\r\n            value: value\r\n        };\r\n    }\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.plugin.Toolpad = Graph.extend(Graph.plugin.Plugin, {\r\n        \r\n        props: {\r\n            vector: null,\r\n            rendered: false,\r\n            suspended: true\r\n        },\r\n        \r\n        components: {\r\n            pad: null\r\n        },  \r\n    \r\n        constructor: function(paper) {\r\n            \r\n            this.props.vector = paper.guid();\r\n            this.initComponent(paper);\r\n\r\n            this.cached.tools = null;\r\n            this.cached.shape = null;\r\n            this.cached.link  = null;\r\n            \r\n            Graph.topic.subscribe('shape:select', _.bind(this.onShapeSelect, this));\r\n            Graph.topic.subscribe('shape:deselect', _.bind(this.onShapeDeselect, this));\r\n            \r\n            Graph.topic.subscribe('link:select', _.bind(this.onLinkSelect, this));\r\n            Graph.topic.subscribe('link:deselect', _.bind(this.onLinkDeselect, this));\r\n        },\r\n        \r\n        initComponent: function(paper) {\r\n            \r\n            var pad = '<div class=\"graph-toolpad\">' + \r\n                            '<div class=\"pad-header\"></div>' + \r\n                            '<div class=\"pad-splitter\"></div>' + \r\n                            '<div class=\"pad-body\">x</div>'+\r\n                      '</div>';\r\n\r\n            pad = Graph.$(pad);\r\n\r\n            pad.on('click', '[data-shape-tool]', _.bind(this.onShapeToolClick, this));\r\n            pad.on('click', '[data-link-tool]', _.bind(this.onLinkToolClick, this));\r\n            \r\n            this.components.pad = pad;\r\n        },\r\n        \r\n        render: function() {\r\n            if (this.props.rendered) {\r\n                return;\r\n            }\r\n            \r\n            this.components.pad.appendTo(this.vector().container());\r\n            this.props.rendered = true;\r\n        },\r\n        \r\n        suspend: function() {\r\n            this.props.suspended = true;\r\n            this.components.pad.detach();\r\n        },\r\n        \r\n        resume: function() {\r\n            if (this.props.suspended) {\r\n                \r\n                this.props.suspended = false;\r\n                \r\n                if ( ! this.props.rendered) {\r\n                    this.render();\r\n                } else {\r\n                    this.components.pad.appendTo(this.vector().container());\r\n                }\r\n            }\r\n        },\r\n        \r\n        onShapeSelect: function(e) {\r\n            var shape = e.shape,\r\n                meta = shape.metadata,\r\n                pad = this.components.pad;\r\n\r\n            var body = '';\r\n\r\n            // pad.find('.pad-header').html('<a href=\"javascript:void(0);\"><i class=\"' + meta.icon + '\"></i></a>');            \r\n            pad.find('.pad-header').html('<a href=\"javascript:void(0);\"><i class=\"ion-navicon-round\"></i></a>');            \r\n            \r\n            _.forEach(meta.tools, function(tool, index){\r\n                if (tool.enabled) {\r\n                    body += '<div class=\"splitter\"></div>';\r\n                    body += '<a data-shape-tool=\"' + tool.name + '\" href=\"javascript:void(0)\" title=\"' + tool.title + '\"><i class=\"' + tool.icon + '\"></i></a>';\r\n                }\r\n            });\r\n            \r\n            pad.find('.pad-body').html(body);\r\n\r\n            this.cached.tools = meta.tools;\r\n            this.cached.shape = shape;\r\n\r\n            this.resume();\r\n        },\r\n        \r\n        onShapeDeselect: function(e) {\r\n            this.suspend();\r\n        },\r\n        \r\n\r\n        onLinkSelect: function(e) {\r\n            var link = e.link,\r\n                meta = link.metadata,\r\n                pad = this.components.pad;\r\n            \r\n            // pad.find('.pad-header').html('<a><i class=\"' + meta.icon + '\"></i></a>');\r\n            pad.find('.pad-header').html('<a><i class=\"ion-navicon-round\"></i></a>');\r\n            \r\n            var body = '';\r\n            \r\n            _.forEach(meta.tools, function(tool, index){\r\n                if (tool.enabled) {\r\n                    body += '<div class=\"splitter\"></div>';    \r\n                    body += '<a data-link-tool=\"' + tool.name + '\" href=\"#\" title=\"' + tool.title + '\"><i class=\"' + tool.icon + '\"></i></a>';\r\n                    \r\n                }\r\n            });\r\n            \r\n            pad.find('.pad-body').html(body);\r\n            \r\n            this.cached.tools = meta.tools;\r\n            this.cached.link = link;\r\n            this.resume();\r\n        },\r\n\r\n        onLinkDeselect: function(e) {\r\n            this.suspend();\r\n        },\r\n        \r\n        onShapeToolClick: function(e) {\r\n            var target = Graph.$(e.currentTarget),\r\n                name = target.data('shapeTool');\r\n\r\n            var tool = _.find(this.cached.tools, function(t){\r\n                return t.name == name;\r\n            });\r\n\r\n            if (tool) {\r\n                if (tool.name == 'config') {\r\n                    var paper = this.vector();\r\n                    paper.fire('shapetoolclick', {\r\n                        shape: this.cached.shape\r\n                    });\r\n                } else if (tool.handler) {\r\n                    tool.handler(e);\r\n                }\r\n            }\r\n            \r\n            e.preventDefault();\r\n        },\r\n\r\n        onLinkToolClick: function(e) {\r\n            var target = Graph.$(e.currentTarget),\r\n                name = target.data('linkTool');\r\n            \r\n            var tool = _.find(this.cached.tools, function(t){\r\n                return t.name == name;\r\n            });\r\n\r\n            if (tool) {\r\n                if (tool.name == 'config') {\r\n                    var paper = this.vector();\r\n                    paper.fire('linktoolclick', {\r\n                        link: this.cached.link\r\n                    });\r\n                } else if (tool.handler) {\r\n                    tool.handler(e);\r\n                }\r\n            }\r\n            \r\n            e.preventDefault();  \r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.plugin.Toolpad';\r\n        }\r\n        \r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.plugin.Clipper = Graph.extend(Graph.plugin.Plugin, {\r\n\r\n        props: {\r\n            vector: null\r\n        },\r\n\r\n        constructor: function(vector) {\r\n            var me = this,\r\n                guid = vector.guid();\r\n\r\n            me.props.vector = guid;\r\n\r\n            if (vector.isPaper()) {\r\n                vector.on('keycopy', function(e){\r\n                    me.copy();\r\n                });\r\n\r\n                vector.on('keypaste', function(e){\r\n                    me.paste();\r\n                });\r\n            }\r\n\r\n            me.cached.clips = null;\r\n            me.cached.paste = 1;\r\n        },\r\n\r\n        vector: function() {\r\n            return Graph.registry.vector.get(this.props.vector);\r\n        },\r\n\r\n        invalidate: function() {\r\n            this.cached.clips = null;\r\n        },\r\n\r\n        cut: function() {\r\n\r\n        },\r\n\r\n        copy: function() {\r\n            var me = this,\r\n                paper = this.vector(),\r\n                selection = paper.collector().collection.toArray().slice();\r\n\r\n            me.cached.paste = 1;\r\n\r\n            if (selection.length) {\r\n                var clips = [],\r\n                    excludes = { \r\n                        guid: true,\r\n                        id: true\r\n                    };\r\n\r\n                _.forEach(selection, function(vector){\r\n                    var shape = Graph.registry.shape.get(vector);\r\n                    if (shape) {\r\n                        var data = shape.toJson(),\r\n                            clip = {};\r\n                        var key, val;\r\n\r\n                        for (key in data.props) {\r\n                            val = data.props[key];\r\n                            if ( ! excludes[key]) {\r\n                                clip[key] = val;\r\n                            }\r\n                        }\r\n                        clips.push(clip);\r\n                    }\r\n                });\r\n                this.cached.clips = clips;\r\n            } else {\r\n                this.cached.clips = null;\r\n            }\r\n        },\r\n\r\n        paste: function() {\r\n            var me = this,\r\n                clips = this.cached.clips,\r\n                paper = this.vector(),\r\n                scale = paper.layout().scale(),\r\n                collector = paper.collector();\r\n\r\n            if (clips && clips.length) {\r\n\r\n                collector.clearCollection();\r\n\r\n                _.forEach(clips, function(clip){\r\n                    var prop = _.cloneDeep(clip);  \r\n\r\n                    if (prop.left !== undefined) {\r\n                        prop.left += me.cached.paste * 20 / scale.x;\r\n                    }\r\n\r\n                    if (prop.top !== undefined) {\r\n                        prop.top += me.cached.paste * 20 / scale.y;\r\n                    }\r\n\r\n                    var shape = Graph.factory(Graph.ns(clip.type), [prop]);\r\n                    shape.render(paper);\r\n                    shape.select();\r\n                });\r\n\r\n                me.cached.paste++;\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.ns('Graph.shape.activity');\r\n\r\n    Graph.shape.activity.Start = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'Start',\r\n            width: 60,\r\n            height: 60,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            type: 'activity.start',\r\n            style: 'graph-shape-activity-start'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, label;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            var cx = this.props.width / 2,\r\n                cy = this.props.height / 2;\r\n\r\n            block = (new Graph.svg.Ellipse(cx, cy, cx, cy))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .style({\r\n                    fill: this.props.fill,\r\n                    stroke: this.props.stroke,\r\n                    strokeWidth: this.props.strokeWidth\r\n                })\r\n                .data('text', this.props.label)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            pmgr.install('dragger', block, {ghost: true, cls: Graph.styles.SHAPE_DRAG});\r\n            pmgr.install('network', block, {wiring: 'h:v'});\r\n            pmgr.install('resizer', block);\r\n            pmgr.install('editor',  block);\r\n            pmgr.install('snapper', block);\r\n\r\n            block.on('edit.shape',      _.bind(this.onLabelEdit, this));\r\n            block.on('beforedrag.shape', _.bind(this.onBeforeDrag, this));\r\n            block.on('afterdrag.shape',   _.bind(this.onAfterDrag, this));\r\n            block.on('afterresize.shape',    _.bind(this.onAfterResize, this));\r\n            block.on('beforedestroy.shape',    _.bind(this.onBeforeDestroy, this));\r\n            block.on('afterdestroy.shape',    _.bind(this.onAfterDestroy, this));\r\n            block.on('select.shape',    _.bind(this.onSelect, this));\r\n            block.on('deselect.shape',  _.bind(this.onDeselect, this));\r\n            block.on('connect.shape', _.bind(this.onConnect, this));\r\n\r\n            label = (new Graph.svg.Text(cx, cy, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n\r\n            shape = block = label = null;\r\n        },\r\n\r\n        refresh: function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n            \r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                label = this.component('label');\r\n\r\n            var matrix, bound, cx, cy;\r\n\r\n            bound  = block.bbox().toJson(),\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            cx = bound.width  / 2;\r\n            cy = bound.height / 2;\r\n\r\n            block.attr({\r\n                cx: cx,\r\n                cy: cy\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            label.attr({\r\n                x: cx,\r\n                y: cy\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n            // update props\r\n\r\n            matrix = shape.matrix();\r\n\r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Start';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.shape.activity.Final = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'End',\r\n            width: 60,\r\n            height: 60,\r\n            left: 0,\r\n            top: 0,\r\n            fill: '#FF4081'\r\n        },\r\n\r\n        metadata: {\r\n            type: 'activity.final',\r\n            style: 'graph-shape-activity-final'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, inner, label;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            var cx = this.props.width / 2,\r\n                cy = this.props.height / 2;\r\n\r\n            block = (new Graph.svg.Ellipse(cx, cy, cx, cy))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .style({\r\n                    stroke: this.props.stroke,\r\n                    strokeWidth: this.props.strokeWidth\r\n                })\r\n                .data('text', this.props.label)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            pmgr.install('dragger', block, {ghost: true, cls: Graph.styles.SHAPE_DRAG});\r\n            pmgr.install('network', block, {wiring: 'h:v'});\r\n            pmgr.install('resizer', block);\r\n            pmgr.install('editor',  block);\r\n            pmgr.install('snapper', block);\r\n\r\n            block.on('edit.shape',      _.bind(this.onLabelEdit, this));\r\n            block.on('beforedrag.shape', _.bind(this.onBeforeDrag, this));\r\n            block.on('afterdrag.shape',   _.bind(this.onAfterDrag, this));\r\n            block.on('afterresize.shape',    _.bind(this.onAfterResize, this));\r\n            block.on('beforedestroy.shape',    _.bind(this.onBeforeDestroy, this));\r\n            block.on('afterdestroy.shape',    _.bind(this.onAfterDestroy, this));\r\n            block.on('select.shape',    _.bind(this.onSelect, this));\r\n            block.on('deselect.shape',  _.bind(this.onDeselect, this));\r\n            block.on('connect.shape', _.bind(this.onConnect, this));\r\n\r\n            inner = (new Graph.svg.Ellipse(cx, cy, cx - 6, cy - 6))\r\n                .addClass('comp-inner')\r\n                .style({\r\n                    fill: this.props.fill\r\n                })\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            label = (new Graph.svg.Text(cx, cy, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .addClass('comp-label')\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n            comp.inner = inner.guid();\r\n\r\n            shape = block = label = inner = null;\r\n        },\r\n\r\n        fill: function(value) {\r\n            if (value === undefined) {\r\n                return this.props.value;\r\n            }\r\n\r\n            this.component('inner').elem.css('fill', value);\r\n            this.props.fill = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        refresh: function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                inner = this.component('inner'),\r\n                label = this.component('label');\r\n\r\n            var matrix, bound, cx, cy;\r\n\r\n            bound  = block.bbox().toJson(),\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            cx = bound.width / 2,\r\n            cy = bound.height / 2;\r\n\r\n            block.attr({\r\n                cx: cx,\r\n                cy: cy\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            label.attr({\r\n                x: cx,\r\n                y: cy\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n            inner.attr({\r\n                cx: cx,\r\n                cy: cy,\r\n                rx: cx - 6,\r\n                ry: cy - 6\r\n            });\r\n\r\n            // update props\r\n            matrix = shape.matrix();\r\n\r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Final';\r\n        },\r\n\r\n        onAfterDestroy: function() {\r\n            // remove label\r\n            this.component('label').remove();\r\n\r\n            // remove inner\r\n            this.component('inner').remove();\r\n\r\n            // remove shape\r\n            this.component('shape').remove();\r\n\r\n            for (var name in this.components) {\r\n                this.components[name] = null;\r\n            }\r\n\r\n            Graph.registry.shape.unregister(this);\r\n            \r\n            this.fire('afterdestroy');\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.shape.activity.Action = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'Action',\r\n            width: 140,\r\n            height: 60,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            type: 'activity.action',\r\n            icon: Graph.icons.SHAPE_ACTION,\r\n            style: 'graph-shape-activity-action'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, label;\r\n\r\n            var cx = this.props.width / 2,\r\n                cy = this.props.height / 2;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Rect(0, 0, this.props.width, this.props.height))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .style({\r\n                    fill: this.props.fill,\r\n                    stroke: this.props.stroke,\r\n                    strokeWidth: this.props.strokeWidth\r\n                })\r\n                .data('text', this.props.label)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            pmgr.install('dragger', block, {ghost: true, cls: Graph.styles.SHAPE_DRAG});\r\n            pmgr.install('resizer', block);\r\n            pmgr.install('editor',  block);\r\n            pmgr.install('network', block, {wiring: 'h:v'});\r\n            pmgr.install('snapper', block);\r\n            pmgr.install('rotator', block);\r\n\r\n            block.on('edit.shape', _.bind(this.onLabelEdit, this));\r\n            block.on('beforedrag.shape', _.bind(this.onBeforeDrag, this));\r\n            block.on('afterdrag.shape', _.bind(this.onAfterDrag, this));\r\n            block.on('afterresize.shape', _.bind(this.onAfterResize, this));\r\n            block.on('beforedestroy.shape', _.bind(this.onBeforeDestroy, this));\r\n            block.on('afterdestroy.shape', _.bind(this.onAfterDestroy, this));\r\n            block.on('select.shape', _.bind(this.onSelect, this));\r\n            block.on('deselect.shape', _.bind(this.onDeselect, this));\r\n            block.on('connect.shape', _.bind(this.onConnect, this));\r\n            block.on('afterrotate.shape', _.bind(this.onAfterRotate, this));\r\n\r\n            label = (new Graph.svg.Text(cx, cy, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n\r\n            if (this.props.rotate) {\r\n                this.rotate(this.props.rotate);\r\n            }\r\n\r\n            shape = block = label = null;\r\n        },\r\n        \r\n        refresh: function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n            \r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                label = this.component('label');\r\n\r\n            var bound, matrix;\r\n\r\n            bound = block.bbox().toJson();\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            block.attr({\r\n                x: 0,\r\n                y: 0\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            label.attr({\r\n                x: bound.width  / 2,\r\n                y: bound.height / 2\r\n            });\r\n\r\n            label.wrap(bound.width - 10);\r\n\r\n            // update props\r\n\r\n\r\n            matrix = shape.matrix();\r\n            \r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        onAfterResize: function() {\r\n            this.refresh();\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Action';\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.shape.activity.Fork = Graph.extend(Graph.shape.Shape, {\r\n        props: {\r\n            width: 300,\r\n            height: 15,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            type: 'activity.fork',\r\n            style: 'graph-shape-activity-fork'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, label;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Rect(0, 0, this.props.width, this.props.height, 0))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            pmgr.install('dragger', block, {ghost: true, cls: Graph.styles.SHAPE_DRAG});\r\n            pmgr.install('resizer', block);\r\n            pmgr.install('snapper', block);\r\n            pmgr.install('network', block, {\r\n                wiring: 'v:v', \r\n                tuning: false,\r\n                limitIncoming: 1,\r\n                limitOutgoing: 0\r\n            });\r\n\r\n            block.on('beforedrag.shape', _.bind(this.onBeforeDrag, this));\r\n            block.on('afterdrag.shape',   _.bind(this.onAfterDrag, this));\r\n            block.on('afterresize.shape',    _.bind(this.onAfterResize, this));\r\n            block.on('beforedestroy.shape',    _.bind(this.onBeforeDestroy, this));\r\n            block.on('afterdestroy.shape',    _.bind(this.onAfterDestroy, this));\r\n            block.on('select.shape',    _.bind(this.onSelect, this));\r\n            block.on('deselect.shape',  _.bind(this.onDeselect, this));\r\n            block.on('connect.shape', _.bind(this.onConnect, this));\r\n            \r\n            label = (new Graph.svg.Text(0, 0, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n        },\r\n\r\n        refresh: function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n            \r\n            var block = this.component('block'),\r\n                shape = this.component('shape');\r\n\r\n            var bound, matrix;\r\n\r\n            bound = block.bbox().toJson();\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            block.attr({\r\n                x: 0,\r\n                y: 0\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            matrix = shape.matrix();\r\n\r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Join';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.shape.activity.Join = Graph.extend(Graph.shape.Shape, {\r\n        props: {\r\n            width: 300,\r\n            height: 15,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        metadata: {\r\n            type: 'activity.join',\r\n            style: 'graph-shape-activity-join'\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, label;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Rect(0, 0, this.props.width, this.props.height, 0))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            pmgr.install('dragger', block, {ghost: true, cls: Graph.styles.SHAPE_DRAG});\r\n            pmgr.install('resizer', block);\r\n            pmgr.install('snapper', block);\r\n            pmgr.install('network', block, {\r\n                wiring: 'v:v', \r\n                tuning: false,\r\n                limitIncoming: 0,\r\n                limitOutgoing: 1\r\n            });\r\n\r\n            block.on('beforedrag.shape', _.bind(this.onBeforeDrag, this));\r\n            block.on('afterdrag.shape',   _.bind(this.onAfterDrag, this));\r\n            block.on('afterresize.shape',    _.bind(this.onAfterResize, this));\r\n            block.on('beforedestroy.shape',    _.bind(this.onBeforeDestroy, this));\r\n            block.on('afterdestroy.shape',    _.bind(this.onAfterDestroy, this));\r\n            block.on('select.shape',    _.bind(this.onSelect, this));\r\n            block.on('deselect.shape',  _.bind(this.onDeselect, this));\r\n            block.on('connect.shape', _.bind(this.onConnect, this));\r\n            \r\n            label = (new Graph.svg.Text(0, 0, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.label = label.guid();\r\n        },\r\n\r\n        refresh: function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n            \r\n            var block = this.component('block'),\r\n                shape = this.component('shape');\r\n\r\n            var bound, matrix;\r\n\r\n            bound = block.bbox().toJson();\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n\r\n            block.attr({\r\n                x: 0,\r\n                y: 0\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            matrix = shape.matrix();\r\n\r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Join';\r\n        }\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var TRANSFER_RECEIVE = 'receive',\r\n        TRANSFER_DISPOSE = 'dispose';\r\n\r\n    Graph.shape.activity.Lane = Graph.extend(Graph.shape.Shape, {\r\n\r\n        props: {\r\n            label: 'Participant Role',\r\n            width: 1000,\r\n            height: 200,\r\n            left: 0,\r\n            top: 0\r\n        },\r\n\r\n        components: {\r\n            header: null\r\n        },\r\n\r\n        tree: {\r\n            pool: null\r\n        },\r\n\r\n        transfer: null,\r\n\r\n        resizing: null,\r\n\r\n        metadata: {\r\n            type: 'activity.lane',\r\n            icon: Graph.icons.SHAPE_LANE,\r\n            style: 'graph-shape-activity-lane'\r\n        },\r\n\r\n        constructor: function(options) {\r\n            this.superclass.prototype.constructor.call(this, options);\r\n            this.initDropzone();\r\n        },\r\n\r\n        initMetadata: function() {\r\n            this.metadata.tools = [\r\n                {\r\n                    name: 'config',\r\n                    icon: Graph.icons.CONFIG,\r\n                    title: Graph._('Click to config shape'),\r\n                    enabled: true\r\n                },\r\n                {\r\n                    name: 'above',\r\n                    icon: Graph.icons.LANE_ABOVE,\r\n                    title: Graph._('Add shape above'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onAboveToolClick, this)\r\n                },\r\n                {\r\n                    name: 'below',\r\n                    icon: Graph.icons.LANE_BELOW,\r\n                    title: Graph._('Add shape below'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBelowToolClick, this)\r\n                },\r\n                {\r\n                    name: 'moveup',\r\n                    icon: Graph.icons.MOVE_UP,\r\n                    title: Graph._('Move up'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onUpToolClick, this)\r\n                },\r\n                {\r\n                    name: 'movedown',\r\n                    icon: Graph.icons.MOVE_DOWN,\r\n                    title: Graph._('Move down'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onDownToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtofront',\r\n                    icon: Graph.icons.SEND_TO_FRONT,\r\n                    title: Graph._('Send to front'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onFrontToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtoback',\r\n                    icon: Graph.icons.SEND_TO_BACK,\r\n                    title: Graph._('Send to back'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBackToolClick, this)\r\n                },\r\n                {\r\n                    name: 'trash',\r\n                    icon: Graph.icons.TRASH,\r\n                    title: Graph._('Click to remove shape'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onTrashToolClick, this)\r\n                }\r\n            ];\r\n        },\r\n\r\n        initComponent: function() {\r\n            var comp = this.components,\r\n                pmgr = this.plugins.manager;\r\n\r\n            var shape, block, header, label, child;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Rect(0, 0, this.props.width, this.props.height, 0))\r\n                .addClass(Graph.styles.SHAPE_BLOCK)\r\n                .render(shape);\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            pmgr.install('resizer', block, {restriction: { width: 200, height: 100 }});\r\n            pmgr.install('dragger', block, {ghost: true, batchSync: false, cls: Graph.styles.SHAPE_DRAG});\r\n\r\n            block.on('beforedrag.shape', _.bind(this.onBeforeDrag, this));\r\n            block.on('afterdrag.shape',   _.bind(this.onAfterDrag, this));\r\n            block.on('beforeresize.shape', _.bind(this.onBeforeResize, this));\r\n            block.on('afterresize.shape',    _.bind(this.onAfterResize, this));\r\n            block.on('beforedestroy.shape',    _.bind(this.onBeforeDestroy, this));\r\n            block.on('afterdestroy.shape',    _.bind(this.onAfterDestroy, this));\r\n            block.on('select.shape',    _.bind(this.onSelect, this));\r\n            block.on('deselect.shape',  _.bind(this.onDeselect, this));\r\n\r\n            header = (new Graph.svg.Rect(0, 0, 30, this.props.height, 0))\r\n                .addClass(Graph.styles.SHAPE_HEADER)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            header.data('text', this.props.label);\r\n\r\n            pmgr.install('editor', header, {\r\n                width: 200, \r\n                height: 100,\r\n                offset: 'pointer'\r\n            });\r\n\r\n            header.on('edit.shape', _.bind(this.onLabelEdit, this));\r\n\r\n            var tx = 15,\r\n                ty = this.props.height / 2;\r\n\r\n            label = (new Graph.svg.Text(tx, ty, this.props.label))\r\n                .addClass(Graph.styles.SHAPE_LABEL)\r\n                .selectable(false)\r\n                .clickable(false)\r\n                .render(shape);\r\n\r\n            label.rotate(270, tx, ty).commit();\r\n\r\n            child = (new Graph.svg.Group())\r\n                .addClass(Graph.styles.SHAPE_CHILD)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            child.translate(50, 0).commit();\r\n\r\n            comp.shape = shape.guid();\r\n            comp.block = block.guid();\r\n            comp.header = header.guid();\r\n            comp.label = label.guid();\r\n            comp.child = child.guid();\r\n\r\n            // set virtual pool\r\n            this.tree.pool = new Graph.shape.activity.Pool();\r\n            this.tree.pool.insert(this);\r\n\r\n            shape = block = header = label = null;\r\n        },\r\n\r\n        initDropzone: function() {\r\n            var me = this,\r\n                comp = me.component(),\r\n                block = me.component('block'),\r\n                children = me.children();\r\n\r\n            block.interactable().dropzone({\r\n                accept: '.shape-draggable',\r\n                overlap: .2\r\n            })\r\n            .on('dragenter', function laneDragEnter(e){\r\n                var poolGuid = me.pool().guid,\r\n                    laneGuid = me.guid();\r\n\r\n                var vector, shape, batch;\r\n\r\n                if ( ! me.transfer) {\r\n                    vector = Graph.registry.vector.get(e.relatedTarget);\r\n\r\n                    if (vector) {\r\n\r\n                        shape = Graph.registry.shape.get(vector);\r\n\r\n                        if (shape) {\r\n\r\n                            if (\r\n                                (shape.guid() == laneGuid) || \r\n                                (shape.is('activity.lane') && shape.pool().guid == poolGuid)\r\n                            ) {\r\n                                return;\r\n                            }\r\n\r\n                            me.transfer = {\r\n                                shape: shape,\r\n                                batch: []\r\n                            };\r\n\r\n                            me.transfer.shape.on('afterdrag', onTransferEnd);\r\n                            me.transfer.batch = [shape];\r\n\r\n                            var collector = vector.collector();\r\n\r\n                            if (collector) {\r\n                                batch = collector.collection.toArray().slice();\r\n                                \r\n                                _.forEach(batch, function(v){\r\n                                    var s = Graph.registry.shape.get(v);\r\n                                    if (s && s.guid() != shape.guid()) {\r\n                                        me.transfer.batch.push(s);\r\n                                    }\r\n                                });\r\n\r\n                                batch = null;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (me.transfer) {\r\n                    comp.addClass('receiving');\r\n                }\r\n            })\r\n            .on('dragleave', function laneDragLeave(e){\r\n                comp.removeClass('receiving');\r\n            })\r\n            .on('drop', function laneDrop(e){\r\n                if (me.transfer) {\r\n                    var delay;\r\n\r\n                    delay = _.delay(function(){\r\n                        clearTimeout(delay);\r\n                        delay = null;\r\n\r\n                        // takeout lane from batch\r\n                        var appended = [],\r\n                            lanes = [],\r\n                            poolGuid = me.pool().guid,\r\n                            laneGuid = me.guid();\r\n\r\n                        _.forEach(me.transfer.batch, function(shape){\r\n                            if (shape.is('activity.lane')) {\r\n                                if (shape.guid() != laneGuid && shape.pool().guid != poolGuid) {\r\n                                    lanes.push(shape);\r\n                                }\r\n                            } else {\r\n                                appended.push(shape);\r\n                            }\r\n                        });\r\n\r\n                        if (appended.length) {\r\n                            me.addChild(appended);\r\n                        }\r\n\r\n                        if (lanes.length) {\r\n                            me.addSiblingBellow(lanes);\r\n                        }\r\n\r\n                    }, 0);\r\n\r\n                }\r\n\r\n                comp.removeClass('receiving');\r\n            });\r\n\r\n            block = null;\r\n\r\n            /////////\r\n\r\n            function onTransferEnd() {\r\n                var delay;\r\n\r\n                delay = _.delay(function(){\r\n\r\n                    clearTimeout(delay);\r\n                    delay = null;\r\n\r\n                    me.transfer.shape.off('afterdrag', onTransferEnd);\r\n                    me.transfer = null;\r\n\r\n                }, 0);\r\n            }\r\n        },\r\n\r\n        pool: function() {\r\n            return this.tree.pool;\r\n        },\r\n\r\n        // @Override\r\n        render: function(paper, method, sibling) {\r\n            var component = this.component();\r\n\r\n            method = _.defaultTo(method, 'prepend');\r\n\r\n            component.render(paper, method, sibling);\r\n\r\n            // save\r\n            this.tree.paper = paper.guid();\r\n            Graph.registry.shape.setContext(this.guid(), paper.guid());\r\n        },\r\n\r\n        sendToBack: function() {\r\n            var paper = this.paper();\r\n        },\r\n\r\n        sendToFront: function() {\r\n            this.pool().bringToFront(this);\r\n        },\r\n\r\n        refresh: function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n\r\n            var block = this.component('block'),\r\n                shape = this.component('shape'),\r\n                child = this.component('child'),\r\n                header = this.component('header'),\r\n                label = this.component('label');\r\n\r\n            var matrix, bound;\r\n\r\n            bound  = block.bbox().toJson();\r\n            matrix = Graph.matrix().translate(bound.x, bound.y);\r\n\r\n            shape.matrix().multiply(matrix);\r\n            shape.attr('transform', shape.matrix().toValue());\r\n            shape.dirty(true);\r\n            child.dirty(true);\r\n\r\n            block.attr({\r\n                x: 0,\r\n                y: 0\r\n            });\r\n\r\n            block.dirty(true);\r\n            block.resizable().redraw();\r\n\r\n            header.attr({\r\n                x: 0,\r\n                y: 0,\r\n                height: bound.height\r\n            });\r\n\r\n            header.dirty(true);\r\n\r\n            var tx = 15,\r\n                ty = bound.height / 2;\r\n\r\n            label.graph.matrix = Graph.matrix();\r\n            label.attr('transform', '');\r\n\r\n            label.attr({\r\n                x: tx,\r\n                y: ty\r\n            });\r\n\r\n            label.wrap(bound.height - 10);\r\n            label.rotate(270, tx, ty).commit();\r\n\r\n            // update props\r\n\r\n            matrix = shape.matrix();\r\n\r\n            this.data({\r\n                left: matrix.props.e,\r\n                top: matrix.props.f,\r\n                width: bound.width,\r\n                height: bound.height\r\n            });\r\n\r\n            bound  = null;\r\n            matrix = null;\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            var result = this.superclass.prototype.attr.call(this, name, value),\r\n                maps = {\r\n                    width: 'width',\r\n                    height: 'height',\r\n                    left: 'x',\r\n                    top: 'y'\r\n                };\r\n\r\n            var block, key, val;\r\n\r\n            if (_.isPlainObject(name)) {\r\n\r\n                block = this.component('block');\r\n\r\n                for (key in name) {\r\n                    if (maps[key]) {\r\n                        val = name[key];\r\n                        block.attr(maps[key], val);\r\n                    }\r\n                }\r\n\r\n                this.refresh();\r\n\r\n            } else if (value !== undefined) {\r\n                block = this.component('block');\r\n\r\n                if (maps[name]) {\r\n                    block.attr(maps[name], value);\r\n                }\r\n\r\n                this.refresh();\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        height: function(value) {\r\n            if (value !== undefined) {\r\n                var childBox = this.component('child').bbox().toJson();\r\n                value = Math.max(value, (childBox.y + childBox.height + 20));    \r\n            }\r\n\r\n            return this.superclass.prototype.height.call(this, value);\r\n        },\r\n\r\n        width: function(value) {\r\n            if (value !== undefined) {\r\n                var childBox = this.component('child').bbox().toJson();\r\n                value = Math.max(value, (childBox.x + childBox.width + 20));\r\n            }\r\n\r\n            return this.superclass.prototype.width.call(this, value);\r\n        },\r\n\r\n        stroke: function(value) {\r\n            var result = this.superclass.prototype.stroke.call(this, value);\r\n            if (value !== undefined) {\r\n                this.component('header').elem.css('stroke', this.props.stroke);\r\n            }\r\n            return result;\r\n        },\r\n\r\n        addChild: function(child, redraw) {\r\n            this.superclass.prototype.addChild.call(this, child, redraw);\r\n            this.pool().invalidate();\r\n        },\r\n\r\n        removeChild: function(child) {\r\n            this.superclass.prototype.removeChild.call(this, child);\r\n            this.pool().invalidate();\r\n        },\r\n\r\n        addSiblingBellow: function(lanes) {\r\n            if ( ! _.isArray(lanes)) {\r\n                lanes = [lanes];\r\n            }\r\n\r\n            var pool = this.pool(),\r\n                height = _.reduce(\r\n                    _.map(lanes, function(lane){\r\n                        return lane.height();\r\n                    }),\r\n                    function(result, curr) {\r\n                        return result + curr;\r\n                    },\r\n                    0\r\n                ),\r\n                offsetWidth = this.width(),\r\n                offsetLeft = this.left(),\r\n                offsetTop = (this.top() + this.height());\r\n\r\n            pool.createSpaceBellow(this, height);\r\n\r\n            _.forEach(lanes, function(lane){\r\n\r\n                var boxBefore = lane.component().bboxView().clone().toJson();\r\n                var boxAfter, dx, dy;\r\n\r\n                lane.component().reset();\r\n\r\n                lane.attr({\r\n                    width: offsetWidth,\r\n                    left: offsetLeft,\r\n                    top: offsetTop\r\n                });\r\n\r\n                height = lane.height();\r\n                offsetTop += height;\r\n                \r\n                lane.tree.pool = pool;\r\n                pool.insert(lane);\r\n\r\n                lane.children().each(function(c){\r\n                    var netcom = c.connectable().component();\r\n                    netcom && (netcom.dirty(true));\r\n                });\r\n\r\n                boxAfter = lane.component().bboxView().toJson();\r\n\r\n                dx = boxAfter.x - boxBefore.x;\r\n                dy = boxAfter.y - boxBefore.y;\r\n\r\n                pool.relocateLinks(dx, dy, lane);\r\n                \r\n            });\r\n\r\n            pool.invalidate();\r\n            this.refreshSnapper();\r\n            \r\n        },\r\n\r\n        createSiblingAbove: function(options) {\r\n            var sibling = new Graph.shape.activity.Lane(options),\r\n                paper = this.paper(),\r\n                pool = this.pool();\r\n\r\n            // create space above\r\n            pool.createSpaceAbove(this, sibling.height());\r\n\r\n            // sync position 'above'\r\n            var top = (this.top() - sibling.height());\r\n\r\n            sibling.attr({\r\n                width: this.props.width,\r\n                left: this.props.left,\r\n                top: top\r\n            });\r\n\r\n            // sync pool\r\n            sibling.tree.pool = pool;\r\n\r\n            var result = pool.insert(sibling);\r\n\r\n            if (result !== undefined) {\r\n                sibling.render(paper, 'before', this.component());\r\n                pool.invalidate();\r\n                this.refreshSnapper();\r\n            }\r\n\r\n            return sibling;\r\n        },\r\n\r\n        createSiblingBellow: function(options) {\r\n            var sibling = new Graph.shape.activity.Lane(options),\r\n                paper = this.paper(),\r\n                pool = this.pool();\r\n\r\n            // create space\r\n            pool.createSpaceBellow(this, sibling.height());\r\n\r\n            // sync position 'bellow'\r\n            var bottom = (this.top() + this.height());\r\n\r\n            sibling.attr({\r\n                width: this.props.width,\r\n                left: this.props.left,\r\n                top: bottom\r\n            });\r\n\r\n            // sync pool\r\n            sibling.tree.pool = pool;\r\n\r\n            var result = pool.insert(sibling);\r\n\r\n            if (result !== undefined) {\r\n                sibling.render(paper, 'after', this.component());\r\n                pool.invalidate();\r\n                this.refreshSnapper();\r\n            }\r\n\r\n            return sibling;\r\n        },\r\n\r\n        refreshSnapper: function() {\r\n            this.paper().snapper().refresh();\r\n        },\r\n\r\n        autoResize: function() {\r\n\r\n            var shapeComponent = this.component(),\r\n                blockComponent = this.component('block');\r\n\r\n            if (blockComponent.isSelected()) {\r\n                blockComponent.deselect();\r\n            }\r\n\r\n            var bbox = this.bbox().toJson(),\r\n                actualBBox = shapeComponent.bbox().toJson(),\r\n                blockComponent = this.component('block'),\r\n                padding = {\r\n                    top: 20,\r\n                    bottom: 20,\r\n                    left: 40,\r\n                    right: 20\r\n                };\r\n\r\n            var bounds = _.extend({}, bbox);\r\n\r\n            if (actualBBox.y + padding.top - bbox.y < padding.top) {\r\n                bounds.y = actualBBox.y - padding.top;\r\n            }\r\n\r\n            if (actualBBox.x + padding.left - bbox.x < padding.left) {\r\n                bounds.x = actualBBox.x - padding.left;\r\n            }\r\n\r\n            if (bbox.x2 - actualBBox.x2 + padding.right < padding.right) {\r\n                bounds.x2 = actualBBox.x2 + padding.right;\r\n            }\r\n\r\n            if (bbox.y2 - actualBBox.y2 + padding.bottom < padding.bottom) {\r\n                bounds.y2 = actualBBox.y2 + padding.bottom;\r\n            }\r\n\r\n            var dx = bounds.x - bbox.x,\r\n                dy = bounds.y - bbox.y;\r\n\r\n            var width = bounds.x2 - bounds.x,\r\n                height = bounds.y2 - bounds.y;\r\n\r\n            var pool = this.pool(),\r\n                curr = this.guid(),\r\n                lanes = pool.populateChildren(),\r\n                childOffsets = {};\r\n\r\n            lanes.each(function(lane){\r\n                var childBox = lane.component('child').bboxView().toJson();\r\n                childOffsets[lane.guid()] = {\r\n                    x: childBox.x,\r\n                    y: childBox.y\r\n                };\r\n            });\r\n\r\n            this.translate(dx, dy);\r\n\r\n            this.attr({\r\n                width: width,\r\n                height: height\r\n            });\r\n\r\n            pool.resizeBy(this);\r\n\r\n            lanes.each(function(lane){\r\n                var child = lane.component('child'),\r\n                    childBox = child.bboxView().toJson(),\r\n                    offset = childOffsets[lane.guid()]\r\n\r\n                if (offset) {\r\n                    var dx = offset.x - childBox.x,\r\n                        dy = offset.y - childBox.y;\r\n\r\n                    child.translate(dx, dy).commit();\r\n                }\r\n\r\n            });\r\n\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.activity.Lane';\r\n        },\r\n\r\n        toJson: function() {\r\n            var result = this.superclass.prototype.toJson.call(this);\r\n            result.props.pool = this.pool().guid;\r\n            return result;\r\n        },\r\n\r\n        onAfterDestroy: function() {\r\n            var me = this, guid = this.guid();\r\n\r\n            me.cascade(function(shape){\r\n                if (shape.guid() != guid) {\r\n                    shape.remove();\r\n                }\r\n            });\r\n\r\n            this.pool().remove(this);\r\n\r\n            // remove child\r\n            this.component('child').remove();\r\n\r\n            // remove label\r\n            this.component('label').remove();\r\n\r\n            // remove header\r\n            this.component('header').remove();\r\n\r\n            // remove shape\r\n            this.component('shape').remove();\r\n\r\n            for (var name in this.components) {\r\n                this.components[name] = null;\r\n            }\r\n\r\n            Graph.registry.shape.unregister(this);\r\n            this.fire('afterdestroy');\r\n        },\r\n\r\n        onChildConnect: function(e) {\r\n            var sourceParent = e.source.parent(),\r\n                targetParent = e.target.parent();\r\n\r\n            if (sourceParent && targetParent) {\r\n                var sourcePool = sourceParent.pool(),\r\n                    targetPool = targetParent.pool();\r\n\r\n                if (sourcePool.guid != targetPool.guid) {\r\n                    e.link.type('message');\r\n                }\r\n            }\r\n        },\r\n\r\n        onChildBeforeDestroy: function(e) {\r\n            this.superclass.prototype.onChildBeforeDestroy.call(this, e);\r\n            this.pool().invalidate();\r\n        },\r\n\r\n        onSelect: function(e) {\r\n            var me = this, guid = me.guid();\r\n\r\n            var delay = _.delay(function(){\r\n\r\n                clearTimeout(delay);\r\n                delay = null;\r\n\r\n                me.cascade(function(curr){\r\n                    if (curr.guid() != guid) {\r\n                        var vector, network;\r\n\r\n                        // deselect shape\r\n                        vector = curr.draggable().component();\r\n\r\n                        if (vector) {\r\n                            vector.deselect();\r\n                        }\r\n\r\n                        // deselect links\r\n                        network = curr.connectable().plugin();\r\n\r\n                        if (network) {\r\n                            var connections = network.connections();\r\n                            _.forEach(connections, function(conn){\r\n                                conn.link.deselect();\r\n                            });\r\n                        }\r\n                        \r\n                    }\r\n                });\r\n\r\n                me.component('shape').addClass('shape-selected');\r\n                Graph.topic.publish('shape:select', {shape: me});\r\n\r\n            }, 0);\r\n        },\r\n\r\n        onBeforeDrag: function(e) {\r\n            if (e.master) {\r\n\r\n                this.fire(e);\r\n                this.paper().diagram().capture();\r\n\r\n                var links = this.pool().populateLinks();\r\n                var link, key;\r\n\r\n                for (key in links.isolated) {\r\n                    link = links.isolated[key].link;\r\n                    link.deselect();\r\n                }\r\n\r\n                for (key in links.separated) {\r\n                    link = links.separated[key].link;\r\n                    link.deselect();\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        onAfterDrag: function(e) {\r\n            if (e.master) {\r\n                var blockComponent = this.component('block'),\r\n                    shapeComponent = this.component('shape'),\r\n                    childComponent = this.component('child'),\r\n                    blockMatrix = blockComponent.matrix(),\r\n                    pool = this.pool();\r\n\r\n                var shapeMatrix;\r\n\r\n                blockComponent.reset();\r\n\r\n                shapeComponent.matrix().multiply(blockMatrix);\r\n                shapeComponent.attr('transform', shapeComponent.matrix().toValue());\r\n                shapeComponent.dirty(true);\r\n                childComponent.dirty(true);\r\n\r\n                // update props\r\n                shapeMatrix = shapeComponent.matrix();\r\n\r\n                this.data({\r\n                    left: shapeMatrix.props.e,\r\n                    top: shapeMatrix.props.f\r\n                });\r\n\r\n                // forward\r\n                this.fire(e);\r\n\r\n                // sync other\r\n                pool.relocateSiblings(this, e.dx, e.dy);\r\n                pool.refreshContents();\r\n\r\n                // sync links\r\n                pool.relocateLinks(e.dx, e.dy);\r\n                pool.refreshChildren();\r\n\r\n                this.refreshSnapper();\r\n            }\r\n\r\n        },\r\n\r\n        onBeforeResize: function(e){\r\n            this.resizing = {\r\n                childOffsets: {}\r\n            };\r\n\r\n            // set resize restriction\r\n            // calculate max children bound for all lanes\r\n            var bounds = this.component('child').bboxView().toJson(),\r\n                lanes = this.pool().populateChildren(),\r\n                resizing = this.resizing;\r\n\r\n            lanes.each(function(lane){\r\n                var laneChildComponent = lane.component('child'),\r\n                    laneChildBox = laneChildComponent.bboxView().toJson();\r\n\r\n                resizing.childOffsets[lane.guid()] = {\r\n                    x: laneChildBox.x,\r\n                    y: laneChildBox.y\r\n                };\r\n\r\n                if (laneChildBox.x < bounds.x) {\r\n                    bounds.x = laneChildBox.x;\r\n                }\r\n\r\n                if (bounds.x2 < laneChildBox.x2) {\r\n                    bounds.x2 = laneChildBox.x2;\r\n                }\r\n\r\n            });\r\n\r\n            var resizer = e.resizer,\r\n                direction = e.direction,\r\n                origin = {\r\n                    x: bounds.x, \r\n                    y: bounds.y\r\n                },\r\n                padding = {\r\n                    top: 10,\r\n                    left: 40,\r\n                    right: 10,\r\n                    bottom: 10\r\n                };\r\n\r\n            switch(direction) {\r\n                case 'n':\r\n                    origin.x = (bounds.x + bounds.x2) / 2;\r\n                    origin.y = bounds.y2 - padding.bottom;\r\n                    break;\r\n                case 'e':\r\n                    origin.x = bounds.x + padding.right;\r\n                    origin.y = (bounds.y + bounds.y2) / 2;\r\n                    break;\r\n                case 's':\r\n                    origin.x = (bounds.x + bounds.x2) / 2;\r\n                    origin.y = bounds.y + padding.top;\r\n                    break;\r\n                case 'w':\r\n                    origin.x = bounds.x2 - padding.left;\r\n                    origin.y = (bounds.y + bounds.y2) / 2;\r\n                    break;\r\n                case 'ne':\r\n                    origin.x = bounds.x + padding.right;\r\n                    origin.y = bounds.y2 - padding.bottom;\r\n                    break;\r\n                case 'se':\r\n                    origin.x = bounds.x + padding.right;\r\n                    origin.y = bounds.y + padding.top;\r\n                    break;\r\n                case 'sw':\r\n                    origin.x = bounds.x2 - padding.left;\r\n                    origin.y = bounds.y + padding.top;\r\n                    break;\r\n                case 'nw':\r\n                    origin.x = bounds.x2 - padding.left;\r\n                    origin.y = bounds.y2 - padding.bottom;\r\n                    break;\r\n            }\r\n\r\n            var width = bounds.x2 - bounds.x,\r\n                height = bounds.y2 - bounds.y;\r\n\r\n            if (width <= 0) {\r\n                width = 200;\r\n            }\r\n\r\n            if (height <= 0) {\r\n                height = 100;\r\n            }\r\n\r\n            resizer.restrict({\r\n                width: width,\r\n                height: height,\r\n                origin: origin\r\n            });\r\n\r\n        },\r\n\r\n        onAfterResize: function(e) {\r\n            this.superclass.prototype.onAfterResize.call(this, e);\r\n\r\n            var pool = this.pool();\r\n            pool.resizeBy(this);\r\n\r\n            if (this.resizing) {\r\n                var lanes = pool.populateChildren(),\r\n                    resizing = this.resizing;\r\n\r\n                lanes.each(function(lane){\r\n                    var child = lane.component('child'),\r\n                        childBox = child.bboxView().toJson(),\r\n                        offset = resizing.childOffsets[lane.guid()];\r\n\r\n                    if (offset) {\r\n                        var dx = offset.x - childBox.x,\r\n                            dy = offset.y - childBox.y;\r\n\r\n                        child.translate(dx, dy).commit();\r\n                    }\r\n\r\n                });\r\n\r\n                this.resizing = resizing = null;\r\n            }\r\n\r\n        },\r\n\r\n        onAboveToolClick: function(e) {\r\n            this.createSiblingAbove();\r\n        },\r\n\r\n        onBelowToolClick: function(e) {\r\n            this.createSiblingBellow();\r\n        },\r\n\r\n        onUpToolClick: function(e) {\r\n            this.pool().moveUp(this);\r\n            this.refreshSnapper();\r\n        },\r\n\r\n        onDownToolClick: function(e) {\r\n            this.pool().moveDown(this);\r\n            this.refreshSnapper();\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATIC /////////\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    /**\r\n     * Virtual pool for lanes\r\n     */\r\n\r\n    var Pool = Graph.shape.activity.Pool = function() {\r\n        this.guid = 'pool-' + (++Pool.guid);\r\n\r\n        // tree nodes\r\n        this.lanes = (new Graph.collection.Tree([]))\r\n            .keygen(function(lane){\r\n                return lane.bbox.y;\r\n                // return (lane.bbox.y + (1e-9 * lane.bbox.x));\r\n            });\r\n\r\n        this.cached = {\r\n            nodes: {},\r\n            contents: null\r\n        };\r\n    };\r\n\r\n    Pool.prototype.invalidate = function() {\r\n        this.cached.contents = null;\r\n    };\r\n\r\n    Pool.prototype.populateChildren = function() {\r\n        var children = [];\r\n\r\n        _.forEach(this.lanes.toArray(), function(node){\r\n            var lane = Graph.registry.shape.get(node.lane);\r\n            children.push(lane);\r\n        });\r\n\r\n        return new Graph.collection.Shape(children);\r\n    };\r\n\r\n    Pool.prototype.bbox = function() {\r\n        var nodes = this.lanes.toArray(),\r\n             x = [],\r\n             y = [],\r\n            x2 = [],\r\n            y2 = [];\r\n\r\n        var bbox;\r\n\r\n        for (var i = nodes.length - 1; i >= 0; i--) {\r\n            bbox = nodes[i].bbox;\r\n\r\n            x.push(bbox.x);\r\n            y.push(bbox.y);\r\n\r\n            x2.push(bbox.x + bbox.width);\r\n            y2.push(bbox.y + bbox.height);\r\n        }\r\n\r\n         x = _.min(x);\r\n         y = _.min(y);\r\n        x2 = _.max(x2);\r\n        y2 = _.max(y2);\r\n\r\n        nodes = null;\r\n\r\n        return Graph.bbox({\r\n            x: x,\r\n            y: y,\r\n            x2: x2,\r\n            y2: y2,\r\n            width: x2 - x,\r\n            height: y2 - y\r\n        });\r\n    };\r\n\r\n    Pool.prototype.get = function(index) {\r\n        var data = this.lanes.get(index);\r\n        if (data) {\r\n            return Graph.registry.shape.get(data.lane);\r\n        }\r\n        return null;\r\n    };\r\n\r\n    Pool.prototype.prev = function(lane) {\r\n        var index = this.index(lane),\r\n            prev = this.lanes.get(index - 1);\r\n\r\n        if (prev) {\r\n            return Graph.registry.shape.get(prev.lane);\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    Pool.prototype.last = function() {\r\n        var index = this.size() - 1,\r\n            last = this.lanes.get(index);\r\n\r\n        if (last) {\r\n            return Graph.registry.shape.get(last.lane);\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Create new space\r\n     */\r\n    Pool.prototype.createSpaceAbove = function(lane, height) {\r\n        var laneIndex = this.index(lane),\r\n            prev = this.lanes.get(laneIndex - 1),\r\n            me = this;\r\n\r\n        if (prev) {\r\n            this.lanes.bubble(prev, function(curr){\r\n                var shape = Graph.registry.shape.get(curr.lane);\r\n                if (shape) {\r\n                    shape.translate(0, -height);\r\n                    curr.bbox = shape.bbox().toJson();\r\n\r\n                    shape.children().each(function(c){\r\n                        var comnet = c.connectable().component();\r\n                        comnet && (comnet.dirty(true));\r\n                    });\r\n\r\n                    me.relocateLinks(0, -height, shape);\r\n                }\r\n            });\r\n            this.lanes.order();\r\n        }\r\n    };\r\n\r\n    Pool.prototype.createSpaceBellow = function(lane, height) {\r\n        var laneIndex = this.index(lane),\r\n            next = this.lanes.get(laneIndex + 1),\r\n            me = this;\r\n\r\n        if (next) {\r\n            this.lanes.cascade(next, function(curr){\r\n                var shape = Graph.registry.shape.get(curr.lane);\r\n                if (shape) {\r\n                    shape.translate(0, height);\r\n                    curr.bbox = shape.bbox().toJson();\r\n\r\n                    shape.children().each(function(c){\r\n                        var comnet = c.connectable().component();\r\n                        comnet && (comnet.dirty(true));\r\n                    });\r\n\r\n                    me.relocateLinks(0, height, shape);\r\n                }\r\n            });\r\n            this.lanes.order();\r\n        }\r\n    };\r\n\r\n    Pool.prototype.relocateSiblings = function(lane, dx, dy) {\r\n        var root = this.lanes.root(),\r\n            guid = lane.guid();\r\n\r\n        if (root) {\r\n            this.lanes.cascade(root, function(curr){\r\n                if (curr.lane == guid) {\r\n                    curr.bbox = lane.bbox().toJson();\r\n                } else {\r\n                    var shape = Graph.registry.shape.get(curr.lane);\r\n                    if (shape) {\r\n                        shape.translate(dx, dy);\r\n                        curr.bbox = shape.bbox().toJson();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    Pool.prototype.resizeBy = function(lane) {\r\n        var guid = lane.guid(),\r\n            bbox = lane.bbox().toJson(),\r\n            root = this.lanes.root(),\r\n            index = this.index(lane);\r\n\r\n        if (root) {\r\n\r\n            // sample\r\n            var prev, next, dx1, dx2, dy1, dy2;\r\n\r\n            prev = this.lanes.get(index - 1);\r\n            next = this.lanes.get(index + 1);\r\n\r\n            dx1 = 0;\r\n            dy1 = 0;\r\n\r\n            dx2 = 0\r\n            dy2 = 0;\r\n\r\n            if (prev) {\r\n                dx1 = bbox.x - prev.bbox.x;\r\n                dy1 = bbox.y - (prev.bbox.y + prev.bbox.height);\r\n            }\r\n\r\n            if (next) {\r\n                dx2 = bbox.x - next.bbox.x;\r\n                dy2 = (bbox.y + bbox.height) - next.bbox.y;\r\n            }\r\n\r\n            this.lanes.cascade(root, function(curr, i){\r\n                if (curr.lane == guid) {\r\n                    curr.bbox = bbox;\r\n                } else {\r\n                    var shape = Graph.registry.shape.get(curr.lane);\r\n                    if (shape) {\r\n\r\n                        var group = shape.component(),\r\n                            block = shape.component('block');\r\n\r\n                        // up\r\n                        if (index > i) {\r\n                            shape.translate(dx1, dy1);\r\n                        }\r\n                        // down\r\n                        else if (index < i) {\r\n                            shape.translate(dx2, dy2);\r\n                        }\r\n\r\n                        block.attr({\r\n                            width: bbox.width\r\n                        });\r\n\r\n                        block.dirty(true);\r\n                        shape.refresh();\r\n\r\n                        curr.bbox = shape.bbox().toJson();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        bbox = null;\r\n    };\r\n\r\n    Pool.prototype.bringToFront = function(lane) {\r\n        var sets = Graph.$('[data-pool=\"' + this.guid + '\"]'),\r\n            last = sets.last();\r\n\r\n        if (last.length()) {\r\n            if (last.node() != lane.component().node()) {\r\n                last.after(lane.component().elem);\r\n            }\r\n        }\r\n    };\r\n\r\n    Pool.prototype.moveUp = function(lane) {\r\n        var index = this.index(lane),\r\n            prev  = this.get(index - 1),\r\n            laneNode = this.lanes.get(index),\r\n            prevNode = this.lanes.get(index - 1);\r\n\r\n        if (prev) {\r\n            var laneBox = lane.bbox().toJson(),\r\n                prevBox = prev.bbox().toJson();\r\n\r\n            var dx1 = 0,\r\n                dy1 = prevBox.y - laneBox.y,\r\n                dx2 = 0,\r\n                dy2 = laneBox.height;\r\n\r\n            laneNode.bbox.y  += dy1;\r\n            laneNode.bbox.y2 += dy1;\r\n\r\n            prevNode.bbox.y  += dy2;\r\n            prevNode.bbox.y2 += dy2;\r\n\r\n            lane.translate(dx1, dy1);\r\n            prev.translate(dx2, dy2);\r\n\r\n            this.lanes.order();\r\n\r\n            lane.children().each(function(c){\r\n                var comnet = c.connectable().component();\r\n                comnet && (comnet.dirty(true));\r\n            });\r\n\r\n            prev.children().each(function(c){\r\n                var comnet = c.connectable().component();\r\n                comnet && (comnet.dirty(true));\r\n            });\r\n\r\n            this.relocateLinks(dx1, dy1, lane);\r\n            this.relocateLinks(dx2, dy2, prev);\r\n        }\r\n    };\r\n\r\n    Pool.prototype.moveDown = function(lane) {\r\n        var index = this.index(lane),\r\n            next  = this.get(index + 1),\r\n            laneNode = this.lanes.get(index),\r\n            nextNode = this.lanes.get(index + 1);\r\n\r\n        if (next) {\r\n            var laneBox = lane.bbox().toJson(),\r\n                nextBox = next.bbox().toJson();\r\n\r\n            var dx1 = 0,\r\n                dy1 = nextBox.height,\r\n                dx2 = 0,\r\n                dy2 = laneBox.y - nextBox.y;\r\n\r\n            laneNode.bbox.y  += dy1;\r\n            laneNode.bbox.y2 += dy1;\r\n\r\n            nextNode.bbox.y  += dy2;\r\n            nextNode.bbox.y2 += dy2;\r\n\r\n            lane.translate(dx1, dy1);\r\n            next.translate(dx2, dy2);\r\n\r\n            this.lanes.order();\r\n\r\n            lane.children().each(function(c){\r\n                var comnet = c.connectable().component();\r\n                comnet && (comnet.dirty(true));\r\n            });\r\n\r\n            next.children().each(function(c){\r\n                var comnet = c.connectable().component();\r\n                comnet && (comnet.dirty(true));\r\n            });\r\n\r\n            this.relocateLinks(dx1, dy1, lane);\r\n            this.relocateLinks(dx2, dy2, next);\r\n        }\r\n    };\r\n\r\n    Pool.prototype.refreshChildren = function() {\r\n        var children = this.populateChildren();\r\n\r\n        children.each(function(lane){\r\n            lane.component('child').dirty(true);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Populate lanes children\r\n     */\r\n    Pool.prototype.populateContents = function(lane) {\r\n        var contents;\r\n        if (lane !== undefined) {\r\n            contents = new Graph.collection.Shape(lane.children().toArray());\r\n        } else {\r\n            contents = this.cached.contents;\r\n            if ( ! contents) {\r\n                contents = [];\r\n                _.forEach(this.lanes.toArray(), function(node){\r\n                    var lane = Graph.registry.shape.get(node.lane);\r\n                    if (lane) {\r\n                        contents = _.concat(contents, lane.children().toArray());\r\n                    }\r\n                });\r\n\r\n                contents = new Graph.collection.Shape(contents);\r\n                this.cached.contents = contents;\r\n            }    \r\n        }\r\n\r\n        return contents;\r\n    };\r\n\r\n    Pool.prototype.refreshContents = function() {\r\n        var contents = this.populateContents();\r\n\r\n        contents.each(function(shape){\r\n            var connectableBlock = shape.connectable().component();\r\n            if (connectableBlock) {\r\n                connectableBlock.dirty(true);\r\n            }\r\n        });\r\n    };\r\n\r\n    Pool.prototype.populateLinks = function(lane) {\r\n        var me = this, \r\n            contents = me.populateContents(lane),\r\n            contentKeys = contents.keys(),\r\n            result = {\r\n                isolated: {},\r\n                separated: {}\r\n            };\r\n\r\n        contents.each(function(shape){\r\n            var network = shape.connectable().plugin(),\r\n                connections = (network && network.connections()) || [];\r\n\r\n            var pairVector, pairShape;\r\n\r\n            _.forEach(connections, function(conn){\r\n                pairVector = Graph.registry.vector.get((conn.type == 'incoming' ? conn.source : conn.target));\r\n                if (pairVector) {\r\n                    pairShape = Graph.registry.shape.get(pairVector);\r\n                    if (pairShape) {\r\n                        if (_.indexOf(contentKeys, pairShape.guid()) > -1) {\r\n                            if ( ! result.isolated[conn.guid]) {\r\n                                result.isolated[conn.guid] = conn;\r\n                            }\r\n                        } else {\r\n                            if ( ! result.separated[conn.guid]) {\r\n                                result.separated[conn.guid] = conn;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n    Pool.prototype.relocateLinks = function(dx, dy, lane) {\r\n        var links = this.populateLinks(lane);\r\n        var key, conn, router;\r\n        \r\n        for (key in links.isolated) {\r\n            conn = links.isolated[key];\r\n            conn.link.invalidate('convex');\r\n            conn.link.relocate(dx, dy);\r\n        }\r\n        \r\n        for (key in links.separated) {\r\n            conn = links.separated[key];\r\n            conn.link.invalidate('convex');\r\n            \r\n            if (conn.type == 'incoming') {\r\n                conn.link.relocateHead(dx, dy);\r\n            } else {\r\n                conn.link.invalidate('convex');\r\n                conn.link.relocateTail(dx, dy);\r\n            }\r\n        }\r\n        \r\n        links = null;\r\n    };\r\n\r\n\r\n    Pool.prototype.size = function() {\r\n        return this.lanes.size();\r\n    };\r\n\r\n    Pool.prototype.insert = function(lane) {\r\n        var guid = lane.guid();\r\n        var node, index;\r\n\r\n        node = {\r\n            lane: guid,\r\n            bbox: lane.bbox().toJson()\r\n        };\r\n\r\n        index = this.lanes.insert(node);\r\n\r\n        if (index !== undefined) {\r\n            this.cached.nodes[guid] = node;\r\n            lane.component().elem.attr('data-pool', this.guid);\r\n        }\r\n\r\n        node = null;\r\n        return index;\r\n    };\r\n\r\n    Pool.prototype.remove = function(lane) {\r\n        var guid = lane.guid(),\r\n            node = this.cached.nodes[guid];\r\n\r\n        var index = this.lanes.remove(node);\r\n        \r\n        if (index !== undefined) {\r\n            // shrink pool (direction: up)\r\n            var prev = this.lanes.get(index - 1),\r\n                next = this.lanes.get(index),\r\n                me = this;\r\n            \r\n            if (next) {\r\n                var dx = 0,\r\n                    dy = -node.bbox.height;\r\n\r\n                this.lanes.cascade(next, function(node){\r\n                    var lane = Graph.registry.shape.get(node.lane);\r\n                    if (lane) {\r\n                        lane.translate(dx, dy);\r\n                        node.bbox = lane.bbox().toJson();\r\n\r\n                        lane.children().each(function(c){\r\n                            var comnet = c.connectable().component();\r\n                            comnet && (comnet.dirty(true));\r\n                        });\r\n\r\n                        me.relocateLinks(dx, dy, lane);\r\n                    }\r\n                });\r\n\r\n                this.lanes.order();\r\n            }\r\n\r\n            delete this.cached.nodes[guid];\r\n        }\r\n\r\n        node = null;\r\n\r\n        return index;\r\n    };\r\n\r\n    Pool.prototype.index = function(lane) {\r\n        var guid = lane.guid(),\r\n            node = this.cached.nodes[guid];\r\n\r\n        var index = this.lanes.index(node);\r\n\r\n        node = null;\r\n\r\n        return index;\r\n    };\r\n\r\n    ///////// STATIC /////////\r\n\r\n    Pool.guid = 0;\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    Graph.shape.common.Label = Graph.extend(Graph.shape.Shape, {\r\n        props: {\r\n            label: 'untitled',\r\n            align: 'left',\r\n            fontSize: 16,\r\n            lineHeight: 1.1\r\n        },\r\n        metadata: {\r\n            type: 'common.label',\r\n            icon: 'ion-android-create'\r\n        },\r\n        initComponent: function() {\r\n            var pmgr = this.plugins.manager;\r\n            var shape, block, label;\r\n\r\n            shape = (new Graph.svg.Group(this.props.left, this.props.top))\r\n                .selectable(false);\r\n\r\n            block = (new Graph.svg.Rect(0, 0, 0, 0, 0))\r\n                .data('text', this.props.label)\r\n                .render(shape);\r\n\r\n            block.style({\r\n                fill: 'rgba(255,255,255,0)',\r\n                'stroke-width': 0\r\n            });\r\n\r\n            block.elem.data(Graph.string.ID_SHAPE, this.guid());\r\n\r\n            pmgr.install('dragger', block, {cls: Graph.styles.SHAPE_DRAG});\r\n            pmgr.install('editor',  block, {width: 300, height: 75, align: 'left', offset: 'pointer'});\r\n\r\n            block.on('edit.shape', _.bind(this.onLabelEdit, this));\r\n            block.on('afterdrag.shape', _.bind(this.onAfterDrag, this));\r\n            block.on('select.shape', _.bind(this.onSelect, this));\r\n            block.on('deselect.shape', _.bind(this.onDeselect, this));\r\n            block.on('beforedestroy.shape',    _.bind(this.onBeforeDestroy, this));\r\n            block.on('afterdestroy.shape',    _.bind(this.onAfterDestroy, this));\r\n\r\n            label = (new Graph.svg.Text(0, (this.props.lineHeight * this.props.fontSize) , this.props.label))\r\n                .attr('font-size', this.props.fontSize)\r\n                .attr('text-anchor', this.props.align)\r\n                .clickable(false)\r\n                .selectable(false)\r\n                .render(shape);\r\n\r\n            label.on('render.shape', _.bind(this.onLabelRender, this));\r\n\r\n            _.assign(this.components, {\r\n                shape: shape.guid(),\r\n                block: block.guid(),\r\n                label: label.guid()\r\n            });\r\n        },\r\n\r\n        initMetadata: function() {\r\n            this.metadata.tools = [\r\n                {\r\n                    name: 'sendtofront',\r\n                    icon: Graph.icons.SEND_TO_FRONT,\r\n                    title: Graph._('Send to front'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onFrontToolClick, this)\r\n                },\r\n                {\r\n                    name: 'sendtoback',\r\n                    icon: Graph.icons.SEND_TO_BACK,\r\n                    title: Graph._('Send to back'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onBackToolClick, this)\r\n                },\r\n                {\r\n                    name: 'trash',\r\n                    icon: Graph.icons.TRASH,\r\n                    title: Graph._('Click to remove shape'),\r\n                    enabled: true,\r\n                    handler: _.bind(this.onTrashToolClick, this)\r\n                }\r\n            ];\r\n        },\r\n\r\n        refresh: _.debounce(function() {\r\n            if (this.layout.suspended) {\r\n                return;\r\n            }\r\n\r\n            var label = this.component('label'),\r\n                block = this.component('block');\r\n\r\n            label.write(this.props.label);\r\n            label.dirty(true);\r\n            \r\n            var labelBox = label.bbox().toJson();\r\n\r\n            block.attr({\r\n                width: labelBox.width\r\n            });\r\n\r\n            block.dirty(true);\r\n            \r\n        }, 1),\r\n\r\n        toString: function() {\r\n            return 'Graph.shape.common.Label';\r\n        },\r\n\r\n        onLabelRender: function() {\r\n\r\n            var label = this.component('label'),\r\n                block = this.component('block'),\r\n                labelBox = label.bbox().toJson();\r\n\r\n            block.attr({\r\n                width: labelBox.width,\r\n                height: labelBox.height\r\n            });\r\n        },\r\n\r\n        onLabelEdit: function(e) {\r\n            var text = e.text;\r\n\r\n            if (text) {\r\n                this.component('label').props.text = text;\r\n                this.props.label = text;\r\n                this.refresh();    \r\n            } else {\r\n                this.remove();\r\n            }\r\n        },\r\n\r\n        onAfterDrag: function(e) {\r\n            var blockComponent = this.component('block'),\r\n                shapeComponent = this.component('shape'),\r\n                blockMatrix = blockComponent.matrix();\r\n\r\n            var shapeMatrix;\r\n\r\n            blockComponent.reset();\r\n\r\n            shapeComponent.matrix().multiply(blockMatrix);\r\n            shapeComponent.attr('transform', shapeComponent.matrix().toValue());\r\n            shapeComponent.dirty(true);\r\n\r\n            shapeMatrix = shapeComponent.matrix();\r\n\r\n            this.data({\r\n                left: shapeMatrix.props.e,\r\n                top: shapeMatrix.props.f\r\n            });\r\n\r\n            this.fire(e);\r\n        },\r\n\r\n        onSelect: function(e) {\r\n            this.component().addClass('label-selected');\r\n            if (e.initial) {\r\n                Graph.topic.publish('shape:select', {shape: this});\r\n            }\r\n        },\r\n\r\n        onDeselect: function(e) {\r\n            this.component().removeClass('label-selected');\r\n            if (e.initial) {\r\n                Graph.topic.publish('shape:deselect', {shape: this});\r\n            }\r\n        }\r\n    });\r\n\r\n}());","\r\n(function(){\r\n    \r\n    var XMLDOC = '<?xml version=\"1.0\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\" [<!ENTITY nbsp \"&#160;\">]>';\r\n    \r\n    var Exporter = Graph.data.Exporter = function(vector, options){\r\n        \r\n        this.options = _.extend({}, Exporter.defaults, options || {});\r\n        this.element = vector.node();\r\n        \r\n        var bounds, width, height, scale;\r\n        \r\n        if (vector.isPaper()) {\r\n            bounds = vector.viewport().bbox().toJson();\r\n            height = Math.max((bounds.y + bounds.height + 100), vector.elem.height());\r\n            width  = Math.max((bounds.x + bounds.width), vector.elem.width());\r\n            scale  = vector.layout().scale();\r\n        } else {\r\n            bounds = vector.bbox().toJson();\r\n            width  = bounds.width;\r\n            height = bounds.height;\r\n            scale  = vector.matrixCurrent().scale();\r\n        }\r\n        \r\n        _.assign(this.options, {\r\n            width: width,\r\n            height: height,\r\n            scaleX: scale.x,\r\n            scaleY: scale.y\r\n        });\r\n    };\r\n    \r\n    Exporter.defaults = {\r\n        width: 0,\r\n        height: 0,\r\n        \r\n        scaleX: 1,\r\n        scaleY: 1\r\n    };\r\n\r\n    Exporter.prototype.exportDataURI = function() {\r\n        \r\n    };\r\n    \r\n    Exporter.prototype.exportSVG = function(filename, compression) {\r\n        var options = _.extend({}, this.options);\r\n        \r\n        options.encoder = 'application/svg+xml';\r\n        options.compression = 1;\r\n        options.background = '#ffffff';\r\n\r\n        var uri = createDataURI(this.element, options);\r\n        var link = document.createElement('a');\r\n        var click;\r\n\r\n        link.setAttribute('download', filename);\r\n        link.setAttribute('href', uri);\r\n\r\n        if (document.createEvent) {\r\n            click = document.createEvent('MouseEvents');\r\n            click.initEvent('click', true, false);\r\n            link.dispatchEvent(click);\r\n        } else if (document.createEventObject) {\r\n            link.fireEvent('onclick');\r\n        }\r\n\r\n        link = click = null;\r\n    };\r\n\r\n    Exporter.prototype.exportJPEG = function(filename, compression) {\r\n        var options = _.extend({}, this.options);\r\n        \r\n        options.encoder = 'image/jpeg';\r\n        options.compression = compression || 1;\r\n        options.background = '#ffffff';\r\n        \r\n        filename = _.defaultTo(filename, 'download.jpg');\r\n        \r\n        exportImage(this.element, options, function(result){\r\n            if (result) {\r\n                download(filename, result);\r\n            }\r\n        });\r\n    };\r\n\r\n    Exporter.prototype.exportPNG = function(filename, compression) {\r\n        var options = _.extend({}, this.options);\r\n        \r\n        filename = _.defaultTo(filename, 'download.png');\r\n        \r\n        options.encoder = 'image/png';\r\n        options.compression = compression || 0.8;\r\n        \r\n        exportImage(this.element, options, function(result){\r\n            if (result) {\r\n                download(filename, result);\r\n            }\r\n        });\r\n    };\r\n\r\n    Exporter.prototype.exportFile = function(callback) {\r\n        var options = _.extend({}, this.options);\r\n        \r\n        options.encoder = 'image/jpeg';\r\n        options.compression = 1;\r\n        options.background = '#ffffff';\r\n\r\n        exportImage(this.element, options, function(result){\r\n            if (result) {\r\n                var blob = createBlob(result);\r\n                callback && callback(blob);\r\n            } else {\r\n                callback && callback(false);\r\n            }\r\n        });\r\n    };\r\n\r\n    Exporter.prototype.exportBlob = function(callback) {\r\n        var options = _.extend({}, this.options);\r\n        \r\n        options.encoder = 'image/jpeg';\r\n        options.compression = 1;\r\n        options.background = '#ffffff';\r\n\r\n        exportImage(this.element, options, function(result){\r\n            if (result) {\r\n                var blob = createBlob(result);\r\n                callback && callback(blob);\r\n            } else {\r\n                callback && callback(false);\r\n            }\r\n        });\r\n    };\r\n\r\n    ///////// HELPERS /////////\r\n    \r\n    function repair(data) {\r\n        var encoded = encodeURIComponent(data);\r\n        \r\n        encoded = encoded.replace(/%([0-9A-F]{2})/g, function(match, p1) {\r\n            var c = String.fromCharCode('0x'+p1);\r\n            return c === '%' ? '%25' : c;\r\n        });\r\n        \r\n        return decodeURIComponent(encoded);\r\n    }\r\n    \r\n    function download(name, uri) {\r\n        if (navigator.msSaveOrOpenBlob) {\r\n            var blob = createBlob(uri);\r\n            navigator.msSaveOrOpenBlob(blob, name);\r\n            blob = null;\r\n        } else {\r\n            var link = Graph.dom('<a/>');\r\n            \r\n            if ('download' in link) {\r\n                link.download = name;\r\n                link.href = uri;\r\n                link.style.display = 'none';\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                document.body.removeChild(link);\r\n            } else {\r\n                window.open(uri, '_download', 'menubar=no,toolbar=no,status=no');\r\n            }\r\n            \r\n            link = null;\r\n        }\r\n    }\r\n    \r\n    function createBlob(uri) {\r\n        var byteString = window.atob(uri.split(',')[1]),\r\n            mimeString = uri.split(',')[0].split(':')[1].split(';')[0],\r\n            buffer = new ArrayBuffer(byteString.length),\r\n            intArray = new Uint8Array(buffer);\r\n        \r\n        for (var i = 0, ii = byteString.length; i < ii; i++) {\r\n            intArray[i] = byteString.charCodeAt(i);\r\n        }\r\n        \r\n        return new Blob([buffer], {type: mimeString});\r\n    }\r\n    \r\n    function exportImage(element, options, callback) {\r\n        var data = createDataURI(element, options),\r\n            image = new Image();\r\n        \r\n        image.onload = function() {\r\n            var canvas, context, result;\r\n            \r\n            canvas = document.createElement('canvas');\r\n            canvas.width  = image.width;\r\n            canvas.height = image.height;\r\n            \r\n            context = canvas.getContext('2d');\r\n\r\n            if (options.background) {\r\n                context.fillStyle = options.background;\r\n                context.fillRect(0, 0, canvas.width, canvas.height);\r\n            }\r\n\r\n            context.drawImage(image, 0, 0);\r\n            \r\n            try {\r\n                result = canvas.toDataURL(options.encoder, options.compression);\r\n            } catch(e) {\r\n                result = false;\r\n            }\r\n            \r\n            canvas = context = null;\r\n            callback(result);\r\n        };\r\n        \r\n        image.onerror = function() {\r\n            callback(false);\r\n        };\r\n        \r\n        image.src = data; // DOMURL.createObjectURL(blob);\r\n    }\r\n\r\n    function createData(element, options) {\r\n        var holder = Graph.dom('<div/>'),\r\n            cloned = element.cloneNode(true);\r\n        \r\n        var css, sty, svg, xml, uri;\r\n            \r\n        if (cloned.tagName == 'svg') {\r\n            cloned.setAttribute('width',  options.width);\r\n            cloned.setAttribute('height', options.height);\r\n        } else {\r\n            svg = Graph.dom('<svg/>');\r\n            \r\n            svg.setAttribute('xmlns', Graph.config.xmlns.svg);\r\n            svg.setAttribute('xmlns:xlink', Graph.config.xmlns.xlink);\r\n            svg.setAttribute('version', Graph.config.svg.version);\r\n            svg.setAttribute('width',  options.width);\r\n            svg.setAttribute('height', options.height);\r\n            \r\n            svg.appendChild(cloned);\r\n            cloned = svg;\r\n        }\r\n        \r\n        holder.appendChild(cloned);\r\n        \r\n        css = getElementStyles(element);\r\n        sty = Graph.dom('<style/>');\r\n        sty.setAttribute('type', 'text/css');\r\n        sty.innerHTML = \"<![CDATA[\\n\" + css + \"\\n]]>\";\r\n        \r\n        var first = cloned.childNodes[0];\r\n        \r\n        if (first) {\r\n            cloned.insertBefore(sty, first);\r\n        } else {\r\n            cloned.appendChild(sty);\r\n        }\r\n        \r\n        xml = XMLDOC + holder.innerHTML;\r\n        holder = cloned = null;\r\n        return xml;\r\n    }\r\n    \r\n    function createDataURI(element, options) {\r\n        var xml = createData(element, options),\r\n            uri = 'data:image/svg+xml;base64,' + window.btoa(repair(xml));\r\n\r\n        return uri;\r\n    }\r\n    \r\n    function getElementStyles(element) {\r\n        var styles = document.styleSheets,\r\n            result = '';\r\n            \r\n        var rules, rule, found;\r\n        \r\n        for (var i = 0, ii = styles.length; i < ii; i++) {\r\n            \r\n            rules = styles[i].cssRules;\r\n            \r\n            if (rules != null) {\r\n                \r\n                for (var j = 0, jj = rules.length; j < jj; j++, found = null) {\r\n                    \r\n                    rule = rules[j];\r\n                    \r\n                    if (rule.style !== undefined) {\r\n                        if (rule.selectorText) {\r\n\r\n                            // BUG: https://github.com/exupero/saveSvgAsPng/issues/11\r\n                            \r\n                            try {\r\n                                found = element.querySelector(rule.selectorText);\r\n\r\n                                if (found) {\r\n                                    result += rule.selectorText + \" { \" + rule.style.cssText + \" }\\n\";\r\n                                } else if(rule.cssText.match(/^@font-face/)) {\r\n                                    result += rule.cssText + '\\n';\r\n                                }\r\n                            } catch(e) {\r\n                                // console.log(e);\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n}());","\r\n(function(){\r\n    var Parser = Graph.diagram.Parser = function(data) {\r\n        data = data || {};\r\n\r\n        this._props  = data.props || {};\r\n        this._shapes = data.shapes || [];\r\n        this._links  = data.links || [];\r\n        this._tree   = {};\r\n\r\n        this.parse();\r\n    };\r\n\r\n    Parser.prototype.constructor = Parser;\r\n\r\n    Parser.prototype.parse = function() {\r\n        var shapes = this._shapes,\r\n            tree = {},\r\n            nodes = {},\r\n            total = shapes.length;\r\n\r\n        _.forEach(shapes, function(shape, idx){\r\n            nodes[shape.props.id] = {\r\n                id: shape.props.id,\r\n                parent_id: shape.props.parent_id,\r\n                index: idx,\r\n                total: total\r\n            };\r\n        });\r\n\r\n        var key, node;\r\n\r\n        for (key in nodes) {\r\n            node = nodes[key];\r\n            if ( ! node.parent_id) {\r\n                tree[key] = node;\r\n            } else {\r\n                if (nodes[node.parent_id].children === undefined) {\r\n                    nodes[node.parent_id].children = {};\r\n                }\r\n                nodes[node.parent_id].children[node.id] = node;\r\n            }\r\n        }\r\n\r\n        this._tree = tree;\r\n    };\r\n\r\n    Parser.prototype.shapes = function() {\r\n        var shapes = this._shapes,\r\n            tree = this._tree;\r\n\r\n        return {\r\n            total: shapes.length,\r\n            each: function(callback) {\r\n                traverse(tree, shapes, callback);\r\n            }\r\n        };\r\n    };\r\n\r\n    Parser.prototype.links = function() {\r\n        var links = this._links;\r\n        return {\r\n            total: links.length,\r\n            each: function(callback) {\r\n                _.forEach(links, callback);\r\n            }\r\n        }\r\n    };\r\n\r\n    Parser.prototype.props = function() {\r\n        var props = this._props;\r\n        return {\r\n            each: function(callback) {\r\n                _.forOwn(props, callback);\r\n            }\r\n        }\r\n    };\r\n\r\n    Parser.prototype.destroy = function() {\r\n        this._shapes = null;\r\n        this._links = null;\r\n        this._tree = null;\r\n        this._props = null;\r\n    };\r\n\r\n    function traverse(nodes, shapes, callback) {\r\n        var key, node;\r\n        for (key in nodes) {\r\n            node = nodes[key];\r\n            callback(shapes[node.index], node.index, node.total);\r\n            if (node.children !== undefined) {\r\n                traverse(node.children, shapes, callback);\r\n            }\r\n        }\r\n    }\r\n\r\n}());\r\n","\r\n(function(){\r\n\r\n    var Pallet = Graph.diagram.pallet.Activity = Graph.extend({\r\n        \r\n        props: {\r\n            guid: null,\r\n            rendered: false\r\n        },\r\n        \r\n        components: {\r\n            pallet: null\r\n        },\r\n        \r\n        cached: {\r\n            \r\n        },\r\n\r\n        picking: {\r\n            enabled: false,\r\n            target: null,\r\n            matrix: null,\r\n            shape: null,\r\n            begin: false,\r\n            start: null\r\n        },\r\n        \r\n        constructor: function(options) {\r\n            _.assign(this.props, options || {});\r\n            this.props.guid = 'pallet-' + (++Pallet);\r\n            this.initComponent();\r\n\r\n            Graph.registry.pallet.register(this);\r\n        },\r\n\r\n        guid: function() {\r\n            return this.props.guid;\r\n        },\r\n\r\n        initComponent: function() {\r\n            var template, pallet;\r\n            \r\n            template = _.format(\r\n                '<svg class=\"graph-pallet\" xmlns=\"{0}\" xmlns:xlink=\"{1}\" version=\"{2}\" style=\"width: 100%; height: 100%\">' + \r\n                    '<defs>' + \r\n                        '<marker id=\"marker-arrow-pallet\" refX=\"11\" refY=\"10\" viewBox=\"0 0 20 20\" markerWidth=\"10\" markerHeight=\"10\" orient=\"auto\">' + \r\n                            '<path d=\"M 1 5 L 11 10 L 1 15 Z\" fill=\"#30D0C6\" stroke-linecap=\"round\" stroke-dasharray=\"10000, 1\"/>' + \r\n                        '</marker>' + \r\n                    '</defs>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"Graph.shape.activity.Start\" transform=\"matrix(1,0,0,1,40,0)\">' + \r\n                        '<circle cx=\"32\" cy=\"32\" r=\"30\"/>' +\r\n                        '<text x=\"32\" y=\"36\">Start</text>' + \r\n                    '</g>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"Graph.shape.activity.Final\" transform=\"matrix(1,0,0,1,40,80)\">' + \r\n                        '<circle cx=\"32\" cy=\"32\" r=\"30\"/>' + \r\n                        '<circle cx=\"32\" cy=\"32\" r=\"24\" class=\"full\"/>' + \r\n                        '<text x=\"32\" y=\"36\">End</text>' + \r\n                    '</g>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"Graph.shape.activity.Action\" transform=\"matrix(1,0,0,1,40,160)\">' + \r\n                        '<rect x=\"2\" y=\"2\" width=\"60\" height=\"60\" rx=\"7\" ry=\"7\"/>' + \r\n                        '<text x=\"32\" y=\"34\">Action</text>' + \r\n                    '</g>' + \r\n                    /*'<g class=\"graph-pallet-item\" data-shape=\"Graph.shape.activity.Router\" transform=\"matrix(1,0,0,1,40,250)\">' + \r\n                        '<rect x=\"4\" y=\"4\" width=\"54\" height=\"54\" transform=\"rotate(45,32,32)\"/>' + \r\n                        '<text x=\"30\" y=\"34\">Route</text>' + \r\n                    '</g>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"Graph.shape.activity.Join\" transform=\"matrix(1,0,0,1,40,340)\">' + \r\n                        '<rect x=\"2\" width=\"60\" height=\"58\" rx=\"0\" ry=\"0\" style=\"fill: rgba(255,255,255,0); stroke-width: 0\" />' + \r\n                        '<rect x=\"2\" y=\"28\" width=\"60\" height=\"6\" rx=\"0\" ry=\"0\" pointer-events=\"none\" class=\"full\"/>' + \r\n                        '<path d=\"M 10  0 L 10 28\" pointer-events=\"none\" ></path>' + \r\n                        '<path d=\"M 54  0 L 54 28\" pointer-events=\"none\" ></path>' + \r\n                        '<path d=\"M 32 34 L 32 60\" marker-end=\"url(#marker-arrow-pallet)\" pointer-events=\"none\" ></path>' + \r\n                        '<text x=\"32\" y=\"20\">Join</text>' + \r\n                    '</g>' + \r\n                    '<g class=\"graph-pallet-item\" data-shape=\"Graph.shape.activity.Fork\" transform=\"matrix(1,0,0,1,40,420)\">' + \r\n                        '<rect x=\"2\" width=\"60\" height=\"58\" rx=\"0\" ry=\"0\" pointer-events=\"none\" style=\"fill: rgba(255,255,255,0); stroke-width: 0\" />' + \r\n                        '<rect x=\"2\" y=\"28\" width=\"60\" height=\"6\" rx=\"0\" ry=\"0\" class=\"full\"/>' + \r\n                        '<path d=\"M 10 34 L 10 60\" marker-end=\"url(#marker-arrow-pallet)\" pointer-events=\"none\" ></path>' + \r\n                        '<path d=\"M 54 34 L 54 60\" marker-end=\"url(#marker-arrow-pallet)\" pointer-events=\"none\" ></path>' + \r\n                        '<path d=\"M 32  0 L 32 28\" pointer-events=\"none\" ></path>' + \r\n                        '<text x=\"32\" y=\"50\">Fork</text>' + \r\n                    '</g>' + */\r\n                    '<g class=\"graph-pallet-item\" data-shape=\"Graph.shape.activity.Lane\" transform=\"matrix(1,0,0,1,40,250)\">' + \r\n                        '<rect x=\"2\" y=\"2\" width=\"60\" height=\"60\" rx=\"0\" ry=\"0\"/>' + \r\n                        '<rect x=\"2\" y=\"2\" width=\"10\" height=\"60\" rx=\"0\" ry=\"0\"/>' + \r\n                        '<text x=\"32\" y=\"34\">Role</text>' + \r\n                    '</g>' + \r\n                '</svg>',\r\n                Graph.config.xmlns.svg,\r\n                Graph.config.xmlns.xlink,\r\n                Graph.config.svg.version\r\n            );\r\n            \r\n            pallet = Graph.$(template);\r\n            this.components.pallet = pallet;\r\n        },\r\n\r\n        stopPicking: function() {\r\n            if (this.picking.enabled) {\r\n                this.picking.target.remove();\r\n                _.assign(this.picking, {\r\n                    target: null,\r\n                    matrix: null,\r\n                    offset: null,\r\n                    enabled: false,\r\n                    shape: null,\r\n                    start: false\r\n                });\r\n            }\r\n        },\r\n\r\n        render: function(container) {\r\n            if (this.props.rendered) {\r\n                return;\r\n            }\r\n\r\n            var me = this, \r\n                pallet = this.components.pallet;\r\n\r\n            this.props.rendered = true;\r\n\r\n            container = Graph.$(container);\r\n            container.prepend(pallet);\r\n            container = null;\r\n\r\n            interact('.graph-pallet-item')\r\n                .on('down', function(e){\r\n                    dragStart(e);\r\n                })\r\n                .on('move', function(e){\r\n                    dragMove(e);\r\n                })\r\n                .on('up', function(e){\r\n                    dragStop(e);\r\n                });\r\n\r\n            /////////\r\n            \r\n            pallet.on('mouseleave', function(e){\r\n                dragStop(e);\r\n            });\r\n\r\n            function dragStart(e) {\r\n                var target = Graph.$(e.currentTarget);\r\n\r\n                if (me.picking.enabled) {\r\n                    dragStop(e);\r\n                }\r\n\r\n                if (target.data('shape') !== undefined) {\r\n                    var transform = Graph.util.transform2segments(target.attr('transform'));\r\n                    transform = transform[0].slice(1);\r\n\r\n                    me.picking.enabled = true;\r\n                    me.picking.matrix = Graph.factory(Graph.lang.Matrix, transform);\r\n                    me.picking.target = Graph.$(e.currentTarget.cloneNode(true));\r\n                    me.picking.target.addClass('grabbing');\r\n                    me.picking.shape = target.data('shape');\r\n\r\n                    pallet.append(me.picking.target);\r\n\r\n                    me.fire('pick', {\r\n                        shape: me.picking.shape,\r\n                        origin: {\r\n                            x: e.clientX,\r\n                            y: e.clientY\r\n                        }\r\n                    });\r\n\r\n                    transform = null;\r\n\r\n                }\r\n            }\r\n\r\n            function dragMove(e) {\r\n                var i = e.interaction;\r\n\r\n                if (i.pointerIsDown && me.picking.target) {\r\n                    e.preventDefault();\r\n                    \r\n                    var current = {\r\n                        x: e.clientX,\r\n                        y: e.clientY\r\n                    };\r\n\r\n                    if ( ! me.picking.offset) {\r\n                        me.picking.offset = current;\r\n                    }\r\n\r\n                    var dx = current.x - me.picking.offset.x,\r\n                        dy = current.y - me.picking.offset.y;\r\n\r\n                    me.picking.matrix.translate(dx, dy);\r\n                    me.picking.target.attr('transform', me.picking.matrix.toValue());\r\n\r\n                    me.fire('drag', {\r\n                        dx: dx,\r\n                        dy: dy\r\n                    }); \r\n\r\n                    me.picking.offset = current;\r\n                }\r\n            }\r\n\r\n            function dragStop(e) {\r\n                if (me.picking.enabled) {\r\n                    me.fire('drop', {\r\n                        clientX: e.clientX,\r\n                        clientY: e.clientY\r\n                    });\r\n                }\r\n                me.stopPicking();\r\n            }\r\n\r\n        },\r\n        \r\n        toString: function() {\r\n            return 'Graph.diagram.pallet.Activity';\r\n        }\r\n\r\n    });\r\n\r\n    Pallet.guid = 0;\r\n\r\n}());","\r\n(function(){\r\n\r\n    Graph.diagram.type.Diagram = Graph.extend({\r\n        props: {\r\n            id: null,\r\n            paper: null,\r\n            dirty: false\r\n        },\r\n\r\n        drawing: {\r\n            enabled: false\r\n        },\r\n\r\n        metadata: {\r\n            type: 'diagram.diagram'\r\n        },\r\n\r\n        constructor: function(paper, options) {\r\n            options = options || {};\r\n            _.assign(this.props, options);\r\n\r\n            this.props.paper = paper.guid();\r\n            this.empty();\r\n        },\r\n\r\n        /**\r\n         * update properties\r\n         */\r\n        update: function(data) {\r\n            var me = this,\r\n                parser = new Graph.diagram.Parser(data),\r\n                paper = me.paper();\r\n            \r\n            parser.props().each(function(v, k){\r\n                if (k != 'type') {\r\n                    me.props[k] = v;    \r\n                }\r\n            });\r\n\r\n            parser.shapes().each(function(item){\r\n                var shape;\r\n\r\n                if (item.props.id) {\r\n                    shape = me.getShapeBy(function(shape){ \r\n                        return shape.props.id == item.props.id; \r\n                    });\r\n                } else {\r\n                    shape = me.getShapeBy(function(shape){\r\n                        return shape.props.guid == item.props.client_id;\r\n                    });\r\n                }\r\n\r\n                if (shape) {\r\n                    shape.update(item);\r\n                }\r\n            });\r\n\r\n            parser.links().each(function(item){\r\n                var link;\r\n                if (item.props.id) {\r\n                    link = me.getLinkBy(function(link){\r\n                        return link.props.id == item.props.id;\r\n                    });\r\n                } else {\r\n                    link = me.getLinkBy(function(link){\r\n                        return link.props.guid == item.props.client_id;\r\n                    });\r\n                }\r\n\r\n                if (link) {\r\n                    // link.update(item);\r\n                }\r\n            });\r\n\r\n            parser.destroy();\r\n            parser = null;\r\n        },\r\n\r\n        commit: function() {\r\n            this.props.dirty = false;\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Render data and update properties\r\n         */\r\n        render: function(data) {\r\n\r\n        },\r\n\r\n        paper: function() {\r\n            return Graph.registry.vector.get(this.props.paper);\r\n        },\r\n\r\n        empty: function() {\r\n            var shapes = this.getShapes();\r\n            \r\n            this.paper().snapper().invalidate();\r\n\r\n            shapes.each(function(shape){\r\n                if ( ! shape.tree.parent) {\r\n                    shape.remove();\r\n                }\r\n            });\r\n\r\n            shapes = null;\r\n            return this;\r\n        },\r\n\r\n        getShapes: function() {\r\n            var context = this.paper().guid(),\r\n                shapes = Graph.registry.shape.collect(context);\r\n            return new Graph.collection.Shape(shapes);\r\n        },\r\n\r\n        getLinks: function() {\r\n            var shapes = this.getShapes().toArray(),  \r\n                indexes = {},\r\n                links = [];\r\n\r\n            var network, connections, i, ii, j, jj;\r\n\r\n            for(i = 0, ii = shapes.length; i < ii; i++) {\r\n                network = shapes[i].connectable().plugin();\r\n                if (network) {\r\n                    connections = network.connections();\r\n                    for (j = 0, jj = connections.length; j < jj; j++) {\r\n                        if (indexes[connections[j].guid] === undefined) {\r\n                            links.push(connections[j].link);\r\n                            indexes[connections[j].guid] = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            indexes = null;\r\n            return new Graph.collection.Link(links);\r\n        },\r\n        \r\n        drawShape: function(namespace, options) {\r\n\r\n        },\r\n\r\n        findShapeBy: function(identity) {\r\n            var shapes = this.getShapes().toArray();\r\n            return _.filter(shapes, identity);\r\n        },\r\n\r\n        getShapeBy: function(identity) {\r\n            var shapes = this.getShapes().toArray();\r\n            return _.find(shapes, identity);\r\n        },\r\n\r\n        getLinkBy: function(identity) {\r\n            var links = this.getLinks().toArray();\r\n            return _.find(links, identity);\r\n        },\r\n\r\n        remove: function() {\r\n            this.empty();\r\n            this.fire('afterdestroy');\r\n        },\r\n\r\n        toJson: function() {\r\n            var json = {};\r\n            return json;\r\n        }\r\n\r\n    });\r\n\r\n}());","(function(){\r\n\r\n    var Diagram = Graph.diagram.type.Activity = Graph.extend(Graph.diagram.type.Diagram, {\r\n\r\n        props: {\r\n            name: 'Activity Diagram',\r\n            description: 'No diagram description',\r\n            cover: null\r\n        },\r\n\r\n        rendering: {\r\n            active: false\r\n        },\r\n\r\n        metadata: {\r\n            type: 'diagram.activity'\r\n        },\r\n\r\n        drawShape: function(namespace, options) {\r\n            var paper = this.paper();\r\n\r\n            // already drawing\r\n            if (this.drawing.dragging) {\r\n                this.drawing.dragging = false;\r\n\r\n                this.drawing.shape.off('beforedrag', this.drawing.beforeDrag);\r\n                this.drawing.shape.off('aferdrag', this.drawing.afterDrag);\r\n\r\n                this.drawing.beforeDrag = null;\r\n                this.drawing.afterDrag = null;\r\n\r\n                // mark as invalid\r\n                this.drawing.shape.remove();\r\n                this.drawing.shape = null;\r\n            }\r\n\r\n            var clazz, shape, movable;\r\n\r\n            options = options || {};\r\n            movable = true;\r\n\r\n            if (namespace == 'Graph.shape.activity.Lane') {\r\n                var shapes = this.getShapes();\r\n                if (shapes.size() && ! this.hasLane()) {\r\n                    var bbox = shapes.bbox().toJson();\r\n                    \r\n                    options.left = bbox.x - 40;\r\n                    options.top = bbox.y - 20;\r\n\r\n                    movable = false;\r\n                    bbox = null;\r\n                }\r\n                shapes = null;\r\n            } else if (namespace == 'Graph.shape.common.Label') {\r\n                movable = false;\r\n            }\r\n\r\n            clazz = Graph.ns(namespace);\r\n            shape = Graph.factory(clazz, [options]);\r\n\r\n            // check again...\r\n            if (movable) {\r\n                movable = !!shape.draggable().plugin();\r\n            }\r\n\r\n            var me = this;\r\n\r\n            this.drawing.beforeDrag = function(e) {\r\n                shape.component().addClass('picking');\r\n            };\r\n\r\n            this.drawing.afterDrag = function() {\r\n                var timer;\r\n\r\n                timer = _.delay(function(shape){\r\n                    var valid = false;\r\n\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n\r\n                    if (shape.is('activity.lane')) {\r\n                        valid = true;\r\n                    } else {\r\n                        if (me.hasLane()) {\r\n                            var parent = shape.parent();\r\n                            valid = parent && parent.is('activity.lane');\r\n                        } else {\r\n                            valid = true;\r\n                        }\r\n                    }\r\n\r\n                    if ( ! valid) {\r\n                        Graph.message(\"Can't drop shape outside lane or pool\", 'warning');\r\n                        shape.remove();\r\n                        shape = null;\r\n                    }\r\n                }, 0, me.drawing.shape);\r\n\r\n                shape.component().removeClass('picking');\r\n\r\n                me.drawing.beforeDrag = null;\r\n                me.drawing.afterDrag = null;\r\n                me.drawing.dragging = false;\r\n                me.drawing.shape = null;\r\n\r\n            };\r\n\r\n            if (movable) {\r\n                this.drawing.dragging = true;\r\n                this.drawing.shape = shape;\r\n\r\n                shape.render(paper);\r\n\r\n                var draggable = shape.draggable().plugin(),\r\n                    snappcomp = shape.snappable().component();\r\n\r\n                draggable.start();\r\n\r\n                if (options.left !== undefined && options.top !== undefined) {\r\n                    var center = shape.center(),\r\n                        dx = options.left - center.x,\r\n                        dy = options.top - center.y;\r\n                    shape.translate(dx, dy);    \r\n\r\n                    if (snappcomp) {\r\n                        snappcomp.dirty(true);\r\n                    }\r\n                }\r\n\r\n                shape.one('beforedrag', this.drawing.beforeDrag);\r\n                shape.one('afterdrag', this.drawing.afterDrag);\r\n\r\n            } else {\r\n\r\n                me.drawing.dragging = false;\r\n                me.drawing.shape = null;\r\n                me.drawing.beforeDrag = null;\r\n                me.drawing.afterDrag = null;\r\n                \r\n                if (shape.is('activity.lane')) {\r\n                    var children = me.getShapes().toArray();\r\n\r\n                    shape.render(paper);\r\n                    shape.addChild(children);\r\n                    children = null;\r\n\r\n                } else if (shape.is('common.label')) {\r\n\r\n                    var lanes = me.findShapeBy(function(shape){ return shape.is('activity.lane'); }),\r\n                        coord = {x: shape.props.left, y: shape.props.top},\r\n                        found = false;\r\n\r\n                    shape.render(paper);\r\n\r\n                    /*if (lanes.length) {\r\n                        var box, i, j;\r\n\r\n                        for (i = 0, j = lanes.length; i < j; i++) {\r\n                            box = lanes[i].bbox().toJson();\r\n                            \r\n                            if (Graph.util.isBoxContainsPoint(box, coord)) {\r\n                                found = lanes[i];\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if (found) {\r\n                            found.addChild(shape);\r\n                        } else {\r\n                            Graph.message(\"Can't drop shape outside lane or pool\", 'warning');\r\n                            shape.remove();\r\n                            shape = null;\r\n                        }\r\n\r\n                    }*/\r\n                }\r\n            }\r\n\r\n            return {\r\n                movable: movable,\r\n                shape: shape\r\n            };\r\n        },\r\n\r\n        hasLane: function() {\r\n            return this.findShapeBy(function(shape){ return shape.is('activity.lane'); }).length !== 0;\r\n        },\r\n\r\n        render: function(data) {\r\n            var me = this,\r\n                paper = this.paper(),\r\n                parser = new Graph.diagram.Parser(data);\r\n\r\n            if (this.rendering.active) {\r\n                return;\r\n            }\r\n\r\n            this.rendering.active = true;\r\n            this.empty();\r\n\r\n            parser.props().each(function(v, k){\r\n                me.props[k] = v;\r\n            });\r\n\r\n            render(parser).then(function(rendered){\r\n                parser.links().each(function(item){\r\n                    var props = item.props,\r\n                        params = JSON.parse(item.params),\r\n                        sourceShape = rendered[props.source_id],\r\n                        targetShape = rendered[props.target_id];\r\n\r\n                    if (sourceShape && targetShape) {\r\n                        var sourceNetwork = sourceShape.connectable().plugin(),\r\n                            targetNetwork = targetShape.connectable().plugin();\r\n\r\n                        if (sourceNetwork && targetNetwork) {\r\n                            var link = sourceNetwork.connect(targetNetwork, null, null, item.props);\r\n                            link.params = params;\r\n                        }\r\n                    }\r\n                })\r\n                \r\n                me.rendering.active = false;\r\n\r\n                parser.destroy();\r\n                parser = null;\r\n\r\n                me.paper().snapper().refresh();\r\n            }); \r\n\r\n            ///////// RENDERER /////////\r\n            \r\n            function render(parser) {\r\n                var def = Graph.defer(),\r\n                    rendered = {},\r\n                    pools = {},\r\n                    count = 0,\r\n                    tick = 0;\r\n\r\n                parser.shapes().each(function(item, index, total){\r\n                    var props = item.props,\r\n                        params = JSON.parse(item.params),\r\n                        clazz = Graph.ns(props.type);\r\n\r\n                    var shape, delay;\r\n\r\n                    delay = _.delay(function(clazz, props, params){\r\n                        clearTimeout(delay);\r\n                        delay = null;\r\n\r\n                        shape = Graph.factory(clazz, [props]);\r\n                        shape.params = params;\r\n                        shape.render(paper);\r\n\r\n                        if (props.client_pool) {\r\n                            if (pools[props.client_pool] === undefined) {\r\n                                pools[props.client_pool] = [];\r\n                            }\r\n                            pools[props.client_pool].push(shape);\r\n                        }\r\n\r\n                        if (rendered[props.parent_id] !== undefined) {\r\n                            rendered[props.parent_id].addChild(shape, false);\r\n                            \r\n                            var netcom = shape.connectable().component();\r\n\r\n                            if (netcom) {\r\n                                netcom.dirty(true);\r\n                            }\r\n                        }\r\n\r\n                        rendered[props.id] = shape;\r\n                        count++;\r\n                        \r\n                        if (count === total) {\r\n                            \r\n                            var lanes, key, pool;\r\n\r\n                            for (key in pools) {\r\n                                lanes = pools[key];\r\n                                pool  = null;\r\n\r\n                                if (lanes.length > 1) {\r\n                                    _.forEach(lanes, function(lane, idx){\r\n                                        if ( ! pool) {\r\n                                            pool = lane.pool();\r\n                                        } else {\r\n                                            lane.tree.pool = pool;\r\n                                            pool.insert(lane);\r\n                                        }\r\n                                    });\r\n                                }\r\n\r\n                                if (pool) {\r\n                                    pool.invalidate();\r\n                                }\r\n                            }\r\n\r\n                            def.resolve(rendered);\r\n                        }\r\n\r\n                    }, (tick * 100), clazz, props, params);\r\n\r\n                    tick++;\r\n                });\r\n\r\n                return def.promise();\r\n            };  \r\n        },  \r\n\r\n        toString: function() {\r\n            return 'Graph.diagram.type.Activity';\r\n        },\r\n\r\n        toJson: function() {\r\n            var diagram = {\r\n                props: {\r\n                    id: this.props.id,\r\n                    name: this.props.name,\r\n                    type: this.toString(),\r\n                    description: this.props.description,\r\n                    cover: this.props.cover\r\n                },\r\n                shapes: [],\r\n                links: []\r\n            };\r\n\r\n            var shapes = this.getShapes(),\r\n                links = this.getLinks();\r\n\r\n            shapes.each(function(shape){\r\n                var data = shape.toJson();\r\n                diagram.shapes.push({\r\n                    props: data.props,\r\n                    params: data.params\r\n                });\r\n            });\r\n\r\n            links.each(function(link){\r\n                var data = link.toJson();\r\n                diagram.links.push({\r\n                    props: data.props,\r\n                    params: data.params\r\n                });\r\n            });\r\n\r\n            shapes = links = null;\r\n            return diagram;\r\n        }\r\n    });\r\n    \r\n}());\r\n\r\n","\r\n(function(){\r\n\r\n    Graph.popup.Dialog = Graph.extend({\r\n\r\n        props: {\r\n            opened: false\r\n        },\r\n\r\n        components: {\r\n            element: null,\r\n            backdrop: null\r\n        },\r\n\r\n        handlers: {\r\n            backdrop_click: null\r\n        },\r\n\r\n        constructor: function(element, options) {\r\n            var me = this, \r\n                comp = me.components,\r\n                handlers = me.handlers;\r\n\r\n            comp.element = Graph.$(element);\r\n\r\n            if (options.buttons) {\r\n                _.forEach(options.buttons, function(button, index){\r\n                    var element = Graph.$(button.element, comp.element);\r\n                    if (element.length()) {\r\n                        var name = 'button' + index,\r\n                            func = name + '_click';\r\n\r\n                        comp[name] = element;\r\n\r\n                        if (_.isFunction(button.onclick)) {\r\n                            handlers[func] = _.bind(function(e){\r\n                                button.onclick.call(me, e);\r\n                            }, me);\r\n                            element.on('click', handlers[func]);\r\n                        }\r\n                        name = func = null;\r\n                    }\r\n                    element = null;\r\n                });\r\n            }\r\n        },\r\n\r\n        element: function() {\r\n            return this.components.element;\r\n        },\r\n\r\n        open: function() {\r\n            if (this.props.opened) {\r\n                return;\r\n            }\r\n\r\n            this.element().addClass('open');\r\n            this.props.opened = true;\r\n\r\n            this.center();\r\n            this.backdrop();\r\n        },\r\n\r\n        close: function() {\r\n            var me = this,\r\n                comp = this.components,\r\n                handlers = this.handlers,\r\n                backdrop = comp.backdrop;\r\n\r\n            this.element().removeClass('open');\r\n            this.props.opened = false;\r\n\r\n            if (handlers.backdrop_click) {\r\n                backdrop.off('click', handlers.backdrop_click);\r\n                handlers.backdrop_click = null;\r\n\r\n                var backdropUser = +backdrop.data('user');\r\n\r\n                backdropUser--;\r\n\r\n                if (backdropUser <= 0) {\r\n                    backdropUser = 0;\r\n                    backdrop.detach();\r\n                }\r\n\r\n                backdrop.data('user', backdropUser);\r\n            }\r\n\r\n            _.forOwn(handlers, function(handler, name){\r\n                var tmp = _.split(name, '_'),\r\n                    key = tmp[0],\r\n                    evt = tmp[1];\r\n\r\n                if (handler && comp[key] && evt) {\r\n                    comp[key].off(evt, handler);\r\n                    handlers[name] = null;\r\n                }\r\n                \r\n                tmp = key = evt = null;\r\n            });\r\n\r\n            this.fire('close');\r\n        },\r\n\r\n        center: _.debounce(function() {\r\n            var element = this.element(),\r\n                width = element.width(),\r\n                height = element.height();\r\n\r\n            element.css({\r\n                'top': '50%',\r\n                'left': '50%',\r\n                'margin-top': -height / 2,\r\n                'margin-left': -width / 2\r\n            });\r\n        }, 0),\r\n\r\n        backdrop: function() {\r\n            var me = this,\r\n                backdrop = Graph.$('.graph-dialog-backdrop');\r\n\r\n            if ( ! backdrop.length()) {\r\n                backdrop = Graph.$('<div class=\"graph-dialog-backdrop\"/>');\r\n                backdrop.data('user', 0);\r\n                backdrop.on('click', function(e){\r\n                    e.stopPropagation();\r\n                });\r\n            }\r\n\r\n            me.handlers.backdrop_click = function() {\r\n                me.close();\r\n            };\r\n\r\n            backdrop.on('click', me.handlers.backdrop_click);\r\n\r\n            var backdropUser = +backdrop.data('user');\r\n\r\n            backdropUser++;\r\n            backdrop.data('user', backdropUser);\r\n\r\n            me.components.element.before(backdrop);\r\n            me.components.backdrop = backdrop;\r\n        },\r\n\r\n        toString: function() {\r\n            return 'Graph.popup.Dialog';\r\n        },\r\n\r\n        destroy: function() {\r\n            this.components.element = null;\r\n        }\r\n\r\n    });\r\n\r\n    ///////// STATICS /////////\r\n\r\n    ///////// SHORTCUT /////////\r\n    \r\n    Graph.dialog = function(element, options){\r\n        return new Graph.popup.Dialog(element, options);\r\n    };\r\n\r\n}());"],"sourceRoot":"/source/"}